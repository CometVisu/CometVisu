{"version":3,"sources":["../../../source/class/cv/plugins/RssLog.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","Refresh","Update","Operate","properties","src","check","nullable","transform","apply","filter","datetime","init","mode","limit","timeformat","itemoffset","itemack","future","width","height","model","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseFormat","parseAddress","parseRefresh","default","value","parseFloat","query","members","__request","__html","__wrapper","__fixedRequestData","__external","__separatordate","__separatoradd","__isFuture","__separatorprevday","normalizeUrl","indexOf","parts","util","Uri","parseUri","substring","queryKey","_applySrc","match","_getInnerDomString","style","getWidth","getHeight","getPath","_setupRefreshAction","_timer","event","Timer","getRefresh","addListener","refreshRSSlog","start","_onDomReady","$$domReady","plugins","RssLog","prototype","base","call","message","Bus","subscribe","getParentPage","getDatetime","Config","currentPageId","_update","_action","brss","String","htmlStringToDomElement","title","document","querySelector","innerText","popup","PopupHandler","showPopup","content","parent","Tree","getParent","Object","entries","margin","forEach","key_value","stop","Registration","stopPropagation","getCurrentDomElement","classList","contains","getItemack","once","addr","getAddress","Model","isWriteAddress","TemplateEngine","getInstance","visu","write","Transform","encode","overflow","isBig","getSrc","__refreshYql","__refreshRss","setUserData","io","request","Xhr","send","store","Yql","reload","refresh","isEnabled","error","requestData","assign","getFilter","f","getLimit","getFuture","j","ResourceManager","toUri","set","accept","method","__updateRssContent","ev","getTarget","getResponse","manipulateData","results","item","entry","bind","_applyModel","old","removeListener","__updateYqlContent","__prepareContentElement","ul","c","innerHTML","appendChild","displayrows","parseInt","dataset","dummyDiv","rect","getBoundingClientRect","itemheight","Math","round","bottom","top","parentNode","removeChild","widget","widgetRect","displayheight","labelElem","labelElemRect","floor","result","__updateContent","responseData","feed","getModel","toArray","items","getUserData","selector","debug","getAttribute","createElement","itemnum","length","getMode","row","last","Date","strftime","i","idx","itemHtml","__getItemHtml","rowElem","dom","Element","create","class","mapping","mappedValue","applyMapping","state","span","self","defaultValue2DOM","e","_applyValueToDom","add","id","tags","tmp","Array","isArray","_onTap","getLink","getTitle","getDescription","replace","entryDate","publishedDate","getTimeformat","toLocaleDateString","toLocaleTimeString","thisday","getCurrentTarget","toggle","req","getUrl","u","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass"],"mappings":"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","sourcesContent":["/* RssLog.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Michael Markstaller\n * @since 2011\n * @asset(plugins/rsslog/rsslog.css)\n */\nqx.Class.define('cv.plugins.RssLog', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update, cv.ui.common.Operate],\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: \"String\",\n      nullable:true,\n      transform: \"normalizeUrl\",\n      apply: \"_applySrc\"\n    },\n    filter: {\n      check: \"String\",\n      nullable:true\n    },\n    datetime: {\n      check: \"Boolean\",\n      init: true\n    },\n    mode: {\n      check: \"String\",\n      init: \"last\"\n    },\n    limit: {\n      check: \"Number\",\n      init: 0\n    },\n    timeformat: {\n      check: \"String\",\n      nullable:true\n    },\n    itemoffset: {\n      check: \"Number\",\n      init: 0\n    },\n    itemack: {\n      check: [\"modify\", \"display\", \"disable\"],\n      init: \"modify\"\n    },\n    future:     {\n      check: \"String\",\n      nullable: true\n    },\n    width: {\n      check: \"String\",\n      nullable: true\n    },\n    height: {\n      check: \"String\",\n      nullable: true\n    },\n    /**\n     * Internal model for YQL data\n     */\n    model: {\n      check : \"qx.data.Array\",\n      nullable: true,\n      apply: \"_applyModel\"\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        src:    {},\n        width:  {},\n        height: {},\n        filter: {},\n        datetime:   {\n          \"default\": true,\n          transform: function(value) {\n            if (typeof value === 'boolean') {\n              return value;\n            }\n            return value === \"true\";\n          }\n        },\n        mode:       { \"default\": \"last\" },\n        limit:      { \"default\": 0, transform: parseFloat },\n        timeformat: {},\n        itemack:    { \"default\": \"modify\"}, // allowed: modify, display, disable\n        future:     {},\n        query:      {}\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __request: null,\n    __html: null,\n    __wrapper: null,\n    __fixedRequestData: null,\n    __external : false,\n\n    __separatordate: null,\n    __separatoradd: null,\n    __isFuture: null,\n    __separatorprevday: null,\n\n    /**\n     * Strip querystring from URL and store is as Map\n     * @param value {String} URL\n     * @return {String} normalized URL\n     */\n    normalizeUrl: function(value) {\n      this.__fixedRequestData = {};\n      if (value && value.indexOf(\"?\") > 0) {\n        var parts = qx.util.Uri.parseUri(value);\n        value = value.substring(0, value.indexOf(\"?\"));\n        this.__fixedRequestData = parts.queryKey;\n      }\n      return value;\n    },\n\n    // property apply\n    _applySrc: function(value) {\n      this.__external = !value.match(/rsslog\\.php/) && !value.match(/rsslog_mysql\\.php/) && !value.match(/rsslog_oh\\.php/);\n    },\n\n    _getInnerDomString: function () {\n      var style = '';\n      if (this.getWidth()) {\n        style += \"width:\" + this.getWidth() + ';';\n      }\n      if (this.getHeight()) {\n        style += \"height:\" + this.getHeight();\n      }\n\n      return '<div class=\"actor rsslogBody\"><div class=\"rsslog_inline\" id=\"rss_' + this.getPath() + '\" style=\"' + style + '\"></div></div>';\n    },\n\n    _setupRefreshAction: function() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener(\"interval\", function () {\n        this.refreshRSSlog();\n      }, this);\n      this._timer.start();\n    },\n\n    _onDomReady: function () {\n      if (!this.$$domReady) {\n        this.base(arguments);\n        qx.event.message.Bus.subscribe(\"path.\" + this.getParentPage().getPath() + \".beforePageChange\", this.refreshRSSlog, this);\n        this.__html = '<span class=\"mappedValue\"></span><span>{text}</span>';\n        if (this.getDatetime()) {\n          this.__html = '{date}: ' + this.__html;\n        }\n        this.__wrapper = 'li';\n\n        if (cv.Config.currentPageId === this.getParentPage().getPath()) {\n          this.refreshRSSlog();\n        }\n      }\n    },\n\n    _update: function () {\n      this.refreshRSSlog();\n    },\n\n    _action: function () {\n      var brss = cv.util.String.htmlStringToDomElement('<div class=\"rsslog_popup\" id=\"rss_' + this.getPath() + '_big\"/>');\n      var title = document.querySelector('#' + this.getPath() + ' .label').innerText || '';\n      var popup = cv.ui.PopupHandler.showPopup(\"rsslog\", {title: title, content: brss});\n      var parent = cv.util.Tree.getParent(brss, \"div\", null, 1)[0];\n      Object.entries({height: \"90%\", width: \"90%\", margin: \"auto\"}).forEach(function(key_value){parent.style[key_value[0]]=key_value[1];}); // define parent as 100%!\n      if (this._timer) {\n        this._timer.stop();\n      }\n      qx.event.Registration.addListener(brss, \"tap\", function(event) {\n        // don't let the popup know about the click, or it will close on touch-displays\n        event.stopPropagation();\n      }, this);\n      qx.event.Registration.addListener(popup, \"close\", function () {\n        // reload main data - but only once (popup and popup_background are caught\n        // here).\n        // But delay it so that any change done to the data has a chance to\n        // arrive here.\n\n        if (popup.getCurrentDomElement() && popup.getCurrentDomElement().classList.contains('popup') && this.getItemack() === 'modify') {\n          qx.event.Timer.once(function () {\n            this.refreshRSSlog();\n          }, this, 100);\n          for (var addr in this.getAddress()) {\n            if (!cv.data.Model.isWriteAddress(this.getAddress()[addr])) { continue; }// skip when write flag not set\n            cv.TemplateEngine.getInstance().visu.write(addr, cv.Transform.encode(this.getAddress()[addr][0], 0));\n          }\n        }\n      }, this);\n      popup.getCurrentDomElement().querySelector('.main').style.overflow = \"auto\";\n      this.refreshRSSlog(true);\n    },\n\n    refreshRSSlog: function (isBig) {\n      var src = this.getSrc();\n      if (!src) {\n        this.error(\"no src given, aborting RSS-Log refresh\");\n        return;\n      }\n      if (!this.__request) {\n        if (!this.__external) {\n          this.__refreshRss();\n        }\n        else {\n          this.__refreshYql();\n        }\n      }\n      this.__request.setUserData(\"big\", isBig);\n      if (this.__request instanceof qx.io.request.Xhr) {\n        this.__request.send();\n      } else if (this.__request instanceof qx.data.store.Yql) {\n        this.__request.reload();\n      }\n\n      var refresh = this.getRefresh();\n      if (typeof (refresh) !== \"undefined\" && refresh) {\n        // reload regularly\n        if (this._timer && this._timer.isEnabled()) {\n          this._timer.start();\n        }\n      }\n    },\n\n    /**\n     * Fetch data from builtin PHP script\n     */\n    __refreshRss: function() {\n      var src = this.getSrc();\n      var requestData = Object.assign({}, this.__fixedRequestData);\n      if (this.getFilter()) {\n        requestData.f = this.getFilter();\n      }\n      if (this.getLimit()) {\n        requestData.limit = this.getLimit();\n      }\n      if (this.getFuture()) {\n        requestData.future = this.getFuture();\n      }\n      requestData.j = 1;\n      this.__request = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri(src));\n      this.__request.set({\n        accept: \"application/json\",\n        requestData: requestData,\n        method: \"GET\"\n      });\n      this.__request.addListener(\"success\", this.__updateRssContent, this);\n      this.__request.addListener(\"error\", function(ev) {\n        this.error('C: #rss_%s, Error: %s, Feed: %s', this.getPath(), ev.getTarget().getResponse(), src);\n      }, this);\n    },\n\n    /**\n     * Fetch data from YQL Service\n     */\n    __refreshYql: function() {\n      if (!this.__request) {\n        this.__request = new qx.data.store.Yql(\"SELECT * FROM rss WHERE url='\"+this.getSrc()+\"'\", {\n          manipulateData: function (data) {\n            if (data.query.results) {\n              return data.query.results.item || data.query.results.entry;\n            } else {\n              return [];\n            }\n          }\n        });\n\n        this.__request.bind(\"model\", this, \"model\");\n      }\n    },\n\n    _applyModel: function(value, old) {\n      if (old) {\n        old.removeListener(\"change\", this.__updateYqlContent, this);\n      }\n      if (value) {\n        this.__updateYqlContent();\n        value.addListener(\"change\", this.__updateYqlContent, this);\n      }\n    },\n\n    __prepareContentElement: function(ul, c) {\n      c.innerHTML = '';\n\n      c.appendChild(ul);\n\n      // get height of one entry, calc max num of display items in widget\n      var displayrows = parseInt(c.dataset[\"last_rowcount\"], 10) || 0;\n      ul.innerHTML = '<li class=\"rsslogRow odd\" id=\"dummydiv\">.</li>';\n      var dummyDiv = c.querySelector('#dummydiv'),\n        rect = dummyDiv.getBoundingClientRect(),\n        itemheight = Math.round(rect.bottom - rect.top);\n      dummyDiv.parentNode.removeChild(dummyDiv);\n      if (itemheight !== 0) {\n        var widget = c.parentNode.parentNode, // get the parent widget\n          widgetRect = widget.getBoundingClientRect(),\n          displayheight = Math.round(widgetRect.bottom - widgetRect.top),\n          labelElem = widget.querySelector('.label');\n        if (labelElem) {\n          // max. height of actor is widget-label(if exists)\n          var labelElemRect = labelElem.getBoundingClientRect();\n          displayheight -= Math.round(labelElemRect.bottom - labelElemRect.top);\n        }\n        displayrows = Math.floor(displayheight / itemheight);\n      }\n      c.dataset[\"last_rowcount\"] = displayrows;\n      return displayrows;\n    },\n\n    __updateRssContent: function(ev) {\n      var result = ev.getTarget().getResponse();\n      if (typeof result === 'string') {\n        // no json -> error\n        this.error(result);\n        return;\n      }\n      this.__updateContent(result.responseData.feed.entries);\n    },\n\n    __updateYqlContent: function() {\n      this.__updateContent(this.getModel().toArray());\n    },\n\n    __updateContent: function(items) {\n\n      var isBig = this.__request.getUserData(\"big\");\n      var selector = '#rss_' + this.getPath() + (isBig === true ? '_big' : '');\n      var c = document.querySelector(selector);\n      var itemack = isBig === true ? this.getItemack() : ( 'modify' === this.getItemack() ? 'display' : this.getItemack());\n\n      this.debug(\"ID: \"+c.getAttribute(\"id\")+\", Feed: \"+this.getSrc());\n\n      var ul = document.createElement(\"ul\");\n      var displayrows = this.__prepareContentElement(ul, c);\n\n      var itemnum = items.length;\n      this.debug('C: #'+this.getPath()+', '+itemnum+' element(s) found, '+displayrows+' displayrow(s) available');\n\n      var itemoffset = 0; // correct if mode='last' or itemnum<=displayrows\n\n      if (itemnum > displayrows) { // no need to check mode if items are less than rows\n        if (this.getMode() === 'first') {\n          itemoffset = itemnum - displayrows;\n        }\n        if (this.getMode() === 'rollover') {\n          itemoffset = parseInt(c.dataset[\"itemoffset\"], 10) || 0;\n          if (itemoffset === itemnum) {\n            itemoffset = 0;\n          }\n          c.dataset[\"itemoffset\"] = itemoffset + 1;\n        }\n      }\n\n      var row = 'rsslogodd';\n      var last = itemoffset + displayrows;\n      last = (last > itemnum) ? itemnum : last;\n\n      this.__separatordate = new Date().strftime('%d');\n      this.__separatoradd = false;\n      this.__separatorprevday = false;\n      this.__isFuture = false;\n\n      for (var i = itemoffset; i < last; i++) {\n        this.debug('C: #'+this.getPath()+', processing item: '+i+' of '+itemnum);\n        var idx = i;\n        idx = (i >= itemnum) ? (idx = idx - itemnum) : idx;\n\n        var item = items[idx];\n        var itemHtml = this.__getItemHtml(item, isBig);\n\n        var rowElem = qx.dom.Element.create('li', { 'class' : 'rsslogRow ' + row });\n        rowElem.innerHTML = itemHtml;\n\n        if (item.mapping && item.mapping !== '') {\n          var mappedValue = this.applyMapping(itemack === 'disable' ? 0 : item.state, item.mapping);\n          var span = rowElem.querySelector('.mappedValue');\n          var self = this;\n          this.defaultValue2DOM(mappedValue, function(e){self._applyValueToDom(span,e);});\n        }\n        if (this.__separatoradd && idx !== 0) {\n          rowElem.classList.add('rsslog_separator');\n          this.__separatorprevday = true;\n        }\n        else {\n          this.__separatorprevday = false;\n        }\n\n        if (this.__separatorprevday === true) {\n          rowElem.classList.add('rsslog_prevday');\n        }\n\n        if (this.__isFuture) {\n          rowElem.classList.add((row === 'rsslogodd') ? 'rsslog_futureeven' : 'rsslog_futureodd');\n        }\n\n        rowElem.dataset['id'] = item.id;\n        rowElem.dataset['mapping'] = item.mapping;\n        if (item.tags) {\n          var tmp = rowElem.querySelector('span');\n          if (Array.isArray(item.tags)) {\n            tmp.classList.add.apply( tmp.classList, item.tags );\n          } else {\n            tmp.classList.add(item.tags);\n          }\n        }\n        if (item.state === \"1\" && itemack !== 'disable') {\n          rowElem.classList.add(\"rsslog_ack\");\n        }\n\n        if (itemack === 'modify') {\n          qx.event.Registration.addListener(rowElem, \"tap\", this._onTap, this);\n        }\n        ul.appendChild(rowElem);\n\n        // Alternate row classes\n        row = (row === 'rsslogodd') ? 'rsslogeven' : 'rsslogodd';\n      }\n    },\n\n    __getItemHtml: function(item, isBig) {\n      var itemHtml = \"\";\n      if (!this.__external) {\n        itemHtml = this.__html;\n\n        itemHtml = itemHtml.replace(/\\{text\\}/, item.content);\n        var entryDate = new Date(item.publishedDate);\n        if (entryDate) {\n          itemHtml = (this.getTimeformat()) ?\n            (itemHtml.replace(/\\{date\\}/, entryDate.strftime(this.getTimeformat()) + '&nbsp;')) :\n            (itemHtml.replace(/\\{date\\}/, entryDate.toLocaleDateString() + ' ' + entryDate.toLocaleTimeString() + '&nbsp;'));\n          var thisday = entryDate.strftime('%d');\n          this.__separatoradd = ((this.__separatordate > 0) && (this.__separatordate !== thisday));\n          this.__separatordate = thisday;\n          this.__isFuture = (entryDate > new Date() );\n        }\n        else {\n          itemHtml = itemHtml.replace(/\\{date\\}/, '');\n        }\n      } else {\n        if (isBig) {\n          return '<b><a href=\"' + item.getLink() + '\">' + item.getTitle() + '</a></b><br/>' + item.getDescription();\n        } else {\n          return '<b>' + item.getTitle() + '</b><br/>' + item.getDescription();\n        }\n      }\n\n      return itemHtml;\n    },\n\n    _onTap: function(ev) {\n      var item = ev.getCurrentTarget();\n\n      var id = item.dataset['id'];\n      var mapping = item.dataset['mapping'];\n      item.classList.toggle(\"rsslog_ack\");\n      var state = +item.classList.contains(\"rsslog_ack\"); // the new state is the same as hasClass\n      if (mapping && mapping !== '') {\n        var mappedValue = this.applyMapping(state, mapping);\n        var span = item.querySelector('.mappedValue');\n        span.innerHTML = '';\n        var self = this;\n        this.defaultValue2DOM(mappedValue, function(e){self._applyValueToDom(span,e);});\n      }\n      var req = new qx.io.request.Xhr(this.__request.getUrl());\n      req.set({\n        method: \"GET\",\n        requestData: Object.assign({}, this.__fixedRequestData, {\n          'u': id,\n          'state': state\n        }),\n        accept: \"application/json\"\n      });\n      req.send();\n    }\n  },\n\n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/rsslog/rsslog.css');\n    cv.parser.WidgetParser.addHandler(\"rsslog\", cv.plugins.RssLog);\n    cv.ui.structure.WidgetFactory.registerClass(\"rsslog\", statics);\n  }\n});"]}