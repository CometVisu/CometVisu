{"version":3,"sources":["../../../source/class/cv/plugins/MobileMenu.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","HasChildren","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","parseChildren","getWidgetElements","xmlElement","Model","getInstance","setWidgetData","containerClass","members","__navLeft","__isTouchDevice","getDomString","window","innerWidth","Config","maxMobileScreenWidth","navLeft","document","querySelector","classList","contains","add","style","display","event","message","Bus","subscribe","navbar","bom","element","Animation","animate","util","SLIDE_LEFT_OUT","addListenerOnce","getChildrenDomString","_onDomReady","isTouchDevice","touchScroll","_action","SLIDE_LEFT_IN","id","scrollStartPos","elem","Registration","addListener","scrollTop","touches","pageY","preventDefault","createEvent","e","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass","plugins","MobileMenu"],"mappings":"gbAACA,GAAEC,UAAUC,qBAAqBC,GAyBjCH,GAAEI,MAAMC,OAAO,yBACdC,OAAQC,GAAGC,GAAGC,UAAUC,eACxBC,SAAUJ,GAAGC,GAAGI,OAAOC,aAOvBC,SAYEC,MAAO,SAAUC,EAAKC,EAAMC,EAASC,GACnC,IAAIC,EAAOb,GAAGc,OAAOC,aAAaC,aAAaC,KAAMR,EAAKC,EAAMC,EAASC,GACzEZ,GAAGc,OAAOC,aAAaG,cAAcT,EAAKC,EAAMC,EAASC,GACzD,OAAOC,GAGTM,kBAAmB,SAASC,EAAYV,GACtCV,GAAGa,KAAKQ,MAAMC,cAAcC,cAAeb,EAAK,MAC9Cc,eAA2B,YAWjCC,SACEC,UAAY,KACZC,gBAAiB,KAGjBC,aAAc,WACZ,GAAIC,OAAOC,YAAc9B,GAAG+B,OAAOC,qBAAqB,CACtD,IAAIC,EAAUhB,KAAKS,UAAYQ,SAASC,cAAc,eACjDF,EAAQG,UAAUC,SAAS,eAC9BJ,EAAQG,UAAUE,IAAI,cAExBL,EAAQM,MAAMC,QAAU,OACxB/C,GAAGgD,MAAMC,QAAQC,IAAIC,UAAU,mBAAoB,WACjD,IAAIC,EAASZ,EAAQE,cAAc,WACnB1C,GAAGqD,IAAIC,QAAQC,UAAUC,QAAQJ,EAAQpD,GAAGyD,KAAKF,UAAUG,gBACjEC,gBAAgB,MAAO,WAC/BnB,EAAQM,MAAMC,QAAU,QACvBvB,QAGL,MAAO,2CAA6CA,KAAKoC,uBAAyB,SAElF,MAAO,wEAIXC,YAAa,WACRrC,KAAKsC,iBACNtC,KAAKuC,YAAY,eAIrBC,QAAS,WACP,GAAI5B,OAAOC,YAAc9B,GAAG+B,OAAOC,sBAC9Bf,KAAKsC,gBAAgB,CACtBtC,KAAKS,UAAUa,MAAMC,QAAU,QAC/B,IAAIK,EAAS5B,KAAKS,UAAUS,cAAc,wBAC1C1C,GAAGqD,IAAIC,QAAQC,UAAUC,QAAQJ,EAAQpD,GAAGyD,KAAKF,UAAUU,iBAKjEF,YAAa,SAASG,GACpB,IAAIC,EAAe,EAEfC,EAAO3B,SAASC,cAAc,IAAIwB,GACtClE,GAAGgD,MAAMqB,aAAaC,YAAYF,EAAM,aAAc,SAASpB,GAC7DmB,EAAe3C,KAAK+C,UAAUvB,EAAMwB,QAAQ,GAAGC,MAC/CzB,EAAM0B,mBACL,GAEH1E,GAAGgD,MAAMqB,aAAaC,YAAYF,EAAM,YAAa,SAASpB,GAC5DxB,KAAK+C,UAAUJ,EAAenB,EAAMwB,QAAQ,GAAGC,MAC/CzB,EAAM0B,mBACN,IAGJZ,cAAe,WACb,GAA6B,OAAzBtC,KAAKU,gBACP,IACEO,SAASkC,YAAY,cACrBnD,KAAKU,iBAAkB,EACvB,MAAO0C,GACPpD,KAAKU,iBAAkB,EAG3B,OAAOV,KAAKU,kBAYhB2C,MAAO,SAAS/D,GACDP,GAAGkD,KAAKqB,aAAajD,cAC3BkD,UAAU,qCACjBxE,GAAGc,OAAOC,aAAa0D,WAAW,aAAclE,GAChDP,GAAGC,GAAGC,UAAUwE,cAAcC,cAAc,aAAcpE,MAnJ7DP,GAAE4E,QAAQC,WAAWjF,cAAgBA","sourcesContent":["/* MobileMenu.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author alltime84\n * @since 2016\n * @asset(plugins/mobilemenu/*.css)\n */\nqx.Class.define('cv.plugins.MobileMenu', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.HasChildren],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n      cv.parser.WidgetParser.parseChildren(xml, path, flavour, pageType);\n      return data;\n    },\n\n    getWidgetElements: function(xmlElement, path) {\n      cv.data.Model.getInstance().setWidgetData( path+\"_0\", {\n        containerClass           : \"actor\"\n      });\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __navLeft : null,\n    __isTouchDevice: null,\n\n    // overridden\n    getDomString: function() {\n      if (window.innerWidth <= cv.Config.maxMobileScreenWidth){\n        var navLeft = this.__navLeft = document.querySelector('#navbarLeft');\n        if (!navLeft.classList.contains('mobilemenu')){\n          navLeft.classList.add('mobilemenu');\n        }\n        navLeft.style.display = \"none\";\n        qx.event.message.Bus.subscribe(\"path.pageChanged\", function() {\n          var navbar = navLeft.querySelector('.navbar');\n          var animation = qx.bom.element.Animation.animate(navbar, qx.util.Animation.SLIDE_LEFT_OUT);\n          animation.addListenerOnce(\"end\", function() {\n            navLeft.style.display = \"none\";\n          }, this);\n        });\n\n        return '<div class=\"clearfix mobilemenuTrigger\">' + this.getChildrenDomString() + '</div>';\n      } else {\n        return '<div class=\"clearfix mobilemenuTrigger\" style=\"display: none\"></div>';\n      }\n    },\n\n    _onDomReady: function() {\n      if(this.isTouchDevice()){\n        this.touchScroll(\"navbarLeft\");\n      }\n    },\n\n    _action: function() {\n      if (window.innerWidth <= cv.Config.maxMobileScreenWidth){\n        if(this.isTouchDevice()){\n          this.__navLeft.style.display = \"block\";\n          var navbar = this.__navLeft.querySelector('.navbar.navbarActive');\n          qx.bom.element.Animation.animate(navbar, qx.util.Animation.SLIDE_LEFT_IN);\n        }\n      }\n    },\n\n    touchScroll: function(id){\n      var scrollStartPos=0;\n\n      var elem = document.querySelector('#'+id);\n      qx.event.Registration.addListener(elem, \"touchstart\", function(event) {\n        scrollStartPos=this.scrollTop+event.touches[0].pageY;\n        event.preventDefault();\n      }, false);\n\n      qx.event.Registration.addListener(elem, \"touchmove\", function(event) {\n        this.scrollTop=scrollStartPos-event.touches[0].pageY;\n        event.preventDefault();\n      },false);\n    },\n\n    isTouchDevice: function(){\n      if (this.__isTouchDevice === null) {\n        try {\n          document.createEvent(\"TouchEvent\");\n          this.__isTouchDevice = true;\n        } catch (e) {\n          this.__isTouchDevice = false;\n        }\n      }\n      return this.__isTouchDevice;\n    }\n  },\n\n  // VisuDesign_Custom.prototype.addCreator(\"mobilemenu\", {\n  //   create: function(element, path, flavour, type) {\n  //     var $e = $(element);\n  //     var data = templateEngine.widgetDataInsert( path, {\n  //       content           : getWidgetElements($e, path)\n  //     } );\n  // });\n\n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/mobilemenu/mobilemenu.css');\n    cv.parser.WidgetParser.addHandler(\"mobilemenu\", statics);\n    cv.ui.structure.WidgetFactory.registerClass(\"mobilemenu\", statics);\n  }\n});\n"]}