{"version":3,"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Strftime.js"],"names":["qx","Class","define","extend","cv","ui","structure","AbstractWidget","properties","format","check","init","locale","nullable","statics","__P_15_0","__P_15_1","__P_15_2","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","lang","target","default","uniqid","startTimer","event","Timer","start","members","__P_15_3","__P_15_4","_getInnerDomString","getValueElement","getDomElement","querySelector","_onDomReady","plugins","Strftime","__P_15_5","elem","d","Date","getLocale","innerText","strftime","getFormat","destruct","removeListener","defer","util","ScriptLoader","getInstance","addStyles","addHandler","WidgetFactory","registerClass","a","A","b","B","c","p","P","x","X","ext","locales","fr","$$dbClassInfo"],"mappings":"qTA0BCA,GAAAC,MAAAC,OAAA,uBACCC,OAAOC,GAAAC,GAAOC,UAAAC,eAOfC,YACCC,QACEC,MAAQ,SACNC,KAAK,MADCC,QAIRF,MAAQ,SACNG,UAAO,IASZC,SACCC,YACEC,SAAa,EACbC,SAAoB,KAWvBC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,OAAOlB,GAAAmB,OAAAC,aAAAC,aAA8BC,KAA9BP,EAAwCC,EAAAC,EAAAC,EAAAI,KAAAC,mCAE9CA,+BAhBM,WAkBP,OACEC,MACEC,OAAQ,UAAApB,QACRqB,QAAU,QAEbC,OAvBM,WAyBP,OAAQL,KAAAV,YAEPgB,WA3BM,WA6BPN,KAAYT,WACVS,KAAKT,SAAL,IAAmBjB,GAAAiC,MAAAC,MAAA,iCAGnBR,KAAKT,SAAKkB,UAUfC,SACCC,UAAS,EACPC,SAAgB,KAChBC,mBAFO,WAIP,MAAA,sCAIAC,gBAAA,WACAd,KAAAY,WACEZ,KAAKY,SAALZ,KAA0Be,gBAAAC,cAAA,0CAM5BC,YAAA,WACAvC,GAAAwC,QAAaC,SAAAb,sFAGZc,SApBM,WAsBP,IAAAC,EAAUrB,KAAAc,kBACFQ,EAAI,IAAGC,KACbD,EAAApC,OAAUc,KAAAwB,YACVH,EAAEI,UAAcH,EAAAI,SAAhB1B,KAAA2B,eASLC,SAAA,WACClD,GAAAwC,QAAUC,SAAA5B,SAAWsC,eAAA,WAAA7B,KAAAoB,SAAApB,OAEpB8B,MAzGoC,SAAA1C,GA2G9BV,GAAAqD,KAASC,aAASC,cACjBC,UAAY,iCAClBxD,GAAAmB,OAAOC,aAAUqC,WAAA,WAAA/C,GACjBV,GAAGC,GAAAC,UAAOwD,cAAaC,cAAvB,WAAAjD,wBAIAkD,GAAK,KAAI,KAAQ,KAAK,KAAA,KAAA,KAAA,MACpBC,GAAI,UAAD,SAAmB,WAAY,WADd,aAAA,UAAA,WAEpBC,GAAI,MAAA,MAAW,MAAU,MAAA,MAAY,MAAA,MAAY,MAAA,MAAc,MAAW,MAAA,OAC1EC,GAAI,SAAO,UAAc,OAAO,QAAO,MAAO,OAAO,OAAlD,SAAuE,YAHtD,UAAA,WAAA,YAIpBC,EAAG,oBACHC,GAAG,GAAA,IACHC,GAAI,GAAI,IACRC,EAAG,WACHC,EAAG,MARiBvB,KAAtBwB,IAAAC,QAAAC,IAWAX,GAAK,MAAI,MAAT,MAAsB,MAAA,MAAA,MAAA,OACpBC,GAAI,WAAD,QAAsB,QAAO,WAAc,QAD1B,WAAA,UAEpBC,GAAI,MAAA,MAAY,MAAS,MAAtB,MAA+B,MAAY,MAA3C,MAAoD,MAAY,MAAA,MAF/C,OAGpBC,GAAI,UAAO,UAAc,OAAO,QAAO,MAAO,OAA3C,UAAgE,OAAO,YAHtD,UAAA,WAAA,YAIpBC,EAAG,oBACHC,GAAG,GAAA,IACHC,GAAI,GAAI,IACRC,EAAG,WACHC,EAAG,SArI8BpE,GAAtCwC,QAAAC,SAAA+B,cAAAA","sourcesContent":["/* Strftime.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins integrates formated date and clock strings into based on strftime.\n *\n * @author Michael Hausl [michael at hausl dot com]\n * @since 0.8.0\n * @asset(plugins/strftime/strftime.css)\n */\nqx.Class.define('cv.plugins.Strftime', {\n  extend: cv.ui.structure.AbstractWidget,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    format: {\n      check: 'String',\n      init: '%c'\n    },\n    locale: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    __elements : {},\n    __internalCounter : 0,\n    __timer : null,\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'lang': { target: 'locale' },\n        'format': { 'default': '%c'}\n      };\n    },\n\n    uniqid: function() {\n      return this.__internalCounter++;\n    },\n\n    startTimer: function() {\n      if (!this.__timer) {\n        this.__timer = new qx.event.Timer(1000);\n      }\n      if (!this.__timer.isEnabled()) {\n        this.__timer.start();\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __timerStarted: false,\n    __valueElement: null,\n\n    _getInnerDomString: function () {\n      return '<div class=\"strftime_value\"></div>';\n    },\n\n    // overridden\n    getValueElement: function() {\n      if (!this.__valueElement) {\n        this.__valueElement = this.getDomElement().querySelector('.strftime_value');\n      }\n      return this.__valueElement;\n    },\n\n    // overridden\n    _onDomReady: function () {\n      this.self(arguments).startTimer();\n      this.self(arguments).__timer.addListener('interval', this.__update, this);\n    },\n\n    __update: function() {\n      const elem = this.getValueElement();\n      const d = new Date();\n      d.locale = this.getLocale();\n      elem.innerText = d.strftime(this.getFormat());\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this.self(arguments).__timer.removeListener('interval', this.__update, this);\n  },\n\n  defer: function(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/strftime/strftime.css');\n    cv.parser.WidgetParser.addHandler('strftime', statics);\n    cv.ui.structure.WidgetFactory.registerClass('strftime', statics);\n\n    // extend locales by German and French\n    Date.ext.locales.de = {\n      a: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n      A: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n      b: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n      B: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n    Date.ext.locales.fr = {\n      a: ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'],\n      A: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n      b: ['jan', 'fév', 'mar', 'avr', 'mai', 'jun', 'jui', 'aoû', 'sep', 'oct', 'nov', 'déc'],\n      B: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n  }\n});\n"]}