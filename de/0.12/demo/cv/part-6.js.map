{"version":3,"sources":["../../../source/class/cv/plugins/Clock.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","Update","construct","props","value","Date","constructor","call","this","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","parseFormat","parseAddress","members","_getInnerDomString","_onDomReady","$actor","$","getActor","svg","loadURL","util","ResourceManager","getInstance","toUri","onLoad","root","getElementById","draggable","bind","type","actor","dragHelper","dragAction","plugins","Clock","prototype","base","Object","getOwnPropertyNames","getAddress","filter","address","Model","isReadAddress","forEach","_update","getValue","getHours","getMinutes","initListeners","isDataAlreadyHandled","element","getDomElement","defaultValueHandling","querySelector","time","split","hourElem","minuteElem","undefined","setAttribute","console","error","event","minutes","$container","$svg","find","x","originalEvent","pageX","offset","left","y","pageY","top","angle","Math","atan2","PI","oldHours","pm","hours","floor","setDate","getDate","setHours","setMinutes","round","oldMinutes","attr","addr","TemplateEngine","visu","write","Transform","encode","defer","addHandler","WidgetFactory","registerClass","ScriptLoader","addScripts"],"mappings":"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","sourcesContent":["/* Clock.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @asset(plugins/clock/*)\n */\nqx.Class.define('cv.plugins.Clock', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Update],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (props) {\n    props.value = new Date();\n    this.base(arguments, props);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      return data;\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    _getInnerDomString: function () {\n      return '<div class=\"actor\" style=\"width:200px; height: 200px\"></div>';\n    },\n\n    _onDomReady: function () {\n      //this.base(arguments);\n      var args = arguments;\n      var $actor = $(this.getActor());\n      $actor.svg({\n        loadURL: qx.util.ResourceManager.getInstance().toUri('plugins/clock/clock_pure.svg'),\n        onLoad: function (svg) {\n          $(svg.root().getElementById('HotSpotHour'))\n            .draggable()\n            .bind('drag', {type: 'hour', actor: $actor}, this.dragHelper.bind(this))\n            .bind('dragstop', {actor: $actor}, this.dragAction.bind(this));\n          $(svg.root().getElementById('HotSpotMinute'))\n            .draggable()\n            .bind('drag', {type: 'minute', actor: $actor}, this.dragHelper.bind(this))\n            .bind('dragstop', {actor: $actor}, this.dragAction.bind(this));\n\n          // call parents _onDomReady method\n          this.base(args);\n\n          Object.getOwnPropertyNames(this.getAddress())\n            .filter(function (address) {\n              return cv.data.Model.isReadAddress(this.getAddress()[address]);\n            }.bind(this))\n            .forEach(function(address) {\n              this._update(address, this.getValue().getHours() + ':' + this.getValue().getMinutes() + ':00', true);\n          }, this);\n        }.bind(this)\n      });\n    },\n\n    // overridden\n    initListeners: function () {},\n\n    // overidden\n    _update: function (address, data, isDataAlreadyHandled) {\n      var element = this.getDomElement();\n      var value = isDataAlreadyHandled ? data : this.defaultValueHandling(address, data);\n      var svg = element.querySelector('svg');\n      var time = value.split(':');\n      var hourElem = svg.querySelector('#Hour');\n      var minuteElem = svg.querySelector('#Minute');\n      if( hourElem !== undefined && minuteElem !== undefined ) {\n        hourElem.setAttribute(\"transform\", 'rotate(' + ((time[0] % 12) * 360 / 12 + time[1] * 30 / 60) + ',50,50)');\n        minuteElem.setAttribute(\"transform\", 'rotate(' + (time[1] * 6) + ',50,50)');\n      } else {\n        console.error('Error: trying to update unknown clock SVG elements #Hour and/or #Minute');\n      }\n    },\n\n    dragHelper: function (event) {\n      var $container = event.data.actor;\n      var $svg = $container.find('svg');\n\n      var x = event.originalEvent.pageX - $svg.offset().left - 50;\n      var y = 50 - (event.originalEvent.pageY - $svg.offset().top);\n      var angle = (Math.atan2(x, y) * 180 / Math.PI + 360) % 360;\n      var time = this.getValue();\n      var minutes;\n      if (event.data.type === 'hour') {\n        var oldHours = time.getHours();\n        var pm = oldHours >= 12;\n        var hours = Math.floor(angle / 30);\n        minutes = (angle % 30) * 2;\n\n        if (oldHours % 12 > 9 && hours < 3) {\n          if (pm) {\n            pm = false;\n            time.setDate(time.getDate() + 1);\n          }\n          else {\n            pm = true;\n          }\n        } else if (hours > 9 && oldHours % 12 < 3) {\n          if (pm) {\n            pm = false;\n          }\n          else {\n            pm = true;\n            time.setDate(time.getDate() - 1);\n          }\n        }\n\n        time.setHours(hours + pm * 12);\n        time.setMinutes(minutes);\n      } else { // minute\n        minutes = Math.round(angle / 6);\n        var oldMinutes = time.getMinutes();\n\n        if (oldMinutes > 45 && minutes < 15) {\n          time.setHours(time.getHours() + 1);\n        }\n        else if (minutes > 45 && oldMinutes < 15) {\n          time.setHours(time.getHours() - 1);\n        }\n        time.setMinutes(minutes);\n      }\n      $container.find('#Hour').attr('transform', 'rotate(' + ((time.getHours() % 12) * 360 / 12 + time.getMinutes() * 30 / 60) + ',50,50)');\n      $container.find('#Minute').attr('transform', 'rotate(' + (time.getMinutes() * 6) + ',50,50)');\n    },\n\n    dragAction: function () {\n      var address = this.getAddress();\n      for (var addr in address) {\n        if (address[addr][1] === true) { continue; } // skip read only\n        cv.TemplateEngine.getInstance().visu.write(addr, cv.Transform.encode(address[addr][0], this.getValue()));\n      }\n    }\n  },\n\n  defer: function(statics) {\n    cv.parser.WidgetParser.addHandler(\"clock\", cv.plugins.Clock);\n    cv.ui.structure.WidgetFactory.registerClass(\"clock\", statics);\n    var loader = cv.util.ScriptLoader.getInstance();\n\n    if (qx.core.Environment.get('qx.debug')) {\n      loader.addScripts(['resource/libs/jquery-ui.js', 'resource/libs/jquery.svg.js'], [0]);\n    } else {\n      loader.addScripts(['resource/libs/jquery-ui.min.js', 'resource/libs/jquery.svg.min.js'], [0]);\n    }\n  }\n});"]}