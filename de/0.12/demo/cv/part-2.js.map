{"version":3,"sources":["../../../source/class/cv/ui/manager/IActionHandler.js","../../../source/class/cv/ui/manager/control/MFileEventHandler.js","../../../source/class/cv/ui/manager/control/IFileEventHandler.js","../../../source/class/cv/ui/manager/Main.js","../../../source/class/cv/ui/manager/model/FileItem.js","../../../source/class/cv/ui/manager/model/BackupFolder.js","../../../source/class/cv/ui/manager/control/ActionDispatcher.js","../../../source/class/cv/ui/manager/snackbar/Controller.js","../../../source/class/cv/ui/manager/model/Preferences.js","../../../source/class/cv/ui/manager/control/FileHandlerRegistry.js","../../../source/class/cv/ui/manager/core/GlobalState.js","../../../source/class/cv/ui/manager/model/OpenFile.js","../../../source/class/cv/ui/manager/editor/IEditor.js","../../../source/class/cv/ui/manager/model/CompareFiles.js","../../../source/class/cv/ui/manager/control/FileController.js","../../../source/class/cv/ui/manager/MenuBar.js","../../../source/class/cv/ui/manager/upload/UploadMgr.js","../../../source/class/cv/ui/manager/upload/MDragUpload.js","../../../source/class/cv/ui/manager/tree/FileSystem.js","../../../source/class/cv/ui/manager/ToolBar.js","../../../source/class/cv/ui/manager/form/FileTabItem.js","../../../source/class/cv/ui/manager/model/Message.js","../../../source/class/cv/ui/manager/snackbar/Message.js","../../../source/class/cv/ui/manager/viewer/AbstractViewer.js","../../../source/class/cv/ui/manager/viewer/Image.js","../../../source/class/cv/ui/manager/viewer/Config.js","../../../source/class/cv/ui/manager/viewer/Folder.js","../../../source/class/cv/ui/manager/viewer/Icons.js","../../../source/class/cv/ui/manager/Start.js","../../../source/class/cv/ui/manager/editor/AbstractEditor.js","../../../source/class/cv/ui/manager/editor/Source.js","../../../source/class/cv/ui/manager/editor/Xml.js","../../../source/class/cv/ui/manager/editor/Diff.js","../../../source/class/cv/ui/manager/editor/Config.js","../../../source/class/cv/ui/manager/editor/Worker.js","../../../source/class/cv/ui/manager/contextmenu/FileItem.js","../../../source/class/cv/ui/manager/contextmenu/GlobalFileItem.js","../../../source/class/cv/ui/manager/tree/VirtualFsItem.js","../../../source/class/cv/ui/manager/form/FileListItem.js","../../../source/class/cv/ui/manager/core/IconAtom.js","../../../source/class/cv/ui/manager/editor/completion/Config.js","../../../source/class/cv/ui/manager/editor/completion/CometVisu.js","../../../source/class/cv/ui/manager/model/config/Section.js","../../../source/class/cv/ui/manager/form/SectionListItem.js","../../../source/class/cv/ui/manager/viewer/SvgIcon.js","../../../source/class/cv/ui/manager/editor/data/Provider.js","../../../source/class/cv/ui/manager/model/config/Option.js","../../../source/class/cv/ui/manager/form/OptionListItem.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Interface","define","members","canHandleAction","actionName","handleAction","data","cv","ui","manager","IActionHandler","Mixin","construct","this","_disableFileEvents","event","message","Bus","subscribe","_handleFileEvent","destruct","unsubscribe","control","MFileEventHandler","ev","IFileEventHandler","Class","extend","core","Object","type","include","implement","constructor","call","iconfont","material","Load","model","BackupFolder","getInstance","_checkEnvironment","initOpenFiles","Array","__actionDispatcher","ActionDispatcher","setMain","__initCommands","_draw","_onManagerEvent","tooltip","Manager","statics","ROOT","properties","openFiles","check","deferredInit","writeableFolder","init","currentFolder","nullable","apply","currentSelection","deleteableSelection","renameableSelection","visible","__previewFileIndex","__root","_pane","_tree","_stack","_oldCommandGroup","_managerCommands","_mainContent","_openFilesController","_hiddenConfigFakeFile","_applyVisible","value","Init","getApplication","getCommandManager","setActive","bom","element","Style","set","__getRoot","io","rest","Client","getFsClient","checkEnvironmentSync","err","res","snackbar","Controller","error","forEach","env","entity","state","locale","tr","getCurrentSelection","isWriteable","includes","closeCurrentFile","setVisible","_onCreate","readSync","path","FileItem","file","getFullPath","isConfigFile","_onDelete","warn","getData","action","getOpenFiles","copy","some","openFile","getFile","isRelated","closeFile","getCurrentFolder","resetCurrentFolder","getName","handler","_onChangeTreeSelection","Preferences","isQuickPreview","mode","__openSelectedFile","node","getType","setCurrentFolder","getParent","setCurrentSelection","resetCurrentSelection","setEditing","_applyCurrentFolder","old","removeRelatedBindings","bind","resetWriteableFolder","_applyCurrentSelection","converter","resetDeleteableSelection","_onChangeFileSelection","sel","getSelection","length","editorConfig","getItem","handlerId","getHandlerId","FileHandlerRegistry","getFileHandlerById","getFileHandler","instance","setFile","Clazz","add","setSelection","setFocusedWidget","GlobalState","setOpenedFocusedFile","resetOpenedFocusedFile","preview","handlerType","handlerConf","info","classname","isOpen","of","OpenFile","isPermanent","setItem","push","setPermanent","indexOf","getTarget","setModelSelection","force","isCloseable","isModified","resetPermanent","selectionIndex","remove","currentHandler","hasInterface","editor","IEditor","resetFile","resetSelection","resetFocusedWidget","replace","CompareFiles","fileHandlerConf","clear","filter","destroy","window","monaco","oldModel","getModel","getUri","dispose","isTemporary","dialog","Dialog","confirm","confirmed","dispatchByName","selected","_onCloseFile","dom","Element","create","id","style","insertEnd","document","body","theme","Meta","setTheme","Dark","group","command","Group","Command","renameCommand","getActive","item","FileController","_onChangeStackSelection","page","toArray","find","__getFileNamePrompt","callback","context","caption","prompt","Prompt","show","content","folder","existsMessage","handlePrompt","name","filename","match","exec","getChildren","child","readable","writeable","loaded","modified","temporary","parentFolder","createSync","getBusTopic","source","addChild","sortElements","refresh","__findDroppable","elem","nodeType","getAttribute","parentNode","domRoot","root","Inline","addListenerOnce","getContentElement","getDomElement","addEventListener","target","preventDefault","setRoot","setLayout","layout","Canvas","bottom","left","resize","bounds","getBounds","setLayoutProperties","Math","round","width","setMaxHeight","height","addListener","innerHeight","main","container","Composite","Dock","edge","menuBar","MenuBar","uploadButton","getButton","uploadManager","upload","UploadMgr","splitpane","Pane","rootFolder","fakeIconFile","getIconFile","overrideIcon","open","fakeChildren","icon","dark","Images","getIcon","tree","FileSystem","leftContainer","VBox","leftBar","ToolBar","reload","buttonConfig","getButtonConfiguration","args","flex","list","form","List","setAppearance","controller","setDelegate","createItem","FileTabItem","bindItem","index","bindDefaultProperties","bindProperty","Stack","startOpenFile","setCloseable","_disposeObjects","application","util","DeferredCall","resetRoot","schedule","removeChild","Main","$$instance","marshal","MEventBubbling","parent","initChildren","setFakeChildren","endsWith","__path","setName","setParent","_fakeIconFile","_acceptedFiles",".","media","test","getConfigName","hasChildren","fake","getHiddenConfigFile","displayName","getAcceptedFiles","loading","children","hash","editing","special","valid","transform","mounted","trash","inTrash","__fullPath","__onLoadCallback","_toLowerCase","toLowerCase","isFake","startsWith","_applyName","getDisplayName","setDisplayName","getPath","getParentFolder","_onOpen","isLoaded","load","_maintainIcon","isOverrideIcon","setIcon","isTrash","isMounted","_applyHasChildren","unload","setLoaded","setLoading","removeAll","oldParent","_onGet","hasOwnProperty","nodeChildren","getFakeChildren","append","_onError","console","isLoading","getServerPath","LibraryManager","get","sort","a","b","localeCompare","openPath","parts","lang","Type","isArray","split","relPath","shift","setOpen","_onFilesSystemMessage","getBackupFiles","files","pathparts","pop","join","suffix","fileRegex","RegExp","backupFile","date","Date","parseInt","substring","_onAction","focusedWidget","updateBarButtons","button","config","keys","actionId","setEnabled","general","hasHandler","_getHandler","getFocusedWidget","getMain","Widget","_setLayout","initMessages","_onMessage","_listController","getMessages","getChildControl","_initDelegate","msg","Message","title","_typeof","statusText","sticky","appearance","refine","messages","_onCloseMessage","exclude","_createChildControlImpl","_add","prototype","base","_restorePreferences","defaultConfigEditor","quickPreview","expertMode","startViewMode","_savePreferences","Storage","getLocal","Serializer","toNativeObject","store","__registry","__defaults","registerFileHandler","viewer","Image","SUPPORTED_FILES","Config","Icons","Folder","Start","Source","Xml","noTemporaryFiles","noReadOnlyFiles","Diff","_onChangesDefaultConfigEditor","selector","clazz","options","assign","isClass","instanceOf","selectorId","priority","isRegExp","regex","toString","isFunction","isString","fullPath","fileName","handlers","defaultHandler","key","__canHandle","hasFileHandler","setDefault","getDefaultConfigEditor","DEFAULT_FOR","getAllFileHandlers","map","removeListener","openedFocusedFile","_applyFile","setHandlerId","permanent","closeable","__ibid","_maintainPermanent","handlerClass","getByName","ICON","removeBinding","resetIcon","TITLE","save","getCurrentContent","original","setOriginalFile","setModifiedFile","originalFile","modifiedFile","getOriginalFile","getModifiedFile","_applyModifiedFile","isInTrash","__fsClient","rename","newName","newPath","resetTemporary","resetModified","moveSync","src","resetEditing","move","restore","__moveFile","targetFileName","targetFile","updateSync","delete","__doDelete","deleteSync","download","createElement","setAttribute","getBaseUrl","display","appendChild","click","validate","__validateConfig","d","alert","Worker","validateConfig","then","close","setValid","trn","menubar","_commandGroup","__buttons","__defaultButtonConfiguration","__buttonConfiguration","_createChildControl","Spacer","editorGroup","RadioGroup","new-file","menu","enabled","new-folder","separator","new-config-file","com","zenesis","UploadMenuButton","save-as","hidden","quit","undo","redo","cut","paste","source-editor","RadioButton","xml-editor","quick-preview","CheckBox","expert-mode","maintainButtons","prefs","getModelSelection","setDefaultConfigEditor","__bindToPreference","buttonName","preferenceName","merge","buttonConf","label","ButtonClass","Button","setValue","Error","Separator","onAfterCreate","basic","Label","Menu","widget","uploadUrl","_init","LAST_ID","multiple","_updateUploadUrl","getFolder","url","setUploadUrl","evt","getFilename","setParam","isForce","progressListenerId","uploadedSize","debug","getSize","stateListenerId","getStatus","forceUpload","getResponse","Json","parse","e","removeListenerById","_getUniqueFileId","setForce","newFile","File","getBrowserObject","getId","size","uploadWidget","getUploadWidget","getUploadHandler","_addFile","getAutoUpload","beginUploads","uploadFile","bomFile","fileSize","setSize","setUploadWidget","UploadButton","replaceFile","replacedFile","setFolder","setDroppable","_applyStartDragListeners","_getLayout","Grow","__syncBounds","uploadMode","uploadHint","onHtml5Drop","getFiles","isAccepted","hasDroppableFile","i","l","dataTransfer","items","kind","getAsFile","__hasEmptyInfo","_boundOnStop","setUserBounds","top","_createMDragUploadChildControlImpl","setZIndex","setBackgroundColor","dropBox","Atom","getUploadHint","iconPosition","rich","center","setWrap","setAnonymous","_onStopDragging","setUploadMode","removeEventListener","_isDroppable","MDragUpload","_applyDragListeners","uploadable","_onDrop","lid","__applyUploadMode","hasChildControl","isVisible","setRootFolder","_onEnableTree","MIMETYPES","text/xml","application/xml","text/javascript","application/x-httpd-php","text/css","image/png","image/svg+xml","text/plain","getMimetypeFromSuffix","mime","mimetype","events","changeSelection","selectedNode","__selectionTimer","__doubleTapWaitingTime","__ignoreSelectionChange","_replacementManager","openPaths","getOpenNodes","_applyRootFolder","setModel","setHideRoot","_applySelectedNode","contextMenu","contextmenu","GlobalFileItem","configure","setContextMenu","_onDblTapTreeSelection","getSelectedNode","stop","fireDataEvent","setSelectedNode","Timer","once","resetContextMenu","resetSelectedNode","_onFsItemRightClick","VirtualFsItem","VirtualTree","selectionMode","minWidth","bindPropertyReverse","toolbar","showOnly","__showOnly","_menuBar","_menuButtonConfig","_uploadManager","__show","newButton","fileController","createPart","Part","marginLeft","MenuButton","_createButton","addWidget","deleteSelection","setToolTipText","checkConfig","fireEvent","doNotUseCommand","_applyFolder","resetFolder","__menuBar","IModel","HBox","_onPointerOver","_onPointerOut","dereference","_forwardStates","focused","hovered","dragover","addState","_transformFilename","removeState","_applyPermanent","setFont","_applyCloseable","setVisibility","_applyModel","_applyIcon","setSource","_applyLabel","getLabel","labelValue","resetToolTipText","_onClose","_addAt","_onAppear","timeout","_timer","_applyType","setDecorator","getAppearance","_applyTimeout","getTimeout","Scroll","_scaleImage","AbstractViewer","getImageData","ResourceManager","aspectRatio","ImageLoader","setLabel","resetLabel","availableHeight","paddingY","paddingX","scale","_onChange","configName","Uri","getAbsolute","embed","Iframe","IMultiSelection","IModelSelection","MMultiSelectionHandling","MRemoteChildrenHandling","MModelSelection","noToolbar","_isImageRegex","initModel","_newItem","_debouncedOnFilter","Function","debounce","_onFilter","addItem","removeItem","permanentFilter","showTextFilter","labelConverter","disableScrolling","viewMode","_controller","SELECTION_MANAGER","selection","ScrollArea","_defaultLabelConverter","getViewMode","_getDelegate","getLabelConverter","FileListItem","configureItem","_onDblTap","setShowFileActions","getCurrentTarget","getSpecial","openAtPointer","getBubbles","stopPropagation","resetModel","getValue","getPermanentFilter","resetParent","_applyShowTextFilter","filterString","filterFunction","filtered","getChildrenContainer","_onAddChild","_onRemoveChild","_onFileEvent","_applyDisableScrolling","scrollContainer","TextField","placeholder","liveUpdate","margin","isShowTextFilter","Flow","isDisableScrolling","IconAtom","IconConfig","DB","entry","_configRegex","selectedItem","_ignoreSelectionChanges","_previewButton","_listButton","_radioGroup","_loadRoot","found","_onChangeSelection","setSelectedItem","_applySelectedItem","_onToggleExpand","getUserData","getVisibility","_onChangeViewMode","getStartViewMode","part","listButton","setUserData","toolTipText","previewButton","setStartViewMode","__initMiscFolder","folderWidget","specialFiles","unshift","fakeFolder","_initClient","_handledActions","_client","_loadFile","getContent","setContent","_loadFromFs","resetContent","_applyContent","_handleSaveResponse","_onSaved","overrideHash","getHash","curry","AbstractEditor","_basePath","location","origin","pathname","droppable","focusable","effectAllowed","dropEffect","FocusHandler","setUseTabNavigation","_initWorker","_currentDecorations","COUNTER","MONACO_EXTENSION_REGEX","languages","extensions","getLanguages","ext","documentationMappingPrefix","sourcePath","loader","DynamicScriptLoader","require","paths","vs","vs/nls","availableLanguages","*","getLanguage","noCacheSuffix","random","schema","qxLib","__schema","typescript","javascriptDefaults","addExtraLib","parsedSchema","Schema","completionProvider","completion","cvCompletionProvider","CometVisu","registerCompletionItemProvider","getProvider","log","Logger","start","_editor","_workerWrapper","setEditor","_getDefaultModelOptions","tabSize","indentSize","insertSpaces","domElement","suggestOnTriggerCharacters","folding","autoIndent","automaticLayout","dragAndDrop","formatOnPaste","formatOnType","minimap","onDidChangeModelContent","_onContentChanged","monacoAction","getAction","run","isSupported","newModel","xml","Document","isXmlDocument","documentElement","outerHTML","createModel","_getLanguage","updateOptions","readOnly","contentChanged","fileType","typeExt","showErrors","errorList","markers","currentMessage","severity","MarkerSeverity","startLineNumber","line","startColumn","endLineNumber","endColumn","getLineContent","isNaN","slice","setModelMarkers","showDecorations","decorators","deltaDecorations","__basePath","_currentContent","_iframe","_notWriteable","appendParamsToUrl","getWindow","saveFromIframe","font","_elemToXml","relName","indent","nodeName","nodeValue","attributes","attrName","setModified","originalContent","modifiedContent","createDiffEditor","getOriginalContent","getModifiedContent","originalModel","modifiedModel","setModifiedContent","setOriginalContent","resetOriginalContent","resetModifiedContent","_model","__initialSectionCount","getConfigClient","_onModelValueChange","section","sectionName","Section","optionKey","addOption","__checkForModification","_onDeleteSection","sectionListItem","optionKeys","getOptions","option","getKey","saveSync","status","setEnableInlineFind","SectionListItem","_files","_worker","toUri","onmessage","_validationCallbacks","code","postMessage","Promise","resolve","reject","topic","getEditor","setHash","currentHash","callbacks","cb","terminate","noCompare","_noCompare","_dateFormat","format","DateFormat","getDateFormat","_timeFormat","getTimeFormat","active","_selectedNode","_renameDialog","isFolder","isBackup","visibility","compareMenu","backups","getTime","backupEntry","groupButton","_onCompareWith","openWithMenu","availableHandlers","_onOpenWith","setFilename","controlName","_noNew","sep","isActive","compareWith","_onRename","_onDownload","_onRestore","_onValidate","_onClone","VirtualTreeItem","_applyEditing","field","_applyTemporary","_applyStatus","getRelatedTarget","__cancelEditing","_onKeypress","getKeyIdentifier","setDesktop","_maintainFileActions","setUploadHint","showFileActions","themeable","gap","inheritable","acceptUpload","_applyViewMode","right","handled","String","firstUp","__scaleWithAspect","isShowFileActions","editorConf","viewerConf","openButton","sizeHint","getSizeHint","padding","setPadding","_maintainFileTypePosition","iconBounds","prop","zIndex","anonymous","textAlign","textColor","Tap","getNativeEvent","capture","releaseCapture","_handleIcon","getShow","_showChildControl","_excludeChildControl","SvgIcon","schemaNode","__elementCache","_schemaNode","_dataProvider","Provider","__metaElementCache","getLastOpenedTag","text","tags","closingTags","tagPosition","lastIndexOf","tag","openedTag","contentSearch","currentAttribute","attrMatch","filteredElementSearch","tagName","isAttributeSearch","isContentSearch","splice","findElements","elementName","maxDepth","currentDepth","inMeta","cache","allowedRootElements","pages","undefined","allowedElements","getAllowedElements","result","isItemAvailable","itemName","maxOccurs","count","getElementString","prefix","insertText","getOwnPropertyNames","allowedAttributes","attr","attribute","isOptional","defaultValue","requiredElements","getRequiredElements","allowedContent","getAllowedContent","_text","_grouping","trim","elemName","getAvailableElements","usedItems","availableItems","childElem","max","CompletionItemKind","Field","detail","documentation","getDocumentation","getAvailableAttributes","usedChildTags","attrs","Property","getTypeString","triggerCharacters","provideCompletionItems","position","vmap","textUntilPosition","getValueInRange","lineNumber","column","completeText","metaEndPos","textMeta","mappingNames","stylingNames","templates","templatesStart","rawTemplate","nameMatch","variables","vregex","lastOpenedTag","openedTags","openedAttributes","cleanedText","lastChild","fromString","lastElementChild","lastFound","searchedElement","getDesigns","sugg","suggestions","getTransforms","getPlugins","getIcons","getInfluxDBs","getInfluxDBFields","EnumMember","variableName","Variable","mappingName","stylingName","getNamedItem","getInfluxDBTags","getInfluxDBValues","getRrds","typeFilter","getMediaFiles","currentItem","getEnumeration","Value","TEMPLATES","getTemplates","filterText","Version","VERSION","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","KeepWhitespace","Struct","Method","initOptions","Option","grid","Grid","setColumnFlex","setColumnAlign","_originalName","_originalOptions","nameField","__unbindModel","emptyOption","_onDeleteOption","resetKey","resetValue","removed","_onAddOption","row","required","setNullValueTitle","setAllowNull","OptionListItem","__spriteUrl","__useElement","setAttributeNS","removeAttribute","_createContentElement","svgElem","svg","__cache","getDataProviderClient","_getFromCache","cacheId","__clearFromCache","_addToCache","__getData","designName","rpc","rpcContext","converterContext","cached","handleResponse","_parseDpResponse","measurement","x","sug","fsClient","recursive","transforms","Transform","registry","suggestion","lname","plugins","qxParts","PartLoader","getParts","partName","pluginName","icons","iconName","setKey","change","_applyChange","keyField","valueField","keyTitleField","valueTitleField","hide"],"mappings":"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","sourcesContent":["/**\n * All Widgets that need to handle actions from the managers action event, need to implement this interface.\n */\nqx.Interface.define('cv.ui.manager.IActionHandler', {\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * Checks if the action handle can process the action.\n     * @param actionName {String} action name\n     */\n    canHandleAction: function(actionName) {},\n\n    /**\n     * Executes the action handling.\n     * @param actionName {String} action name\n     * @param data {var} action payload\n     */\n    handleAction: function (actionName, data) {}\n  }\n});\n","/**\n * Mixin for all classes that have to handle event on the 'cv.manager.file' topic.\n * Those classes need to implement the cv.ui.manager.control.IFileEventHandler interface.\n */\nqx.Mixin.define('cv.ui.manager.control.MFileEventHandler', {\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    if (qx.core.Environment.get('qx.debug')) {\n      qx.core.Assert.assertInterface(this, cv.ui.manager.control.IFileEventHandler);\n    }\n    if (!this._disableFileEvents) {\n      qx.event.message.Bus.subscribe('cv.manager.file', this._handleFileEvent, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _disableFileEvents: false\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.file', this._handleFileEvent, this);\n  }\n});\n","/**\n *\n */\nqx.Interface.define('cv.ui.manager.control.IFileEventHandler', {\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _handleFileEvent: function (ev) {}\n  }\n});\n","/**\n * Main class of the CometVisu file manager.\n * @author Tobias Bräutigam\n * @since 0.12.0\n *\n * @asset(manager/*)\n */\nqx.Class.define('cv.ui.manager.Main', {\n  extend: qx.core.Object,\n  type: \"singleton\",\n  include: [\n    cv.ui.manager.control.MFileEventHandler\n  ],\n  implement: [cv.ui.manager.IActionHandler, cv.ui.manager.control.IFileEventHandler],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    iconfont.material.Load;\n    cv.ui.manager.model.BackupFolder.getInstance();\n    this._checkEnvironment();\n    this.initOpenFiles(new qx.data.Array());\n    this.__actionDispatcher = cv.ui.manager.control.ActionDispatcher.getInstance();\n    this.__actionDispatcher.setMain(this);\n\n    this.__initCommands();\n    this._draw();\n\n    qx.event.message.Bus.subscribe('cv.manager.*', this._onManagerEvent, this);\n\n    // Initialize tooltip manager\n    qx.ui.tooltip.Manager.getInstance();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ROOT: null\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    openFiles: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    /**\n     * Current selected folder (if a file is selected its parent folder) is writeable.\n     */\n    writeableFolder: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeWriteableFolder'\n    },\n\n    currentFolder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyCurrentFolder',\n      event: 'changeCurrentFolder'\n    },\n\n    currentSelection: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyCurrentSelection',\n      event: 'changeCurrentSelection'\n    },\n\n    deleteableSelection: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeDeleteableSelection'\n    },\n\n    renameableSelection: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeRenameableSelection'\n    },\n\n    visible: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeVisible',\n      apply: '_applyVisible'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __previewFileIndex: null,\n    __root: null,\n    _pane: null,\n    _tree: null,\n    _stack: null,\n    _oldCommandGroup: null,\n    _managerCommands: null,\n    _mainContent: null,\n    _openFilesController: null,\n    _hiddenConfigFakeFile: null,\n    __actionDispatcher: null,\n\n    _applyVisible: function (value) {\n      var manager = qx.core.Init.getApplication().getCommandManager();\n      if (value) {\n        manager.setActive(this._managerCommands);\n        qx.bom.element.Style.set(this.__getRoot(), \"display\", \"block\");\n      } else {\n        manager.setActive(this._oldCommandGroup);\n        qx.bom.element.Style.set(this.__getRoot(), \"display\", \"none\");\n      }\n    },\n\n    _checkEnvironment: function () {\n      cv.io.rest.Client.getFsClient().checkEnvironmentSync(function (err, res) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else if (res) {\n          res.forEach(function (env) {\n            switch (env.entity) {\n              case '.':\n                // config folder must be writeable\n                if ((env.state & 1) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder does not exists'));\n                } else if ((env.state & 2) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder is not readable'));\n                } else if ((env.state & 4) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder is not writeable'));\n                }\n                break;\n\n              case 'backup':\n                if ((env.state & 4) === 0 && (env.state & 1) === 1) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('backup folder is not writeable'));\n                }\n                break;\n\n              case 'media':\n                if ((env.state & 4) === 0 && (env.state & 1) === 1) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('media folder is not writeable'));\n                }\n                break;\n\n              case 'hidden.php':\n                if ((env.state & 4) === 0 && (env.state & 1) === 1) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Hidden configuration file (hidden.php) not writeable'));\n                }\n                break;\n            }\n          }, this);\n        }\n      }, this);\n    },\n\n    canHandleAction: function (actionName) {\n      if (actionName === 'delete' && this.getCurrentSelection() && !this.getCurrentSelection().isWriteable()) {\n        // needs a writeable file\n        return false;\n      }\n      return ['close', 'quit', 'new-file', 'new-config-file', 'new-folder', 'delete', 'upload', 'clone'].includes(actionName);\n    },\n\n    handleAction: function (actionName, data) {\n      switch (actionName) {\n        case 'close':\n          this.closeCurrentFile();\n          break;\n\n        case 'quit':\n          this.setVisible(false);\n          break;\n\n        case 'new-file':\n          this._onCreate('file', null, data);\n          break;\n\n        case 'new-config-file':\n          cv.io.rest.Client.getFsClient().readSync({path: '.templates/visu_config.xml'}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Cannot load config template'));\n            } else {\n              this._onCreate('config', res, cv.ui.manager.model.FileItem.ROOT);\n            }\n          }, this);\n          break;\n\n        case 'clone':\n          cv.io.rest.Client.getFsClient().readSync({path: data.file.getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Cannot load file content'));\n            } else {\n              if (data.file.isConfigFile()) {\n                // config files need to be cloned in the root folder\n                this._onCreate('config', res, cv.ui.manager.model.FileItem.ROOT);\n              } else {\n                this._onCreate('file', res);\n              }\n            }\n          }, this);\n          break;\n\n        case 'new-folder':\n          this._onCreate('dir', null, data);\n          break;\n\n        case 'delete':\n          this._onDelete(data);\n          break;\n\n        case 'upload':\n          // nothing to to, this is handled in another way\n          break;\n\n        default:\n          this.warn(actionName + ' handling is not implemented yet!');\n          break;\n      }\n    },\n\n    _handleFileEvent: function (ev) {\n      var data = ev.getData();\n      if (data.action === 'deleted') {\n        // check if file is currently opened and close it\n        var openFiles = this.getOpenFiles().copy();\n        openFiles.some(function (openFile) {\n          if (openFile.getFile().isRelated(data.path)) {\n            this.closeFile(openFile);\n          }\n        }, this);\n        if (this.getCurrentFolder() && this.getCurrentFolder().getFullPath() === data.path) {\n          this.resetCurrentFolder();\n        }\n      } else {\n        this.warn('unhandled file event', data.action);\n      }\n    },\n\n    _onManagerEvent: function (ev) {\n      var data = ev.getData();\n      switch (ev.getName()) {\n        case 'cv.manager.compareFiles':\n          this.openFile(data, false);\n          break;\n\n        case 'cv.manager.openWith':\n          this.openFile(data.file || this.getCurrentSelection(), false, data.handler);\n          break;\n\n        case 'cv.manager.open':\n          this.openFile(data || this.getCurrentSelection(), false);\n          break;\n      }\n    },\n\n    /**\n     * open selected file in preview mode\n     * @private\n     */\n    _onChangeTreeSelection: function (ev) {\n      var data = ev.getData();\n      if ((cv.ui.manager.model.Preferences.getInstance().isQuickPreview() && data.mode === 'tap') || data.mode === 'dbltap') {\n        this.__openSelectedFile(data.node, data.mode);\n      }\n      var node = data.node;\n      if (node) {\n        if (data.node.getType() === 'file') {\n          this.setCurrentFolder(data.node.getParent());\n        } else {\n          this.setCurrentFolder(node);\n        }\n        this.setCurrentSelection(node);\n      } else {\n        this.resetCurrentFolder();\n        this.resetCurrentSelection();\n      }\n    },\n\n    __openSelectedFile: function (node, mode) {\n      if (node) {\n        if (node.getType() === 'file') {\n          this.openFile(node, mode === 'tap');\n        } else if (mode === 'dbltap') {\n          // edit folder name on dbltap\n          node.setEditing(true);\n        }\n      }\n    },\n\n    _applyCurrentFolder: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('writeable', this, 'writeableFolder');\n      } else {\n        this.resetWriteableFolder();\n      }\n    },\n\n    _applyCurrentSelection: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('writeable', this, 'deleteableSelection');\n        value.bind('inTrash', this, 'renameableSelection', {\n          converter: function (value) {\n            return !value;\n          }\n        });\n      } else {\n        this.resetDeleteableSelection();\n      }\n    },\n\n    _onChangeFileSelection: function () {\n      var sel = this._openFilesController.getSelection();\n      if (sel.length > 0) {\n        var openFile = sel.getItem(0);\n        var file = openFile.getFile();\n        var editorConfig;\n        var handlerId = openFile.getHandlerId();\n        if (handlerId) {\n          editorConfig = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandlerById(handlerId);\n        } else {\n          editorConfig = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n        }\n        if (!editorConfig.instance) {\n          editorConfig.instance = new editorConfig.Clazz();\n          editorConfig.instance.setFile(file);\n          this._stack.add(editorConfig.instance);\n        } else {\n          editorConfig.instance.setFile(file);\n        }\n        this._stack.setSelection([editorConfig.instance]);\n        this.__actionDispatcher.setFocusedWidget(editorConfig.instance);\n\n        cv.ui.manager.core.GlobalState.getInstance().setOpenedFocusedFile(file);\n      } else {\n        cv.ui.manager.core.GlobalState.getInstance().resetOpenedFocusedFile();\n      }\n    },\n\n    /**\n     *\n     * @param file {cv.ui.manager.model.FileItem} the file to open\n     * @param preview {Boolean} open the file in preview mode\n     * @param handlerId {String} use this handler to open the file (classname as string)\n     * @param handlerType {String} use a special handler type, e.g. 'edit' if you want to open the file with an editor and not a viewer\n     */\n    openFile: function (file, preview, handlerId, handlerType) {\n      var openFiles = this.getOpenFiles();\n      var openFile;\n      if (!handlerId) {\n        var handlerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, handlerType);\n\n        if (!handlerConf) {\n          // no handler\n          cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('Cannot open file: \"%1\"', file.getName()));\n          return;\n        } else {\n          handlerId = handlerConf.Clazz.classname;\n        }\n      }\n      var isOpen = openFiles.some(function (of) {\n        if (of.getFile() === file && handlerId === of.getHandlerId()) {\n          openFile = of;\n          return true;\n        }\n      });\n      if (!openFile) {\n        openFile = new cv.ui.manager.model.OpenFile(file, handlerId);\n      }\n      if (preview === true) {\n        if (!openFile.isPermanent()) {\n          if (this.__previewFileIndex !== null && openFiles.getItem(this.__previewFileIndex) && !openFiles.getItem(this.__previewFileIndex).isPermanent()) {\n            openFiles.setItem(this.__previewFileIndex, openFile);\n          } else {\n            this.__previewFileIndex = openFiles.length;\n            openFiles.push(openFile);\n          }\n          // do not 'downgrade' the permanent state\n          openFile.setPermanent(false);\n        }\n      } else {\n        if (!isOpen && (this.__previewFileIndex === null || openFiles.indexOf(openFile) !== this.__previewFileIndex)) {\n          openFiles.push(openFile);\n        }\n        openFile.setPermanent(true);\n        this.__previewFileIndex = null;\n      }\n      this._openFilesController.getTarget().setModelSelection([openFile]);\n    },\n\n    closeFile: function (openFile, force) {\n      var file = openFile.getFile();\n      if (!openFile.isCloseable()) {\n        return;\n      }\n\n      // check if this file is modified\n      if (file.isModified() && !force) {\n        // check if temporary\n        var message = qx.locale.Manager.tr('This file has unsaved changes that will be lost when you close it. Do you really want to close the file?');\n        if (file.isTemporary()) {\n          message = qx.locale.Manager.tr('This file has not been saved on the backend yet. It will be lost when you close it. Do you really want to close the file?');\n        }\n        dialog.Dialog.confirm(message, function (confirmed) {\n          if (confirmed) {\n            this.closeFile(openFile, true);\n            if (file.isTemporary()) {\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'deleted',\n                path: file.getFullPath()\n              });\n            }\n          }\n        }, this, qx.locale.Manager.tr('Unsaved changes'));\n        return;\n      }\n      openFile.resetPermanent();\n      var currentSelection = this._openFilesController.getSelection();\n      var selectionIndex = -1;\n      var openFiles = this.getOpenFiles();\n      if (currentSelection.length > 0 && currentSelection.getItem(0) === openFile) {\n        // we need to select another file after this one got closed\n        selectionIndex = openFiles.indexOf(openFile);\n      }\n      openFiles.remove(openFile);\n      var currentHandler = this._stack.getSelection()[0];\n      if (qx.Class.hasInterface(currentHandler.constructor, cv.ui.manager.editor.IEditor)) {\n        // reset the handlers file\n        currentHandler.resetFile();\n      }\n      if (this.getOpenFiles().length === 0) {\n        this._stack.resetSelection();\n        this.__actionDispatcher.resetFocusedWidget();\n        this.__previewFileIndex = null;\n      }\n      if (selectionIndex > 0) {\n        this._openFilesController.getSelection().replace(openFiles.getItem(selectionIndex - 1));\n      } else if (selectionIndex === 0 && openFiles.length > 0) {\n        this._openFilesController.getSelection().replace(openFiles.getItem(0));\n      }\n\n      if (file instanceof cv.ui.manager.model.CompareFiles) {\n        var fileHandlerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n        fileHandlerConf.instance.clear();\n        if (openFiles.filter(function (openFile) {\n          return openFile.getFile() instanceof cv.ui.manager.model.CompareFiles;\n        }).length === 0) {\n          fileHandlerConf.instance.destroy();\n          fileHandlerConf.instance = null;\n        }\n      } else if (window.monaco && openFile.getHandlerId() === 'cv.ui.manager.editor.Source') {\n        // close textmodel in monaco editor if exists\n        var oldModel = window.monaco.editor.getModel(file.getUri());\n        if (oldModel) {\n          oldModel.dispose();\n        }\n      }\n    },\n\n    closeCurrentFile: function () {\n      var selected = this._openFilesController.getSelection().length > 0 ? this._openFilesController.getSelection().getItem(0) : null;\n      if (selected) {\n        this.closeFile(selected);\n      }\n    },\n\n    _onCloseFile: function (ev) {\n      this.closeFile(ev.getData());\n    },\n\n    __getRoot: function () {\n      if (!this.__root) {\n        this.__root = qx.dom.Element.create('div', {\n          id: 'manager',\n          style: 'position: absolute; top: 0; left: 0; right: 0; bottom: 0;'\n        });\n        qx.dom.Element.insertEnd(this.__root, document.body);\n        qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);\n      }\n      return this.__root;\n    },\n\n    __initCommands: function () {\n      var group = this._managerCommands = new qx.ui.command.Group();\n      group.add('save', new qx.ui.command.Command('Ctrl+S'));\n      group.add('save-as', new qx.ui.command.Command('Ctrl+Shift+S'));\n      // this command will close the browser window, thats not what we want\n      // group.add('close', new qx.ui.command.Command('Ctrl+W'));\n      group.add('new-file', new qx.ui.command.Command('Ctrl+N'));\n      group.add('new-folder', new qx.ui.command.Command('Ctrl+Shift+N'));\n      group.add('quit', new qx.ui.command.Command('Ctrl+Q'));\n      // group.add('delete', new qx.ui.command.Command('Ctrl+Del'));\n\n      var renameCommand = new qx.ui.command.Command('F2');\n      group.add('rename', renameCommand);\n      this.bind('renameableSelection', renameCommand, 'enabled');\n\n\n      // edit commands (adding cut/copy/paste command will deactivate the native browser functions)\n      // and as we cannot simulate pasting from clipboard, we do not use them here\n      // group.add('cut', new qx.ui.command.Command('Ctrl+X'));\n      // group.add('copy', new qx.ui.command.Command('Ctrl+C'));\n      // group.add('paste', new qx.ui.command.Command('Ctrl+V'));\n\n      var manager = qx.core.Init.getApplication().getCommandManager();\n      this._oldCommandGroup = manager.getActive();\n      manager.add(group);\n      manager.setActive(group);\n    },\n\n    _onDelete: function (file) {\n      var item = file || this.getCurrentSelection();\n      if (item) {\n        cv.ui.manager.control.FileController.getInstance().delete(item);\n      }\n    },\n\n    _onChangeStackSelection: function (ev) {\n      var selection = ev.getData();\n      var openFiles = [];\n      // sync tab selection with currently visible page\n      selection.forEach(function(page) {\n        var openFile = this.getOpenFiles().toArray().find(function (openFile) {\n          return openFile.getFile() === page.getFile() && openFile.getHandlerId() === page.classname;\n        });\n        if (openFile) {\n          openFiles.push(openFile);\n        }\n      }, this);\n\n      this._openFilesController.getSelection().replace(openFiles);\n    },\n\n    __getFileNamePrompt: function (message, callback, context, value, caption) {\n      var prompt = new dialog.Prompt({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        value: value || null,\n        caption: caption || \"\",\n        filter: /[\\w\\d_\\-\\.\\s]/\n      })\n      prompt.show();\n      return prompt;\n    },\n\n    _onCreate: function (type, content, folder) {\n      var currentFolder = folder || this.getCurrentFolder();\n      if (!currentFolder) {\n        return;\n      }\n      var message, existsMessage;\n      if (type === 'config') {\n        message = qx.locale.Manager.tr('Please enter the name of the new configuration (without \"visu_config_\" at the beginning and \".xml\" at the end)');\n        existsMessage = qx.locale.Manager.tr('A configuration with this name already exists.');\n      } else if (type === 'file') {\n        message = qx.locale.Manager.tr('Please enter the file name.');\n        existsMessage = qx.locale.Manager.tr('A file with this name already exists.');\n      } else {\n        message = qx.locale.Manager.tr('Please enter the folder name.');\n        existsMessage = qx.locale.Manager.tr('A folder with this name already exists.');\n      }\n      var handlePrompt = function (name) {\n        if (!name) {\n          // canceled\n          return;\n        }\n        var filename = name;\n        // add visu_config_..-xml\n        if (type === 'config') {\n          var match = /visu[_-]config[_-]([\\w\\d_-]+)(\\.xml)?/.exec(name);\n          if (match) {\n            name = match[1];\n          }\n          filename = 'visu_config_' + name + '.xml';\n        }\n        // check if name does not exist\n        var exists = currentFolder.getChildren().some(function (child) {\n          if (child.getName() === filename && child.getType() === type) {\n            return true;\n          }\n        }, this);\n\n        if (exists) {\n          cv.ui.manager.snackbar.Controller.error(existsMessage);\n          this.__getFileNamePrompt(message, handlePrompt, this, name);\n        } else {\n          var item = new cv.ui.manager.model.FileItem(filename, currentFolder.getFullPath(), currentFolder);\n          item.set({\n            type: type === 'config' ? 'file' : type,\n            readable: true,\n            writeable: true,\n            loaded: true,\n            modified: true,\n            temporary: true,\n            parentFolder: currentFolder.getFullPath(),\n            content: content || ''\n          });\n          if (type === 'dir') {\n            // create directory directly\n            cv.io.rest.Client.getFsClient().createSync({\n              path: item.getFullPath(),\n              type: type\n            }, null, function (err) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('Folder has been created'));\n                item.set({\n                  modified: false,\n                  temporary: false\n                });\n                qx.event.message.Bus.dispatchByName(item.getBusTopic(), {\n                  type: 'created',\n                  file: item,\n                  data: '',\n                  source: this\n                });\n              }\n            }, this);\n          }\n          currentFolder.addChild(item);\n          currentFolder.sortElements();\n          this._tree.refresh();\n          this._tree.setSelection(item);\n          // do not open new folders\n          if (type !== 'dir') {\n            // open the file in an editor\n            this.openFile(item, false, null, 'edit');\n          }\n        }\n      };\n\n      this.__getFileNamePrompt(message, handlePrompt, this);\n    },\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable : function (elem) {\n      while (elem && elem.nodeType === 1) {\n        if (elem.getAttribute(\"qxDroppable\") === \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    // overridden\n    _draw: function () {\n      var domRoot = this.__getRoot();\n      var root = new qx.ui.root.Inline(domRoot, true, true);\n      this.bind('visible', root, 'visibility', {\n        converter: function (visible) {\n          return visible ? 'visible' : 'excluded';\n        }\n      });\n      root.addListenerOnce('appear', function () {\n        // disable file drop\n        var element = root.getContentElement().getDomElement();\n        element.addEventListener('drop', function (ev) {\n          var target = this.__findDroppable(ev.target);\n          if (!target) {\n            ev.preventDefault();\n          }\n        }.bind(this));\n        element.addEventListener('dragover', function (ev) {\n          var target = this.__findDroppable(ev.target);\n          if (!target) {\n            ev.preventDefault();\n          }\n        }.bind(this));\n      }, this);\n      qx.core.Init.getApplication().setRoot(root);\n      root.setLayout(new qx.ui.layout.Canvas());\n\n      var snackbar = cv.ui.manager.snackbar.Controller.getInstance();\n      root.add(snackbar, {\n        bottom: 10,\n        left: 200\n      });\n\n      function resize() {\n        var bounds = root.getBounds();\n        snackbar.setLayoutProperties({\n          bottom: 10,\n          left: Math.round(bounds.width / 2) - 150\n        });\n        snackbar.setMaxHeight(bounds.height - 40);\n      }\n      root.addListener('resize', resize, this);\n      root.addListener('appear', resize, this);\n      window.addEventListener('resize', function () {\n        // sync window height with manager height\n        domRoot.style.height = window.innerHeight + 'px';\n      });\n\n      var main = new qx.ui.container.Composite(new qx.ui.layout.Dock());\n      root.add(main, {edge: 0});\n      // menu on top\n      var menuBar = cv.ui.manager.MenuBar.getInstance();\n      main.add(menuBar, {edge: 'north'});\n\n      var uploadButton = menuBar.getButton('upload');\n      var uploadManager = new cv.ui.manager.upload.UploadMgr(uploadButton);\n      this.bind('currentFolder', uploadManager, 'folder');\n\n      this._pane = new qx.ui.splitpane.Pane();\n      main.add(this._pane, {edge: 'center'});\n\n      var rootFolder = cv.ui.manager.model.FileItem.ROOT = new cv.ui.manager.model.FileItem('.');\n      var fakeIconFile = cv.ui.manager.model.FileItem.getIconFile();\n      // TODO: needs to be verified by the backend\n      rootFolder.set({\n        overrideIcon: true,\n        writeable: true,\n        readable: true,\n        open: true,\n        fakeChildren: [fakeIconFile],\n        icon: cv.theme.dark.Images.getIcon('home', 18)\n      });\n      this.setCurrentFolder(rootFolder);\n      this._tree = new cv.ui.manager.tree.FileSystem(rootFolder);\n      this._tree.addListener(\"changeSelection\", this._onChangeTreeSelection, this);\n\n      // left container\n      var leftContainer = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n      // left toolbar\n      var leftBar = new cv.ui.manager.ToolBar(uploadManager);\n      this.bind('currentFolder', leftBar, 'folder');\n      this.bind('currentSelection', leftBar, 'file');\n      leftBar.addListener('reload', this._tree.reload, this._tree);\n\n      // globally bind writeable folder to command for new files\n      var buttonConfig = menuBar.getButtonConfiguration();\n      this.bind('writeableFolder', buttonConfig['new-file'].args[2], 'enabled');\n      this.bind('writeableFolder', buttonConfig['new-folder'].args[2], 'enabled');\n      // this.bind('deleteableSelection', buttonConfig['delete'].args[2], 'enabled');\n\n      leftContainer.add(leftBar);\n      leftContainer.add(this._tree, {flex: 1});\n      this._pane.add(leftContainer, 0);\n      cv.ui.manager.model.Preferences.getInstance().bind('expertMode', leftContainer, 'visibility', {\n        converter: function (value) {\n          return value ? 'visible' : 'excluded';\n        }\n      });\n\n      this._mainContent = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n      // tab list\n      var list = new qx.ui.form.List(true);\n      list.setAppearance('open-files-tabs');\n      this._openFilesController = new qx.data.controller.List(this.getOpenFiles(), list, \"file.name\");\n      this._openFilesController.setDelegate({\n        createItem: function () {\n          var item = new cv.ui.manager.form.FileTabItem();\n          item.addListener('close', this._onCloseFile, this);\n          return item;\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindDefaultProperties(item, index);\n          controller.bindProperty('file.permanent', 'permanent', null, item, index);\n          controller.bindProperty('file.modified', 'modified', null, item, index);\n          controller.bindProperty('icon', 'icon', null, item, index);\n          controller.bindProperty('closeable', 'closeable', null, item, index);\n        }\n      });\n      list.addListener('changeSelection', this._onChangeFileSelection, this);\n      this._mainContent.add(list);\n\n      this._stack = new qx.ui.container.Stack();\n      this._stack.addListener('changeSelection', this._onChangeStackSelection, this);\n      this._mainContent.add(this._stack, {flex: 1});\n      this._pane.add(this._mainContent, 1);\n\n      var startOpenFile = new cv.ui.manager.model.OpenFile(rootFolder, 'cv.ui.manager.Start');\n      startOpenFile.setCloseable(false);\n      this.getOpenFiles().push(startOpenFile);\n      list.setModelSelection([startOpenFile]);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects(\n      '_pane', '_tree', '_stack', '_mainContent', '_openFilesController'\n    );\n    // restore former command group\n    var application = qx.core.Init.getApplication();\n    var manager = application.getCommandManager();\n    manager.setActive(this._oldCommandGroup);\n    this._oldCommandGroup = null;\n\n    // defer the reset to let the dispose queue to be emptied before removing the root\n    new qx.util.DeferredCall(function () {\n      application.resetRoot();\n    }).schedule();\n\n    document.body.removeChild(this.__root);\n    this.__root = null;\n    this.__actionDispatcher = null;\n\n    qx.event.message.Bus.unsubscribe('cv.manager.*', this._onManagerEvent, this);\n\n    // destroy the singleton instance\n    delete cv.ui.manager.Main.$$instance;\n  }\n});\n","/**\n * Represents an entry in the filesystem (file or folder).\n */\nqx.Class.define('cv.ui.manager.model.FileItem', {\n  extend: qx.core.Object,\n  include: [\n    qx.data.marshal.MEventBubbling,\n    cv.ui.manager.control.MFileEventHandler\n  ],\n  implement: [cv.ui.manager.control.IFileEventHandler],\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name, path, parent, fakeChildren) {\n    this.base(arguments);\n    this.initChildren(new qx.data.Array());\n    if (fakeChildren) {\n      this.setFakeChildren(fakeChildren);\n    }\n    if (path) {\n      if (!path.endsWith('/')) {\n        path += '/';\n      }\n      this.__path = path;\n    }\n    if (name) {\n      this.setName(name);\n    }\n    if (parent) {\n      this.setParent(parent);\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ROOT: null,\n    _fakeIconFile: null,\n    _hiddenConfigFakeFile: null,\n    _acceptedFiles: {\n      '.': '*.xml',\n      'media': '*.js,*.jpg,*.gif,*.png,*.conf,*.svg,*.md,*.rst,*,css,*.txt'\n    },\n\n    isConfigFile: function (path) {\n      return /visu_config.*\\.xml/.test(path);\n    },\n\n    getConfigName: function (filename) {\n      var match = /visu_config_?([^.]+)\\.xml/.exec(filename);\n      if (match) {\n        return match[1];\n      }\n      return null;\n    },\n\n    getIconFile: function () {\n      if (!this._fakeIconFile) {\n        this._fakeIconFile = new cv.ui.manager.model.FileItem('CometVisu-Icons', '', cv.ui.manager.model.FileItem.ROOT).set({\n          type: 'file',\n          overrideIcon: true,\n          writeable: false,\n          readable: true,\n          open: true,\n          loaded: true,\n          hasChildren: false,\n          fake: true,\n          icon: cv.theme.dark.Images.getIcon('icons', 18)\n        });\n      }\n      return this._fakeIconFile;\n    },\n\n    getHiddenConfigFile: function () {\n      if (!this._hiddenConfigFakeFile) {\n        this._hiddenConfigFakeFile = new cv.ui.manager.model.FileItem('hidden.php', '', cv.ui.manager.model.FileItem.ROOT).set({\n          hasChildren: false,\n          loaded: true,\n          readable: true,\n          writeable: true,\n          overrideIcon: true,\n          icon: cv.theme.dark.Images.getIcon('hidden-config', 15),\n          type: \"file\",\n          fake: true,\n          displayName: qx.locale.Manager.tr('Hidden configuration')\n        });\n      }\n      return this._hiddenConfigFakeFile;\n    },\n\n    getAcceptedFiles: function (folder) {\n      return this._acceptedFiles[folder.getFullPath()];\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    open : {\n      check : \"Boolean\",\n      event : \"changeOpen\",\n      apply : \"_onOpen\",\n      init : false\n    },\n\n    loaded : {\n      check : \"Boolean\",\n      event : \"changeLoaded\",\n      init : false\n    },\n\n    loading : {\n      check : \"Boolean\",\n      event : \"changeLoading\",\n      init : false\n    },\n\n    parent : {\n      event : \"changeParent\",\n      init : null\n    },\n\n    children : {\n      check : \"qx.data.Array\",\n      event : \"changeChildren\",\n      apply: \"_applyEventPropagation\",\n      deferredInit : true\n    },\n\n    fakeChildren: {\n      check: \"Array\",\n      nullable: true\n    },\n\n    displayName: {\n      check: 'String',\n      init: \"\",\n      event: 'changeDisplayName'\n    },\n\n    /**\n     * Fake items only exist in the client not in the backend\n     */\n    fake: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeFake'\n    },\n\n    overrideIcon: {\n      check: 'Boolean',\n      init: false\n    },\n\n    icon: {\n      check: 'String',\n      nullable: true,\n      event: 'changeIcon'\n    },\n\n    hash: {\n      check: 'Number',\n      nullable: true\n    },\n\n    editing: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeEditing'\n    },\n\n    /**\n     * A special configuration option for mulitple purposes, e.g. creating a fake FileItem with a special\n     * behaviour like an \"Add new File\" used in writeable Folders.\n     */\n    special: {\n      check: 'String',\n      nullable: true,\n      event: 'changeSpecial'\n    },\n\n    /**\n     * Temporary file are not save in the backend yet\n     */\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTemporary'\n    },\n\n    /**\n     * Validation result for this files content (e.g. config file validation)\n     */\n    valid: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeValid'\n    },\n\n    /**\n     * Temporary content to show, e.g. for new files, when there is no 'real' file with content yet to request from the backend\n     * this content should be shown\n     */\n    content: {\n      check: 'String',\n      nullable: true\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    },\n\n    // Backend properties\n\n    hasChildren : {\n      check : \"Boolean\",\n      event : \"changeHasChildren\",\n      apply : \"_applyHasChildren\",\n      init : false\n    },\n\n    name : {\n      check : \"String\",\n      event : \"changeName\",\n      init : \"\",\n      apply: '_applyName'\n    },\n\n    type: {\n      check: ['dir', 'file'],\n      transform: \"_toLowerCase\",\n      nullable: true,\n      apply: '_maintainIcon'\n    },\n\n    parentFolder: {\n      check: 'String',\n      nullable: true\n    },\n\n    readable: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeReadable'\n    },\n\n    writeable: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeWriteable'\n    },\n\n    mounted: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMounted'\n    },\n\n    trash: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTrash'\n    },\n\n    inTrash: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeInTrash'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __path: null,\n    __fullPath: null,\n    __onLoadCallback: null,\n\n    _toLowerCase: function (name) {\n      return name.toLowerCase();\n    },\n\n    isRelated: function (path) {\n      return this.getFullPath() === path;\n    },\n\n    _handleFileEvent: function (ev) {\n      if (this.isFake()) {\n        return;\n      }\n      var data = ev.getData();\n      switch (data.action) {\n        case 'moved':\n          this.reload();\n          break;\n\n        case 'added':\n          if (this.getType() === 'dir' && data.path.startsWith(this.getFullPath())) {\n            this.reload();\n          }\n          break;\n\n        case 'deleted':\n          if (data.path === this.getFullPath()) {\n            // this item has been deleted\n            this.dispose();\n          } else if (this.getType() === 'dir' && data.path.startsWith(this.getFullPath())) {\n            // delete child\n            var children = this.getChildren();\n            children.some(function (child) {\n              if (child.getFullPath() === data.path) {\n                children.remove(child);\n                this.removeRelatedBindings(child);\n                return true;\n              }\n            }, this);\n          }\n          break;\n      }\n    },\n\n    _applyName: function (value, old) {\n      this.__fullPath = null;\n      if (value && (this.getDisplayName() === null || this.getDisplayName() === old)) {\n        // use name as default display name\n        this.setDisplayName(value);\n      }\n    },\n\n    getPath: function () {\n      if (!this.__path) {\n        var parentFolder = this.getParentFolder();\n        if (!parentFolder) {\n          parentFolder = '';\n        } else if (!parentFolder.endsWith('/')) {\n          parentFolder += '/';\n        }\n        this.__path = parentFolder;\n      }\n      return this.__path;\n    },\n\n    _onOpen : function(value){\n\n      if(!this.isLoaded() && value) {\n        this.load();\n      }\n      this._maintainIcon();\n    },\n\n    _maintainIcon: function () {\n      if (!this.isOverrideIcon()) {\n        if (this.getType() === 'file') {\n          this.setIcon(cv.theme.dark.Images.getIcon('file', 18));\n        } else if (this.isTrash()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('trash', 18));\n        } else if (this.isOpen()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('folder-open', 18));\n        } else if (this.isMounted()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('mounted-folder', 18));\n        } else {\n          this.setIcon(cv.theme.dark.Images.getIcon('folder', 18));\n        }\n      }\n    },\n\n    isConfigFile: function () {\n      return cv.ui.manager.model.FileItem.isConfigFile(this.getName());\n    },\n\n    _applyHasChildren: function (value) {\n      if (value === true && this.getChildren().length === 0) {\n        // add dummy child\n        this.getChildren().push(new cv.ui.manager.model.FileItem(''));\n      }\n    },\n\n    unload: function() {\n      this.setLoaded(false);\n      this.setLoading(false);\n      this.getChildren().removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n    },\n\n    reload : function(callback, context) {\n      this.unload();\n      return this.load(callback, context);\n    },\n\n    addChild: function (child) {\n      var oldParent = child.getParent();\n      if (oldParent !== this) {\n        oldParent.getChildren().remove(child);\n        oldParent.removeRelatedBindings(child);\n      }\n      child.setParent(this);\n      if (child.getType() !== \"dir\" || !child.isMounted()) {\n        // inherit the mounted state from the parent folder\n        this.bind('mounted', child, 'mounted');\n      }\n      this.getChildren().push(child);\n    },\n\n    _onGet: function (data) {\n      var children = this.getChildren();\n      children.removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n      if (data) {\n        data.forEach(function (node) {\n          var child = new cv.ui.manager.model.FileItem(null, null, this);\n          if (node.hasOwnProperty('children')) {\n            var nodeChildren = node.children;\n            delete node.children;\n            if (nodeChildren.length > 0) {\n              child.getChildren().replace(nodeChildren);\n              child.setLoaded(true);\n            }\n          }\n          child.set(node);\n          children.push(child);\n        }, this);\n      }\n      if (this.getFakeChildren()) {\n        children.append(this.getFakeChildren());\n      }\n      this.sortElements();\n\n      this.setLoaded(true);\n      if (this.__onLoadCallback) {\n        this.__onLoadCallback();\n      }\n      this.setLoading(false);\n    },\n\n    _onError: function (err) {\n      console.error(err);\n      cv.ui.manager.snackbar.Controller.error(err);\n      this.getChildren().removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n      this.setLoaded(true);\n      if (this.__onLoadCallback) {\n        this.__onLoadCallback();\n      }\n      this.setLoading(false);\n    },\n\n    load: function(callback, context) {\n      // If currently loading, delay ready\n      if (this.getType() === 'file') {\n        // nothing to load\n        this.setLoaded(true);\n        return;\n      } else if (this.isFake()) {\n        this.setLoaded(true);\n        if (this.getFakeChildren()) {\n          this.getChildren().append(this.getFakeChildren());\n        }\n        return;\n      }\n      if (this.isLoading()) {\n        if (callback) {\n          this.addListenerOnce(\"changeLoading\", callback, context);\n        }\n      }\n      // If not done yet, resolve the child elements of this container\n      else if (this.isLoaded()) {\n        if (callback) {\n          callback.apply(context);\n        }\n      }\n      else {\n        this.setLoading(true);\n        if (callback) {\n          this.__onLoadCallback = callback.bind(context || this);\n        }\n        cv.io.rest.Client.getFsClient().readSync({path: this.getFullPath()}, function (err, res) {\n          if (err) {\n            this._onError(err);\n          } else {\n            this._onGet(res);\n          }\n        }, this);\n      }\n    },\n\n    /**\n     * Returns the complete path needed for the REST API  to identify this file\n     * @returns {null}\n     */\n    getFullPath: function () {\n      if (!this.__fullPath) {\n        this.__fullPath = this.getPath() + this.getName();\n      }\n      return this.__fullPath;\n    },\n\n    getBusTopic: function () {\n      return 'cv.manager.fs.' + this.getFullPath().replace(/\\//g, '.');\n    },\n\n    /**\n     * Returns a fake URI that can be used to identify the file.\n     * Used by monaco editor as model URI.\n     * @returns {Uri}\n     */\n    getUri: function () {\n      return 'cv://' + this.getFullPath();\n    },\n\n    /**\n     * Returns the path to this file for requests over HTTP (not the REST API)\n     *\n     * Note: Please be aware that this path does not work if the file is in a mounted folder\n     * like the demo configs. The backend handles those mounts transparently to the client. But\n     * because of that the client does not know the real path to the file.\n     *\n     * @returns {string}\n     */\n    getServerPath: function () {\n      return qx.util.LibraryManager.getInstance().get('cv', 'resourceUri') + '/config/' + this.getFullPath();\n    },\n\n    /**\n     *  Sort entries: folders first, files then\n     */\n    sortElements: function () {\n      var sortF = function (a, b) {\n        if (a.getType() === 'dir') {\n          if (b.getType() === 'dir') {\n            if (a.isTrash()) {\n              return 1;\n            } else if (b.isTrash()) {\n              return -1;\n            }\n            return a.getName().localeCompare(b.getName());\n          } else {\n            return -1;\n          }\n        } else if (b.getType() === 'dir') {\n          return 1;\n        } else {\n          return a.getName().localeCompare(b.getName());\n        }\n      };\n      this.getChildren().sort(sortF);\n    },\n\n    openPath: function (path) {\n      var parts = qx.lang.Type.isArray(path) ? path : path.split('/');\n      var relPath = parts.shift();\n      this.getChildren().some(function (child) {\n        if (child.getName() === relPath) {\n          child.load(function () {\n            child.setOpen(true);\n            if (parts.length > 0) {\n              child.openPath(parts);\n            }\n          }, this);\n          return true;\n        }\n      }, this);\n    }\n  },\n  \n  /*\n  ***********************************************\n    DESTRUCTOR  \n  ***********************************************\n  */\n  destruct: function () {\n    this.__fullPath = null;\n  } \n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.BackupFolder', {\n  extend: cv.ui.manager.model.FileItem,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments, 'backup');\n    this.load();\n    qx.event.message.Bus.subscribe('cv.manager.fs.*', this._onFilesSystemMessage, this);\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _onFilesSystemMessage: function (ev) {\n      if (/^cv\\.manager\\.fs\\.visu_config.*\\.xml$/.test(ev.getName())) {\n        // Fs event on config file\n        var data = ev.getData();\n        if (['contentChanged', 'fsContentChanged'].includes(data.type)) {\n          // config file has been changed or restored, refresh the backups\n          this.reload();\n        }\n      }\n    },\n\n    /**\n     * Returns the list of existing backup files for the given file.\n     * @param file {cv.ui.manager.model.FileItem}\n     */\n    getBackupFiles: function (file) {\n      var files = [];\n      if (file.getType() === 'file') {\n        var pathparts = file.getFullPath().split('/');\n        pathparts.pop();\n        var path = pathparts.join('\\/');\n        var parts = file.getName().split('.');\n        var suffix = parts.pop();\n        var filename = parts.join('.');\n        var fileRegex = new RegExp(path + filename + '-([\\\\d]{14})\\\\.' + suffix);\n        this.getChildren().filter(function (backupFile) {\n          var match = fileRegex.exec(backupFile.getFullPath().replace('backup/', ''));\n          if (match) {\n            files.push({\n              date: new Date(\n                parseInt(match[1].substring(0,4)),\n                parseInt(match[1].substring(4,6))-1,\n                parseInt(match[1].substring(6,8)),\n                parseInt(match[1].substring(8,10)),\n                parseInt(match[1].substring(10,12)),\n                parseInt(match[1].substring(12,14))\n              ),\n              file: backupFile\n            });\n          }\n        }, this);\n      }\n      return files;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.fs.*', this._onFilesSystemMessage, this);\n  }\n});\n","/**\n * The ActionDispatcher listens to the events in the 'cv.manager.action' topic and\n * dispatched those events to the currently relevant handler (e.g. the save event to the opened editor).\n */\nqx.Class.define('cv.ui.manager.control.ActionDispatcher', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    qx.event.message.Bus.subscribe('cv.manager.action.*', this._onAction, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    focusedWidget: {\n      check: 'cv.ui.manager.IActionHandler',\n      nullable: true,\n      apply: 'updateBarButtons'\n    },\n\n    main: {\n      check: 'cv.ui.manager.Main',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    updateBarButtons: function () {\n      var menuBar = cv.ui.manager.MenuBar.getInstance();\n      var config = menuBar.getButtonConfiguration();\n      var button;\n      Object.keys(config).forEach(function (actionId) {\n        button = menuBar.getButton(actionId);\n        if (button) {\n          button.setEnabled(config[actionId].general || this.hasHandler(actionId));\n        }\n      }, this);\n    },\n\n    /**\n     * Check if there is an existing handler for the given actionName.\n     * @return {Boolean}\n     */\n    hasHandler: function (actionName) {\n      return !!this._getHandler(actionName);\n    },\n\n    _getHandler: function (actionName) {\n      var handler = this.getFocusedWidget();\n      var main = this.getMain();\n      if (handler && handler.canHandleAction(actionName)) {\n        return handler;\n      } else if (main && main.canHandleAction(actionName)) {\n        return main;\n      }\n    },\n\n    _onAction: function (ev) {\n      var topic = ev.getName();\n      var actionName = topic.split('.').pop();\n      var handler = this._getHandler(actionName);\n      if (handler) {\n        handler.handleAction(actionName, ev.getData());\n      } else {\n        this.warn('no action handler found for action: ' + actionName);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.subscribe('cv.manager.action.*', this._onAction, this);\n  }\n});\n","/**\n * Main view component responsible for showing a list of snackbar messages.\n */\nqx.Class.define('cv.ui.manager.snackbar.Controller', {\n  extend: qx.ui.core.Widget,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox(8));\n    this.initMessages(new qx.data.Array());\n    qx.event.message.Bus.subscribe('cv.manager.msg.snackbar', this._onMessage, this);\n    this._listController = new qx.data.controller.List(this.getMessages(), this.getChildControl('list'));\n    this._initDelegate();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    info: function (message) {\n      var msg = new cv.ui.manager.model.Message();\n      msg.set({\n        title: message\n      });\n      qx.event.message.Bus.dispatchByName('cv.manager.msg.snackbar', msg);\n    },\n\n    error: function (message) {\n      var msg = new cv.ui.manager.model.Message();\n      if (typeof message === 'object' && message.hasOwnProperty('statusText')) {\n        message = message.statusText;\n      }\n      msg.set({\n        title: message,\n        type: 'error',\n        sticky: true\n      });\n      qx.event.message.Bus.dispatchByName('cv.manager.msg.snackbar', msg);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-snackbar'\n    },\n\n    messages: {\n      check: 'qx.data.Array',\n      deferredInit: true,\n      event: 'changeMessages'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _listController: null,\n\n    _onMessage: function (ev) {\n      var msg = ev.getData();\n      if (msg instanceof cv.ui.manager.model.Message) {\n        this.getMessages().push(msg);\n        this.show();\n      }\n    },\n\n    _onCloseMessage: function (ev) {\n      var msg = ev.getData();\n      this.getMessages().remove(msg);\n      if (this.getMessages().length === 0) {\n        this.exclude();\n      }\n    },\n\n    _initDelegate: function () {\n      this._listController.setDelegate({\n        createItem: function () {\n          var item = new cv.ui.manager.snackbar.Message();\n          item.addListener('close', this._onCloseMessage, this);\n          return item;\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'model', null, item, index);\n        }\n      });\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'list':\n           control = new qx.ui.form.List();\n           this._add(control, {flex: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.msg.snackbar', this._onMessage, this);\n    this._disposeObjects('_listController');\n  }\n});\n","/**\n * User preferences.\n */\nqx.Class.define('cv.ui.manager.model.Preferences', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._restorePreferences();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    defaultConfigEditor: {\n      check: ['source', 'xml'],\n      init: 'source',\n      event: 'changeDefaultConfigEditor',\n      apply: '_savePreferences'\n    },\n\n    quickPreview: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeQuickPreview',\n      apply: '_savePreferences'\n    },\n\n    /**\n     * In export mode the manager looks and behaves like a file explorer.\n     */\n    expertMode: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeExpertMode',\n      apply: '_savePreferences'\n    },\n\n    /**\n     * View mode of the start page\n     */\n    startViewMode: {\n      check: ['list', 'preview'],\n      init: 'preview',\n      event: 'changeStartViewMode',\n      apply: '_savePreferences'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _savePreferences: function () {\n      var store = qx.bom.Storage.getLocal();\n      store.setItem('preferences', qx.util.Serializer.toNativeObject(this));\n    },\n\n    _restorePreferences: function () {\n      var store = qx.bom.Storage.getLocal();\n      this.set(store.getItem('preferences'));\n    }\n  }\n});\n","/**\n * Central registry for all available file editors/viewers.\n */\nqx.Class.define('cv.ui.manager.control.FileHandlerRegistry', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__registry = {};\n    this.__defaults = [];\n\n    // register viewers\n    this.registerFileHandler(new RegExp('\\.(' + cv.ui.manager.viewer.Image.SUPPORTED_FILES.join('|') + ')$', 'i'), cv.ui.manager.viewer.Image, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Config.SUPPORTED_FILES, cv.ui.manager.viewer.Config, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Icons.SUPPORTED_FILES, cv.ui.manager.viewer.Icons, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Folder.SUPPORTED_FILES, cv.ui.manager.viewer.Folder, {type: 'view'});\n    this.registerFileHandler(null, cv.ui.manager.Start, {type: 'view'});\n\n    // register the basic editors\n    this.registerFileHandler(cv.ui.manager.editor.Source.SUPPORTED_FILES, cv.ui.manager.editor.Source, {type: 'edit'});\n    this.registerFileHandler(cv.ui.manager.editor.Xml.SUPPORTED_FILES, cv.ui.manager.editor.Xml, {\n      preview: false,\n      type: 'edit',\n      noTemporaryFiles: true, // the old XML-Editor cannot handle temporary files,\n      noReadOnlyFiles: true // readonly nit supported\n    });\n    this.registerFileHandler(cv.ui.manager.model.CompareFiles, cv.ui.manager.editor.Diff, {type: 'view'});\n\n    this.registerFileHandler(\"hidden.php\", cv.ui.manager.editor.Config, {type: 'edit'});\n\n    cv.ui.manager.model.Preferences.getInstance().addListener('changeDefaultConfigEditor', this._onChangesDefaultConfigEditor, this);\n    this._onChangesDefaultConfigEditor();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __registry: null,\n    __defaults: null,\n\n    /**\n     * Registers an editor for a specific file, that is identified by the given selector.\n     * @param selector {String|RegExp|Class|Function|null} filename-/path or regular expression. If null this is a special handler that must be loaded manually (like cv.ui.manager.Start)\n     * @param clazz {qx.ui.core.Widget} widget class that handles those type of files\n     * @param options {Map?} additional options to store in the registry\n     */\n    registerFileHandler: function (selector, clazz, options) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertTrue(qx.Interface.classImplements(clazz, cv.ui.manager.editor.IEditor));\n      }\n      var config = Object.assign({\n        Clazz: clazz,\n        instance: null\n      }, options || {});\n      if (qx.Class.isClass(selector)) {\n        config.instanceOf = selector;\n        config.selectorId = 'instanceOf:' + selector.classname;\n        // highest priority\n        config.priority = 0;\n      } else if (qx.lang.Type.isRegExp(selector)) {\n        config.regex = selector;\n        config.selectorId = 'regex:' + selector.toString();\n        config.priority = 4;\n      } else if (qx.lang.Type.isFunction(selector)) {\n        config.selectorId = 'function:' + selector.name;\n        config.priority = 3;\n        config.function = selector;\n      } else if (qx.lang.Type.isString(selector)) {\n        // simple file matcher\n        if (selector.includes('/')) {\n          config.fullPath = selector;\n          config.selectorId = 'fullPath:' + selector;\n          config.priority = 1;\n        } else {\n          config.fileName = selector;\n          config.selectorId = 'fileName:' + selector;\n          config.priority = 2;\n        }\n      } else {\n        config.selectorId = 'none';\n        config.priority = 10;\n      }\n      this.__registry[clazz.classname] = config;\n    },\n\n    getFileHandler: function (file, type) {\n      var handlers = [];\n      if (!(file instanceof cv.ui.manager.model.CompareFiles)) {\n        // check if there is a default first\n        var defaultHandler;\n        Object.keys(this.__defaults).some(function (key) {\n          if (this.__defaults[key].regex.test(file.getFullPath()) &&\n            (!file.isTemporary() || !this.__defaults[key].noTemporaryFiles) &&\n            (file.isWriteable() || !this.__defaults[key].noReadOnlyFiles)\n          ) {\n            if (type) {\n              var config = this.getFileHandlerById(this.__defaults[key].clazz.classname);\n              if (config.type === type) {\n                defaultHandler = config;\n              }\n            } else {\n              defaultHandler = this.getFileHandlerById(this.__defaults[key].clazz.classname);\n            }\n            return !!defaultHandler;\n          }\n        }, this);\n        if (defaultHandler) {\n          return defaultHandler;\n        }\n      }\n\n      Object.keys(this.__registry).forEach(function (classname) {\n        var config = this.__registry[classname];\n        if (this.__canHandle(config, file) && (!type || config.type === type)) {\n          handlers.push(config);\n        }\n      }, this);\n      if (handlers.length === 0) {\n        if (!file.isFake() && file.getDisplayName().split('.').length === 1) {\n          // file without file ending => use the source code editor\n          return this.getFileHandlerById('cv.ui.manager.editor.Source');\n        }\n        // no editors found\n        return null;\n      } else if (handlers.length === 1) {\n        return handlers[0];\n      } else {\n        // sort by selector priority (instance, fullpath, filename, regex)\n        handlers.sort(function (a, b) {\n          return a.priority - b.priority;\n        });\n        // no default handler, just take the first one\n        return handlers[0];\n      }\n    },\n\n    getFileHandlerById: function (handlerId) {\n      return this.__registry[handlerId];\n    },\n\n    hasFileHandler: function (file, type) {\n      return Object.keys(this.__registry).some(function (classname) {\n        var config = this.__registry[classname];\n        return this.__canHandle(config, file) && (!type || config.type === type);\n      }, this);\n    },\n\n    /**\n     * Mark the handler with the given classname as default for the selector-id and all others with the same selector id not,\n     * @param selector {RegExp}\n     * @param clazz {qx.Class}\n     * @param noTemporaryFiles {Boolean} flag to prevent this default editor from being used to open temporary files.\n     * @param noReadOnlyFiles {Boolean} fleag to prevent this default editor from being used to open file that are not writeable\n     */\n    setDefault: function (selector, clazz, noTemporaryFiles, noReadOnlyFiles) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertRegExp(selector);\n        qx.core.Assert.assertTrue(qx.Class.isClass(clazz));\n      }\n      this.__defaults[selector.toString()] = {\n        regex: selector,\n        clazz: clazz,\n        noTemporaryFiles: noTemporaryFiles,\n        noReadOnlyFiles: noReadOnlyFiles\n      };\n    },\n\n    _onChangesDefaultConfigEditor: function () {\n      switch (cv.ui.manager.model.Preferences.getInstance().getDefaultConfigEditor()) {\n        case 'source':\n          this.setDefault(cv.ui.manager.editor.Source.DEFAULT_FOR, cv.ui.manager.editor.Source);\n          break;\n\n        case 'xml':\n          this.setDefault(cv.ui.manager.editor.Xml.SUPPORTED_FILES, cv.ui.manager.editor.Xml, true, true);\n          break;\n      }\n    },\n\n    __canHandle: function(config, file) {\n      if (config.noTemporaryFiles === true && file.isTemporary()) {\n        return false;\n      } else if (config.noReadOnlyFiles === true && !file.isWriteable()) {\n          return false;\n      } else if (config.fileName && file.getName() === config.fileName) {\n        return true;\n      } else if (config.fullPath && file.getFullPath() === config.fullPath) {\n        return true;\n      } else if (config.regex && config.regex.test(file.getFullPath().toLowerCase())) {\n        return true;\n      } else if (config.instanceOf && file instanceof config.instanceOf) {\n        return true;\n      } else if (config.function && config.function(file)) {\n        return true;\n      }\n      return false;\n    },\n\n    getAllFileHandlers: function (file, type) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertTrue(file instanceof cv.ui.manager.model.FileItem || file instanceof cv.ui.manager.model.CompareFiles);\n      }\n      return  Object.keys(this.__registry).filter(function (key) {\n        return this.__canHandle(this.__registry[key], file) && (!type || this.__registry[key].type === type);\n      }, this).map(function (key) {\n        return this.__registry[key];\n      }, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    // cleanup handler instances\n    Object.keys(this.__registry).forEach(function (regex) {\n      if (this.__registry[regex].instance) {\n        this.__registry[regex].instance.dispose();\n        this.__registry[regex].instance = null;\n      }\n    }, this);\n\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeDefaultConfigEditor', this._onChangesDefaultConfigEditor, this);\n  }\n});\n","/**\n * Global singleton that hold some states that are relevant for many parts of the manager.\n */\nqx.Class.define('cv.ui.manager.core.GlobalState', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    openedFocusedFile: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      event: 'changeOpenedFocusedFile',\n      apply: '_applyFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyFile: function () {\n      cv.ui.manager.control.ActionDispatcher.getInstance().updateBarButtons();\n    }\n  }\n});\n","/**\n * Data model for currently opened files, a combination of cv.ui.manager.model.FileItem and a certain FileHandler.\n */\nqx.Class.define('cv.ui.manager.model.OpenFile', {\n  extend: qx.core.Object,\n\n\n    /*\n    ***********************************************\n      CONSTRUCTOR\n    ***********************************************\n    */\n    construct: function (file, handlerId) {\n      this.base(arguments);\n      if (file) {\n        this.setFile(file);\n      }\n      if (handlerId) {\n        this.setHandlerId(handlerId);\n      }\n    },\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      event: 'changeFile',\n      apply: '_applyFile'\n    },\n\n    handlerId: {\n      check: '!!qx.Class.getByName(value)',\n      nullable: true,\n      apply: '_maintainIcon'\n    },\n\n    /**\n     * The opening state: permanent false behaves like a quick preview, where\n     * the current file content is replaces by the next selected file on single click.\n     * In permanent mode a new tab will be created, which content will not be replaced.\n     */\n    permanent: {\n      check: 'Boolean',\n      init: false,\n      event: 'changePermanent'\n    },\n\n    /**\n     * Icon to show in e.g. the File-Tab\n     */\n    icon: {\n      check: 'String',\n      init: '',\n      event: 'changeIcon'\n    },\n\n    closeable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeCloseable'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __ibid: null,\n\n    _applyFile: function (value, old) {\n      if (old) {\n        old.removeListener('changeModified', this._maintainPermanent, this);\n        old.removeRelatedBindings(this);\n        this.__ibid = null;\n      }\n      if (value) {\n        value.addListener('changeModified', this._maintainPermanent, this);\n      }\n      this._maintainIcon();\n    },\n\n    _maintainIcon: function () {\n      // use the handlers icon is there is one, otherwise the file items icon\n      var file = this.getFile();\n      if (this.getHandlerId() && file) {\n        var handlerClass = qx.Class.getByName(this.getHandlerId());\n        if (handlerClass && handlerClass.ICON) {\n          this.setIcon(handlerClass.ICON);\n          if (this.__ibid) {\n            file.removeBinding(this.__ibid);\n            this.__ibid = null;\n          }\n        } else {\n          this.__ibid = file.bind('icon', this, 'icon');\n        }\n      } else {\n        this.resetIcon();\n      }\n    },\n\n    _maintainPermanent: function () {\n      if (this.getFile().isModified() && !this.isPermanent()) {\n        // change to permanent once we have a modification\n        this.setPermanent(true);\n      }\n    }\n  }\n});\n","/**\n * Interface all file editors must implement.\n */\nqx.Interface.define('cv.ui.manager.editor.IEditor', {\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_loadFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: ''\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    save: function () {},\n\n    getCurrentContent: function () {}\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.CompareFiles', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (original, modified) {\n    this.base(arguments);\n    this.setOriginalFile(original);\n    this.setModifiedFile(modified);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalFile: {\n      check: 'cv.ui.manager.model.FileItem',\n      event: 'changeOriginal'\n    },\n    modifiedFile: {\n      check: 'cv.ui.manager.model.FileItem',\n      event: 'changeModifiedFile',\n      apply: '_applyModifiedFile'\n    },\n\n    permanent: {\n      check: 'Boolean',\n      init: true\n    },\n\n    name: {\n      check: 'String',\n      init: '',\n      event: 'changeName'\n    },\n\n    type: {\n      check: 'String',\n      init: 'file'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    isRelated: function (path) {\n      return this.getOriginalFile().getFullPath() === path || this.getModifiedFile().getFullPath() === path;\n    },\n\n    isConfigFile: function () {\n      return this.getModifiedFile().isConfigFile();\n    },\n\n    getFullPath: function () {\n      return this.getOriginalFile().getFullPath();\n    },\n\n    _applyModifiedFile: function () {\n      this.setName(qx.locale.Manager.tr('Diff: %1', this.getModifiedFile().getName()));\n    },\n\n    getParent: function () {\n      return this.getModifiedFile().getParent();\n    },\n\n    isWriteable: function () {\n      return this.getModifiedFile().isWriteable();\n    },\n\n    isTrash: function () {\n      return this.getModifiedFile().isTrash();\n    },\n\n    isInTrash: function () {\n      return this.getModifiedFile().isInTrash();\n    },\n\n    isFake: function () {\n      return this.getModifiedFile().isFake();\n    },\n\n    isTemporary: function () {\n      return this.getModifiedFile().isTemporary() || this.getOriginalFile().isTemporary();\n    },\n\n    isMounted: function () {\n      return this.getModifiedFile().isMounted() || this.getOriginalFile().isMounted();\n    },\n\n    /**\n     * Returns a fake URI that can be used to identify the file.\n     * Used by monaco editor as model URI.\n     * @returns {Uri}\n     */\n    getUri: function () {\n      return 'cv://' + this.getOriginalFile().getFullPath() + '+' + this.getModifiedFile().getFullPath();\n    }\n  }\n});\n","/**\n * The FileController is responsible for all file operations, like config check, move, replace, delete etc.\n */\nqx.Class.define('cv.ui.manager.control.FileController', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__fsClient = cv.io.rest.Client.getFsClient();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __fsClient: null,\n\n    rename: function (file, newName) {\n      var newPath = file.getPath() || '';\n      if (newPath.length > 0 && !newPath.endsWith('/')) {\n        newPath += '/';\n      }\n      newPath += newName;\n      if (file.isTemporary()) {\n        // create new item\n        this.__fsClient.createSync({path: newPath, type: file.getType()}, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(err);\n          } else {\n            cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been created', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been created', file.getDisplayName())\n            );\n            file.resetTemporary();\n            file.resetModified();\n            file.setName(newName);\n            file.reload();\n          }\n        }, this);\n      } else if (file.getFullPath() !== newPath) {\n        this.__fsClient.moveSync({src: file.getFullPath(), target: newPath}, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(err);\n          } else {\n            cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been renamed', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been renamed', file.getDisplayName())\n            );\n            file.setName(newName);\n            file.resetModified();\n            file.reload();\n          }\n          file.resetEditing();\n        }, this);\n      }\n    },\n\n    /**\n     * Move file to another path\n     * @param file {cv.ui.manager.model.FileItem} file to move\n     * @param target {String} new path of the file\n     */\n    move: function (file, target) {\n      this.__fsClient.moveSync({src: file.getFullPath(), target: target}, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n            qx.locale.Manager.tr('File \"%1\" has been moved', file.getDisplayName()) :\n            qx.locale.Manager.tr('Folder \"%1\" has been moved', file.getDisplayName())\n          );\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'moved',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    /**\n     * Restore file from trash by moving it out of the trash to the old path\n     * @param file {cv.ui.manager.model.FileItem} file to restore\n     */\n    restore: function (file) {\n      if (file.isInTrash()) {\n        var target = file.getFullPath().replace('.trash/', '');\n        this.__moveFile(file, target);\n      } else if (file.getType() === 'file' && !file.isTemporary()) {\n        var match = /^\\/?backup\\/visu_config(.*)-[0-9]{14}\\.xml$/.exec(file.getFullPath())\n        if (match) {\n          // find the existing target config to restore\n          var targetFileName = 'visu_config' + match[1] + '.xml';\n\n          // find the target file\n          var parentFolder = file.getParent().getParent();\n          var targetFile = null;\n          parentFolder.getChildren().some(function(child) {\n            if (child.getFullPath() === targetFileName) {\n              targetFile = child;\n              return true;\n            }\n          });\n\n          // load the backup content\n          this.__fsClient.readSync({path: file.getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              if (targetFile) {\n                this.__fsClient.updateSync({\n                  path: targetFile.getFullPath(),\n                  hash: 'ignore'\n                }, res, function (err) {\n                  if (err) {\n                    cv.ui.manager.snackbar.Controller.error(err);\n                  } else {\n                    cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has been restored', file.getName()));\n                    targetFile.resetModified();\n                    targetFile.resetTemporary();\n                    qx.event.message.Bus.dispatchByName(targetFile.getBusTopic(), {\n                      type: 'fsContentChanged',\n                      data: res,\n                      source: this\n                    });\n                  }\n                }, this);\n              } else {\n                // target file does not exist copy to a new file\n                this.__fsClient.createSync({\n                  path: targetFileName,\n                  hash: 'ignore'\n                }, res, function (err) {\n                  if (err) {\n                    cv.ui.manager.snackbar.Controller.error(err);\n                  } else {\n                    cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has been restored', file.getName()));\n                  }\n                }, this);\n              }\n            }\n          }, this);\n        }\n      }\n    },\n\n    __moveFile: function (file, target) {\n      this.__fsClient.moveSync({src: file.getFullPath(), target: target}, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n            qx.locale.Manager.tr('File \"%1\" has been restored', file.getDisplayName()) :\n            qx.locale.Manager.tr('Folder \"%1\" has been restored', file.getDisplayName())\n          );\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'restored',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    'delete': function(file, callback, context) {\n      if (file.isTemporary()) {\n        // new file, no need to call the backend\n        if (callback) {\n          callback.apply(context, true);\n        }\n      } else {\n        if (file) {\n          var message;\n          if (file.isTrash()) {\n            message = qx.locale.Manager.tr('Do you really want to clear the trash?');\n          } else if (file.isInTrash()) {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('Do you really want to delete file \"%1\" from the trash?', file.getDisplayName()) :\n              qx.locale.Manager.tr('Do you really want to delete folder \"%1\" from the trash?', file.getDisplayName());\n          } else {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('Do you really want to delete file \"%1\"?', file.getDisplayName()) :\n              qx.locale.Manager.tr('Do you really want to delete folder \"%1\"?', file.getDisplayName());\n          }\n          dialog.Dialog.confirm(message, function (confirmed) {\n            if (confirmed) {\n              this.__doDelete(file, callback, context);\n            } else if (callback) {\n              callback.apply(context, false);\n            }\n          }, this, qx.locale.Manager.tr('Confirm deletion'));\n        }\n      }\n    },\n\n    __doDelete: function (file, callback, context) {\n      this.__fsClient.deleteSync({path: file.getFullPath(), force: file.isTrash()}, null, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n          if (callback) {\n            callback.apply(context, false);\n          }\n        } else {\n          var message;\n          if (file.isTrash()) {\n            message = qx.locale.Manager.tr('Trash has been cleared');\n          } else if (file.isInTrash()) {\n            message = this.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been removed from trash', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been removed from trash', file.getDisplayName());\n          } else {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been deleted', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been deleted', file.getDisplayName());\n          }\n          cv.ui.manager.snackbar.Controller.info(message);\n          if (callback) {\n            callback.apply(context, true);\n          }\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'deleted',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    download: function (file) {\n      if (file.getType() === 'file') {\n        var element = document.createElement('a');\n        element.setAttribute('href', cv.io.rest.Client.getBaseUrl() + '/fs?download=true&path=' + file.getFullPath());\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      }\n    },\n\n    validate: function (file) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertInstance(file, cv.ui.manager.model.FileItem);\n      }\n      if (file.isConfigFile()) {\n        this.__validateConfig(file);\n      } else {\n        this.info('no validation available for file: ' + file.getFullPath());\n      }\n    },\n\n    __validateConfig: function (file) {\n      var d = dialog.Dialog.alert(qx.locale.Manager.tr('Validating %1', file.getFullPath()));\n      cv.ui.manager.editor.Worker.getInstance().validateConfig(file).then(function (res) {\n        d.close();\n        if (res === true) {\n          file.setValid(true);\n          cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has no errors!', file.getFullPath()));\n        } else {\n          file.setValid(false);\n          qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n            file: file,\n            handler: 'cv.ui.manager.editor.Source'\n          });\n          cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.trn(\n            '%1 error found in %2!',\n            '%1 errors found in %2!',\n            res.length,\n            res.length,\n            file.getFullPath())\n          );\n        }\n      }.bind(this));\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__fsClient = null;\n  }\n});\n","/**\n * Main toolbar on top.\n */\nqx.Class.define('cv.ui.manager.MenuBar', {\n  extend: qx.ui.menubar.MenuBar,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._commandGroup = qx.core.Init.getApplication().getCommandManager().getActive();\n    this.__buttons = {};\n\n    this._draw();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _commandGroup: null,\n    __buttons: null,\n    __defaultButtonConfiguration: null,\n    __buttonConfiguration: null,\n\n    _draw: function () {\n      this._createChildControl('file');\n      this._createChildControl('edit');\n      this._createChildControl('preferences');\n      this.add(new qx.ui.core.Spacer(), {flex: 1});\n\n      this._createChildControl('title');\n      this.add(new qx.ui.core.Spacer(), {flex: 1});\n\n      var editorGroup = new qx.ui.form.RadioGroup();\n\n      this.__defaultButtonConfiguration = {\n        'new-file': {\n          menu: 'new-menu',\n          args: [this.tr('New file'), cv.theme.dark.Images.getIcon('new-file', 18), this._commandGroup.get('new-file')],\n          enabled: true\n        },\n        'new-folder': {\n          menu: 'new-menu',\n          args: [this.tr('New folder'), cv.theme.dark.Images.getIcon('new-folder', 18), this._commandGroup.get('new-folder')],\n          enabled: true,\n          separator: 'after'\n        },\n        'new-config-file': {\n          menu: 'new-menu',\n          args: [this.tr('New config file')],\n          enabled: true\n        },\n        'upload': {\n          menu: 'file-menu',\n          clazz: com.zenesis.qx.upload.UploadMenuButton,\n          args: [this.tr('Upload file'), cv.theme.dark.Images.getIcon('upload', 18)],\n          enabled: true,\n          separator: 'before'\n        },\n        'save': {\n          menu: 'file-menu',\n          args: [this.tr('Save'), cv.theme.dark.Images.getIcon('save', 18), this._commandGroup.get('save')],\n          enabled: false,\n          separator: 'before'\n        },\n        'save-as': {\n          menu: 'file-menu',\n          args: [this.tr('Save as...'), null, this._commandGroup.get('save-as')],\n          enabled: false\n        },\n        'delete': {\n          args: [this.tr('Delete'), cv.theme.dark.Images.getIcon('delete', 18), this._commandGroup.get('delete')],\n          enabled: false,\n          hidden: true\n        },\n        'quit': {\n          menu: 'file-menu',\n          args: [this.tr('Quit'), cv.theme.dark.Images.getIcon('quit', 18), this._commandGroup.get('quit')],\n          enabled: true,\n          separator: 'before'\n        },\n        // edit menu basics\n        'undo': {\n          menu: 'edit-menu',\n          args: [this.tr('Undo'), cv.theme.dark.Images.getIcon('undo', 18), this.tr('Ctrl+Z')],\n          enabled: true\n        },\n        'redo': {\n          menu: 'edit-menu',\n          args: [this.tr('Redo'), cv.theme.dark.Images.getIcon('redo', 18), this.tr('Ctrl+Y')],\n          enabled: true\n        },\n        'cut': {\n          menu: 'edit-menu',\n          args: [this.tr('Cut'), null, this.tr('Ctrl+X')],\n          enabled: false,\n          separator: 'before'\n        },\n        'copy': {\n          menu: 'edit-menu',\n          args: [this.tr('Copy'), null, this.tr('Ctrl+C')],\n          enabled: false\n        },\n        'paste': {\n          menu: 'edit-menu',\n          args: [this.tr('Paste'), null, this.tr('Ctrl+V')],\n          enabled: false\n        },\n        // preferences\n        'source-editor': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.RadioButton,\n          args: [this.tr('Use text editor')],\n          general: true,\n          enabled: true,\n          properties: {\n            model: 'source',\n            group: editorGroup\n          }\n        },\n        'xml-editor': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.RadioButton,\n          args: [this.tr('Use xml editor')],\n          general: true,\n          enabled: true,\n          properties: {\n            model: 'xml',\n            group: editorGroup\n          }\n        },\n        'quick-preview': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.CheckBox,\n          args: [this.tr('Enable quick preview')],\n          general: true,\n          enabled: true,\n          separator: 'before'\n        },\n        'expert-mode': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.CheckBox,\n          args: [this.tr('Expert mode')],\n          general: true,\n          enabled: true\n        }\n      };\n      this.maintainButtons();\n\n      var prefs = cv.ui.manager.model.Preferences.getInstance();\n\n      prefs.bind('defaultConfigEditor', editorGroup, 'modelSelection', {\n        converter: function (value) {\n          return [value];\n        }\n      });\n      editorGroup.getModelSelection().addListener('change', function () {\n        prefs.setDefaultConfigEditor(editorGroup.getModelSelection().getItem(0));\n      }, this);\n\n      this.__bindToPreference('quick-preview', 'quickPreview');\n      this.__bindToPreference('expert-mode', 'expertMode');\n    },\n\n    __bindToPreference: function (buttonName, preferenceName) {\n      var button = this.getButton(buttonName);\n      var prefs = cv.ui.manager.model.Preferences.getInstance()\n      prefs.bind(preferenceName, button, 'value');\n      button.bind('value', prefs, preferenceName);\n    },\n\n    maintainButtons: function (config) {\n      if (!config) {\n        config = this.__defaultButtonConfiguration;\n      } else {\n        config = Object.merge(this.__defaultButtonConfiguration, config);\n        this.__buttonConfiguration = config;\n      }\n      Object.keys(config).forEach(function (id) {\n        var button;\n        var buttonConf = config[id];\n        if (!this.__buttons.hasOwnProperty(id)) {\n          // create button\n          var label = buttonConf.args[0];\n          var icon = buttonConf.args[1];\n          var command = buttonConf.args[2];\n          var ButtonClass = buttonConf.clazz || qx.ui.menu.Button;\n          if (qx.lang.Type.isString(command) || !command) {\n            // no command connected\n            button = new ButtonClass(label, icon);\n            if (command) {\n              // just add the string as shortcut hint\n              button.getChildControl('shortcut').setValue(command);\n            }\n          } else {\n            button = new ButtonClass(label, icon, command);\n          }\n          button.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.' + id);\n          }, this);\n          if (!buttonConf.hidden) {\n            var menu = this.getChildControl(buttonConf.menu);\n            if (!menu) {\n              throw new Error('no menu named ' + buttonConf.menu + ' found!');\n            }\n            if (buttonConf.separator === 'before') {\n              menu.add(new qx.ui.menu.Separator());\n            }\n            menu.add(button);\n            if (buttonConf.separator === 'after') {\n              menu.add(new qx.ui.menu.Separator());\n            }\n          }\n          this.__buttons[id] = button;\n\n          if (buttonConf.hasOwnProperty('onAfterCreate')) {\n            buttonConf.onAfterCreate(button);\n          }\n        } else {\n          button = this.__buttons[id];\n        }\n        button.setEnabled(buttonConf.enabled);\n        if (buttonConf.properties) {\n          button.set(buttonConf.properties);\n        }\n\n      }, this);\n    },\n\n    getButton: function (id) {\n      return this.__buttons[id];\n    },\n\n    getButtonConfiguration: function () {\n      return this.__buttonConfiguration || this.__defaultButtonConfiguration;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'title':\n           control = new qx.ui.basic.Label(this.tr('CometVisu Manager'));\n           this.add(control);\n           break;\n\n         case \"file\":\n           control = new qx.ui.menubar.Button(this.tr('File'), null, this.getChildControl('file-menu'));\n           this.add(control);\n           break;\n\n         case \"edit\":\n           control = new qx.ui.menubar.Button(this.tr('Edit'), null, this.getChildControl('edit-menu'));\n           this.add(control);\n           break;\n\n         case \"new\":\n           control = new qx.ui.menu.Button(this.tr('New'), null, null, this.getChildControl('new-menu'));\n           break;\n\n         case \"preferences\":\n           control = new qx.ui.menubar.Button(this.tr('Preferences'), null, this.getChildControl('preferences-menu'));\n           this.add(control);\n           break;\n\n         case 'new-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'file-menu':\n           control = new qx.ui.menu.Menu();\n           control.add(this.getChildControl('new'));\n           break;\n\n         case 'edit-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'preferences-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._commandGroup = null;\n  }\n});\n","/**\n * Extend {com.zenesis.qx.upload.UploadMgr} to allow files to e uploaded via HTML5 drop\n */\nqx.Class.define(\"cv.ui.manager.upload.UploadMgr\", {\n  extend : com.zenesis.qx.upload.UploadMgr,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (widget, uploadUrl) {\n    this.base(arguments, widget, uploadUrl);\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    LAST_ID: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    multiple: {\n      refine: true,\n      init: false\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_updateUploadUrl'\n    },\n\n    filename: {\n      check: 'String',\n      nullable: true\n    },\n\n    force: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  members : {\n\n    _updateUploadUrl: function () {\n      var folder = this.getFolder();\n      var path = folder ? folder.getFullPath() : '.';\n      var url = cv.io.rest.Client.getBaseUrl() + '/fs?type=file&path=' + path;\n      this.setUploadUrl(url);\n    },\n\n    _init: function () {\n      this.addListener(\"addFile\", function(evt) {\n        var file = evt.getData();\n        var filename = this.getFilename();\n        if (filename) {\n          file.setParam('filename', filename);\n        }\n        if (this.isForce()) {\n          file.setParam('force', true);\n        }\n        var progressListenerId = file.addListener(\"changeProgress\", function (evt) {\n          var file = evt.getTarget();\n          var uploadedSize = evt.getData();\n\n          this.debug(\"Upload \" + file.getFilename() + \": \" +\n            uploadedSize + \" / \" + file.getSize() + \" - \" +\n            Math.round(uploadedSize / file.getSize() * 100) + \"%\");\n        }, this);\n\n        var stateListenerId = file.addListener(\"changeState\", function(evt) {\n          var state = evt.getData();\n          var file = evt.getTarget();\n\n          if (state === \"uploading\") {\n            this.debug(file.getFilename() + \" (Uploading...)\");\n          } else if (state === \"uploaded\") {\n            this.debug(file.getFilename() + \" (Complete)\");\n            if (file.getStatus() !== 200) {\n              // something went wrong\n              switch (file.getStatus()) {\n                case 406:\n                  if (this.isForce()) {\n                    cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Replacing the file failed.'));\n                  } else {\n                    dialog.Dialog.confirm(qx.locale.Manager.tr('This file already exists, do you want to replace it?'), function (confirmed) {\n                      if (confirmed) {\n                        this.forceUpload(file);\n                      }\n                    }, this, qx.locale.Manager.tr('File already exists'));\n                  }\n                  break;\n\n                case 403:\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Uploading this file is not allowed here.'));\n                  break;\n\n                default:\n                  var err = file.getResponse();\n                  try {\n                    err = qx.lang.Json.parse(err).message;\n                  } catch (e) {\n                  }\n                  this.error(err);\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('File upload stopped with an error: %1', err));\n                  break;\n              }\n            } else {\n              cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been uploaded'));\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'uploaded',\n                path: this.getFolder().getFullPath() + '/' + file.getFilename()\n              });\n            }\n          }\n          else if (state === \"cancelled\") {\n            this.debug(file.getFilename() + \" (Cancelled)\");\n          }\n          // Remove the listeners\n          if (state === \"uploaded\" || state === \"cancelled\") {\n            file.removeListenerById(progressListenerId);\n            file.removeListenerById(stateListenerId);\n          }\n        }, this);\n      }, this);\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @return {Number}\n     */\n    _getUniqueFileId: function() {\n      return ++cv.ui.manager.upload.UploadMgr.LAST_ID;\n    },\n\n    /**\n     * Re-upload a file in forced mode\n     * @param file {com.zenesis.qx.upload.File}\n     */\n    forceUpload: function (file) {\n      this.setForce(true);\n      var newFile =  new com.zenesis.qx.upload.File(file.getBrowserObject(), file.getFilename(), file.getId());\n      newFile.set({\n        size: file.getSize(),\n        uploadWidget: file.getUploadWidget()\n      });\n      newFile.setParam('force', true);\n      this.getUploadHandler()._addFile(newFile);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Upload file directly to the backend\n     *\n     * @param bomFile {File}\n     */\n    uploadFile: function(bomFile) {\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = typeof bomFile.name !== \"undefined\" ? bomFile.name : bomFile.fileName;\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      if (this.isForce()) {\n        file.setParam('force', true);\n      }\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Replace content of existing file with the upload\n     * @param bomFile {File}\n     * @param replacedFile {cv.ui.manager.model.FileItem}\n     */\n    replaceFile: function(bomFile, replacedFile) {\n      this.setFolder(replacedFile.getParent());\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = replacedFile.getName();\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      file.setParam('force', true);\n      file.setParam('filename', filename);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    }\n  }\n});","/**\n * Add upload via drag&drop feature to this widget. The including widget must have a\n * \"upload-dropbox\" childcontrol or add\n *  <pre class=\"javascript\">\n *   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n *   </pre>\n *   to their own _createChildControlImpl method\n */\nqx.Mixin.define(\"cv.ui.manager.upload.MDragUpload\", {\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function() {\n    this.setDroppable(true);\n    if (this.getBounds()) {\n      this._applyStartDragListeners();\n    } else {\n      this.addListenerOnce(\"appear\", function() {\n        this._applyStartDragListeners();\n      }, this);\n    }\n    var layout = this._getLayout();\n    if (!(layout instanceof qx.ui.layout.Grow) && !(layout instanceof qx.ui.layout.Canvas)) {\n      this.addListener('resize', this.__syncBounds, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties : {\n    uploadMode: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"__applyUploadMode\"\n    },\n\n    uploadHint: {\n      check: \"String\",\n      init: \"\"\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Handles HTML5 drop events (dropping external files on dom element)\n     * @param ev {Event}\n     */\n    onHtml5Drop : function (ev) {\n      ev.preventDefault();\n      this.getFiles(ev).forEach(this.uploadFile, this);\n    },\n\n    /**\n     * Uploads the dropped file to the correct folder:\n     * - config files to the resources/config folder\n     * - accepted media files to the resources/config/media folder\n     * @param file {File}\n     * @param replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones\n     */\n    uploadFile: function (file, replaceFile) {\n      var isConfig = cv.ui.manager.model.FileItem.isConfigFile(file.name);\n\n      var folder;\n      if (isConfig) {\n        // upload to root folder\n        folder = new cv.ui.manager.model.FileItem('.');\n      } else if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n        // upload to media folder\n        folder = new cv.ui.manager.model.FileItem('media');\n      }\n      if (folder) {\n        folder.set({\n          type: 'dir'\n        });\n        var manager = new cv.ui.manager.upload.UploadMgr();\n        if (replaceFile) {\n          manager.replaceFile(file, replaceFile);\n        } else {\n          manager.setFolder(folder);\n          manager.uploadFile(file);\n        }\n      }\n    },\n\n    hasDroppableFile: function (ev) {\n      return this.getFiles(ev).length > 0;\n    },\n\n    /**\n     * Extracts acceptable files from event\n     * @param ev {Event}\n     * @private\n     */\n    getFiles: function (ev) {\n      var files = [];\n      var i, l, file;\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (i = 0, l = ev.dataTransfer.items.length; i < l; i++) {\n          // If dropped items aren't files, reject them\n          var item = ev.dataTransfer.items[i];\n          if (item.kind === 'file' && cv.ui.manager.tree.FileSystem.isAccepted(item.type)) {\n            file = item.getAsFile();\n            files.push(file);\n          }\n        }\n      } else {\n        for (i = 0, l = ev.dataTransfer.files.length; i < l; i++) {\n          file = ev.dataTransfer.files[i];\n          if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      return files;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members : {\n    __hasEmptyInfo: null,\n    _boundOnStop: null,\n\n    __syncBounds: function () {\n      var bounds = this.getBounds();\n      this.getChildControl('upload-overlay').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n      this.getChildControl('upload-dropbox').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n    },\n\n    // overridden\n    _createMDragUploadChildControlImpl: function(id) {\n      var control;\n      var bounds = this.getBounds();\n      var layout = this._getLayout();\n\n      switch(id) {\n        case \"upload-overlay\":\n          control = new qx.ui.container.Composite();\n          control.setZIndex(1000000);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          this.getChildControl(\"upload-dropbox\").bind(\"visibility\", control, \"visibility\");\n          break;\n\n        case \"upload-dropbox\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.Grow());\n          control.setBackgroundColor('rgba(32, 32, 32, 0.9)');\n          control.setZIndex(1000);\n          var dropBox = new qx.ui.basic.Atom(this.getUploadHint(), cv.theme.dark.Images.getIcon('upload', 32));\n          dropBox.set({\n            iconPosition: 'top',\n            rich: true,\n            center: true\n          });\n          // control.bind('width', dropBox, 'maxWidth');\n          dropBox.getChildControl('label').setWrap(true);\n          control.setAnonymous(true);\n          control.add(dropBox);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          break;\n      }\n      return control;\n    },\n\n    _onStopDragging: function(ev) {\n      ev.preventDefault();\n      this.setUploadMode(false);\n      document.removeEventListener(\"dragend\", this._boundOnStop, false);\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyStartDragListeners: function() {\n      // add the start listener to this widget\n      this.getContentElement().getDomElement().addEventListener(\"dragenter\", function(ev) {\n        // ev.preventDefault();\n        if (this._isDroppable) {\n          if (this._isDroppable(ev.dataTransfer.items)) {\n            // we have something to drop\n            this.setUploadMode(true);\n          }\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          // we have something to drop\n          this.setUploadMode(true);\n        }\n      }.bind(this), false);\n      if (this.getChildControl(\"upload-overlay\").getBounds()) {\n        this._applyDragListeners();\n      } else {\n        this.getChildControl(\"upload-overlay\").addListenerOnce(\"appear\", function() {\n          this._applyDragListeners();\n        }, this);\n      }\n\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyDragListeners: function() {\n      var element = this.getChildControl(\"upload-overlay\").getContentElement().getDomElement();\n      if (!element) {\n        var lid = this.getChildControl(\"upload-overlay\").addListener('visibility', function (ev) {\n          if (ev.getData() === 'visible') {\n            this._applyDragListeners();\n            this.getChildControl(\"upload-overlay\").removeListenerById(lid);\n          }\n        }, this);\n        return;\n      }\n      element.addEventListener(\"dragexit\", function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      element.addEventListener(\"dragover\", function (ev) {\n        ev.preventDefault();\n        var uploadable = false;\n        if (this._isDroppable) {\n          uploadable = this._isDroppable(ev.dataTransfer.items);\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          uploadable = true;\n        }\n        this.setUploadMode(uploadable);\n      }.bind(this), false);\n\n      this._boundOnStop = this._onStopDragging.bind(this);\n\n      element.addEventListener(\"dragleave\", this._boundOnStop, false);\n      element.addEventListener(\"dragend\", function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      document.addEventListener(\"dragend\", this._boundOnStop, false);\n\n      if (this._onDrop) {\n        element.addEventListener(\"drop\", this._onDrop.bind(this), false);\n      } else {\n        element.addEventListener(\"drop\", function (ev) {\n          cv.ui.manager.upload.MDragUpload.onHtml5Drop(ev);\n          this._onStopDragging(ev);\n        }.bind(this), false);\n      }\n    },\n\n    // property apply\n    __applyUploadMode: function(value) {\n      if (value === true) {\n        this.getChildControl(\"upload-dropbox\").show();\n        if (this.hasChildControl(\"empty-info\") && this.getChildControl(\"empty-info\").isVisible()) {\n          this.getChildControl(\"empty-info\").exclude();\n          this.__hasEmptyInfo = true;\n        } else {\n          this.__hasEmptyInfo = false;\n        }\n      } else {\n        this.getChildControl(\"upload-dropbox\").exclude();\n        if (this.__hasEmptyInfo === true) {\n          this.getChildControl(\"empty-info\").show();\n        }\n      }\n    }\n  }\n});","/**\n * Shows filesystem content in a tree.\n */\nqx.Class.define('cv.ui.manager.tree.FileSystem', {\n  extend: qx.ui.core.Widget,\n  include: [\n    cv.ui.manager.upload.MDragUpload\n  ],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (rootFolder) {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n    this.setRootFolder(rootFolder);\n\n    qx.event.message.Bus.subscribe('cv.manager.tree.enable', this._onEnableTree, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    MIMETYPES: {\n      'text/xml': 'xml',\n      'application/xml': 'xml',\n      'text/javascript': 'js',\n      'application/x-httpd-php': 'php',\n      'text/css': 'css',\n      'image/png': 'png',\n      'image/svg+xml': 'svg',\n      'text/plain': ''\n    },\n\n    getMimetypeFromSuffix: function (suffix) {\n      return Object.keys(this.MIMETYPES).find(function (mime) {\n        return this.MIMETYPES[mime] === suffix;\n      }, this);\n    },\n\n    isAccepted: function (mimetype) {\n      return this.MIMETYPES.hasOwnProperty(mimetype);\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'changeSelection': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    // appearance: {\n    //   refine: true,\n    //   init: 'cv-filesystem'\n    // },\n\n    rootFolder: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applyRootFolder'\n    },\n\n    selectedNode: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applySelectedNode',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __selectionTimer: null,\n    __doubleTapWaitingTime: 500,\n    __ignoreSelectionChange: false,\n    _replacementManager: null,\n\n    reload: function () {\n      var tree = this.getChildControl('tree');\n      var openPaths = tree.getOpenNodes().map(function (node) { return node.getFullPath(); });\n      var root = tree.getModel();\n      root.reload(function () {\n        this.getChildControl('tree').refresh();\n        root.setOpen(true);\n        openPaths.forEach(this.openPath, this)\n      }, this);\n    },\n\n    openPath: function (path) {\n      var root = this.getChildControl('tree').getModel();\n      if (path === '.') {\n        root.setOpen(true);\n      } else {\n        root.setOpen(true);\n        root.openPath(path);\n      }\n    },\n\n    refresh: function () {\n      this.getChildControl('tree').refresh();\n    },\n\n    _applyRootFolder: function (value) {\n      if (value) {\n        var tree = this.getChildControl('tree');\n        tree.setModel(value);\n        value.load(function () {\n          tree.setHideRoot(true);\n        }, this);\n      }\n    },\n\n    _applySelectedNode: function (value) {\n      var tree = this.getChildControl('tree');\n      var contextMenu = cv.ui.manager.contextmenu.GlobalFileItem.getInstance();\n      contextMenu.configure(value);\n      if (value) {\n        tree.setContextMenu(contextMenu);\n      }\n    },\n\n    setSelection : function (node) {\n      this.getChildControl('tree').getSelection().replace([node]);\n    },\n\n    _onDblTapTreeSelection: function () {\n      var sel = this.getSelectedNode();\n      if (sel) {\n        if (this.__selectionTimer) {\n          this.__selectionTimer.stop();\n        }\n        // only files show a different behaviour when double-clicked (permanent vs. preview mode)\n        if (sel.getType() === 'file') {\n          this.fireDataEvent('changeSelection', {\n            'node': sel,\n            'mode': 'dbltap'\n          });\n        }\n      }\n    },\n\n    _onChangeTreeSelection: function () {\n      if (this.__selectionTimer) {\n        this.__selectionTimer.stop();\n      }\n      if (this.__ignoreSelectionChange === true) {\n        return;\n      }\n      var tree = this.getChildControl('tree');\n      var sel = tree.getSelection();\n      if (sel.length > 0) {\n        var node = sel.getItem(0);\n        this.setSelectedNode(node);\n        // wait for double tap\n        if (node.getType() === 'file') {\n          this.__selectionTimer = qx.event.Timer.once(function () {\n            this.fireDataEvent('changeSelection', {\n              'node': this.getSelectedNode(),\n              'mode': 'tap'\n            });\n            this.__selectionTimer = null;\n          }, this, this.__doubleTapWaitingTime);\n        } else {\n          this.fireDataEvent('changeSelection', {\n            'node': node,\n            'mode': 'tap'\n          });\n        }\n      } else {\n        tree.resetContextMenu();\n        this.resetSelectedNode();\n      }\n    },\n\n    _onFsItemRightClick: function (ev) {\n      var tree = this.getChildControl('tree');\n      var widget = ev.getTarget();\n      if (widget instanceof cv.ui.manager.tree.VirtualFsItem) {\n        var node = widget.getModel();\n        if (node) {\n          this.__ignoreSelectionChange = true;\n          tree.getSelection().replace([node]);\n          this.setSelectedNode(node);\n          this.fireDataEvent('changeSelection', {\n            'node': node,\n            'mode': 'contextmenu'\n          });\n          this.__ignoreSelectionChange = false;\n        }\n      }\n    },\n\n    /**\n     * Handle message on 'cv.manager.tree.enable' topic.\n     * @param ev {Event}\n     * @protected\n     */\n    _onEnableTree: function (ev) {\n      this.getChildControl('tree').setEnabled(ev.getData());\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'tree':\n           control = new qx.ui.tree.VirtualTree(null, 'name', 'children');\n           control.set({\n             selectionMode: 'single',\n             minWidth: 250\n           });\n           cv.ui.manager.model.Preferences.getInstance().bind('quickPreview', control, 'openMode', {\n             converter: function (value) {\n               return value ? 'tap' : 'dbltap';\n             }\n           });\n           control.setDelegate({\n             createItem: function () {\n               var item = new cv.ui.manager.tree.VirtualFsItem();\n               item.addListener('dbltap', this._onDblTapTreeSelection, this);\n               item.addListener('contextmenu', this._onFsItemRightClick, this);\n               return item;\n             }.bind(this),\n\n             // Bind properties from the item to the tree-widget and vice versa\n             bindItem : function(controller, item, index) {\n               controller.bindProperty(\"\", \"model\", null, item, index);\n               controller.bindPropertyReverse(\"open\", \"open\", null, item, index);\n               controller.bindProperty(\"open\", \"open\", null, item, index);\n               controller.bindProperty(\"readable\", \"enabled\", null, item, index);\n               controller.bindProperty(\"icon\", \"icon\", null, item, index);\n               controller.bindProperty(\"editing\", \"editing\", null, item, index);\n             }\n           });\n           control.getSelection().addListener(\"change\", this._onChangeTreeSelection, this);\n           this._add(control);\n           break;\n       }\n\n       if (!control) {\n         control = this._createMDragUploadChildControlImpl(id);\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.tree.enable', this._onEnableTree, this);\n\n    this._disposeObjects('_dateFormat', '_timeFormat', '_replacementManager');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.ToolBar', {\n  extend: qx.ui.toolbar.ToolBar,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (uploadManager, showOnly) {\n    this.base(arguments);\n\n    if (showOnly) {\n      this.__showOnly = showOnly;\n    }\n\n    this._menuBar = cv.ui.manager.MenuBar.getInstance();\n    this._menuButtonConfig = this._menuBar.getButtonConfiguration();\n    this._uploadManager = uploadManager;\n\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'reload': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-toolbar'\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFolder',\n      event: 'changeFolder'\n    },\n\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFile',\n      event: 'changeFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _menuButtonConfig: null,\n    _uploadManager: null,\n    _menuBar: null,\n    __showOnly: null,\n\n    __show: function (name) {\n      return this.__showOnly === null || this.__showOnly.includes(name);\n    },\n\n    _init: function () {\n      if (!this._uploadManager) {\n        this._uploadManager = new cv.ui.manager.upload.UploadMgr();\n      }\n\n      var fileController = cv.ui.manager.control.FileController.getInstance();\n\n      var createPart = new qx.ui.toolbar.Part();\n      createPart.set({\n        marginLeft: 0\n      });\n      this.add(createPart);\n      var newButton;\n\n      if (this.__show('new-menu')) {\n        newButton = new qx.ui.toolbar.MenuButton(null,\n          cv.theme.dark.Images.getIcon('new-file', 15),\n          this._menuBar.getChildControl('new-menu')\n        );\n        this.bind('folder.writeable', newButton, 'enabled');\n        createPart.add(newButton);\n      } else {\n        if (this.__show('new-config-file')) {\n          newButton = this._createButton('new-config-file', cv.theme.dark.Images.getIcon('new-file', 15));\n          this.bind('folder.writeable', newButton, 'enabled');\n          this.bind('folder', newButton, 'visibility', {\n            converter: function (folder) {\n              return folder === cv.ui.manager.model.FileItem.ROOT ? 'visible' : 'excluded';\n            }\n          });\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-config-file', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        } else if (this.__show('new-file')) {\n          newButton = this._createButton('new-file', null, true);\n          this.bind('folder.writeable', newButton, 'enabled');\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-file', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        }\n        if (this.__show('new-folder')) {\n          newButton = this._createButton('new-folder', cv.theme.dark.Images.getIcon('new-folder', 15), true);\n          this.bind('folder.writeable', newButton, 'enabled');\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-folder', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        }\n      }\n\n      if (this.__show('upload')) {\n        var upload = this._createButton('upload');\n        this._uploadManager.addWidget(upload);\n        this.bind('folder.writeable', upload, 'enabled');\n        createPart.add(upload);\n      }\n\n      if (this.__show('delete')) {\n        var deleteSelection = this._createButton('delete');\n        deleteSelection.addListener('execute', function () {\n          fileController.delete(this.getFile());\n        }, this);\n        this.bind('file', deleteSelection, 'enabled', {\n          converter: function (file) {\n            return !!file && file.isWriteable() && !file.isFake();\n          }\n        });\n        this.add(deleteSelection);\n      }\n\n      if (this.__show('download')) {\n        var download = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('download', 15));\n        download.setAppearance('cv-toolbar-button');\n        download.setToolTipText(qx.locale.Manager.tr('Download'));\n        download.addListener('execute', function () {\n          fileController.download(this.getFile());\n        }, this);\n        // download button is only enabled when a file is selected\n        this.bind('file', download, 'enabled', {\n          converter: function (file) {\n            return !!file && file.getType() === 'file' && !file.isFake();\n          }\n        });\n        createPart.add(download);\n      }\n\n      if (this.__show('validate')) {\n        // config check\n        var checkConfig = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('validate', 15));\n        checkConfig.setAppearance('cv-toolbar-button');\n        checkConfig.setToolTipText(qx.locale.Manager.tr('Validate'));\n        checkConfig.addListener('execute', function () {\n          fileController.validate(this.getFile());\n        }, this);\n\n        // validate button is only enabled when a file is selected\n        this.bind('file', checkConfig, 'enabled', {\n          converter: function (file) {\n            return !!file && file.isConfigFile();\n          }\n        });\n        this.add(checkConfig);\n      }\n\n      if (this.__show('reload')) {\n        var reload = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('reload', 15));\n        reload.setAppearance('cv-toolbar-button');\n        reload.setToolTipText(qx.locale.Manager.tr('Reload'));\n        reload.addListener('execute', function () {\n          this.fireEvent('reload');\n        }, this);\n        this.add(new qx.ui.core.Spacer(), {flex: 1});\n        this.add(reload);\n      }\n    },\n\n    _createButton: function (name, icon, doNotUseCommand) {\n      var args = this._menuButtonConfig[name].args;\n      var button = new qx.ui.toolbar.Button(null, icon || args[1].replace(/\\/[0-9]+$/, '/15'), !doNotUseCommand ? args[2] : null);\n      button.setAppearance('cv-toolbar-button');\n      button.setToolTipText(args[0]);\n      return button;\n    },\n\n    _applyFile: function () {\n\n    },\n\n    _applyFolder: function (value) {\n      if (this._uploadManager) {\n        if (value) {\n          this._uploadManager.setFolder(value)\n        } else {\n          this._uploadManager.resetFolder()\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._menuButtonConfig = null;\n    this._uploadManager = null;\n    this.__menuBar = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.form.FileTabItem', {\n  extend: qx.ui.core.Widget,\n  implement : [qx.ui.form.IModel],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox());\n    this._createChildControl('icon');\n    this._createChildControl('label');\n    this._createChildControl('close');\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'close': 'qx.event.type.Data',\n\n    /** (Fired by {@link qx.ui.form.List}) */\n    \"action\" : \"qx.event.type.Event\"\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'open-file-item'\n    },\n\n    model: {\n      nullable: true,\n      event: 'changeModel',\n      apply: '_applyModel',\n      dereference: true\n    },\n\n    label: {\n      check: 'String',\n      nullable: true,\n      transform: '_transformFilename',\n      event: 'changeLabel',\n      apply: '_applyLabel'\n    },\n\n    icon: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyIcon'\n    },\n\n    permanent: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyPermanent'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyLabel'\n    },\n\n    closeable: {\n      check: 'Boolean',\n      init: true,\n      apply: '_applyCloseable'\n    },\n\n    writeable:{\n      check: 'Boolean',\n      init: true,\n      apply: '_applyLabel'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n      {\n        focused : true,\n        hovered : true,\n        selected : true,\n        dragover : true\n      },\n\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver : function() {\n      this.addState(\"hovered\");\n    },\n\n    _transformFilename: function(name) {\n      if (name === '.') {\n        return '';\n      }\n      return name;\n    },\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut : function() {\n      this.removeState(\"hovered\");\n    },\n\n    _applyPermanent: function (value) {\n      this.setFont(value ? 'default' : 'italic');\n    },\n\n    _applyCloseable: function (value) {\n      this.getChildControl('close').setVisibility(value ? 'visible' : 'excluded');\n    },\n\n    _applyModel: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('file.writeable', this, 'writeable');\n      }\n    },\n\n    _applyIcon: function (value) {\n      var control = this.getChildControl('icon');\n      control.setSource(value);\n      if (value) {\n        control.show();\n      } else {\n        control.exclude();\n      }\n    },\n\n    _applyLabel: function () {\n      var label = this.getChildControl(\"label\");\n      var value = this.getLabel();\n      if (value) {\n        var labelValue = this.getLabel();\n        if (!this.isWriteable() && !this.getModel().getFile().isFake()) {\n          labelValue += ' !';\n          this.setToolTipText(this.tr('This file is not writeable'));\n        } else {\n          this.resetToolTipText();\n        }\n        if (this.isModified()) {\n          labelValue += ' *';\n        }\n        label.setValue(labelValue);\n        label.show();\n      } else {\n        label.exclude();\n        this.resetToolTipText();\n      }\n    },\n\n    _onClose: function () {\n      if (this.isCloseable()) {\n        this.fireDataEvent('close', this.getModel());\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new qx.ui.basic.Image();\n           control.setAppearance('open-file-item/icon');\n           control.setAnonymous(true);\n           control.exclude();\n           this._addAt(control, 0);\n           break;\n\n         case 'label':\n           control = new qx.ui.basic.Label();\n           control.setAppearance('open-file-item/label');\n           control.setAnonymous(true);\n           this._addAt(control, 1);\n           break;\n\n         case 'close':\n           control = new qx.ui.basic.Image('decoration/tabview/close.gif');\n           control.setAppearance('open-file-item/close');\n           if (this.isCloseable()) {\n             control.addListener('tap', this._onClose, this);\n           } else {\n             control.exclude();\n           }\n           this._addAt(control, 2);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.removeListener(\"pointerover\", this._onPointerOver, this);\n    this.removeListener(\"pointerout\", this._onPointerOut, this);\n  }\n});\n","/**\n * Model for Messages shown in Snackbar/Dialog (usually error, warnings or info messages).\n */\nqx.Class.define('cv.ui.manager.model.Message', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    title: {\n      check: 'String',\n      init: '',\n      event: 'changeTitle'\n    },\n\n    content: {\n      check: 'String',\n      init: '',\n      event: 'changeContent'\n    },\n\n    type: {\n      check: ['alert', 'hint', 'warning', 'error'],\n      nullable: true,\n      event: 'changeType'\n    },\n\n    sticky: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeSticky'\n    }\n  }\n});\n","/**\n * View component that shows a snackbar message.\n */\nqx.Class.define('cv.ui.manager.snackbar.Message', {\n  extend: qx.ui.core.Widget,\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox(8));\n    this.addListener('appear', this._onAppear, this);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'close': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-snackbar-msg'\n    },\n\n    model: {\n      check: 'cv.ui.manager.model.Message',\n      nullable: true,\n      apply: '_applyModel'\n    },\n\n    timeout: {\n      check: 'Number',\n      init: 5000,\n      apply: '_applyTimeout'\n    },\n\n    type: {\n      check: ['alert', 'hint', 'warning', 'error'],\n      nullable: true,\n      apply: '_applyType'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _timer: null,\n\n    _applyModel: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n        old.removeRelatedBindings(this.getChildControl('content'));\n      }\n      if (value) {\n        value.bind('title', this.getChildControl('content'), 'value');\n        value.bind('type', this, 'type');\n        value.bind('sticky', this, 'timeout', {\n          converter: function (value) {\n            return value ? 0 : 5000;\n          }\n        });\n        this.getChildControl('close');\n      }\n    },\n\n    _applyType: function (value) {\n      if (value) {\n        this.setDecorator(this.getAppearance() + '-' + value);\n      } else {\n        this.setDecorator(this.getAppearance());\n      }\n    },\n\n    _applyTimeout: function (value) {\n      if (this._timer) {\n        this._timer.stop();\n        if (value === 0) {\n          this._timer = null;\n        }\n      }\n    },\n\n    _onAppear: function () {\n      var timeout = this.getTimeout();\n      if (this._timer) {\n        this._timer.stop();\n      }\n      if (timeout > 0) {\n        this._timer = qx.event.Timer.once(this.close, this, timeout);\n      }\n    },\n\n    close: function () {\n      this.fireDataEvent('close', this.getModel());\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new qx.ui.basic.Image();\n           this._addAt(control, 0);\n           break;\n\n         case 'content':\n           control = new qx.ui.basic.Label();\n           this._addAt(control,1, {flex: 1});\n           break;\n\n         case 'close':\n           control = new qx.ui.basic.Image(cv.theme.dark.Images.getIcon('close', 15));\n           control.addListener('tap', this.close, this);\n           this._addAt(control, 2);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_timer');\n  }\n});\n","/**\n * Abstract base class for all widgets that can display file items.\n */\nqx.Class.define('cv.ui.manager.viewer.AbstractViewer', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n  type: 'abstract',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFile',\n      event: 'changeFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    canHandleAction: function () {\n      return false;\n    },\n    handleAction: function () {},\n    save: function () {},\n    getCurrentContent: function () {},\n\n    _applyFile: function (file, old) {\n      // show icon for file type\n    },\n\n    // overridden\n    _createChildControlImpl : function (id) {\n      var control;\n\n      switch (id) {\n        case 'scroll':\n          control = new qx.ui.container.Scroll();\n          this._add(control);\n          break;\n\n        case 'image':\n          control = new qx.ui.basic.Atom();\n          this.getChildControl('scroll').add(control);\n          control.getChildControl('icon').addListener('resize', this._scaleImage, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * Show images.\n */\nqx.Class.define('cv.ui.manager.viewer.Image', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n\n  /*\n    ***********************************************\n      PROPERTIES\n    ***********************************************\n    */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'image-viewer'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: ['jpg', 'jpeg', 'png', 'gif', 'svg'],\n    TITLE: qx.locale.Manager.tr('Show image'),\n    ICON: cv.theme.dark.Images.getIcon('image', 18),\n\n    /**\n     * Returns size information for images\n     * @param source {String} path to image\n     * @returns {{width: *, aspectRatio: number, height: *}|any | ({aspectRatio: number} & Map)}\n     */\n    getImageData: function (source) {\n      var data = qx.util.ResourceManager.getInstance().getData(source);\n      if (data) {\n        return {\n          width: data[0],\n          height: data[1],\n          aspectRatio: data[0] / data[1]\n        };\n      } else {\n        data = qx.io.ImageLoader.getSize(source);\n        if (data && data.width && data.height) {\n          return Object.assign({\n            aspectRatio: data.width / data.height\n          }, data);\n        }\n      }\n      return null;\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyFile: function (file) {\n      var control = this.getChildControl('image');\n      if (file) {\n        control.setIcon(file.getServerPath());\n        control.setLabel(file.getFullPath());\n        if (!cv.ui.manager.viewer.Image.getImageData(file.getServerPath())) {\n          control.getChildControl('icon').addListenerOnce('loaded', this._scaleImage, this);\n        } else {\n          this._scaleImage();\n        }\n        this.addListener('resize', this._scaleImage, this);\n      } else {\n        control.resetIcon();\n        control.resetLabel();\n        this.removeListener('resize', this._scaleImage, this);\n      }\n    },\n\n    _scaleImage: function () {\n      var bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce('appear', this._scaleImage, this);\n        return;\n      }\n      var file = this.getFile();\n      if (!file) {\n        return;\n      }\n      var icon = this.getChildControl('image').getChildControl('icon');\n      var data = cv.ui.manager.viewer.Image.getImageData(file.getServerPath());\n      var paddingX = 10;\n      var paddingY = 20;\n      var availableHeight = bounds.height - paddingY * 2;\n      var availableWidth = bounds.width - paddingX * 2;\n      var width = availableWidth;\n      var height = Math.round(1 / data.aspectRatio * width);\n      if (height > availableHeight) {\n        height = availableHeight;\n        width = Math.round(data.aspectRatio * availableHeight);\n      }\n      icon.set({\n        width: width,\n        height: height,\n        scale: true\n      });\n    }\n  }\n});\n","/**\n * Show rendered configs.\n */\nqx.Class.define('cv.ui.manager.viewer.Config', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n\n  },\n\n  /*\n    ***********************************************\n      PROPERTIES\n    ***********************************************\n    */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'config-viewer'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^(demo)?\\/?visu_config.*\\.xml/,\n    TITLE: qx.locale.Manager.tr('Config viewer'),\n    ICON: cv.theme.dark.Images.getIcon('preview', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _applyFile: function (file, old) {\n      var control = this.getChildControl('iframe');\n      if (old && old.isConfigFile()) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (file) {\n        if (file.isConfigFile()) {\n          var configName = cv.ui.manager.model.FileItem.getConfigName(file.getFullPath());\n          var url = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')+ '/..') + '?config=' + (configName || '') + '&preview=1';\n          control.setSource(url);\n          control.show();\n          qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n        } else {\n          cv.ui.manager.snackbar.Controller.error(this.tr('%1 is no configuration file', file.getFullPath()));\n        }\n      } else {\n        control.exclude();\n      }\n    },\n\n    _onChange: function (ev) {\n      var data = ev.getData();\n      if (data.type === 'contentChanged') {\n        this.getChildControl('iframe').reload();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'iframe':\n           control = new qx.ui.embed.Iframe();\n           control.exclude();\n           this.getChildControl('scroll').add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * Displays folder content in an explorer like view.\n */\nqx.Class.define('cv.ui.manager.viewer.Folder', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n  implement: [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IModelSelection\n  ],\n  include: [\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.form.MModelSelection,\n    cv.ui.manager.control.MFileEventHandler\n  ],\n\n  /*\n ***********************************************\n   CONSTRUCTOR\n ***********************************************\n */\n  construct: function (noToolbar) {\n    this.base(arguments);\n    cv.ui.manager.model.Preferences.getInstance().bind('startViewMode', this, 'viewMode');\n    this._isImageRegex = new RegExp('\\.(' + cv.ui.manager.viewer.Image.SUPPORTED_FILES.join('|') + ')$', 'i');\n    this.initModel(new qx.data.Array());\n    this._setLayout(new qx.ui.layout.VBox(8));\n\n    this._newItem = new cv.ui.manager.model.FileItem('new', 'new', null).set({\n      fake: true,\n      type: 'file',\n      loaded: true,\n      icon: cv.theme.dark.Images.getIcon('upload'),\n      displayName: this.tr('Upload file'),\n      special: 'add-file'\n    });\n\n    this._debouncedOnFilter = qx.util.Function.debounce(this._onFilter, 500, false);\n    if (!noToolbar) {\n      this._createChildControl('toolbar');\n    }\n    this._createChildControl('filter');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: function isDir(item) {\n      // noinspection JSConstructorReturnsPrimitive\n      return item.getType() === 'dir';\n    },\n    TITLE: qx.locale.Manager.tr('Show folder'),\n    ICON: cv.theme.dark.Images.getIcon('folder', 18)\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\"\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    model: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    permanentFilter: {\n      check: 'Function',\n      nullable: true,\n      apply: '_onFilter'\n    },\n\n    showTextFilter: {\n      check: 'Boolean',\n      init: true,\n      apply: '_applyShowTextFilter'\n    },\n\n    labelConverter: {\n      check: 'Function',\n      nullable: true\n    },\n\n    disableScrolling: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyDisableScrolling'\n    },\n\n    viewMode: {\n      check: ['list', 'preview'],\n      init: 'list',\n      event: 'changeViewMode'\n    }\n  },\n\n  /*\n ***********************************************\n   MEMBERS\n ***********************************************\n */\n  members: {\n    _controller: null,\n    _isImageRegex: null,\n    _newItem: null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER : qx.ui.core.selection.ScrollArea,\n\n    _defaultLabelConverter: function (name) {\n      if (this.getViewMode() === 'list') {\n        // do not remove file type in list mode\n        return name;\n      }\n      var parts = name.split('.');\n      if (parts.length > 1) {\n        parts.pop();\n      }\n      return parts.join('.');\n    },\n\n    _getDelegate: function () {\n      var labelConverter = this.getLabelConverter();\n      var converter = {\n        converter: labelConverter ? labelConverter : this._defaultLabelConverter.bind(this)\n      };\n      return {\n        createItem: function () {\n          return new cv.ui.manager.form.FileListItem();\n        },\n\n        configureItem: function (item) {\n          item.addListener('dbltap', this._onDblTap, this);\n          item.addListener('contextmenu', this._onFsItemRightClick, this);\n          item.addListener('action', this._onFsItemRightClick, this);\n          item.setShowFileActions(true);\n          this.bind('viewMode', item, 'viewMode');\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'model', null, item, index);\n          controller.bindProperty('displayName', 'label', converter, item, index);\n          controller.bindProperty('icon', 'icon', {\n            converter: function (source, file) {\n              if (file.getType() === 'file' && this._isImageRegex.test(file.getName())) {\n                // use the image as icon\n                return file.getServerPath();\n              } else {\n                if (!source) {\n                  return null;\n                }\n                // remove size from icon source\n                var parts = source.split('/');\n                if (parts.length === 3) {\n                  parts.pop();\n                }\n                return parts.join('/');\n              }\n            }.bind(this)\n          }, item, index);\n        }.bind(this)\n      };\n    },\n\n    _onFsItemRightClick: function (ev) {\n      var file = ev.getCurrentTarget().getModel();\n      if (file.getSpecial() === 'add-file') {\n        ev.preventDefault();\n        if (ev.getBubbles()) {\n          ev.stopPropagation();\n        }\n        return;\n      }\n      var menu = cv.ui.manager.contextmenu.GlobalFileItem.getInstance();\n      menu.configure(file);\n      ev.getCurrentTarget().setContextMenu(menu);\n      menu.openAtPointer(ev);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      if (ev.getBubbles()) {\n        ev.stop();\n      }\n    },\n\n    _onDblTap: function (ev) {\n      var file = ev.getCurrentTarget().getModel();\n      if (file.getSpecial() === 'add-file') {\n        // Select file for upload\n\n      } else {\n        qx.event.message.Bus.dispatchByName('cv.manager.open', file);\n      }\n    },\n\n    _applyFile: function (file, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n        this.resetModel();\n      }\n      if (file) {\n        var container = this.getChildControl('list');\n        if (!this._controller) {\n          this._controller = new qx.data.controller.List(null, container);\n          this._controller.setDelegate(this._getDelegate());\n        }\n        file.bind('children', this, 'model');\n        var model = this.getModel();\n        this._newItem.setParent(file);\n        model.addListener('change', function () {\n          if (this.getChildControl('filter').getValue() || this.getPermanentFilter()) {\n            this._onFilter();\n          } else {\n            this._controller.setModel(model);\n          }\n        }, this);\n        this._controller.setModel(model);\n        file.load();\n      } else {\n        if (this._controller) {\n          this._controller.resetModel();\n        }\n        this._newItem.resetParent();\n      }\n    },\n\n    _handleFileEvent: function (ev) {\n      var folder = this.getFile();\n      var data = ev.getData();\n      switch (data.action) {\n        case 'moved':\n          folder.reload();\n          break;\n\n        case 'added':\n        case 'uploaded':\n        case 'created':\n          if (data.path.startsWith(folder.getFullPath())) {\n            folder.reload();\n          }\n          break;\n\n        case 'deleted':\n          if (folder) {\n            if (data.path === folder.getFullPath()) {\n              // this item has been deleted\n              this.dispose();\n            } else if (data.path.startsWith(folder.getFullPath())) {\n              // delete child\n              var children = folder.getChildren();\n              children.some(function (child) {\n                if (child.getFullPath() === data.path) {\n                  children.remove(child);\n                  this.removeRelatedBindings(child);\n                  return true;\n                }\n              }, this);\n            }\n          }\n          var children = this.getModel();\n          children.some(function (child) {\n            if (child.getFullPath() === data.path) {\n              children.remove(child);\n              this.removeRelatedBindings(child);\n              return true;\n            }\n          }, this);\n          break;\n      }\n    },\n\n    _applyShowTextFilter: function (value) {\n      this.getChildControl('filter').setVisibility(value ? 'visible' : 'excluded');\n    },\n\n    _onFilter: function () {\n      if (this._controller) {\n        var filterString = this.getChildControl('filter').getValue();\n        var filterFunction = this.getPermanentFilter();\n        var filtered = this.getModel().filter(function (file) {\n          return (!filterFunction || filterFunction(file)) && (!filterString || file.getName().includes(filterString));\n        });\n        this._controller.setModel(filtered);\n      }\n    },\n\n    getChildrenContainer: function () {\n      return this.getChildControl('list');\n    },\n\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild : function(e) {\n      this.fireDataEvent(\"addItem\", e.getData());\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild : function(e) {\n      this.fireDataEvent(\"removeItem\", e.getData());\n    },\n\n    _onFileEvent: function (ev) {\n      var data = ev.getData();\n      switch (data.action) {\n        case 'deleted':\n          break;\n      }\n    },\n\n    _applyDisableScrolling: function (value) {\n      if (value) {\n        this.getChildControl('scroll').exclude();\n        this._addAt(this.getChildControl('list'), 1, {flex: 1});\n      } else {\n        var scrollContainer = this.getChildControl('scroll');\n        scrollContainer.show();\n        scrollContainer.add(this.getChildControl('list'));\n        this._addAt(scrollContainer, 1, {flex: 1});\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n      var control;\n\n      switch (id) {\n        case 'toolbar':\n          control = new cv.ui.manager.ToolBar(null, ['new-file', 'new-folder', 'upload', 'reload']);\n          this.bind('file', control, 'folder');\n          control.addListener('reload', function () {\n            this.getFile().reload();\n          }, this);\n          this._addAt(control, 0);\n          break;\n\n        case 'filter':\n          control = new qx.ui.form.TextField();\n          control.set({\n            placeholder: this.tr('Filter by name...'),\n            liveUpdate: true,\n            margin: 8\n          });\n          if (!this.isShowTextFilter()) {\n            control.exclude();\n          }\n          control.addListener('changeValue', this._debouncedOnFilter, this);\n          this._addAt(control, 1);\n          break;\n\n        case 'scroll':\n          control = new qx.ui.container.Scroll();\n          this._addAt(control, 2, {flex: 1});\n          break;\n\n        case 'list':\n          control = new qx.ui.container.Composite(new qx.ui.layout.Flow(8, 8));\n\n          // Used to fire item add/remove events\n          control.addListener(\"addChildWidget\", this._onAddChild, this);\n          control.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n          if (this.isDisableScrolling()) {\n            this._addAt(control, 1, {flex: 1});\n          } else {\n            this.getChildControl('scroll').add(control);\n          }\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_controller');\n    this._isImageRegex = null;\n    cv.ui.manager.model.Preferences.getInstance().removeRelatedBindings(this);\n  }\n});\n","/**\n * Shows the available icons.\n */\nqx.Class.define('cv.ui.manager.viewer.Icons', {\n  extend: cv.ui.manager.viewer.Folder,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this._disableFileEvents = true\n    this.base(arguments, true);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^CometVisu-Icons$/i,\n    TITLE: qx.locale.Manager.tr('Show icons'),\n    ICON: cv.theme.dark.Images.getIcon('icons', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _getDelegate: function () {\n      return {\n        createItem: function () {\n          return new cv.ui.manager.core.IconAtom();\n        },\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'label', null, item, index);\n        }\n      };\n    },\n\n    _onFilter: function () {\n      var filterString = this.getChildControl('filter').getValue();\n      var filtered = this.getModel().filter(function (name) {\n        return name.includes(filterString);\n      });\n      this._controller.setModel(filtered);\n    },\n\n    _applyFile: function(file, old) {\n      if (file) {\n        var container = this.getChildControl('list');\n        if (!this._controller) {\n          this._controller = new qx.data.controller.List(null, container);\n          this._controller.setDelegate(this._getDelegate());\n        }\n        var model = this.getModel();\n        // as the file is just a fake file, we do not really care about it\n        Object.keys(cv.IconConfig.DB).filter(function (name) {\n          var entry = cv.IconConfig.DB[name];\n          return entry['*'] && entry['*']['*'] && qx.lang.Type.isFunction(entry['*']['*']['*']);\n        }).forEach(function (name) {\n          model.push(name);\n        }, this);\n        if (this.getChildControl('filter').getValue() || this.getPermanentFilter()) {\n          this._onFilter();\n        } else {\n          this._controller.setModel(model);\n        }\n      } else {\n        if (this._controller) {\n          this._controller.resetModel();\n        }\n      }\n    }\n  }\n});\n","/**\n * Simple view that provides all of the file-related features of the old editor in an easy to use way.\n */\nqx.Class.define('cv.ui.manager.Start', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox());\n    this._configRegex = /^visu_config_?([^.]+)?\\.xml$/;\n    [ 'toolbar', 'configs-title', 'configs-toolbar', 'configs',\n      'demo-configs-title', 'demo-configs',\n      'media-title', 'media-toolbar', 'media',\n      'misc-title', 'misc'\n    ].forEach(this._createChildControl, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_loadRoot',\n      event: 'changeFile'\n    },\n    appearance: {\n      refine: true,\n      init: 'cv-start'\n    },\n\n    selectedItem: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applySelectedItem'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _configRegex: null,\n    _ignoreSelectionChanges: false,\n    _previewButton: null,\n    _listButton: null,\n    _radioGroup: null,\n\n    save: function () {},\n    getCurrentContent: function () {},\n    canHandleAction: function () {\n      return false;\n    },\n    handleAction: function () {},\n\n    _loadRoot: function (value) {\n      this.getChildControl('configs').setFile(value);\n      var found = 0;\n\n      value.load(function () {\n        value.getChildren().some(function (file) {\n          if (file.getName() === 'media') {\n            this.getChildControl('media').setFile(file);\n            this.getChildControl('media-toolbar').setFolder(file);\n            found++;\n          } else if (file.getName() === 'demo') {\n            this.getChildControl('demo-configs').setFile(file);\n            found++;\n          }\n          return found === 2;\n        }, this);\n      }, this);\n    },\n\n    _onChangeSelection: function (ev) {\n      if (this._ignoreSelectionChanges === false) {\n        var list = ev.getTarget();\n        var selection = ev.getData();\n        this._ignoreSelectionChanges = true;\n\n        // unselect the other lists\n        ['configs', 'demo-configs', 'media'].forEach(function (name) {\n          var control = this.getChildControl(name);\n          if (control !== list) {\n            control.resetSelection();\n          }\n        }, this);\n        this._ignoreSelectionChanges = false;\n        if (selection.length > 0) {\n          this.setSelectedItem(selection[0].getModel());\n        }\n      }\n    },\n\n    _applySelectedItem: function () {\n    },\n\n    _onToggleExpand: function (ev) {\n      var control = this.getChildControl(ev.getTarget().getUserData('control'));\n      if (control.getVisibility() === 'visible') {\n        control.exclude();\n        ev.getTarget().setIcon(cv.theme.dark.Images.getIcon('drop-down', 18));\n      } else {\n        control.show();\n        ev.getTarget().setIcon(cv.theme.dark.Images.getIcon('drop-up', 18));\n      }\n    },\n\n    _onChangeViewMode: function () {\n      switch (cv.ui.manager.model.Preferences.getInstance().getStartViewMode()) {\n        case 'list':\n          this._radioGroup.setSelection([this._listButton]);\n          break;\n\n        case 'preview':\n          this._radioGroup.setSelection([this._previewButton]);\n          break;\n      }\n\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'scroll-container':\n           control = new qx.ui.container.Scroll();\n           this._add(control, {flex: 1});\n           break;\n\n         case 'content':\n           control = new qx.ui.container.Composite(new qx.ui.layout.VBox(8));\n           this.getChildControl('scroll-container').add(control);\n           break;\n\n         case 'toolbar':\n           control = new qx.ui.toolbar.ToolBar();\n           var part = new qx.ui.toolbar.Part();\n           var listButton = this._listButton = new qx.ui.toolbar.RadioButton('', cv.theme.dark.Images.getIcon('listViewMode', 22));\n           listButton.setUserData('mode', 'list');\n           listButton.set({\n             show: 'icon',\n             toolTipText: this.tr('List mode')\n           });\n           var previewButton = this._previewButton = new qx.ui.toolbar.RadioButton('', cv.theme.dark.Images.getIcon('previewMode', 22));\n           previewButton.setUserData('mode', 'preview');\n           previewButton.set({\n             show: 'icon',\n             toolTipText: this.tr('Preview mode')\n           });\n           part.add(listButton);\n           part.add(previewButton);\n           control.add(part);\n           this._radioGroup = new qx.ui.form.RadioGroup(listButton, previewButton);\n           this._onChangeViewMode();\n           this._radioGroup.addListener('changeSelection', function (ev) {\n             var selection = ev.getData()[0];\n             cv.ui.manager.model.Preferences.getInstance().setStartViewMode(selection.getUserData('mode'));\n           }, this);\n           cv.ui.manager.model.Preferences.getInstance().addListener('changeStartViewMode', this._onChangeViewMode, this);\n\n           this._add(control);\n           break;\n\n         case 'configs-title':\n           control = new qx.ui.basic.Atom(this.tr('Configurations'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'configs');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('configs-header').add(control);\n           break;\n\n         case 'configs-header':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'configs-toolbar':\n           control = new cv.ui.manager.ToolBar(null, ['new-config-file', 'upload', 'reload']);\n           control.setFolder(cv.ui.manager.model.FileItem.ROOT);\n           control.addListener('reload', function () {\n             cv.ui.manager.model.FileItem.ROOT.reload();\n           }, this);\n           this.getChildControl('configs-header').add(control);\n           break;\n\n         case 'configs':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             permanentFilter: function (file) {\n               var match = this._configRegex.exec(file.getName());\n               return !!match && (!match[1] || !match[1].endsWith('temp'));\n             }.bind(this),\n             labelConverter: function (name, file) {\n               if (file.isFake()) {\n                 return name;\n               }\n               var configName = cv.ui.manager.model.FileItem.getConfigName(name);\n               return configName ? configName : '<Default>';\n             },\n             file: cv.ui.manager.model.FileItem.ROOT,\n             disableScrolling: true\n           });\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'demo-configs-title':\n           control = new qx.ui.basic.Atom(this.tr('Demo configurations'), cv.theme.dark.Images.getIcon('drop-down', 18));\n           control.setUserData('control', 'demo-configs');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'demo-configs':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             permanentFilter: function (file) {\n               return this._configRegex.test(file.getName());\n             }.bind(this),\n             labelConverter: function (name) {\n               var configName = cv.ui.manager.model.FileItem.getConfigName(name);\n               return configName ? configName : '<Default>';\n             },\n             disableScrolling: true\n           });\n           control.exclude();\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'media-title':\n           control = new qx.ui.basic.Atom(this.tr('Media files'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'media');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('media-header').add(control);\n           break;\n\n         case 'media-header':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'media-toolbar':\n           control = new cv.ui.manager.ToolBar(null, ['new-file', 'upload', 'reload']);\n           control.addListener('reload', function () {\n             control.getFolder().reload();\n           }, this);\n           this.getChildControl('media-header').add(control);\n           break;\n\n         case 'media':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             disableScrolling: true\n           });\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'misc-title':\n           control = new qx.ui.basic.Atom(this.tr('Miscellaneous'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'misc');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'misc':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             disableScrolling: true\n           });\n           this.__initMiscFolder(control);\n           this.getChildControl('content').add(control, {flex: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    },\n\n    __initMiscFolder: function (folderWidget) {\n      if (!cv.ui.manager.model.FileItem.ROOT.isLoaded()) {\n        cv.ui.manager.model.FileItem.ROOT.addListenerOnce('changeLoaded', function () {\n          this.__initMiscFolder(folderWidget);\n        }, this);\n        return;\n      }\n      // find the real 'hidden.php' in the root folder\n      var specialFiles = [cv.ui.manager.model.FileItem.getIconFile()];\n      cv.ui.manager.model.FileItem.ROOT.getChildren().some(function (file) {\n        if (file.getFullPath() === 'hidden.php') {\n          // set some special flags needed to configure the special hidden configuration file\n          file.set({\n            overrideIcon: true,\n            icon: cv.theme.dark.Images.getIcon('hidden-config', 15),\n            displayName: qx.locale.Manager.tr('Hidden configuration'),\n            fake: true\n          });\n          specialFiles.unshift(file);\n          return true;\n        }\n      });\n      var fakeFolder = new cv.ui.manager.model.FileItem('fake', 'fake', cv.ui.manager.model.FileItem.ROOT, specialFiles).set({\n        fake: true,\n        type: 'dir',\n        loaded: true\n      });\n      folderWidget.setFile(fakeFolder);\n      folderWidget.addListener('changeSelection', this._onChangeSelection, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._configRegex = null;\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeStartViewMode', this._onChangeViewMode, this);\n    this._disposeObjects('_previewButton', '_listButton', '_radioGroup');\n  }\n});\n","/**\n * Abstract base class for all editors.\n */\nqx.Class.define('cv.ui.manager.editor.AbstractEditor', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n  type: \"abstract\",\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._initClient();\n  },\n\n  /*\n ***********************************************\n   PROPERTIES\n ***********************************************\n */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      apply: '_loadFile'\n    },\n\n    content: {\n      nullable: true,\n      event: 'changeContent',\n      apply: '_applyContent'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _handledActions: null,\n\n    canHandleAction: function (actionName) {\n      if (actionName === 'save' && this.getFile() && !this.getFile().isWriteable()) {\n        return false;\n      }\n      return this._handledActions && this._handledActions.includes(actionName);\n    },\n\n    handleAction: function (actionName) {\n      if (this.canHandleAction(actionName)) {\n        switch (actionName) {\n          case 'save':\n            this.save();\n            break;\n        }\n      }\n    },\n\n    _initClient: function () {\n      this._client = cv.io.rest.Client.getFsClient();\n    },\n\n    _loadFile: function (file, old) {\n      if (old) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (file && file.getType() === 'file') {\n        if (file.getContent() !== null) {\n          this.setContent(file.getContent());\n        } else {\n          this._loadFromFs();\n        }\n        qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n      } else {\n        this.resetContent();\n      }\n    },\n\n    _loadFromFs: function () {\n      this._client.readSync({path: this.getFile().getFullPath()}, function (err, res) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          this.setContent(res);\n        }\n      }, this);\n    },\n\n    _onChange: function (ev) {\n      var data = ev.getData();\n      if (data.type === 'fsContentChanged' && data.source !== this) {\n        this.setContent(data.data);\n      }\n    },\n\n    // must be overridden by inheriting classes\n    _applyContent: function() {},\n\n    // must be overridden by inheriting classes\n    getCurrentContent: function () {},\n\n    _handleSaveResponse: function (type, err) {\n      if (err) {\n        cv.ui.manager.snackbar.Controller.error(err);\n      } else {\n        var file = this.getFile();\n        var message = type === 'created' ? this.tr('File has been created') : this.tr('File has been saved')\n        cv.ui.manager.snackbar.Controller.info(message);\n        this._onSaved();\n        qx.event.message.Bus.dispatchByName(file.getBusTopic(), {\n          type: type,\n          file: file,\n          data: this.getCurrentContent(),\n          source: this\n        });\n      }\n    },\n\n    save: function (callback, overrideHash) {\n      var file = this.getFile();\n      if (file.isModified()) {\n        if (file.isTemporary()) {\n          this._client.createSync({\n            path: file.getFullPath(),\n            hash: overrideHash || file.getHash(),\n            type: 'file'\n          }, this.getCurrentContent(), callback || qx.lang.Function.curry(this._handleSaveResponse, 'created'), this);\n        } else {\n          this._client.updateSync({\n            path: file.getFullPath(),\n            hash: overrideHash || file.getHash()\n          }, this.getCurrentContent(), callback || qx.lang.Function.curry(this._handleSaveResponse, 'contentChanged'), this);\n        }\n      }\n    },\n\n    _onSaved: function () {\n      var file = this.getFile();\n      file.resetModified();\n      file.resetTemporary();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    if (this._client) {\n      this._client = null;\n    }\n  }\n});\n","/**\n * Monaco Texteditor integration\n */\nqx.Class.define('cv.ui.manager.editor.Source', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = ['save', 'cut', 'copy', 'paste', 'undo', 'redo'];\n    this._basePath = window.location.origin + window.location.pathname + qx.util.LibraryManager.getInstance().get(\"cv\", \"resourceUri\") + '/config/';\n    this.getContentElement().setAttribute('contentEditable', 'true');\n    this.set({\n      droppable: false,\n      focusable: true\n    });\n    this.addListener('dragover', function (ev) {\n      ev.preventDefault();\n      ev.dataTransfer.effectAllowed = \"none\";\n      ev.dataTransfer.dropEffect = \"none\";\n    });\n    this.addListener('drop', function (ev) {\n      ev.preventDefault();\n    });\n    this.addListener('appear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(false);\n    });\n    this.addListener('disappear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n    });\n    this._draw();\n    this._initWorker();\n    this._currentDecorations = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Texteditor'),\n    COUNTER: 0,\n    MONACO_EXTENSION_REGEX: null,\n    SUPPORTED_FILES: function (file) {\n      if (file.getName() === 'hidden.php') {\n        return false\n      } else if (window.monaco && window.monaco.languages) {\n        if (!cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX) {\n          // monaco has already been loaded, we can use its languages configuration to check if this file is supported\n          var extensions = []\n          monaco.languages.getLanguages().forEach(function (lang) {\n            lang.extensions.forEach(function (ext) {\n              ext = ext.replace(/\\./g, '\\\\.')\n              if (extensions.indexOf(ext) ===-1) {\n                extensions.push(ext);\n              }\n            })\n          });\n          cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX = new RegExp('(' + extensions.join('|') + ')$');\n        }\n        return cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX.test(file.getFullPath().toLowerCase())\n      } else {\n        return /\\.(xml|php|css|js|svg|json|md|yaml|conf|ts|rst|py|txt)$/i.test(file.getFullPath().toLowerCase())\n      }\n    },\n    DEFAULT_FOR: /^visu_config.*\\.xml/,\n    ICON: cv.theme.dark.Images.getIcon('text', 18),\n\n    load: function (callback, context) {\n      var version = qx.core.Environment.get('qx.debug') ? 'dev' : 'min';\n      window.documentationMappingPrefix = \"editor/\"; // jshint ignore:line\n      var sourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')+ '/..');\n      var loader = new qx.util.DynamicScriptLoader([\n        sourcePath + 'editor/dependencies/jquery.min.js',\n        sourcePath + 'editor/dependencies/jquery.xpath.min.js',\n        sourcePath + 'editor/lib/Messages.js',\n        sourcePath + 'editor/lib/Schema.js',\n        sourcePath + 'node_modules/monaco-editor/' + version + '/vs/loader.js',\n        'manager/xml.js'\n      ]);\n      loader.addListener('ready', function () {\n        window.require.config({\n          paths: {\n            'vs': sourcePath + 'node_modules/monaco-editor/' + version + '/vs'\n          }\n        });\n        window.require.config({\n          'vs/nls' : {\n            availableLanguages: {\n              '*': qx.locale.Manager.getInstance().getLanguage() !== 'en' ? qx.locale.Manager.getInstance().getLanguage() : ''\n            }\n          }\n        });\n        var noCacheSuffix = '?' + Math.random();\n        window.require([\n          'xml!./resource/visu_config.xsd' + noCacheSuffix,\n          'xml!*./resource/manager/completion-libs/qooxdoo.d.ts', // the xml loader can load any file by adding * before the path,\n          'vs/editor/editor.main'\n        ], function (schema, qxLib) {\n          this.__schema = schema;\n          callback.apply(context);\n          window.monaco.languages.typescript.javascriptDefaults.addExtraLib(qxLib, 'qooxdoo.d.ts');\n          var parsedSchema = new window.Schema(\"visu_config.xsd\", schema); // jshint ignore:line\n          var completionProvider = new cv.ui.manager.editor.completion.Config(parsedSchema);\n          var cvCompletionProvider = new cv.ui.manager.editor.completion.CometVisu();\n          window.monaco.languages.registerCompletionItemProvider('xml', completionProvider.getProvider());\n          window.monaco.languages.registerCompletionItemProvider('javascript', cvCompletionProvider.getProvider());\n\n        }.bind(this));\n      }, this);\n      loader.addListener('failed', function (ev) {\n        qx.log.Logger.error(this, ev.getData());\n      }, this);\n      loader.start();\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __schema: null,\n    _editor: null,\n    _basePath: null,\n    _workerWrapper: null,\n    _currentDecorations: null,\n\n    _initWorker: function () {\n      this._workerWrapper = cv.ui.manager.editor.Worker.getInstance();\n      this._workerWrapper.setEditor(this);\n    },\n\n    _getDefaultModelOptions: function () {\n      return {\n        tabSize: 2,\n        indentSize: 2,\n        insertSpaces: true\n      };\n    },\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        var domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.create(domElement, {\n            suggestOnTriggerCharacters: true,\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            dragAndDrop: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            minimap: {\n              enabled: true\n            },\n            theme: 'vs-dark'\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n          this._editor.onDidChangeModelContent(this._onContentChanged.bind(this));\n        }\n      }\n    },\n\n    handleAction: function (actionName) {\n      if (this.canHandleAction(actionName)) {\n        var monacoAction;\n        switch (actionName) {\n          case 'cut':\n            monacoAction = this._editor.getAction('editor.action.clipboardCutAction');\n            break;\n          case 'copy':\n            monacoAction = this._editor.getAction('editor.action.clipboardCopyAction');\n            break;\n\n          default:\n            this.base(arguments, actionName);\n            break;\n        }\n        if (monacoAction) {\n          monacoAction.run();\n        }\n      }\n    },\n\n    _loadFile: function (file, old) {\n      if (old && this._workerWrapper) {\n        this._workerWrapper.close(old);\n      }\n      if (this._editor) {\n        if (file && file.getType() === 'file' && this.isSupported(file)) {\n          this.base(arguments, file, old);\n        } else {\n          this.base(arguments, null, old);\n        }\n      }\n    },\n\n    _applyContent: function(value) {\n      var file = this.getFile();\n      if (!file) {\n        return;\n      }\n      var model = this._editor.getModel();\n      if (this._workerWrapper) {\n        this._workerWrapper.open(file, value);\n      }\n      var newModel = window.monaco.editor.getModel(file.getUri());\n      if (!newModel) {\n        // create new model\n        if (qx.xml.Document.isXmlDocument(value)) {\n          value = value.documentElement.outerHTML;\n        }\n        newModel = window.monaco.editor.createModel(value, this._getLanguage(file), file.getUri());\n      }\n\n      if (model !== newModel) {\n        newModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel(newModel);\n      } else {\n        this._editor.setValue(value);\n      }\n      this._editor.updateOptions({ readOnly: !file.isWriteable() });\n    },\n\n    getCurrentContent: function () {\n      return this._editor.getValue();\n    },\n\n    _onContentChanged: function () {\n      if (this._workerWrapper) {\n        this._workerWrapper.contentChanged(this.getFile(), this._editor.getValue());\n      }\n    },\n\n    isSupported: function (file) {\n      var parts = file.getName().split('.')\n      var fileType = parts.length > 1 ? parts.pop() : 'txt';\n      var typeExt = '.' + fileType;\n      return monaco.languages.getLanguages().some(function (lang) {\n        return lang.id === fileType || lang.extensions.indexOf(typeExt) >= 0;\n      });\n    },\n\n    showErrors: function (path, errorList) {\n      var markers = [];\n      var model = this._editor.getModel();\n      if (!model) {\n        return;\n      }\n      // \"file_0.xml:286: element layout: Schemas validity error : Element 'layout': This element is not expected.\"\n      if (errorList) {\n//            console.error(errorList);\n        var currentMessage = null;\n        // collect complete error messages\n        errorList.forEach(function (error) {\n          if (/.*\\.xml:[\\d]+:.+/.test(error)) {\n            if (currentMessage !== null) {\n              markers.push({\n                severity: window.monaco.MarkerSeverity.Error,\n                startLineNumber: currentMessage.line,\n                startColumn: 1,\n                endLineNumber: currentMessage.line,\n                endColumn: model.getLineContent(currentMessage.line).length,\n                message: currentMessage.message\n              });\n            }\n            // add marker for completed message\n            var parts = error.split(\":\");\n            var file = parts.shift();\n            var line = parseInt(parts.shift());\n\n            // in the last part there might be a more precise line number for the error\n            var match = /.+line ([\\d]+) -+/.exec(parts[parts.length-1]);\n            if (match) {\n              line = parseInt(match[1]);\n            }\n            if (isNaN(line)) {\n              return;\n            }\n            // new error line\n            currentMessage = {\n              line: line,\n              message: parts.slice(-2).join(\":\"),\n              file: file\n            };\n          } else {\n            currentMessage.message += \"\\n\"+error;\n          }\n        });\n        if (currentMessage !== null) {\n          // show last error too\n          markers.push({\n            severity: window.monaco.MarkerSeverity.Error,\n            startLineNumber: currentMessage.line,\n            startColumn: 1,\n            endLineNumber: currentMessage.line,\n            endColumn: model.getLineContent(currentMessage.line).length,\n            message: currentMessage.message\n          });\n        }\n      }\n      if (this.getFile().getFullPath() === path) {\n        window.monaco.editor.setModelMarkers(model, '', markers);\n      } else {\n        // TODO: save errors for later\n      }\n    },\n\n    showDecorations: function (path, decorators) {\n      if (this.getFile().getFullPath() === path) {\n        this._editor.deltaDecorations(this._currentDecorations[path], decorators);\n      }\n      this._currentDecorations[path] = decorators;\n    },\n\n    _getLanguage: function (file) {\n      var type = file.getName().split('.').pop();\n      switch (type) {\n        case 'svg':\n          return 'xml';\n        case 'js':\n          return 'javascript';\n        case 'md':\n          return 'markdown';\n        default:\n          if (!type) {\n            return 'txt';\n          }\n          // check if monaco knows this ending, otherwise fallback to plaintext\n          var typeExt = '.' + type;\n          var found = monaco.languages.getLanguages().some(function (lang) {\n            return lang.id === type || lang.extensions.indexOf(typeExt) >= 0;\n          });\n          if (!found) {\n            type = 'txt';\n          }\n          return type\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._workerWrapper = null;\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n    qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n  }\n});\n","/**\n * Default XML-Editor included as iframe.\n */\nqx.Class.define('cv.ui.manager.editor.Xml', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n    this._handledActions = ['save'];\n    this.__basePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get(\"cv\", \"resourceUri\") + '/../editor/editor.html');\n    this._draw();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^(demo)?\\/?visu_config.*\\.xml/,\n    TITLE: qx.locale.Manager.tr('Xml-editor'),\n    ICON: cv.theme.dark.Images.getIcon('xml', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _currentContent: null,\n    _iframe: null,\n    _notWriteable: null,\n\n    _draw: function () {\n\n    },\n\n    _loadFile: function (file) {\n      if (this._iframe) {\n        this._iframe.destroy();\n      }\n      if (file) {\n        var match = /.*visu_config_?(.*)\\.xml/.exec(file.getName());\n        if (match) {\n          if (file.isWriteable()) {\n            this._iframe = new qx.ui.embed.Iframe(qx.util.Uri.appendParamsToUrl(this.__basePath, 'embed=1&config=' + match[1]) + '&demo=' + (\n              file.getParentFolder() === 'demo/' ? 'true' : 'false'\n            ));\n            this._iframe.addListener('load', function () {\n              // inject save method\n              this._iframe.getWindow().saveFromIframe = this.saveFromIframe.bind(this);\n            }, this);\n\n            this._add(this._iframe);\n          } else {\n            if (!this._notWriteable) {\n              this._notWriteable = new qx.ui.basic.Atom(this.tr('The XML-Editor does not support files that are not writeable!'));\n              this._notWriteable.set({\n                center: true,\n                font: \"title\"\n              });\n              this._add(this._notWriteable);\n            }\n            this._notWriteable.show();\n          }\n        }\n      }\n    },\n\n    saveFromIframe: function (data, filename, callback) {\n      // create XML string from data\n      var xml = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>';\n      data.forEach(function (elem) {\n        xml += this._elemToXml(elem, '');\n      }, this);\n      this._currentContent = xml;\n      if (!filename) {\n        // mark as changed as long it is no preview change\n        this._onContentChanged();\n      }\n      this.save(filename, callback);\n    },\n\n    save: function (filename, callback) {\n      if (filename) {\n        var file = this.getFile();\n        var relName = filename.split('/').pop();\n        var exists = file.getParent().getChildren().some(function (child) { return child.getName() === relName; });\n        var method = exists ? this._client.updateSync : this._client.createSync;\n        // save preview\n        method({\n          path: file.getPath() + '/' + relName,\n          hash: 'ignore',\n          type: 'file',\n          force: true\n        }, this.getCurrentContent(), function (err) {\n          callback(err);\n        }, this);\n      } else {\n        this.base(arguments, function (err) {\n          if (!err) {\n            this._onSaved();\n          }\n          callback(err);\n        }.bind(this), 'ignore');\n      }\n    },\n\n    _elemToXml: function (elem, indent) {\n      var xml = '';\n      if (elem.nodeName === '#comment') {\n        xml += '\\n' + indent + '<!-- ' + elem.nodeValue + ' -->';\n      } else if (elem.nodeName === '#text') {\n        xml += elem.nodeValue;\n      } else {\n        xml += '\\n'+ indent + '<' + elem.nodeName;\n        Object.keys(elem.attributes).forEach(function (attrName) {\n          xml += ' ' + attrName + '=\"' + elem.attributes[attrName] + '\"';\n        });\n\n        if (!elem.nodeValue && elem.children.length === 0) {\n          xml += '/>';\n        } else {\n          xml += '>';\n          if (elem.nodeName === 'status' && elem.attributes.type === 'html') {\n            xml += '<![CDATA[\\n' + indent + \"  \" + elem.nodeValue + '\\n ]]>';\n          } else if (elem.nodeValue) {\n            xml += elem.nodeValue;\n          }\n          var children = [];\n          elem.children.forEach(function (child) {\n            children.push(this._elemToXml(child, indent + \"  \"));\n          }, this);\n          xml += children.join('');\n          xml += '\\n' + indent + '</' + elem.nodeName + '>';\n        }\n      }\n      return xml;\n    },\n\n    getCurrentContent: function () {\n      return this._currentContent;\n    },\n\n    _onContentChanged: function () {\n      this.getFile().setModified(true);\n    },\n\n    isSupported: function (file) {\n      return cv.ui.manager.editor.Xml.SUPPORTED_FILES.test(file.getName()) && file.isWriteable();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n  this._disposeObjects('_iframe', '_notWriteable');\n  }\n});\n","/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    // overridden, diff editor is read only, no worker needed\n    _initWorker: function () {},\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        var domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: true\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent: function () {\n      var original = this.getOriginalContent();\n      var modified = this.getModifiedContent();\n      if (original && modified) {\n        var file = this.getFile();\n        var originalModel = window.monaco.editor.createModel(original, this._getLanguage(file.getOriginalFile()));\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        var modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(file.getModifiedFile()));\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    clear: function () {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    _loadFile: function (file) {\n      if (this._editor) {\n        if (file && file instanceof cv.ui.manager.model.CompareFiles && this.isSupported(file.getModifiedFile())) {\n          this._client.readSync({path: file.getModifiedFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setModifiedContent(res);\n            }\n          }, this);\n\n          this._client.readSync({path: file.getOriginalFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setOriginalContent(res);\n            }\n          }, this);\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n","/**\n * Editor for the (hidden) configuration.\n */\nqx.Class.define('cv.ui.manager.editor.Config', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = ['save'];\n    this._setLayout(new qx.ui.layout.VBox(8));\n    this._createChildControl('list');\n    this._createChildControl('add-section');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Hidden configuration')\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _model: null,\n    _listController: null,\n    __initialSectionCount: 0,\n\n    _initClient: function () {\n      this._client = cv.io.rest.Client.getConfigClient();\n      this._client.addListener('getSuccess', this._onModelValueChange, this);\n      this._client.addListener('updateSuccess', this._onSaved, this);\n    },\n\n    _loadFile: function (file) {\n      if (file) {\n        this._client.get({section: '*', key: '*'});\n      }\n    },\n\n    _onModelValueChange: function (ev) {\n      this.setContent(ev.getData());\n    },\n\n    // overridden\n    _applyContent: function(value) {\n      var model = this._listController.getModel();\n      model.removeAll();\n\n      this.__initialSectionCount = Object.keys(value).length;\n\n      Object.keys(value).forEach(function (sectionName) {\n        var section = new cv.ui.manager.model.config.Section(sectionName);\n        Object.keys(value[sectionName]).forEach(function (optionKey) {\n          section.addOption(optionKey, value[sectionName][optionKey]);\n        }, this);\n        model.push(section);\n      }, this);\n\n      this.__checkForModification();\n    },\n\n    // overridden\n    getCurrentContent: function () {\n      return this.getContent();\n    },\n\n    _onDeleteSection: function (ev) {\n      var section = ev.getData();\n      var model = this._listController.getModel();\n      model.remove(section);\n      this.__checkForModification();\n    },\n\n    // compare current controller model with the loaded config content\n    __checkForModification: function () {\n      var file = this.getFile();\n      if (this.__initialSectionCount !== this._listController.getModel().length) {\n        file.setModified(true);\n        return;\n      }\n      var modified = this.getChildControl('list').getChildren().some(function (sectionListItem) {\n        return sectionListItem.isModified();\n      }, this);\n      file.setModified(modified);\n    },\n\n    save: function () {\n      // check for duplicate section names of keys\n      var model = this._listController.getModel();\n      var keys = [];\n      var valid = true;\n      model.forEach(function (section) {\n        var key = section.getName();\n        if (!keys.includes(key)) {\n          keys.push(key);\n        } else {\n          valid = false;\n          cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Section name duplicate: \"%1\".', key));\n        }\n        // check for key duplicates in this sections options\n        var optionKeys = [];\n        section.getOptions().forEach(function (option) {\n          var optionKey = option.getKey();\n          if (!optionKeys.includes(optionKey)) {\n            optionKeys.push(optionKey);\n          } else {\n            valid = false;\n            cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Option key duplicate: \"%1\" in section \"%2\".', optionKey, key));\n          }\n        }, this);\n      }, this);\n\n      if (valid) {\n        var data = {};\n        this._listController.getModel().forEach(function (section) {\n          var options = {};\n          section.getOptions().forEach(function (option) {\n            options[option.getKey()] = option.getValue();\n          })\n          data[section.getName()] = options;\n        }, this);\n        this._client.saveSync(null, data, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(this.tr('Saving hidden config failed with error %1 (%2)', err.status, err.statusText));\n          } else {\n            cv.ui.manager.snackbar.Controller.info(this.tr('Hidden config has been saved'));\n            this._onSaved();\n          }\n        }, this);\n      } else {\n        cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Section is invalid and has not been saved.'));\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'list':\n           control = new qx.ui.form.List();\n           control.setEnableInlineFind(false);\n           this._listController = new qx.data.controller.List(new qx.data.Array(), control);\n           this._listController.setDelegate({\n             createItem: function () {\n               return new cv.ui.manager.form.SectionListItem();\n             },\n\n             configureItem: function (item) {\n               item.addListener('delete', this._onDeleteSection, this);\n               item.addListener('changeModified', this.__checkForModification, this);\n             }.bind(this),\n\n             bindItem: function (controller, item, index) {\n               controller.bindProperty('', 'model', null, item, index);\n             }\n           });\n           this._add(control, {flex: 1});\n           break;\n\n         case 'buttons':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox(8));\n           this._add(control);\n           break;\n\n         case 'add-section':\n           control = new qx.ui.form.Button(this.tr('Add section'));\n           control.addListener('execute', function () {\n             this._listController.getModel().push(new cv.ui.manager.model.config.Section(''));\n             this.__checkForModification();\n           }, this);\n           this.getChildControl('buttons').add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_model', '_listController');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.editor.Worker', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._files = {};\n    // create WebWorker\n    this._worker = new Worker(qx.util.ResourceManager.getInstance().toUri('manager/worker.js'));\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._validationCallbacks = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    editor: {\n      check: 'cv.ui.manager.editor.Source',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _worker: null,\n    _files: null,\n    _validationCallbacks: null,\n\n    open: function (file, code, schema) {\n      this._worker.postMessage([\"openFile\", {\n        path: file.getFullPath(),\n        code: qx.xml.Document.isXmlDocument(code) ? code.documentElement.outerHTML : code,\n        schema: schema\n      }]);\n      this._files[file.getFullPath()] = file;\n    },\n\n    close: function (file) {\n      this._worker.postMessage([\"closeFile\", {\n        path: file.getFullPath()\n      }]);\n      delete this._files[file.getFullPath()];\n    },\n\n    contentChanged: function (file, content) {\n      this._worker.postMessage([\"contentChange\", {\n        path: file.getFullPath(),\n        code: content\n      }]);\n    },\n\n    validateConfig: function (file) {\n      if (file.isConfigFile()) {\n        return new Promise(function (resolve, reject) {\n          // check if there is already one validation request ongoing\n          var url = file.getServerPath();\n          if (!this._validationCallbacks.hasOwnProperty(url)) {\n            this._validationCallbacks[url] = [resolve];\n            this._worker.postMessage([\"validateConfig\", {\n              path: url\n            }]);\n          } else {\n            this._validationCallbacks[url].push(resolve);\n          }\n        }.bind(this));\n      } else {\n        qx.log.Logger.error(this, file.getFullPath() + ' is no configuration file');\n      }\n    },\n\n    _onMessage: function (e) {\n      var topic = e.data.shift();\n      var data = e.data.shift();\n      var path = e.data.shift();\n      var file = this._files[path];\n      if (!file && topic !== 'validationResult') {\n        qx.log.Logger.error(this, 'no file found for path ' + path + ' ignoring worker message for topic ' + topic);\n        return;\n      }\n      var editor = this.getEditor();\n      switch(topic) {\n        case \"modified\":\n          // new files are always modified, to not override that state\n          if (!file.isTemporary()) {\n            file.setModified(data.modified);\n          }\n          file.setHash(data.currentHash);\n          break;\n\n        case \"errors\":\n          file.setValid(!data || data.length === 0);\n          if (editor) {\n            editor.showErrors(path, data);\n          }\n          break;\n\n        case \"decorations\":\n          if (editor) {\n            editor.showDecorations(path, data);\n          }\n          break;\n\n        case 'validationResult':\n          if (this._validationCallbacks.hasOwnProperty(path)) {\n            var callbacks = this._validationCallbacks[path];\n            delete this._validationCallbacks[path];\n            callbacks.forEach(function(cb) {\n              cb(data);\n            });\n          }\n          break;\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._worker.terminate();\n    this._worker = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.contextmenu.FileItem', {\n  extend: qx.ui.menu.Menu,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (file, noCompare) {\n    this.base(arguments);\n    this._noCompare = noCompare === true;\n    this._commandGroup = qx.core.Init.getApplication().getCommandManager().getActive();\n    this._init();\n    this._dateFormat = new qx.util.format.DateFormat(qx.locale.Date.getDateFormat('medium'));\n    this._timeFormat = new qx.util.format.DateFormat(qx.locale.Date.getTimeFormat('medium'));\n\n    if (file) {\n      this.configure(file);\n    }\n\n    // only react to events when this menu is visible\n    this.addListener('appear', function () {\n      this.setActive(true);\n    });\n    this.addListener('disappear', function () {\n      this.setActive(false);\n    });\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-file-contextmenu'\n    },\n    \n    /* This flag enables the event handling for this menu */\n    active: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _commandGroup: null,\n    _selectedNode: null,\n    _dateFormat: null,\n    _timeFormat: null,\n    _renameDialog: null,\n    _noCompare: false,\n\n    configure: function (file) {\n      this._selectedNode = file;\n      if (file) {\n        var isFolder = file.getType() === 'dir';\n        var folder = isFolder ? file : file.getParent();\n        var isBackup = false;\n        if (folder && folder.getFullPath().startsWith('backup') || file.getFullPath().startsWith('backup')) {\n          isBackup = true;\n        }\n        if (!isFolder) {\n          this.getChildControl('new-file-button').exclude();\n          this.getChildControl('new-folder-button').exclude();\n        } else {\n          this.getChildControl('new-file-button').set({\n            enabled: folder && !isBackup ? folder.isWriteable() : false,\n            visibility: 'visible'\n          });\n          this.getChildControl('new-folder-button').set({\n            enabled: folder && !isBackup ? folder.isWriteable() : false,\n            visibility: 'visible'\n          });\n        }\n        this.getChildControl('clone-file-button').setVisibility(file.isConfigFile() && !isBackup ? 'visible' : 'excluded');\n        this.getChildControl('delete-button').setLabel(file.isTrash() ?\n          this.tr('Clear') :\n          this.tr('Delete'));\n\n        // create compare menu\n        if (!this._noCompare) {\n          var compareMenu = this.getChildControl('compare-menu');\n          compareMenu.removeAll();\n          if (!isBackup) {\n            this.getChildControl('compare-with-button').show();\n            var backups = cv.ui.manager.model.BackupFolder.getInstance().getBackupFiles(file);\n            this.getChildControl('compare-with-button').setEnabled(backups.length > 0);\n            backups.sort(function (a, b) {\n              return b.date.getTime() - a.date.getTime();\n            });\n            var group = null;\n            backups.forEach(function (backupEntry) {\n              var date = this._dateFormat.format(backupEntry.date);\n              if (group !== date) {\n                if (group !== null) {\n                  compareMenu.add(new qx.ui.menu.Separator());\n                }\n                var groupButton = new qx.ui.menu.Button(date);\n                groupButton.setEnabled(false);\n                compareMenu.add(groupButton);\n                group = date;\n              }\n              var button = new qx.ui.menu.Button(this.tr('Backup from %1', this._timeFormat.format(backupEntry.date)));\n              button.setUserData('file', backupEntry.file);\n              button.addListener('execute', this._onCompareWith, this);\n              compareMenu.add(button);\n            }, this);\n          } else {\n            this.getChildControl('compare-with-button').exclude();\n          }\n        }\n\n        var defaultHandler = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n\n        // open with menu\n        var openWithMenu = this.getChildControl('open-with-menu');\n        openWithMenu.removeAll();\n        if (!isBackup) {\n          this.getChildControl('open-with-button').show();\n          var availableHandlers = cv.ui.manager.control.FileHandlerRegistry.getInstance().getAllFileHandlers(file);\n\n          // this menu only makes sense when there is more than one option to select from\n          this.getChildControl('open-with-button').setEnabled(availableHandlers.length > 1);\n          availableHandlers.sort(function (a, b) {\n            return a.Clazz.constructor.TITLE.toString().localeCompare(b.Clazz.constructor.TITLE.toString());\n          });\n          availableHandlers.forEach(function (handlerConf) {\n            var button = new qx.ui.menu.Button(handlerConf.Clazz.constructor.TITLE, handlerConf.Clazz.constructor.ICON);\n            button.setAppearance('open-with-button');\n            if (defaultHandler.Clazz.classname === handlerConf.Clazz.classname) {\n              button.addState('default');\n            }\n            button.setUserData('handlerId', handlerConf.Clazz.classname);\n            button.addListener('execute', this._onOpenWith, this);\n            openWithMenu.add(button);\n          }, this);\n        } else {\n          this.getChildControl('open-with-button').exclude();\n        }\n\n        // validate button\n        this.getChildControl('validate-config-button').setVisibility(file.isConfigFile() && !file.isMounted() && !isBackup ? 'visible' : 'excluded');\n\n        // replacement button\n        if (!isFolder && !isBackup) {\n          this.getChildControl('replace-button').show();\n          this._replacementManager.setFilename(file.getName());\n          this._replacementManager.setFolder(file.getParent());\n        } else {\n          this.getChildControl('replace-button').exclude();\n        }\n        // buttons that need write access\n        ['delete-button', 'replace-button', 'rename-button'].forEach(function (controlName) {\n          this.getChildControl(controlName).setEnabled(!file.isFake() && file.isWriteable() && (!isBackup || controlName === 'delete-button'));\n        }, this);\n        this.getChildControl('download-button').setEnabled(!file.isFake() && file.getType() === 'file');\n        this.getChildControl('restore-button').setVisibility(file.isInTrash() || isBackup ? 'visible' : 'excluded');\n      } else {\n        this.getChildControl('delete-button').set({\n          label: this.tr('Delete'),\n          enabled: false\n        });\n        this.getChildControl('replace-button').exclude();\n        this.getChildControl('download-button').setEnabled(false);\n        this.getChildControl('restore-button').exclude();\n      }\n    },\n\n    _init: function () {\n      if (!this._noNew) {\n        this.add(this.getChildControl('new-file-button'));\n      }\n      this.add(this.getChildControl('clone-file-button'));\n      if (!this._noNew) {\n        this.add(this.getChildControl('new-folder-button'));\n      }\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('open-button'));\n      this.add(this.getChildControl('open-with-button'));\n      if (!this._noCompare) {\n        this.add(this.getChildControl('compare-with-button'));\n      }\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('rename-button'));\n      this.add(this.getChildControl('delete-button'));\n      this.add(this.getChildControl('restore-button'));\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('download-button'));\n      var sep = new qx.ui.menu.Separator();\n      var button = this.getChildControl('replace-button');\n      this.add(sep);\n      this.add(button);\n      button.bind('visibility', sep, 'visibility');\n      sep = new qx.ui.menu.Separator();\n      button = this.getChildControl('validate-config-button');\n      button.bind('visibility', sep, 'visibility');\n      this.add(sep);\n      this.add(button);\n    },\n\n    _onCompareWith: function (ev) {\n      if (this.isActive()) {\n        var compareWith = ev.getTarget().getUserData('file');\n        qx.event.message.Bus.dispatchByName('cv.manager.compareFiles',\n          new cv.ui.manager.model.CompareFiles(compareWith, this._selectedNode)\n        );\n      }\n    },\n\n    _onOpenWith: function (ev) {\n      if (this.isActive()) {\n        var handlerId = ev.getTarget().getUserData('handlerId');\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n          file: this._selectedNode,\n          handler: handlerId\n        });\n      }\n    },\n\n    _onRename: function () {\n      if (this._selectedNode && !this._renameDialog && this.isActive()) {\n        this._renameDialog = new dialog.Prompt({\n          message: this.tr('New name'),\n          callback: function (name) {\n            if (name && name !== this._selectedNode.getName()) {\n              cv.ui.manager.control.FileController.getInstance().rename(this._selectedNode, name);\n            }\n          },\n          context: this,\n          value: this._selectedNode.getName(),\n          caption: this.tr('Rename file'),\n          filter: /[\\w\\d_\\-\\.\\s]/\n        });\n        this._renameDialog.show();\n      }\n    },\n\n    _onDownload: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().download(this._selectedNode);\n      }\n    },\n\n    _onRestore: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().restore(this._selectedNode);\n      }\n    },\n\n    _onValidate: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().validate(this._selectedNode);\n      }\n    },\n\n    _onClone: function () {\n      if (this._selectedNode && this.isActive()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.action.clone', {\n          file: this._selectedNode\n        });\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'new-file-button':\n           control = new qx.ui.menu.Button(this.tr('New file'), cv.theme.dark.Images.getIcon('new-file', 18));\n           control.addListener('execute', function () {\n             if (this._selectedNode.isConfigFile()) {\n               qx.event.message.Bus.dispatchByName('cv.manager.action.new-config-file', this._selectedNode.getParent());\n             } else {\n               qx.event.message.Bus.dispatchByName('cv.manager.action.new-file', this._selectedNode.getType() === 'dir' ? this._selectedNode : this._selectedNode.getParent());\n             }\n           }, this);\n           break;\n\n         case 'clone-file-button':\n           control = new qx.ui.menu.Button(this.tr('Clone file'), cv.theme.dark.Images.getIcon('clone-file', 18));\n           control.exclude();\n           control.addListener('execute', this._onClone, this);\n           break;\n\n         case 'new-folder-button':\n           control = new qx.ui.menu.Button(this.tr('New folder'), cv.theme.dark.Images.getIcon('new-folder', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.action.new-folder', this._selectedNode.getType() === 'dir' ? this._selectedNode : this._selectedNode.getParent());\n           }, this);\n           break;\n\n         case 'rename-button':\n           control = new qx.ui.menu.Button(this.tr('Rename'), cv.theme.dark.Images.getIcon('rename', 18));\n           control.addListener('execute', this._onRename, this);\n           break;\n\n         case 'delete-button':\n           control = new qx.ui.menu.Button(this.tr('Delete'), cv.theme.dark.Images.getIcon('delete', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.action.delete', this._selectedNode);\n           }, this);\n           break;\n\n         case 'download-button':\n           control = new qx.ui.menu.Button(this.tr('Download'), cv.theme.dark.Images.getIcon('download', 18));\n           control.addListener('execute', this._onDownload, this);\n           break;\n\n         case 'open-button':\n           control = new qx.ui.menu.Button(this.tr('Open'), cv.theme.dark.Images.getIcon('open', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.open', this._selectedNode);\n           }, this);\n           break;\n\n         case 'restore-button':\n           control = new qx.ui.menu.Button(this.tr('Restore'), cv.theme.dark.Images.getIcon('trash', 18));\n           control.exclude();\n           control.addListener('execute', this._onRestore, this);\n           break;\n\n         case 'validate-config-button':\n           control = new qx.ui.menu.Button(this.tr('Validate'), cv.theme.dark.Images.getIcon('validate', 18));\n           control.exclude();\n           control.addListener('execute', this._onValidate, this);\n           break;\n\n         case 'replace-button':\n           control = new com.zenesis.qx.upload.UploadMenuButton(this.tr('Replace'), cv.theme.dark.Images.getIcon('upload', 18));\n           control.exclude();\n           this._replacementManager = new cv.ui.manager.upload.UploadMgr();\n           this._replacementManager.setForce(true);\n           this._replacementManager.addWidget(control);\n           break;\n\n         case 'compare-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'compare-with-button':\n           control = new qx.ui.menu.Button(this.tr('Compare with...'), cv.theme.dark.Images.getIcon('compare', 18), null, this.getChildControl('compare-menu'));\n           break;\n\n         case 'open-with-button':\n           control = new qx.ui.menu.Button(this.tr('Open with...'), cv.theme.dark.Images.getIcon('open-with', 18), null, this.getChildControl('open-with-menu'));\n           break;\n\n         case 'open-with-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._commandGroup = null;\n    this._renameDialog = null;\n    this._disposeObjects('_dateFormat', '_timeFormat');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.contextmenu.GlobalFileItem', {\n  extend: cv.ui.manager.contextmenu.FileItem,\n  type: 'singleton'\n});\n","/**\n * Widget for filesystem items in a virtual tree.\n */\nqx.Class.define('cv.ui.manager.tree.VirtualFsItem', {\n  extend: qx.ui.tree.VirtualTreeItem,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'fs-tree-item'\n    },\n\n    editing: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyEditing'\n    },\n\n    name: {\n      check: 'String',\n      init: '',\n      event: 'changeName'\n    },\n\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyTemporary'\n    },\n\n    status: {\n      check: ['valid', 'error'],\n      nullable: true,\n      apply: '_applyStatus'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _applyEditing: function (value, old) {\n      if (value !== old) {\n        var field = this.getChildControl('edit');\n        if (value) {\n          field.setValue(this.getLabel());\n          field.show();\n          qx.event.message.Bus.dispatchByName('cv.manager.tree.enable', false);\n        } else {\n          qx.event.message.Bus.dispatchByName('cv.manager.tree.enable', true);\n          field.exclude();\n          // save new name\n          if (field.getValue() !== this.getName()) {\n            cv.ui.manager.control.FileController.getInstance().rename(this.getModel(), field.getValue());\n          }\n        }\n      }\n    },\n    _applyTemporary: function (value) {\n      if (value) {\n        this.addState('temporary');\n      } else {\n        this.removeState('temporary');\n      }\n    },\n\n    // overridden\n    _applyModel : function(value, old) {\n      this.base(arguments, value, old);\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        if (value.isTrash()) {\n          this.setLabel(this.tr('Trash'));\n        } else {\n          value.bind('name', this, 'label');\n          value.bind('valid', this, 'status', {\n            converter: function (value) {\n              return value === true ? 'valid' : 'error';\n            }\n          });\n        }\n        value.bind('temporary', this, 'temporary');\n        if (value.getType() === 'dir') {\n          this.setDroppable(true);\n          this.addListener('drop', this._onDrop, this);\n        } else {\n          this.setDroppable(false);\n          this.removeListener('drop', this._onDrop, this);\n        }\n      }\n    },\n\n    _applyStatus: function (value) {\n      var control = this.getChildControl('icon');\n      if (value) {\n        switch (value) {\n          case 'valid':\n            control.removeState('error');\n            break;\n\n          case 'error':\n            control.addState('error');\n            break;\n        }\n      }\n    },\n\n    /**\n     * Handle drop events\n     * @param ev {Event}\n     * @private\n     */\n    _onDrop: function (ev) {\n      console.log(ev.getRelatedTarget());\n    },\n\n    __cancelEditing: function () {\n      this.getChildControl('edit').setValue(this.getName());\n      this.setEditing(false);\n    },\n\n    _onKeypress: function (ev) {\n      if (ev.getKeyIdentifier() === 'Enter') {\n        this.setEditing(false);\n      } else if (ev.getKeyIdentifier() === 'Esc') {\n        this.__cancelEditing();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'edit':\n           control = new qx.ui.form.TextField();\n           control.addListener('keypress', this._onKeypress, this);\n           control.exclude();\n           control.addListener('changeVisibility', function (ev) {\n              if (ev.getData() === 'visible') {\n                this.getChildControl('label').exclude();\n              } else {\n                this.getChildControl('label').show();\n              }\n           }, this);\n           control.addListener('blur', function () {\n             this.setEditing(false);\n           }, this);\n           this._add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * A qx.ui.form.ListItem with an additional label overlay over the icon to show the file type\n */\nqx.Class.define('cv.ui.manager.form.FileListItem', {\n  extend: qx.ui.core.Widget,\n  implement : [qx.ui.form.IModel],\n  include: [cv.ui.manager.upload.MDragUpload],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (label, icon, model) {\n    this.base(arguments, label, icon);\n    var layout = new qx.ui.layout.Canvas();\n    layout.setDesktop(true);\n    this._setLayout(layout);\n\n    if (model) {\n      this.setModel(model);\n\n    }\n    this.addListener('pointerover', this._onPointerOver, this);\n    this.addListener('pointerout', this._onPointerOut, this);\n\n    cv.ui.manager.model.Preferences.getInstance().addListener('changeDefaultConfigEditor', this._maintainFileActions, this);\n\n    this.setUploadHint(this.tr('Drop the file here to replace the content.'));\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events: {\n    /** (Fired by {@link qx.ui.form.List}) */\n    'action' : 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-file-item'\n    },\n\n    model: {\n      nullable: true,\n      event: 'changeModel',\n      apply: '_applyModel',\n      dereference: true,\n      check: 'cv.ui.manager.model.FileItem'\n    },\n\n    /**\n     * Show the action buttons.\n     */\n    showFileActions: {\n      check: 'Boolean',\n      init: false,\n      apply: '_maintainFileActions'\n    },\n\n    /** The label/caption/text of the qx.ui.basic.Atom instance */\n    label: {\n      nullable: true,\n      check: 'String',\n      event: 'changeLabel'\n    },\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon */\n    icon: {\n      check: 'String',\n      nullable: true,\n      themeable: true,\n      event: 'changeIcon'\n    },\n\n    /**\n     * The space between the icon and the label\n     */\n    gap: {\n      check : 'Integer',\n      nullable : false,\n      event : 'changeGap',\n      themeable : true,\n      init : 4\n    },\n\n\n    /**\n     * Configure the visibility of the sub elements/widgets.\n     * Possible values: both, label, icon\n     */\n    show: {\n      init : 'both',\n      check : [ 'both', 'label', 'icon' ],\n      themeable : true,\n      inheritable : true,\n      event : 'changeShow'\n    },\n\n\n    /**\n     * The position of the icon in relation to the text.\n     * Only useful/needed if text and icon is configured and 'show' is configured as 'both' (default)\n     */\n    iconPosition: {\n      init   : 'left',\n      check : ['top', 'right', 'bottom', 'left', 'top-left', 'bottom-left' , 'top-right', 'bottom-right'],\n      themeable : true,\n      event: 'changeIconPosition'\n    },\n\n\n    /**\n     * Whether the content should be rendered centrally when to much space\n     * is available. Enabling this property centers in both axis. The behavior\n     * when disabled of the centering depends on the {@link #iconPosition} property.\n     * If the icon position is <code>left</code> or <code>right</code>, the X axis\n     * is not centered, only the Y axis. If the icon position is <code>top</code>\n     * or <code>bottom</code>, the Y axis is not centered. In case of e.g. an\n     * icon position of <code>top-left</code> no axis is centered.\n     */\n    center : {\n      init : false,\n      check : 'Boolean',\n      themeable : true,\n      event: 'changeCenter'\n    },\n\n    /**\n     * Restrict possible file uploads (not supported by every browxer)\n     */\n    acceptUpload: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    viewMode: {\n      check: ['list', 'preview'],\n      init: 'preview',\n      apply: '_applyViewMode'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _uploadManager: null,\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused : true,\n      selected : true,\n      dragover : true,\n      hovered: true\n    },\n\n    _applyViewMode: function () {\n      switch (this.getViewMode()) {\n        case 'list':\n          this.addState('list');\n          this.getChildControl('atom').setLayoutProperties({left: 10, top: 0, bottom: 0, right: null});\n          this.getChildControl('bottom-bar').setLayoutProperties({top: 0, bottom: 0, right: 0, left: null});\n          break;\n\n        case 'preview':\n          this.removeState('list');\n          this.getChildControl('atom').setLayoutProperties({left: 0, top: 0, bottom: 34, right: 0});\n          this.getChildControl('bottom-bar').setLayoutProperties({left: 0, bottom: 0, right: 0, top: null});\n          break;\n      }\n    },\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver : function() {\n      this.addState('hovered');\n    },\n\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut : function() {\n      this.removeState('hovered');\n    },\n\n    _isDroppable: function (files) {\n      if (files.length === 1) {\n        if (this.getModel().getSpecial() === 'add-file') {\n          return true;\n        }\n        var myMime = cv.ui.manager.tree.FileSystem.getMimetypeFromSuffix(this.getModel().getName().split(\".\").pop());\n        return myMime === files[0].type;\n      }\n      return false;\n    },\n\n    _onDrop: function (ev) {\n      ev.preventDefault();\n      if (this.getModel().getSpecial() === 'add-file') {\n        cv.ui.manager.upload.MDragUpload.uploadFile(cv.ui.manager.upload.MDragUpload.getFiles(ev)[0]);\n      } else {\n        dialog.Dialog.confirm(this.tr('Do you really want to replace the \\'%1\\' with the uploaded files content?', this.getModel().getName()), function (confirmed) {\n          if (confirmed) {\n            var newFile = cv.ui.manager.upload.MDragUpload.getFiles(ev)[0];\n            cv.ui.manager.upload.MDragUpload.uploadFile(newFile, this.getModel());\n          }\n        }, this);\n      }\n      this._onStopDragging(ev);\n    },\n\n    _applyModel: function (value) {\n      if (value && value.getType() === 'file') {\n        var control = this.getChildControl('file-type');\n        if (!value.isFake()) {\n          var name = value.getName();\n          this.getChildControl('atom').setToolTipText(this.tr('Double click to open \"%1\"', name));\n          var type = name.split('.').pop();\n\n          // do not use file types that are longer than 4 chars (not enough space)\n          if (type.length <= 4) {\n            var handled = false;\n            switch (type) {\n              case 'xml':\n                control.setValue('</>');\n                handled = true;\n                break;\n\n              case 'js':\n                type = qx.lang.String.firstUp(type); // jshint ignore:line\n              case 'css':\n              case 'conf':\n                control.setValue(type);\n                handled = true;\n                break;\n            }\n            if (handled && this.getViewMode() === 'preview') {\n              control.show();\n            } else {\n              control.exclude();\n            }\n          } else {\n            control.exclude();\n          }\n        }\n\n      } else {\n        this.getChildControl('file-type').exclude();\n        this.getChildControl('atom').resetToolTipText();\n      }\n      // this.getChildControl('bottom-bar').show();\n      // this.setUploadHint(this.tr('Drop the file here to replace the content.'));\n      // this.getChildControl('atom').setToolTipText(this.tr('Double click to open'));\n      this._maintainFileActions();\n      // if (this._uploadManager) {\n      //   try {\n      //     this._uploadManager.removeWidget(this);\n      //   } catch (e) {}\n      // }\n    },\n\n    _onOpenWith: function (ev) {\n      var handlerId = ev.getTarget().getUserData('handlerId');\n      qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n        file: this.getModel(),\n        handler: handlerId\n      });\n    },\n\n    _applyIcon: function (value, old) {\n      this.base(arguments, value, old);\n      if (value && !value.startsWith('@')) {\n        var control = this.getChildControl('atom').getChildControl('icon');\n        if (!cv.ui.manager.viewer.Image.getImageData(value)) {\n          // wait for image to be loaded\n          control.addListenerOnce('loaded', this.__scaleWithAspect, this);\n        } else {\n          this.__scaleWithAspect();\n        }\n      }\n    },\n\n    _maintainFileActions: function () {\n      var file = this.getModel();\n      if (this.isShowFileActions() && file) {\n        this.getChildControl('download-button').setVisibility(file.getType() === 'dir' || file.isFake() ? 'excluded' : 'visible');\n        this.getChildControl('action-button').setVisibility(file.isFake() ? 'excluded' : 'visible');\n        var editorConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, 'edit');\n        var viewerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, 'view');\n        var openButton = this.getChildControl('open-button');\n        if (file.isWriteable() && editorConf) {\n          openButton.setUserData('handlerId', editorConf.Clazz.classname);\n          openButton.set({\n            icon: editorConf.Clazz.ICON || cv.theme.dark.Images.getIcon('edit', 18),\n            enabled: true,\n            toolTipText: editorConf.Clazz.TITLE\n          });\n        } else if(viewerConf) {\n          openButton.setUserData('handlerId', viewerConf.Clazz.classname);\n          openButton.set({\n            icon: viewerConf.Clazz.ICON || cv.theme.dark.Images.getIcon('preview', 18),\n            enabled: true,\n            toolTipText: viewerConf.Clazz.TITLE\n          });\n        } else {\n          openButton.setEnabled(false);\n        }\n        this.getChildControl('open-button');\n        this.getChildControl('action-button');\n        this.getChildControl('bottom-bar').show();\n      } else {\n        this.getChildControl('bottom-bar').exclude();\n      }\n    },\n\n    __scaleWithAspect: function () {\n      var data = cv.ui.manager.viewer.Image.getImageData(this.getIcon());\n      var control = this.getChildControl('atom').getChildControl('icon');\n      var sizeHint = control.getSizeHint();\n      var width = sizeHint.width;\n      var height = Math.round(1 / data.aspectRatio * width);\n      var padding = [0, 0, 0, 0];\n      if (height > sizeHint.height) {\n        height = sizeHint.height;\n        width = Math.round(data.aspectRatio * height);\n        padding[1] = Math.round((sizeHint.width - width) / 2);\n        padding[3] = padding[1];\n      } else {\n        padding[0] = Math.round((sizeHint.height - height) / 2);\n        padding[2] = padding[0];\n      }\n      control.setPadding(padding);\n    },\n\n    _maintainFileTypePosition: function () {\n      var iconBounds = this.getChildControl('atom').getChildControl('icon').getBounds();\n      var top = Math.round(iconBounds.top + iconBounds.height / 2);\n      this.getChildControl('file-type').setLayoutProperties({\n        left: iconBounds.left,\n        top: top,\n        right: iconBounds.left + iconBounds.width,\n        bottom: top + 18\n      });\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n      var control;\n\n      switch (id) {\n        case 'atom':\n          control = new qx.ui.basic.Atom();\n          ['label', 'icon', 'gap', 'iconPosition', 'show', 'center'].forEach(function (prop) {\n            this.bind(prop, control, prop);\n          }, this);\n          control.setAnonymous(true);\n          this._add(control, {top: 0, left: 0, right: 0, bottom: 34});\n          break;\n\n        case 'file-type':\n          control = new qx.ui.basic.Label();\n          control.set({\n            zIndex: 100,\n            anonymous: true,\n            font: 'title',\n            textAlign: 'center',\n            textColor: 'background-main',\n            minWidth: 70\n          });\n          var icon = this.getChildControl('atom').getChildControl('icon');\n          icon.bind('visibility', control, 'visibility');\n          icon.addListener('resize', this._maintainFileTypePosition, this);\n          this._add(control, {width: '100%'});\n          break;\n\n        case 'bottom-bar':\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox(4, 'center'));\n          control.setAnonymous(true);\n          this._add(control, {left: 0, bottom: 0, right: 0});\n          break;\n\n        case 'download-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('download', 18));\n          control.setToolTipText(this.tr('Download file'));\n          control.addListener('execute', function () {\n            cv.ui.manager.control.FileController.getInstance().download(this.getModel());\n          }, this);\n          this.getChildControl('bottom-bar').add(control);\n          break;\n\n        case 'action-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('menu', 18));\n          control.setToolTipText(this.tr('Other file actions'));\n          this.getChildControl('bottom-bar').add(control);\n          control.addListener('tap', function (ev) {\n            this.fireEvent('action', qx.event.type.Tap, [ev.getNativeEvent(), this, ev.getTarget(), false, true]);\n          }, this);\n          break;\n\n        case 'open-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('preview', 18));\n          control.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n              file: this.getModel(),\n              handler: control.getUserData('handlerId')\n            });\n          }, this);\n          this.getChildControl('bottom-bar').add(control);\n          break;\n      }\n      if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    capture: function () {\n      // do not fire capture method for upload-items (see: com.zenesis.qx.upload.MUploadButton)\n      if (!this.getFile() || this.getFile().getSpecial() !== 'add-file') {\n        this.base(arguments);\n      }\n    },\n\n    // overridden\n    releaseCapture: function() {\n      // do not fire capture method for upload-items (see: com.zenesis.qx.upload.MUploadButton)\n      if (!this.getFile() || this.getFile().getSpecial() !== 'add-file') {\n        this.base(arguments);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.removeListener('pointerover', this._onPointerOver, this);\n    this.removeListener('pointerout', this._onPointerOut, this);\n\n    this._disposeObjects('_uploadManager');\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeDefaultConfigEditor', this._maintainFileActions, this);\n  }\n});\n","/**\n * Atom with cv.ui.manager.viewer.SvgIcon instead ob an qx.ui.basic.Image\n */\nqx.Class.define('cv.ui.manager.core.IconAtom', {\n  extend: qx.ui.basic.Atom,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-icon'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyLabel: function (value) {\n      this.base(arguments, value);\n      this.getChildControl('icon').setName(value);\n    },\n\n    /**\n     * Updates the visibility of the icon\n     */\n    _handleIcon : function()\n    {\n      if (!this.getChildControl('icon').getName() || this.getShow() === \"label\") {\n        this._excludeChildControl(\"icon\");\n      } else {\n        this._showChildControl(\"icon\");\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new cv.ui.manager.viewer.SvgIcon();\n           control.setAnonymous(true);\n           this._addAt(control, 0);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * XSD-based code completion provider for the monaco text editor.\n *\n * @since 0.11.0\n * @author Tobias Bräutigam\n */\nqx.Class.define('cv.ui.manager.editor.completion.Config', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (schemaNode) {\n    this.base(arguments);\n    this.__elementCache = {};\n    this._schemaNode = schemaNode;\n    this._dataProvider = cv.ui.manager.editor.data.Provider.getInstance();\n\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __elementCache: null,\n    __metaElementCache: null,\n    _schemaNode: null,\n    _dataProvider: null,\n\n    getLastOpenedTag: function (text) {\n      // get all tags inside of the content\n      var tags = text.match(/<\\/*(?=\\S*)([a-zA-Z-]+)/g);\n      if (!tags) {\n        return undefined;\n      }\n      // we need to know which tags are closed\n      var closingTags = [];\n      for (var i = tags.length - 1; i >= 0; i--) {\n        if (tags[i].indexOf('</') === 0) {\n          closingTags.push(tags[i].substring('</'.length));\n        }\n        else {\n          // get the last position of the tag\n          var tagPosition = text.lastIndexOf(tags[i]);\n          var tag = tags[i].substring('<'.length);\n          var closingBracketIdx = text.indexOf('/>', tagPosition);\n          // if the tag wasn't closed\n          if (closingBracketIdx === -1) {\n            // if there are no closing tags or the current tag wasn't closed\n            if (!closingTags.length || closingTags[closingTags.length - 1] !== tag) {\n              // we found our tag, but let's get the information if we are looking for\n              // a child element or an attribute\n              text = text.substring(tagPosition);\n\n              var openedTag = text.indexOf('<') > text.indexOf('>');\n              var contentSearch = false;\n              var currentAttribute = null;\n              if (openedTag) {\n                var attrMatch = /([\\w\\-_\\.\\d]+)=\"[^\"]*$/.exec(text);\n                contentSearch = !!attrMatch;\n                currentAttribute = attrMatch ? attrMatch[1] : null;\n              }\n              var filteredElementSearch = /<[\\w-_\\d]+$/.test(text);\n              return {\n                tagName: tag,\n                currentAttribute: currentAttribute,\n                filteredElementSearch: filteredElementSearch,\n                isAttributeSearch: !filteredElementSearch && openedTag && !contentSearch,\n                isContentSearch: contentSearch,\n                text: text\n              };\n            }\n            // remove the last closed tag\n            closingTags.splice(closingTags.length - 1, 1);\n          }\n          // remove the last checked tag and continue processing the rest of the content\n          text = text.substring(0, tagPosition);\n        }\n      }\n    },\n\n    findElements: function (parent, elementName, maxDepth, currentDepth, inMeta) {\n      var cache = inMeta === true ? this.__metaElementCache : this.__elementCache;\n      if (elementName in cache) {\n        return cache[elementName];\n      }\n      if (maxDepth < currentDepth) {\n        return null;\n      }\n      if (!parent) {\n        parent = this._schemaNode.allowedRootElements.pages;\n      }\n      if (currentDepth === undefined) {\n        currentDepth = 1;\n      }\n      var allowedElements = parent.getAllowedElements();\n      // console.log(parent.name+\" looking for \"+elementName+\" in tree level \"+currentDepth+ \"(<\"+maxDepth+\") (\"+Object.getOwnPropertyNames(allowedElements).join(\", \")+\")\");\n      if (elementName in allowedElements) {\n        // console.log(\"found \"+elementName+\" in tree level \"+currentDepth);\n        this.__elementCache[elementName] = allowedElements[elementName];\n        return allowedElements[elementName];\n      } else {\n        for (var element in allowedElements) {\n          if (inMeta !== true && element === 'meta') {\n            continue;\n          }\n          if (maxDepth > currentDepth) {\n            var result = this.findElements(allowedElements[element], elementName, maxDepth, currentDepth + 1);\n            if (result) {\n              cache[elementName] = result;\n              // console.log(\"found \" + elementName + \" in tree level \" + currentDepth);\n              return result;\n            }\n          }\n        }\n      }\n\n    },\n\n    isItemAvailable: function (itemName, maxOccurs, items) {\n      // the default for 'maxOccurs' is 1\n      maxOccurs = maxOccurs || '1';\n      // the element can appere infinite times, so it is available\n      if (maxOccurs && maxOccurs === 'unbounded') {\n        return true;\n      }\n      // count how many times the element appeared\n      var count = 0;\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === itemName) {\n          count++;\n        }\n      }\n      // if it didn't appear yet, or it can appear again, then it\n      // is available, otherwise it't not\n      return count === 0 || parseInt(maxOccurs) > count;\n    },\n\n    getElementString: function (element, indent, prefix) {\n      var insertText = indent+prefix+element.name+\" \";\n      // add all required attributes with default values\n      Object.getOwnPropertyNames(element.allowedAttributes).forEach(function(attr) {\n        var attribute = element.allowedAttributes[attr];\n        if (!attribute.isOptional) {\n          insertText += attr+'=\"'+(attribute.defaultValue ? attribute.defaultValue : \"\")+'\" ';\n        }\n      });\n      // add mandatory children\n      var requiredElements = element.getRequiredElements();\n      var allowedContent = element.getAllowedContent();\n      var isContentAllowed = allowedContent._text || requiredElements.length > 0 || !!allowedContent._grouping;\n      if (!isContentAllowed) {\n        // close tag\n        insertText = insertText.trim()+\"/\";\n      } else {\n        // close open tag\n        insertText = insertText.trim()+\">\";\n\n        // insert required elements\n        var children = 0;\n        requiredElements.forEach(function(elemName) {\n          var elem = this.findElements(element, elemName, 1, 0);\n          if (elem) {\n            insertText += \"\\n    \" + this.getElementString(elem, indent + \"    \", \"<\") + \">\";\n            children++;\n          }\n        }, this);\n        // add closing tag\n        if (children > 0) {\n          insertText += \"\\n\"+indent;\n        }\n        insertText += \"</\"+element.name;\n      }\n      return insertText;\n    },\n\n    getAvailableElements: function (element, usedItems) {\n      var availableItems = [];\n      var children = element.getAllowedElements();\n\n      // if there are no such elements, then there are no suggestions\n      if (!children) {\n        return [];\n      }\n      Object.getOwnPropertyNames(children).forEach(function(name) {\n        // get all element attributes\n        var childElem = children[name];\n        // the element is a suggestion if it's available\n        if (this.isItemAvailable(childElem.name, childElem.getBounds().max, usedItems)) {\n          // mark it as a 'field', and get the documentation\n          availableItems.push({\n            label: childElem.name,\n            insertText: this.getElementString(childElem, \"\", \"\"),\n            kind: window.monaco.languages.CompletionItemKind.Field,\n            detail: childElem.type,\n            documentation: childElem.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n      // return the suggestions we found\n      return availableItems;\n    },\n\n    getAvailableAttributes: function (element, usedChildTags) {\n      var availableItems = [];\n      // get all attributes for the element\n      var attrs = element.allowedAttributes;\n      Object.getOwnPropertyNames(attrs).forEach(function(name) { // jshint ignore:line\n        var attr = attrs[name];\n        // accept it in a suggestion list only the attribute is not used yet\n        if (usedChildTags.indexOf(attr.name) === -1) {\n          // mark it as a 'property', and get it's documentation\n          availableItems.push({\n            label: attr.name,\n            insertText: attr.name+'=\"\"',\n            kind: window.monaco.languages.CompletionItemKind.Property,\n            detail: attr.getTypeString(),\n            documentation: attr.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n\n      // return the elements we found\n      return availableItems;\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['<', '\"'],\n        provideCompletionItems: function (model, position) {\n          // get editor content before the pointer\n          var textUntilPosition = model.getValueInRange({\n            startLineNumber: 1,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n          });\n          // parse mappings\n          var completeText = model.getValue();\n          var metaEndPos = completeText.indexOf('</meta>');\n          var textMeta = metaEndPos > 0 ? completeText.substring(0, metaEndPos) : completeText;\n          var mappingNames = [];\n          var stylingNames = [];\n          var templates = {};\n          var map, vmap;\n          var regex = /<mapping name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            mappingNames.push(map[1]);\n          }\n          regex = /<styling name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            stylingNames.push(map[1]);\n          }\n          var templatesStart = textMeta.indexOf('<templates>');\n          if (templatesStart >= 0) {\n            var templatesString = textMeta.substring(templatesStart + 11, textMeta.indexOf('</templates>') - 12).replace(/(?:\\r\\n|\\r|\\n)/g, '');\n            templatesString.split('</template>').forEach(function (rawTemplate) {\n              var nameMatch = /<template name=\"([^\"]+)\"/.exec(rawTemplate);\n              // search for variables\n              var variables = [];\n              var vregex = /{{{?\\s*([\\w\\d]+)\\s*}?}}/gm;\n              while ((vmap = vregex.exec(rawTemplate)) !== null) {\n                variables.push(vmap[1]);\n              }\n              templates[nameMatch[1]] = variables;\n            }, this);\n          }\n\n          // if we want suggestions, inside of which tag are we?\n          var lastOpenedTag = this.getLastOpenedTag(textUntilPosition);\n          // console.log(lastOpenedTag);\n          // get opened tags to see what tag we should look for in the XSD schema\n          var openedTags = [];\n          // attrobutes of the ancestors\n          var openedAttributes = [];\n          // get the elements/attributes that are already mentioned in the element we're in\n          var usedItems = [];\n          var isAttributeSearch = lastOpenedTag && lastOpenedTag.isAttributeSearch;\n          var isContentSearch = lastOpenedTag && lastOpenedTag.isContentSearch;\n          var filteredElementSearch = lastOpenedTag && lastOpenedTag.filteredElementSearch;\n          // no need to calculate the position in the XSD schema if we are in the root element\n          var parts;\n          if (lastOpenedTag) {\n            // try to create a valid XML document\n            parts = lastOpenedTag.text.split(\" \");\n            parts.shift();\n            var cleanedText = textUntilPosition;\n            if (parts.length) {\n              cleanedText = cleanedText.substring(0, cleanedText.length-parts.join(\" \").length)+\">\";\n            }\n            // parse the content (not cleared text) into an xml document\n            var xmlDoc = qx.xml.Document.fromString(cleanedText);\n            var lastChild = xmlDoc.lastElementChild;\n            var i;\n            var lastFound = false;\n            while (lastChild) {\n              openedTags.push(lastChild.tagName);\n              openedAttributes.push(lastChild.attributes);\n              // if we found our last opened tag\n              if (lastChild.tagName === lastOpenedTag.tagName) {\n                lastFound = true;\n                // if we are looking for attributes, then used items should\n                // be the attributes we already used\n                if (lastOpenedTag.isAttributeSearch && lastChild.outerHTML === lastOpenedTag.text) {\n                  var attrs = lastChild.attributes;\n                  for (i = 0; i < attrs.length; i++) {\n                    usedItems.push(attrs[i].nodeName);\n                  }\n                }\n                else {\n                  // if we are looking for child elements, then used items\n                  // should be the elements that were already used\n                  var children = lastChild.children;\n                  for (i = 0; i < children.length; i++) {\n                    if (children[i].tagName.toLowerCase() !== 'parsererror') {\n                      usedItems.push(children[i].tagName);\n                    }\n                  }\n                }\n                break;\n              }\n              // we haven't found the last opened tag yet, so we move to\n              // the next element\n              lastChild = lastChild.lastElementChild;\n            }\n            if (!lastFound) {\n              // fallback -> parse string\n              if (isAttributeSearch || isContentSearch) {\n                parts = lastOpenedTag.text.split(\" \");\n                // skip tag name\n                parts.shift();\n                parts.forEach(function(entry) {\n                  usedItems.push(entry.split(\"=\").shift());\n                });\n              }\n            }\n          }\n          var res = [];\n          var match;\n          // find the last opened tag in the schema to see what elements/attributes it can have\n          var searchedElement = openedTags[openedTags.length-1];\n          if (isContentSearch) {\n            // handle data providers if the is one relevant\n            if (lastOpenedTag.tagName === 'pages' && lastOpenedTag.currentAttribute === 'design') {\n              return this._dataProvider.getDesigns().then(function (sugg) {\n                return {suggestions: sugg};\n              });\n            } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === 'transform') {\n              return {suggestions: this._dataProvider.getTransforms()};\n            } else if (lastOpenedTag.tagName === 'plugin' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getPlugins()};\n            } else if (lastOpenedTag.tagName === 'icon' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getIcons()};\n            } else if (lastOpenedTag.tagName === 'influx') {\n              if (lastOpenedTag.currentAttribute === 'measurement') {\n                return this._dataProvider.getInfluxDBs().then(function (suggestions) {\n                  return {suggestions: suggestions};\n                });\n              } else if (lastOpenedTag.currentAttribute === 'field') {\n                match = /measurement=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                if (match) {\n                  return this._dataProvider.getInfluxDBFields(match[1]).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'tag' && (lastOpenedTag.currentAttribute === 'key' || lastOpenedTag.currentAttribute === 'value') && openedTags.includes('influx')) {\n              var influxAttributes = openedAttributes[openedTags.indexOf('influx')];\n              var attr = influxAttributes.getNamedItem('measurement');\n              if (attr) {\n                if (lastOpenedTag.currentAttribute === 'key') {\n                  return this._dataProvider.getInfluxDBTags(attr.value).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                } else if (lastOpenedTag.currentAttribute === 'value') {\n                  match = /key=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                  if (match) {\n                    return this._dataProvider.getInfluxDBValues(attr.value, match[1]).then(function (suggestions) {\n                      return {suggestions: suggestions};\n                    });\n                  }\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'template' && lastOpenedTag.currentAttribute === 'name' && openedTags.includes('meta')) {\n              res = Object.keys(templates).map(function (name) {\n                return {\n                  label: name,\n                  insertText: name,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.tagName === 'value' &&\n              lastOpenedTag.currentAttribute === 'name' &&\n              !openedTags.includes('meta') &&\n              openedTags.includes('template')) {\n              // TODO: find out template name\n              var templateNames = Object.keys(templates);\n              templateNames.forEach(function (name) {\n                templates[name].forEach(function (variableName) {\n                  res.push({\n                    label: variableName,\n                    insertText: variableName,\n                    detail: qx.locale.Manager.tr('Variable from template %1', name),\n                    kind: window.monaco.languages.CompletionItemKind.Variable\n                  });\n                }, this);\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'mapping') {\n              res = mappingNames.map(function (mappingName) {\n                return {\n                  label: mappingName,\n                  insertText: mappingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'styling') {\n              res = stylingNames.map(function (stylingName) {\n                return {\n                  label: stylingName,\n                  insertText: stylingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            }\n\n            // TODO: completions that have to be retrieved from the backend\n            // * rrds\n            // * Influx: dbs, tags fields\n            // * media files\n\n            searchedElement = lastOpenedTag.tagName;\n          } else if (!isAttributeSearch && filteredElementSearch) {\n            searchedElement = openedTags[openedTags.length-2];\n          }\n          if (searchedElement === 'rrd') {\n            return {suggestions: this._dataProvider.getRrds()};\n          } else if (searchedElement === 'file' && !isAttributeSearch && !isContentSearch && openedTags.includes('files')) {\n            match = /type=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n            var typeFilter = !!match ? match[1] : null;\n            return this._dataProvider.getMediaFiles(typeFilter).then(function (suggestions) {\n              return {suggestions: suggestions};\n            });\n          }\n          var currentItem = this.findElements(this._schemaNode.allowedRootElements.pages, searchedElement, openedTags.length, openedTags.includes('meta'));\n\n          // return available elements/attributes if the tag exists in the schema, or an empty\n          // array if it doesn't\n          if (isContentSearch) {\n            var currentAttribute = usedItems[usedItems.length-1];\n\n            if (currentItem && currentAttribute in currentItem.allowedAttributes) {\n              var attribute = currentItem.allowedAttributes[currentAttribute];\n              var type = attribute.getTypeString();\n              attribute.getEnumeration().forEach(function(entry) {\n                res.push({\n                  label: entry,\n                  kind: window.monaco.languages.CompletionItemKind.Value,\n                  detail: type,\n                  documentation: attribute.getDocumentation().join(\"\\n\")\n                });\n              });\n            }\n          }\n          else if (isAttributeSearch) {\n            // get attributes completions\n            res = currentItem ? this.getAvailableAttributes(currentItem, usedItems) : [];\n          }\n          else {\n            // get elements completions\n            if (lastOpenedTag && lastOpenedTag.text.endsWith(\"</\")) {\n              res.push({\n                label: lastOpenedTag.tagName,\n                kind: window.monaco.languages.CompletionItemKind.Field\n              });\n            } else {\n              res = currentItem ? this.getAvailableElements(currentItem, usedItems) : [];\n            }\n          }\n          return {suggestions: res};\n        }.bind(this)\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__elementCache = null;\n    this._schemaNode = null;\n    this._dataProvider = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.editor.completion.CometVisu', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    TEMPLATES: null,\n\n    getTemplates: function () {\n      if (!this.TEMPLATES) {\n        this.TEMPLATES = [{\n          filterText: \"cvclass\",\n          label: 'CometVisu-Class',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A generic CometVisu class.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Class.define(\"cv.$0\", {\\n  extend: qx.core.Object,\\n\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvwidget\",\n          label: 'CometVisu-Widget',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A CometVisu class for a widget.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Class.define(\"cv.ui.structure.pure.$0\", {\\n  extend: cv.ui.structure.AbstractWidget,\\n\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvinterface\",\n          label: 'CometVisu-Interface',\n          kind: window.monaco.languages.CompletionItemKind.Interface,\n          detail: \"A generic CometVisu Interface.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Interface.define(\"cv.$0\", {\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvmixin\",\n          label: 'CometVisu-Mixin',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A generic CometVisu Mixin.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Mixin.define(\"cv.$0\", {\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvmembers\",\n          label: 'CometVisu-Class members',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"A CometVisu classes members section.\",\n          insertText: '  /*\\n  ***********************************************\\n    MEMBERS\\n  ***********************************************\\n  */\\n  members: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvproperties\",\n          label: 'CometVisu-Class properties',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"A CometVisu classes properties section.\",\n          insertText: '  /*\\n  ***********************************************\\n    PROPERTIES\\n  ***********************************************\\n  */\\n  properties: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvstatics\",\n          label: 'CometVisu-Class statics',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"statics section.\",\n          insertText: '  /*\\n  ***********************************************\\n    STATICS\\n  ***********************************************\\n  */\\n  statics: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvevents\",\n          label: 'CometVisu-Class events',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"events section.\",\n          insertText: '  /*\\n  ***********************************************\\n    EVENTS\\n  ***********************************************\\n  */\\n  events: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvconstructor\",\n          label: 'Constructor',\n          kind: window.monaco.languages.CompletionItemKind.Method,\n          detail: \"constructor.\",\n          insertText: '  /*\\n  ***********************************************\\n    CONSTRUCTOR\\n  ***********************************************\\n  */\\n  construct: function () {\\n    this.base(arguments);\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvdestructor\",\n          label: 'Destructor',\n          kind: window.monaco.languages.CompletionItemKind.Method,\n          detail: \"destructor.\",\n          insertText: '  /*\\n  ***********************************************\\n    DESTRUCTOR\\n  ***********************************************\\n  */\\n  destruct: function () {\\n    this.base(arguments);\\n    $0\\n  }\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }];\n\n        // load plugin template from backend\n        return new Promise(function (resolve, reject) {\n          cv.io.rest.Client.getFsClient().readSync({path: '.templates/Plugin.js'}, function (err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              this.TEMPLATES.push({\n                filterText: \"cvplugin\",\n                label: 'CometVisu-Plugin',\n                kind: window.monaco.languages.CompletionItemKind.Class,\n                detail: \"A CometVisu class for a plugin.\",\n                insertText: res.replace('###SINCE###', cv.Version.VERSION.replace('-dev', '')+ ' ($CURRENT_YEAR)'),\n                insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n              });\n              resolve(this.TEMPLATES);\n            }\n          }, this);\n        }.bind(this));\n      }\n      return Promise.resolve(this.TEMPLATES);\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['cv'],\n        provideCompletionItems: function () {\n          // get editor content before the pointer\n          return this.getTemplates().then(function (sugg) {\n            return {suggestions: sugg};\n          });\n        }.bind(this)\n      };\n    }\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.config.Section', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name) {\n    this.base(arguments);\n    this.setName(name);\n    this.initOptions(new qx.data.Array());\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    name: {\n      check: 'String',\n      event: 'changeName',\n      init: ''\n    },\n\n    options: {\n      check: 'qx.data.Array',\n      deferredInit: true,\n      event: 'changeOptions'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    addOption: function(key, value) {\n      var options = this.getOptions();\n      var found = options.some(function (option) {\n        if (option.getKey() === key) {\n          option.setValue(value);\n        }\n      }, this);\n      if (!found) {\n        options.push(new cv.ui.manager.model.config.Option(key, value));\n      }\n    }\n  }\n});\n","/**\n * This widgets shows and editable config section in a list.\n */\nqx.Class.define('cv.ui.manager.form.SectionListItem', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    var grid = new qx.ui.layout.Grid(8, 8);\n    grid.setColumnFlex(1, 1);\n    grid.setColumnAlign(0, 'left', 'top');\n    this._setLayout(grid);\n    this._createChildControl('section-title');\n    this._createChildControl('list');\n    this._createChildControl('delete');\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config-section'\n    },\n\n    model: {\n      check: \"cv.ui.manager.model.config.Section\",\n      nullable: false,\n      apply: '_applyModel'\n    },\n\n    modified:{\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'delete': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _listController: null,\n    _originalName: null,\n    _originalOptions: null,\n\n    _applyModel: function (value, old) {\n      var nameField = this.getChildControl('name');\n      this.__unbindModel(old);\n      if (value) {\n        value.bind('name', nameField, 'value');\n        this._originalName = value.getName();\n        this._originalOptions = {};\n        value.getOptions().forEach(function (option) {\n          option.addListener('change', this.__checkForModification, this);\n          this._originalOptions[option.getKey()] = option.getValue();\n        }, this);\n        nameField.bind('value', value, 'name');\n        value.addListener('changeName', this.__checkForModification, this);\n        value.bind('options', this._listController, 'model');\n        // add at least one empty entry, when there are no options\n        if (value.getOptions().length === 0) {\n          var emptyOption = new cv.ui.manager.model.config.Option('', '')\n          value.getOptions().push(emptyOption);\n        }\n      } else {\n        this._originalName = null;\n        this._originalOptions = null;\n      }\n    },\n\n    __unbindModel: function (model) {\n      if (model) {\n        var nameField = this.getChildControl('name');\n        if (this._listController) {\n          model.removeRelatedBindings(this._listController);\n        }\n        model.removeListener('changeName', this.__checkForModification, this);\n        model.removeRelatedBindings(nameField);\n        nameField.removeRelatedBindings(model);\n        model.getOptions().forEach(function (option) {\n          option.removeListener('change', this.__checkForModification, this);\n        }, this);\n      }\n    },\n\n    __checkForModification: function () {\n      if (this._originalName !== this.getModel().getName()) {\n        this.setModified(true);\n        return;\n      }\n      // check if the still have the same the same amount of options\n      if (Object.keys(this._originalOptions).length !== this.getModel().getOptions().length) {\n        this.setModified(true);\n        return;\n      }\n      // compare options one by one\n      var modified = this.getModel().getOptions().some(function (option) {\n        return (!this._originalOptions.hasOwnProperty(option.getKey()) ||\n          this._originalOptions[option.getKey()] !== option.getValue()\n        );\n      }, this);\n      this.setModified(modified);\n    },\n\n    _onDeleteOption: function (ev) {\n      var option = ev.getData();\n      var options = this.getModel().getOptions();\n      if (options.length === 1) {\n        // do not delete the last option, just reset its values\n        option.resetKey();\n        option.resetValue();\n      } else {\n        var removed = this.getModel().getOptions().remove(option);\n        if (removed) {\n          removed.removeListener('change', this.__checkForModification, this);\n        }\n      }\n      this.__checkForModification();\n    },\n\n    _onAddOption: function () {\n      var option = new cv.ui.manager.model.config.Option('', '');\n      option.addListener('change', this.__checkForModification, this);\n      this.getModel().getOptions().push(option);\n      this.__checkForModification();\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'section-title':\n           control = new qx.ui.basic.Label(this.tr('Section'));\n           this._add(control, {row: 0, column: 0});\n           break;\n\n         case 'name':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true,\n             required: true\n           });\n           this._add(control, {row: 0, column: 1});\n           break;\n\n         case 'delete':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('delete', 22));\n           control.setToolTipText(this.tr('Delete section'));\n           control.addListener('execute', function() {\n             this.fireDataEvent('delete', this.getModel());\n           }, this);\n           this._add(control, {row: 0, column: 2});\n           break;\n\n         case 'list':\n           control = new qx.ui.form.List();\n           control.setEnableInlineFind(false);\n           this._listController = new qx.data.controller.List(null, control);\n           this._listController.setNullValueTitle('header');\n           this._listController.setAllowNull(true);\n           this._listController.setDelegate({\n             createItem: function () {\n               return new cv.ui.manager.form.OptionListItem();\n             },\n             configureItem: function (item) {\n               item.addListener('delete', this._onDeleteOption, this);\n               item.addListener('add', this._onAddOption, this);\n             }.bind(this),\n             bindItem: function (controller, item, index) {\n               controller.bindProperty('', 'model', null, item, index);\n             }\n           });\n           this._add(control, {row: 1, column: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_listController');\n  }\n});\n","/**\n * QX version of the svg use icon way of displaying the KNF-UF icons.\n */\nqx.Class.define('cv.ui.manager.viewer.SvgIcon', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name) {\n    this.base(arguments);\n    if (name) {\n      this.setName(name);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    name: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyName'\n    },\n\n    appearance: {\n      refine: true,\n      init: 'cv-svg-icon'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __spriteUrl: null,\n    __useElement: null,\n\n    _applyName: function (value) {\n      if (value) {\n        if (!this.__spriteUrl) {\n          this.__spriteUrl = qx.util.ResourceManager.getInstance().toUri('icon/knx-uf-iconset.svg');\n        }\n        if (!this.__useElement.getDomElement()) {\n          this.__useElement.addListenerOnce('appear', function () {\n            this._applyName(value);\n          }, this);\n          return;\n        }\n        // qx.xml.Element.setAttributeNS(document, this.__useElement.getDomElement(), 'http://www.w3.org/1999/xlink', 'xlink:href', this.__spriteUrl + '#kuf-' + value);\n        this.__useElement.getDomElement().setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', this.__spriteUrl + '#kuf-' + value);\n      } else {\n        this.__useElement.removeAttribute('xlink:href');\n      }\n    },\n\n    // overridden\n    _createContentElement : function() {\n      var svgElem = new cv.svg.Element('svg');\n      this.__useElement = new cv.svg.Element('use');\n      svgElem.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n      svgElem.add(this.__useElement);\n      return svgElem;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__useElement = null;\n  }\n});\n","/**\n * Wrapper class for all data providers.\n */\nqx.Class.define('cv.ui.manager.editor.data.Provider', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__cache = {};\n    this._client = cv.io.rest.Client.getDataProviderClient();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __cache: null,\n\n    _getFromCache: function (cacheId) {\n      return this.__cache[cacheId];\n    },\n\n    __clearFromCache: function (cacheId) {\n      if (!cacheId) {\n        this.__cache = {};\n      } else {\n        delete this.__cache[cacheId];\n      }\n    },\n\n    _addToCache: function (cacheId, data) {\n      this.__cache[cacheId] = data;\n    },\n\n    /**\n     * Returns the available design names as array of suggestions.\n     * @returns {Promise<Array>} suggestions\n     */\n    getDesigns: function () {\n      return this.__getData('designs', 'designsSync', null,[], function (res) {\n        return res.map(function (designName) {\n          return {\n            label: designName,\n            insertText: designName,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    /**\n     *\n     * @param cacheId {String}\n     * @param rpc {String|Function} rpcname to use with this._client or function to call\n     * @param rpcContext {Object} rpc context\n     * @param args {Array} rpc arguments\n     * @param converter {Function} converter that converts the response to suggestions for the text editor\n     * @param converterContext {Object} context fot the converter function\n     * @returns {Promise<any>}\n     * @private\n     */\n    __getData: function (cacheId, rpc, rpcContext, args, converter, converterContext) {\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return Promise.resolve(converter.call(converterContext || this, cached));\n      } else {\n        return new Promise(function (resolve, reject) {\n          var handleResponse = function (err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              // cache the raw values not the converted ones\n              this._addToCache(cacheId, res);\n              resolve(converter.call(converterContext || this, res));\n            }\n          };\n          if (!args) {\n            args = [handleResponse, this];\n          } else {\n            args.push(handleResponse);\n            args.push(this);\n          }\n          if (qx.lang.Type.isString(rpc)) {\n            this._client[rpc].apply(rpcContext || this._client, args);\n          } else if (qx.lang.Type.isFunction(rpc)) {\n            rpc.apply(rpcContext, args);\n          }\n        }.bind(this));\n      }\n    },\n\n    getRrds: function () {\n      return this.__getData('rrds', 'rrdsSync', null,[], this._parseDpResponse, this);\n    },\n\n    getInfluxDBs: function () {\n      return this.__getData('influxdbs', 'influxdbsSync', null,[], this._parseDpResponse, this);\n    },\n\n    getInfluxDBFields: function (measurement) {\n      return this.__getData('influxdbfields|' + measurement, 'influxdbfieldsSync', null,[{measurement: measurement}], this._parseDpResponse, this);\n    },\n\n    getInfluxDBTags: function (measurement) {\n      return this.__getData('influxdbtags|' + measurement, 'influxdbtagsSync', null,[{measurement: measurement}], function (res) {\n        return Object.keys(res).map(function (x) {\n          return {\n            label: x,\n            insertText: x,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    getInfluxDBValues: function (measurement, tag) {\n      return this.__getData('influxdbtags|' + measurement, 'influxdbtagsSync', null,[{measurement: measurement}], function (res) {\n        var sug = [];\n        res[tag].forEach(function (x) {\n          sug.push({\n            label: x,\n            insertText: x,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          });\n        });\n        return sug;\n      }, this);\n    },\n\n    _parseDpResponse: function (data) {\n      var target = [];\n      data.forEach(function (entry) {\n        target.push({\n          label: entry.label,\n          insertText: entry.value,\n          kind: window.monaco.languages.CompletionItemKind.EnumMember\n        });\n      }, this);\n      return target;\n    },\n\n    getMediaFiles: function (typeFilter) {\n      var fsClient = cv.io.rest.Client.getFsClient();\n      return this.__getData('media', fsClient.readSync, fsClient,[{path: 'media', recursive: true}], function (res) {\n        return res.filter(function (file) {\n          return !typeFilter || file.name.endsWith('.' + typeFilter);\n        }).map(function (file) {\n          var path = file.parentFolder + file.name;\n          return {\n            label: path,\n            insertText: path,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    /**\n     * Returns the list of available transformations as suggestion entry array.\n     * @returns {Array}\n     */\n    getTransforms: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'transforms|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var transforms = [];\n        Object.keys(cv.Transform.registry).forEach(function (key) {\n          var entry = cv.Transform.registry[key];\n          var suggestion;\n          if (format === 'dp') {\n            suggestion = {\n              label: entry.name + ' [' + key + ']',\n              value: key\n            };\n          } else {\n            suggestion = {\n              label: key,\n              insertText: key,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n            if (entry.lname && entry.lname.hasOwnProperty(qx.locale.Manager.getInstance().getLanguage())) {\n              suggestion.detail = entry.lname[qx.locale.Manager.getInstance().getLanguage()];\n            }\n          }\n          transforms.push(suggestion);\n        }, this);\n        this._addToCache(cacheId, transforms);\n        return transforms;\n      }\n    },\n\n    /**\n     * Returns the plugin names (all defined parts staring with 'plugin-')\n     * @returns {Array}\n     */\n    getPlugins: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'plugins|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var plugins = [];\n        var qxParts = qx.io.PartLoader.getInstance().getParts();\n        Object.keys(qxParts).forEach(function (partName) {\n          if (partName.startsWith('plugin-')) {\n            var pluginName = partName.substring(7);\n            if (format === 'dp') {\n              plugins.push({\n                label: pluginName,\n                value: pluginName\n              });\n            } else {\n              plugins.push({\n                label: pluginName,\n                insertText: pluginName,\n                kind: window.monaco.languages.CompletionItemKind.EnumMember\n              });\n            }\n          }\n        }, this);\n        this._addToCache(cacheId, plugins);\n        return plugins;\n      }\n    },\n\n    getIcons: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'icons|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var icons;\n        if (format === 'monaco') {\n          icons = Object.keys(cv.IconConfig.DB).map(function (iconName) {\n            return {\n              label: iconName,\n              insertText: iconName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          });\n        } else if (format === 'dp') {\n          // dataprovider format\n          icons = Object.keys(cv.IconConfig.DB).map(function (iconName) {\n            return {\n              label: iconName,\n              value: iconName\n            };\n          });\n        }\n        this._addToCache(cacheId, icons);\n        return icons;\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__cache = null;\n  }\n});\n","/**\n * Simple config entry.\n */\nqx.Class.define('cv.ui.manager.model.config.Option', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (key, value) {\n    this.base(arguments);\n    this.setKey(key);\n    this.setValue(value);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    // sent whenever the options key or value has been changed\n    'change': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    key: {\n      check: 'String',\n      init: '',\n      event: 'changeKey',\n      apply: '_applyChange'\n    },\n\n    value: {\n      check: 'String',\n      init: '',\n      event: 'changeValue',\n      apply: '_applyChange'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyChange: function () {\n      this.fireEvent('change');\n    }\n  }\n});\n","/**\n * This widgets shows and editable config option in a list.\n */\nqx.Class.define('cv.ui.manager.form.OptionListItem', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox(8));\n    this._createChildControl('key');\n    this._createChildControl('value');\n    this._createChildControl('key-title');\n    this._createChildControl('value-title');\n    this._createChildControl('delete');\n    this._createChildControl('add');\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config-option'\n    },\n\n    model: {\n      check: \"cv.ui.manager.model.config.Option\",\n      nullable: true,\n      apply: '_applyModel'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'delete': 'qx.event.type.Data',\n    'add': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    // list controller with allowNull calls setLabel\n    setLabel: function (label) {\n\n    },\n\n    // list controller with allowNull calls setIcon\n    setIcon: function () {},\n\n    _applyModel: function (value, old) {\n      var keyField = this.getChildControl('key');\n      var valueField = this.getChildControl('value');\n      var keyTitleField = this.getChildControl('key-title');\n      var valueTitleField = this.getChildControl('value-title');\n      this.__unbindModel(old);\n      if (value) {\n        // bi-directional bind\n        value.bind('key', keyField, 'value');\n        value.bind('value', valueField, 'value');\n        keyField.bind('value', value, 'key');\n        valueField.bind('value', value, 'value');\n        keyField.show();\n        valueField.show();\n        keyTitleField.exclude();\n        valueTitleField.exclude();\n        this.getChildControl('delete').show();\n        this.getChildControl('add').show();\n      } else {\n        keyField.exclude();\n        valueField.exclude();\n        keyTitleField.show();\n        valueTitleField.show();\n        this.getChildControl('delete').hide();\n        this.getChildControl('add').hide();\n      }\n    },\n\n    __unbindModel: function (model) {\n      if (model) {\n        var keyField = this.getChildControl('key');\n        var valueField = this.getChildControl('value');\n        if (model) {\n          model.removeRelatedBindings(keyField);\n          model.removeRelatedBindings(valueField);\n          keyField.removeRelatedBindings(model);\n          valueField.removeRelatedBindings(model);\n        }\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'key':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true,\n             required: true\n           });\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'value':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true\n           });\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'delete':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('delete', 22));\n           control.setToolTipText(this.tr('Delete option'));\n           control.addListener('execute', function() {\n             this.fireDataEvent('delete', this.getModel());\n           }, this);\n           this._add(control);\n           break;\n\n         case 'add':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('add', 18));\n           control.setToolTipText(this.tr('Add option'));\n           control.addListener('execute', function() {\n             this.fireEvent('add');\n           }, this);\n           this._add(control);\n           break;\n\n         case 'key-title':\n           control = new qx.ui.basic.Label(this.tr('Key'));\n           control.exclude();\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'value-title':\n           control = new qx.ui.basic.Label(this.tr('Value'));\n           control.exclude();\n           this._add(control, {width: '40%'});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__unbindModel(this.getModel());\n  }\n});\n"]}