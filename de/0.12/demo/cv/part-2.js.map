{"version":3,"sources":["../../../source/class/cv/ui/manager/IActionHandler.js","../../../source/class/cv/ui/manager/control/MFileEventHandler.js","../../../source/class/cv/ui/manager/control/IFileEventHandler.js","../../../source/class/cv/ui/manager/Main.js","../../../source/class/cv/ui/manager/model/FileItem.js","../../../source/class/cv/ui/manager/model/BackupFolder.js","../../../source/class/cv/ui/manager/control/ActionDispatcher.js","../../../source/class/cv/ui/manager/snackbar/Controller.js","../../../source/class/cv/ui/manager/model/Preferences.js","../../../source/class/cv/ui/manager/control/FileHandlerRegistry.js","../../../source/class/cv/ui/manager/core/GlobalState.js","../../../source/class/cv/ui/manager/model/OpenFile.js","../../../source/class/cv/ui/manager/editor/IEditor.js","../../../source/class/cv/ui/manager/model/CompareFiles.js","../../../source/class/cv/ui/manager/control/FileController.js","../../../source/class/cv/ui/manager/MenuBar.js","../../../source/class/cv/ui/manager/upload/UploadMgr.js","../../../source/class/cv/ui/manager/upload/MDragUpload.js","../../../source/class/cv/ui/manager/tree/FileSystem.js","../../../source/class/cv/ui/manager/ToolBar.js","../../../source/class/cv/ui/manager/form/FileTabItem.js","../../../source/class/cv/ui/manager/model/Message.js","../../../source/class/cv/ui/manager/snackbar/Message.js","../../../source/class/cv/ui/manager/viewer/AbstractViewer.js","../../../source/class/cv/ui/manager/viewer/Image.js","../../../source/class/cv/ui/manager/viewer/Config.js","../../../source/class/cv/ui/manager/viewer/Folder.js","../../../source/class/cv/ui/manager/viewer/Icons.js","../../../source/class/cv/ui/manager/Start.js","../../../source/class/cv/ui/manager/editor/AbstractEditor.js","../../../source/class/cv/ui/manager/editor/Source.js","../../../source/class/cv/ui/manager/editor/Xml.js","../../../source/class/cv/ui/manager/editor/Diff.js","../../../source/class/cv/ui/manager/editor/Config.js","../../../source/class/cv/ui/manager/editor/Worker.js","../../../source/class/cv/ui/manager/contextmenu/FileItem.js","../../../source/class/cv/ui/manager/contextmenu/GlobalFileItem.js","../../../source/class/cv/ui/manager/tree/VirtualFsItem.js","../../../source/class/cv/ui/manager/form/FileListItem.js","../../../source/class/cv/ui/manager/core/IconAtom.js","../../../source/class/cv/ui/manager/editor/completion/Config.js","../../../source/class/cv/ui/manager/editor/completion/CometVisu.js","../../../source/class/cv/ui/manager/model/config/Section.js","../../../source/class/cv/ui/manager/form/SectionListItem.js","../../../source/class/cv/ui/manager/viewer/SvgIcon.js","../../../source/class/cv/ui/manager/editor/data/Provider.js","../../../source/class/cv/ui/manager/model/config/Option.js","../../../source/class/cv/ui/manager/form/OptionListItem.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Interface","define","members","canHandleAction","actionName","handleAction","data","cv","ui","manager","IActionHandler","Mixin","construct","this","_disableFileEvents","event","message","Bus","subscribe","_handleFileEvent","destruct","unsubscribe","control","MFileEventHandler","ev","IFileEventHandler","Class","extend","core","Object","type","include","implement","constructor","call","iconfont","material","Load","model","BackupFolder","getInstance","_checkEnvironment","initOpenFiles","Array","__actionDispatcher","ActionDispatcher","setMain","__initCommands","_draw","_onManagerEvent","tooltip","Manager","statics","ROOT","properties","openFiles","check","deferredInit","writeableFolder","init","currentFolder","nullable","apply","currentSelection","deleteableSelection","renameableSelection","visible","__previewFileIndex","__root","_pane","_tree","_stack","_oldCommandGroup","_managerCommands","_mainContent","_openFilesController","_hiddenConfigFakeFile","_applyVisible","value","Init","getApplication","getCommandManager","setActive","io","rest","Client","getFsClient","checkEnvironmentSync","err","res","snackbar","Controller","error","forEach","env","entity","state","locale","tr","getCurrentSelection","isWriteable","includes","closeCurrentFile","setVisible","_onCreate","readSync","path","FileItem","file","getFullPath","isConfigFile","_onDelete","warn","getData","action","getOpenFiles","copy","some","openFile","getFile","isRelated","closeFile","getCurrentFolder","resetCurrentFolder","getName","handler","_onChangeTreeSelection","Preferences","isQuickPreview","mode","__openSelectedFile","node","getType","setCurrentFolder","getParent","setCurrentSelection","resetCurrentSelection","setEditing","_applyCurrentFolder","old","removeRelatedBindings","bind","resetWriteableFolder","_applyCurrentSelection","converter","resetDeleteableSelection","_onChangeFileSelection","sel","getSelection","length","editorConfig","getItem","handlerId","getHandlerId","FileHandlerRegistry","getFileHandlerById","getFileHandler","instance","setFile","Clazz","add","setSelection","setFocusedWidget","GlobalState","setOpenedFocusedFile","resetOpenedFocusedFile","preview","handlerType","handlerConf","info","classname","isOpen","of","OpenFile","isPermanent","setItem","push","setPermanent","indexOf","getTarget","setModelSelection","force","isCloseable","isModified","resetPermanent","selectionIndex","remove","currentHandler","hasInterface","editor","IEditor","resetFile","resetSelection","resetFocusedWidget","replace","CompareFiles","fileHandlerConf","clear","filter","destroy","window","monaco","oldModel","getModel","getUri","dispose","isTemporary","dialog","Dialog","confirm","confirmed","dispatchByName","selected","_onCloseFile","__getRoot","dom","Element","create","id","style","insertEnd","document","body","theme","Meta","setTheme","Dark","group","command","Group","Command","renameCommand","getActive","item","FileController","_onChangeStackSelection","page","toArray","find","__getFileNamePrompt","callback","context","caption","prompt","Prompt","show","content","folder","existsMessage","handlePrompt","name","filename","match","exec","getChildren","child","set","readable","writeable","loaded","modified","temporary","parentFolder","createSync","getBusTopic","source","addChild","sortElements","refresh","__findDroppable","elem","nodeType","getAttribute","parentNode","domRoot","root","Inline","addListenerOnce","element","getContentElement","getDomElement","addEventListener","target","preventDefault","setRoot","setLayout","layout","Canvas","bottom","left","resize","bounds","getBounds","setLayoutProperties","Math","round","width","setMaxHeight","height","addListener","innerHeight","main","container","Composite","Dock","edge","menuBar","MenuBar","uploadButton","getButton","uploadManager","upload","UploadMgr","splitpane","Pane","rootFolder","fakeIconFile","getIconFile","overrideIcon","open","fakeChildren","icon","dark","Images","getIcon","tree","FileSystem","leftContainer","VBox","leftBar","ToolBar","reload","buttonConfig","getButtonConfiguration","args","flex","list","form","List","setAppearance","controller","setDelegate","createItem","FileTabItem","bindItem","index","bindDefaultProperties","bindProperty","Stack","startOpenFile","setCloseable","_disposeObjects","application","util","DeferredCall","resetRoot","schedule","removeChild","Main","$$instance","marshal","MEventBubbling","parent","initChildren","setFakeChildren","endsWith","__path","setName","setParent","_fakeIconFile","_acceptedFiles",".","media","test","getConfigName","hasChildren","fake","getHiddenConfigFile","displayName","getAcceptedFiles","loading","children","hash","editing","special","valid","mounted","trash","inTrash","__fullPath","__onLoadCallback","isFake","startsWith","_applyName","getDisplayName","setDisplayName","getPath","getParentFolder","_onOpen","isLoaded","load","_maintainIcon","isOverrideIcon","setIcon","isTrash","isMounted","_applyHasChildren","unload","setLoaded","setLoading","removeAll","oldParent","_onGet","getFakeChildren","append","_onError","console","isLoading","getServerPath","LibraryManager","get","sort","a","b","localeCompare","openPath","parts","lang","Type","isArray","split","relPath","shift","setOpen","_onFilesSystemMessage","getBackupFiles","files","pathparts","pop","join","suffix","fileRegex","RegExp","backupFile","date","Date","parseInt","substring","_onAction","focusedWidget","updateBarButtons","button","config","keys","actionId","setEnabled","general","hasHandler","_getHandler","getFocusedWidget","getMain","Widget","_setLayout","initMessages","_onMessage","_listController","getMessages","getChildControl","_initDelegate","msg","Message","title","_typeof","hasOwnProperty","statusText","sticky","appearance","refine","messages","_onCloseMessage","exclude","_createChildControlImpl","_add","prototype","base","_restorePreferences","defaultConfigEditor","quickPreview","expertMode","startViewMode","_savePreferences","bom","Storage","getLocal","Serializer","toNativeObject","store","__registry","__defaults","registerFileHandler","viewer","Image","SUPPORTED_FILES","Config","Icons","Folder","Start","Source","Xml","noTemporaryFiles","noReadOnlyFiles","Diff","_onChangesDefaultConfigEditor","selector","clazz","options","assign","isClass","instanceOf","selectorId","priority","isRegExp","regex","toString","isFunction","isString","fullPath","fileName","handlers","defaultHandler","key","__canHandle","hasFileHandler","setDefault","getDefaultConfigEditor","toLowerCase","getAllFileHandlers","map","removeListener","openedFocusedFile","_applyFile","setHandlerId","permanent","closeable","__ibid","_maintainPermanent","handlerClass","getByName","ICON","removeBinding","resetIcon","TITLE","save","getCurrentContent","original","setOriginalFile","setModifiedFile","originalFile","modifiedFile","getOriginalFile","getModifiedFile","_applyModifiedFile","isInTrash","__fsClient","rename","newName","newPath","resetTemporary","resetModified","moveSync","src","resetEditing","move","restore","__moveFile","targetFileName","targetFile","updateSync","delete","__doDelete","deleteSync","download","createElement","setAttribute","getBaseUrl","display","appendChild","click","validate","__validateConfig","d","alert","Worker","validateConfig","then","close","setValid","trn","menubar","_commandGroup","__buttons","__defaultButtonConfiguration","__buttonConfiguration","_createChildControl","Spacer","editorGroup","RadioGroup","new-file","menu","enabled","new-folder","separator","new-config-file","com","zenesis","UploadMenuButton","save-as","hidden","quit","undo","redo","cut","paste","source-editor","RadioButton","xml-editor","quick-preview","CheckBox","expert-mode","maintainButtons","prefs","getModelSelection","setDefaultConfigEditor","__bindToPreference","buttonName","preferenceName","merge","buttonConf","label","ButtonClass","Button","setValue","Error","Separator","onAfterCreate","basic","Label","Menu","widget","uploadUrl","_init","LAST_ID","multiple","_updateUploadUrl","getFolder","url","setUploadUrl","evt","getFilename","setParam","isForce","progressListenerId","uploadedSize","debug","getSize","stateListenerId","getStatus","forceUpload","getResponse","Json","parse","e","removeListenerById","_getUniqueFileId","setForce","newFile","File","getBrowserObject","getId","size","uploadWidget","getUploadWidget","getUploadHandler","_addFile","getAutoUpload","beginUploads","uploadFile","bomFile","fileSize","setSize","setUploadWidget","UploadButton","replaceFile","replacedFile","setFolder","setDroppable","_applyStartDragListeners","_getLayout","Grow","__syncBounds","uploadMode","uploadHint","onHtml5Drop","getFiles","isAccepted","hasDroppableFile","i","l","dataTransfer","items","kind","getAsFile","__hasEmptyInfo","_boundOnStop","setUserBounds","top","_createMDragUploadChildControlImpl","setZIndex","setBackgroundColor","dropBox","Atom","getUploadHint","iconPosition","rich","center","setWrap","setAnonymous","_onStopDragging","setUploadMode","removeEventListener","_isDroppable","MDragUpload","_applyDragListeners","uploadable","_onDrop","lid","__applyUploadMode","hasChildControl","isVisible","setRootFolder","_onEnableTree","MIMETYPES","text/xml","application/xml","text/javascript","application/x-httpd-php","text/css","image/png","image/svg+xml","text/plain","getMimetypeFromSuffix","mime","mimetype","events","changeSelection","selectedNode","__selectionTimer","__doubleTapWaitingTime","__ignoreSelectionChange","_replacementManager","openPaths","getOpenNodes","_applyRootFolder","setModel","setHideRoot","_applySelectedNode","contextMenu","contextmenu","GlobalFileItem","configure","setContextMenu","_onDblTapTreeSelection","getSelectedNode","stop","fireDataEvent","setSelectedNode","Timer","once","resetContextMenu","resetSelectedNode","_onFsItemRightClick","VirtualFsItem","VirtualTree","selectionMode","minWidth","bindPropertyReverse","toolbar","showOnly","__showOnly","_menuBar","_menuButtonConfig","_uploadManager","__show","newButton","fileController","createPart","Part","marginLeft","MenuButton","_createButton","addWidget","deleteSelection","setToolTipText","checkConfig","fireEvent","doNotUseCommand","_applyFolder","resetFolder","__menuBar","IModel","HBox","_onPointerOver","_onPointerOut","dereference","transform","_forwardStates","focused","hovered","dragover","addState","_transformFilename","removeState","_applyPermanent","setFont","_applyCloseable","setVisibility","_applyModel","_applyIcon","setSource","_applyLabel","getLabel","labelValue","resetToolTipText","_onClose","_addAt","_onAppear","timeout","_timer","_applyType","setDecorator","getAppearance","_applyTimeout","getTimeout","Scroll","_scaleImage","AbstractViewer","getImageData","ResourceManager","aspectRatio","ImageLoader","setLabel","resetLabel","availableHeight","paddingY","paddingX","scale","_onChange","configName","Uri","getAbsolute","embed","Iframe","IMultiSelection","IModelSelection","MMultiSelectionHandling","MRemoteChildrenHandling","MModelSelection","noToolbar","_isImageRegex","initModel","_newItem","_debouncedOnFilter","Function","debounce","_onFilter","addItem","removeItem","permanentFilter","showTextFilter","labelConverter","disableScrolling","viewMode","_controller","SELECTION_MANAGER","selection","ScrollArea","_defaultLabelConverter","getViewMode","_getDelegate","getLabelConverter","FileListItem","configureItem","_onDblTap","setShowFileActions","getCurrentTarget","getSpecial","openAtPointer","getBubbles","stopPropagation","resetModel","getValue","getPermanentFilter","resetParent","_applyShowTextFilter","filterString","filterFunction","filtered","getChildrenContainer","_onAddChild","_onRemoveChild","_onFileEvent","_applyDisableScrolling","scrollContainer","TextField","placeholder","liveUpdate","margin","isShowTextFilter","Flow","isDisableScrolling","IconAtom","IconConfig","DB","entry","_configRegex","selectedItem","_ignoreSelectionChanges","_previewButton","_listButton","_radioGroup","_loadRoot","found","_onChangeSelection","setSelectedItem","_applySelectedItem","_onToggleExpand","getUserData","getVisibility","_onChangeViewMode","getStartViewMode","part","listButton","setUserData","toolTipText","previewButton","setStartViewMode","__initMiscFolder","folderWidget","specialFiles","unshift","fakeFolder","_initClient","_handledActions","_client","_loadFile","getContent","setContent","_loadFromFs","resetContent","_applyContent","_handleSaveResponse","_onSaved","overrideHash","getHash","curry","AbstractEditor","_basePath","location","origin","pathname","droppable","focusable","effectAllowed","dropEffect","FocusHandler","setUseTabNavigation","_initWorker","_currentDecorations","COUNTER","documentationMappingPrefix","sourcePath","loader","DynamicScriptLoader","require","paths","vs","vs/nls","availableLanguages","*","getLanguage","noCacheSuffix","random","schema","qxLib","__schema","languages","typescript","javascriptDefaults","addExtraLib","parsedSchema","Schema","completionProvider","completion","cvCompletionProvider","CometVisu","registerCompletionItemProvider","getProvider","log","Logger","start","_editor","_workerWrapper","setEditor","_getDefaultModelOptions","tabSize","indentSize","insertSpaces","domElement","suggestOnTriggerCharacters","folding","autoIndent","automaticLayout","dragAndDrop","formatOnPaste","formatOnType","minimap","onDidChangeModelContent","_onContentChanged","monacoAction","getAction","run","isSupported","newModel","xml","Document","isXmlDocument","documentElement","outerHTML","createModel","_getLanguage","updateOptions","readOnly","contentChanged","fileType","typeExt","getLanguages","extensions","showErrors","errorList","markers","currentMessage","severity","MarkerSeverity","startLineNumber","line","startColumn","endLineNumber","endColumn","getLineContent","isNaN","slice","setModelMarkers","showDecorations","decorators","deltaDecorations","__basePath","_currentContent","_iframe","_notWriteable","appendParamsToUrl","getWindow","saveFromIframe","font","_elemToXml","relName","indent","nodeName","nodeValue","attributes","attrName","setModified","originalContent","modifiedContent","createDiffEditor","getOriginalContent","getModifiedContent","originalModel","modifiedModel","setModifiedContent","setOriginalContent","resetOriginalContent","resetModifiedContent","_model","__initialSectionCount","getConfigClient","_onModelValueChange","section","sectionName","Section","optionKey","addOption","__checkForModification","_onDeleteSection","sectionListItem","optionKeys","getOptions","option","getKey","saveSync","status","setEnableInlineFind","SectionListItem","_files","_worker","toUri","onmessage","_validationCallbacks","code","postMessage","Promise","resolve","reject","topic","getEditor","setHash","currentHash","callbacks","cb","terminate","noCompare","_noCompare","_dateFormat","format","DateFormat","getDateFormat","_timeFormat","getTimeFormat","active","_selectedNode","_renameDialog","isFolder","isBackup","visibility","compareMenu","backups","getTime","backupEntry","groupButton","_onCompareWith","openWithMenu","availableHandlers","_onOpenWith","setFilename","controlName","_noNew","sep","isActive","compareWith","_onRename","_onDownload","_onRestore","_onValidate","_onClone","VirtualTreeItem","_applyEditing","field","_applyTemporary","_applyStatus","getRelatedTarget","__cancelEditing","_onKeypress","getKeyIdentifier","setDesktop","_maintainFileActions","setUploadHint","showFileActions","themeable","gap","inheritable","acceptUpload","_applyViewMode","right","handled","String","firstUp","__scaleWithAspect","isShowFileActions","editorConf","viewerConf","openButton","sizeHint","getSizeHint","padding","setPadding","_maintainFileTypePosition","iconBounds","prop","zIndex","anonymous","textAlign","textColor","Tap","getNativeEvent","capture","releaseCapture","_handleIcon","getShow","_showChildControl","_excludeChildControl","SvgIcon","schemaNode","__elementCache","_schemaNode","_dataProvider","Provider","__metaElementCache","getLastOpenedTag","text","tags","closingTags","tagPosition","lastIndexOf","tag","openedTag","contentSearch","currentAttribute","attrMatch","filteredElementSearch","tagName","isAttributeSearch","isContentSearch","splice","findElements","elementName","maxDepth","currentDepth","inMeta","cache","allowedRootElements","pages","undefined","allowedElements","getAllowedElements","result","isItemAvailable","itemName","maxOccurs","count","getElementString","prefix","insertText","getOwnPropertyNames","allowedAttributes","attr","attribute","isOptional","defaultValue","requiredElements","getRequiredElements","allowedContent","getAllowedContent","_text","_grouping","trim","elemName","getAvailableElements","usedItems","availableItems","childElem","max","CompletionItemKind","Field","detail","documentation","getDocumentation","getAvailableAttributes","usedChildTags","attrs","Property","getTypeString","triggerCharacters","provideCompletionItems","position","vmap","textUntilPosition","getValueInRange","lineNumber","column","completeText","metaEndPos","textMeta","mappingNames","stylingNames","templates","templatesStart","rawTemplate","nameMatch","variables","vregex","lastOpenedTag","openedTags","openedAttributes","cleanedText","lastChild","fromString","lastElementChild","lastFound","searchedElement","getDesigns","sugg","suggestions","getTransforms","getPlugins","getIcons","getInfluxDBs","getInfluxDBFields","EnumMember","variableName","Variable","mappingName","stylingName","getNamedItem","getInfluxDBTags","getInfluxDBValues","getRrds","typeFilter","getMediaFiles","currentItem","getEnumeration","Value","TEMPLATES","getTemplates","filterText","Version","VERSION","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","KeepWhitespace","Struct","Method","initOptions","Option","grid","Grid","setColumnFlex","setColumnAlign","_originalName","_originalOptions","nameField","__unbindModel","emptyOption","_onDeleteOption","resetKey","resetValue","removed","_onAddOption","row","required","setNullValueTitle","setAllowNull","OptionListItem","__spriteUrl","__useElement","setAttributeNS","removeAttribute","_createContentElement","svgElem","svg","__cache","getDataProviderClient","_getFromCache","cacheId","__clearFromCache","_addToCache","__getData","designName","rpc","rpcContext","converterContext","cached","handleResponse","_parseDpResponse","measurement","x","sug","fsClient","recursive","transforms","Transform","registry","suggestion","lname","plugins","qxParts","PartLoader","getParts","partName","pluginName","icons","iconName","setKey","change","_applyChange","keyField","valueField","keyTitleField","valueTitleField","hide"],"mappings":"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","sourcesContent":["/**\n * All Widgets that need to handle actions from the managers action event, need to implement this interface.\n */\nqx.Interface.define('cv.ui.manager.IActionHandler', {\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * Checks if the action handle can process the action.\n     * @param actionName {String} action name\n     */\n    canHandleAction: function(actionName) {},\n\n    /**\n     * Executes the action handling.\n     * @param actionName {String} action name\n     * @param data {var} action payload\n     */\n    handleAction: function (actionName, data) {}\n  }\n});\n","/**\n * Mixin for all classes that have to handle event on the 'cv.manager.file' topic.\n * Those classes need to implement the cv.ui.manager.control.IFileEventHandler interface.\n */\nqx.Mixin.define('cv.ui.manager.control.MFileEventHandler', {\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    if (qx.core.Environment.get('qx.debug')) {\n      qx.core.Assert.assertInterface(this, cv.ui.manager.control.IFileEventHandler);\n    }\n    if (!this._disableFileEvents) {\n      qx.event.message.Bus.subscribe('cv.manager.file', this._handleFileEvent, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _disableFileEvents: false\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.file', this._handleFileEvent, this);\n  }\n});\n","/**\n *\n */\nqx.Interface.define('cv.ui.manager.control.IFileEventHandler', {\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _handleFileEvent: function (ev) {}\n  }\n});\n","/**\n * Main class of the CometVisu file manager.\n * @author Tobias Bräutigam\n * @since 0.12.0\n *\n * @asset(manager/*)\n */\nqx.Class.define('cv.ui.manager.Main', {\n  extend: qx.core.Object,\n  type: \"singleton\",\n  include: [\n    cv.ui.manager.control.MFileEventHandler\n  ],\n  implement: [cv.ui.manager.IActionHandler, cv.ui.manager.control.IFileEventHandler],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    iconfont.material.Load;\n    cv.ui.manager.model.BackupFolder.getInstance();\n    this._checkEnvironment();\n    this.initOpenFiles(new qx.data.Array());\n    this.__actionDispatcher = cv.ui.manager.control.ActionDispatcher.getInstance();\n    this.__actionDispatcher.setMain(this);\n\n    this.__initCommands();\n    this._draw();\n\n    qx.event.message.Bus.subscribe('cv.manager.*', this._onManagerEvent, this);\n\n    // Initialize tooltip manager\n    qx.ui.tooltip.Manager.getInstance();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ROOT: null\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    openFiles: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    /**\n     * Current selected folder (if a file is selected its parent folder) is writeable.\n     */\n    writeableFolder: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeWriteableFolder'\n    },\n\n    currentFolder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyCurrentFolder',\n      event: 'changeCurrentFolder'\n    },\n\n    currentSelection: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyCurrentSelection',\n      event: 'changeCurrentSelection'\n    },\n\n    deleteableSelection: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeDeleteableSelection'\n    },\n\n    renameableSelection: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeRenameableSelection'\n    },\n\n    visible: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeVisible',\n      apply: '_applyVisible'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __previewFileIndex: null,\n    __root: null,\n    _pane: null,\n    _tree: null,\n    _stack: null,\n    _oldCommandGroup: null,\n    _managerCommands: null,\n    _mainContent: null,\n    _openFilesController: null,\n    _hiddenConfigFakeFile: null,\n    __actionDispatcher: null,\n\n    _applyVisible: function (value) {\n      var manager = qx.core.Init.getApplication().getCommandManager();\n      if (value) {\n        manager.setActive(this._managerCommands);\n      } else {\n        manager.setActive(this._oldCommandGroup);\n      }\n    },\n\n    _checkEnvironment: function () {\n      cv.io.rest.Client.getFsClient().checkEnvironmentSync(function (err, res) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else if (res) {\n          res.forEach(function (env) {\n            switch (env.entity) {\n              case '.':\n                // config folder must be writeable\n                if ((env.state & 1) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder does not exists'));\n                } else if ((env.state & 2) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder is not readable'));\n                } else if ((env.state & 4) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('config folder is not writeable'));\n                }\n                break;\n\n              case 'backup':\n                if ((env.state & 4) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('backup folder is not writeable'));\n                }\n                break;\n\n              case 'media':\n                if ((env.state & 4) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('media folder is not writeable'));\n                }\n                break;\n\n              case 'hidden.php':\n                if ((env.state & 4) === 0) {\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Hidden configuration file (hidden.php) not writeable'));\n                }\n                break;\n            }\n          }, this);\n        }\n      }, this);\n    },\n\n    canHandleAction: function (actionName) {\n      if (actionName === 'delete' && this.getCurrentSelection() && !this.getCurrentSelection().isWriteable()) {\n        // needs a writeable file\n        return false;\n      }\n      return ['close', 'quit', 'new-file', 'new-config-file', 'new-folder', 'delete', 'upload', 'clone'].includes(actionName);\n    },\n\n    handleAction: function (actionName, data) {\n      switch (actionName) {\n        case 'close':\n          this.closeCurrentFile();\n          break;\n\n        case 'quit':\n          this.setVisible(false);\n          break;\n\n        case 'new-file':\n          this._onCreate('file', null, data);\n          break;\n\n        case 'new-config-file':\n          cv.io.rest.Client.getFsClient().readSync({path: '.templates/visu_config.xml'}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Cannot load config template'));\n            } else {\n              this._onCreate('config', res, cv.ui.manager.model.FileItem.ROOT);\n            }\n          }, this);\n          break;\n\n        case 'clone':\n          cv.io.rest.Client.getFsClient().readSync({path: data.file.getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Cannot load file content'));\n            } else {\n              if (data.file.isConfigFile()) {\n                // config files need to be cloned in the root folder\n                this._onCreate('config', res, cv.ui.manager.model.FileItem.ROOT);\n              } else {\n                this._onCreate('file', res);\n              }\n            }\n          }, this);\n          break;\n\n        case 'new-folder':\n          this._onCreate('dir', null, data);\n          break;\n\n        case 'delete':\n          this._onDelete(data);\n          break;\n\n        case 'upload':\n          // nothing to to, this is handled in another way\n          break;\n\n        default:\n          this.warn(actionName + ' handling is not implemented yet!');\n          break;\n      }\n    },\n\n    _handleFileEvent: function (ev) {\n      var data = ev.getData();\n      if (data.action === 'deleted') {\n        // check if file is currently opened and close it\n        var openFiles = this.getOpenFiles().copy();\n        openFiles.some(function (openFile) {\n          if (openFile.getFile().isRelated(data.path)) {\n            this.closeFile(openFile);\n          }\n        }, this);\n        if (this.getCurrentFolder() && this.getCurrentFolder().getFullPath() === data.path) {\n          this.resetCurrentFolder();\n        }\n      } else {\n        this.warn('unhandled file event', data.action);\n      }\n    },\n\n    _onManagerEvent: function (ev) {\n      var data = ev.getData();\n      switch (ev.getName()) {\n        case 'cv.manager.compareFiles':\n          this.openFile(data, false);\n          break;\n\n        case 'cv.manager.openWith':\n          this.openFile(data.file || this.getCurrentSelection(), false, data.handler);\n          break;\n\n        case 'cv.manager.open':\n          this.openFile(data || this.getCurrentSelection(), false);\n          break;\n      }\n    },\n\n    /**\n     * open selected file in preview mode\n     * @private\n     */\n    _onChangeTreeSelection: function (ev) {\n      var data = ev.getData();\n      if ((cv.ui.manager.model.Preferences.getInstance().isQuickPreview() && data.mode === 'tap') || data.mode === 'dbltap') {\n        this.__openSelectedFile(data.node, data.mode);\n      }\n      var node = data.node;\n      if (node) {\n        if (data.node.getType() === 'file') {\n          this.setCurrentFolder(data.node.getParent());\n        } else {\n          this.setCurrentFolder(node);\n        }\n        this.setCurrentSelection(node);\n      } else {\n        this.resetCurrentFolder();\n        this.resetCurrentSelection();\n      }\n    },\n\n    __openSelectedFile: function (node, mode) {\n      if (node) {\n        if (node.getType() === 'file') {\n          this.openFile(node, mode === 'tap');\n        } else if (mode === 'dbltap') {\n          // edit folder name on dbltap\n          node.setEditing(true);\n        }\n      }\n    },\n\n    _applyCurrentFolder: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('writeable', this, 'writeableFolder');\n      } else {\n        this.resetWriteableFolder();\n      }\n    },\n\n    _applyCurrentSelection: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('writeable', this, 'deleteableSelection');\n        value.bind('inTrash', this, 'renameableSelection', {\n          converter: function (value) {\n            return !value;\n          }\n        });\n      } else {\n        this.resetDeleteableSelection();\n      }\n    },\n\n    _onChangeFileSelection: function () {\n      var sel = this._openFilesController.getSelection();\n      if (sel.length > 0) {\n        var openFile = sel.getItem(0);\n        var file = openFile.getFile();\n        var editorConfig;\n        var handlerId = openFile.getHandlerId();\n        if (handlerId) {\n          editorConfig = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandlerById(handlerId);\n        } else {\n          editorConfig = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n        }\n        if (!editorConfig.instance) {\n          editorConfig.instance = new editorConfig.Clazz();\n          editorConfig.instance.setFile(file);\n          this._stack.add(editorConfig.instance);\n        } else {\n          editorConfig.instance.setFile(file);\n        }\n        this._stack.setSelection([editorConfig.instance]);\n        this.__actionDispatcher.setFocusedWidget(editorConfig.instance);\n\n        cv.ui.manager.core.GlobalState.getInstance().setOpenedFocusedFile(file);\n      } else {\n        cv.ui.manager.core.GlobalState.getInstance().resetOpenedFocusedFile();\n      }\n    },\n\n    /**\n     *\n     * @param file {cv.ui.manager.model.FileItem} the file to open\n     * @param preview {Boolean} open the file in preview mode\n     * @param handlerId {String} use this handler to open the file (classname as string)\n     * @param handlerType {String} use a special handler type, e.g. 'edit' if you want to open the file with an editor and not a viewer\n     */\n    openFile: function (file, preview, handlerId, handlerType) {\n      var openFiles = this.getOpenFiles();\n      var openFile;\n      if (!handlerId) {\n        var handlerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, handlerType);\n\n        if (!handlerConf) {\n          // no handler\n          cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('Cannot open file: \"%1\"', file.getName()));\n          return;\n        } else {\n          handlerId = handlerConf.Clazz.classname;\n        }\n      }\n      var isOpen = openFiles.some(function (of) {\n        if (of.getFile() === file && handlerId === of.getHandlerId()) {\n          openFile = of;\n          return true;\n        }\n      });\n      if (!openFile) {\n        openFile = new cv.ui.manager.model.OpenFile(file, handlerId);\n      }\n      if (preview === true) {\n        if (!openFile.isPermanent()) {\n          if (this.__previewFileIndex !== null && openFiles.getItem(this.__previewFileIndex) && !openFiles.getItem(this.__previewFileIndex).isPermanent()) {\n            openFiles.setItem(this.__previewFileIndex, openFile);\n          } else {\n            this.__previewFileIndex = openFiles.length;\n            openFiles.push(openFile);\n          }\n          // do not 'downgrade' the permanent state\n          openFile.setPermanent(false);\n        }\n      } else {\n        if (!isOpen && (this.__previewFileIndex === null || openFiles.indexOf(openFile) !== this.__previewFileIndex)) {\n          openFiles.push(openFile);\n        }\n        openFile.setPermanent(true);\n        this.__previewFileIndex = null;\n      }\n      this._openFilesController.getTarget().setModelSelection([openFile]);\n    },\n\n    closeFile: function (openFile, force) {\n      var file = openFile.getFile();\n      if (!openFile.isCloseable()) {\n        return;\n      }\n\n      // check if this file is modified\n      if (file.isModified() && !force) {\n        // check if temporary\n        var message = qx.locale.Manager.tr('This file has unsaved changes that will be lost when you close it. Do you really want to close the file?');\n        if (file.isTemporary()) {\n          message = qx.locale.Manager.tr('This file has not been saved on the backend yet. It will be lost when you close it. Do you really want to close the file?');\n        }\n        dialog.Dialog.confirm(message, function (confirmed) {\n          if (confirmed) {\n            this.closeFile(openFile, true);\n            if (file.isTemporary()) {\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'deleted',\n                path: file.getFullPath()\n              });\n            }\n          }\n        }, this, qx.locale.Manager.tr('Unsaved changes'));\n        return;\n      }\n      openFile.resetPermanent();\n      var currentSelection = this._openFilesController.getSelection();\n      var selectionIndex = -1;\n      var openFiles = this.getOpenFiles();\n      if (currentSelection.length > 0 && currentSelection.getItem(0) === openFile) {\n        // we need to select another file after this one got closed\n        selectionIndex = openFiles.indexOf(openFile);\n      }\n      openFiles.remove(openFile);\n      var currentHandler = this._stack.getSelection()[0];\n      if (qx.Class.hasInterface(currentHandler.constructor, cv.ui.manager.editor.IEditor)) {\n        // reset the handlers file\n        currentHandler.resetFile();\n      }\n      if (this.getOpenFiles().length === 0) {\n        this._stack.resetSelection();\n        this.__actionDispatcher.resetFocusedWidget();\n        this.__previewFileIndex = null;\n      }\n      if (selectionIndex > 0) {\n        this._openFilesController.getSelection().replace(openFiles.getItem(selectionIndex - 1));\n      } else if (selectionIndex === 0 && openFiles.length > 0) {\n        this._openFilesController.getSelection().replace(openFiles.getItem(0));\n      }\n\n      if (file instanceof cv.ui.manager.model.CompareFiles) {\n        var fileHandlerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n        fileHandlerConf.instance.clear();\n        if (openFiles.filter(function (openFile) {\n          return openFile.getFile() instanceof cv.ui.manager.model.CompareFiles;\n        }).length === 0) {\n          fileHandlerConf.instance.destroy();\n          fileHandlerConf.instance = null;\n        }\n      } else if (window.monaco && openFile.getHandlerId() === 'cv.ui.manager.editor.Source') {\n        // close textmodel in monaco editor if exists\n        var oldModel = window.monaco.editor.getModel(file.getUri());\n        if (oldModel) {\n          oldModel.dispose();\n        }\n      }\n    },\n\n    closeCurrentFile: function () {\n      var selected = this._openFilesController.getSelection().length > 0 ? this._openFilesController.getSelection().getItem(0) : null;\n      if (selected) {\n        this.closeFile(selected);\n      }\n    },\n\n    _onCloseFile: function (ev) {\n      this.closeFile(ev.getData());\n    },\n\n    __getRoot: function () {\n      if (!this.__root) {\n        this.__root = qx.dom.Element.create('div', {\n          id: 'manager',\n          style: 'position: absolute; top: 0; left: 0; right: 0; bottom: 0;'\n        });\n        qx.dom.Element.insertEnd(this.__root, document.body);\n        qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);\n      }\n      return this.__root;\n    },\n\n    __initCommands: function () {\n      var group = this._managerCommands = new qx.ui.command.Group();\n      group.add('save', new qx.ui.command.Command('Ctrl+S'));\n      group.add('save-as', new qx.ui.command.Command('Ctrl+Shift+S'));\n      // this command will close the browser window, thats not what we want\n      // group.add('close', new qx.ui.command.Command('Ctrl+W'));\n      group.add('new-file', new qx.ui.command.Command('Ctrl+N'));\n      group.add('new-folder', new qx.ui.command.Command('Ctrl+Shift+N'));\n      group.add('quit', new qx.ui.command.Command('Ctrl+Q'));\n      // group.add('delete', new qx.ui.command.Command('Ctrl+Del'));\n\n      var renameCommand = new qx.ui.command.Command('F2');\n      group.add('rename', renameCommand);\n      this.bind('renameableSelection', renameCommand, 'enabled');\n\n\n      // edit commands (adding cut/copy/paste command will deactivate the native browser functions)\n      // and as we cannot simulate pasting from clipboard, we do not use them here\n      // group.add('cut', new qx.ui.command.Command('Ctrl+X'));\n      // group.add('copy', new qx.ui.command.Command('Ctrl+C'));\n      // group.add('paste', new qx.ui.command.Command('Ctrl+V'));\n\n      var manager = qx.core.Init.getApplication().getCommandManager();\n      this._oldCommandGroup = manager.getActive();\n      manager.add(group);\n      manager.setActive(group);\n    },\n\n    _onDelete: function (file) {\n      var item = file || this.getCurrentSelection();\n      if (item) {\n        cv.ui.manager.control.FileController.getInstance().delete(item);\n      }\n    },\n\n    _onChangeStackSelection: function (ev) {\n      var selection = ev.getData();\n      var openFiles = [];\n      // sync tab selection with currently visible page\n      selection.forEach(function(page) {\n        var openFile = this.getOpenFiles().toArray().find(function (openFile) {\n          return openFile.getFile() === page.getFile() && openFile.getHandlerId() === page.classname;\n        });\n        if (openFile) {\n          openFiles.push(openFile);\n        }\n      }, this);\n\n      this._openFilesController.getSelection().replace(openFiles);\n    },\n\n    __getFileNamePrompt: function (message, callback, context, value, caption) {\n      var prompt = new dialog.Prompt({\n        message: message,\n        callback: callback || null,\n        context: context || null,\n        value: value || null,\n        caption: caption || \"\",\n        filter: /[\\w\\d_\\-\\.\\s]/\n      })\n      prompt.show();\n      return prompt;\n    },\n\n    _onCreate: function (type, content, folder) {\n      var currentFolder = folder || this.getCurrentFolder();\n      if (!currentFolder) {\n        return;\n      }\n      var message, existsMessage;\n      if (type === 'config') {\n        message = qx.locale.Manager.tr('Please enter the name of the new configuration (without \"visu_config_\" at the beginning and \".xml\" at the end)');\n        existsMessage = qx.locale.Manager.tr('A configuration with this name already exists.');\n      } else if (type === 'file') {\n        message = qx.locale.Manager.tr('Please enter the file name.');\n        existsMessage = qx.locale.Manager.tr('A file with this name already exists.');\n      } else {\n        message = qx.locale.Manager.tr('Please enter the folder name.');\n        existsMessage = qx.locale.Manager.tr('A folder with this name already exists.');\n      }\n      var handlePrompt = function (name) {\n        if (!name) {\n          // canceled\n          return;\n        }\n        var filename = name;\n        // add visu_config_..-xml\n        if (type === 'config') {\n          var match = /visu[_-]config[_-]([\\w\\d_-]+)(\\.xml)?/.exec(name);\n          if (match) {\n            name = match[1];\n          }\n          filename = 'visu_config_' + name + '.xml';\n        }\n        // check if name does not exist\n        var exists = currentFolder.getChildren().some(function (child) {\n          if (child.getName() === filename && child.getType() === type) {\n            return true;\n          }\n        }, this);\n\n        if (exists) {\n          cv.ui.manager.snackbar.Controller.error(existsMessage);\n          this.__getFileNamePrompt(message, handlePrompt, this, name);\n        } else {\n          var item = new cv.ui.manager.model.FileItem(filename, currentFolder.getFullPath(), currentFolder);\n          item.set({\n            type: type === 'config' ? 'file' : type,\n            readable: true,\n            writeable: true,\n            loaded: true,\n            modified: true,\n            temporary: true,\n            parentFolder: currentFolder.getFullPath(),\n            content: content || ''\n          });\n          if (type === 'dir') {\n            // create directory directly\n            cv.io.rest.Client.getFsClient().createSync({\n              path: item.getFullPath(),\n              type: type\n            }, null, function (err) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('Folder has been created'));\n                item.set({\n                  modified: false,\n                  temporary: false\n                });\n                qx.event.message.Bus.dispatchByName(item.getBusTopic(), {\n                  type: 'created',\n                  file: item,\n                  data: '',\n                  source: this\n                });\n              }\n            }, this);\n          }\n          currentFolder.addChild(item);\n          currentFolder.sortElements();\n          this._tree.refresh();\n          this._tree.setSelection(item);\n          // do not open new folders\n          if (type !== 'dir') {\n            // open the file in an editor\n            this.openFile(item, false, null, 'edit');\n          }\n        }\n      };\n\n      this.__getFileNamePrompt(message, handlePrompt, this);\n    },\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable : function (elem) {\n      while (elem && elem.nodeType === 1) {\n        if (elem.getAttribute(\"qxDroppable\") === \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    // overridden\n    _draw: function () {\n      var domRoot = this.__getRoot();\n      var root = new qx.ui.root.Inline(domRoot, true, true);\n      this.bind('visible', root, 'visibility', {\n        converter: function (visible) {\n          return visible ? 'visible' : 'excluded';\n        }\n      });\n      root.addListenerOnce('appear', function () {\n        // disable file drop\n        var element = root.getContentElement().getDomElement();\n        element.addEventListener('drop', function (ev) {\n          var target = this.__findDroppable(ev.target);\n          if (!target) {\n            ev.preventDefault();\n          }\n        }.bind(this));\n        element.addEventListener('dragover', function (ev) {\n          var target = this.__findDroppable(ev.target);\n          if (!target) {\n            ev.preventDefault();\n          }\n        }.bind(this));\n      }, this);\n      qx.core.Init.getApplication().setRoot(root);\n      root.setLayout(new qx.ui.layout.Canvas());\n\n      var snackbar = cv.ui.manager.snackbar.Controller.getInstance();\n      root.add(snackbar, {\n        bottom: 10,\n        left: 200\n      });\n\n      function resize() {\n        var bounds = root.getBounds();\n        snackbar.setLayoutProperties({\n          bottom: 10,\n          left: Math.round(bounds.width / 2) - 150\n        });\n        snackbar.setMaxHeight(bounds.height - 40);\n      }\n      root.addListener('resize', resize, this);\n      root.addListener('appear', resize, this);\n      window.addEventListener('resize', function () {\n        // sync window height with manager height\n        domRoot.style.height = window.innerHeight + 'px';\n      });\n\n      var main = new qx.ui.container.Composite(new qx.ui.layout.Dock());\n      root.add(main, {edge: 0});\n      // menu on top\n      var menuBar = cv.ui.manager.MenuBar.getInstance();\n      main.add(menuBar, {edge: 'north'});\n\n      var uploadButton = menuBar.getButton('upload');\n      var uploadManager = new cv.ui.manager.upload.UploadMgr(uploadButton);\n      this.bind('currentFolder', uploadManager, 'folder');\n\n      this._pane = new qx.ui.splitpane.Pane();\n      main.add(this._pane, {edge: 'center'});\n\n      var rootFolder = cv.ui.manager.model.FileItem.ROOT = new cv.ui.manager.model.FileItem('.');\n      var fakeIconFile = cv.ui.manager.model.FileItem.getIconFile();\n      // TODO: needs to be verified by the backend\n      rootFolder.set({\n        overrideIcon: true,\n        writeable: true,\n        readable: true,\n        open: true,\n        fakeChildren: [fakeIconFile],\n        icon: cv.theme.dark.Images.getIcon('home', 18)\n      });\n      this.setCurrentFolder(rootFolder);\n      this._tree = new cv.ui.manager.tree.FileSystem(rootFolder);\n      this._tree.addListener(\"changeSelection\", this._onChangeTreeSelection, this);\n\n      // left container\n      var leftContainer = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n      // left toolbar\n      var leftBar = new cv.ui.manager.ToolBar(uploadManager);\n      this.bind('currentFolder', leftBar, 'folder');\n      this.bind('currentSelection', leftBar, 'file');\n      leftBar.addListener('reload', this._tree.reload, this._tree);\n\n      // globally bind writeable folder to command for new files\n      var buttonConfig = menuBar.getButtonConfiguration();\n      this.bind('writeableFolder', buttonConfig['new-file'].args[2], 'enabled');\n      this.bind('writeableFolder', buttonConfig['new-folder'].args[2], 'enabled');\n      // this.bind('deleteableSelection', buttonConfig['delete'].args[2], 'enabled');\n\n      leftContainer.add(leftBar);\n      leftContainer.add(this._tree, {flex: 1});\n      this._pane.add(leftContainer, 0);\n      cv.ui.manager.model.Preferences.getInstance().bind('expertMode', leftContainer, 'visibility', {\n        converter: function (value) {\n          return value ? 'visible' : 'excluded';\n        }\n      });\n\n      this._mainContent = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n      // tab list\n      var list = new qx.ui.form.List(true);\n      list.setAppearance('open-files-tabs');\n      this._openFilesController = new qx.data.controller.List(this.getOpenFiles(), list, \"file.name\");\n      this._openFilesController.setDelegate({\n        createItem: function () {\n          var item = new cv.ui.manager.form.FileTabItem();\n          item.addListener('close', this._onCloseFile, this);\n          return item;\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindDefaultProperties(item, index);\n          controller.bindProperty('file.permanent', 'permanent', null, item, index);\n          controller.bindProperty('file.modified', 'modified', null, item, index);\n          controller.bindProperty('icon', 'icon', null, item, index);\n          controller.bindProperty('closeable', 'closeable', null, item, index);\n        }\n      });\n      list.addListener('changeSelection', this._onChangeFileSelection, this);\n      this._mainContent.add(list);\n\n      this._stack = new qx.ui.container.Stack();\n      this._stack.addListener('changeSelection', this._onChangeStackSelection, this);\n      this._mainContent.add(this._stack, {flex: 1});\n      this._pane.add(this._mainContent, 1);\n\n      var startOpenFile = new cv.ui.manager.model.OpenFile(rootFolder, 'cv.ui.manager.Start');\n      startOpenFile.setCloseable(false);\n      this.getOpenFiles().push(startOpenFile);\n      list.setModelSelection([startOpenFile]);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects(\n      '_pane', '_tree', '_stack', '_mainContent', '_openFilesController'\n    );\n    // restore former command group\n    var application = qx.core.Init.getApplication();\n    var manager = application.getCommandManager();\n    manager.setActive(this._oldCommandGroup);\n    this._oldCommandGroup = null;\n\n    // defer the reset to let the dispose queue to be emptied before removing the root\n    new qx.util.DeferredCall(function () {\n      application.resetRoot();\n    }).schedule();\n\n    document.body.removeChild(this.__root);\n    this.__root = null;\n    this.__actionDispatcher = null;\n\n    qx.event.message.Bus.unsubscribe('cv.manager.*', this._onManagerEvent, this);\n\n    // destroy the singleton instance\n    delete cv.ui.manager.Main.$$instance;\n  }\n});\n","/**\n * Represents an entry in the filesystem (file or folder).\n */\nqx.Class.define('cv.ui.manager.model.FileItem', {\n  extend: qx.core.Object,\n  include: [\n    qx.data.marshal.MEventBubbling,\n    cv.ui.manager.control.MFileEventHandler\n  ],\n  implement: [cv.ui.manager.control.IFileEventHandler],\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name, path, parent, fakeChildren) {\n    this.base(arguments);\n    this.initChildren(new qx.data.Array());\n    if (fakeChildren) {\n      this.setFakeChildren(fakeChildren);\n    }\n    if (path) {\n      if (!path.endsWith('/')) {\n        path += '/';\n      }\n      this.__path = path;\n    }\n    if (name) {\n      this.setName(name);\n    }\n    if (parent) {\n      this.setParent(parent);\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ROOT: null,\n    _fakeIconFile: null,\n    _hiddenConfigFakeFile: null,\n    _acceptedFiles: {\n      '.': '*.xml',\n      'media': '*.js,*.jpg,*.gif,*.png,*.conf,*.svg,*.md,*.rst,*,css,*.txt'\n    },\n\n    isConfigFile: function (path) {\n      return /visu_config.*\\.xml/.test(path);\n    },\n\n    getConfigName: function (filename) {\n      var match = /visu_config_?([^.]+)\\.xml/.exec(filename);\n      if (match) {\n        return match[1];\n      }\n      return null;\n    },\n\n    getIconFile: function () {\n      if (!this._fakeIconFile) {\n        this._fakeIconFile = new cv.ui.manager.model.FileItem('CometVisu-Icons', '', cv.ui.manager.model.FileItem.ROOT).set({\n          type: 'file',\n          overrideIcon: true,\n          writeable: false,\n          readable: true,\n          open: true,\n          loaded: true,\n          hasChildren: false,\n          fake: true,\n          icon: cv.theme.dark.Images.getIcon('icons', 18)\n        });\n      }\n      return this._fakeIconFile;\n    },\n\n    getHiddenConfigFile: function () {\n      if (!this._hiddenConfigFakeFile) {\n        this._hiddenConfigFakeFile = new cv.ui.manager.model.FileItem('hidden.php', '', cv.ui.manager.model.FileItem.ROOT).set({\n          hasChildren: false,\n          loaded: true,\n          readable: true,\n          writeable: true,\n          overrideIcon: true,\n          icon: cv.theme.dark.Images.getIcon('hidden-config', 15),\n          type: \"file\",\n          fake: true,\n          displayName: qx.locale.Manager.tr('Hidden configuration')\n        });\n      }\n      return this._hiddenConfigFakeFile;\n    },\n\n    getAcceptedFiles: function (folder) {\n      return this._acceptedFiles[folder.getFullPath()];\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    open : {\n      check : \"Boolean\",\n      event : \"changeOpen\",\n      apply : \"_onOpen\",\n      init : false\n    },\n\n    loaded : {\n      check : \"Boolean\",\n      event : \"changeLoaded\",\n      init : false\n    },\n\n    loading : {\n      check : \"Boolean\",\n      event : \"changeLoading\",\n      init : false\n    },\n\n    parent : {\n      event : \"changeParent\",\n      init : null\n    },\n\n    children : {\n      check : \"qx.data.Array\",\n      event : \"changeChildren\",\n      apply: \"_applyEventPropagation\",\n      deferredInit : true\n    },\n\n    fakeChildren: {\n      check: \"Array\",\n      nullable: true\n    },\n\n    displayName: {\n      check: 'String',\n      init: \"\",\n      event: 'changeDisplayName'\n    },\n\n    /**\n     * Fake items only exist in the client not in the backend\n     */\n    fake: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeFake'\n    },\n\n    overrideIcon: {\n      check: 'Boolean',\n      init: false\n    },\n\n    icon: {\n      check: 'String',\n      nullable: true,\n      event: 'changeIcon'\n    },\n\n    hash: {\n      check: 'Number',\n      nullable: true\n    },\n\n    editing: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeEditing'\n    },\n\n    /**\n     * A special configuration option for mulitple purposes, e.g. creating a fake FileItem with a special\n     * behaviour like an \"Add new File\" used in writeable Folders.\n     */\n    special: {\n      check: 'String',\n      nullable: true,\n      event: 'changeSpecial'\n    },\n\n    /**\n     * Temporary file are not save in the backend yet\n     */\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTemporary'\n    },\n\n    /**\n     * Validation result for this files content (e.g. config file validation)\n     */\n    valid: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeValid'\n    },\n\n    /**\n     * Temporary content to show, e.g. for new files, when there is no 'real' file with content yet to request from the backend\n     * this content should be shown\n     */\n    content: {\n      check: 'String',\n      nullable: true\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    },\n\n    // Backend properties\n\n    hasChildren : {\n      check : \"Boolean\",\n      event : \"changeHasChildren\",\n      apply : \"_applyHasChildren\",\n      init : false\n    },\n\n    name : {\n      check : \"String\",\n      event : \"changeName\",\n      init : \"\",\n      apply: '_applyName'\n    },\n\n    type: {\n      check: ['dir', 'file'],\n      nullable: true,\n      apply: '_maintainIcon'\n    },\n\n    parentFolder: {\n      check: 'String',\n      nullable: true\n    },\n\n    readable: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeReadable'\n    },\n\n    writeable: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeWriteable'\n    },\n\n    mounted: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMounted'\n    },\n\n    trash: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTrash'\n    },\n\n    inTrash: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeInTrash'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __path: null,\n    __fullPath: null,\n    __onLoadCallback: null,\n\n    isRelated: function (path) {\n      return this.getFullPath() === path;\n    },\n\n    _handleFileEvent: function (ev) {\n      if (this.isFake()) {\n        return;\n      }\n      var data = ev.getData();\n      switch (data.action) {\n        case 'moved':\n          this.reload();\n          break;\n\n        case 'added':\n          if (this.getType() === 'dir' && data.path.startsWith(this.getFullPath())) {\n            this.reload();\n          }\n          break;\n\n        case 'deleted':\n          if (data.path === this.getFullPath()) {\n            // this item has been deleted\n            this.dispose();\n          } else if (this.getType() === 'dir' && data.path.startsWith(this.getFullPath())) {\n            // delete child\n            var children = this.getChildren();\n            children.some(function (child) {\n              if (child.getFullPath() === data.path) {\n                children.remove(child);\n                this.removeRelatedBindings(child);\n                return true;\n              }\n            }, this);\n          }\n          break;\n      }\n    },\n\n    _applyName: function (value, old) {\n      this.__fullPath = null;\n      if (value && (this.getDisplayName() === null || this.getDisplayName() === old)) {\n        // use name as default display name\n        this.setDisplayName(value);\n      }\n    },\n\n    getPath: function () {\n      if (!this.__path) {\n        var parentFolder = this.getParentFolder();\n        if (!parentFolder) {\n          parentFolder = '';\n        } else if (!parentFolder.endsWith('/')) {\n          parentFolder += '/';\n        }\n        this.__path = parentFolder;\n      }\n      return this.__path;\n    },\n\n    _onOpen : function(value){\n\n      if(!this.isLoaded() && value) {\n        this.load();\n      }\n      this._maintainIcon();\n    },\n\n    _maintainIcon: function () {\n      if (!this.isOverrideIcon()) {\n        if (this.getType() === 'file') {\n          this.setIcon(cv.theme.dark.Images.getIcon('file', 18));\n        } else if (this.isTrash()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('trash', 18));\n        } else if (this.isOpen()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('folder-open', 18));\n        } else if (this.isMounted()) {\n          this.setIcon(cv.theme.dark.Images.getIcon('mounted-folder', 18));\n        } else {\n          this.setIcon(cv.theme.dark.Images.getIcon('folder', 18));\n        }\n      }\n    },\n\n    isConfigFile: function () {\n      return cv.ui.manager.model.FileItem.isConfigFile(this.getName());\n    },\n\n    _applyHasChildren: function (value) {\n      if (value === true && this.getChildren().length === 0) {\n        // add dummy child\n        this.getChildren().push(new cv.ui.manager.model.FileItem(''));\n      }\n    },\n\n    unload: function() {\n      this.setLoaded(false);\n      this.setLoading(false);\n      this.getChildren().removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n    },\n\n    reload : function(callback, context) {\n      this.unload();\n      return this.load(callback, context);\n    },\n\n    addChild: function (child) {\n      var oldParent = child.getParent();\n      if (oldParent !== this) {\n        oldParent.getChildren().remove(child);\n        oldParent.removeRelatedBindings(child);\n      }\n      child.setParent(this);\n      if (child.getType() !== \"dir\" || !child.isMounted()) {\n        // inherit the mounted state from the parent folder\n        this.bind('mounted', child, 'mounted');\n      }\n      this.getChildren().push(child);\n    },\n\n    _onGet: function (data) {\n      var children = this.getChildren();\n      children.removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n      if (data) {\n        data.forEach(function (node) {\n          var child = new cv.ui.manager.model.FileItem(null, null, this);\n          child.set(node);\n          children.push(child);\n        }, this);\n      }\n      if (this.getFakeChildren()) {\n        children.append(this.getFakeChildren());\n      }\n      this.sortElements();\n\n      this.setLoaded(true);\n      if (this.__onLoadCallback) {\n        this.__onLoadCallback();\n      }\n      this.setLoading(false);\n    },\n\n    _onError: function (err) {\n      console.error(err);\n      cv.ui.manager.snackbar.Controller.error(err);\n      this.getChildren().removeAll().forEach(function (child) {\n        this.removeRelatedBindings(child);\n      }, this);\n      this.setLoaded(true);\n      if (this.__onLoadCallback) {\n        this.__onLoadCallback();\n      }\n      this.setLoading(false);\n    },\n\n    load: function(callback, context) {\n      // If currently loading, delay ready\n      if (this.getType() === 'file') {\n        // nothing to load\n        this.setLoaded(true);\n        return;\n      } else if (this.isFake()) {\n        this.setLoaded(true);\n        if (this.getFakeChildren()) {\n          this.getChildren().append(this.getFakeChildren());\n        }\n        return;\n      }\n      if (this.isLoading()) {\n        if (callback) {\n          this.addListenerOnce(\"changeLoading\", callback, context);\n        }\n      }\n      // If not done yet, resolve the child elements of this container\n      else if (this.isLoaded()) {\n        if (callback) {\n          callback.apply(context);\n        }\n      }\n      else {\n        this.setLoading(true);\n        if (callback) {\n          this.__onLoadCallback = callback.bind(context || this);\n        }\n        cv.io.rest.Client.getFsClient().readSync({path: this.getFullPath()}, function (err, res) {\n          if (err) {\n            this._onError(err);\n          } else {\n            this._onGet(res);\n          }\n        }, this);\n      }\n    },\n\n    /**\n     * Returns the complete path needed for the REST API  to identify this file\n     * @returns {null}\n     */\n    getFullPath: function () {\n      if (!this.__fullPath) {\n        this.__fullPath = this.getPath() + this.getName();\n      }\n      return this.__fullPath;\n    },\n\n    getBusTopic: function () {\n      return 'cv.manager.fs.' + this.getFullPath().replace(/\\//g, '.');\n    },\n\n    /**\n     * Returns a fake URI that can be used to identify the file.\n     * Used by monaco editor as model URI.\n     * @returns {Uri}\n     */\n    getUri: function () {\n      return 'cv://' + this.getFullPath();\n    },\n\n    /**\n     * Returns the path to this file for requests over HTTP (not the REST API)\n     *\n     * Note: Please be aware that this path does not work if the file is in a mounted folder\n     * like the demo configs. The backend handles those mounts transparently to the client. But\n     * because of that the client does not know the real path to the file.\n     *\n     * @returns {string}\n     */\n    getServerPath: function () {\n      return qx.util.LibraryManager.getInstance().get('cv', 'resourceUri') + '/config/' + this.getFullPath();\n    },\n\n    /**\n     *  Sort entries: folders first, files then\n     */\n    sortElements: function () {\n      var sortF = function (a, b) {\n        if (a.getType() === 'dir') {\n          if (b.getType() === 'dir') {\n            if (a.isTrash()) {\n              return 1;\n            } else if (b.isTrash()) {\n              return -1;\n            }\n            return a.getName().localeCompare(b.getName());\n          } else {\n            return -1;\n          }\n        } else if (b.getType() === 'dir') {\n          return 1;\n        } else {\n          return a.getName().localeCompare(b.getName());\n        }\n      };\n      this.getChildren().sort(sortF);\n    },\n\n    openPath: function (path) {\n      var parts = qx.lang.Type.isArray(path) ? path : path.split('/');\n      var relPath = parts.shift();\n      this.getChildren().some(function (child) {\n        if (child.getName() === relPath) {\n          child.load(function () {\n            child.setOpen(true);\n            if (parts.length > 0) {\n              child.openPath(parts);\n            }\n          }, this);\n          return true;\n        }\n      }, this);\n    }\n  },\n  \n  /*\n  ***********************************************\n    DESTRUCTOR  \n  ***********************************************\n  */\n  destruct: function () {\n    this.__fullPath = null;\n  } \n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.BackupFolder', {\n  extend: cv.ui.manager.model.FileItem,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments, 'backup');\n    this.load();\n    qx.event.message.Bus.subscribe('cv.manager.fs.*', this._onFilesSystemMessage, this);\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _onFilesSystemMessage: function (ev) {\n      if (/^cv\\.manager\\.fs\\.visu_config.*\\.xml$/.test(ev.getName())) {\n        // Fs event on config file\n        var data = ev.getData();\n        if (['contentChanged', 'fsContentChanged'].includes(data.type)) {\n          // config file has been changed or restored, refresh the backups\n          this.reload();\n        }\n      }\n    },\n\n    /**\n     * Returns the list of existing backup files for the given file.\n     * @param file {cv.ui.manager.model.FileItem}\n     */\n    getBackupFiles: function (file) {\n      var files = [];\n      if (file.getType() === 'file') {\n        var pathparts = file.getFullPath().split('/');\n        pathparts.pop();\n        var path = pathparts.join('\\/');\n        var parts = file.getName().split('.');\n        var suffix = parts.pop();\n        var filename = parts.join('.');\n        var fileRegex = new RegExp(path + filename + '-([\\\\d]{14})\\\\.' + suffix);\n        this.getChildren().filter(function (backupFile) {\n          var match = fileRegex.exec(backupFile.getFullPath().replace('backup/', ''));\n          if (match) {\n            files.push({\n              date: new Date(\n                parseInt(match[1].substring(0,4)),\n                parseInt(match[1].substring(4,6))-1,\n                parseInt(match[1].substring(6,8)),\n                parseInt(match[1].substring(8,10)),\n                parseInt(match[1].substring(10,12)),\n                parseInt(match[1].substring(12,14))\n              ),\n              file: backupFile\n            });\n          }\n        }, this);\n      }\n      return files;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.fs.*', this._onFilesSystemMessage, this);\n  }\n});\n","/**\n * The ActionDispatcher listens to the events in the 'cv.manager.action' topic and\n * dispatched those events to the currently relevant handler (e.g. the save event to the opened editor).\n */\nqx.Class.define('cv.ui.manager.control.ActionDispatcher', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    qx.event.message.Bus.subscribe('cv.manager.action.*', this._onAction, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    focusedWidget: {\n      check: 'cv.ui.manager.IActionHandler',\n      nullable: true,\n      apply: 'updateBarButtons'\n    },\n\n    main: {\n      check: 'cv.ui.manager.Main',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    updateBarButtons: function () {\n      var menuBar = cv.ui.manager.MenuBar.getInstance();\n      var config = menuBar.getButtonConfiguration();\n      var button;\n      Object.keys(config).forEach(function (actionId) {\n        button = menuBar.getButton(actionId);\n        if (button) {\n          button.setEnabled(config[actionId].general || this.hasHandler(actionId));\n        }\n      }, this);\n    },\n\n    /**\n     * Check if there is an existing handler for the given actionName.\n     * @return {Boolean}\n     */\n    hasHandler: function (actionName) {\n      return !!this._getHandler(actionName);\n    },\n\n    _getHandler: function (actionName) {\n      var handler = this.getFocusedWidget();\n      var main = this.getMain();\n      if (handler && handler.canHandleAction(actionName)) {\n        return handler;\n      } else if (main && main.canHandleAction(actionName)) {\n        return main;\n      }\n    },\n\n    _onAction: function (ev) {\n      var topic = ev.getName();\n      var actionName = topic.split('.').pop();\n      var handler = this._getHandler(actionName);\n      if (handler) {\n        handler.handleAction(actionName, ev.getData());\n      } else {\n        this.warn('no action handler found for action: ' + actionName);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.subscribe('cv.manager.action.*', this._onAction, this);\n  }\n});\n","/**\n * Main view component responsible for showing a list of snackbar messages.\n */\nqx.Class.define('cv.ui.manager.snackbar.Controller', {\n  extend: qx.ui.core.Widget,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox(8));\n    this.initMessages(new qx.data.Array());\n    qx.event.message.Bus.subscribe('cv.manager.msg.snackbar', this._onMessage, this);\n    this._listController = new qx.data.controller.List(this.getMessages(), this.getChildControl('list'));\n    this._initDelegate();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    info: function (message) {\n      var msg = new cv.ui.manager.model.Message();\n      msg.set({\n        title: message\n      });\n      qx.event.message.Bus.dispatchByName('cv.manager.msg.snackbar', msg);\n    },\n\n    error: function (message) {\n      var msg = new cv.ui.manager.model.Message();\n      if (typeof message === 'object' && message.hasOwnProperty('statusText')) {\n        message = message.statusText;\n      }\n      msg.set({\n        title: message,\n        type: 'error',\n        sticky: true\n      });\n      qx.event.message.Bus.dispatchByName('cv.manager.msg.snackbar', msg);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-snackbar'\n    },\n\n    messages: {\n      check: 'qx.data.Array',\n      deferredInit: true,\n      event: 'changeMessages'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _listController: null,\n\n    _onMessage: function (ev) {\n      var msg = ev.getData();\n      if (msg instanceof cv.ui.manager.model.Message) {\n        this.getMessages().push(msg);\n        this.show();\n      }\n    },\n\n    _onCloseMessage: function (ev) {\n      var msg = ev.getData();\n      this.getMessages().remove(msg);\n      if (this.getMessages().length === 0) {\n        this.exclude();\n      }\n    },\n\n    _initDelegate: function () {\n      this._listController.setDelegate({\n        createItem: function () {\n          var item = new cv.ui.manager.snackbar.Message();\n          item.addListener('close', this._onCloseMessage, this);\n          return item;\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'model', null, item, index);\n        }\n      });\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'list':\n           control = new qx.ui.form.List();\n           this._add(control, {flex: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.msg.snackbar', this._onMessage, this);\n    this._disposeObjects('_listController');\n  }\n});\n","/**\n * User preferences.\n */\nqx.Class.define('cv.ui.manager.model.Preferences', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._restorePreferences();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    defaultConfigEditor: {\n      check: ['source', 'xml'],\n      init: 'source',\n      event: 'changeDefaultConfigEditor',\n      apply: '_savePreferences'\n    },\n\n    quickPreview: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeQuickPreview',\n      apply: '_savePreferences'\n    },\n\n    /**\n     * In export mode the manager looks and behaves like a file explorer.\n     */\n    expertMode: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeExpertMode',\n      apply: '_savePreferences'\n    },\n\n    /**\n     * View mode of the start page\n     */\n    startViewMode: {\n      check: ['list', 'preview'],\n      init: 'preview',\n      event: 'changeStartViewMode',\n      apply: '_savePreferences'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _savePreferences: function () {\n      var store = qx.bom.Storage.getLocal();\n      store.setItem('preferences', qx.util.Serializer.toNativeObject(this));\n    },\n\n    _restorePreferences: function () {\n      var store = qx.bom.Storage.getLocal();\n      this.set(store.getItem('preferences'));\n    }\n  }\n});\n","/**\n * Central registry for all available file editors/viewers.\n */\nqx.Class.define('cv.ui.manager.control.FileHandlerRegistry', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__registry = {};\n    this.__defaults = [];\n\n    // register viewers\n    this.registerFileHandler(new RegExp('\\.(' + cv.ui.manager.viewer.Image.SUPPORTED_FILES.join('|') + ')$', 'i'), cv.ui.manager.viewer.Image, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Config.SUPPORTED_FILES, cv.ui.manager.viewer.Config, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Icons.SUPPORTED_FILES, cv.ui.manager.viewer.Icons, {type: 'view'});\n    this.registerFileHandler(cv.ui.manager.viewer.Folder.SUPPORTED_FILES, cv.ui.manager.viewer.Folder, {type: 'view'});\n    this.registerFileHandler(null, cv.ui.manager.Start, {type: 'view'});\n\n    // register the basic editors\n    this.registerFileHandler(new RegExp('\\.(' + cv.ui.manager.editor.Source.SUPPORTED_FILES.join('|') + ')$', 'i'), cv.ui.manager.editor.Source, {type: 'edit'});\n    this.registerFileHandler(cv.ui.manager.editor.Xml.SUPPORTED_FILES, cv.ui.manager.editor.Xml, {\n      preview: false,\n      type: 'edit',\n      noTemporaryFiles: true, // the old XML-Editor cannot handle temporary files,\n      noReadOnlyFiles: true // readonly nit supported\n    });\n    this.registerFileHandler(cv.ui.manager.model.CompareFiles, cv.ui.manager.editor.Diff, {type: 'view'});\n\n    this.registerFileHandler(\"hidden.php\", cv.ui.manager.editor.Config, {type: 'edit'});\n\n    cv.ui.manager.model.Preferences.getInstance().addListener('changeDefaultConfigEditor', this._onChangesDefaultConfigEditor, this);\n    this._onChangesDefaultConfigEditor();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __registry: null,\n    __defaults: null,\n\n    /**\n     * Registers an editor for a specific file, that is identified by the given selector.\n     * @param selector {String|RegExp|Class|Function|null} filename-/path or regular expression. If null this is a special handler that must be loaded manually (like cv.ui.manager.Start)\n     * @param clazz {qx.ui.core.Widget} widget class that handles those type of files\n     * @param options {Map?} additional options to store in the registry\n     */\n    registerFileHandler: function (selector, clazz, options) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertTrue(qx.Interface.classImplements(clazz, cv.ui.manager.editor.IEditor));\n      }\n      var config = Object.assign({\n        Clazz: clazz,\n        instance: null\n      }, options || {});\n      if (qx.Class.isClass(selector)) {\n        config.instanceOf = selector;\n        config.selectorId = 'instanceOf:' + selector.classname;\n        // highest priority\n        config.priority = 0;\n      } else if (qx.lang.Type.isRegExp(selector)) {\n        config.regex = selector;\n        config.selectorId = 'regex:' + selector.toString();\n        config.priority = 4;\n      } else if (qx.lang.Type.isFunction(selector)) {\n        config.selectorId = 'function:' + selector.name;\n        config.priority = 3;\n        config.function = selector;\n      } else if (qx.lang.Type.isString(selector)) {\n        // simple file matcher\n        if (selector.includes('/')) {\n          config.fullPath = selector;\n          config.selectorId = 'fullPath:' + selector;\n          config.priority = 1;\n        } else {\n          config.fileName = selector;\n          config.selectorId = 'fileName:' + selector;\n          config.priority = 2;\n        }\n      } else {\n        config.selectorId = 'none';\n        config.priority = 10;\n      }\n      this.__registry[clazz.classname] = config;\n    },\n\n    getFileHandler: function (file, type) {\n      var handlers = [];\n      if (!(file instanceof cv.ui.manager.model.CompareFiles)) {\n        // check if there is a default first\n        var defaultHandler;\n        Object.keys(this.__defaults).some(function (key) {\n          if (this.__defaults[key].regex.test(file.getFullPath()) &&\n            (!file.isTemporary() || !this.__defaults[key].noTemporaryFiles) &&\n            (file.isWriteable() || !this.__defaults[key].noReadOnlyFiles)\n          ) {\n            if (type) {\n              var config = this.getFileHandlerById(this.__defaults[key].clazz.classname);\n              if (config.type === type) {\n                defaultHandler = config;\n              }\n            } else {\n              defaultHandler = this.getFileHandlerById(this.__defaults[key].clazz.classname);\n            }\n            return !!defaultHandler;\n          }\n        }, this);\n        if (defaultHandler) {\n          return defaultHandler;\n        }\n      }\n\n      Object.keys(this.__registry).forEach(function (classname) {\n        var config = this.__registry[classname];\n        if (this.__canHandle(config, file) && (!type || config.type === type)) {\n          handlers.push(config);\n        }\n      }, this);\n      if (handlers.length === 0) {\n        if (!file.isFake() && file.getDisplayName().split('.').length === 1) {\n          // file without file ending => use the source code editor\n          return this.getFileHandlerById('cv.ui.manager.editor.Source');\n        }\n        // no editors found\n        return null;\n      } else if (handlers.length === 1) {\n        return handlers[0];\n      } else {\n        // sort by selector priority (instance, fullpath, filename, regex)\n        handlers.sort(function (a, b) {\n          return a.priority - b.priority;\n        });\n        // no default handler, just take the first one\n        return handlers[0];\n      }\n    },\n\n    getFileHandlerById: function (handlerId) {\n      return this.__registry[handlerId];\n    },\n\n    hasFileHandler: function (file, type) {\n      return Object.keys(this.__registry).some(function (classname) {\n        var config = this.__registry[classname];\n        return this.__canHandle(config, file) && (!type || config.type === type);\n      }, this);\n    },\n\n    /**\n     * Mark the handler with the given classname as default for the selector-id and all others with the same selector id not,\n     * @param selector {RegExp}\n     * @param clazz {qx.Class}\n     * @param noTemporaryFiles {Boolean} flag to prevent this default editor from being used to open temporary files.\n     * @param noReadOnlyFiles {Boolean} fleag to prevent this default editor from being used to open file that are not writeable\n     */\n    setDefault: function (selector, clazz, noTemporaryFiles, noReadOnlyFiles) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertRegExp(selector);\n        qx.core.Assert.assertTrue(qx.Class.isClass(clazz));\n      }\n      this.__defaults[selector.toString()] = {\n        regex: selector,\n        clazz: clazz,\n        noTemporaryFiles: noTemporaryFiles,\n        noReadOnlyFiles: noReadOnlyFiles\n      };\n    },\n\n    _onChangesDefaultConfigEditor: function () {\n      switch (cv.ui.manager.model.Preferences.getInstance().getDefaultConfigEditor()) {\n        case 'source':\n          this.setDefault(new RegExp('\\.(' + cv.ui.manager.editor.Source.SUPPORTED_FILES.join('|') + ')$', 'i'), cv.ui.manager.editor.Source);\n          break;\n\n        case 'xml':\n          this.setDefault(cv.ui.manager.editor.Xml.SUPPORTED_FILES, cv.ui.manager.editor.Xml, true, true);\n          break;\n      }\n    },\n\n    __canHandle: function(config, file) {\n      if (config.noTemporaryFiles === true && file.isTemporary()) {\n        return false;\n      } else if (config.noReadOnlyFiles === true && !file.isWriteable()) {\n          return false;\n      } else if (config.fileName && file.getName() === config.fileName) {\n        return true;\n      } else if (config.fullPath && file.getFullPath() === config.fullPath) {\n        return true;\n      } else if (config.regex && config.regex.test(file.getFullPath().toLowerCase())) {\n        return true;\n      } else if (config.instanceOf && file instanceof config.instanceOf) {\n        return true;\n      } else if (config.function && config.function(file)) {\n        return true;\n      }\n      return false;\n    },\n\n    getAllFileHandlers: function (file, type) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertTrue(file instanceof cv.ui.manager.model.FileItem || file instanceof cv.ui.manager.model.CompareFiles);\n      }\n      return  Object.keys(this.__registry).filter(function (key) {\n        return this.__canHandle(this.__registry[key], file) && (!type || this.__registry[key].type === type);\n      }, this).map(function (key) {\n        return this.__registry[key];\n      }, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    // cleanup handler instances\n    Object.keys(this.__registry).forEach(function (regex) {\n      if (this.__registry[regex].instance) {\n        this.__registry[regex].instance.dispose();\n        this.__registry[regex].instance = null;\n      }\n    }, this);\n\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeDefaultConfigEditor', this._onChangesDefaultConfigEditor, this);\n  }\n});\n","/**\n * Global singleton that hold some states that are relevant for many parts of the manager.\n */\nqx.Class.define('cv.ui.manager.core.GlobalState', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    openedFocusedFile: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      event: 'changeOpenedFocusedFile',\n      apply: '_applyFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyFile: function () {\n      cv.ui.manager.control.ActionDispatcher.getInstance().updateBarButtons();\n    }\n  }\n});\n","/**\n * Data model for currently opened files, a combination of cv.ui.manager.model.FileItem and a certain FileHandler.\n */\nqx.Class.define('cv.ui.manager.model.OpenFile', {\n  extend: qx.core.Object,\n\n\n    /*\n    ***********************************************\n      CONSTRUCTOR\n    ***********************************************\n    */\n    construct: function (file, handlerId) {\n      this.base(arguments);\n      if (file) {\n        this.setFile(file);\n      }\n      if (handlerId) {\n        this.setHandlerId(handlerId);\n      }\n    },\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      event: 'changeFile',\n      apply: '_applyFile'\n    },\n\n    handlerId: {\n      check: '!!qx.Class.getByName(value)',\n      nullable: true,\n      apply: '_maintainIcon'\n    },\n\n    /**\n     * The opening state: permanent false behaves like a quick preview, where\n     * the current file content is replaces by the next selected file on single click.\n     * In permanent mode a new tab will be created, which content will not be replaced.\n     */\n    permanent: {\n      check: 'Boolean',\n      init: false,\n      event: 'changePermanent'\n    },\n\n    /**\n     * Icon to show in e.g. the File-Tab\n     */\n    icon: {\n      check: 'String',\n      init: '',\n      event: 'changeIcon'\n    },\n\n    closeable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeCloseable'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __ibid: null,\n\n    _applyFile: function (value, old) {\n      if (old) {\n        old.removeListener('changeModified', this._maintainPermanent, this);\n        old.removeRelatedBindings(this);\n        this.__ibid = null;\n      }\n      if (value) {\n        value.addListener('changeModified', this._maintainPermanent, this);\n      }\n      this._maintainIcon();\n    },\n\n    _maintainIcon: function () {\n      // use the handlers icon is there is one, otherwise the file items icon\n      var file = this.getFile();\n      if (this.getHandlerId() && file) {\n        var handlerClass = qx.Class.getByName(this.getHandlerId());\n        if (handlerClass && handlerClass.ICON) {\n          this.setIcon(handlerClass.ICON);\n          if (this.__ibid) {\n            file.removeBinding(this.__ibid);\n            this.__ibid = null;\n          }\n        } else {\n          this.__ibid = file.bind('icon', this, 'icon');\n        }\n      } else {\n        this.resetIcon();\n      }\n    },\n\n    _maintainPermanent: function () {\n      if (this.getFile().isModified() && !this.isPermanent()) {\n        // change to permanent once we have a modification\n        this.setPermanent(true);\n      }\n    }\n  }\n});\n","/**\n * Interface all file editors must implement.\n */\nqx.Interface.define('cv.ui.manager.editor.IEditor', {\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_loadFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: ''\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    save: function () {},\n\n    getCurrentContent: function () {}\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.CompareFiles', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (original, modified) {\n    this.base(arguments);\n    this.setOriginalFile(original);\n    this.setModifiedFile(modified);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalFile: {\n      check: 'cv.ui.manager.model.FileItem',\n      event: 'changeOriginal'\n    },\n    modifiedFile: {\n      check: 'cv.ui.manager.model.FileItem',\n      event: 'changeModifiedFile',\n      apply: '_applyModifiedFile'\n    },\n\n    permanent: {\n      check: 'Boolean',\n      init: true\n    },\n\n    name: {\n      check: 'String',\n      init: '',\n      event: 'changeName'\n    },\n\n    type: {\n      check: 'String',\n      init: 'file'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    isRelated: function (path) {\n      return this.getOriginalFile().getFullPath() === path || this.getModifiedFile().getFullPath() === path;\n    },\n\n    isConfigFile: function () {\n      return this.getModifiedFile().isConfigFile();\n    },\n\n    getFullPath: function () {\n      return this.getOriginalFile().getFullPath();\n    },\n\n    _applyModifiedFile: function () {\n      this.setName(qx.locale.Manager.tr('Diff: %1', this.getModifiedFile().getName()));\n    },\n\n    getParent: function () {\n      return this.getModifiedFile().getParent();\n    },\n\n    isWriteable: function () {\n      return this.getModifiedFile().isWriteable();\n    },\n\n    isTrash: function () {\n      return this.getModifiedFile().isTrash();\n    },\n\n    isInTrash: function () {\n      return this.getModifiedFile().isInTrash();\n    },\n\n    isFake: function () {\n      return this.getModifiedFile().isFake();\n    },\n\n    isTemporary: function () {\n      return this.getModifiedFile().isTemporary() || this.getOriginalFile().isTemporary();\n    },\n\n    isMounted: function () {\n      return this.getModifiedFile().isMounted() || this.getOriginalFile().isMounted();\n    },\n\n    /**\n     * Returns a fake URI that can be used to identify the file.\n     * Used by monaco editor as model URI.\n     * @returns {Uri}\n     */\n    getUri: function () {\n      return 'cv://' + this.getOriginalFile().getFullPath() + '+' + this.getModifiedFile().getFullPath();\n    }\n  }\n});\n","/**\n * The FileController is responsible for all file operations, like config check, move, replace, delete etc.\n */\nqx.Class.define('cv.ui.manager.control.FileController', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__fsClient = cv.io.rest.Client.getFsClient();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __fsClient: null,\n\n    rename: function (file, newName) {\n      var newPath = file.getPath() || '';\n      if (newPath.length > 0 && !newPath.endsWith('/')) {\n        newPath += '/';\n      }\n      newPath += newName;\n      if (file.isTemporary()) {\n        // create new item\n        this.__fsClient.createSync({path: newPath, type: file.getType()}, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(err);\n          } else {\n            cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been created', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been created', file.getDisplayName())\n            );\n            file.resetTemporary();\n            file.resetModified();\n            file.setName(newName);\n            file.reload();\n          }\n        }, this);\n      } else if (file.getFullPath() !== newPath) {\n        this.__fsClient.moveSync({src: file.getFullPath(), target: newPath}, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(err);\n          } else {\n            cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been renamed', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been renamed', file.getDisplayName())\n            );\n            file.setName(newName);\n            file.resetModified();\n            file.reload();\n          }\n          file.resetEditing();\n        }, this);\n      }\n    },\n\n    /**\n     * Move file to another path\n     * @param file {cv.ui.manager.model.FileItem} file to move\n     * @param target {String} new path of the file\n     */\n    move: function (file, target) {\n      this.__fsClient.moveSync({src: file.getFullPath(), target: target}, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n            qx.locale.Manager.tr('File \"%1\" has been moved', file.getDisplayName()) :\n            qx.locale.Manager.tr('Folder \"%1\" has been moved', file.getDisplayName())\n          );\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'moved',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    /**\n     * Restore file from trash by moving it out of the trash to the old path\n     * @param file {cv.ui.manager.model.FileItem} file to restore\n     */\n    restore: function (file) {\n      if (file.isInTrash()) {\n        var target = file.getFullPath().replace('.trash/', '');\n        this.__moveFile(file, target);\n      } else if (file.getType() === 'file' && !file.isTemporary()) {\n        var match = /^\\/?backup\\/visu_config(.*)-[0-9]{14}\\.xml$/.exec(file.getFullPath())\n        if (match) {\n          // find the existing target config to restore\n          var targetFileName = 'visu_config' + match[1] + '.xml';\n\n          // find the target file\n          var parentFolder = file.getParent().getParent();\n          var targetFile = null;\n          parentFolder.getChildren().some(function(child) {\n            if (child.getFullPath() === targetFileName) {\n              targetFile = child;\n              return true;\n            }\n          });\n\n          // load the backup content\n          this.__fsClient.readSync({path: file.getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              if (targetFile) {\n                this.__fsClient.updateSync({\n                  path: targetFile.getFullPath(),\n                  hash: 'ignore'\n                }, res, function (err) {\n                  if (err) {\n                    cv.ui.manager.snackbar.Controller.error(err);\n                  } else {\n                    cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has been restored', file.getName()));\n                    targetFile.resetModified();\n                    targetFile.resetTemporary();\n                    qx.event.message.Bus.dispatchByName(targetFile.getBusTopic(), {\n                      type: 'fsContentChanged',\n                      data: res,\n                      source: this\n                    });\n                  }\n                }, this);\n              } else {\n                // target file does not exist copy to a new file\n                this.__fsClient.createSync({\n                  path: targetFileName,\n                  hash: 'ignore'\n                }, res, function (err) {\n                  if (err) {\n                    cv.ui.manager.snackbar.Controller.error(err);\n                  } else {\n                    cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has been restored', file.getName()));\n                  }\n                }, this);\n              }\n            }\n          }, this);\n        }\n      }\n    },\n\n    __moveFile: function (file, target) {\n      this.__fsClient.moveSync({src: file.getFullPath(), target: target}, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          cv.ui.manager.snackbar.Controller.info(file.getType() === 'file' ?\n            qx.locale.Manager.tr('File \"%1\" has been restored', file.getDisplayName()) :\n            qx.locale.Manager.tr('Folder \"%1\" has been restored', file.getDisplayName())\n          );\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'restored',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    'delete': function(file, callback, context) {\n      if (file.isTemporary()) {\n        // new file, no need to call the backend\n        if (callback) {\n          callback.apply(context, true);\n        }\n      } else {\n        if (file) {\n          var message;\n          if (file.isTrash()) {\n            message = qx.locale.Manager.tr('Do you really want to clear the trash?');\n          } else if (file.isInTrash()) {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('Do you really want to delete file \"%1\" from the trash?', file.getDisplayName()) :\n              qx.locale.Manager.tr('Do you really want to delete folder \"%1\" from the trash?', file.getDisplayName());\n          } else {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('Do you really want to delete file \"%1\"?', file.getDisplayName()) :\n              qx.locale.Manager.tr('Do you really want to delete folder \"%1\"?', file.getDisplayName());\n          }\n          dialog.Dialog.confirm(message, function (confirmed) {\n            if (confirmed) {\n              this.__doDelete(file, callback, context);\n            } else if (callback) {\n              callback.apply(context, false);\n            }\n          }, this, qx.locale.Manager.tr('Confirm deletion'));\n        }\n      }\n    },\n\n    __doDelete: function (file, callback, context) {\n      this.__fsClient.deleteSync({path: file.getFullPath(), force: file.isTrash()}, null, function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n          if (callback) {\n            callback.apply(context, false);\n          }\n        } else {\n          var message;\n          if (file.isTrash()) {\n            message = qx.locale.Manager.tr('Trash has been cleared');\n          } else if (file.isInTrash()) {\n            message = this.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been removed from trash', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been removed from trash', file.getDisplayName());\n          } else {\n            message = file.getType() === 'file' ?\n              qx.locale.Manager.tr('File \"%1\" has been deleted', file.getDisplayName()) :\n              qx.locale.Manager.tr('Folder \"%1\" has been deleted', file.getDisplayName());\n          }\n          cv.ui.manager.snackbar.Controller.info(message);\n          if (callback) {\n            callback.apply(context, true);\n          }\n          qx.event.message.Bus.dispatchByName('cv.manager.file', {\n            action: 'deleted',\n            path: file.getFullPath()\n          });\n        }\n      }, this);\n    },\n\n    download: function (file) {\n      if (file.getType() === 'file') {\n        var element = document.createElement('a');\n        element.setAttribute('href', cv.io.rest.Client.getBaseUrl() + '/fs?download=true&path=' + file.getFullPath());\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      }\n    },\n\n    validate: function (file) {\n      if (qx.core.Environment.get('qx.debug')) {\n        qx.core.Assert.assertInstance(file, cv.ui.manager.model.FileItem);\n      }\n      if (file.isConfigFile()) {\n        this.__validateConfig(file);\n      } else {\n        this.info('no validation available for file: ' + file.getFullPath());\n      }\n    },\n\n    __validateConfig: function (file) {\n      var d = dialog.Dialog.alert(qx.locale.Manager.tr('Validating %1', file.getFullPath()));\n      cv.ui.manager.editor.Worker.getInstance().validateConfig(file).then(function (res) {\n        d.close();\n        if (res === true) {\n          file.setValid(true);\n          cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('%1 has no errors!', file.getFullPath()));\n        } else {\n          file.setValid(false);\n          qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n            file: file,\n            handler: 'cv.ui.manager.editor.Source'\n          });\n          cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.trn(\n            '%1 error found in %2!',\n            '%1 errors found in %2!',\n            res.length,\n            res.length,\n            file.getFullPath())\n          );\n        }\n      }.bind(this));\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__fsClient = null;\n  }\n});\n","/**\n * Main toolbar on top.\n */\nqx.Class.define('cv.ui.manager.MenuBar', {\n  extend: qx.ui.menubar.MenuBar,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._commandGroup = qx.core.Init.getApplication().getCommandManager().getActive();\n    this.__buttons = {};\n\n    this._draw();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _commandGroup: null,\n    __buttons: null,\n    __defaultButtonConfiguration: null,\n    __buttonConfiguration: null,\n\n    _draw: function () {\n      this._createChildControl('file');\n      this._createChildControl('edit');\n      this._createChildControl('preferences');\n      this.add(new qx.ui.core.Spacer(), {flex: 1});\n\n      this._createChildControl('title');\n      this.add(new qx.ui.core.Spacer(), {flex: 1});\n\n      var editorGroup = new qx.ui.form.RadioGroup();\n\n      this.__defaultButtonConfiguration = {\n        'new-file': {\n          menu: 'new-menu',\n          args: [this.tr('New file'), cv.theme.dark.Images.getIcon('new-file', 18), this._commandGroup.get('new-file')],\n          enabled: true\n        },\n        'new-folder': {\n          menu: 'new-menu',\n          args: [this.tr('New folder'), cv.theme.dark.Images.getIcon('new-folder', 18), this._commandGroup.get('new-folder')],\n          enabled: true,\n          separator: 'after'\n        },\n        'new-config-file': {\n          menu: 'new-menu',\n          args: [this.tr('New config file')],\n          enabled: true\n        },\n        'upload': {\n          menu: 'file-menu',\n          clazz: com.zenesis.qx.upload.UploadMenuButton,\n          args: [this.tr('Upload file'), cv.theme.dark.Images.getIcon('upload', 18)],\n          enabled: true,\n          separator: 'before'\n        },\n        'save': {\n          menu: 'file-menu',\n          args: [this.tr('Save'), cv.theme.dark.Images.getIcon('save', 18), this._commandGroup.get('save')],\n          enabled: false,\n          separator: 'before'\n        },\n        'save-as': {\n          menu: 'file-menu',\n          args: [this.tr('Save as...'), null, this._commandGroup.get('save-as')],\n          enabled: false\n        },\n        'delete': {\n          args: [this.tr('Delete'), cv.theme.dark.Images.getIcon('delete', 18), this._commandGroup.get('delete')],\n          enabled: false,\n          hidden: true\n        },\n        'quit': {\n          menu: 'file-menu',\n          args: [this.tr('Quit'), cv.theme.dark.Images.getIcon('quit', 18), this._commandGroup.get('quit')],\n          enabled: true,\n          separator: 'before'\n        },\n        // edit menu basics\n        'undo': {\n          menu: 'edit-menu',\n          args: [this.tr('Undo'), cv.theme.dark.Images.getIcon('undo', 18), this.tr('Ctrl+Z')],\n          enabled: true\n        },\n        'redo': {\n          menu: 'edit-menu',\n          args: [this.tr('Redo'), cv.theme.dark.Images.getIcon('redo', 18), this.tr('Ctrl+Y')],\n          enabled: true\n        },\n        'cut': {\n          menu: 'edit-menu',\n          args: [this.tr('Cut'), null, this.tr('Ctrl+X')],\n          enabled: false,\n          separator: 'before'\n        },\n        'copy': {\n          menu: 'edit-menu',\n          args: [this.tr('Copy'), null, this.tr('Ctrl+C')],\n          enabled: false\n        },\n        'paste': {\n          menu: 'edit-menu',\n          args: [this.tr('Paste'), null, this.tr('Ctrl+V')],\n          enabled: false\n        },\n        // preferences\n        'source-editor': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.RadioButton,\n          args: [this.tr('Use text editor')],\n          general: true,\n          enabled: true,\n          properties: {\n            model: 'source',\n            group: editorGroup\n          }\n        },\n        'xml-editor': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.RadioButton,\n          args: [this.tr('Use xml editor')],\n          general: true,\n          enabled: true,\n          properties: {\n            model: 'xml',\n            group: editorGroup\n          }\n        },\n        'quick-preview': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.CheckBox,\n          args: [this.tr('Enable quick preview')],\n          general: true,\n          enabled: true,\n          separator: 'before'\n        },\n        'expert-mode': {\n          menu: 'preferences-menu',\n          clazz: qx.ui.menu.CheckBox,\n          args: [this.tr('Expert mode')],\n          general: true,\n          enabled: true\n        }\n      };\n      this.maintainButtons();\n\n      var prefs = cv.ui.manager.model.Preferences.getInstance();\n\n      prefs.bind('defaultConfigEditor', editorGroup, 'modelSelection', {\n        converter: function (value) {\n          return [value];\n        }\n      });\n      editorGroup.getModelSelection().addListener('change', function () {\n        prefs.setDefaultConfigEditor(editorGroup.getModelSelection().getItem(0));\n      }, this);\n\n      this.__bindToPreference('quick-preview', 'quickPreview');\n      this.__bindToPreference('expert-mode', 'expertMode');\n    },\n\n    __bindToPreference: function (buttonName, preferenceName) {\n      var button = this.getButton(buttonName);\n      var prefs = cv.ui.manager.model.Preferences.getInstance()\n      prefs.bind(preferenceName, button, 'value');\n      button.bind('value', prefs, preferenceName);\n    },\n\n    maintainButtons: function (config) {\n      if (!config) {\n        config = this.__defaultButtonConfiguration;\n      } else {\n        config = Object.merge(this.__defaultButtonConfiguration, config);\n        this.__buttonConfiguration = config;\n      }\n      Object.keys(config).forEach(function (id) {\n        var button;\n        var buttonConf = config[id];\n        if (!this.__buttons.hasOwnProperty(id)) {\n          // create button\n          var label = buttonConf.args[0];\n          var icon = buttonConf.args[1];\n          var command = buttonConf.args[2];\n          var ButtonClass = buttonConf.clazz || qx.ui.menu.Button;\n          if (qx.lang.Type.isString(command) || !command) {\n            // no command connected\n            button = new ButtonClass(label, icon);\n            if (command) {\n              // just add the string as shortcut hint\n              button.getChildControl('shortcut').setValue(command);\n            }\n          } else {\n            button = new ButtonClass(label, icon, command);\n          }\n          button.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.' + id);\n          }, this);\n          if (!buttonConf.hidden) {\n            var menu = this.getChildControl(buttonConf.menu);\n            if (!menu) {\n              throw new Error('no menu named ' + buttonConf.menu + ' found!');\n            }\n            if (buttonConf.separator === 'before') {\n              menu.add(new qx.ui.menu.Separator());\n            }\n            menu.add(button);\n            if (buttonConf.separator === 'after') {\n              menu.add(new qx.ui.menu.Separator());\n            }\n          }\n          this.__buttons[id] = button;\n\n          if (buttonConf.hasOwnProperty('onAfterCreate')) {\n            buttonConf.onAfterCreate(button);\n          }\n        } else {\n          button = this.__buttons[id];\n        }\n        button.setEnabled(buttonConf.enabled);\n        if (buttonConf.properties) {\n          button.set(buttonConf.properties);\n        }\n\n      }, this);\n    },\n\n    getButton: function (id) {\n      return this.__buttons[id];\n    },\n\n    getButtonConfiguration: function () {\n      return this.__buttonConfiguration || this.__defaultButtonConfiguration;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'title':\n           control = new qx.ui.basic.Label(this.tr('CometVisu Manager'));\n           this.add(control);\n           break;\n\n         case \"file\":\n           control = new qx.ui.menubar.Button(this.tr('File'), null, this.getChildControl('file-menu'));\n           this.add(control);\n           break;\n\n         case \"edit\":\n           control = new qx.ui.menubar.Button(this.tr('Edit'), null, this.getChildControl('edit-menu'));\n           this.add(control);\n           break;\n\n         case \"new\":\n           control = new qx.ui.menu.Button(this.tr('New'), null, null, this.getChildControl('new-menu'));\n           break;\n\n         case \"preferences\":\n           control = new qx.ui.menubar.Button(this.tr('Preferences'), null, this.getChildControl('preferences-menu'));\n           this.add(control);\n           break;\n\n         case 'new-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'file-menu':\n           control = new qx.ui.menu.Menu();\n           control.add(this.getChildControl('new'));\n           break;\n\n         case 'edit-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'preferences-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._commandGroup = null;\n  }\n});\n","/**\n * Extend {com.zenesis.qx.upload.UploadMgr} to allow files to e uploaded via HTML5 drop\n */\nqx.Class.define(\"cv.ui.manager.upload.UploadMgr\", {\n  extend : com.zenesis.qx.upload.UploadMgr,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (widget, uploadUrl) {\n    this.base(arguments, widget, uploadUrl);\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    LAST_ID: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    multiple: {\n      refine: true,\n      init: false\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_updateUploadUrl'\n    },\n\n    filename: {\n      check: 'String',\n      nullable: true\n    },\n\n    force: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  members : {\n\n    _updateUploadUrl: function () {\n      var folder = this.getFolder();\n      var path = folder ? folder.getFullPath() : '.';\n      var url = cv.io.rest.Client.getBaseUrl() + '/fs?type=file&path=' + path;\n      this.setUploadUrl(url);\n    },\n\n    _init: function () {\n      this.addListener(\"addFile\", function(evt) {\n        var file = evt.getData();\n        var filename = this.getFilename();\n        if (filename) {\n          file.setParam('filename', filename);\n        }\n        if (this.isForce()) {\n          file.setParam('force', true);\n        }\n        var progressListenerId = file.addListener(\"changeProgress\", function (evt) {\n          var file = evt.getTarget();\n          var uploadedSize = evt.getData();\n\n          this.debug(\"Upload \" + file.getFilename() + \": \" +\n            uploadedSize + \" / \" + file.getSize() + \" - \" +\n            Math.round(uploadedSize / file.getSize() * 100) + \"%\");\n        }, this);\n\n        var stateListenerId = file.addListener(\"changeState\", function(evt) {\n          var state = evt.getData();\n          var file = evt.getTarget();\n\n          if (state === \"uploading\") {\n            this.debug(file.getFilename() + \" (Uploading...)\");\n          } else if (state === \"uploaded\") {\n            this.debug(file.getFilename() + \" (Complete)\");\n            if (file.getStatus() !== 200) {\n              // something went wrong\n              switch (file.getStatus()) {\n                case 406:\n                  if (this.isForce()) {\n                    cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Replacing the file failed.'));\n                  } else {\n                    dialog.Dialog.confirm(qx.locale.Manager.tr('This file already exists, do you want to replace it?'), function (confirmed) {\n                      if (confirmed) {\n                        this.forceUpload(file);\n                      }\n                    }, this, qx.locale.Manager.tr('File already exists'));\n                  }\n                  break;\n\n                case 403:\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Uploading this file is not allowed here.'));\n                  break;\n\n                default:\n                  var err = file.getResponse();\n                  try {\n                    err = qx.lang.Json.parse(err).message;\n                  } catch (e) {\n                  }\n                  this.error(err);\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('File upload stopped with an error: %1', err));\n                  break;\n              }\n            } else {\n              cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been uploaded'));\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'uploaded',\n                path: this.getFolder().getFullPath() + '/' + file.getFilename()\n              });\n            }\n          }\n          else if (state === \"cancelled\") {\n            this.debug(file.getFilename() + \" (Cancelled)\");\n          }\n          // Remove the listeners\n          if (state === \"uploaded\" || state === \"cancelled\") {\n            file.removeListenerById(progressListenerId);\n            file.removeListenerById(stateListenerId);\n          }\n        }, this);\n      }, this);\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @return {Number}\n     */\n    _getUniqueFileId: function() {\n      return ++cv.ui.manager.upload.UploadMgr.LAST_ID;\n    },\n\n    /**\n     * Re-upload a file in forced mode\n     * @param file {com.zenesis.qx.upload.File}\n     */\n    forceUpload: function (file) {\n      this.setForce(true);\n      var newFile =  new com.zenesis.qx.upload.File(file.getBrowserObject(), file.getFilename(), file.getId());\n      newFile.set({\n        size: file.getSize(),\n        uploadWidget: file.getUploadWidget()\n      });\n      newFile.setParam('force', true);\n      this.getUploadHandler()._addFile(newFile);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Upload file directly to the backend\n     *\n     * @param bomFile {File}\n     */\n    uploadFile: function(bomFile) {\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = typeof bomFile.name !== \"undefined\" ? bomFile.name : bomFile.fileName;\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      if (this.isForce()) {\n        file.setParam('force', true);\n      }\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Replace content of existing file with the upload\n     * @param bomFile {File}\n     * @param replacedFile {cv.ui.manager.model.FileItem}\n     */\n    replaceFile: function(bomFile, replacedFile) {\n      this.setFolder(replacedFile.getParent());\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = replacedFile.getName();\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      file.setParam('force', true);\n      file.setParam('filename', filename);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    }\n  }\n});","/**\n * Add upload via drag&drop feature to this widget. The including widget must have a\n * \"upload-dropbox\" childcontrol or add\n *  <pre class=\"javascript\">\n *   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n *   </pre>\n *   to their own _createChildControlImpl method\n */\nqx.Mixin.define(\"cv.ui.manager.upload.MDragUpload\", {\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function() {\n    this.setDroppable(true);\n    if (this.getBounds()) {\n      this._applyStartDragListeners();\n    } else {\n      this.addListenerOnce(\"appear\", function() {\n        this._applyStartDragListeners();\n      }, this);\n    }\n    var layout = this._getLayout();\n    if (!(layout instanceof qx.ui.layout.Grow) && !(layout instanceof qx.ui.layout.Canvas)) {\n      this.addListener('resize', this.__syncBounds, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties : {\n    uploadMode: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"__applyUploadMode\"\n    },\n\n    uploadHint: {\n      check: \"String\",\n      init: \"\"\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Handles HTML5 drop events (dropping external files on dom element)\n     * @param ev {Event}\n     */\n    onHtml5Drop : function (ev) {\n      ev.preventDefault();\n      this.getFiles(ev).forEach(this.uploadFile, this);\n    },\n\n    /**\n     * Uploads the dropped file to the correct folder:\n     * - config files to the resources/config folder\n     * - accepted media files to the resources/config/media folder\n     * @param file {File}\n     * @param replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones\n     */\n    uploadFile: function (file, replaceFile) {\n      var isConfig = cv.ui.manager.model.FileItem.isConfigFile(file.name);\n\n      var folder;\n      if (isConfig) {\n        // upload to root folder\n        folder = new cv.ui.manager.model.FileItem('.');\n      } else if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n        // upload to media folder\n        folder = new cv.ui.manager.model.FileItem('media');\n      }\n      if (folder) {\n        folder.set({\n          type: 'dir'\n        });\n        var manager = new cv.ui.manager.upload.UploadMgr();\n        if (replaceFile) {\n          manager.replaceFile(file, replaceFile);\n        } else {\n          manager.setFolder(folder);\n          manager.uploadFile(file);\n        }\n      }\n    },\n\n    hasDroppableFile: function (ev) {\n      return this.getFiles(ev).length > 0;\n    },\n\n    /**\n     * Extracts acceptable files from event\n     * @param ev {Event}\n     * @private\n     */\n    getFiles: function (ev) {\n      var files = [];\n      var i, l, file;\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (i = 0, l = ev.dataTransfer.items.length; i < l; i++) {\n          // If dropped items aren't files, reject them\n          var item = ev.dataTransfer.items[i];\n          if (item.kind === 'file' && cv.ui.manager.tree.FileSystem.isAccepted(item.type)) {\n            file = item.getAsFile();\n            files.push(file);\n          }\n        }\n      } else {\n        for (i = 0, l = ev.dataTransfer.files.length; i < l; i++) {\n          file = ev.dataTransfer.files[i];\n          if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      return files;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members : {\n    __hasEmptyInfo: null,\n    _boundOnStop: null,\n\n    __syncBounds: function () {\n      var bounds = this.getBounds();\n      this.getChildControl('upload-overlay').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n      this.getChildControl('upload-dropbox').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n    },\n\n    // overridden\n    _createMDragUploadChildControlImpl: function(id) {\n      var control;\n      var bounds = this.getBounds();\n      var layout = this._getLayout();\n\n      switch(id) {\n        case \"upload-overlay\":\n          control = new qx.ui.container.Composite();\n          control.setZIndex(1000000);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          this.getChildControl(\"upload-dropbox\").bind(\"visibility\", control, \"visibility\");\n          break;\n\n        case \"upload-dropbox\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.Grow());\n          control.setBackgroundColor('rgba(32, 32, 32, 0.9)');\n          control.setZIndex(1000);\n          var dropBox = new qx.ui.basic.Atom(this.getUploadHint(), cv.theme.dark.Images.getIcon('upload', 32));\n          dropBox.set({\n            iconPosition: 'top',\n            rich: true,\n            center: true\n          });\n          // control.bind('width', dropBox, 'maxWidth');\n          dropBox.getChildControl('label').setWrap(true);\n          control.setAnonymous(true);\n          control.add(dropBox);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, {edge: 0});\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          break;\n      }\n      return control;\n    },\n\n    _onStopDragging: function(ev) {\n      ev.preventDefault();\n      this.setUploadMode(false);\n      document.removeEventListener(\"dragend\", this._boundOnStop, false);\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyStartDragListeners: function() {\n      // add the start listener to this widget\n      this.getContentElement().getDomElement().addEventListener(\"dragenter\", function(ev) {\n        // ev.preventDefault();\n        if (this._isDroppable) {\n          if (this._isDroppable(ev.dataTransfer.items)) {\n            // we have something to drop\n            this.setUploadMode(true);\n          }\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          // we have something to drop\n          this.setUploadMode(true);\n        }\n      }.bind(this), false);\n      if (this.getChildControl(\"upload-overlay\").getBounds()) {\n        this._applyDragListeners();\n      } else {\n        this.getChildControl(\"upload-overlay\").addListenerOnce(\"appear\", function() {\n          this._applyDragListeners();\n        }, this);\n      }\n\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyDragListeners: function() {\n      var element = this.getChildControl(\"upload-overlay\").getContentElement().getDomElement();\n      if (!element) {\n        var lid = this.getChildControl(\"upload-overlay\").addListener('visibility', function (ev) {\n          if (ev.getData() === 'visible') {\n            this._applyDragListeners();\n            this.getChildControl(\"upload-overlay\").removeListenerById(lid);\n          }\n        }, this);\n        return;\n      }\n      element.addEventListener(\"dragexit\", function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      element.addEventListener(\"dragover\", function (ev) {\n        ev.preventDefault();\n        var uploadable = false;\n        if (this._isDroppable) {\n          uploadable = this._isDroppable(ev.dataTransfer.items);\n        } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n          uploadable = true;\n        }\n        this.setUploadMode(uploadable);\n      }.bind(this), false);\n\n      this._boundOnStop = this._onStopDragging.bind(this);\n\n      element.addEventListener(\"dragleave\", this._boundOnStop, false);\n      element.addEventListener(\"dragend\", function() {\n        this.setUploadMode(false);\n      }.bind(this), false);\n\n      document.addEventListener(\"dragend\", this._boundOnStop, false);\n\n      if (this._onDrop) {\n        element.addEventListener(\"drop\", this._onDrop.bind(this), false);\n      } else {\n        element.addEventListener(\"drop\", function (ev) {\n          cv.ui.manager.upload.MDragUpload.onHtml5Drop(ev);\n          this._onStopDragging(ev);\n        }.bind(this), false);\n      }\n    },\n\n    // property apply\n    __applyUploadMode: function(value) {\n      if (value === true) {\n        this.getChildControl(\"upload-dropbox\").show();\n        if (this.hasChildControl(\"empty-info\") && this.getChildControl(\"empty-info\").isVisible()) {\n          this.getChildControl(\"empty-info\").exclude();\n          this.__hasEmptyInfo = true;\n        } else {\n          this.__hasEmptyInfo = false;\n        }\n      } else {\n        this.getChildControl(\"upload-dropbox\").exclude();\n        if (this.__hasEmptyInfo === true) {\n          this.getChildControl(\"empty-info\").show();\n        }\n      }\n    }\n  }\n});","/**\n * Shows filesystem content in a tree.\n */\nqx.Class.define('cv.ui.manager.tree.FileSystem', {\n  extend: qx.ui.core.Widget,\n  include: [\n    cv.ui.manager.upload.MDragUpload\n  ],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (rootFolder) {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n    this.setRootFolder(rootFolder);\n\n    qx.event.message.Bus.subscribe('cv.manager.tree.enable', this._onEnableTree, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    MIMETYPES: {\n      'text/xml': 'xml',\n      'application/xml': 'xml',\n      'text/javascript': 'js',\n      'application/x-httpd-php': 'php',\n      'text/css': 'css',\n      'image/png': 'png',\n      'image/svg+xml': 'svg',\n      'text/plain': ''\n    },\n\n    getMimetypeFromSuffix: function (suffix) {\n      return Object.keys(this.MIMETYPES).find(function (mime) {\n        return this.MIMETYPES[mime] === suffix;\n      }, this);\n    },\n\n    isAccepted: function (mimetype) {\n      return this.MIMETYPES.hasOwnProperty(mimetype);\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'changeSelection': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    // appearance: {\n    //   refine: true,\n    //   init: 'cv-filesystem'\n    // },\n\n    rootFolder: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applyRootFolder'\n    },\n\n    selectedNode: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applySelectedNode',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __selectionTimer: null,\n    __doubleTapWaitingTime: 500,\n    __ignoreSelectionChange: false,\n    _replacementManager: null,\n\n    reload: function () {\n      var tree = this.getChildControl('tree');\n      var openPaths = tree.getOpenNodes().map(function (node) { return node.getFullPath(); });\n      var root = tree.getModel();\n      root.reload(function () {\n        this.getChildControl('tree').refresh();\n        root.setOpen(true);\n        openPaths.forEach(this.openPath, this)\n      }, this);\n    },\n\n    openPath: function (path) {\n      var root = this.getChildControl('tree').getModel();\n      if (path === '.') {\n        root.setOpen(true);\n      } else {\n        root.setOpen(true);\n        root.openPath(path);\n      }\n    },\n\n    refresh: function () {\n      this.getChildControl('tree').refresh();\n    },\n\n    _applyRootFolder: function (value) {\n      if (value) {\n        var tree = this.getChildControl('tree');\n        tree.setModel(value);\n        value.load(function () {\n          tree.setHideRoot(true);\n        }, this);\n      }\n    },\n\n    _applySelectedNode: function (value) {\n      var tree = this.getChildControl('tree');\n      var contextMenu = cv.ui.manager.contextmenu.GlobalFileItem.getInstance();\n      contextMenu.configure(value);\n      if (value) {\n        tree.setContextMenu(contextMenu);\n      }\n    },\n\n    setSelection : function (node) {\n      this.getChildControl('tree').getSelection().replace([node]);\n    },\n\n    _onDblTapTreeSelection: function () {\n      var sel = this.getSelectedNode();\n      if (sel) {\n        if (this.__selectionTimer) {\n          this.__selectionTimer.stop();\n        }\n        // only files show a different behaviour when double-clicked (permanent vs. preview mode)\n        if (sel.getType() === 'file') {\n          this.fireDataEvent('changeSelection', {\n            'node': sel,\n            'mode': 'dbltap'\n          });\n        }\n      }\n    },\n\n    _onChangeTreeSelection: function () {\n      if (this.__selectionTimer) {\n        this.__selectionTimer.stop();\n      }\n      if (this.__ignoreSelectionChange === true) {\n        return;\n      }\n      var tree = this.getChildControl('tree');\n      var sel = tree.getSelection();\n      if (sel.length > 0) {\n        var node = sel.getItem(0);\n        this.setSelectedNode(node);\n        // wait for double tap\n        if (node.getType() === 'file') {\n          this.__selectionTimer = qx.event.Timer.once(function () {\n            this.fireDataEvent('changeSelection', {\n              'node': this.getSelectedNode(),\n              'mode': 'tap'\n            });\n            this.__selectionTimer = null;\n          }, this, this.__doubleTapWaitingTime);\n        } else {\n          this.fireDataEvent('changeSelection', {\n            'node': node,\n            'mode': 'tap'\n          });\n        }\n      } else {\n        tree.resetContextMenu();\n        this.resetSelectedNode();\n      }\n    },\n\n    _onFsItemRightClick: function (ev) {\n      var tree = this.getChildControl('tree');\n      var widget = ev.getTarget();\n      if (widget instanceof cv.ui.manager.tree.VirtualFsItem) {\n        var node = widget.getModel();\n        if (node) {\n          this.__ignoreSelectionChange = true;\n          tree.getSelection().replace([node]);\n          this.setSelectedNode(node);\n          this.fireDataEvent('changeSelection', {\n            'node': node,\n            'mode': 'contextmenu'\n          });\n          this.__ignoreSelectionChange = false;\n        }\n      }\n    },\n\n    /**\n     * Handle message on 'cv.manager.tree.enable' topic.\n     * @param ev {Event}\n     * @protected\n     */\n    _onEnableTree: function (ev) {\n      this.getChildControl('tree').setEnabled(ev.getData());\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'tree':\n           control = new qx.ui.tree.VirtualTree(null, 'name', 'children');\n           control.set({\n             selectionMode: 'single',\n             minWidth: 250\n           });\n           cv.ui.manager.model.Preferences.getInstance().bind('quickPreview', control, 'openMode', {\n             converter: function (value) {\n               return value ? 'tap' : 'dbltap';\n             }\n           });\n           control.setDelegate({\n             createItem: function () {\n               var item = new cv.ui.manager.tree.VirtualFsItem();\n               item.addListener('dbltap', this._onDblTapTreeSelection, this);\n               item.addListener('contextmenu', this._onFsItemRightClick, this);\n               return item;\n             }.bind(this),\n\n             // Bind properties from the item to the tree-widget and vice versa\n             bindItem : function(controller, item, index) {\n               controller.bindProperty(\"\", \"model\", null, item, index);\n               controller.bindPropertyReverse(\"open\", \"open\", null, item, index);\n               controller.bindProperty(\"open\", \"open\", null, item, index);\n               controller.bindProperty(\"readable\", \"enabled\", null, item, index);\n               controller.bindProperty(\"icon\", \"icon\", null, item, index);\n               controller.bindProperty(\"editing\", \"editing\", null, item, index);\n             }\n           });\n           control.getSelection().addListener(\"change\", this._onChangeTreeSelection, this);\n           this._add(control);\n           break;\n       }\n\n       if (!control) {\n         control = this._createMDragUploadChildControlImpl(id);\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    qx.event.message.Bus.unsubscribe('cv.manager.tree.enable', this._onEnableTree, this);\n\n    this._disposeObjects('_dateFormat', '_timeFormat', '_replacementManager');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.ToolBar', {\n  extend: qx.ui.toolbar.ToolBar,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (uploadManager, showOnly) {\n    this.base(arguments);\n\n    if (showOnly) {\n      this.__showOnly = showOnly;\n    }\n\n    this._menuBar = cv.ui.manager.MenuBar.getInstance();\n    this._menuButtonConfig = this._menuBar.getButtonConfiguration();\n    this._uploadManager = uploadManager;\n\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'reload': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-toolbar'\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFolder',\n      event: 'changeFolder'\n    },\n\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFile',\n      event: 'changeFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _menuButtonConfig: null,\n    _uploadManager: null,\n    _menuBar: null,\n    __showOnly: null,\n\n    __show: function (name) {\n      return this.__showOnly === null || this.__showOnly.includes(name);\n    },\n\n    _init: function () {\n      if (!this._uploadManager) {\n        this._uploadManager = new cv.ui.manager.upload.UploadMgr();\n      }\n\n      var fileController = cv.ui.manager.control.FileController.getInstance();\n\n      var createPart = new qx.ui.toolbar.Part();\n      createPart.set({\n        marginLeft: 0\n      });\n      this.add(createPart);\n      var newButton;\n\n      if (this.__show('new-menu')) {\n        newButton = new qx.ui.toolbar.MenuButton(null,\n          cv.theme.dark.Images.getIcon('new-file', 15),\n          this._menuBar.getChildControl('new-menu')\n        );\n        this.bind('folder.writeable', newButton, 'enabled');\n        createPart.add(newButton);\n      } else {\n        if (this.__show('new-config-file')) {\n          newButton = this._createButton('new-config-file', cv.theme.dark.Images.getIcon('new-file', 15));\n          this.bind('folder.writeable', newButton, 'enabled');\n          this.bind('folder', newButton, 'visibility', {\n            converter: function (folder) {\n              return folder === cv.ui.manager.model.FileItem.ROOT ? 'visible' : 'excluded';\n            }\n          });\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-config-file', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        } else if (this.__show('new-file')) {\n          newButton = this._createButton('new-file', null, true);\n          this.bind('folder.writeable', newButton, 'enabled');\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-file', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        }\n        if (this.__show('new-folder')) {\n          newButton = this._createButton('new-folder', cv.theme.dark.Images.getIcon('new-folder', 15), true);\n          this.bind('folder.writeable', newButton, 'enabled');\n          newButton.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.action.new-folder', this.getFolder());\n          }, this);\n          createPart.add(newButton);\n        }\n      }\n\n      if (this.__show('upload')) {\n        var upload = this._createButton('upload');\n        this._uploadManager.addWidget(upload);\n        this.bind('folder.writeable', upload, 'enabled');\n        createPart.add(upload);\n      }\n\n      if (this.__show('delete')) {\n        var deleteSelection = this._createButton('delete');\n        deleteSelection.addListener('execute', function () {\n          fileController.delete(this.getFile());\n        }, this);\n        this.bind('file', deleteSelection, 'enabled', {\n          converter: function (file) {\n            return !!file && file.isWriteable() && !file.isFake();\n          }\n        });\n        this.add(deleteSelection);\n      }\n\n      if (this.__show('download')) {\n        var download = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('download', 15));\n        download.setAppearance('cv-toolbar-button');\n        download.setToolTipText(qx.locale.Manager.tr('Download'));\n        download.addListener('execute', function () {\n          fileController.download(this.getFile());\n        }, this);\n        // download button is only enabled when a file is selected\n        this.bind('file', download, 'enabled', {\n          converter: function (file) {\n            return !!file && file.getType() === 'file' && !file.isFake();\n          }\n        });\n        createPart.add(download);\n      }\n\n      if (this.__show('validate')) {\n        // config check\n        var checkConfig = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('validate', 15));\n        checkConfig.setAppearance('cv-toolbar-button');\n        checkConfig.setToolTipText(qx.locale.Manager.tr('Validate'));\n        checkConfig.addListener('execute', function () {\n          fileController.validate(this.getFile());\n        }, this);\n\n        // validate button is only enabled when a file is selected\n        this.bind('file', checkConfig, 'enabled', {\n          converter: function (file) {\n            return !!file && file.isConfigFile();\n          }\n        });\n        this.add(checkConfig);\n      }\n\n      if (this.__show('reload')) {\n        var reload = new qx.ui.toolbar.Button(null, cv.theme.dark.Images.getIcon('reload', 15));\n        reload.setAppearance('cv-toolbar-button');\n        reload.setToolTipText(qx.locale.Manager.tr('Reload'));\n        reload.addListener('execute', function () {\n          this.fireEvent('reload');\n        }, this);\n        this.add(new qx.ui.core.Spacer(), {flex: 1});\n        this.add(reload);\n      }\n    },\n\n    _createButton: function (name, icon, doNotUseCommand) {\n      var args = this._menuButtonConfig[name].args;\n      var button = new qx.ui.toolbar.Button(null, icon || args[1].replace(/\\/[0-9]+$/, '/15'), !doNotUseCommand ? args[2] : null);\n      button.setAppearance('cv-toolbar-button');\n      button.setToolTipText(args[0]);\n      return button;\n    },\n\n    _applyFile: function () {\n\n    },\n\n    _applyFolder: function (value) {\n      if (this._uploadManager) {\n        if (value) {\n          this._uploadManager.setFolder(value)\n        } else {\n          this._uploadManager.resetFolder()\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._menuButtonConfig = null;\n    this._uploadManager = null;\n    this.__menuBar = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.form.FileTabItem', {\n  extend: qx.ui.core.Widget,\n  implement : [qx.ui.form.IModel],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox());\n    this._createChildControl('icon');\n    this._createChildControl('label');\n    this._createChildControl('close');\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'close': 'qx.event.type.Data',\n\n    /** (Fired by {@link qx.ui.form.List}) */\n    \"action\" : \"qx.event.type.Event\"\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'open-file-item'\n    },\n\n    model: {\n      nullable: true,\n      event: 'changeModel',\n      apply: '_applyModel',\n      dereference: true\n    },\n\n    label: {\n      check: 'String',\n      nullable: true,\n      transform: '_transformFilename',\n      event: 'changeLabel',\n      apply: '_applyLabel'\n    },\n\n    icon: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyIcon'\n    },\n\n    permanent: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyPermanent'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyLabel'\n    },\n\n    closeable: {\n      check: 'Boolean',\n      init: true,\n      apply: '_applyCloseable'\n    },\n\n    writeable:{\n      check: 'Boolean',\n      init: true,\n      apply: '_applyLabel'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n      {\n        focused : true,\n        hovered : true,\n        selected : true,\n        dragover : true\n      },\n\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver : function() {\n      this.addState(\"hovered\");\n    },\n\n    _transformFilename: function(name) {\n      if (name === '.') {\n        return '';\n      }\n      return name;\n    },\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut : function() {\n      this.removeState(\"hovered\");\n    },\n\n    _applyPermanent: function (value) {\n      this.setFont(value ? 'default' : 'italic');\n    },\n\n    _applyCloseable: function (value) {\n      this.getChildControl('close').setVisibility(value ? 'visible' : 'excluded');\n    },\n\n    _applyModel: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        value.bind('file.writeable', this, 'writeable');\n      }\n    },\n\n    _applyIcon: function (value) {\n      var control = this.getChildControl('icon');\n      control.setSource(value);\n      if (value) {\n        control.show();\n      } else {\n        control.exclude();\n      }\n    },\n\n    _applyLabel: function () {\n      var label = this.getChildControl(\"label\");\n      var value = this.getLabel();\n      if (value) {\n        var labelValue = this.getLabel();\n        if (!this.isWriteable() && !this.getModel().getFile().isFake()) {\n          labelValue += ' !';\n          this.setToolTipText(this.tr('This file is not writeable'));\n        } else {\n          this.resetToolTipText();\n        }\n        if (this.isModified()) {\n          labelValue += ' *';\n        }\n        label.setValue(labelValue);\n        label.show();\n      } else {\n        label.exclude();\n        this.resetToolTipText();\n      }\n    },\n\n    _onClose: function () {\n      if (this.isCloseable()) {\n        this.fireDataEvent('close', this.getModel());\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new qx.ui.basic.Image();\n           control.setAppearance('open-file-item/icon');\n           control.setAnonymous(true);\n           control.exclude();\n           this._addAt(control, 0);\n           break;\n\n         case 'label':\n           control = new qx.ui.basic.Label();\n           control.setAppearance('open-file-item/label');\n           control.setAnonymous(true);\n           this._addAt(control, 1);\n           break;\n\n         case 'close':\n           control = new qx.ui.basic.Image('decoration/tabview/close.gif');\n           control.setAppearance('open-file-item/close');\n           if (this.isCloseable()) {\n             control.addListener('tap', this._onClose, this);\n           } else {\n             control.exclude();\n           }\n           this._addAt(control, 2);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.removeListener(\"pointerover\", this._onPointerOver, this);\n    this.removeListener(\"pointerout\", this._onPointerOut, this);\n  }\n});\n","/**\n * Model for Messages shown in Snackbar/Dialog (usually error, warnings or info messages).\n */\nqx.Class.define('cv.ui.manager.model.Message', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    title: {\n      check: 'String',\n      init: '',\n      event: 'changeTitle'\n    },\n\n    content: {\n      check: 'String',\n      init: '',\n      event: 'changeContent'\n    },\n\n    type: {\n      check: ['alert', 'hint', 'warning', 'error'],\n      nullable: true,\n      event: 'changeType'\n    },\n\n    sticky: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeSticky'\n    }\n  }\n});\n","/**\n * View component that shows a snackbar message.\n */\nqx.Class.define('cv.ui.manager.snackbar.Message', {\n  extend: qx.ui.core.Widget,\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox(8));\n    this.addListener('appear', this._onAppear, this);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'close': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-snackbar-msg'\n    },\n\n    model: {\n      check: 'cv.ui.manager.model.Message',\n      nullable: true,\n      apply: '_applyModel'\n    },\n\n    timeout: {\n      check: 'Number',\n      init: 5000,\n      apply: '_applyTimeout'\n    },\n\n    type: {\n      check: ['alert', 'hint', 'warning', 'error'],\n      nullable: true,\n      apply: '_applyType'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _timer: null,\n\n    _applyModel: function (value, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n        old.removeRelatedBindings(this.getChildControl('content'));\n      }\n      if (value) {\n        value.bind('title', this.getChildControl('content'), 'value');\n        value.bind('type', this, 'type');\n        value.bind('sticky', this, 'timeout', {\n          converter: function (value) {\n            return value ? 0 : 5000;\n          }\n        });\n        this.getChildControl('close');\n      }\n    },\n\n    _applyType: function (value) {\n      if (value) {\n        this.setDecorator(this.getAppearance() + '-' + value);\n      } else {\n        this.setDecorator(this.getAppearance());\n      }\n    },\n\n    _applyTimeout: function (value) {\n      if (this._timer) {\n        this._timer.stop();\n        if (value === 0) {\n          this._timer = null;\n        }\n      }\n    },\n\n    _onAppear: function () {\n      var timeout = this.getTimeout();\n      if (this._timer) {\n        this._timer.stop();\n      }\n      if (timeout > 0) {\n        this._timer = qx.event.Timer.once(this.close, this, timeout);\n      }\n    },\n\n    close: function () {\n      this.fireDataEvent('close', this.getModel());\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new qx.ui.basic.Image();\n           this._addAt(control, 0);\n           break;\n\n         case 'content':\n           control = new qx.ui.basic.Label();\n           this._addAt(control,1, {flex: 1});\n           break;\n\n         case 'close':\n           control = new qx.ui.basic.Image(cv.theme.dark.Images.getIcon('close', 15));\n           control.addListener('tap', this.close, this);\n           this._addAt(control, 2);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_timer');\n  }\n});\n","/**\n * Abstract base class for all widgets that can display file items.\n */\nqx.Class.define('cv.ui.manager.viewer.AbstractViewer', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n  type: 'abstract',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applyFile',\n      event: 'changeFile'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    canHandleAction: function () {\n      return false;\n    },\n    handleAction: function () {},\n    save: function () {},\n    getCurrentContent: function () {},\n\n    _applyFile: function (file, old) {\n      // show icon for file type\n    },\n\n    // overridden\n    _createChildControlImpl : function (id) {\n      var control;\n\n      switch (id) {\n        case 'scroll':\n          control = new qx.ui.container.Scroll();\n          this._add(control);\n          break;\n\n        case 'image':\n          control = new qx.ui.basic.Atom();\n          this.getChildControl('scroll').add(control);\n          control.getChildControl('icon').addListener('resize', this._scaleImage, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * Show images.\n */\nqx.Class.define('cv.ui.manager.viewer.Image', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n\n  /*\n    ***********************************************\n      PROPERTIES\n    ***********************************************\n    */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'image-viewer'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: ['jpg', 'jpeg', 'png', 'gif', 'svg'],\n    TITLE: qx.locale.Manager.tr('Show image'),\n    ICON: cv.theme.dark.Images.getIcon('image', 18),\n\n    /**\n     * Returns size information for images\n     * @param source {String} path to image\n     * @returns {{width: *, aspectRatio: number, height: *}|any | ({aspectRatio: number} & Map)}\n     */\n    getImageData: function (source) {\n      var data = qx.util.ResourceManager.getInstance().getData(source);\n      if (data) {\n        return {\n          width: data[0],\n          height: data[1],\n          aspectRatio: data[0] / data[1]\n        };\n      } else {\n        data = qx.io.ImageLoader.getSize(source);\n        if (data && data.width && data.height) {\n          return Object.assign({\n            aspectRatio: data.width / data.height\n          }, data);\n        }\n      }\n      return null;\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyFile: function (file) {\n      var control = this.getChildControl('image');\n      if (file) {\n        control.setIcon(file.getServerPath());\n        control.setLabel(file.getFullPath());\n        if (!cv.ui.manager.viewer.Image.getImageData(file.getServerPath())) {\n          control.getChildControl('icon').addListenerOnce('loaded', this._scaleImage, this);\n        } else {\n          this._scaleImage();\n        }\n        this.addListener('resize', this._scaleImage, this);\n      } else {\n        control.resetIcon();\n        control.resetLabel();\n        this.removeListener('resize', this._scaleImage, this);\n      }\n    },\n\n    _scaleImage: function () {\n      var bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce('appear', this._scaleImage, this);\n        return;\n      }\n      var file = this.getFile();\n      if (!file) {\n        return;\n      }\n      var icon = this.getChildControl('image').getChildControl('icon');\n      var data = cv.ui.manager.viewer.Image.getImageData(file.getServerPath());\n      var paddingX = 10;\n      var paddingY = 20;\n      var availableHeight = bounds.height - paddingY * 2;\n      var availableWidth = bounds.width - paddingX * 2;\n      var width = availableWidth;\n      var height = Math.round(1 / data.aspectRatio * width);\n      if (height > availableHeight) {\n        height = availableHeight;\n        width = Math.round(data.aspectRatio * availableHeight);\n      }\n      icon.set({\n        width: width,\n        height: height,\n        scale: true\n      });\n    }\n  }\n});\n","/**\n * Show rendered configs.\n */\nqx.Class.define('cv.ui.manager.viewer.Config', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n\n  },\n\n  /*\n    ***********************************************\n      PROPERTIES\n    ***********************************************\n    */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'config-viewer'\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^(demo)?\\/?visu_config.*\\.xml/,\n    TITLE: qx.locale.Manager.tr('Config viewer'),\n    ICON: cv.theme.dark.Images.getIcon('preview', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _applyFile: function (file, old) {\n      var control = this.getChildControl('iframe');\n      if (old && old.isConfigFile()) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (file) {\n        if (file.isConfigFile()) {\n          var configName = cv.ui.manager.model.FileItem.getConfigName(file.getFullPath());\n          var url = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')+ '/..') + '?config=' + (configName || '') + '&preview=1';\n          control.setSource(url);\n          control.show();\n          qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n        } else {\n          cv.ui.manager.snackbar.Controller.error(this.tr('%1 is no configuration file', file.getFullPath()));\n        }\n      } else {\n        control.exclude();\n      }\n    },\n\n    _onChange: function (ev) {\n      var data = ev.getData();\n      if (data.type === 'contentChanged') {\n        this.getChildControl('iframe').reload();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'iframe':\n           control = new qx.ui.embed.Iframe();\n           control.exclude();\n           this.getChildControl('scroll').add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * Displays folder content in an explorer like view.\n */\nqx.Class.define('cv.ui.manager.viewer.Folder', {\n  extend: cv.ui.manager.viewer.AbstractViewer,\n  implement: [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IModelSelection\n  ],\n  include: [\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.form.MModelSelection,\n    cv.ui.manager.control.MFileEventHandler\n  ],\n\n  /*\n ***********************************************\n   CONSTRUCTOR\n ***********************************************\n */\n  construct: function (noToolbar) {\n    this.base(arguments);\n    cv.ui.manager.model.Preferences.getInstance().bind('startViewMode', this, 'viewMode');\n    this._isImageRegex = new RegExp('\\.(' + cv.ui.manager.viewer.Image.SUPPORTED_FILES.join('|') + ')$', 'i');\n    this.initModel(new qx.data.Array());\n    this._setLayout(new qx.ui.layout.VBox(8));\n\n    this._newItem = new cv.ui.manager.model.FileItem('new', 'new', null).set({\n      fake: true,\n      type: 'file',\n      loaded: true,\n      icon: cv.theme.dark.Images.getIcon('upload'),\n      displayName: this.tr('Upload file'),\n      special: 'add-file'\n    });\n\n    this._debouncedOnFilter = qx.util.Function.debounce(this._onFilter, 500, false);\n    if (!noToolbar) {\n      this._createChildControl('toolbar');\n    }\n    this._createChildControl('filter');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: function isDir(item) {\n      // noinspection JSConstructorReturnsPrimitive\n      return item.getType() === 'dir';\n    },\n    TITLE: qx.locale.Manager.tr('Show folder'),\n    ICON: cv.theme.dark.Images.getIcon('folder', 18)\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\"\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    model: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    permanentFilter: {\n      check: 'Function',\n      nullable: true,\n      apply: '_onFilter'\n    },\n\n    showTextFilter: {\n      check: 'Boolean',\n      init: true,\n      apply: '_applyShowTextFilter'\n    },\n\n    labelConverter: {\n      check: 'Function',\n      nullable: true\n    },\n\n    disableScrolling: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyDisableScrolling'\n    },\n\n    viewMode: {\n      check: ['list', 'preview'],\n      init: 'list',\n      event: 'changeViewMode'\n    }\n  },\n\n  /*\n ***********************************************\n   MEMBERS\n ***********************************************\n */\n  members: {\n    _controller: null,\n    _isImageRegex: null,\n    _newItem: null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER : qx.ui.core.selection.ScrollArea,\n\n    _defaultLabelConverter: function (name) {\n      if (this.getViewMode() === 'list') {\n        // do not remove file type in list mode\n        return name;\n      }\n      var parts = name.split('.');\n      if (parts.length > 1) {\n        parts.pop();\n      }\n      return parts.join('.');\n    },\n\n    _getDelegate: function () {\n      var labelConverter = this.getLabelConverter();\n      var converter = {\n        converter: labelConverter ? labelConverter : this._defaultLabelConverter.bind(this)\n      };\n      return {\n        createItem: function () {\n          return new cv.ui.manager.form.FileListItem();\n        },\n\n        configureItem: function (item) {\n          item.addListener('dbltap', this._onDblTap, this);\n          item.addListener('contextmenu', this._onFsItemRightClick, this);\n          item.addListener('action', this._onFsItemRightClick, this);\n          item.setShowFileActions(true);\n          this.bind('viewMode', item, 'viewMode');\n        }.bind(this),\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'model', null, item, index);\n          controller.bindProperty('displayName', 'label', converter, item, index);\n          controller.bindProperty('icon', 'icon', {\n            converter: function (source, file) {\n              if (file.getType() === 'file' && this._isImageRegex.test(file.getName())) {\n                // use the image as icon\n                return file.getServerPath();\n              } else {\n                if (!source) {\n                  return null;\n                }\n                // remove size from icon source\n                var parts = source.split('/');\n                if (parts.length === 3) {\n                  parts.pop();\n                }\n                return parts.join('/');\n              }\n            }.bind(this)\n          }, item, index);\n        }.bind(this)\n      };\n    },\n\n    _onFsItemRightClick: function (ev) {\n      var file = ev.getCurrentTarget().getModel();\n      if (file.getSpecial() === 'add-file') {\n        ev.preventDefault();\n        if (ev.getBubbles()) {\n          ev.stopPropagation();\n        }\n        return;\n      }\n      var menu = cv.ui.manager.contextmenu.GlobalFileItem.getInstance();\n      menu.configure(file);\n      ev.getCurrentTarget().setContextMenu(menu);\n      menu.openAtPointer(ev);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      if (ev.getBubbles()) {\n        ev.stop();\n      }\n    },\n\n    _onDblTap: function (ev) {\n      var file = ev.getCurrentTarget().getModel();\n      if (file.getSpecial() === 'add-file') {\n        // Select file for upload\n\n      } else {\n        qx.event.message.Bus.dispatchByName('cv.manager.open', file);\n      }\n    },\n\n    _applyFile: function (file, old) {\n      if (old) {\n        old.removeRelatedBindings(this);\n        this.resetModel();\n      }\n      if (file) {\n        var container = this.getChildControl('list');\n        if (!this._controller) {\n          this._controller = new qx.data.controller.List(null, container);\n          this._controller.setDelegate(this._getDelegate());\n        }\n        file.bind('children', this, 'model');\n        var model = this.getModel();\n        this._newItem.setParent(file);\n        model.addListener('change', function () {\n          if (this.getChildControl('filter').getValue() || this.getPermanentFilter()) {\n            this._onFilter();\n          } else {\n            this._controller.setModel(model);\n          }\n        }, this);\n        this._controller.setModel(model);\n        file.load();\n      } else {\n        if (this._controller) {\n          this._controller.resetModel();\n        }\n        this._newItem.resetParent();\n      }\n    },\n\n    _handleFileEvent: function (ev) {\n      var folder = this.getFile();\n      var data = ev.getData();\n      switch (data.action) {\n        case 'moved':\n          folder.reload();\n          break;\n\n        case 'added':\n        case 'uploaded':\n        case 'created':\n          if (data.path.startsWith(folder.getFullPath())) {\n            folder.reload();\n          }\n          break;\n\n        case 'deleted':\n          if (folder) {\n            if (data.path === folder.getFullPath()) {\n              // this item has been deleted\n              this.dispose();\n            } else if (data.path.startsWith(folder.getFullPath())) {\n              // delete child\n              var children = folder.getChildren();\n              children.some(function (child) {\n                if (child.getFullPath() === data.path) {\n                  children.remove(child);\n                  this.removeRelatedBindings(child);\n                  return true;\n                }\n              }, this);\n            }\n          }\n          var children = this.getModel();\n          children.some(function (child) {\n            if (child.getFullPath() === data.path) {\n              children.remove(child);\n              this.removeRelatedBindings(child);\n              return true;\n            }\n          }, this);\n          break;\n      }\n    },\n\n    _applyShowTextFilter: function (value) {\n      this.getChildControl('filter').setVisibility(value ? 'visible' : 'excluded');\n    },\n\n    _onFilter: function () {\n      if (this._controller) {\n        var filterString = this.getChildControl('filter').getValue();\n        var filterFunction = this.getPermanentFilter();\n        var filtered = this.getModel().filter(function (file) {\n          return (!filterFunction || filterFunction(file)) && (!filterString || file.getName().includes(filterString));\n        });\n        this._controller.setModel(filtered);\n      }\n    },\n\n    getChildrenContainer: function () {\n      return this.getChildControl('list');\n    },\n\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild : function(e) {\n      this.fireDataEvent(\"addItem\", e.getData());\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild : function(e) {\n      this.fireDataEvent(\"removeItem\", e.getData());\n    },\n\n    _onFileEvent: function (ev) {\n      var data = ev.getData();\n      switch (data.action) {\n        case 'deleted':\n          break;\n      }\n    },\n\n    _applyDisableScrolling: function (value) {\n      if (value) {\n        this.getChildControl('scroll').exclude();\n        this._addAt(this.getChildControl('list'), 1, {flex: 1});\n      } else {\n        var scrollContainer = this.getChildControl('scroll');\n        scrollContainer.show();\n        scrollContainer.add(this.getChildControl('list'));\n        this._addAt(scrollContainer, 1, {flex: 1});\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n      var control;\n\n      switch (id) {\n        case 'toolbar':\n          control = new cv.ui.manager.ToolBar(null, ['new-file', 'new-folder', 'upload', 'reload']);\n          this.bind('file', control, 'folder');\n          control.addListener('reload', function () {\n            this.getFile().reload();\n          }, this);\n          this._addAt(control, 0);\n          break;\n\n        case 'filter':\n          control = new qx.ui.form.TextField();\n          control.set({\n            placeholder: this.tr('Filter by name...'),\n            liveUpdate: true,\n            margin: 8\n          });\n          if (!this.isShowTextFilter()) {\n            control.exclude();\n          }\n          control.addListener('changeValue', this._debouncedOnFilter, this);\n          this._addAt(control, 1);\n          break;\n\n        case 'scroll':\n          control = new qx.ui.container.Scroll();\n          this._addAt(control, 2, {flex: 1});\n          break;\n\n        case 'list':\n          control = new qx.ui.container.Composite(new qx.ui.layout.Flow(8, 8));\n\n          // Used to fire item add/remove events\n          control.addListener(\"addChildWidget\", this._onAddChild, this);\n          control.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n          if (this.isDisableScrolling()) {\n            this._addAt(control, 1, {flex: 1});\n          } else {\n            this.getChildControl('scroll').add(control);\n          }\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_controller');\n    this._isImageRegex = null;\n    cv.ui.manager.model.Preferences.getInstance().removeRelatedBindings(this);\n  }\n});\n","/**\n * Shows the available icons.\n */\nqx.Class.define('cv.ui.manager.viewer.Icons', {\n  extend: cv.ui.manager.viewer.Folder,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this._disableFileEvents = true\n    this.base(arguments, true);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^CometVisu-Icons$/i,\n    TITLE: qx.locale.Manager.tr('Show icons'),\n    ICON: cv.theme.dark.Images.getIcon('icons', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _getDelegate: function () {\n      return {\n        createItem: function () {\n          return new cv.ui.manager.core.IconAtom();\n        },\n\n        bindItem: function (controller, item, index) {\n          controller.bindProperty('', 'label', null, item, index);\n        }\n      };\n    },\n\n    _onFilter: function () {\n      var filterString = this.getChildControl('filter').getValue();\n      var filtered = this.getModel().filter(function (name) {\n        return name.includes(filterString);\n      });\n      this._controller.setModel(filtered);\n    },\n\n    _applyFile: function(file, old) {\n      if (file) {\n        var container = this.getChildControl('list');\n        if (!this._controller) {\n          this._controller = new qx.data.controller.List(null, container);\n          this._controller.setDelegate(this._getDelegate());\n        }\n        var model = this.getModel();\n        // as the file is just a fake file, we do not really care about it\n        Object.keys(cv.IconConfig.DB).filter(function (name) {\n          var entry = cv.IconConfig.DB[name];\n          return entry['*'] && entry['*']['*'] && qx.lang.Type.isFunction(entry['*']['*']['*']);\n        }).forEach(function (name) {\n          model.push(name);\n        }, this);\n        if (this.getChildControl('filter').getValue() || this.getPermanentFilter()) {\n          this._onFilter();\n        } else {\n          this._controller.setModel(model);\n        }\n      } else {\n        if (this._controller) {\n          this._controller.resetModel();\n        }\n      }\n    }\n  }\n});\n","/**\n * Simple view that provides all of the file-related features of the old editor in an easy to use way.\n */\nqx.Class.define('cv.ui.manager.Start', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox());\n    this._configRegex = /^visu_config_?([^.]+)?\\.xml$/;\n    [ 'toolbar', 'configs-title', 'configs-toolbar', 'configs',\n      'demo-configs-title', 'demo-configs',\n      'media-title', 'media-toolbar', 'media',\n      'misc-title', 'misc'\n    ].forEach(this._createChildControl, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_loadRoot',\n      event: 'changeFile'\n    },\n    appearance: {\n      refine: true,\n      init: 'cv-start'\n    },\n\n    selectedItem: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_applySelectedItem'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _configRegex: null,\n    _ignoreSelectionChanges: false,\n    _previewButton: null,\n    _listButton: null,\n    _radioGroup: null,\n\n    save: function () {},\n    getCurrentContent: function () {},\n    canHandleAction: function () {\n      return false;\n    },\n    handleAction: function () {},\n\n    _loadRoot: function (value) {\n      this.getChildControl('configs').setFile(value);\n      var found = 0;\n\n      value.load(function () {\n        value.getChildren().some(function (file) {\n          if (file.getName() === 'media') {\n            this.getChildControl('media').setFile(file);\n            this.getChildControl('media-toolbar').setFolder(file);\n            found++;\n          } else if (file.getName() === 'demo') {\n            this.getChildControl('demo-configs').setFile(file);\n            found++;\n          }\n          return found === 2;\n        }, this);\n      }, this);\n    },\n\n    _onChangeSelection: function (ev) {\n      if (this._ignoreSelectionChanges === false) {\n        var list = ev.getTarget();\n        var selection = ev.getData();\n        this._ignoreSelectionChanges = true;\n\n        // unselect the other lists\n        ['configs', 'demo-configs', 'media'].forEach(function (name) {\n          var control = this.getChildControl(name);\n          if (control !== list) {\n            control.resetSelection();\n          }\n        }, this);\n        this._ignoreSelectionChanges = false;\n        if (selection.length > 0) {\n          this.setSelectedItem(selection[0].getModel());\n        }\n      }\n    },\n\n    _applySelectedItem: function () {\n    },\n\n    _onToggleExpand: function (ev) {\n      var control = this.getChildControl(ev.getTarget().getUserData('control'));\n      if (control.getVisibility() === 'visible') {\n        control.exclude();\n        ev.getTarget().setIcon(cv.theme.dark.Images.getIcon('drop-down', 18));\n      } else {\n        control.show();\n        ev.getTarget().setIcon(cv.theme.dark.Images.getIcon('drop-up', 18));\n      }\n    },\n\n    _onChangeViewMode: function () {\n      switch (cv.ui.manager.model.Preferences.getInstance().getStartViewMode()) {\n        case 'list':\n          this._radioGroup.setSelection([this._listButton]);\n          break;\n\n        case 'preview':\n          this._radioGroup.setSelection([this._previewButton]);\n          break;\n      }\n\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'scroll-container':\n           control = new qx.ui.container.Scroll();\n           this._add(control, {flex: 1});\n           break;\n\n         case 'content':\n           control = new qx.ui.container.Composite(new qx.ui.layout.VBox(8));\n           this.getChildControl('scroll-container').add(control);\n           break;\n\n         case 'toolbar':\n           control = new qx.ui.toolbar.ToolBar();\n           var part = new qx.ui.toolbar.Part();\n           var listButton = this._listButton = new qx.ui.toolbar.RadioButton('', cv.theme.dark.Images.getIcon('listViewMode', 22));\n           listButton.setUserData('mode', 'list');\n           listButton.set({\n             show: 'icon',\n             toolTipText: this.tr('List mode')\n           });\n           var previewButton = this._previewButton = new qx.ui.toolbar.RadioButton('', cv.theme.dark.Images.getIcon('previewMode', 22));\n           previewButton.setUserData('mode', 'preview');\n           previewButton.set({\n             show: 'icon',\n             toolTipText: this.tr('Preview mode')\n           });\n           part.add(listButton);\n           part.add(previewButton);\n           control.add(part);\n           this._radioGroup = new qx.ui.form.RadioGroup(listButton, previewButton);\n           this._onChangeViewMode();\n           this._radioGroup.addListener('changeSelection', function (ev) {\n             var selection = ev.getData()[0];\n             cv.ui.manager.model.Preferences.getInstance().setStartViewMode(selection.getUserData('mode'));\n           }, this);\n           cv.ui.manager.model.Preferences.getInstance().addListener('changeStartViewMode', this._onChangeViewMode, this);\n\n           this._add(control);\n           break;\n\n         case 'configs-title':\n           control = new qx.ui.basic.Atom(this.tr('Configurations'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'configs');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('configs-header').add(control);\n           break;\n\n         case 'configs-header':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'configs-toolbar':\n           control = new cv.ui.manager.ToolBar(null, ['new-config-file', 'upload', 'reload']);\n           control.setFolder(cv.ui.manager.model.FileItem.ROOT);\n           control.addListener('reload', function () {\n             cv.ui.manager.model.FileItem.ROOT.reload();\n           }, this);\n           this.getChildControl('configs-header').add(control);\n           break;\n\n         case 'configs':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             permanentFilter: function (file) {\n               var match = this._configRegex.exec(file.getName());\n               return !!match && (!match[1] || !match[1].endsWith('temp'));\n             }.bind(this),\n             labelConverter: function (name, file) {\n               if (file.isFake()) {\n                 return name;\n               }\n               var configName = cv.ui.manager.model.FileItem.getConfigName(name);\n               return configName ? configName : '<Default>';\n             },\n             file: cv.ui.manager.model.FileItem.ROOT,\n             disableScrolling: true\n           });\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'demo-configs-title':\n           control = new qx.ui.basic.Atom(this.tr('Demo configurations'), cv.theme.dark.Images.getIcon('drop-down', 18));\n           control.setUserData('control', 'demo-configs');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'demo-configs':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             permanentFilter: function (file) {\n               return this._configRegex.test(file.getName());\n             }.bind(this),\n             labelConverter: function (name) {\n               var configName = cv.ui.manager.model.FileItem.getConfigName(name);\n               return configName ? configName : '<Default>';\n             },\n             disableScrolling: true\n           });\n           control.exclude();\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'media-title':\n           control = new qx.ui.basic.Atom(this.tr('Media files'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'media');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('media-header').add(control);\n           break;\n\n         case 'media-header':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'media-toolbar':\n           control = new cv.ui.manager.ToolBar(null, ['new-file', 'upload', 'reload']);\n           control.addListener('reload', function () {\n             control.getFolder().reload();\n           }, this);\n           this.getChildControl('media-header').add(control);\n           break;\n\n         case 'media':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             disableScrolling: true\n           });\n           control.addListener('changeSelection', this._onChangeSelection, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'misc-title':\n           control = new qx.ui.basic.Atom(this.tr('Miscellaneous'), cv.theme.dark.Images.getIcon('drop-up', 18));\n           control.setUserData('control', 'misc');\n           control.addListener('tap', this._onToggleExpand, this);\n           this.getChildControl('content').add(control);\n           break;\n\n         case 'misc':\n           control = new cv.ui.manager.viewer.Folder(true);\n           control.set({\n             showTextFilter: false,\n             disableScrolling: true\n           });\n           this.__initMiscFolder(control);\n           this.getChildControl('content').add(control, {flex: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    },\n\n    __initMiscFolder: function (folderWidget) {\n      if (!cv.ui.manager.model.FileItem.ROOT.isLoaded()) {\n        cv.ui.manager.model.FileItem.ROOT.addListenerOnce('changeLoaded', function () {\n          this.__initMiscFolder(folderWidget);\n        }, this);\n        return;\n      }\n      // find the real 'hidden.php' in the root folder\n      var specialFiles = [cv.ui.manager.model.FileItem.getIconFile()];\n      cv.ui.manager.model.FileItem.ROOT.getChildren().some(function (file) {\n        if (file.getFullPath() === 'hidden.php') {\n          // set some special flags needed to configure the special hidden configuration file\n          file.set({\n            overrideIcon: true,\n            icon: cv.theme.dark.Images.getIcon('hidden-config', 15),\n            displayName: qx.locale.Manager.tr('Hidden configuration'),\n            fake: true\n          });\n          specialFiles.unshift(file);\n          return true;\n        }\n      });\n      var fakeFolder = new cv.ui.manager.model.FileItem('fake', 'fake', cv.ui.manager.model.FileItem.ROOT, specialFiles).set({\n        fake: true,\n        type: 'dir',\n        loaded: true\n      });\n      folderWidget.setFile(fakeFolder);\n      folderWidget.addListener('changeSelection', this._onChangeSelection, this);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._configRegex = null;\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeStartViewMode', this._onChangeViewMode, this);\n    this._disposeObjects('_previewButton', '_listButton', '_radioGroup');\n  }\n});\n","/**\n * Abstract base class for all editors.\n */\nqx.Class.define('cv.ui.manager.editor.AbstractEditor', {\n  extend: qx.ui.core.Widget,\n  implement: [\n    cv.ui.manager.editor.IEditor,\n    cv.ui.manager.IActionHandler\n  ],\n  type: \"abstract\",\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._initClient();\n  },\n\n  /*\n ***********************************************\n   PROPERTIES\n ***********************************************\n */\n  properties: {\n    file: {\n      check: 'cv.ui.manager.model.FileItem || cv.ui.manager.model.CompareFiles',\n      nullable: true,\n      apply: '_loadFile'\n    },\n\n    content: {\n      nullable: true,\n      event: 'changeContent',\n      apply: '_applyContent'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _handledActions: null,\n\n    canHandleAction: function (actionName) {\n      if (actionName === 'save' && this.getFile() && !this.getFile().isWriteable()) {\n        return false;\n      }\n      return this._handledActions && this._handledActions.includes(actionName);\n    },\n\n    handleAction: function (actionName) {\n      if (this.canHandleAction(actionName)) {\n        switch (actionName) {\n          case 'save':\n            this.save();\n            break;\n        }\n      }\n    },\n\n    _initClient: function () {\n      this._client = cv.io.rest.Client.getFsClient();\n    },\n\n    _loadFile: function (file, old) {\n      if (old) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (file && file.getType() === 'file') {\n        if (file.getContent() !== null) {\n          this.setContent(file.getContent());\n        } else {\n          this._loadFromFs();\n        }\n        qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n      } else {\n        this.resetContent();\n      }\n    },\n\n    _loadFromFs: function () {\n      this._client.readSync({path: this.getFile().getFullPath()}, function (err, res) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(err);\n        } else {\n          this.setContent(res);\n        }\n      }, this);\n    },\n\n    _onChange: function (ev) {\n      var data = ev.getData();\n      if (data.type === 'fsContentChanged' && data.source !== this) {\n        this.setContent(data.data);\n      }\n    },\n\n    // must be overridden by inheriting classes\n    _applyContent: function() {},\n\n    // must be overridden by inheriting classes\n    getCurrentContent: function () {},\n\n    _handleSaveResponse: function (type, err) {\n      if (err) {\n        cv.ui.manager.snackbar.Controller.error(err);\n      } else {\n        var file = this.getFile();\n        var message = type === 'created' ? this.tr('File has been created') : this.tr('File has been saved')\n        cv.ui.manager.snackbar.Controller.info(message);\n        this._onSaved();\n        qx.event.message.Bus.dispatchByName(file.getBusTopic(), {\n          type: type,\n          file: file,\n          data: this.getCurrentContent(),\n          source: this\n        });\n      }\n    },\n\n    save: function (callback, overrideHash) {\n      var file = this.getFile();\n      if (file.isModified()) {\n        if (file.isTemporary()) {\n          this._client.createSync({\n            path: file.getFullPath(),\n            hash: overrideHash || file.getHash(),\n            type: 'file'\n          }, this.getCurrentContent(), callback || qx.lang.Function.curry(this._handleSaveResponse, 'created'), this);\n        } else {\n          this._client.updateSync({\n            path: file.getFullPath(),\n            hash: overrideHash || file.getHash()\n          }, this.getCurrentContent(), callback || qx.lang.Function.curry(this._handleSaveResponse, 'contentChanged'), this);\n        }\n      }\n    },\n\n    _onSaved: function () {\n      var file = this.getFile();\n      file.resetModified();\n      file.resetTemporary();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    if (this._client) {\n      this._client = null;\n    }\n  }\n});\n","/**\n * Monaco Texteditor integration\n */\nqx.Class.define('cv.ui.manager.editor.Source', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = ['save', 'cut', 'copy', 'paste', 'undo', 'redo'];\n    this._basePath = window.location.origin + window.location.pathname + qx.util.LibraryManager.getInstance().get(\"cv\", \"resourceUri\") + '/config/';\n    this.getContentElement().setAttribute('contentEditable', 'true');\n    this.set({\n      droppable: false,\n      focusable: true\n    });\n    this.addListener('dragover', function (ev) {\n      ev.preventDefault();\n      ev.dataTransfer.effectAllowed = \"none\";\n      ev.dataTransfer.dropEffect = \"none\";\n    });\n    this.addListener('drop', function (ev) {\n      ev.preventDefault();\n    });\n    this.addListener('appear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(false);\n    });\n    this.addListener('disappear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n    });\n    this._draw();\n    this._initWorker();\n    this._currentDecorations = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Texteditor'),\n    COUNTER: 0,\n    SUPPORTED_FILES: ['xml', 'php', 'css', 'js', 'svg', 'json', 'md', 'yaml', 'conf', 'ts', 'rst', 'py', 'txt'],\n    ICON: cv.theme.dark.Images.getIcon('text', 18),\n\n    load: function (callback, context) {\n      var version = qx.core.Environment.get('qx.debug') ? 'dev' : 'min';\n      window.documentationMappingPrefix = \"../source/editor/\"; // jshint ignore:line\n      var sourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')+ '/..');\n      var loader = new qx.util.DynamicScriptLoader([\n        sourcePath + 'editor/dependencies/jquery.min.js',\n        sourcePath + 'editor/dependencies/jquery.xpath.min.js',\n        sourcePath + 'editor/lib/Messages.js',\n        sourcePath + 'editor/lib/Schema.js',\n        sourcePath + '../node_modules/monaco-editor/' + version + '/vs/loader.js',\n        'manager/xml.js'\n      ]);\n      loader.addListener('ready', function () {\n        window.require.config({\n          paths: {\n            'vs': sourcePath + '../node_modules/monaco-editor/' + version + '/vs'\n          }\n        });\n        window.require.config({\n          'vs/nls' : {\n            availableLanguages: {\n              '*': qx.locale.Manager.getInstance().getLanguage() !== 'en' ? qx.locale.Manager.getInstance().getLanguage() : ''\n            }\n          }\n        });\n        var noCacheSuffix = '?' + Math.random();\n        window.require([\n          'xml!./resource/visu_config.xsd' + noCacheSuffix,\n          'xml!*./resource/manager/completion-libs/qooxdoo.d.ts', // the xml loader can load any file by adding * before the path,\n          'vs/editor/editor.main'\n        ], function (schema, qxLib) {\n          this.__schema = schema;\n          callback.apply(context);\n          window.monaco.languages.typescript.javascriptDefaults.addExtraLib(qxLib, 'qooxdoo.d.ts');\n          var parsedSchema = new window.Schema(\"visu_config.xsd\", schema); // jshint ignore:line\n          var completionProvider = new cv.ui.manager.editor.completion.Config(parsedSchema);\n          var cvCompletionProvider = new cv.ui.manager.editor.completion.CometVisu();\n          window.monaco.languages.registerCompletionItemProvider('xml', completionProvider.getProvider());\n          window.monaco.languages.registerCompletionItemProvider('javascript', cvCompletionProvider.getProvider());\n\n        }.bind(this));\n      }, this);\n      loader.addListener('failed', function (ev) {\n        qx.log.Logger.error(this, ev.getData());\n      }, this);\n      loader.start();\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __schema: null,\n    _editor: null,\n    _basePath: null,\n    _workerWrapper: null,\n    _currentDecorations: null,\n\n    _initWorker: function () {\n      this._workerWrapper = cv.ui.manager.editor.Worker.getInstance();\n      this._workerWrapper.setEditor(this);\n    },\n\n    _getDefaultModelOptions: function () {\n      return {\n        tabSize: 2,\n        indentSize: 2,\n        insertSpaces: true\n      };\n    },\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        var domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.create(domElement, {\n            suggestOnTriggerCharacters: true,\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            dragAndDrop: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            minimap: {\n              enabled: true\n            },\n            theme: 'vs-dark'\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n          this._editor.onDidChangeModelContent(this._onContentChanged.bind(this));\n        }\n      }\n    },\n\n    handleAction: function (actionName) {\n      if (this.canHandleAction(actionName)) {\n        var monacoAction;\n        switch (actionName) {\n          case 'cut':\n            monacoAction = this._editor.getAction('editor.action.clipboardCutAction');\n            break;\n          case 'copy':\n            monacoAction = this._editor.getAction('editor.action.clipboardCopyAction');\n            break;\n\n          default:\n            this.base(arguments, actionName);\n            break;\n        }\n        if (monacoAction) {\n          monacoAction.run();\n        }\n      }\n    },\n\n    _loadFile: function (file, old) {\n      if (old && this._workerWrapper) {\n        this._workerWrapper.close(old);\n      }\n      if (this._editor) {\n        if (file && file.getType() === 'file' && this.isSupported(file)) {\n          this.base(arguments, file, old);\n        } else {\n          this.base(arguments, null, old);\n        }\n      }\n    },\n\n    _applyContent: function(value) {\n      var file = this.getFile();\n      if (!file) {\n        return;\n      }\n      var model = this._editor.getModel();\n      if (this._workerWrapper) {\n        this._workerWrapper.open(file, value);\n      }\n      var newModel = window.monaco.editor.getModel(file.getUri());\n      if (!newModel) {\n        // create new model\n        if (qx.xml.Document.isXmlDocument(value)) {\n          value = value.documentElement.outerHTML;\n        }\n        newModel = window.monaco.editor.createModel(value, this._getLanguage(file), file.getUri());\n      }\n\n      if (model !== newModel) {\n        newModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel(newModel);\n      } else {\n        this._editor.setValue(value);\n      }\n      this._editor.updateOptions({ readOnly: !file.isWriteable() });\n    },\n\n    getCurrentContent: function () {\n      return this._editor.getValue();\n    },\n\n    _onContentChanged: function () {\n      if (this._workerWrapper) {\n        this._workerWrapper.contentChanged(this.getFile(), this._editor.getValue());\n      }\n    },\n\n    isSupported: function (file) {\n      var parts = file.getName().split('.')\n      var fileType = parts.length > 1 ? parts.pop() : 'txt';\n      var typeExt = '.' + fileType;\n      return monaco.languages.getLanguages().some(function (lang) {\n        return lang.id === fileType || lang.extensions.indexOf(typeExt) >= 0;\n      });\n    },\n\n    showErrors: function (path, errorList) {\n      var markers = [];\n      var model = this._editor.getModel();\n      if (!model) {\n        return;\n      }\n      // \"file_0.xml:286: element layout: Schemas validity error : Element 'layout': This element is not expected.\"\n      if (errorList) {\n//            console.error(errorList);\n        var currentMessage = null;\n        // collect complete error messages\n        errorList.forEach(function (error) {\n          if (/.*\\.xml:[\\d]+:.+/.test(error)) {\n            if (currentMessage !== null) {\n              markers.push({\n                severity: window.monaco.MarkerSeverity.Error,\n                startLineNumber: currentMessage.line,\n                startColumn: 1,\n                endLineNumber: currentMessage.line,\n                endColumn: model.getLineContent(currentMessage.line).length,\n                message: currentMessage.message\n              });\n            }\n            // add marker for completed message\n            var parts = error.split(\":\");\n            var file = parts.shift();\n            var line = parseInt(parts.shift());\n\n            // in the last part there might be a more precise line number for the error\n            var match = /.+line ([\\d]+) -+/.exec(parts[parts.length-1]);\n            if (match) {\n              line = parseInt(match[1]);\n            }\n            if (isNaN(line)) {\n              return;\n            }\n            // new error line\n            currentMessage = {\n              line: line,\n              message: parts.slice(-2).join(\":\"),\n              file: file\n            };\n          } else {\n            currentMessage.message += \"\\n\"+error;\n          }\n        });\n        if (currentMessage !== null) {\n          // show last error too\n          markers.push({\n            severity: window.monaco.MarkerSeverity.Error,\n            startLineNumber: currentMessage.line,\n            startColumn: 1,\n            endLineNumber: currentMessage.line,\n            endColumn: model.getLineContent(currentMessage.line).length,\n            message: currentMessage.message\n          });\n        }\n      }\n      if (this.getFile().getFullPath() === path) {\n        window.monaco.editor.setModelMarkers(model, '', markers);\n      } else {\n        // TODO: save errors for later\n      }\n    },\n\n    showDecorations: function (path, decorators) {\n      if (this.getFile().getFullPath() === path) {\n        this._editor.deltaDecorations(this._currentDecorations[path], decorators);\n      }\n      this._currentDecorations[path] = decorators;\n    },\n\n    _getLanguage: function (file) {\n      var type = file.getName().split('.').pop();\n      switch (type) {\n        case 'svg':\n          return 'xml';\n        case 'js':\n          return 'javascript';\n        case 'md':\n          return 'markdown';\n        default:\n          if (!type) {\n            return 'txt';\n          }\n          // check if monaco knows this ending, otherwise fallback to plaintext\n          var typeExt = '.' + type;\n          var found = monaco.languages.getLanguages().some(function (lang) {\n            return lang.id === type || lang.extensions.indexOf(typeExt) >= 0;\n          });\n          if (!found) {\n            type = 'txt';\n          }\n          return type\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._workerWrapper = null;\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n    qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n  }\n});\n","/**\n * Default XML-Editor included as iframe.\n */\nqx.Class.define('cv.ui.manager.editor.Xml', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.Grow());\n    this._handledActions = ['save'];\n    this.__basePath = qx.util.Uri.getAbsolute(window.location.pathname + qx.util.LibraryManager.getInstance().get(\"cv\", \"resourceUri\") + '/../editor/editor.html');\n    this._draw();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    SUPPORTED_FILES: /^(demo)?\\/?visu_config.*\\.xml/,\n    TITLE: qx.locale.Manager.tr('Xml-editor'),\n    ICON: cv.theme.dark.Images.getIcon('xml', 18)\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _currentContent: null,\n    _iframe: null,\n    _notWriteable: null,\n\n    _draw: function () {\n\n    },\n\n    _loadFile: function (file) {\n      if (this._iframe) {\n        this._iframe.destroy();\n      }\n      if (file) {\n        var match = /.*visu_config_?(.*)\\.xml/.exec(file.getName());\n        if (match) {\n          if (file.isWriteable()) {\n            this._iframe = new qx.ui.embed.Iframe(qx.util.Uri.appendParamsToUrl(this.__basePath, 'embed=1&config=' + match[1]) + '&demo=' + (\n              file.getParentFolder() === 'demo/' ? 'true' : 'false'\n            ));\n            this._iframe.addListener('load', function () {\n              // inject save method\n              this._iframe.getWindow().saveFromIframe = this.saveFromIframe.bind(this);\n            }, this);\n\n            this._add(this._iframe);\n          } else {\n            if (!this._notWriteable) {\n              this._notWriteable = new qx.ui.basic.Atom(this.tr('The XML-Editor does not support files that are not writeable!'));\n              this._notWriteable.set({\n                center: true,\n                font: \"title\"\n              });\n              this._add(this._notWriteable);\n            }\n            this._notWriteable.show();\n          }\n        }\n      }\n    },\n\n    saveFromIframe: function (data, filename, callback) {\n      // create XML string from data\n      var xml = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>';\n      data.forEach(function (elem) {\n        xml += this._elemToXml(elem, '');\n      }, this);\n      this._currentContent = xml;\n      if (!filename) {\n        // mark as changed as long it is no preview change\n        this._onContentChanged();\n      }\n      this.save(filename, callback);\n    },\n\n    save: function (filename, callback) {\n      if (filename) {\n        var file = this.getFile();\n        var relName = filename.split('/').pop();\n        var exists = file.getParent().getChildren().some(function (child) { return child.getName() === relName; });\n        var method = exists ? this._client.updateSync : this._client.createSync;\n        // save preview\n        method({\n          path: file.getPath() + '/' + relName,\n          hash: 'ignore',\n          type: 'file',\n          force: true\n        }, this.getCurrentContent(), function (err) {\n          callback(err);\n        }, this);\n      } else {\n        this.base(arguments, function (err) {\n          if (!err) {\n            this._onSaved();\n          }\n          callback(err);\n        }.bind(this), 'ignore');\n      }\n    },\n\n    _elemToXml: function (elem, indent) {\n      var xml = '';\n      if (elem.nodeName === '#comment') {\n        xml += '\\n' + indent + '<!-- ' + elem.nodeValue + ' -->';\n      } else if (elem.nodeName === '#text') {\n        xml += elem.nodeValue;\n      } else {\n        xml += '\\n'+ indent + '<' + elem.nodeName;\n        Object.keys(elem.attributes).forEach(function (attrName) {\n          xml += ' ' + attrName + '=\"' + elem.attributes[attrName] + '\"';\n        });\n\n        if (!elem.nodeValue && elem.children.length === 0) {\n          xml += '/>';\n        } else {\n          xml += '>';\n          if (elem.nodeName === 'status' && elem.attributes.type === 'html') {\n            xml += '<![CDATA[\\n' + indent + \"  \" + elem.nodeValue + '\\n ]]>';\n          } else if (elem.nodeValue) {\n            xml += elem.nodeValue;\n          }\n          var children = [];\n          elem.children.forEach(function (child) {\n            children.push(this._elemToXml(child, indent + \"  \"));\n          }, this);\n          xml += children.join('');\n          xml += '\\n' + indent + '</' + elem.nodeName + '>';\n        }\n      }\n      return xml;\n    },\n\n    getCurrentContent: function () {\n      return this._currentContent;\n    },\n\n    _onContentChanged: function () {\n      this.getFile().setModified(true);\n    },\n\n    isSupported: function (file) {\n      return cv.ui.manager.editor.Xml.SUPPORTED_FILES.test(file.getName()) && file.isWriteable();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n  this._disposeObjects('_iframe', '_notWriteable');\n  }\n});\n","/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    // overridden, diff editor is read only, no worker needed\n    _initWorker: function () {},\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        var domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: true\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent: function () {\n      var original = this.getOriginalContent();\n      var modified = this.getModifiedContent();\n      if (original && modified) {\n        var file = this.getFile();\n        var originalModel = window.monaco.editor.createModel(original, this._getLanguage(file.getOriginalFile()));\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        var modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(file.getModifiedFile()));\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    clear: function () {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    _loadFile: function (file) {\n      if (this._editor) {\n        if (file && file instanceof cv.ui.manager.model.CompareFiles && this.isSupported(file.getModifiedFile())) {\n          this._client.readSync({path: file.getModifiedFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setModifiedContent(res);\n            }\n          }, this);\n\n          this._client.readSync({path: file.getOriginalFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setOriginalContent(res);\n            }\n          }, this);\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n","/**\n * Editor for the (hidden) configuration.\n */\nqx.Class.define('cv.ui.manager.editor.Config', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = ['save'];\n    this._setLayout(new qx.ui.layout.VBox(8));\n    this._createChildControl('list');\n    this._createChildControl('add-section');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Hidden configuration')\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _model: null,\n    _listController: null,\n    __initialSectionCount: 0,\n\n    _initClient: function () {\n      this._client = cv.io.rest.Client.getConfigClient();\n      this._client.addListener('getSuccess', this._onModelValueChange, this);\n      this._client.addListener('updateSuccess', this._onSaved, this);\n    },\n\n    _loadFile: function (file) {\n      if (file) {\n        this._client.get({section: '*', key: '*'});\n      }\n    },\n\n    _onModelValueChange: function (ev) {\n      this.setContent(ev.getData());\n    },\n\n    // overridden\n    _applyContent: function(value) {\n      var model = this._listController.getModel();\n      model.removeAll();\n\n      this.__initialSectionCount = Object.keys(value).length;\n\n      Object.keys(value).forEach(function (sectionName) {\n        var section = new cv.ui.manager.model.config.Section(sectionName);\n        Object.keys(value[sectionName]).forEach(function (optionKey) {\n          section.addOption(optionKey, value[sectionName][optionKey]);\n        }, this);\n        model.push(section);\n      }, this);\n\n      this.__checkForModification();\n    },\n\n    // overridden\n    getCurrentContent: function () {\n      return this.getContent();\n    },\n\n    _onDeleteSection: function (ev) {\n      var section = ev.getData();\n      var model = this._listController.getModel();\n      model.remove(section);\n      this.__checkForModification();\n    },\n\n    // compare current controller model with the loaded config content\n    __checkForModification: function () {\n      var file = this.getFile();\n      if (this.__initialSectionCount !== this._listController.getModel().length) {\n        file.setModified(true);\n        return;\n      }\n      var modified = this.getChildControl('list').getChildren().some(function (sectionListItem) {\n        return sectionListItem.isModified();\n      }, this);\n      file.setModified(modified);\n    },\n\n    save: function () {\n      // check for duplicate section names of keys\n      var model = this._listController.getModel();\n      var keys = [];\n      var valid = true;\n      model.forEach(function (section) {\n        var key = section.getName();\n        if (!keys.includes(key)) {\n          keys.push(key);\n        } else {\n          valid = false;\n          cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Section name duplicate: \"%1\".', key));\n        }\n        // check for key duplicates in this sections options\n        var optionKeys = [];\n        section.getOptions().forEach(function (option) {\n          var optionKey = option.getKey();\n          if (!optionKeys.includes(optionKey)) {\n            optionKeys.push(optionKey);\n          } else {\n            valid = false;\n            cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Option key duplicate: \"%1\" in section \"%2\".', optionKey, key));\n          }\n        }, this);\n      }, this);\n\n      if (valid) {\n        var data = qx.util.Serializer.toNativeObject(this._listController.getModel());\n        this._client.saveSync(null, data, function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(this.tr('Saving hidden config failed with error %1 (%2)', err.status, err.statusText));\n          } else {\n            cv.ui.manager.snackbar.Controller.info(this.tr('Hidden config has been saved'));\n            this._onSaved();\n          }\n        }, this);\n      } else {\n        cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Section is invalid and has not been saved.'));\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'list':\n           control = new qx.ui.form.List();\n           control.setEnableInlineFind(false);\n           this._listController = new qx.data.controller.List(new qx.data.Array(), control);\n           this._listController.setDelegate({\n             createItem: function () {\n               return new cv.ui.manager.form.SectionListItem();\n             },\n\n             configureItem: function (item) {\n               item.addListener('delete', this._onDeleteSection, this);\n               item.addListener('changeModified', this.__checkForModification, this);\n             }.bind(this),\n\n             bindItem: function (controller, item, index) {\n               controller.bindProperty('', 'model', null, item, index);\n             }\n           });\n           this._add(control, {flex: 1});\n           break;\n\n         case 'buttons':\n           control = new qx.ui.container.Composite(new qx.ui.layout.HBox(8));\n           this._add(control);\n           break;\n\n         case 'add-section':\n           control = new qx.ui.form.Button(this.tr('Add section'));\n           control.addListener('execute', function () {\n             this._listController.getModel().push(new cv.ui.manager.model.config.Section(''));\n             this.__checkForModification();\n           }, this);\n           this.getChildControl('buttons').add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_model', '_listController');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.editor.Worker', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._files = {};\n    // create WebWorker\n    this._worker = new Worker(qx.util.ResourceManager.getInstance().toUri('manager/worker.js'));\n    this._worker.onmessage = this._onMessage.bind(this);\n    this._validationCallbacks = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    editor: {\n      check: 'cv.ui.manager.editor.Source',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _worker: null,\n    _files: null,\n    _validationCallbacks: null,\n\n    open: function (file, code, schema) {\n      this._worker.postMessage([\"openFile\", {\n        path: file.getFullPath(),\n        code: qx.xml.Document.isXmlDocument(code) ? code.documentElement.outerHTML : code,\n        schema: schema\n      }]);\n      this._files[file.getFullPath()] = file;\n    },\n\n    close: function (file) {\n      this._worker.postMessage([\"closeFile\", {\n        path: file.getFullPath()\n      }]);\n      delete this._files[file.getFullPath()];\n    },\n\n    contentChanged: function (file, content) {\n      this._worker.postMessage([\"contentChange\", {\n        path: file.getFullPath(),\n        code: content\n      }]);\n    },\n\n    validateConfig: function (file) {\n      if (file.isConfigFile()) {\n        return new Promise(function (resolve, reject) {\n          // check if there is already one validation request ongoing\n          var url = file.getServerPath();\n          if (!this._validationCallbacks.hasOwnProperty(url)) {\n            this._validationCallbacks[url] = [resolve];\n            this._worker.postMessage([\"validateConfig\", {\n              path: url\n            }]);\n          } else {\n            this._validationCallbacks[url].push(resolve);\n          }\n        }.bind(this));\n      } else {\n        qx.log.Logger.error(this, file.getFullPath() + ' is no configuration file');\n      }\n    },\n\n    _onMessage: function (e) {\n      var topic = e.data.shift();\n      var data = e.data.shift();\n      var path = e.data.shift();\n      var file = this._files[path];\n      if (!file && topic !== 'validationResult') {\n        qx.log.Logger.error(this, 'no file found for path ' + path + ' ignoring worker message for topic ' + topic);\n        return;\n      }\n      var editor = this.getEditor();\n      switch(topic) {\n        case \"modified\":\n          // new files are always modified, to not override that state\n          if (!file.isTemporary()) {\n            file.setModified(data.modified);\n          }\n          file.setHash(data.currentHash);\n          break;\n\n        case \"errors\":\n          file.setValid(!data || data.length === 0);\n          if (editor) {\n            editor.showErrors(path, data);\n          }\n          break;\n\n        case \"decorations\":\n          if (editor) {\n            editor.showDecorations(path, data);\n          }\n          break;\n\n        case 'validationResult':\n          if (this._validationCallbacks.hasOwnProperty(path)) {\n            var callbacks = this._validationCallbacks[path];\n            delete this._validationCallbacks[path];\n            callbacks.forEach(function(cb) {\n              cb(data);\n            });\n          }\n          break;\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._worker.terminate();\n    this._worker = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.contextmenu.FileItem', {\n  extend: qx.ui.menu.Menu,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (file, noCompare) {\n    this.base(arguments);\n    this._noCompare = noCompare === true;\n    this._commandGroup = qx.core.Init.getApplication().getCommandManager().getActive();\n    this._init();\n    this._dateFormat = new qx.util.format.DateFormat(qx.locale.Date.getDateFormat('medium'));\n    this._timeFormat = new qx.util.format.DateFormat(qx.locale.Date.getTimeFormat('medium'));\n\n    if (file) {\n      this.configure(file);\n    }\n\n    // only react to events when this menu is visible\n    this.addListener('appear', function () {\n      this.setActive(true);\n    });\n    this.addListener('disappear', function () {\n      this.setActive(false);\n    });\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-file-contextmenu'\n    },\n    \n    /* This flag enables the event handling for this menu */\n    active: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _commandGroup: null,\n    _selectedNode: null,\n    _dateFormat: null,\n    _timeFormat: null,\n    _renameDialog: null,\n    _noCompare: false,\n\n    configure: function (file) {\n      this._selectedNode = file;\n      if (file) {\n        var isFolder = file.getType() === 'dir';\n        var folder = isFolder ? file : file.getParent();\n        var isBackup = false;\n        if (folder && folder.getFullPath().startsWith('backup') || file.getFullPath().startsWith('backup')) {\n          isBackup = true;\n        }\n        if (!isFolder) {\n          this.getChildControl('new-file-button').exclude();\n          this.getChildControl('new-folder-button').exclude();\n        } else {\n          this.getChildControl('new-file-button').set({\n            enabled: folder && !isBackup ? folder.isWriteable() : false,\n            visibility: 'visible'\n          });\n          this.getChildControl('new-folder-button').set({\n            enabled: folder && !isBackup ? folder.isWriteable() : false,\n            visibility: 'visible'\n          });\n        }\n        this.getChildControl('clone-file-button').setVisibility(file.isConfigFile() && !isBackup ? 'visible' : 'excluded');\n        this.getChildControl('delete-button').setLabel(file.isTrash() ?\n          this.tr('Clear') :\n          this.tr('Delete'));\n\n        // create compare menu\n        if (!this._noCompare) {\n          var compareMenu = this.getChildControl('compare-menu');\n          compareMenu.removeAll();\n          if (!isBackup) {\n            this.getChildControl('compare-with-button').show();\n            var backups = cv.ui.manager.model.BackupFolder.getInstance().getBackupFiles(file);\n            this.getChildControl('compare-with-button').setEnabled(backups.length > 0);\n            backups.sort(function (a, b) {\n              return b.date.getTime() - a.date.getTime();\n            });\n            var group = null;\n            backups.forEach(function (backupEntry) {\n              var date = this._dateFormat.format(backupEntry.date);\n              if (group !== date) {\n                if (group !== null) {\n                  compareMenu.add(new qx.ui.menu.Separator());\n                }\n                var groupButton = new qx.ui.menu.Button(date);\n                groupButton.setEnabled(false);\n                compareMenu.add(groupButton);\n                group = date;\n              }\n              var button = new qx.ui.menu.Button(this.tr('Backup from %1', this._timeFormat.format(backupEntry.date)));\n              button.setUserData('file', backupEntry.file);\n              button.addListener('execute', this._onCompareWith, this);\n              compareMenu.add(button);\n            }, this);\n          } else {\n            this.getChildControl('compare-with-button').exclude();\n          }\n        }\n\n        var defaultHandler = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file);\n\n        // open with menu\n        var openWithMenu = this.getChildControl('open-with-menu');\n        openWithMenu.removeAll();\n        if (!isBackup) {\n          this.getChildControl('open-with-button').show();\n          var availableHandlers = cv.ui.manager.control.FileHandlerRegistry.getInstance().getAllFileHandlers(file);\n\n          // this menu only makes sense when there is more than one option to select from\n          this.getChildControl('open-with-button').setEnabled(availableHandlers.length > 1);\n          availableHandlers.sort(function (a, b) {\n            return a.Clazz.constructor.TITLE.toString().localeCompare(b.Clazz.constructor.TITLE.toString());\n          });\n          availableHandlers.forEach(function (handlerConf) {\n            var button = new qx.ui.menu.Button(handlerConf.Clazz.constructor.TITLE, handlerConf.Clazz.constructor.ICON);\n            button.setAppearance('open-with-button');\n            if (defaultHandler.Clazz.classname === handlerConf.Clazz.classname) {\n              button.addState('default');\n            }\n            button.setUserData('handlerId', handlerConf.Clazz.classname);\n            button.addListener('execute', this._onOpenWith, this);\n            openWithMenu.add(button);\n          }, this);\n        } else {\n          this.getChildControl('open-with-button').exclude();\n        }\n\n        // validate button\n        this.getChildControl('validate-config-button').setVisibility(file.isConfigFile() && !file.isMounted() && !isBackup ? 'visible' : 'excluded');\n\n        // replacement button\n        if (!isFolder && !isBackup) {\n          this.getChildControl('replace-button').show();\n          this._replacementManager.setFilename(file.getName());\n          this._replacementManager.setFolder(file.getParent());\n        } else {\n          this.getChildControl('replace-button').exclude();\n        }\n        // buttons that need write access\n        ['delete-button', 'replace-button', 'rename-button'].forEach(function (controlName) {\n          this.getChildControl(controlName).setEnabled(!file.isFake() && file.isWriteable() && (!isBackup || controlName === 'delete-button'));\n        }, this);\n        this.getChildControl('download-button').setEnabled(!file.isFake() && file.getType() === 'file');\n        this.getChildControl('restore-button').setVisibility(file.isInTrash() || isBackup ? 'visible' : 'excluded');\n      } else {\n        this.getChildControl('delete-button').set({\n          label: this.tr('Delete'),\n          enabled: false\n        });\n        this.getChildControl('replace-button').exclude();\n        this.getChildControl('download-button').setEnabled(false);\n        this.getChildControl('restore-button').exclude();\n      }\n    },\n\n    _init: function () {\n      if (!this._noNew) {\n        this.add(this.getChildControl('new-file-button'));\n      }\n      this.add(this.getChildControl('clone-file-button'));\n      if (!this._noNew) {\n        this.add(this.getChildControl('new-folder-button'));\n      }\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('open-button'));\n      this.add(this.getChildControl('open-with-button'));\n      if (!this._noCompare) {\n        this.add(this.getChildControl('compare-with-button'));\n      }\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('rename-button'));\n      this.add(this.getChildControl('delete-button'));\n      this.add(this.getChildControl('restore-button'));\n      this.add(new qx.ui.menu.Separator());\n      this.add(this.getChildControl('download-button'));\n      var sep = new qx.ui.menu.Separator();\n      var button = this.getChildControl('replace-button');\n      this.add(sep);\n      this.add(button);\n      button.bind('visibility', sep, 'visibility');\n      sep = new qx.ui.menu.Separator();\n      button = this.getChildControl('validate-config-button');\n      button.bind('visibility', sep, 'visibility');\n      this.add(sep);\n      this.add(button);\n    },\n\n    _onCompareWith: function (ev) {\n      if (this.isActive()) {\n        var compareWith = ev.getTarget().getUserData('file');\n        qx.event.message.Bus.dispatchByName('cv.manager.compareFiles',\n          new cv.ui.manager.model.CompareFiles(compareWith, this._selectedNode)\n        );\n      }\n    },\n\n    _onOpenWith: function (ev) {\n      if (this.isActive()) {\n        var handlerId = ev.getTarget().getUserData('handlerId');\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n          file: this._selectedNode,\n          handler: handlerId\n        });\n      }\n    },\n\n    _onRename: function () {\n      if (this._selectedNode && !this._renameDialog && this.isActive()) {\n        this._renameDialog = new dialog.Prompt({\n          message: this.tr('New name'),\n          callback: function (name) {\n            if (name && name !== this._selectedNode.getName()) {\n              cv.ui.manager.control.FileController.getInstance().rename(this._selectedNode, name);\n            }\n          },\n          context: this,\n          value: this._selectedNode.getName(),\n          caption: this.tr('Rename file'),\n          filter: /[\\w\\d_\\-\\.\\s]/\n        });\n        this._renameDialog.show();\n      }\n    },\n\n    _onDownload: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().download(this._selectedNode);\n      }\n    },\n\n    _onRestore: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().restore(this._selectedNode);\n      }\n    },\n\n    _onValidate: function () {\n      if (this._selectedNode && this.isActive()) {\n        cv.ui.manager.control.FileController.getInstance().validate(this._selectedNode);\n      }\n    },\n\n    _onClone: function () {\n      if (this._selectedNode && this.isActive()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.action.clone', {\n          file: this._selectedNode\n        });\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'new-file-button':\n           control = new qx.ui.menu.Button(this.tr('New file'), cv.theme.dark.Images.getIcon('new-file', 18));\n           control.addListener('execute', function () {\n             if (this._selectedNode.isConfigFile()) {\n               qx.event.message.Bus.dispatchByName('cv.manager.action.new-config-file', this._selectedNode.getParent());\n             } else {\n               qx.event.message.Bus.dispatchByName('cv.manager.action.new-file', this._selectedNode.getType() === 'dir' ? this._selectedNode : this._selectedNode.getParent());\n             }\n           }, this);\n           break;\n\n         case 'clone-file-button':\n           control = new qx.ui.menu.Button(this.tr('Clone file'), cv.theme.dark.Images.getIcon('clone-file', 18));\n           control.exclude();\n           control.addListener('execute', this._onClone, this);\n           break;\n\n         case 'new-folder-button':\n           control = new qx.ui.menu.Button(this.tr('New folder'), cv.theme.dark.Images.getIcon('new-folder', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.action.new-folder', this._selectedNode.getType() === 'dir' ? this._selectedNode : this._selectedNode.getParent());\n           }, this);\n           break;\n\n         case 'rename-button':\n           control = new qx.ui.menu.Button(this.tr('Rename'), cv.theme.dark.Images.getIcon('rename', 18));\n           control.addListener('execute', this._onRename, this);\n           break;\n\n         case 'delete-button':\n           control = new qx.ui.menu.Button(this.tr('Delete'), cv.theme.dark.Images.getIcon('delete', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.action.delete', this._selectedNode);\n           }, this);\n           break;\n\n         case 'download-button':\n           control = new qx.ui.menu.Button(this.tr('Download'), cv.theme.dark.Images.getIcon('download', 18));\n           control.addListener('execute', this._onDownload, this);\n           break;\n\n         case 'open-button':\n           control = new qx.ui.menu.Button(this.tr('Open'), cv.theme.dark.Images.getIcon('open', 18));\n           control.addListener('execute', function () {\n             qx.event.message.Bus.dispatchByName('cv.manager.open', this._selectedNode);\n           }, this);\n           break;\n\n         case 'restore-button':\n           control = new qx.ui.menu.Button(this.tr('Restore'), cv.theme.dark.Images.getIcon('trash', 18));\n           control.exclude();\n           control.addListener('execute', this._onRestore, this);\n           break;\n\n         case 'validate-config-button':\n           control = new qx.ui.menu.Button(this.tr('Validate'), cv.theme.dark.Images.getIcon('validate', 18));\n           control.exclude();\n           control.addListener('execute', this._onValidate, this);\n           break;\n\n         case 'replace-button':\n           control = new com.zenesis.qx.upload.UploadMenuButton(this.tr('Replace'), cv.theme.dark.Images.getIcon('upload', 18));\n           control.exclude();\n           this._replacementManager = new cv.ui.manager.upload.UploadMgr();\n           this._replacementManager.setForce(true);\n           this._replacementManager.addWidget(control);\n           break;\n\n         case 'compare-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n\n         case 'compare-with-button':\n           control = new qx.ui.menu.Button(this.tr('Compare with...'), cv.theme.dark.Images.getIcon('compare', 18), null, this.getChildControl('compare-menu'));\n           break;\n\n         case 'open-with-button':\n           control = new qx.ui.menu.Button(this.tr('Open with...'), cv.theme.dark.Images.getIcon('open-with', 18), null, this.getChildControl('open-with-menu'));\n           break;\n\n         case 'open-with-menu':\n           control = new qx.ui.menu.Menu();\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._commandGroup = null;\n    this._renameDialog = null;\n    this._disposeObjects('_dateFormat', '_timeFormat');\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.contextmenu.GlobalFileItem', {\n  extend: cv.ui.manager.contextmenu.FileItem,\n  type: 'singleton'\n});\n","/**\n * Widget for filesystem items in a virtual tree.\n */\nqx.Class.define('cv.ui.manager.tree.VirtualFsItem', {\n  extend: qx.ui.tree.VirtualTreeItem,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'fs-tree-item'\n    },\n\n    editing: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyEditing'\n    },\n\n    name: {\n      check: 'String',\n      init: '',\n      event: 'changeName'\n    },\n\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyTemporary'\n    },\n\n    status: {\n      check: ['valid', 'error'],\n      nullable: true,\n      apply: '_applyStatus'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _applyEditing: function (value, old) {\n      if (value !== old) {\n        var field = this.getChildControl('edit');\n        if (value) {\n          field.setValue(this.getLabel());\n          field.show();\n          qx.event.message.Bus.dispatchByName('cv.manager.tree.enable', false);\n        } else {\n          qx.event.message.Bus.dispatchByName('cv.manager.tree.enable', true);\n          field.exclude();\n          // save new name\n          if (field.getValue() !== this.getName()) {\n            cv.ui.manager.control.FileController.getInstance().rename(this.getModel(), field.getValue());\n          }\n        }\n      }\n    },\n    _applyTemporary: function (value) {\n      if (value) {\n        this.addState('temporary');\n      } else {\n        this.removeState('temporary');\n      }\n    },\n\n    // overridden\n    _applyModel : function(value, old) {\n      this.base(arguments, value, old);\n      if (old) {\n        old.removeRelatedBindings(this);\n      }\n      if (value) {\n        if (value.isTrash()) {\n          this.setLabel(this.tr('Trash'));\n        } else {\n          value.bind('name', this, 'label');\n          value.bind('valid', this, 'status', {\n            converter: function (value) {\n              return value === true ? 'valid' : 'error';\n            }\n          });\n        }\n        value.bind('temporary', this, 'temporary');\n        if (value.getType() === 'dir') {\n          this.setDroppable(true);\n          this.addListener('drop', this._onDrop, this);\n        } else {\n          this.setDroppable(false);\n          this.removeListener('drop', this._onDrop, this);\n        }\n      }\n    },\n\n    _applyStatus: function (value) {\n      var control = this.getChildControl('icon');\n      if (value) {\n        switch (value) {\n          case 'valid':\n            control.removeState('error');\n            break;\n\n          case 'error':\n            control.addState('error');\n            break;\n        }\n      }\n    },\n\n    /**\n     * Handle drop events\n     * @param ev {Event}\n     * @private\n     */\n    _onDrop: function (ev) {\n      console.log(ev.getRelatedTarget());\n    },\n\n    __cancelEditing: function () {\n      this.getChildControl('edit').setValue(this.getName());\n      this.setEditing(false);\n    },\n\n    _onKeypress: function (ev) {\n      if (ev.getKeyIdentifier() === 'Enter') {\n        this.setEditing(false);\n      } else if (ev.getKeyIdentifier() === 'Esc') {\n        this.__cancelEditing();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'edit':\n           control = new qx.ui.form.TextField();\n           control.addListener('keypress', this._onKeypress, this);\n           control.exclude();\n           control.addListener('changeVisibility', function (ev) {\n              if (ev.getData() === 'visible') {\n                this.getChildControl('label').exclude();\n              } else {\n                this.getChildControl('label').show();\n              }\n           }, this);\n           control.addListener('blur', function () {\n             this.setEditing(false);\n           }, this);\n           this._add(control);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * A qx.ui.form.ListItem with an additional label overlay over the icon to show the file type\n */\nqx.Class.define('cv.ui.manager.form.FileListItem', {\n  extend: qx.ui.core.Widget,\n  implement : [qx.ui.form.IModel],\n  include: [cv.ui.manager.upload.MDragUpload],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (label, icon, model) {\n    this.base(arguments, label, icon);\n    var layout = new qx.ui.layout.Canvas();\n    layout.setDesktop(true);\n    this._setLayout(layout);\n\n    if (model) {\n      this.setModel(model);\n\n    }\n    this.addListener('pointerover', this._onPointerOver, this);\n    this.addListener('pointerout', this._onPointerOut, this);\n\n    cv.ui.manager.model.Preferences.getInstance().addListener('changeDefaultConfigEditor', this._maintainFileActions, this);\n\n    this.setUploadHint(this.tr('Drop the file here to replace the content.'));\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events: {\n    /** (Fired by {@link qx.ui.form.List}) */\n    'action' : 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-file-item'\n    },\n\n    model: {\n      nullable: true,\n      event: 'changeModel',\n      apply: '_applyModel',\n      dereference: true,\n      check: 'cv.ui.manager.model.FileItem'\n    },\n\n    /**\n     * Show the action buttons.\n     */\n    showFileActions: {\n      check: 'Boolean',\n      init: false,\n      apply: '_maintainFileActions'\n    },\n\n    /** The label/caption/text of the qx.ui.basic.Atom instance */\n    label: {\n      nullable: true,\n      check: 'String',\n      event: 'changeLabel'\n    },\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon */\n    icon: {\n      check: 'String',\n      nullable: true,\n      themeable: true,\n      event: 'changeIcon'\n    },\n\n    /**\n     * The space between the icon and the label\n     */\n    gap: {\n      check : 'Integer',\n      nullable : false,\n      event : 'changeGap',\n      themeable : true,\n      init : 4\n    },\n\n\n    /**\n     * Configure the visibility of the sub elements/widgets.\n     * Possible values: both, label, icon\n     */\n    show: {\n      init : 'both',\n      check : [ 'both', 'label', 'icon' ],\n      themeable : true,\n      inheritable : true,\n      event : 'changeShow'\n    },\n\n\n    /**\n     * The position of the icon in relation to the text.\n     * Only useful/needed if text and icon is configured and 'show' is configured as 'both' (default)\n     */\n    iconPosition: {\n      init   : 'left',\n      check : ['top', 'right', 'bottom', 'left', 'top-left', 'bottom-left' , 'top-right', 'bottom-right'],\n      themeable : true,\n      event: 'changeIconPosition'\n    },\n\n\n    /**\n     * Whether the content should be rendered centrally when to much space\n     * is available. Enabling this property centers in both axis. The behavior\n     * when disabled of the centering depends on the {@link #iconPosition} property.\n     * If the icon position is <code>left</code> or <code>right</code>, the X axis\n     * is not centered, only the Y axis. If the icon position is <code>top</code>\n     * or <code>bottom</code>, the Y axis is not centered. In case of e.g. an\n     * icon position of <code>top-left</code> no axis is centered.\n     */\n    center : {\n      init : false,\n      check : 'Boolean',\n      themeable : true,\n      event: 'changeCenter'\n    },\n\n    /**\n     * Restrict possible file uploads (not supported by every browxer)\n     */\n    acceptUpload: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    viewMode: {\n      check: ['list', 'preview'],\n      init: 'preview',\n      apply: '_applyViewMode'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _uploadManager: null,\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused : true,\n      selected : true,\n      dragover : true,\n      hovered: true\n    },\n\n    _applyViewMode: function () {\n      switch (this.getViewMode()) {\n        case 'list':\n          this.addState('list');\n          this.getChildControl('atom').setLayoutProperties({left: 10, top: 0, bottom: 0, right: null});\n          this.getChildControl('bottom-bar').setLayoutProperties({top: 0, bottom: 0, right: 0, left: null});\n          break;\n\n        case 'preview':\n          this.removeState('list');\n          this.getChildControl('atom').setLayoutProperties({left: 0, top: 0, bottom: 34, right: 0});\n          this.getChildControl('bottom-bar').setLayoutProperties({left: 0, bottom: 0, right: 0, top: null});\n          break;\n      }\n    },\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver : function() {\n      this.addState('hovered');\n    },\n\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut : function() {\n      this.removeState('hovered');\n    },\n\n    _isDroppable: function (files) {\n      if (files.length === 1) {\n        if (this.getModel().getSpecial() === 'add-file') {\n          return true;\n        }\n        var myMime = cv.ui.manager.tree.FileSystem.getMimetypeFromSuffix(this.getModel().getName().split(\".\").pop());\n        return myMime === files[0].type;\n      }\n      return false;\n    },\n\n    _onDrop: function (ev) {\n      ev.preventDefault();\n      if (this.getModel().getSpecial() === 'add-file') {\n        cv.ui.manager.upload.MDragUpload.uploadFile(cv.ui.manager.upload.MDragUpload.getFiles(ev)[0]);\n      } else {\n        dialog.Dialog.confirm(this.tr('Do you really want to replace the \\'%1\\' with the uploaded files content?', this.getModel().getName()), function (confirmed) {\n          if (confirmed) {\n            var newFile = cv.ui.manager.upload.MDragUpload.getFiles(ev)[0];\n            cv.ui.manager.upload.MDragUpload.uploadFile(newFile, this.getModel());\n          }\n        }, this);\n      }\n      this._onStopDragging(ev);\n    },\n\n    _applyModel: function (value) {\n      if (value && value.getType() === 'file') {\n        var control = this.getChildControl('file-type');\n        if (!value.isFake()) {\n          var name = value.getName();\n          this.getChildControl('atom').setToolTipText(this.tr('Double click to open \"%1\"', name));\n          var type = name.split('.').pop();\n\n          // do not use file types that are longer than 4 chars (not enough space)\n          if (type.length <= 4) {\n            var handled = false;\n            switch (type) {\n              case 'xml':\n                control.setValue('</>');\n                handled = true;\n                break;\n\n              case 'js':\n                type = qx.lang.String.firstUp(type); // jshint ignore:line\n              case 'css':\n              case 'conf':\n                control.setValue(type);\n                handled = true;\n                break;\n            }\n            if (handled && this.getViewMode() === 'preview') {\n              control.show();\n            } else {\n              control.exclude();\n            }\n          } else {\n            control.exclude();\n          }\n        }\n\n      } else {\n        this.getChildControl('file-type').exclude();\n        this.getChildControl('atom').resetToolTipText();\n      }\n      // this.getChildControl('bottom-bar').show();\n      // this.setUploadHint(this.tr('Drop the file here to replace the content.'));\n      // this.getChildControl('atom').setToolTipText(this.tr('Double click to open'));\n      this._maintainFileActions();\n      // if (this._uploadManager) {\n      //   try {\n      //     this._uploadManager.removeWidget(this);\n      //   } catch (e) {}\n      // }\n    },\n\n    _onOpenWith: function (ev) {\n      var handlerId = ev.getTarget().getUserData('handlerId');\n      qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n        file: this.getModel(),\n        handler: handlerId\n      });\n    },\n\n    _applyIcon: function (value, old) {\n      this.base(arguments, value, old);\n      if (value && !value.startsWith('@')) {\n        var control = this.getChildControl('atom').getChildControl('icon');\n        if (!cv.ui.manager.viewer.Image.getImageData(value)) {\n          // wait for image to be loaded\n          control.addListenerOnce('loaded', this.__scaleWithAspect, this);\n        } else {\n          this.__scaleWithAspect();\n        }\n      }\n    },\n\n    _maintainFileActions: function () {\n      var file = this.getModel();\n      if (this.isShowFileActions() && file) {\n        this.getChildControl('download-button').setVisibility(file.getType() === 'dir' || file.isFake() ? 'excluded' : 'visible');\n        this.getChildControl('action-button').setVisibility(file.isFake() ? 'excluded' : 'visible');\n        var editorConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, 'edit');\n        var viewerConf = cv.ui.manager.control.FileHandlerRegistry.getInstance().getFileHandler(file, 'view');\n        var openButton = this.getChildControl('open-button');\n        if (file.isWriteable() && editorConf) {\n          openButton.setUserData('handlerId', editorConf.Clazz.classname);\n          openButton.set({\n            icon: editorConf.Clazz.ICON || cv.theme.dark.Images.getIcon('edit', 18),\n            enabled: true,\n            toolTipText: editorConf.Clazz.TITLE\n          });\n        } else if(viewerConf) {\n          openButton.setUserData('handlerId', viewerConf.Clazz.classname);\n          openButton.set({\n            icon: viewerConf.Clazz.ICON || cv.theme.dark.Images.getIcon('preview', 18),\n            enabled: true,\n            toolTipText: viewerConf.Clazz.TITLE\n          });\n        } else {\n          openButton.setEnabled(false);\n        }\n        this.getChildControl('open-button');\n        this.getChildControl('action-button');\n        this.getChildControl('bottom-bar').show();\n      } else {\n        this.getChildControl('bottom-bar').exclude();\n      }\n    },\n\n    __scaleWithAspect: function () {\n      var data = cv.ui.manager.viewer.Image.getImageData(this.getIcon());\n      var control = this.getChildControl('atom').getChildControl('icon');\n      var sizeHint = control.getSizeHint();\n      var width = sizeHint.width;\n      var height = Math.round(1 / data.aspectRatio * width);\n      var padding = [0, 0, 0, 0];\n      if (height > sizeHint.height) {\n        height = sizeHint.height;\n        width = Math.round(data.aspectRatio * height);\n        padding[1] = Math.round((sizeHint.width - width) / 2);\n        padding[3] = padding[1];\n      } else {\n        padding[0] = Math.round((sizeHint.height - height) / 2);\n        padding[2] = padding[0];\n      }\n      control.setPadding(padding);\n    },\n\n    _maintainFileTypePosition: function () {\n      var iconBounds = this.getChildControl('atom').getChildControl('icon').getBounds();\n      var top = Math.round(iconBounds.top + iconBounds.height / 2);\n      this.getChildControl('file-type').setLayoutProperties({\n        left: iconBounds.left,\n        top: top,\n        right: iconBounds.left + iconBounds.width,\n        bottom: top + 18\n      });\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n      var control;\n\n      switch (id) {\n        case 'atom':\n          control = new qx.ui.basic.Atom();\n          ['label', 'icon', 'gap', 'iconPosition', 'show', 'center'].forEach(function (prop) {\n            this.bind(prop, control, prop);\n          }, this);\n          control.setAnonymous(true);\n          this._add(control, {top: 0, left: 0, right: 0, bottom: 34});\n          break;\n\n        case 'file-type':\n          control = new qx.ui.basic.Label();\n          control.set({\n            zIndex: 100,\n            anonymous: true,\n            font: 'title',\n            textAlign: 'center',\n            textColor: 'background-main',\n            minWidth: 70\n          });\n          var icon = this.getChildControl('atom').getChildControl('icon');\n          icon.bind('visibility', control, 'visibility');\n          icon.addListener('resize', this._maintainFileTypePosition, this);\n          this._add(control, {width: '100%'});\n          break;\n\n        case 'bottom-bar':\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox(4, 'center'));\n          control.setAnonymous(true);\n          this._add(control, {left: 0, bottom: 0, right: 0});\n          break;\n\n        case 'download-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('download', 18));\n          control.setToolTipText(this.tr('Download file'));\n          control.addListener('execute', function () {\n            cv.ui.manager.control.FileController.getInstance().download(this.getModel());\n          }, this);\n          this.getChildControl('bottom-bar').add(control);\n          break;\n\n        case 'action-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('menu', 18));\n          control.setToolTipText(this.tr('Other file actions'));\n          this.getChildControl('bottom-bar').add(control);\n          control.addListener('tap', function (ev) {\n            this.fireEvent('action', qx.event.type.Tap, [ev.getNativeEvent(), this, ev.getTarget(), false, true]);\n          }, this);\n          break;\n\n        case 'open-button':\n          control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('preview', 18));\n          control.addListener('execute', function () {\n            qx.event.message.Bus.dispatchByName('cv.manager.openWith', {\n              file: this.getModel(),\n              handler: control.getUserData('handlerId')\n            });\n          }, this);\n          this.getChildControl('bottom-bar').add(control);\n          break;\n      }\n      if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    capture: function () {\n      // do not fire capture method for upload-items (see: com.zenesis.qx.upload.MUploadButton)\n      if (!this.getFile() || this.getFile().getSpecial() !== 'add-file') {\n        this.base(arguments);\n      }\n    },\n\n    // overridden\n    releaseCapture: function() {\n      // do not fire capture method for upload-items (see: com.zenesis.qx.upload.MUploadButton)\n      if (!this.getFile() || this.getFile().getSpecial() !== 'add-file') {\n        this.base(arguments);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.removeListener('pointerover', this._onPointerOver, this);\n    this.removeListener('pointerout', this._onPointerOut, this);\n\n    this._disposeObjects('_uploadManager');\n    cv.ui.manager.model.Preferences.getInstance().removeListener('changeDefaultConfigEditor', this._maintainFileActions, this);\n  }\n});\n","/**\n * Atom with cv.ui.manager.viewer.SvgIcon instead ob an qx.ui.basic.Image\n */\nqx.Class.define('cv.ui.manager.core.IconAtom', {\n  extend: qx.ui.basic.Atom,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-icon'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyLabel: function (value) {\n      this.base(arguments, value);\n      this.getChildControl('icon').setName(value);\n    },\n\n    /**\n     * Updates the visibility of the icon\n     */\n    _handleIcon : function()\n    {\n      if (!this.getChildControl('icon').getName() || this.getShow() === \"label\") {\n        this._excludeChildControl(\"icon\");\n      } else {\n        this._showChildControl(\"icon\");\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'icon':\n           control = new cv.ui.manager.viewer.SvgIcon();\n           control.setAnonymous(true);\n           this._addAt(control, 0);\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n","/**\n * XSD-based code completion provider for the monaco text editor.\n *\n * @since 0.11.0\n * @author Tobias Bräutigam\n */\nqx.Class.define('cv.ui.manager.editor.completion.Config', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (schemaNode) {\n    this.base(arguments);\n    this.__elementCache = {};\n    this._schemaNode = schemaNode;\n    this._dataProvider = cv.ui.manager.editor.data.Provider.getInstance();\n\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __elementCache: null,\n    __metaElementCache: null,\n    _schemaNode: null,\n    _dataProvider: null,\n\n    getLastOpenedTag: function (text) {\n      // get all tags inside of the content\n      var tags = text.match(/<\\/*(?=\\S*)([a-zA-Z-]+)/g);\n      if (!tags) {\n        return undefined;\n      }\n      // we need to know which tags are closed\n      var closingTags = [];\n      for (var i = tags.length - 1; i >= 0; i--) {\n        if (tags[i].indexOf('</') === 0) {\n          closingTags.push(tags[i].substring('</'.length));\n        }\n        else {\n          // get the last position of the tag\n          var tagPosition = text.lastIndexOf(tags[i]);\n          var tag = tags[i].substring('<'.length);\n          var closingBracketIdx = text.indexOf('/>', tagPosition);\n          // if the tag wasn't closed\n          if (closingBracketIdx === -1) {\n            // if there are no closing tags or the current tag wasn't closed\n            if (!closingTags.length || closingTags[closingTags.length - 1] !== tag) {\n              // we found our tag, but let's get the information if we are looking for\n              // a child element or an attribute\n              text = text.substring(tagPosition);\n\n              var openedTag = text.indexOf('<') > text.indexOf('>');\n              var contentSearch = false;\n              var currentAttribute = null;\n              if (openedTag) {\n                var attrMatch = /([\\w\\-_\\.\\d]+)=\"[^\"]*$/.exec(text);\n                contentSearch = !!attrMatch;\n                currentAttribute = attrMatch ? attrMatch[1] : null;\n              }\n              var filteredElementSearch = /<[\\w-_\\d]+$/.test(text);\n              return {\n                tagName: tag,\n                currentAttribute: currentAttribute,\n                filteredElementSearch: filteredElementSearch,\n                isAttributeSearch: !filteredElementSearch && openedTag && !contentSearch,\n                isContentSearch: contentSearch,\n                text: text\n              };\n            }\n            // remove the last closed tag\n            closingTags.splice(closingTags.length - 1, 1);\n          }\n          // remove the last checked tag and continue processing the rest of the content\n          text = text.substring(0, tagPosition);\n        }\n      }\n    },\n\n    findElements: function (parent, elementName, maxDepth, currentDepth, inMeta) {\n      var cache = inMeta === true ? this.__metaElementCache : this.__elementCache;\n      if (elementName in cache) {\n        return cache[elementName];\n      }\n      if (maxDepth < currentDepth) {\n        return null;\n      }\n      if (!parent) {\n        parent = this._schemaNode.allowedRootElements.pages;\n      }\n      if (currentDepth === undefined) {\n        currentDepth = 1;\n      }\n      var allowedElements = parent.getAllowedElements();\n      // console.log(parent.name+\" looking for \"+elementName+\" in tree level \"+currentDepth+ \"(<\"+maxDepth+\") (\"+Object.getOwnPropertyNames(allowedElements).join(\", \")+\")\");\n      if (elementName in allowedElements) {\n        // console.log(\"found \"+elementName+\" in tree level \"+currentDepth);\n        this.__elementCache[elementName] = allowedElements[elementName];\n        return allowedElements[elementName];\n      } else {\n        for (var element in allowedElements) {\n          if (inMeta !== true && element === 'meta') {\n            continue;\n          }\n          if (maxDepth > currentDepth) {\n            var result = this.findElements(allowedElements[element], elementName, maxDepth, currentDepth + 1);\n            if (result) {\n              cache[elementName] = result;\n              // console.log(\"found \" + elementName + \" in tree level \" + currentDepth);\n              return result;\n            }\n          }\n        }\n      }\n\n    },\n\n    isItemAvailable: function (itemName, maxOccurs, items) {\n      // the default for 'maxOccurs' is 1\n      maxOccurs = maxOccurs || '1';\n      // the element can appere infinite times, so it is available\n      if (maxOccurs && maxOccurs === 'unbounded') {\n        return true;\n      }\n      // count how many times the element appeared\n      var count = 0;\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === itemName) {\n          count++;\n        }\n      }\n      // if it didn't appear yet, or it can appear again, then it\n      // is available, otherwise it't not\n      return count === 0 || parseInt(maxOccurs) > count;\n    },\n\n    getElementString: function (element, indent, prefix) {\n      var insertText = indent+prefix+element.name+\" \";\n      // add all required attributes with default values\n      Object.getOwnPropertyNames(element.allowedAttributes).forEach(function(attr) {\n        var attribute = element.allowedAttributes[attr];\n        if (!attribute.isOptional) {\n          insertText += attr+'=\"'+(attribute.defaultValue ? attribute.defaultValue : \"\")+'\" ';\n        }\n      });\n      // add mandatory children\n      var requiredElements = element.getRequiredElements();\n      var allowedContent = element.getAllowedContent();\n      var isContentAllowed = allowedContent._text || requiredElements.length > 0 || !!allowedContent._grouping;\n      if (!isContentAllowed) {\n        // close tag\n        insertText = insertText.trim()+\"/\";\n      } else {\n        // close open tag\n        insertText = insertText.trim()+\">\";\n\n        // insert required elements\n        var children = 0;\n        requiredElements.forEach(function(elemName) {\n          var elem = this.findElements(element, elemName, 1, 0);\n          if (elem) {\n            insertText += \"\\n    \" + this.getElementString(elem, indent + \"    \", \"<\") + \">\";\n            children++;\n          }\n        }, this);\n        // add closing tag\n        if (children > 0) {\n          insertText += \"\\n\"+indent;\n        }\n        insertText += \"</\"+element.name;\n      }\n      return insertText;\n    },\n\n    getAvailableElements: function (element, usedItems) {\n      var availableItems = [];\n      var children = element.getAllowedElements();\n\n      // if there are no such elements, then there are no suggestions\n      if (!children) {\n        return [];\n      }\n      Object.getOwnPropertyNames(children).forEach(function(name) {\n        // get all element attributes\n        var childElem = children[name];\n        // the element is a suggestion if it's available\n        if (this.isItemAvailable(childElem.name, childElem.getBounds().max, usedItems)) {\n          // mark it as a 'field', and get the documentation\n          availableItems.push({\n            label: childElem.name,\n            insertText: this.getElementString(childElem, \"\", \"\"),\n            kind: window.monaco.languages.CompletionItemKind.Field,\n            detail: childElem.type,\n            documentation: childElem.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n      // return the suggestions we found\n      return availableItems;\n    },\n\n    getAvailableAttributes: function (element, usedChildTags) {\n      var availableItems = [];\n      // get all attributes for the element\n      var attrs = element.allowedAttributes;\n      Object.getOwnPropertyNames(attrs).forEach(function(name) { // jshint ignore:line\n        var attr = attrs[name];\n        // accept it in a suggestion list only the attribute is not used yet\n        if (usedChildTags.indexOf(attr.name) === -1) {\n          // mark it as a 'property', and get it's documentation\n          availableItems.push({\n            label: attr.name,\n            insertText: attr.name+'=\"\"',\n            kind: window.monaco.languages.CompletionItemKind.Property,\n            detail: attr.getTypeString(),\n            documentation: attr.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n\n      // return the elements we found\n      return availableItems;\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['<', '\"'],\n        provideCompletionItems: function (model, position) {\n          // get editor content before the pointer\n          var textUntilPosition = model.getValueInRange({\n            startLineNumber: 1,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n          });\n          // parse mappings\n          var completeText = model.getValue();\n          var metaEndPos = completeText.indexOf('</meta>');\n          var textMeta = metaEndPos > 0 ? completeText.substring(0, metaEndPos) : completeText;\n          var mappingNames = [];\n          var stylingNames = [];\n          var templates = {};\n          var map, vmap;\n          var regex = /<mapping name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            mappingNames.push(map[1]);\n          }\n          regex = /<styling name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            stylingNames.push(map[1]);\n          }\n          var templatesStart = textMeta.indexOf('<templates>');\n          if (templatesStart >= 0) {\n            var templatesString = textMeta.substring(templatesStart + 11, textMeta.indexOf('</templates>') - 12).replace(/(?:\\r\\n|\\r|\\n)/g, '');\n            templatesString.split('</template>').forEach(function (rawTemplate) {\n              var nameMatch = /<template name=\"([^\"]+)\"/.exec(rawTemplate);\n              // search for variables\n              var variables = [];\n              var vregex = /{{{?\\s*([\\w\\d]+)\\s*}?}}/gm;\n              while ((vmap = vregex.exec(rawTemplate)) !== null) {\n                variables.push(vmap[1]);\n              }\n              templates[nameMatch[1]] = variables;\n            }, this);\n          }\n\n          // if we want suggestions, inside of which tag are we?\n          var lastOpenedTag = this.getLastOpenedTag(textUntilPosition);\n          // console.log(lastOpenedTag);\n          // get opened tags to see what tag we should look for in the XSD schema\n          var openedTags = [];\n          // attrobutes of the ancestors\n          var openedAttributes = [];\n          // get the elements/attributes that are already mentioned in the element we're in\n          var usedItems = [];\n          var isAttributeSearch = lastOpenedTag && lastOpenedTag.isAttributeSearch;\n          var isContentSearch = lastOpenedTag && lastOpenedTag.isContentSearch;\n          var filteredElementSearch = lastOpenedTag && lastOpenedTag.filteredElementSearch;\n          // no need to calculate the position in the XSD schema if we are in the root element\n          var parts;\n          if (lastOpenedTag) {\n            // try to create a valid XML document\n            parts = lastOpenedTag.text.split(\" \");\n            parts.shift();\n            var cleanedText = textUntilPosition;\n            if (parts.length) {\n              cleanedText = cleanedText.substring(0, cleanedText.length-parts.join(\" \").length)+\">\";\n            }\n            // parse the content (not cleared text) into an xml document\n            var xmlDoc = qx.xml.Document.fromString(cleanedText);\n            var lastChild = xmlDoc.lastElementChild;\n            var i;\n            var lastFound = false;\n            while (lastChild) {\n              openedTags.push(lastChild.tagName);\n              openedAttributes.push(lastChild.attributes);\n              // if we found our last opened tag\n              if (lastChild.tagName === lastOpenedTag.tagName) {\n                lastFound = true;\n                // if we are looking for attributes, then used items should\n                // be the attributes we already used\n                if (lastOpenedTag.isAttributeSearch && lastChild.outerHTML === lastOpenedTag.text) {\n                  var attrs = lastChild.attributes;\n                  for (i = 0; i < attrs.length; i++) {\n                    usedItems.push(attrs[i].nodeName);\n                  }\n                }\n                else {\n                  // if we are looking for child elements, then used items\n                  // should be the elements that were already used\n                  var children = lastChild.children;\n                  for (i = 0; i < children.length; i++) {\n                    if (children[i].tagName.toLowerCase() !== 'parsererror') {\n                      usedItems.push(children[i].tagName);\n                    }\n                  }\n                }\n                break;\n              }\n              // we haven't found the last opened tag yet, so we move to\n              // the next element\n              lastChild = lastChild.lastElementChild;\n            }\n            if (!lastFound) {\n              // fallback -> parse string\n              if (isAttributeSearch || isContentSearch) {\n                parts = lastOpenedTag.text.split(\" \");\n                // skip tag name\n                parts.shift();\n                parts.forEach(function(entry) {\n                  usedItems.push(entry.split(\"=\").shift());\n                });\n              }\n            }\n          }\n          var res = [];\n          var match;\n          // find the last opened tag in the schema to see what elements/attributes it can have\n          var searchedElement = openedTags[openedTags.length-1];\n          if (isContentSearch) {\n            // handle data providers if the is one relevant\n            if (lastOpenedTag.tagName === 'pages' && lastOpenedTag.currentAttribute === 'design') {\n              return this._dataProvider.getDesigns().then(function (sugg) {\n                return {suggestions: sugg};\n              });\n            } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === 'transform') {\n              return {suggestions: this._dataProvider.getTransforms()};\n            } else if (lastOpenedTag.tagName === 'plugin' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getPlugins()};\n            } else if (lastOpenedTag.tagName === 'icon' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getIcons()};\n            } else if (lastOpenedTag.tagName === 'influx') {\n              if (lastOpenedTag.currentAttribute === 'measurement') {\n                return this._dataProvider.getInfluxDBs().then(function (suggestions) {\n                  return {suggestions: suggestions};\n                });\n              } else if (lastOpenedTag.currentAttribute === 'field') {\n                match = /measurement=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                if (match) {\n                  return this._dataProvider.getInfluxDBFields(match[1]).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'tag' && (lastOpenedTag.currentAttribute === 'key' || lastOpenedTag.currentAttribute === 'value') && openedTags.includes('influx')) {\n              var influxAttributes = openedAttributes[openedTags.indexOf('influx')];\n              var attr = influxAttributes.getNamedItem('measurement');\n              if (attr) {\n                if (lastOpenedTag.currentAttribute === 'key') {\n                  return this._dataProvider.getInfluxDBTags(attr.value).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                } else if (lastOpenedTag.currentAttribute === 'value') {\n                  match = /key=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                  if (match) {\n                    return this._dataProvider.getInfluxDBValues(attr.value, match[1]).then(function (suggestions) {\n                      return {suggestions: suggestions};\n                    });\n                  }\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'template' && lastOpenedTag.currentAttribute === 'name' && openedTags.includes('meta')) {\n              res = Object.keys(templates).map(function (name) {\n                return {\n                  label: name,\n                  insertText: name,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.tagName === 'value' &&\n              lastOpenedTag.currentAttribute === 'name' &&\n              !openedTags.includes('meta') &&\n              openedTags.includes('template')) {\n              // TODO: find out template name\n              var templateNames = Object.keys(templates);\n              templateNames.forEach(function (name) {\n                templates[name].forEach(function (variableName) {\n                  res.push({\n                    label: variableName,\n                    insertText: variableName,\n                    detail: qx.locale.Manager.tr('Variable from template %1', name),\n                    kind: window.monaco.languages.CompletionItemKind.Variable\n                  });\n                }, this);\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'mapping') {\n              res = mappingNames.map(function (mappingName) {\n                return {\n                  label: mappingName,\n                  insertText: mappingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'styling') {\n              res = stylingNames.map(function (stylingName) {\n                return {\n                  label: stylingName,\n                  insertText: stylingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            }\n\n            // TODO: completions that have to be retrieved from the backend\n            // * rrds\n            // * Influx: dbs, tags fields\n            // * media files\n\n            searchedElement = lastOpenedTag.tagName;\n          } else if (!isAttributeSearch && filteredElementSearch) {\n            searchedElement = openedTags[openedTags.length-2];\n          }\n          if (searchedElement === 'rrd') {\n            return {suggestions: this._dataProvider.getRrds()};\n          } else if (searchedElement === 'file' && !isAttributeSearch && !isContentSearch && openedTags.includes('files')) {\n            match = /type=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n            var typeFilter = !!match ? match[1] : null;\n            return this._dataProvider.getMediaFiles(typeFilter).then(function (suggestions) {\n              return {suggestions: suggestions};\n            });\n          }\n          var currentItem = this.findElements(this._schemaNode.allowedRootElements.pages, searchedElement, openedTags.length, openedTags.includes('meta'));\n\n          // return available elements/attributes if the tag exists in the schema, or an empty\n          // array if it doesn't\n          if (isContentSearch) {\n            var currentAttribute = usedItems[usedItems.length-1];\n\n            if (currentItem && currentAttribute in currentItem.allowedAttributes) {\n              var attribute = currentItem.allowedAttributes[currentAttribute];\n              var type = attribute.getTypeString();\n              attribute.getEnumeration().forEach(function(entry) {\n                res.push({\n                  label: entry,\n                  kind: window.monaco.languages.CompletionItemKind.Value,\n                  detail: type,\n                  documentation: attribute.getDocumentation().join(\"\\n\")\n                });\n              });\n            }\n          }\n          else if (isAttributeSearch) {\n            // get attributes completions\n            res = currentItem ? this.getAvailableAttributes(currentItem, usedItems) : [];\n          }\n          else {\n            // get elements completions\n            if (lastOpenedTag && lastOpenedTag.text.endsWith(\"</\")) {\n              res.push({\n                label: lastOpenedTag.tagName,\n                kind: window.monaco.languages.CompletionItemKind.Field\n              });\n            } else {\n              res = currentItem ? this.getAvailableElements(currentItem, usedItems) : [];\n            }\n          }\n          return {suggestions: res};\n        }.bind(this)\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__elementCache = null;\n    this._schemaNode = null;\n    this._dataProvider = null;\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.editor.completion.CometVisu', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    TEMPLATES: null,\n\n    getTemplates: function () {\n      if (!this.TEMPLATES) {\n        this.TEMPLATES = [{\n          filterText: \"cvclass\",\n          label: 'CometVisu-Class',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A generic CometVisu class.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Class.define(\"cv.$0\", {\\n  extend: qx.core.Object,\\n\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvwidget\",\n          label: 'CometVisu-Widget',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A CometVisu class for a widget.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Class.define(\"cv.ui.structure.pure.$0\", {\\n  extend: cv.ui.structure.AbstractWidget,\\n\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvinterface\",\n          label: 'CometVisu-Interface',\n          kind: window.monaco.languages.CompletionItemKind.Interface,\n          detail: \"A generic CometVisu Interface.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Interface.define(\"cv.$0\", {\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvmixin\",\n          label: 'CometVisu-Mixin',\n          kind: window.monaco.languages.CompletionItemKind.Class,\n          detail: \"A generic CometVisu Mixin.\",\n          insertText: '/**\\n * TODO: Add documentation\\n * \\n * @since ' + cv.Version.VERSION.replace('-dev', '') + ' ($CURRENT_YEAR)\\n */\\nqx.Mixin.define(\"cv.$0\", {\\n  \\n});\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvmembers\",\n          label: 'CometVisu-Class members',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"A CometVisu classes members section.\",\n          insertText: '  /*\\n  ***********************************************\\n    MEMBERS\\n  ***********************************************\\n  */\\n  members: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvproperties\",\n          label: 'CometVisu-Class properties',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"A CometVisu classes properties section.\",\n          insertText: '  /*\\n  ***********************************************\\n    PROPERTIES\\n  ***********************************************\\n  */\\n  properties: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvstatics\",\n          label: 'CometVisu-Class statics',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"statics section.\",\n          insertText: '  /*\\n  ***********************************************\\n    STATICS\\n  ***********************************************\\n  */\\n  statics: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvevents\",\n          label: 'CometVisu-Class events',\n          kind: window.monaco.languages.CompletionItemKind.Struct,\n          detail: \"events section.\",\n          insertText: '  /*\\n  ***********************************************\\n    EVENTS\\n  ***********************************************\\n  */\\n  events: {\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvconstructor\",\n          label: 'Constructor',\n          kind: window.monaco.languages.CompletionItemKind.Method,\n          detail: \"constructor.\",\n          insertText: '  /*\\n  ***********************************************\\n    CONSTRUCTOR\\n  ***********************************************\\n  */\\n  construct: function () {\\n    this.base(arguments);\\n    $0\\n  },\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }, {\n          filterText: \"cvdestructor\",\n          label: 'Destructor',\n          kind: window.monaco.languages.CompletionItemKind.Method,\n          detail: \"destructor.\",\n          insertText: '  /*\\n  ***********************************************\\n    DESTRUCTOR\\n  ***********************************************\\n  */\\n  destruct: function () {\\n    this.base(arguments);\\n    $0\\n  }\\n',\n          insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n        }];\n\n        // load plugin template from backend\n        return new Promise(function (resolve, reject) {\n          cv.io.rest.Client.getFsClient().readSync({path: '.templates/Plugin.js'}, function (err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              this.TEMPLATES.push({\n                filterText: \"cvplugin\",\n                label: 'CometVisu-Plugin',\n                kind: window.monaco.languages.CompletionItemKind.Class,\n                detail: \"A CometVisu class for a plugin.\",\n                insertText: res.replace('###SINCE###', cv.Version.VERSION.replace('-dev', '')+ ' ($CURRENT_YEAR)'),\n                insertTextRules: window.monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet | window.monaco.languages.CompletionItemInsertTextRule.KeepWhitespace\n              });\n              resolve(this.TEMPLATES);\n            }\n          }, this);\n        }.bind(this));\n      }\n      return Promise.resolve(this.TEMPLATES);\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['cv'],\n        provideCompletionItems: function () {\n          // get editor content before the pointer\n          return this.getTemplates().then(function (sugg) {\n            return {suggestions: sugg};\n          });\n        }.bind(this)\n      };\n    }\n  }\n});\n","/**\n *\n */\nqx.Class.define('cv.ui.manager.model.config.Section', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name) {\n    this.base(arguments);\n    this.setName(name);\n    this.initOptions(new qx.data.Array());\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    name: {\n      check: 'String',\n      event: 'changeName',\n      init: ''\n    },\n\n    options: {\n      check: 'qx.data.Array',\n      deferredInit: true,\n      event: 'changeOptions'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    addOption: function(key, value) {\n      var options = this.getOptions();\n      var found = options.some(function (option) {\n        if (option.getKey() === key) {\n          option.setValue(value);\n        }\n      }, this);\n      if (!found) {\n        options.push(new cv.ui.manager.model.config.Option(key, value));\n      }\n    }\n  }\n});\n","/**\n * This widgets shows and editable config section in a list.\n */\nqx.Class.define('cv.ui.manager.form.SectionListItem', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    var grid = new qx.ui.layout.Grid(8, 8);\n    grid.setColumnFlex(1, 1);\n    grid.setColumnAlign(0, 'left', 'top');\n    this._setLayout(grid);\n    this._createChildControl('section-title');\n    this._createChildControl('list');\n    this._createChildControl('delete');\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config-section'\n    },\n\n    model: {\n      check: \"cv.ui.manager.model.config.Section\",\n      nullable: false,\n      apply: '_applyModel'\n    },\n\n    modified:{\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'delete': 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _listController: null,\n    _originalName: null,\n    _originalOptions: null,\n\n    _applyModel: function (value, old) {\n      var nameField = this.getChildControl('name');\n      this.__unbindModel(old);\n      if (value) {\n        value.bind('name', nameField, 'value');\n        this._originalName = value.getName();\n        this._originalOptions = {};\n        value.getOptions().forEach(function (option) {\n          option.addListener('change', this.__checkForModification, this);\n          this._originalOptions[option.getKey()] = option.getValue();\n        }, this);\n        nameField.bind('value', value, 'name');\n        value.addListener('changeName', this.__checkForModification, this);\n        value.bind('options', this._listController, 'model');\n        // add at least one empty entry, when there are no options\n        if (value.getOptions().length === 0) {\n          var emptyOption = new cv.ui.manager.model.config.Option('', '')\n          value.getOptions().push(emptyOption);\n        }\n      } else {\n        this._originalName = null;\n        this._originalOptions = null;\n      }\n    },\n\n    __unbindModel: function (model) {\n      if (model) {\n        var nameField = this.getChildControl('name');\n        if (this._listController) {\n          model.removeRelatedBindings(this._listController);\n        }\n        model.removeListener('changeName', this.__checkForModification, this);\n        model.removeRelatedBindings(nameField);\n        nameField.removeRelatedBindings(model);\n        model.getOptions().forEach(function (option) {\n          option.removeListener('change', this.__checkForModification, this);\n        }, this);\n      }\n    },\n\n    __checkForModification: function () {\n      if (this._originalName !== this.getModel().getName()) {\n        this.setModified(true);\n        return;\n      }\n      // check if the still have the same the same amount of options\n      if (Object.keys(this._originalOptions).length !== this.getModel().getOptions().length) {\n        this.setModified(true);\n        return;\n      }\n      // compare options one by one\n      var modified = this.getModel().getOptions().some(function (option) {\n        return (!this._originalOptions.hasOwnProperty(option.getKey()) ||\n          this._originalOptions[option.getKey()] !== option.getValue()\n        );\n      }, this);\n      this.setModified(modified);\n    },\n\n    _onDeleteOption: function (ev) {\n      var option = ev.getData();\n      var options = this.getModel().getOptions();\n      if (options.length === 1) {\n        // do not delete the last option, just reset its values\n        option.resetKey();\n        option.resetValue();\n      } else {\n        var removed = this.getModel().getOptions().remove(option);\n        if (removed) {\n          removed.removeListener('change', this.__checkForModification, this);\n        }\n      }\n      this.__checkForModification();\n    },\n\n    _onAddOption: function () {\n      var option = new cv.ui.manager.model.config.Option('', '');\n      option.addListener('change', this.__checkForModification, this);\n      this.getModel().getOptions().push(option);\n      this.__checkForModification();\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'section-title':\n           control = new qx.ui.basic.Label(this.tr('Section'));\n           this._add(control, {row: 0, column: 0});\n           break;\n\n         case 'name':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true,\n             required: true\n           });\n           this._add(control, {row: 0, column: 1});\n           break;\n\n         case 'delete':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('delete', 22));\n           control.setToolTipText(this.tr('Delete section'));\n           control.addListener('execute', function() {\n             this.fireDataEvent('delete', this.getModel());\n           }, this);\n           this._add(control, {row: 0, column: 2});\n           break;\n\n         case 'list':\n           control = new qx.ui.form.List();\n           control.setEnableInlineFind(false);\n           this._listController = new qx.data.controller.List(null, control);\n           this._listController.setNullValueTitle('header');\n           this._listController.setAllowNull(true);\n           this._listController.setDelegate({\n             createItem: function () {\n               return new cv.ui.manager.form.OptionListItem();\n             },\n             configureItem: function (item) {\n               item.addListener('delete', this._onDeleteOption, this);\n               item.addListener('add', this._onAddOption, this);\n             }.bind(this),\n             bindItem: function (controller, item, index) {\n               controller.bindProperty('', 'model', null, item, index);\n             }\n           });\n           this._add(control, {row: 1, column: 1});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._disposeObjects('_listController');\n  }\n});\n","/**\n * QX version of the svg use icon way of displaying the KNF-UF icons.\n */\nqx.Class.define('cv.ui.manager.viewer.SvgIcon', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (name) {\n    this.base(arguments);\n    if (name) {\n      this.setName(name);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    name: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyName'\n    },\n\n    appearance: {\n      refine: true,\n      init: 'cv-svg-icon'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __spriteUrl: null,\n    __useElement: null,\n\n    _applyName: function (value) {\n      if (value) {\n        if (!this.__spriteUrl) {\n          this.__spriteUrl = qx.util.ResourceManager.getInstance().toUri('icon/knx-uf-iconset.svg');\n        }\n        if (!this.__useElement.getDomElement()) {\n          this.__useElement.addListenerOnce('appear', function () {\n            this._applyName(value);\n          }, this);\n          return;\n        }\n        // qx.xml.Element.setAttributeNS(document, this.__useElement.getDomElement(), 'http://www.w3.org/1999/xlink', 'xlink:href', this.__spriteUrl + '#kuf-' + value);\n        this.__useElement.getDomElement().setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', this.__spriteUrl + '#kuf-' + value);\n      } else {\n        this.__useElement.removeAttribute('xlink:href');\n      }\n    },\n\n    // overridden\n    _createContentElement : function() {\n      var svgElem = new cv.svg.Element('svg');\n      this.__useElement = new cv.svg.Element('use');\n      svgElem.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n      svgElem.add(this.__useElement);\n      return svgElem;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__useElement = null;\n  }\n});\n","/**\n * Wrapper class for all data providers.\n */\nqx.Class.define('cv.ui.manager.editor.data.Provider', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__cache = {};\n    this._client = cv.io.rest.Client.getDataProviderClient();\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __cache: null,\n\n    _getFromCache: function (cacheId) {\n      return this.__cache[cacheId];\n    },\n\n    __clearFromCache: function (cacheId) {\n      if (!cacheId) {\n        this.__cache = {};\n      } else {\n        delete this.__cache[cacheId];\n      }\n    },\n\n    _addToCache: function (cacheId, data) {\n      this.__cache[cacheId] = data;\n    },\n\n    /**\n     * Returns the available design names as array of suggestions.\n     * @returns {Promise<Array>} suggestions\n     */\n    getDesigns: function () {\n      return this.__getData('designs', 'designsSync', null,[], function (res) {\n        return res.map(function (designName) {\n          return {\n            label: designName,\n            insertText: designName,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    /**\n     *\n     * @param cacheId {String}\n     * @param rpc {String|Function} rpcname to use with this._client or function to call\n     * @param rpcContext {Object} rpc context\n     * @param args {Array} rpc arguments\n     * @param converter {Function} converter that converts the response to suggestions for the text editor\n     * @param converterContext {Object} context fot the converter function\n     * @returns {Promise<any>}\n     * @private\n     */\n    __getData: function (cacheId, rpc, rpcContext, args, converter, converterContext) {\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return Promise.resolve(converter.call(converterContext || this, cached));\n      } else {\n        return new Promise(function (resolve, reject) {\n          var handleResponse = function (err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              // cache the raw values not the converted ones\n              this._addToCache(cacheId, res);\n              resolve(converter.call(converterContext || this, res));\n            }\n          };\n          if (!args) {\n            args = [handleResponse, this];\n          } else {\n            args.push(handleResponse);\n            args.push(this);\n          }\n          if (qx.lang.Type.isString(rpc)) {\n            this._client[rpc].apply(rpcContext || this._client, args);\n          } else if (qx.lang.Type.isFunction(rpc)) {\n            rpc.apply(rpcContext, args);\n          }\n        }.bind(this));\n      }\n    },\n\n    getRrds: function () {\n      return this.__getData('rrds', 'rrdsSync', null,[], this._parseDpResponse, this);\n    },\n\n    getInfluxDBs: function () {\n      return this.__getData('influxdbs', 'influxdbsSync', null,[], this._parseDpResponse, this);\n    },\n\n    getInfluxDBFields: function (measurement) {\n      return this.__getData('influxdbfields|' + measurement, 'influxdbfieldsSync', null,[{measurement: measurement}], this._parseDpResponse, this);\n    },\n\n    getInfluxDBTags: function (measurement) {\n      return this.__getData('influxdbtags|' + measurement, 'influxdbtagsSync', null,[{measurement: measurement}], function (res) {\n        return Object.keys(res).map(function (x) {\n          return {\n            label: x,\n            insertText: x,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    getInfluxDBValues: function (measurement, tag) {\n      return this.__getData('influxdbtags|' + measurement, 'influxdbtagsSync', null,[{measurement: measurement}], function (res) {\n        var sug = [];\n        res[tag].forEach(function (x) {\n          sug.push({\n            label: x,\n            insertText: x,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          });\n        });\n        return sug;\n      }, this);\n    },\n\n    _parseDpResponse: function (data) {\n      var target = [];\n      data.forEach(function (entry) {\n        target.push({\n          label: entry.label,\n          insertText: entry.value,\n          kind: window.monaco.languages.CompletionItemKind.EnumMember\n        });\n      }, this);\n      return target;\n    },\n\n    getMediaFiles: function (typeFilter) {\n      var fsClient = cv.io.rest.Client.getFsClient();\n      return this.__getData('media', fsClient.readSync, fsClient,[{path: 'media', recursive: true}], function (res) {\n        return res.filter(function (file) {\n          return !typeFilter || file.name.endsWith('.' + typeFilter);\n        }).map(function (file) {\n          var path = file.parentFolder + file.name;\n          return {\n            label: path,\n            insertText: path,\n            kind: window.monaco.languages.CompletionItemKind.EnumMember\n          };\n        });\n      }, this);\n    },\n\n    /**\n     * Returns the list of available transformations as suggestion entry array.\n     * @returns {Array}\n     */\n    getTransforms: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'transforms|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var transforms = [];\n        Object.keys(cv.Transform.registry).forEach(function (key) {\n          var entry = cv.Transform.registry[key];\n          var suggestion;\n          if (format === 'dp') {\n            suggestion = {\n              label: entry.name + ' [' + key + ']',\n              value: key\n            };\n          } else {\n            suggestion = {\n              label: key,\n              insertText: key,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n            if (entry.lname && entry.lname.hasOwnProperty(qx.locale.Manager.getInstance().getLanguage())) {\n              suggestion.detail = entry.lname[qx.locale.Manager.getInstance().getLanguage()];\n            }\n          }\n          transforms.push(suggestion);\n        }, this);\n        this._addToCache(cacheId, transforms);\n        return transforms;\n      }\n    },\n\n    /**\n     * Returns the plugin names (all defined parts staring with 'plugin-')\n     * @returns {Array}\n     */\n    getPlugins: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'plugins|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var plugins = [];\n        var qxParts = qx.io.PartLoader.getInstance().getParts();\n        Object.keys(qxParts).forEach(function (partName) {\n          if (partName.startsWith('plugin-')) {\n            var pluginName = partName.substring(7);\n            if (format === 'dp') {\n              plugins.push({\n                label: pluginName,\n                value: pluginName\n              });\n            } else {\n              plugins.push({\n                label: pluginName,\n                insertText: pluginName,\n                kind: window.monaco.languages.CompletionItemKind.EnumMember\n              });\n            }\n          }\n        }, this);\n        this._addToCache(cacheId, plugins);\n        return plugins;\n      }\n    },\n\n    getIcons: function (format) {\n      if (!format) {\n        format = 'monaco';\n      }\n      var cacheId = 'icons|' + format;\n      var cached = this._getFromCache(cacheId);\n      if (cached) {\n        return cached;\n      } else {\n        var icons;\n        if (format === 'monaco') {\n          icons = Object.keys(cv.IconConfig.DB).map(function (iconName) {\n            return {\n              label: iconName,\n              insertText: iconName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          });\n        } else if (format === 'dp') {\n          // dataprovider format\n          icons = Object.keys(cv.IconConfig.DB).map(function (iconName) {\n            return {\n              label: iconName,\n              value: iconName\n            };\n          });\n        }\n        this._addToCache(cacheId, icons);\n        return icons;\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__cache = null;\n  }\n});\n","/**\n * Simple config entry.\n */\nqx.Class.define('cv.ui.manager.model.config.Option', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (key, value) {\n    this.base(arguments);\n    this.setKey(key);\n    this.setValue(value);\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    // sent whenever the options key or value has been changed\n    'change': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    key: {\n      check: 'String',\n      init: '',\n      event: 'changeKey',\n      apply: '_applyChange'\n    },\n\n    value: {\n      check: 'String',\n      init: '',\n      event: 'changeValue',\n      apply: '_applyChange'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyChange: function () {\n      this.fireEvent('change');\n    }\n  }\n});\n","/**\n * This widgets shows and editable config option in a list.\n */\nqx.Class.define('cv.ui.manager.form.OptionListItem', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.HBox(8));\n    this._createChildControl('key');\n    this._createChildControl('value');\n    this._createChildControl('key-title');\n    this._createChildControl('value-title');\n    this._createChildControl('delete');\n    this._createChildControl('add');\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-editor-config-option'\n    },\n\n    model: {\n      check: \"cv.ui.manager.model.config.Option\",\n      nullable: true,\n      apply: '_applyModel'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'delete': 'qx.event.type.Data',\n    'add': 'qx.event.type.Event'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    // list controller with allowNull calls setLabel\n    setLabel: function (label) {\n\n    },\n\n    // list controller with allowNull calls setIcon\n    setIcon: function () {},\n\n    _applyModel: function (value, old) {\n      var keyField = this.getChildControl('key');\n      var valueField = this.getChildControl('value');\n      var keyTitleField = this.getChildControl('key-title');\n      var valueTitleField = this.getChildControl('value-title');\n      this.__unbindModel(old);\n      if (value) {\n        // bi-directional bind\n        value.bind('key', keyField, 'value');\n        value.bind('value', valueField, 'value');\n        keyField.bind('value', value, 'key');\n        valueField.bind('value', value, 'value');\n        keyField.show();\n        valueField.show();\n        keyTitleField.exclude();\n        valueTitleField.exclude();\n        this.getChildControl('delete').show();\n        this.getChildControl('add').show();\n      } else {\n        keyField.exclude();\n        valueField.exclude();\n        keyTitleField.show();\n        valueTitleField.show();\n        this.getChildControl('delete').hide();\n        this.getChildControl('add').hide();\n      }\n    },\n\n    __unbindModel: function (model) {\n      if (model) {\n        var keyField = this.getChildControl('key');\n        var valueField = this.getChildControl('value');\n        if (model) {\n          model.removeRelatedBindings(keyField);\n          model.removeRelatedBindings(valueField);\n          keyField.removeRelatedBindings(model);\n          valueField.removeRelatedBindings(model);\n        }\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n       var control;\n\n       switch (id) {\n         case 'key':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true,\n             required: true\n           });\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'value':\n           control = new qx.ui.form.TextField();\n           control.set({\n             liveUpdate: true\n           });\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'delete':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('delete', 22));\n           control.setToolTipText(this.tr('Delete option'));\n           control.addListener('execute', function() {\n             this.fireDataEvent('delete', this.getModel());\n           }, this);\n           this._add(control);\n           break;\n\n         case 'add':\n           control = new qx.ui.form.Button(null, cv.theme.dark.Images.getIcon('add', 18));\n           control.setToolTipText(this.tr('Add option'));\n           control.addListener('execute', function() {\n             this.fireEvent('add');\n           }, this);\n           this._add(control);\n           break;\n\n         case 'key-title':\n           control = new qx.ui.basic.Label(this.tr('Key'));\n           control.exclude();\n           this._add(control, {width: '40%'});\n           break;\n\n         case 'value-title':\n           control = new qx.ui.basic.Label(this.tr('Value'));\n           control.exclude();\n           this._add(control, {width: '40%'});\n           break;\n       }\n\n       return control || this.base(arguments, id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__unbindModel(this.getModel());\n  }\n});\n"]}