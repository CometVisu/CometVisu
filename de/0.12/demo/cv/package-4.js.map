{"version":3,"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/ColorChooser.js"],"names":["qx","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","Update","Operate","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","parseFormat","parseAddress","makeAddressListFn","src","transform","mode","variant","properties","valueR","check","init","valueG","valueB","busR","busG","busB","rateLimiter","members","__P_9_0","_onDomReady","plugins","ColorChooser","prototype","base","call","$actor","farbtastic","color","setValueR","parseInt","substring","setValueG","setValueB","_rateLimitedSend","bind","v","modified","address","getAddress","r","getValueR","g","getValueG","b","getValueB","br","getBusR","bg","getBusG","bb","getBusB","templateEngine","TemplateEngine","getInstance","Model","isWriteAddress","addr","Transform","encode","visu","write","rgb","Map","brgb","setBusR","setBusG","setBusB","setRateLimiter","__P_9_1","event","Timer","once","_getInnerDomString","_update","ga","undefined","jQuery","getActor","value","toHex","get","stop","x","toString","length","defer","loader","util","ScriptLoader","addStyles","addScripts","WidgetFactory","registerClass","destruct","__P_9_2","$$dbClassInfo"],"mappings":"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","sourcesContent":["/* ColorChooser.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n *\n * @since 0.5.2\n * @author Christian Mayer [CometVisu at ChristianMayer dot de]\n *\n * @asset(plugins/colorchooser/farbtastic/farbtastic.js)\n * @asset(plugins/colorchooser/farbtastic/farbtastic.css)\n * @asset(plugins/colorchooser/farbtastic/wheel.png)\n * @asset(plugins/colorchooser/farbtastic/mask.png)\n * @asset(plugins/colorchooser/farbtastic/marker.png)\n */\nqx.Class.define('cv.plugins.ColorChooser', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Update, cv.ui.common.Operate],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n      return data;\n    },\n\n    makeAddressListFn: function (src, transform, mode, variant) {\n      return [true, variant];\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    valueR: {\n      check: 'Number',\n      init: 0\n    },\n    valueG: {\n      check: 'Number',\n      init: 0\n    },\n    valueB: {\n      check: 'Number',\n      init: 0\n    },\n    busR: {\n      check: 'Number',\n      init: 0\n    },\n    busG: {\n      check: 'Number',\n      init: 0\n    },\n    busB: {\n      check: 'Number',\n      init: 0\n    },\n    rateLimiter: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __skipSending: false,\n\n    _onDomReady: function () {\n      this.base(arguments);\n      const $actor = $('#' + this.getPath() + ' .actor');\n      $actor.farbtastic(function (color) {\n        this.setValueR(parseInt(color.substring(1, 3), 16) * 100 / 255.0);\n        this.setValueG(parseInt(color.substring(3, 5), 16) * 100 / 255.0);\n        this.setValueB(parseInt(color.substring(5, 7), 16) * 100 / 255.0);\n\n        if (this.getRateLimiter() === false && this.__skipSending === false) { // already requests going?\n          this._rateLimitedSend($actor);\n        }\n      }.bind(this));\n    },\n\n    _rateLimitedSend: function () {\n      let modified = false;\n      const address = this.getAddress();\n      const r = this.getValueR();\n      const g = this.getValueG();\n      const b = this.getValueB();\n      const br = this.getBusR();\n      const bg = this.getBusG();\n      const bb = this.getBusB();\n      let v;\n      const templateEngine = cv.TemplateEngine.getInstance();\n      for (let addr in address) {\n        if (!cv.data.Model.isWriteAddress(address[addr])) {\n          continue;\n        } // skip when write flag not set\n        switch (address[addr].variantInfo) {\n          case 'r':\n            v = cv.Transform.encode(address[addr].transform, r);\n            if (v !== cv.Transform.encode(address[addr].transform, br)) {\n              templateEngine.visu.write(addr, v);\n              modified = true;\n            }\n            break;\n          case 'g':\n            v = cv.Transform.encode(address[addr].transform, g);\n            if (v !== cv.Transform.encode(address[addr].transform, bg)) {\n              templateEngine.visu.write(addr, v);\n              modified = true;\n            }\n            break;\n          case 'b':\n            v = cv.Transform.encode(address[addr].transform, b);\n            if (v !== cv.Transform.encode(address[addr].transform, bb)) {\n              templateEngine.visu.write(addr, v);\n              modified = true;\n            }\n            break;\n          case 'rgb': {\n            const rgb = new Map([['r', r], ['g', g], ['b', b]]);\n            const brgb = new Map([['r', br], ['g', bg], ['b', bb]]);\n            v = cv.Transform.encode(address[addr].transform, rgb);\n            const bv = cv.Transform.encode(address[addr].transform, brgb);\n            if (v !== bv) {\n              templateEngine.visu.write(addr, v);\n              modified = true;\n            }\n            break;\n          }\n        }\n      }\n\n      if (modified) {\n        this.setBusR(this.getValueR());\n        this.setBusG(this.getValueG());\n        this.setBusB(this.getValueB());\n        this.setRateLimiter(true);\n        this.__timer = qx.event.Timer.once(this._rateLimitedSend, this, 250); // next call in 250ms\n      } else {\n        this.setRateLimiter(false);\n      }\n    },\n\n    _getInnerDomString: function () {\n      return '<div class=\"actor\"></div>';\n    },\n\n    _update: function (ga, data) {\n      if (ga === undefined) {\n        return;\n      }\n\n      /**\n       * @param x\n       */\n      function toHex(x) {\n        const r = parseInt(x).toString(16);\n        return r.length === 1 ? '0' + r : r;\n      }\n\n      const value = cv.Transform.decode(this.getAddress()[ga].transform, data);\n      const farbtastic = jQuery.farbtastic(this.getActor());\n      let color = farbtastic.color || '#000000';\n\n      switch (this.getAddress()[ga].variantInfo) {\n        case 'r':\n          this.setBusR(value);\n          color = color.substring(0, 1) +\n            toHex(value * 255 / 100) +\n            color.substring(3);\n          break;\n\n        case 'g':\n          this.setBusG(value);\n          color = color.substring(0, 3) +\n            toHex(value * 255 / 100) +\n            color.substring(5);\n          break;\n\n        case 'b':\n          this.setBusB(value);\n          color = color.substring(0, 5) +\n            toHex(value * 255 / 100) +\n            color.substring(7);\n          break;\n        case 'rgb':\n          this.setBusR(value.get('r'));\n          this.setBusG(value.get('g'));\n          this.setBusB(value.get('b'));\n          color = color.substring(0, 1) +\n            toHex(value.get('r') * 255 / 100) +\n            toHex(value.get('g') * 255 / 100) +\n            toHex(value.get('b') * 255 / 100) +\n            color.substring(7);\n          break;\n      }\n      this.__skipSending = true;\n      if (this.__timer) {\n        this.__timer.stop();\n        this.__timer = null;\n        this.setRateLimiter(false);\n      }\n      farbtastic.setColor(color);\n      this.__skipSending = false;\n    }\n  },\n\n  defer: function (statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/colorchooser/farbtastic/farbtastic.css');\n    loader.addScripts('plugins/colorchooser/farbtastic/farbtastic.js');\n    // register the parser\n    cv.parser.WidgetParser.addHandler('colorchooser', statics);\n    cv.ui.structure.WidgetFactory.registerClass('colorchooser', statics);\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__farbtastic = null;\n  }\n});\n"]}