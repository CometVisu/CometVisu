{"version":3,"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Timeout.js"],"names":["qx","Class","define","extend","cv","ui","structure","AbstractBasicWidget","construct","props","constructor","call","this","__P_16_0","statics","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","target","default","time","transform","parseFloat","debug","value","properties","check","init","members","__P_16_2","__P_16_3","__P_16_4","__P_16_5","__P_16_1","isDebug","getTime","getTarget","event","Timer","deltaT","ev","getData","document","querySelector","innerText","_onUserAction","timeoutTrigger","templateEngine","TemplateEngine","getInstance","getCurrentPage","getDomElement","scrollTop","destruct","_disposeObjects","defer","addHandler","plugins","Timeout","WidgetFactory","registerClass","$$dbClassInfo"],"mappings":"0WAyBCA,GAAAC,MAAAC,OAAA,sBACCC,OAAOC,GAAAC,GAAOC,UAAAC,oBAOfC,UAAA,SAAAC,GACCL,GAAAC,GAAAC,UAAWC,oBAAgBG,YAAAC,KAAAC,KAAAH,GACzBG,KAAAC,SAAA,mBAUHC,SAWAC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,OAAOf,GAAAgB,OAAAC,aAAAC,aAA8BV,KAA9BI,EAAwCC,EAAAC,EAAAC,EAAAP,KAAAW,mCAE9CA,+BAbM,WAeP,OACEC,QACEC,QAAU,OAAAC,MACVD,QAAQ,IAAEE,UAAWC,YAAbC,OACRJ,SAAS,EACPE,UAAW,SADJG,GAEP,MAAW,SAAFA,OAYlBC,YACCP,QACEQ,MAAQ,SACNC,KAAK,OADCP,MAIRM,MAAM,SACJC,KAAK,KADDJ,OAING,MAAO,UACLC,MAAK,IAUVC,SACCrB,SAAS,KACPsB,SAAoB,KACpBC,SAAsB,KACtBC,SAA2B,KAC3BC,SAAqB,KACrBC,SAAS,WAET,GAAA3B,KAAc4B,UAAA,CACZ5B,KAAIiB,MAAK,oBAAWjB,KAAA6B,WAClB7B,KAAKiB,MAAM,gBAAAjB,KAAsB8B,sCAInC9B,KAAM0B,SAAS,IAAKtC,GAAA2C,MAALC,MAAfC,qOASE,IAAC5B,EAAM6B,EAATC,UACEnC,KAAMuB,SAAUlB,EAChBL,KAAKwB,SAAuBY,SAA5BC,cAAA,IAAAhC,EAAA,aAAAiC,UACAtC,KAAKC,SAA4B,GAQxCD,OAGIuC,cApCM,WAsCPvC,KAAAC,SAAe,GAEduC,eAxCM,WA0CPxC,KAAA4B,WACE5B,KAAIiB,MAAK,yBAAWjB,KAAAC,SAAA,qBAGpBD,KAAKyB,SAALzB,KAAA8B,kCAEA9B,KAAIC,SAAA,EACF,IAAAwC,EAAAjD,GAAAkD,eAAAC,+EAGI3C,KAAK4B,WACP5B,KAAIiB,MAAK,wCAAWjB,KAAAyB,wCAGpBgB,EAAeG,iBAAaC,gBAA5BC,UAAA,MACA,CALF9C,KAOO4B,WACL5B,KAAIiB,MAAK,4BAAWjB,KAAAyB,6DAa7BsB,SAAA,WACC/C,KAAAgD,gBAAU,aAETC,MAvJmC,SAAA/C,GA0JpCV,GAAKgB,OAAEC,aAASyC,WAAS,UAAA1D,GAAA2D,QAAAC,SACvB5D,GAAGC,GAAAC,UAAO2D,cAAaC,cAAvB,UAA6CpD,MA3JXV,GAArC2D,QAAAC,QAAAG,cAAAA","sourcesContent":["/* Timeout.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins jumps back to a defined page after a given timeout period\n *\n * @author Carsten Tschach (Carsten@Tschach.com)\n * @since 2012\n */\nqx.Class.define('cv.plugins.Timeout', {\n  extend: cv.ui.structure.AbstractBasicWidget,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    this.base(arguments, props);\n    this.__timeoutIdleCount = 0;\n    this.__initialize();\n  },\n\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'target': { 'default': 'id_' },\n        'time': { 'default': 600, transform: parseFloat },\n        'debug': {\n          'default': false,\n          transform: function(value) {\n            return value === 'true';\n          }\n        }\n      };\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    target: {\n      check: 'String',\n      init: 'id_'\n    },\n    time: {\n      check: 'Number',\n      init: 600\n    },\n    debug: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __timeoutIdleCount: null,\n    __timeoutCurrentPage: null,\n    __timeoutCurrentPageTitle: null,\n    __timeoutTargetPage: null,\n    __timer: null,\n\n    __initialize: function () {\n      if (this.isDebug()) {\n        this.debug('Timeout Set to : ' + this.getTime());\n        this.debug('Target Page: ' + this.getTarget());\n      }\n\n      const deltaT = this.getTime() * 100;\n      this.__timer = new qx.event.Timer(deltaT);\n      this.__timer.addListener('interval', this.timeoutTrigger, this);\n      this.__timer.start();\n\n      // Reset Counter on every interaction\n      qx.event.Registration.addListener(window, 'useraction', this._onUserAction, this);\n\n      // Keep track of current page\n      qx.event.message.Bus.subscribe('path.pageChanged', function (ev) {\n        const path = ev.getData();\n        this.__timeoutCurrentPage = path;\n        this.__timeoutCurrentPageTitle = document.querySelector('#' + path+ ' div > h1').innerText;\n        this.__timeoutIdleCount = 0;\n        /* We could trun on and off the above binds if we are already on the right page\n\n         if (timeoutCurrentPage === timeoutTargetPage) {\n         console.log(\"XXXXXX TIMEOUT: Scrolled to Target Page: \" + path);\n         } else {\n         console.log(\"XXXXXX TIMEOUT: Scrolled to: \" + path + \" (\"+timeoutTargetPage + \")\");\n         }\n         */\n      }, this);\n    },\n\n    _onUserAction: function() {\n      this.__timeoutIdleCount = 0;\n    },\n\n    timeoutTrigger: function () {\n      if (this.isDebug()) {\n        this.debug('TIMEOUT: Got Trigger (' + this.__timeoutIdleCount + ')');\n      }\n      this.__timeoutIdleCount++;\n      this.__timeoutTargetPage = this.getTarget();\n      if (this.__timeoutIdleCount >= 10) {\n        this.__timeoutIdleCount = 0;\n        const templateEngine = cv.TemplateEngine.getInstance();\n\n        if (this.__timeoutCurrentPage !== this.__timeoutTargetPage && this.__timeoutCurrentPageTitle !== this.__timeoutTargetPage) {\n          if (this.isDebug()) {\n            this.debug('TIMEOUT: Got Timeout - Now Goto Page ' + this.__timeoutTargetPage);\n          }\n          templateEngine.scrollToPage(this.__timeoutTargetPage);\n          templateEngine.getCurrentPage().getDomElement().scrollTop = 0;\n          //templateEngine.updateTopNavigation();\n        } else {\n          if (this.isDebug()) {\n            this.debug('TIMEOUT: Already on page ' + this.__timeoutTargetPage);\n          }\n          templateEngine.getCurrentPage().getDomElement().scrollTop = 0;\n        }\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects('__timer');\n  },\n\n\n  defer: function(statics) {\n    cv.parser.WidgetParser.addHandler('timeout', cv.plugins.Timeout);\n    cv.ui.structure.WidgetFactory.registerClass('timeout', statics);\n  }\n\n});\n\n"]}