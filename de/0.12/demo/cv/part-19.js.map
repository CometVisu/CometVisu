{"version":3,"sources":["../../../source/class/cv/plugins/UpnpController.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","Refresh","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseRefresh","debug","target","transform","value","label","player_ip_addr","player_port","parseInt","uniqid","Date","getTime","properties","traceFlag","check","init","playerIp","nullable","playerPort","members","upnpcontroller_uid","upnpcontroller_song_process_rel","_getInnerDomString","id","plugins","UpnpController","controller","_onDomReady","prototype","base","call","refreshUpnpcontroller","initListeners","Reg","event","Registration","addListener","document","querySelector","toggleMute","togglePlay","callNext","callPrev","callvolumedown","callvolumeup","callgetplaylists","_setupRefreshAction","getRefresh","_timer","Timer","start","getPlayerIp","getPlayerPort","traceLog","isTraceFlag","__callRemote","ev","getTarget","getResponse","JSON","volume","reltimeResponse","durationResponse","title","__updateController","muteState","transportState","artist","album","e","error","mute","playMode","reltime","duration","classList","replace","innerText","calculateSongProcessed","setAttribute","type","callback","req","io","request","Xhr","util","ResourceManager","getInstance","toUri","Object","assign","port","set","requestData","accept","method","send","undefined","durationParts","split","secondsTotal","Number","reltimeParts","secondsProcessed","Math","floor","currentValue","getAttribute","playlists","totalMatches","i","playLists","length","urlenc","name","url","innerHTML","currentVolume","muteButton","muteValue","cmd","playValue","playButton","msg","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass"],"mappings":"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","sourcesContent":["/* UpnpController.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n//noinspection JSUnusedGlobalSymbols\n/**\n * @author Mark K. [mr dot remy at gmx dot de]\n * @since 2012\n * @asset(plugins/upnpcontroller/upnpcontroller.css)\n * @asset(plugins/upnpcontroller/*.php)\n */\nqx.Class.define('cv.plugins.UpnpController', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Refresh],\n  \n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'debug': {\n          target: \"traceFlag\",\n          transform: function(value) {\n            return value === \"true\";\n          }\n        },\n        'label': {},\n        'player_ip_addr': { target: \"playerIp\" },\n        'player_port': {\n          target: \"playerPort\",\n          transform: function(value) {\n            return value ? parseInt(value) : 1440;\n          }\n        }\n      };\n    },\n\n    uniqid: function() {\n      var newDate = new Date();\n      return newDate.getTime();\n    }\n  },\n  \n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    traceFlag: {\n      check: \"Boolean\",\n      init: false\n    },\n    playerIp: {\n      check: \"String\",\n      nullable: true\n    },\n    playerPort: {\n      check: \"Number\",\n      init: 1440\n    }\n  },\n  \n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    upnpcontroller_uid: null,\n    upnpcontroller_song_process_rel: null,\n\n    _getInnerDomString: function () {\n      var id = \"upnpcontroller_\" + this.self(arguments).uniqid();\n      this.upnpcontroller_uid = id;\n      var ret_val = \"<div class=\\\"actor\\\"><div class=\\\"upnpcontroller\\\" id=\\\"\" + id + \"\\\">\";\n      var controller = \"<div>\";\n      controller += \"<div id='\" + id + \"_title' class='upnplabelgroup'><div class='upnplabel'>Title</div><div class='value'>-</div></div>\";\n      controller += \"<div id='\" + id + \"_artist' class='upnplabelgroup'><div class='upnplabel'>Artist</div><div class='value'>-</div></div>\";\n      controller += \"<div id='\" + id + \"_album' class='upnplabelgroup'><div class='upnplabel'>Album</div><div class='value'>-</div></div>\";\n      controller += \"<div id='\" + id + \"_time' class='upnplabelgroup'><div class='upnplabel'></div><div class='value'>-</div></div>\";\n      controller += \"<div style='float: left;'><progress id='\" + id + \"_progress'  max='100' value='0'></progress></div>\";\n      controller += \"<div style='float: left;'><div id='\" + id + \"_volumedown' class='actor center switchUnpressed'><div class='value'>-</div></div>\" +\n        \"<div id='\" + id + \"_volume' class='actor center switchInvisible' style='text-align: center;'><div class='value'>20</div></div>\" +\n        \"<div id='\" + id + \"_volumeup' class='actor center switchUnpressed'><div class='value'>+</div></div></div>\";\n      controller += \"<div style='float: left;'><div id='\" + id + \"_playButton' class='actor switchUnpressed center'><div class='value'>-</div></div>\" +\n        \"<div id='\" + id + \"_muteButton' class='actor switchUnpressed center'><div class='value'>-</div></div></div>\";\n      controller += \"<div style='float: left;'><div id='\" + id + \"_prev' class='actor switchUnpressed center'><div class='value'>prev</div></div>\" +\n        \"<div id='\" + id + \"_next' class='actor switchUnpressed center'><div class='value'>next</div></div></div>\";\n      controller += \"<div style='float: left;'><div id='\" + id + \"_getplaylists' class='actor switchUnpressed center'><div class='value'>play lists</div></div></div>\";\n      controller += \"<div style='float: left;'><div id='\" + id + \"_playlistsresult'><div class='value'></div></div></div>\";\n\n      controller += \"</div>\";\n      return ret_val + controller;\n    },\n\n    _onDomReady: function () {\n      this.base(arguments);\n      this.refreshUpnpcontroller();\n    },\n\n    /**\n     * Initialize the event listeners\n     */\n    initListeners: function () {\n      var Reg = qx.event.Registration;\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_muteButton\"), \"tap\", this.toggleMute, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_playButton\"), \"tap\", this.togglePlay, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_next\"), \"tap\", this.callNext, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_prev\"), \"tap\", this.callPrev, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_volumedown\"), \"tap\", this.callvolumedown, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_volumeup\"), \"tap\", this.callvolumeup, this);\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + \"_getplaylists\"), \"tap\", this.callgetplaylists, this);\n    },\n\n    _setupRefreshAction: function () {\n      if (this.getRefresh() && this.getRefresh() > 0) {\n        this._timer = new qx.event.Timer(this.getRefresh());\n        this._timer.addListener(\"interval\", function () {\n          this.refreshUpnpcontroller();\n        }, this);\n        this._timer.start();\n      }\n    },\n\n    refreshUpnpcontroller: function () {\n      var playerIp = this.getPlayerIp();\n      var playerPort = this.getPlayerPort();\n\n      this.traceLog(\"debug     : \" + this.isTraceFlag());\n      this.traceLog(\"playerIp  : \" + playerIp);\n      this.traceLog(\"playerPort: \" + playerPort);\n\n      this.__callRemote('status', {}, function (ev) {\n        var data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n          this.traceLog(\"volume          : \" + data.volume);\n          this.traceLog(\"reltime         : \" + data.reltimeResponse);\n          this.traceLog(\"durationResponse: \" + data.durationResponse);\n          this.traceLog(\"title           : \" + data.title);\n\n          this.__updateController(data.volume, data.muteState, data.transportState, data.title,\n            data.reltimeResponse, data.durationResponse, data.artist, data.album);\n        } catch (e) {\n          this.error(e);\n        }\n      });\n    },\n\n    __updateController: function (volume, mute, playMode, title, reltime, duration, artist, album) {\n      var id = this.upnpcontroller_uid;\n\n      if (mute === 0) {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchPressed','switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchUnpressed','switchPressed');\n      }\n\n      if (playMode === 'Play') {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchPressed','switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchUnpressed','switchPressed');\n      }\n\n      document.querySelector('#' + id + '_muteButton div.value').innerText = mute;\n      document.querySelector('#' + id + '_playButton div.value').innerText = playMode;\n      document.querySelector('#' + id + '_volume div.value').innerText = volume;\n      document.querySelector('#' + id + '_title div.value').innerText = title;\n      document.querySelector('#' + id + '_artist div.value').innerText = artist;\n      document.querySelector('#' + id + '_album div.value').innerText = album;\n      document.querySelector('#' + id + '_time div.value').innerText = reltime + ' of ' + duration;\n\n      this.upnpcontroller_song_process_rel = this.calculateSongProcessed(reltime, duration);\n      this.traceLog(\"song_process_rel: \" + this.upnpcontroller_song_process_rel);\n      document.querySelector('#' + id + '_progress').setAttribute(\"value\", this.upnpcontroller_song_process_rel);\n    },\n\n    /**\n     * Internal helper method for remote calls to backend UPNP controller scripts\n     * @param type {String} type of backend controller\n     * @param data {Map|null} additional data to send to the backend\n     * @param callback {Function} callback that should be called in success\n     */\n    __callRemote: function (type, data, callback) {\n      var req = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri(\"plugins/upnpcontroller/\" + type + \".php\"));\n      if (!data) {\n        data = {};\n      }\n      data = Object.assign(data, {\n        player_ip_addr: this.getPlayerIp(),\n        port: this.getPlayerPort()\n      });\n      req.set({\n        requestData: data,\n        accept: \"application/json\",\n        method: \"GET\"\n      });\n      req.addListener(\"success\", callback, this);\n      req.send();\n    },\n\n    calculateSongProcessed: function (reltime, duration) {\n      if (reltime === undefined || duration === undefined) { return; }\n      this.traceLog(\"calculateSongProcessed\");\n\n      var durationParts = duration.split(':');\n      var secondsTotal = Number(durationParts[2]) + Number(durationParts[1]) * 60 + Number(durationParts[0]) * 60 * 60;\n      var reltimeParts = reltime.split(':');\n      var secondsProcessed = Number(reltimeParts[2]) + Number(reltimeParts[1]) * 60 + Number(reltimeParts[0]) * 60 * 60;\n      this.traceLog(\"secondsTotal    : \" + secondsTotal);\n      this.traceLog(\"secondsProcessed: \" + secondsProcessed);\n\n      return Math.floor(secondsProcessed * 100 / secondsTotal);\n    },\n\n    callgetplaylists: function () {\n      this.traceLog(\"click callgetplaylists\");\n      var playlist = document.querySelector('#' + this.upnpcontroller_uid + '_getplaylists');\n      var currentValue = playlist.getAttribute('value');\n      var playerIp = this.getPlayerIp();\n      var playerPort = this.getPlayerPort();\n\n      this.traceLog(\"currentValue: \" + currentValue);\n      this.traceLog(\"playerPort  : \" + playerPort);\n\n      this.__callRemote('playlists', {}, function (ev) {\n        var data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n        } catch (e) {\n          this.error(e);\n          return;\n        }\n        var playlists = '';\n\n        this.traceLog(\"totalMatches: \" + data.totalMatches);\n\n        for (var i = 0; i < data.playLists.length; i++) {\n          playlists += \"<a href='\" +\n            \"plugins/upnpcontroller/selectplaylist.php?player_ip_addr=\" + playerIp +\n            \"&listurl=\" + data.playLists[i].urlenc + \"&port=\" + playerPort + \"'>\" +\n            data.playLists[i].name + \"</a></br>\";\n\n          if (this.isTraceFlag() === 'true') {\n            this.debug(\"name: \" + data.playLists[i].name);\n            this.debug(\"url: \" + data.playLists[i].url);\n          }\n        }\n\n        if (currentValue !== 'pressed') {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerHTML = playlists;\n          playlists.setAttribute('value', 'pressed');\n          playlists.classList.replace('switchUnpressed','switchPressed');\n        } else {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerText = \"\";\n          playlists.setAttribute('value', 'unpressed');\n          playlists.classList.replace('switchUnpressed','switchPressed');\n        }\n      });\n    },\n\n    callvolumedown: function () {\n      this.traceLog(\"click callvolumedown\");\n      var currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n\n      this.traceLog(\"currentVolume: \" + currentVolume);\n      var volume = Number(currentVolume) - 5;\n      this.__callRemote('volume', {volume: volume}, function (data) {\n        this.traceLog(\"data: \" + data);\n      });\n\n    },\n\n    callvolumeup: function () {\n      this.traceLog(\"click callvolumeup\");\n      var currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n      this.traceLog(\"currentVolume: \" + currentVolume);\n      var volume = Number(currentVolume) + 5;\n\n      this.__callRemote('volume', {volume: volume}, function (data) {\n        this.traceLog(\"data: \" + data);\n      });\n    },\n\n    callNext: function () {\n      this.traceLog(\"click next\");\n      this.__callRemote('next', {}, function (data) {\n        this.traceLog(\"data: \" + data);\n      });\n    },\n\n    callPrev: function () {\n      this.traceLog(\"click prev\");\n      this.__callRemote('prev', {}, function (data) {\n        this.traceLog(\"data: \" + data);\n      });\n    },\n\n    toggleMute: function () {\n      this.traceLog(\"click mute\");\n      var muteButton = document.querySelector('#' + this.upnpcontroller_uid + '_muteButton');\n      var muteValue = muteButton.querySelector('div.value').innerText;\n\n      this.traceLog(\"current muteValue: \" + muteValue);\n\n\n      if (muteValue === 0) {\n        muteValue = 1;\n        muteButton.classList.replace('switchUnpressed','switchPressed');\n      } else {\n        muteValue = 0;\n        muteButton.classList.replace('switchPressed','switchUnpressed');\n      }\n\n      this.__callRemote('mute', {mute: muteValue}, function (data) {\n        this.traceLog(\"data: \" + data);\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    togglePlay: function () {\n      this.traceLog(\"click play\");\n      var playValue = document.querySelector('#' + this.upnpcontroller_uid + '_playButton div.value').innerText;\n      var cmd;\n\n      this.traceLog(\"current playValue: \" + playValue);\n\n      var playButton = document.querySelector('#' + this.upnpcontroller_uid + '_playButton');\n      if (playValue === 'Play') {\n        cmd = 'pause';\n        playButton.classList.replace('switchUnpressed','switchPressed');\n      } else {\n        cmd = 'play';\n        playButton.classList.replace('switchPressed','switchUnpressed');\n      }\n\n      this.__callRemote(cmd, {}, function (ev) {\n        this.traceLog(\"data: \" + ev.getTarget().getResponse());\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    traceLog: function(msg){\n      if(this.isTraceFlag()){\n        this.debug(msg);\n      }\n    }\n  },\n  \n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/upnpcontroller/upnpcontroller.css');\n    cv.parser.WidgetParser.addHandler(\"upnpcontroller\", cv.plugins.UpnpController);\n    cv.ui.structure.WidgetFactory.registerClass(\"upnpcontroller\", statics);\n  }\n});"]}