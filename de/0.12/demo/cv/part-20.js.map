{"version":3,"sources":["../../../source/class/cv/plugins/openhab/Openhab.js","../../../source/class/cv/plugins/openhab/Settings.js","../../../source/class/cv/plugins/openhab/renderer/Single.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","core","Object","type","construct","constructor","call","this","cv","Config","request","queryKey","hasOwnProperty","__notificationRouter","notifications","Router","getInstance","client","TemplateEngine","visu","sse","getCurrentTransport","subscribe","_onNotification","executeWhenDomFinished","_createSettings","members","__settings","_openSettings","settingsRoot","dom","Element","create","id","html","insertAfter","document","querySelector","ui","NotificationCenter","getRootElementId","button","util","IconTools","svgKUF","style","command","Command","addListener","show","getCommands","add","insertBegin","event","Registration","theme","manager","Meta","setTheme","Dark","_inline","root","Inline","setLayout","layout","VBox","plugins","openhab","Settings","exclude","flex","e","data","error","json","_typeof","JSON","parse","dispatchMessage","topic","destruct","_disposeObjects","defer","statics","Openhab","Widget","_setLayout","set","padding","backgroundColor","textColor","getBounds","getContentElement","setStyle","addListenerOnce","__servicePid","__uri","_initConfigRestClient","properties","modified","check","init","__configDescriptionResource","__service","__configDescription","__inDom","_store","__initialValues","_initStore","pid","serviceDesc","get","method","url","delete","put","service","io","rest","Resource","store","Rest","configureRequest","req","setRequestHeader","manipulateData","n","getOwnPropertyNames","forEach","key","replace","autoDownload","Serializer","toJson","getModel","_saveConfig","close","description","config","ev","_createForm","getRequest","getResponse","_createChildControl","form","getChildControl","parameters","param","field","TextField","defaultValue","setPlaceholder","CheckBox","setValue","readOnly","setReadOnly","required","setRequired","setToolTipText","_onFormFieldChange","label","name","renderer","Single","guessIfProxied","setBottomText","tr","textAlign","font","addButton","_addAt","controller","Form","bind","setModified","items","getItems","some","getValue","debug","_createChildControlImpl","hash","control","basic","Label","marginBottom","allowGrowX","decorator","Button","locale","Manager","prototype","base","setVisibility","AbstractRenderer","bottomText","nullable","apply","_applyBottomText","value","container","Composite","getBottomText","rich","wrap","hbox","HBox","setAlignX","setSpacing","addItems","names","title","_createHeader","i","length","_createLabel","item","setBuddy","box","width","_connectVisibility","_names","push","getLayout","_getLayout","_createLabelText","_labels","setRich","setAppearance","header","setFont","_row","setMarginTop"],"mappings":"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","sourcesContent":["/* Openhab.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This Plugin provides some specials to improve the integration with openHAB backend.\n *\n * .. NOTE::\n *\n *    This plugin gets automatically activated if the openHAB2 backend is used.\n *    There is no need to add it to the ``plugins`` section of the ``visu_config.xml``.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n *\n * @require(qx.ui.root.Inline)\n */\nqx.Class.define(\"cv.plugins.openhab.Openhab\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  /*\n *****************************************************************************\n    CONSTRUCTOR\n *****************************************************************************\n */\n  construct: function () {\n    this.base(arguments);\n    if (!cv.Config.request.queryKey.hasOwnProperty('preview')) {\n\n      this.__notificationRouter = cv.core.notifications.Router.getInstance();\n\n      // listen to notifications\n      var client = cv.TemplateEngine.getInstance().visu;\n      var sse = client.getCurrentTransport && client.getCurrentTransport();\n      if (sse) {\n        sse.subscribe(\"notifications\", this._onNotification, this);\n      }\n      cv.TemplateEngine.getInstance().executeWhenDomFinished(this._createSettings, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __notificationRouter: null,\n    __settings: null,\n    _openSettings: null,\n\n    _createSettings: function() {\n      // add element structure to notification-center\n      var settingsRoot = qx.dom.Element.create(\"section\", {\"id\": \"qxsettings\", \"html\": \"<div></div>\"});\n      qx.dom.Element.insertAfter(settingsRoot, document.querySelector(\"#\"+cv.ui.NotificationCenter.getInstance().getRootElementId()+\" section.messages\"));\n\n      // add a settings button to trigger opening the settings\n      var button = qx.dom.Element.create(\"div\", {\n        html: cv.util.IconTools.svgKUF(\"edit_settings\")(null, 'width: 22px; height: 22px;'),\n        style: \"float: left;\"\n      });\n      this._openSettings = new qx.ui.command.Command(\"Ctrl+S\");\n      this._openSettings.addListener(\"execute\", function() {\n        cv.ui.NotificationCenter.getInstance().show();\n        this.__settings.show();\n      }, this);\n      cv.TemplateEngine.getInstance().getCommands().add(\"open-settings\", this._openSettings);\n      qx.dom.Element.insertBegin(button, document.querySelector(\"#notification-center footer\"));\n      qx.event.Registration.addListener(button, \"tap\", function() {\n        this.__settings.show();\n      }, this);\n\n      //add to DOM\n      qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);\n\n      // Initialize tooltip manager (currently disable as it requires a root with basic layout\n      // and that breaks the inline container sizes)\n      // qx.ui.tooltip.Manager.getInstance();\n\n      this._inline = new qx.ui.root.Inline(document.querySelector(\"#qxsettings > div\"), true, false);\n      this._inline.setLayout(new qx.ui.layout.VBox());\n      this.__settings = new cv.plugins.openhab.Settings();\n      this.__settings.exclude();\n      this._inline.add(this.__settings, {flex: 1});\n    },\n\n    /**\n     * Handles notification messages from backend\n     * @param e {Event}\n     * @protected\n     */\n    _onNotification: function(e) {\n      if (!e.data) {\n        this.error(\"invalid content received from SSE: \", e);\n      }\n      var json = typeof e.data === 'object' ? e.data : JSON.parse(e.data);\n      this.__notificationRouter.dispatchMessage(json.topic || \"cv.backend\", json);\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects(\"__settings\", \"_openSettings\");\n    this.__notificationRouter = null;\n  },\n\n  defer: function(statics) {\n    // initialize on load\n    statics.getInstance();\n  }\n});\n","/* Settings.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Show and edit openHAB CometVisu backends settings via openHAB api.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n *\n */\nqx.Class.define(\"cv.plugins.openhab.Settings\", {\n  extend: qx.ui.core.Widget,\n\n  /*\n *****************************************************************************\n    CONSTRUCTOR\n *****************************************************************************\n */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox());\n    this.set({\n      padding: 10,\n      backgroundColor: \"rgba(216, 216, 216, 1.0)\",\n      textColor: \"rgb(61, 61, 61)\"\n    });\n    // override text-shadow setting\n    if (!this.getBounds()) {\n      this.addListenerOnce(\"appear\", function() {\n        this.getContentElement().setStyle(\"text-shadow\", \"none\");\n      }, this);\n    } else {\n      this.getContentElement().setStyle(\"text-shadow\", \"none\");\n    }\n\n    this.__servicePid = \"org.openhab.cometvisu\";\n    this.__uri = \"ui:cometvisu\";\n\n    this._initConfigRestClient();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n\n    modified: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeModified\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __servicePid: null,\n    __uri: null,\n    __configDescriptionResource: null,\n    __service: null,\n    __configDescription: null,\n    __inDom: false,\n    _store: null,\n    __initialValues: null,\n\n    _initStore: function(pid) {\n      var serviceDesc = {\n        \"get\": { method: \"GET\", url: \"/rest/services/\"+pid+\"/config\" },\n        \"delete\": { method: \"DELETE\", url: \"/rest/services/\"+pid+\"/config\" },\n        \"put\": { method: \"PUT\", url: \"/rest/services/\"+pid+\"/config\" }\n      };\n      var service = this.__service = new qx.io.rest.Resource(serviceDesc);\n      this._store = new qx.data.store.Rest(service, \"get\", {\n        configureRequest: function(req) {\n          req.setRequestHeader(\"Content-Type\", \"application/json\");\n        },\n        manipulateData: function(data) {\n          // normalize the keys (replace .> with _) for the marshaller\n          var n = {};\n          Object.getOwnPropertyNames(data).forEach(function(key) {\n            n[key.replace(/[\\.>]/g, \"_\")] = data[key];\n          });\n          if (!n.hasOwnProperty(\"autoDownload\")) {\n            n.autoDownload = false;\n          }\n          return n;\n        }\n      });\n      // load data\n      service.get();\n      this._store.addListenerOnce(\"changeModel\", function() {\n        this.__initialValues = JSON.parse(qx.util.Serializer.toJson(this._store.getModel()));\n      }, this);\n    },\n\n    _saveConfig: function() {\n      var data = qx.util.Serializer.toJson(this._store.getModel());\n      data = data.replace(/icons_mapping_/g, \"icons.mapping>\");\n      data = JSON.parse(data.replace(\"icons_enableMapping\", \"icons>enableMapping\"));\n      this.__service.put(null, data);\n      this.__service.addListenerOnce(\"putSuccess\", this.close, this);\n    },\n\n    _initConfigRestClient: function() {\n      var description = {\n        \"get\": { method: \"GET\", url: \"/rest/config-descriptions/\"+this.__uri }\n      };\n\n      var config = this.__configDescriptionResource = new qx.io.rest.Resource(description);\n      config.addListener(\"getSuccess\", function(ev) {\n        this._createForm(ev.getRequest().getResponse());\n      }, this);\n      config.configureRequest(function(req) {\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\n      });\n      config.get();\n\n      this._initStore(this.__servicePid);\n    },\n\n    _createForm: function(config) {\n      this._createChildControl(\"title\");\n      var form = this.getChildControl(\"form\");\n      config.parameters.forEach(function(param) {\n        var field;\n        switch(param.type) {\n          case \"TEXT\":\n            field = new qx.ui.form.TextField();\n            if (param.defaultValue) {\n              field.setPlaceholder(param.defaultValue);\n            }\n            break;\n          case \"BOOLEAN\":\n            field = new qx.ui.form.CheckBox();\n            field.setValue(param.defaultValue === \"true\");\n            break;\n        }\n        if (param.readOnly) {\n          field.setReadOnly(true);\n        }\n        if (param.required) {\n          field.setRequired(true);\n        }\n        field.setToolTipText(param.description);\n        field.addListener(\"changeValue\", this._onFormFieldChange, this);\n        form.add(field, param.label, null, param.name, null, param);\n      }, this);\n\n      var renderer = new cv.plugins.openhab.renderer.Single(form);\n      if (cv.Config.guessIfProxied()) {\n        renderer.setBottomText(this.tr(\"The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing.\"));\n        renderer.getChildControl(\"bottom-text\").set({\n          padding: 10,\n          textAlign: \"center\",\n          font: \"bold\"\n        });\n      }\n      renderer.addButton(this.getChildControl(\"cancel-button\"));\n      renderer.addButton(this.getChildControl(\"save-button\"));\n\n      this._addAt(renderer, 1);\n      var controller = new qx.data.controller.Form(null, form);\n\n      this._store.bind(\"model\", controller, \"model\");\n\n      this.setModified(false);\n    },\n\n    _onFormFieldChange: function() {\n      var modified = false;\n      var items = this.getChildControl(\"form\").getItems();\n      Object.getOwnPropertyNames(items).some(function(name) {\n        // noinspection EqualityComparisonWithCoercionJS\n        if (this.__initialValues[name] != items[name].getValue()) { // jshint ignore:line\n          this.debug(name+\" has changed from \"+this.__initialValues[name]+\" to \"+items[name].getValue());\n          modified = true;\n          return true;\n        }\n      }, this);\n      this.setModified(modified);\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash) {\n      var control;\n      switch(id) {\n\n        case \"title\":\n          control = new qx.ui.basic.Label(this.tr(\"openHAB backend settings\"));\n          control.set({\n            font: \"bold\",\n            marginBottom: 5,\n            allowGrowX: true,\n            decorator: \"window-caption\"\n          });\n          this._addAt(control, 0);\n          break;\n\n        case \"form\":\n          control = new qx.ui.form.Form();\n          break;\n\n        case \"cancel-button\":\n          control = new qx.ui.form.Button(qx.locale.Manager.tr(\"Cancel\"));\n          control.addListener(\"execute\", this.close, this);\n          break;\n\n        case \"save-button\":\n          control = new qx.ui.form.Button(qx.locale.Manager.tr(\"Save\"));\n          control.addListener(\"execute\", this._saveConfig, this);\n          this.bind(\"modified\", control, \"enabled\");\n          break;\n      }\n      return control || this.base(arguments, id, hash);\n    },\n\n    close: function() {\n      this.setVisibility(\"excluded\");\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects(\"__configDescriptionResource\", \"__service\", \"__root\", \"_store\", \"_window\");\n  }\n});\n","/* Single.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * {@link qx.ui.form.renderer.Single} with right column flexed.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n */\n\nqx.Class.define(\"cv.plugins.openhab.renderer.Single\", {\n  extend: qx.ui.form.renderer.AbstractRenderer,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(form) {\n    var layout = new qx.ui.layout.VBox(6);\n    this._setLayout(layout);\n\n    this.base(arguments, form);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    bottomText: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyBottomText\"\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n\n    // property apply\n    _applyBottomText: function(value) {\n      var control = this.getChildControl(\"bottom-text\");\n      if (value) {\n        control.setValue(value);\n        control.show();\n      } else {\n        control.exclude();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash) {\n      var control;\n      switch(id) {\n\n        case \"content\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.VBox(8));\n          this._addAt(control, 1);\n          break;\n\n        case \"bottom-text\":\n          control = new qx.ui.basic.Label(this.getBottomText());\n          control.set({\n            rich: true,\n            wrap: true\n          });\n          this._addAt(control, 2);\n          if (this.getBottomText()) {\n            control.show();\n          } else {\n            control.exclude();\n          }\n          break;\n\n        case \"button-container\":\n          var hbox = new qx.ui.layout.HBox();\n          hbox.setAlignX(\"right\");\n          hbox.setSpacing(5);\n          control = new qx.ui.container.Composite(hbox);\n          this._addAt(control, 3);\n          break;\n\n      }\n      return control || this.base(arguments, id, hash);\n    },\n\n    /**\n     * Add a group of form items with the corresponding names. The names are\n     * displayed as label.\n     * The title is optional and is used as grouping for the given form\n     * items.\n     *\n     * @param items {qx.ui.core.Widget[]} An array of form items to render.\n     * @param names {String[]} An array of names for the form items.\n     * @param title {String?} A title of the group you are adding.\n     */\n    addItems : function(items, names, title) {\n      // add the header\n      if (title !== null) {\n        this.getChildControl(\"content\").add(this._createHeader(title));\n      }\n\n      var container = this.getChildControl(\"content\");\n\n      // add the items\n      for (var i = 0; i < items.length; i++) {\n        var label = this._createLabel(names[i], items[i]);\n        var item = items[i];\n        label.setBuddy(item);\n\n        if (item instanceof qx.ui.form.CheckBox) {\n          // label + checkbox in one line\n          var box = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n          box.add(label, {width: \"50%\"});\n          box.add(item, {width: \"50%\"});\n          container.add(box);\n        }\n        else {\n          container.add(label);\n          container.add(item);\n        }\n\n        this._connectVisibility(item, label);\n\n        // store the names for translation\n        if (qx.core.Environment.get(\"qx.dynlocale\")) {\n          this._names.push({name: names[i], label: label, item: items[i]});\n        }\n      }\n    },\n\n    /**\n     * Adds a button to the form renderer. All buttons will be added in a\n     * single row at the bottom of the form.\n     *\n     * @param button {qx.ui.form.Button} The button to add.\n     */\n    addButton : function(button) {\n      // add the button\n      this.getChildControl(\"button-container\").add(button);\n    },\n\n    /**\n     * Returns the set layout for configuration.\n     *\n     * @return {qx.ui.layout.Grid} The grid layout of the widget.\n     */\n    getLayout : function() {\n      return this._getLayout();\n    },\n\n    /**\n     * Creates a label for the given form item.\n     *\n     * @param name {String} The content of the label without the\n     *   trailing * and :\n     * @param item {qx.ui.core.Widget} The item, which has the required state.\n     * @return {qx.ui.basic.Label} The label for the given item.\n     */\n    _createLabel : function(name, item) {\n      var label = new qx.ui.basic.Label(this._createLabelText(name, item));\n      // store labels for disposal\n      this._labels.push(label);\n      label.setRich(true);\n      label.setAppearance(\"form-renderer-label\");\n      return label;\n    },\n\n\n    /**\n     * Creates a header label for the form groups.\n     *\n     * @param title {String} Creates a header label.\n     * @return {qx.ui.basic.Label} The header for the form groups.\n     */\n    _createHeader : function(title) {\n      var header = new qx.ui.basic.Label(title);\n      // store labels for disposal\n      this._labels.push(header);\n      header.setFont(\"bold\");\n      if (this._row != 0) {\n        header.setMarginTop(10);\n      }\n      header.setAlignX(\"left\");\n      return header;\n    }\n  }\n});"]}