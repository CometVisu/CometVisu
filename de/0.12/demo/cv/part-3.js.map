{"version":3,"sources":["../../../source/class/cv/plugins/diagram/AbstractDiagram.js","../../../source/class/cv/plugins/diagram/Diagram.js","../../../source/class/cv/plugins/diagram/Info.js"],"names":["this","plot","opts","width","height","CanvasAxisLabel","prototype","AxisLabel","constructor","axisName","position","padding","call","axisLabelFontFamily","axisLabelFontSizePixels","draw","box","axisLabelColour","ctx","getCanvas","getContext","font","fillStyle","x","y","measureText","axisLabel","angle","left","top","Math","PI","translate","rotate","fillText","restore","HtmlAxisLabel","elem","calculateSize","$","getPlaceholder","append","labelWidth","outerWidth","labelHeight","outerHeight","remove","cleanup","find","css","CssTransformAxisLabel","transforms","degrees","stransforms","-moz-transform","-webkit-transform","-o-transform","stdTranslate","stdRotate","s","prop","calculateOffsets","offsets","color","requiresResize","IeTransformAxisLabel","rotation","init","secondPass","axisLabels","hasAxisLabels","each","getAxes","axis","options","getOptions","show","renderer","axisLabelUseHtml","navigator","appName","css3TransitionSupported","canvasTextSupported","axisLabelUseCanvas","ua","userAgent","RegExp","exec","rv","parseFloat","$1","undefined","axisLabelPadding","setupGrid","version","jQuery","cv","util","ScriptLoader","markAsLoaded","isMarkedAsLoaded","a","c","tipPosition","b","pageX","pageY","e","updateTooltipPosition","d","getDomElement","f","stringFormat","tooltipOptions","content","html","shifts","onHover","hide","hooks","bindEvents","push","plotOptions","tooltip","tooltipOpts","bind","shutdown","unbind","length","attr","appendTo","defaultTheme","background","z-index","border-radius","font-size","border","display","white-space","window","scrollLeft","innerWidth","scrollTop","innerHeight","g","h","datapoint","series","label","originSeries","percent","adjustValPrecision","replace","isTimeMode","isXDateFormat","timestampToDate","xDateFormat","isYDateFormat","yDateFormat","xaxis","ticks","dataIndex","yaxis","k","hasOwnProperty","isCategoriesMode","v","tickFormatter","mode","Date","formatDate","monthNames","dayNames","match","toFixed","plugins","name","j","l","data","dragTarget","dragProxy","proxy","cursorOffsetX","cursorOffsetY","offsetX","offsetY","dragging","which","target","is","not","type","extend","offset","add","document","i","distance","drop","allowed","handler","event","dispatch","result","pow","unselectable","onselectstart","style","MozUserSelect","fn","drag","trigger","special","setup","attachEvent","teardown","detachEvent","dragstart","dragend","slice","arguments","fix","wheelDelta","detail","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","unshift","handle","apply","fixHooks","mouseHooks","mousewheel","addEventListener","onmousewheel","removeEventListener","unmousewheel","onZoomClick","zoomOut","center","zoom","onMouseWheel","delta","preventDefault","prevCursor","prevPageX","prevPageY","panTimeout","onDragStart","pan","cursor","onDrag","frameRate","setTimeout","onDragEnd","clearTimeout","args","amount","w","xf","yf","minmax","min","max","_","direction","zr","zoomRange","pr","panRange","c2p","tmp","range","preventEvent","isNaN","p2c","eventHolder","o","interactive","$$dbClassInfo","dependsOn","qx.Class","require","cv.ui.structure.AbstractWidget","construct","cv.ui.common.Operate","cv.ui.common.Refresh","qx.util.Function","cv.parser.WidgetParser","cv.data.Model","cv.TemplateEngine","qx.io.request.Xhr","qx.dom.Element","cv.ui.PopupHandler","cv.util.ScriptLoader","qx","Bootstrap","executePendingDefers","Class","define","ui","structure","AbstractWidget","include","common","Operate","Refresh","props","_debouncedLoadDiagramData","Function","debounce","loadDiagramData","statics","cache","parse","xml","path","flavour","pageType","mappings","Object","assign","getAttributeToPropertyMappings","parser","WidgetParser","parseElement","parseRefresh","legend","getAttribute","Model","getInstance","setWidgetData","getDiagramElements","legendInline","indexOf","legendPopup","seriesStart","default","seriesResolution","transform","parseInt","period","legendposition","timeformat","timeformatTooltip","zoomYAxis","value","title","refresh","gridcolor","previewlabels","popup","xmlElement","retVal","axesnum","ts","tsnum","axesNameIndex","unit","axes","tickDecimals","textContent","querySelectorAll","forEach","src","tagName","steps","fillMissing","tsType","axisIndex","fill","scaling","cFunc","fillTs","resol","align","barWidth","getInfluxFilter","dsIndex","children","retval","child","lookupTsCache","start","end","res","force","callback","callbackParameter","url","TemplateEngine","visu","getResourcePath","encodeURIComponent","filter","field","authentication","key","urlNotInCache","now","timestamp","waitingCallbacks","xhr","dispose","io","request","Xhr","self","set","addListener","ev","_onSuccess","send","tsdata","getTarget","getResponse","millisOffset","newRrd","Array","_onStatusError","console","log","waitingCallback","check","nullable","popupplot","plotted","_timerPopup","__isPopup","_applyTitle","setLabel","_setupRefreshAction","getRefresh","_timer","Timer","_stopRefresh","timer","isEnabled","stop","_startRefresh","runImmediately","fireEvent","_action","popupDiagram","dom","Element","create","class","id","getPath","_init","PopupHandler","showPopup","getLabel","page","getParentPage","Registration","removeAllListeners","isPopup","getTimeformat","isLegendPopup","isLegendInline","getLegendposition","getGridcolor","backgroundColor","scale","autoWidth","autoHeight","delayTouchEnded","simulClick","tapPrecision","yaxes","val","xaxes"],"mappings":"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","sourcesContent":["/* AbstractDiagram.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins integrates flot (diagrams in javascript) into the visualization.\n * server-side data-storage is rrd or InfluxDB.\n *\n * short documentation\n *\n * <h4>widgets:</h4>\n * <ul>\n *   <li>diagram</li>\n *   <li>diagram_info</li>\n * </ul>\n *\n * <h4>attributes (per diagram):</h4>\n * <ul>\n *   <li>series:               optional, \"hour\", \"day\" (default), \"week\", \"month\", \"year\"</li>\n *   <li>period:               optional, number of \"series\" to be shown</li>\n *   <li>refresh:              optional, refresh-rate in seconds, no refresh if missing</li>\n *   <li>gridcolor:            optional, color for dataline and grid, HTML-colorcode</li>\n *   <li>width, height:        optional, width and height of \"inline\"-diagram</li>\n *   <li>previewlabels:        optional, show labels on \"inline\"-diagram</li>\n *   <li>popup:                optional, make diagram clickable and open popup</li>\n *   <li>legend:               optional, \"none\", \"both\", \"inline\", \"popup\" select display of legend</li>\n *   <li>title:                optional, diagram title (overrides label-content)</li>\n * </ul>\n *\n * <h4>attributes (per graph):</h4>\n * <ul>\n *   <li>style:                optional, \"lines\" (default), \"bars\", \"points\" select graph type</li>\n *   <li>fill:                 optional, true or false - fill the space under the line / within the bar (line / bar style graphs)</li>\n *   <li>barWidth:             optional, width of bars (bar style graphs)</li>\n *   <li>align:                optional, \"left\" (default), \"center\", \"right\" select qlignemnt of bars (bar style graphs)</li>\n * </ul>\n *\n * @author Michael Hausl [michael at hausl dot com]\n * @since 0.6.0\n *\n * @asset(plugins/diagram/dep/flot/jquery.flot.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.touch.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.canvas.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.resize.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.time.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.axislabels.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.tooltip.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.navigate.min.js)\n */\nqx.Class.define('cv.plugins.diagram.AbstractDiagram', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Operate, cv.ui.common.Refresh],\n  type: \"abstract\",\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (props) {\n    this.base(arguments, props);\n    this._debouncedLoadDiagramData = qx.util.Function.debounce(this.loadDiagramData.bind(this), 200);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    cache: {},\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType, mappings) {\n      if (mappings) {\n        mappings = Object.assign(mappings, this.getAttributeToPropertyMappings());\n      } else {\n        mappings = this.getAttributeToPropertyMappings();\n      }\n      cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, mappings);\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n\n      var legend = xml.getAttribute(\"legend\") || \"both\";\n      return cv.data.Model.getInstance().setWidgetData( path, {\n        content           : this.getDiagramElements(xml),\n        legendInline      : [\"both\", \"inline\"].indexOf(legend) >= 0,\n        legendPopup       : [\"both\", \"popup\"].indexOf(legend) >= 0\n      } );\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        series            : { \"default\": \"day\" },\n        seriesStart       : { \"default\": \"end-month\" },\n        seriesEnd         : { \"default\": \"now\" },\n        seriesResolution  : { \"default\": 300, transform: parseInt },\n        period            : { \"default\": 1, transform: parseInt },\n        legendposition    : { \"default\": \"ne\" },\n        timeformat        : {},\n        timeformatTooltip : { \"default\": \"%d.%m.%Y %H:%M\" },\n        zoomYAxis         : { transform: function(value) {\n          return value === \"true\";\n        }},\n        title             : { target: \"title\" },\n        refresh           : {},\n        gridcolor         : { \"default\": \"#81664B\" },\n        previewlabels     : { transform: function(value) {\n          return value === \"true\";\n        }},\n        popup             : { transform: function(value) {\n          return value === \"true\";\n        }},\n        tooltip           : { transform: function(value) {\n          return value === \"true\";\n        }}\n      };\n    },\n\n    getDiagramElements: function(xmlElement) {\n      var retVal = {\n        axes    : [],\n        axesnum : 0,\n        ts      : [],\n        tsnum   : 0\n      };\n      var axesNameIndex = [];\n\n      xmlElement.querySelectorAll('axis').forEach(function(elem) {\n        var unit = elem.getAttribute('unit') || \"\";\n        retVal.axes[retVal.axesnum] = {\n          axisLabel     : elem.getAttribute('label') || null,\n          position      : elem.getAttribute('position') || \"left\",\n          min           : elem.getAttribute('min') || null,\n          max           : elem.getAttribute('max') || null,\n          unit          : unit,\n          tickDecimals  : elem.getAttribute('decimals') || null,\n          tickFormatter : function (v, axis) {\n            return v.toFixed(axis.tickDecimals) + unit;\n          }\n        };\n        retVal.axesnum++;\n        axesNameIndex[elem.textContent] = retVal.axesnum;\n      }, this);\n\n      xmlElement.querySelectorAll(\"influx,rrd\").forEach(function(elem) {\n        var\n          src = elem.tagName === 'rrd' ? elem.textContent : elem.getAttribute('measurement'),\n          steps = (elem.getAttribute(\"steps\") || \"false\") === \"true\",\n          fillMissing = elem.getAttribute('fillMissing');\n        retVal.ts[retVal.tsnum] = {\n          tsType    : elem.tagName,\n          src       : src,\n          color     : elem.getAttribute('color'),\n          label     : elem.getAttribute('label') || src,\n          axisIndex : axesNameIndex[elem.getAttribute('yaxis')] || 1,\n          steps     : steps,\n          fill      : (elem.getAttribute(\"fill\") || \"false\") === \"true\",\n          scaling   : parseFloat(elem.getAttribute('scaling')) || 1.0,\n          cFunc     : elem.getAttribute('consolidationFunction') || (elem.tagName === 'rrd' ? 'AVERAGE' : 'MEAN'),\n          fillTs    : (fillMissing === null) ? (steps ? 'previous' : 'linear') : fillMissing,\n          resol     : parseInt(elem.getAttribute('resolution')),\n          offset    : parseInt(elem.getAttribute('offset')),\n          style     : elem.getAttribute('style') || \"lines\",\n          align     : elem.getAttribute('align') || \"center\",\n          barWidth  : elem.getAttribute('barWidth') || 1\n        };\n        if( elem.tagName === 'influx' ) {\n          retVal.ts[retVal.tsnum]['filter'] = this.getInfluxFilter( elem, 'AND' );\n          retVal.ts[retVal.tsnum]['field'] = elem.getAttribute('field');\n          retVal.ts[retVal.tsnum]['authentication'] = elem.getAttribute('authentication');\n        } else {\n          var dsIndex = elem.getAttribute('datasourceIndex') || 0;\n          if(dsIndex < 0) {\n            dsIndex = 0;\n          }\n          retVal.ts[retVal.tsnum].dsIndex = dsIndex;\n        }\n        retVal.tsnum++;\n      }, this);\n      return retVal;\n    },\n\n    /**\n     * Recursively walk through the elem to build filter sting\n     * @param elem\n     */\n    getInfluxFilter: function( elem, type )\n    {\n      var\n        children = elem.children,\n        length = children.length,\n        retval = '',\n        i = 0;\n\n      for( ; i < length; i++ )\n      {\n        var child = children[i];\n\n        if( '' != retval )\n          retval += ' ' + type + ' ';\n\n        switch( child.tagName )\n        {\n          case 'and':\n            retval += this.getInfluxFilter(child, 'AND');\n            break;\n\n          case 'or':\n            retval += this.getInfluxFilter(child, 'OR');\n            break;\n\n          case 'tag':\n            retval += child.getAttribute('key') + ' ' + child.getAttribute('operator') + \" '\" + child.getAttribute('value') + \"'\";\n            break;\n\n          default:\n            ; // ignore unknown\n        }\n      }\n\n      if( type )\n        return '(' + retval + ')';\n\n      return retval;\n    },\n\n    /**\n     * Get the rrd or InfluxDB and put it's content in the cache.\n     * @param refresh {Number} time is seconds to refresh the data\n     * @param force {Boolean} Update even when the cache is still valid\n     * @param callback {Function} call when the data has arrived\n     */\n    lookupTsCache: function(ts, start, end, res, refresh, force, callback, callbackParameter ) {\n      var\n        url = (( 'influx' === ts.tsType )\n            ? 'resource/plugins/diagram/influxfetch.php?ts=' + ts.src\n            : cv.TemplateEngine.getInstance().visu.getResourcePath('rrd')+'?rrd=' + encodeURIComponent(ts.src) + '.rrd')\n          + '&ds='    + encodeURIComponent(ts.cFunc)\n          // NOTE: don't encodeURIComponent `start` and `end` for RRD as the \"+\" needs to be in the URL in plain text\n          //       although it looks wrong (as a \"+\" in a URL translates in the decode to a space: \" \")\n          + '&start=' + ('rrd' === ts.tsType ? start : encodeURIComponent(start))\n          + '&end='   + ('rrd' === ts.tsType ? end : encodeURIComponent(end))\n          + '&res='   + encodeURIComponent(res)\n          + (ts.fillTs ? '&fill='   + encodeURIComponent(ts.fillTs) : '')\n          + (ts.filter ? '&filter=' + encodeURIComponent(ts.filter) : '')\n          + (ts.field  ? '&field='  + encodeURIComponent(ts.field ) : '')\n          + (ts.authentication  ? '&auth='  + encodeURIComponent(ts.authentication ) : ''),\n        key = url + ( 'rrd' === ts.tsType ? '|' + ts.dsIndex : ''),\n        urlNotInCache = !(key in this.cache),\n        doLoad = force || urlNotInCache || !('data' in this.cache[ key ]) || (refresh!==undefined && (Date.now()-this.cache[key].timestamp) > refresh*1000);\n\n      if( doLoad )\n      {\n        if( urlNotInCache ) {\n          this.cache[key] = {waitingCallbacks: []};\n        }\n        this.cache[ key ].waitingCallbacks.push( [ callback, callbackParameter ] );\n\n        if( this.cache[ key ].waitingCallbacks.length === 1 ) {\n          if (this.cache[ key ].xhr) {\n            this.cache[ key ].xhr.dispose();\n          }\n          var xhr = new qx.io.request.Xhr(url);\n          var self = this;\n          xhr.set({\n            accept: \"application/json\"\n          });\n          xhr.addListener(\"success\", function(ev){self._onSuccess(ts, key, ev);}, this);\n          xhr.addListener(\"statusError\", function(ev){self._onStatusError(ts, key, ev);}, this);\n          this.cache[ key ].xhr = xhr;\n          xhr.send();\n        }\n      } else {\n        callback( this.cache[key].data, callbackParameter );\n      }\n    },\n\n    _onSuccess: function(ts, key, ev) {\n      var tsdata = ev.getTarget().getResponse();\n      if (tsdata !== null) {\n        // calculate timestamp offset and scaling\n        var millisOffset = (ts.offset ? ts.offset * 1000 : 0);\n        var newRrd = new Array(tsdata.length);\n        for (var j = 0, l = tsdata.length; j < l; j++) {\n          if( ts.tsType === 'rrd' )\n            newRrd[j] = [(tsdata[j][0] + millisOffset), (parseFloat(tsdata[j][1][ts.dsIndex]) * ts.scaling)];\n          else\n            newRrd[j] = [(tsdata[j][0] + millisOffset), (parseFloat(tsdata[j][1]) * ts.scaling)];\n        }\n        tsdata = newRrd;\n      }\n      this.cache[key].data = tsdata;\n      this.cache[key].timestamp = Date.now();\n\n      this.cache[key].waitingCallbacks.forEach(function (waitingCallback) {\n        waitingCallback[0](tsdata, waitingCallback[1]);\n      }, this);\n      this.cache[key].waitingCallbacks.length = 0; // empty array)\n    },\n\n    _onStatusError: function(ts, key, ev) {\n      console.log('_onStatusError',ts, key, ev);\n      var tsdata = [];\n\n      this.cache[key].data = tsdata;\n      this.cache[key].timestamp = Date.now();\n\n      this.cache[key].waitingCallbacks.forEach(function (waitingCallback) {\n        waitingCallback[0](tsdata, waitingCallback[1]);\n      }, this);\n      this.cache[key].waitingCallbacks.length = 0; // empty array)\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    content: {\n      check: \"Object\",\n      init: {}\n    },\n    title: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyTitle\"\n    },\n    series: {\n      check: [\"hour\", \"day\", \"week\", \"month\", \"year\", \"fullday\", \"custom\"],\n      init: \"day\"\n    },\n    seriesStart: {\n      check: \"String\",\n      init: \"end-month\"\n    },\n    seriesEnd: {\n      check: \"String\",\n      init: \"now\"\n    },\n    seriesResolution: {\n      check: \"Number\",\n      init: 300\n    },\n    period: {\n      check: \"Number\",\n      init: 1\n    },\n    legendInline: {\n      check: \"Boolean\",\n      init: true\n    },\n    legendPopup: {\n      check: \"Boolean\",\n      init: true\n    },\n    legendposition: {\n      check: [\"nw\", \"ne\", \"sw\", \"se\"],\n      init: \"ne\"\n    },\n    timeformat: {\n      check: \"String\",\n      nullable: true\n    },\n    timeformatTooltip: {\n      check: \"String\",\n      init: \"%d.%m.%Y %H:%M\"\n    },\n    zoomYAxis: {\n      check: \"Boolean\",\n      init: false\n    },\n    gridcolor: {\n      check: \"String\",\n      init: \"#81664B\"\n    },\n    previewlabels: {\n      check: \"Boolean\",\n      init: false\n    },\n    popup: {\n      check: \"Boolean\",\n      init: false\n    },\n    tooltip: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    _init: null,\n    popupplot: null,\n    plot: null,\n    plotted: null,\n    _timerPopup: null,\n    __isPopup: false,\n\n    // property apply\n    _applyTitle: function(value) {\n      if (value) {\n        // override label\n        this.setLabel('<div class=\"label\">' + value + '</div>');\n      }\n    },\n\n    _setupRefreshAction: function() {\n      if (this.getRefresh()) {\n        if (!this._timer) {\n          this._timer = new qx.event.Timer(this.getRefresh());\n          this._timer.addListener(\"interval\", function () {\n            this.loadDiagramData(this.plot, false, true);\n          }, this);\n        }\n\n        if (!this._timerPopup) {\n          this._timerPopup = new qx.event.Timer(this.getRefresh());\n          this._timerPopup.addListener(\"interval\", function () {\n            this.loadDiagramData(this.popupplot, false, true);\n          }, this);\n        }\n      }\n    },\n\n    /**\n     * Stop the refresh timer\n     *\n     * @param timer {qx.event.Timer} stop this timer\n     * @protected\n     */\n    _stopRefresh: function(timer) {\n      if (timer && timer.isEnabled()) {\n        timer.stop();\n      }\n    },\n\n    /**\n     * Start the refresh timer\n     *\n     * @param timer {qx.event.Timer} start this timer\n     * @param runImmediately {Boolean} fire the timers 'interval' event immediately to trigger an refresh right now\n     * @protected\n     */\n    _startRefresh: function(timer, runImmediately) {\n      if (timer) {\n        if (!timer.isEnabled()) {\n          timer.start();\n        }\n        if (runImmediately === true) {\n          timer.fireEvent('interval');\n        }\n      }\n    },\n\n    _action: function() {\n      var popupDiagram = qx.dom.Element.create(\"div\", {\n        'class': \"diagram\",\n        id: this.getPath() + '_big',\n        style: 'height: 90%'\n      });\n      this._init = true;\n      var popup = cv.ui.PopupHandler.showPopup(\"diagram\", {title: this.getLabel(), content: popupDiagram, page: this.getParentPage().getPath()});\n\n      // this will be called when the popup is being closed.\n      // NOTE: this will be called twice, one time for the foreground and one\n      //       time for the background.\n      popup.addListener('close', function() {\n        this._stopRefresh(this._timerPopup);\n        qx.event.Registration.removeAllListeners(popupDiagram);\n        if (this.popupplot) {\n          this.popupplot.shutdown();\n          this.popupplot = null;\n        }\n      }, this);\n\n      var parent = popupDiagram.parentNode;\n      Object.entries({height: \"100%\", width: \"95%\", margin: \"auto\"}).forEach(function(key_value){parent.style[key_value[0]]=key_value[1];});// define parent as 100%!\n      popupDiagram.innerHTML = '';\n      qx.event.Registration.addListener(popupDiagram, \"tap\", function(event) {\n        // don't let the popup know about the click, or it will close\n        event.stopPropagation();\n      }, this);\n\n      this.initDiagram( true );\n\n      this._startRefresh(this._timerPopup, true);\n    },\n\n    initDiagram: function( isPopup ) {\n      if (!this._init) {\n\n        return;\n      }\n      this._init = false;\n      isPopup = isPopup || this.__isPopup;\n\n      var options = {\n        canvas  : true,\n        tooltip : this.getTooltip(),\n        tooltipOpts : {\n          content      : \"<center>%x<br/>%y</center>\",\n          xDateFormat  : this.getTimeformatTooltip(),\n          shifts       : {\n            x : 20,\n            y : 10\n          },\n          defaultTheme : false\n        },\n        zoom    : {\n          interactive: isPopup,\n          trigger: \"dblclick\",\n          amount: 1.5\n        },\n        pan     : {\n          interactive: isPopup,\n          cursor: \"move\",\n          frameRate: 20,\n          triggerOnDrag : false\n        },\n        yaxes  : JSON.parse(JSON.stringify(this.getContent().axes)), // deep copy to prevent side effects\n        xaxes  : [{\n          mode       : \"time\",\n          timeformat : this.getTimeformat()\n        }],\n        legend : {\n          show            : (isPopup && this.isLegendPopup()) || (!isPopup && this.isLegendInline()),\n          backgroundColor : \"#101010\",\n          position        : this.getLegendposition()\n        },\n        grid : {\n          show            : true,\n          aboveData       : false,\n          color           : this.getGridcolor(),\n          backgroundColor : \"#000000\",\n          tickColor       : this.getGridcolor(),\n          markingsColor   : this.getGridcolor(),\n          borderColor     : this.getGridcolor(),\n          hoverable       : true\n        },\n        touch: {\n          pan: isPopup ? 'x' : 'none',              // what axis pan work\n          scale: isPopup ? 'x' : 'none',            // what axis zoom work\n          autoWidth: false,\n          autoHeight: false,\n          delayTouchEnded: 500,   // delay in ms before touchended event is fired if no more touches\n          callback: null,         // other plot draw callback\n          simulClick: true,       // plugin will generate Mouse click event to brwoser on tap or double tap\n          tapThreshold:150,       // range of time where a tap event could be detected\n          dbltapThreshold:200,    // delay needed to detect a double tap\n          tapPrecision:60/2       // tap events boundaries ( 60px square by default )\n        }\n      };\n      options.yaxes.forEach(function(val) {\n        Object.assign(val, {axisLabelColour: this.getGridcolor(), color: this.getGridcolor()});\n      }, this);\n      options.xaxes.forEach(function(val) {\n        Object.assign(val, {axisLabelColour: this.getGridcolor(), color: this.getGridcolor()});\n      }, this);\n      if (isPopup) {\n        Object.assign(options, {\n          yaxis : {\n            isPopup   : true,\n            zoomRange : this.getZoomYAxis() ? [null, null] : false\n          },\n          xaxis : {\n            zoomRange : [null, null],\n            panRange  : [null, null]\n          }\n        });\n      }\n      if (this.getTooltip()) {\n        options.grid.hoverable = true;\n        options.grid.clickable = true;\n      }\n\n      if (!isPopup && !this.getPreviewlabels()) {\n        Object.assign(options, {xaxes: [ {ticks: 0, mode: options.xaxes[0].mode } ]});\n        if( 0 === options.yaxes.length ) {\n          options.yaxes[0] = {};\n        }\n        options.yaxes.forEach(function(val) {\n          Object.assign(val, {ticks:0, axisLabel: null});\n        }, this);\n      }\n\n      // plot diagram initially with empty values\n      var diagram = isPopup ? $( '#' + this.getPath() + '_big' ) : $( '#' + this.getPath() + ' .actor div' );\n      diagram.empty();\n      var plot = $.plot(diagram, [], options);\n      if( isPopup ) {\n        this.debug(\"popup plot generated\");\n        this.popupplot = plot;\n      }\n      else {\n        this.debug(\"plot generated\");\n        this.plot = plot;\n      }\n      this.plotted = true;\n\n      var that = this;\n      diagram.bind(\"plotpan\", function(event, plot) {\n        that._debouncedLoadDiagramData( plot, isPopup, false );\n      }).bind(\"plotzoom\", function() {\n        that.loadDiagramData( plot, isPopup, false );\n      }).bind(\"touchended\", function() {\n        that.loadDiagramData( plot, isPopup, false );\n      }).bind(\"tap\", function() {\n        var self = this;\n        var container = $(self).closest('.widget_container')[0];\n        if ( !isPopup && container !== undefined) {\n          var actor = $(self).closest('.actor')[0];\n          var path = container.id;\n          if( actor !== undefined && path.length > 0 ) {\n            that.action();\n          }\n        }\n      });\n\n      if (!isPopup) {\n        // disable touch plugin in non-popup\n        plot.getPlaceholder().unbind('touchstart').unbind('touchmove').unbind('touchend');\n      }\n\n      this.loadDiagramData( plot, isPopup, false );\n    },\n\n    getSeriesSettings: function(xAxis, isInteractive) {\n      var series = {\n        hour    : {res: \"60\",     start: \"hour\",  end: \"now\"},\n        day     : {res: \"300\",    start: \"day\",   end: \"now\"},\n        fullday : {res: \"300\",    start: \"day\",   end: \"midnight+24hour\"},\n        week    : {res: \"1800\",   start: \"week\",  end: \"now\"},\n        month   : {res: \"21600\",  start: \"month\", end: \"now\"},\n        year    : {res: \"432000\", start: \"year\",  end: \"now\"}\n      };\n\n      var ret = {\n        start : null,\n        end   : null,\n        res   : null\n      };\n      if (this.getSeries() === \"custom\") {\n        // initial load, take parameters from custom configuration\n        ret.start = this.getSeriesStart();\n        ret.end = this.getSeriesEnd();\n        ret.res = this.getSeriesResolution();\n      }\n      else {\n        var selectedSeries = series[this.getSeries()];\n        if (!selectedSeries) {\n          return;\n        }\n\n        // initial load, take parameters from configuration\n        ret.start = \"end-\" + this.getPeriod() + selectedSeries.start;\n        ret.end = selectedSeries.end;\n        ret.res = selectedSeries.res;\n      }\n\n      if (xAxis.datamin && xAxis.datamax && isInteractive) {\n        ret.start = (xAxis.min / 1000).toFixed(0);\n      }\n      return ret;\n    },\n\n    loadDiagramData: function( plot, isInteractive, forceReload ) {\n      if (!plot) {\n        return;\n      }\n      var series = this.getSeriesSettings(plot.getAxes().xaxis, isInteractive);\n      if (!series) {\n        return;\n      }\n\n      // init\n      var loadedData = [];\n      var tsloaded = 0;\n      var tsSuccessful = 0;\n      // get all time series data\n      this.getContent().ts.forEach(function(ts, index) {\n        var\n          res = ts.resol ? ts.resol : series.res,\n          refresh = this.getRefresh() ? this.getRefresh() : res;\n\n        cv.plugins.diagram.AbstractDiagram.lookupTsCache( ts, series.start, series.end, res, refresh, forceReload, function(tsdata ){\n          tsloaded++;\n          if (tsdata !== null) {\n            tsSuccessful++;\n\n            // store the data for diagram plotting\n            loadedData[index] = {\n              label: ts.label,\n              color: ts.color,\n              data: tsdata,\n              yaxis: parseInt(ts.axisIndex),\n              bars: { show: ts.style === \"bars\", fill: ts.fill, barWidth: parseInt(ts.barWidth), align: ts.align },\n              lines: { show: ts.style === \"lines\", steps: ts.steps, fill: ts.fill, zero: false },\n              points: { show: ts.style === \"points\", fill: ts.fill }\n            };\n          }\n\n          // if loading has finished, i.e. all time series have been retrieved,\n          // go on and plot the diagram\n          if (tsloaded === this.getContent().tsnum) {\n            var fulldata;\n            // If all time series were successfully loaded, no extra action is needed.\n            // Otherwise we need to reduce the array to the loaded data.\n            if (tsSuccessful === tsloaded) {\n              fulldata = loadedData;\n            }\n            else {\n              fulldata = [];\n              var loadedIndex = -1;\n              for (var j = 0; j < tsSuccessful; j++) {\n                for (var k = loadedIndex + 1; k < loadedData.length; k++) {\n                  if (loadedData[k] !== null) {\n                    fulldata[j] = loadedData[k];\n                    loadedIndex = k;\n                    break;\n                  }\n                }\n              }\n            }\n\n            // plot\n            plot.setData(fulldata);\n            plot.setupGrid();\n            plot.draw();\n\n            loadedData = [];\n          }\n\n        }.bind(this));\n      }, this);\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    if (this._timerPopup) {\n      this._disposeObjects(\"_timerPopup\");\n    }\n  },\n\n  defer: function() {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addScripts([\n      'plugins/diagram/dep/flot/jquery.flot.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.touch.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.canvas.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.resize.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.time.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.axislabels.js',\n      'plugins/diagram/dep/flot/jquery.flot.tooltip.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.navigate.min.js'\n    ], [0]);\n  }\n});","/* Diagram.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.plugins.diagram.Diagram', {\n  extend: cv.plugins.diagram.AbstractDiagram,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function(props) {\n    this._init = true;\n    this.base(arguments, props);\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    width: {\n      check: \"String\",\n      nullable: true\n    },\n    height: {\n      check: \"String\",\n      nullable: true\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.plugins.diagram.AbstractDiagram.parse(xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        width: { transform: function(value) {\n          return value ? parseInt(value)+\"px\" : null;\n        }},\n        height: { transform: function(value) {\n          return value ? parseInt(value)+\"px\" : null;\n        }}\n      };\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    __vlid1: null,\n\n    _onDomReady: function() {\n      if (!this.$$domReady) {\n        var pageId = this.getParentPage().getPath();\n        var broker = qx.event.message.Bus;\n\n        // let the refresh only be active when this widget is visible\n        this.setRestartOnVisible(true);\n\n        broker.subscribe(\"path.\" + pageId + \".beforePageChange\", function () {\n          if (!this._init) {\n            this.loadDiagramData(this.plot, false, false);\n          }\n        }, this);\n\n        broker.subscribe(\"page.\" + pageId + \".appear\", function () {\n          // create diagram when it's not already existing\n          if (this._init) {\n            this.initDiagram(false);\n          }\n        }, this);\n\n        // initialize the diagram but don't make the initialization process wait for it\n        // by using a deferred call\n        if (this.isVisible()) {\n          new qx.util.DeferredCall(function () {\n            if (!this._init) {\n              this.loadDiagramData(this.plot, false, false);\n            } else {\n              this.initDiagram(false);\n            }\n          }, this).schedule();\n        } else {\n          this.__vlid1 = this.addListener(\"changeVisible\", function(ev) {\n            if (ev.getData()) {\n              if (!this._init) {\n                this.loadDiagramData(this.plot, false, false);\n              } else {\n                this.initDiagram(false);\n              }\n              this.removeListenerById(this.__vlid1);\n              this.__vlid1 = null;\n            }\n          }, this);\n        }\n        this.$$domReady = true;\n        this.initListeners();\n      }\n    },\n\n    _getInnerDomString: function() {\n      var\n        classStr = this.getPreviewlabels() ? 'diagram_inline' : 'diagram_preview',\n        styleStr = 'min-height: 40px' +\n          (this.getWidth()  ? (';width:'  + this.getWidth() ) : ''             ) +\n          (this.getHeight() ? (';height:' + this.getHeight()) : ';height: 100%');\n\n      return '<div class=\"actor clickable\" style=\"height: 100%; min-height: 40px;\"><div class=\"' + classStr + '\" style=\"' + styleStr + '\">loading...</div></div>';\n    }\n  },\n\n  defer: function(statics) {\n    // register the parser\n    cv.parser.WidgetParser.addHandler(\"diagram\", statics);\n    cv.ui.structure.WidgetFactory.registerClass(\"diagram\", statics);\n  }\n});\n","/* Info.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.plugins.diagram.Info', {\n  extend: cv.plugins.diagram.AbstractDiagram,\n  include: [cv.ui.common.Update],\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function(props) {\n    this._init = false;\n    this.base(arguments, props);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.plugins.diagram.AbstractDiagram.parse(xml, path, flavour, pageType);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      return data;\n    }\n  },\n\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    _getInnerDomString: function() {\n      return '<div class=\"actor clickable switchUnpressed\"><div class=\"value\">-</div></div>';\n    },\n    _update: function(address, data) {\n      if (address !== undefined && data !== undefined) {\n        return this.defaultUpdate(address, data, this.getDomElement(), true, this.getPath());\n      }\n    }\n  },\n\n  defer: function(statics) {\n    // register the parser\n    cv.parser.WidgetParser.addHandler(\"diagram_info\", statics);\n    cv.ui.structure.WidgetFactory.registerClass(\"diagram_info\", statics);\n  }\n});"]}