{"version":3,"sources":["../../../source/class/cv/plugins/ColorChooser.js"],"names":["fb","width","callback","$","bind","updateValue","setColor","get","value","event","this","color","unpack","rgb","hsl","RGBToHSL","updateDisplay","pack","widgetCoords","offset","wheel","x","pageX","left","y","pageY","top","mousedown","pos","circleDrag","Math","max","abs","square","mousemove","e","originalEvent","touches","item","touchmove","touchconvert","preventDefault","touchend","document","unbind","dragging","hue","setHSL","sat","min","lum","mouseup","angle","css","round","cos","radius","HSLToRGB","backgroundColor","each","call","r","b","toString","g","length","parseInt","substring","m1","m2","h","s","l","hueToRGB","delta"],"mappings":"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","sourcesContent":["/* ColorChooser.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n *\n * @since 0.5.2\n * @author Christian Mayer [CometVisu at ChristianMayer dot de]\n *\n * @asset(plugins/colorchooser/farbtastic/farbtastic.js)\n * @asset(plugins/colorchooser/farbtastic/farbtastic.css)\n * @asset(plugins/colorchooser/farbtastic/wheel.png)\n * @asset(plugins/colorchooser/farbtastic/mask.png)\n * @asset(plugins/colorchooser/farbtastic/marker.png)\n */\nqx.Class.define('cv.plugins.ColorChooser', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Update, cv.ui.common.Operate],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n      return data;\n    },\n\n    makeAddressListFn: function( src, transform, mode, variant ) {\n      return [ true, variant ];\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    valueR: {\n      check: \"Number\",\n      init: 0\n    },\n    valueG: {\n      check: \"Number\",\n      init: 0\n    },\n    valueB: {\n      check: \"Number\",\n      init: 0\n    },\n    busR: {\n      check: \"Number\",\n      init: 0\n    },\n    busG: {\n      check: \"Number\",\n      init: 0\n    },\n    busB: {\n      check: \"Number\",\n      init: 0\n    },\n    rateLimiter: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __skipSending: false,\n\n    _onDomReady: function() {\n      this.base(arguments);\n      var $actor = $( '#' + this.getPath() + ' .actor' );\n      $actor.farbtastic( function(color){\n        this.setValueR(parseInt(color.substring(1, 3), 16) * 100 / 255.0);\n        this.setValueG(parseInt(color.substring(3, 5), 16) * 100 / 255.0);\n        this.setValueB(parseInt(color.substring(5, 7), 16) * 100 / 255.0);\n\n        if( this.getRateLimiter() === false && this.__skipSending === false) {// already requests going?\n          this._rateLimitedSend($actor);\n        }\n      }.bind(this));\n    },\n\n    _rateLimitedSend: function() {\n      var modified = false;\n      var address = this.getAddress();\n      var r  = this.getValueR();\n      var g  = this.getValueG();\n      var b  = this.getValueB();\n      var br = this.getBusR();\n      var bg = this.getBusG();\n      var bb = this.getBusB();\n      var v;\n      var templateEngine = cv.TemplateEngine.getInstance();\n      for( var addr in address )\n      {\n        if( !cv.data.Model.isWriteAddress(address[addr]) ) { continue; } // skip when write flag not set\n        switch( address[addr][2] )\n        {\n          case 'r':\n            v = cv.Transform.encode(address[addr][0], r );\n            if( v !== cv.Transform.encode(address[addr][0], br ) )\n            {\n              templateEngine.visu.write( addr, v );\n              modified = true;\n            }\n            break;\n          case 'g':\n            v = cv.Transform.encode(address[addr][0], g );\n            if( v !== cv.Transform.encode(address[addr][0], bg ) )\n            {\n              templateEngine.visu.write( addr, v );\n              modified = true;\n            }\n            break;\n          case 'b':\n            v = cv.Transform.encode(address[addr][0], b );\n            if( v !== cv.Transform.encode(address[addr][0], bb ) )\n            {\n              templateEngine.visu.write( addr, v );\n              modified = true;\n            }\n            break;\n          case 'rgb':\n            var rgb = [r*255/100.0,g*255/100.0,b*255/100.0];\n            var brgb = [br*255/100.0,bg*255/100.0,bb*255/100.0];\n            v = cv.Transform.encode(address[addr][0], rgb );\n            var bv = cv.Transform.encode(address[addr][0], brgb );\n            if( v[0] !== bv[0] || v[1] !== bv[1] || v[2] !== bv[2] )\n            {\n              templateEngine.visu.write( addr, v.join(\",\") );\n              modified = true;\n            }\n            break;\n        }\n      }\n\n      if( modified )\n      {\n        this.setBusR(this.getValueR());\n        this.setBusG(this.getValueG());\n        this.setBusB(this.getValueB());\n        this.setRateLimiter(true);\n        this.__timer = qx.event.Timer.once(this._rateLimitedSend, this, 250); // next call in 250ms\n      } else {\n        this.setRateLimiter(false);\n      }\n    },\n\n    _getInnerDomString: function() {\n      return '<div class=\"actor\"></div>';\n    },\n\n    _update: function( ga, data ) {\n      if (ga === undefined) { return; }\n      function toHex( x ) { var r = parseInt( x ).toString(16); return r.length === 1 ? '0'+r : r; }\n      var\n        value      = cv.Transform.decode( this.getAddress()[ ga ][0], data ),\n        farbtastic = jQuery.farbtastic( this.getActor() ),\n        color      = farbtastic.color || '#000000';\n\n      switch( this.getAddress()[ ga ][2] )\n      {\n        case 'r':\n          this.setBusR(value);\n          color = color.substring(0,1) +\n            toHex( value*255/100 )+\n            color.substring(3);\n          break;\n\n        case 'g':\n          this.setBusG(value);\n          color = color.substring(0,3) +\n            toHex( value*255/100 )+\n            color.substring(5);\n          break;\n\n        case 'b':\n          this.setBusB(value);\n          color = color.substring(0,5) +\n            toHex( value*255/100 )+\n            color.substring(7);\n          break;\n        case 'rgb':\n          this.setBusR(value[0]);\n          this.setBusG(value[1]);\n          this.setBusB(value[2]);\n          color = color.substring(0,1) +\n            toHex( value[0]*255/100 )+\n            toHex( value[1]*255/100 )+\n            toHex( value[2]*255/100 )+\n            color.substring(7);\n          break;\n      }\n      this.__skipSending = true;\n      if (this.__timer) {\n        this.__timer.stop();\n        this.__timer = null;\n        this.setRateLimiter(false);\n      }\n      farbtastic.setColor( color );\n      this.__skipSending = false;\n    }\n  },\n\n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/colorchooser/farbtastic/farbtastic.css');\n    loader.addScripts('plugins/colorchooser/farbtastic/farbtastic.js');\n    // register the parser\n    cv.parser.WidgetParser.addHandler(\"colorchooser\", statics);\n    cv.ui.structure.WidgetFactory.registerClass(\"colorchooser\", statics);\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__farbtastic = null;\n  }\n});"]}