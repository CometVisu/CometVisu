{"version":3,"sources":["../../../source/class/cv/plugins/Timeout.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractBasicWidget","construct","props","constructor","call","this","__timeoutIdleCount","__initialize","statics","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","target","default","time","transform","parseFloat","debug","value","properties","check","init","members","__timeoutCurrentPage","__timeoutCurrentPageTitle","__timeoutTargetPage","__timer","isDebug","getTime","getTarget","deltaT","event","Timer","addListener","timeoutTrigger","start","Registration","window","_onUserAction","message","Bus","subscribe","ev","getData","document","querySelector","innerText","templateEngine","TemplateEngine","getInstance","scrollToPage","getCurrentPage","getDomElement","scrollTop","destruct","_disposeObjects","defer","addHandler","plugins","Timeout","WidgetFactory","registerClass"],"mappings":"qUAACA,GAAEC,UAAUC,qBAAqBC,GA0BjCH,GAAEI,MAAMC,OAAO,sBACdC,OAAQC,GAAGC,GAAGC,UAAUC,oBAOxBC,UAAW,SAASC,GAClBL,GAAAC,GAAAC,UAAAC,oBAAAG,YAAAC,KAAAC,KAAqBH,GACrBG,KAAKC,mBAAqB,EAC1BD,KAAKE,gBASPC,SAWEC,MAAO,SAAUC,EAAKC,EAAMC,EAASC,GACnC,OAAOhB,GAAGiB,OAAOC,aAAaC,aAAaX,KAAMK,EAAKC,EAAMC,EAASC,EAAUR,KAAKY,mCAGtFA,+BAAgC,WAC9B,OACEC,QAAYC,QAAW,OACvBC,MAAUD,QAAW,IAAKE,UAAWC,YACrCC,OACEJ,SAAW,EACXE,UAAW,SAASG,GAClB,MAAiB,SAAVA,OAYjBC,YACEP,QACEQ,MAAO,SACPC,KAAM,OAERP,MACEM,MAAO,SACPC,KAAM,KAERJ,OACEG,MAAO,UACPC,MAAM,IAUVC,SACEtB,mBAAoB,KACpBuB,qBAAsB,KACtBC,0BAA2B,KAC3BC,oBAAqB,KACrBC,QAAS,KAETzB,aAAc,WACZ,GAAIF,KAAK4B,UAAW,CAClB5B,KAAKkB,MAAM,oBAAsBlB,KAAK6B,WACtC7B,KAAKkB,MAAM,gBAAkBlB,KAAK8B,aAGpC,IAAIC,EAA0B,IAAjB/B,KAAK6B,UAClB7B,KAAK2B,QAAU,IAAI1C,GAAG+C,MAAMC,MAAMF,GAClC/B,KAAK2B,QAAQO,YAAY,WAAYlC,KAAKmC,eAAgBnC,MAC1DA,KAAK2B,QAAQS,QAGbnD,GAAG+C,MAAMK,aAAaH,YAAYI,OAAQ,aAActC,KAAKuC,cAAevC,MAG5Ef,GAAG+C,MAAMQ,QAAQC,IAAIC,UAAU,mBAAoB,SAAUC,GAC3D,IAAIrC,EAAOqC,EAAGC,UACd5C,KAAKwB,qBAAuBlB,EAC5BN,KAAKyB,0BAA4BoB,SAASC,cAAc,IAAMxC,EAAM,aAAayC,UACjF/C,KAAKC,mBAAqB,GASzBD,OAGLuC,cAAe,WACbvC,KAAKC,mBAAqB,GAG5BkC,eAAgB,WACVnC,KAAK4B,WACP5B,KAAKkB,MAAM,yBAA2BlB,KAAKC,mBAAqB,KAElED,KAAKC,qBACLD,KAAK0B,oBAAsB1B,KAAK8B,YAChC,GAAI9B,KAAKC,oBAAsB,GAAI,CACjCD,KAAKC,mBAAqB,EAC1B,IAAI+C,EAAiBxD,GAAGyD,eAAeC,cAEvC,GAAIlD,KAAKwB,uBAAyBxB,KAAK0B,qBAAuB1B,KAAKyB,4BAA8BzB,KAAK0B,oBAAqB,CACrH1B,KAAK4B,WACP5B,KAAKkB,MAAM,wCAA0ClB,KAAK0B,qBAE5DsB,EAAeG,aAAanD,KAAK0B,qBACjCsB,EAAeI,iBAAiBC,gBAAgBC,UAAY,MAEvD,CACDtD,KAAK4B,WACP5B,KAAKkB,MAAM,4BAA8BlB,KAAK0B,qBAEhDsB,EAAeI,iBAAiBC,gBAAgBC,UAAY,MAWpEC,SAAU,WACRvD,KAAKwD,gBAAgB,YAIvBC,MAAO,SAAStD,GACdX,GAAGiB,OAAOC,aAAagD,WAAW,UAAWlE,GAAGmE,QAAQC,SACxDpE,GAAGC,GAAGC,UAAUmE,cAAcC,cAAc,UAAW3D,MAtL1DX,GAAEmE,QAAQC,QAAQxE,cAAgBA","sourcesContent":["/* Timeout.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins jumps back to a defined page after a given timeout period\n *\n * @author Carsten Tschach (Carsten@Tschach.com)\n * @since 2012\n */\nqx.Class.define('cv.plugins.Timeout', {\n  extend: cv.ui.structure.AbstractBasicWidget,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    this.base(arguments, props);\n    this.__timeoutIdleCount = 0;\n    this.__initialize();\n  },\n\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'target': { \"default\": \"id_\" },\n        'time': { \"default\": 600, transform: parseFloat },\n        'debug': {\n          \"default\": false,\n          transform: function(value) {\n            return value === \"true\";\n          }\n        }\n      };\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    target: {\n      check: \"String\",\n      init: \"id_\"\n    },\n    time: {\n      check: \"Number\",\n      init: 600\n    },\n    debug: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __timeoutIdleCount: null,\n    __timeoutCurrentPage: null,\n    __timeoutCurrentPageTitle: null,\n    __timeoutTargetPage: null,\n    __timer: null,\n\n    __initialize: function () {\n      if (this.isDebug()) {\n        this.debug(\"Timeout Set to : \" + this.getTime());\n        this.debug(\"Target Page: \" + this.getTarget());\n      }\n\n      var deltaT = this.getTime() * 100;\n      this.__timer = new qx.event.Timer(deltaT);\n      this.__timer.addListener(\"interval\", this.timeoutTrigger, this);\n      this.__timer.start();\n\n      // Reset Counter on every interaction\n      qx.event.Registration.addListener(window, \"useraction\", this._onUserAction, this);\n\n      // Keep track of current page\n      qx.event.message.Bus.subscribe(\"path.pageChanged\", function (ev) {\n        var path = ev.getData();\n        this.__timeoutCurrentPage = path;\n        this.__timeoutCurrentPageTitle = document.querySelector(\"#\" + path+ \" div > h1\").innerText;\n        this.__timeoutIdleCount = 0;\n        /* We could trun on and off the above binds if we are already on the right page\n\n         if (timeoutCurrentPage === timeoutTargetPage) {\n         console.log(\"XXXXXX TIMEOUT: Scrolled to Target Page: \" + path);\n         } else {\n         console.log(\"XXXXXX TIMEOUT: Scrolled to: \" + path + \" (\"+timeoutTargetPage + \")\");\n         }\n         */\n      }, this);\n    },\n\n    _onUserAction: function() {\n      this.__timeoutIdleCount = 0;\n    },\n\n    timeoutTrigger: function () {\n      if (this.isDebug()) {\n        this.debug(\"TIMEOUT: Got Trigger (\" + this.__timeoutIdleCount + \")\");\n      }\n      this.__timeoutIdleCount++;\n      this.__timeoutTargetPage = this.getTarget();\n      if (this.__timeoutIdleCount >= 10) {\n        this.__timeoutIdleCount = 0;\n        var templateEngine = cv.TemplateEngine.getInstance();\n\n        if (this.__timeoutCurrentPage !== this.__timeoutTargetPage && this.__timeoutCurrentPageTitle !== this.__timeoutTargetPage) {\n          if (this.isDebug()) {\n            this.debug(\"TIMEOUT: Got Timeout - Now Goto Page \" + this.__timeoutTargetPage);\n          }\n          templateEngine.scrollToPage(this.__timeoutTargetPage);\n          templateEngine.getCurrentPage().getDomElement().scrollTop = 0;\n          //templateEngine.updateTopNavigation();\n        } else {\n          if (this.isDebug()) {\n            this.debug(\"TIMEOUT: Already on page \" + this.__timeoutTargetPage);\n          }\n          templateEngine.getCurrentPage().getDomElement().scrollTop = 0;\n        }\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects(\"__timer\");\n  },\n\n\n  defer: function(statics) {\n    cv.parser.WidgetParser.addHandler(\"timeout\", cv.plugins.Timeout);\n    cv.ui.structure.WidgetFactory.registerClass(\"timeout\", statics);\n  }\n\n});\n\n"]}