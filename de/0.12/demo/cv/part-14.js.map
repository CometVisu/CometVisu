{"version":3,"sources":["../../../source/class/cv/plugins/Strftime.js"],"names":["qx","Bootstrap","executePendingDefers","$$dbClassInfo","Class","define","extend","cv","ui","structure","AbstractWidget","properties","format","check","init","locale","nullable","statics","__elements","__internalCounter","__timer","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","lang","target","default","uniqid","startTimer","event","Timer","isEnabled","start","members","__timerStarted","__valueElement","_getInnerDomString","getValueElement","getDomElement","querySelector","_onDomReady","plugins","Strftime","addListener","__update","elem","d","Date","getLocale","innerText","strftime","getFormat","destruct","removeListener","defer","util","ScriptLoader","getInstance","addStyles","addHandler","WidgetFactory","registerClass","ext","locales","de","a","A","b","B","c","p","P","x","X","fr"],"mappings":"gRAACA,GAAEC,UAAUC,qBAAqBC,GA2BjCH,GAAEI,MAAMC,OAAO,uBACdC,OAAQC,GAAGC,GAAGC,UAAUC,eAOxBC,YACEC,QACEC,MAAO,SACPC,KAAM,MAERC,QACEF,MAAO,SACPG,UAAU,IASdC,SACEC,cACAC,kBAAoB,EACpBC,QAAU,KAWVC,MAAO,SAAUC,EAAKC,EAAMC,EAASC,GACnC,OAAOlB,GAAGmB,OAAOC,aAAaC,aAAaC,KAAMP,EAAKC,EAAMC,EAASC,EAAUI,KAAKC,mCAGtFA,+BAAgC,WAC9B,OACEC,MAAUC,OAAQ,UAClBpB,QAAYqB,QAAW,QAI3BC,OAAQ,WACN,OAAOL,KAAKV,qBAGdgB,WAAY,WACLN,KAAKT,UACRS,KAAKT,QAAU,IAAIpB,GAAGoC,MAAMC,MAAM,MAE/BR,KAAKT,QAAQkB,aAChBT,KAAKT,QAAQmB,UAUnBC,SACEC,gBAAgB,EAChBC,eAAgB,KAEhBC,mBAAoB,WAClB,MAAO,sCAITC,gBAAiB,WACVf,KAAKa,iBACRb,KAAKa,eAAiBb,KAAKgB,gBAAgBC,cAAc,oBAE3D,OAAOjB,KAAKa,gBAIdK,YAAa,WACXxC,GAAAyC,QAAAC,SAAqBd,aACrB5B,GAAAyC,QAAAC,SAAqB7B,QAAQ8B,YAAY,WAAYrB,KAAKsB,SAAUtB,OAGtEsB,SAAU,WACR,IAAIC,EAAOvB,KAAKe,kBACZS,EAAI,IAAIC,KACZD,EAAEtC,OAASc,KAAK0B,YAChBH,EAAKI,UAAYH,EAAEI,SAAS5B,KAAK6B,eASrCC,SAAU,WACRpD,GAAAyC,QAAAC,SAAqB7B,QAAQwC,eAAe,WAAY/B,KAAKsB,SAAUtB,OAGzEgC,MAAO,SAAS5C,GACDV,GAAGuD,KAAKC,aAAaC,cAC3BC,UAAU,iCACjB1D,GAAGmB,OAAOC,aAAauC,WAAW,WAAYjD,GAC9CV,GAAGC,GAAGC,UAAU0D,cAAcC,cAAc,WAAYnD,GAGxDqC,KAAKe,IAAIC,QAAQC,IACfC,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxCC,GAAI,UAAW,SAAU,WAAY,WAAY,aAAc,UAAW,WAC1EC,GAAI,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACjFC,GAAI,SAAU,UAAW,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC/GC,EAAG,oBACHC,GAAI,GAAI,IACRC,GAAI,GAAI,IACRC,EAAG,WACHC,EAAG,MAEL1B,KAAKe,IAAIC,QAAQW,IACfT,GAAI,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC9CC,GAAI,WAAY,QAAS,QAAS,WAAY,QAAS,WAAY,UACnEC,GAAI,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACjFC,GAAI,UAAW,UAAW,OAAQ,QAAS,MAAO,OAAQ,UAAW,OAAQ,YAAa,UAAW,WAAY,YACjHC,EAAG,oBACHC,GAAI,GAAI,IACRC,GAAI,GAAI,IACRC,EAAG,WACHC,EAAG,SAjKRzE,GAAEyC,QAAQC,SAAS9C,cAAgBA","sourcesContent":["/* Strftime.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins integrates formated date and clock strings into based on strftime.\n *\n * @author Michael Hausl [michael at hausl dot com]\n * @since 0.8.0\n * @asset(plugins/strftime/strftime.css)\n */\nqx.Class.define('cv.plugins.Strftime', {\n  extend: cv.ui.structure.AbstractWidget,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    format: {\n      check: \"String\",\n      init: \"%c\"\n    },\n    locale: {\n      check: \"String\",\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    __elements : {},\n    __internalCounter : 0,\n    __timer : null,\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'lang': { target: 'locale' },\n        'format': { \"default\": \"%c\"}\n      };\n    },\n\n    uniqid: function() {\n      return this.__internalCounter++;\n    },\n\n    startTimer: function() {\n      if (!this.__timer) {\n        this.__timer = new qx.event.Timer(1000);\n      }\n      if (!this.__timer.isEnabled()) {\n        this.__timer.start();\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __timerStarted: false,\n    __valueElement: null,\n\n    _getInnerDomString: function () {\n      return '<div class=\"strftime_value\"></div>';\n    },\n\n    // overridden\n    getValueElement: function() {\n      if (!this.__valueElement) {\n        this.__valueElement = this.getDomElement().querySelector(\".strftime_value\");\n      }\n      return this.__valueElement;\n    },\n\n    // overridden\n    _onDomReady: function () {\n      this.self(arguments).startTimer();\n      this.self(arguments).__timer.addListener(\"interval\", this.__update, this);\n    },\n\n    __update: function() {\n      var elem = this.getValueElement();\n      var d = new Date();\n      d.locale = this.getLocale();\n      elem.innerText = d.strftime(this.getFormat());\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this.self(arguments).__timer.removeListener(\"interval\", this.__update, this);\n  },\n\n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/strftime/strftime.css');\n    cv.parser.WidgetParser.addHandler(\"strftime\", statics);\n    cv.ui.structure.WidgetFactory.registerClass(\"strftime\", statics);\n\n    // extend locales by German and French\n    Date.ext.locales.de = {\n      a: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n      A: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n      b: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n      B: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n    Date.ext.locales.fr = {\n      a: ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'],\n      A: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n      b: ['jan', 'fév', 'mar', 'avr', 'mai', 'jun', 'jui', 'aoû', 'sep', 'oct', 'nov', 'déc'],\n      B: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n  }\n});"]}