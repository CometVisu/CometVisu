qx.$$packageData['1048381']={"locales":{},"resources":{},"translations":{"de":{},"en":{}}};
qx.Part.$$notifyLoad("1048381", function() {
(function(){var a="text",b="id_",c="abstract",d='#',e="set",f="page",g="3d",h='Compatability mode used - everything should be set up, so that getDomElement() can return the element and not `document` instead.',i="2d",j="navbar",k='cv.ui.structure.AbstractBasicWidget',l="String";qx.Class.define(k,{extend:qx.core.Object,type:c,construct:function(m){for(var n in m){if(this[e+qx.Bootstrap.firstUp(n)]!==undefined){this.set(n,m[n]);};};},properties:{path:{check:l},$$type:{check:l},pageType:{check:[a,i,g],init:a}},members:{__rj:null,setParentWidget:function(o){this.__rj=o;},getParentWidget:function(){if(cv.Config.lazyLoading===true&&this.__rj===null&&this.getPath()!==b){var p=cv.util.Tree.getParentData(this.getPath());var parent=cv.ui.structure.WidgetFactory.createInstance(p.$$type,p);this.setParentWidget(parent);};return this.__rj;},getDomElement:function(){var q=document.querySelector(d+this.getPath());if(null===q){console.warn(h,this.get$$type(),this.getPath());return document;};return q;},getDomString:function(){return this._getInnerDomString?this._getInnerDomString():undefined;},getParentPage:function(){var parent=this.getParentWidget();while(parent){if(parent.get$$type()===f){return parent;};parent=parent.getParentWidget();};return null;},getVisibilityParent:function(){var parent=this.getParentWidget();while(parent){if(parent.get$$type()===f||parent.get$$type()===j){return parent;};parent=parent.getParentWidget();};return null;}}});})();
});