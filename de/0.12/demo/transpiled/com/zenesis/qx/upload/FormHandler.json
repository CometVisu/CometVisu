{
  "className": "com.zenesis.qx.upload.FormHandler",
  "packageName": "com.zenesis.qx.upload",
  "name": "FormHandler",
  "superClass": "com.zenesis.qx.upload.AbstractHandler",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 33,
        "column": 0
      },
      "end": {
        "line": 201,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>****************************************************************\n</code></pre>\n<p>UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user\n   interface during uploads, supports cancelling uploads.\n   http://qooxdoo.org\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory\n     for details.\n     Parts of this code is based on the work by Andrew Valums (andrew@valums.com)\n     and is covered by the GNU GPL and GNU LGPL2 licenses; please see\n     http://valums.com/ajax-upload/.\n   Authors:\n John Spackman (john.spackman@zenesis.com)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em></p>"
        },
        {
          "name": "@description",
          "body": "<p>Implementation of AbstractHandler that uses iframe and form DOM elements to\n send the file.</p>"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "addBlob": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename    {String}  name of object",
            "paramName": "filename",
            "description": "  name of object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "blob        {Blob}    the blob to upload",
            "paramName": "blob",
            "description": "    the blob to upload",
            "type": "Blob"
          },
          {
            "name": "@param",
            "body": "params      {Object}  List of params added to the upload params",
            "paramName": "params",
            "description": "  List of params added to the upload params",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "com.zenesis.qx.upload.AbstractHandler",
      "appearsIn": [
        "com.zenesis.qx.upload.AbstractHandler"
      ]
    },
    "_createFile": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input\n          {DOM} the DOM input[type=file]",
            "paramName": "input",
            "description": " the DOM input[type=file]",
            "type": "DOM"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]}",
            "type": "com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "com.zenesis.qx.upload.AbstractHandler",
      "appearsIn": [
        "com.zenesis.qx.upload.AbstractHandler"
      ]
    },
    "_doUpload": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File}"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "com.zenesis.qx.upload.AbstractHandler",
      "appearsIn": [
        "com.zenesis.qx.upload.AbstractHandler"
      ]
    },
    "_doCancel": {
      "location": {
        "start": {
          "line": 100,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@Override": [
          {
            "name": "@Override",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} file to cancel uploading",
            "paramName": "file",
            "description": " file to cancel uploading",
            "type": "com.zenesis.qx.upload.File"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "com.zenesis.qx.upload.AbstractHandler",
      "appearsIn": [
        "com.zenesis.qx.upload.AbstractHandler"
      ]
    },
    "_getIframeContent": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns text received by iframe from server.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createIframe": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates iframe with unique name</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{DOMElement} the iframe",
            "type": "DOMElement",
            "description": " the iframe"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createForm": {
      "location": {
        "start": {
          "line": 168,
          "column": 4
        },
        "end": {
          "line": 198,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates form, that will be submitted to iframe</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{DOMElement} the form",
            "type": "DOMElement",
            "description": " the form"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset"
    },
    "getMaxConnections": {
      "type": "function",
      "name": "getMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxConnections</code>.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxConnections"
          }
        ]
      }
    },
    "setMaxConnections": {
      "type": "function",
      "name": "setMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxConnections</code>.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxConnections"
          }
        ]
      }
    },
    "resetMaxConnections": {
      "type": "function",
      "name": "resetMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxConnections</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ]
      }
    }
  },
  "descendants": []
}