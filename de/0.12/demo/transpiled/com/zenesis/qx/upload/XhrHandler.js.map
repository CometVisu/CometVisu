{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v1_0_4/source/class/com/zenesis/qx/upload/XhrHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "AbstractHandler",
    "members",
    "addBlob",
    "filename",
    "blob",
    "params",
    "id",
    "_getUniqueFileId",
    "file",
    "File",
    "name",
    "value",
    "setParam",
    "_addFile",
    "_createFile",
    "input",
    "bomFiles",
    "files",
    "length",
    "debug",
    "i",
    "bomFile",
    "fileName",
    "fileSize",
    "size",
    "setSize",
    "push",
    "_doUpload",
    "sendAsMime",
    "binaryData",
    "body",
    "boundary",
    "xhr",
    "open",
    "action",
    "setRequestHeader",
    "encodeURIComponent",
    "getFilename",
    "send",
    "headerLength",
    "DEFAULT_HEADERS",
    "getSize",
    "document",
    "location",
    "host",
    "href",
    "navigator",
    "userAgent",
    "origin",
    "Origin",
    "key",
    "XMLHttpRequest",
    "XhrHandler",
    "isWithCredentials",
    "withCredentials",
    "self",
    "setUserData",
    "onprogress",
    "e",
    "lengthComputable",
    "total",
    "loaded",
    "setProgress",
    "onreadystatechange",
    "readyState",
    "response",
    "responseText",
    "setStatus",
    "status",
    "_onCompleted",
    "FormData",
    "fd",
    "_getUploader",
    "getUploadUrl",
    "_getMergedParams",
    "append",
    "getBrowserObject",
    "browserFile",
    "Math",
    "random",
    "type",
    "getAsBinary",
    "reader",
    "FileReader",
    "onload",
    "evt",
    "target",
    "result",
    "readAsBinaryString",
    "_doCancel",
    "getUserData",
    "abort",
    "statics",
    "__withCredentials",
    "isSupported",
    "requireMultipartFormData",
    "createElement",
    "setWithCredentials"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n     Parts of this code is based on the work by Andrew Valums (andrew@valums.com)\n     and is covered by the GNU GPL and GNU LGPL2 licenses; please see\n     http://valums.com/ajax-upload/.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n/**\n * @ignore(File)\n * @ignore(FileReader)\n * @ignore(FormData)\n */\n/**\n * Implementation of AbstractHandler that uses XMLHttpRequest; this is based on\n * work at http://valums.com/ajax-upload/.\n * \n * Call com.zenesis.qx.upload.XhrHandler.isSupported() to check whether this\n * class can be used (otherwise use FormHandler)\n */\nqx.Class.define(\"com.zenesis.qx.upload.XhrHandler\", {\n  extend: com.zenesis.qx.upload.AbstractHandler,\n\n  members: {\n      \n    /*\n     * @Override\n     */\n    addBlob: function (filename, blob, params){\n     var id = \"upload-\" + this._getUniqueFileId();\n     var file = new com.zenesis.qx.upload.File(blob, filename, id);\n     if (params) {\n      for (var name in params) {\n         var value = params[name];\n         if (value !== null)\n           file.setParam(name, value);\n      }\n     }\n     this._addFile(file);\n    },\n      \n    /*\n     * @Override\n     */\n    _createFile: function(input) {\n      var bomFiles = input.files;\n      if (!bomFiles || !bomFiles.length)\n        this.debug(\"No files found to upload via XhrHandler\");\n\n      var files = [];\n      for (var i = 0; i < bomFiles.length; i++) {\n        var bomFile = bomFiles[i];\n        var id = \"upload-\" + this._getUniqueFileId();\n        var filename = typeof bomFile.name != \"undefined\" ? bomFile.name : bomFile.fileName;\n        var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n        var fileSize = typeof bomFile.size != \"undefined\" ? bomFile.size : bomFile.fileSize;\n        file.setSize(fileSize);\n        files.push(file);\n      }\n\n      return files;\n    },\n\n    /*\n     * @Override\n     */\n    _doUpload: function(file) {\n      function sendAsMime(binaryData) {\n        body += binaryData + \"\\r\\n\";\n        body += \"--\" + boundary + \"--\";\n\n        xhr.open(\"POST\", action, true);\n        setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        setRequestHeader(\"X-File-Name\", encodeURIComponent(file.getFilename()));\n        setRequestHeader(\"Content-Type\", \"multipart/form-data; boundary=\" + boundary);\n        xhr.send(body);\n      }\n      \n      function setRequestHeader(name, value) {\n      \txhr.setRequestHeader(name, value);\n      \theaderLength += name.length + 2 + value.length + 1;\n      }\n      \n      /*\n       * The upload progress includes the size of the headers, but we cannot ask XMLHttpRequest what the\n       * headers were so we count the headers we set and also add these below.  This is never going to be\n       * completely accurate, but it gets us a lot closer.\n       */\n      var headerLength = 0;\n      var DEFAULT_HEADERS = {\n      \t\t\"Accept\": \"*/*\",\n      \t\t\"Accept-Encoding\": \"gzip, deflate\",\n      \t\t\"Accept-Language\": \"en,en-US;q=0.8\",\n      \t\t\"Cache-Control\": \"no-cache\",\n      \t\t\"Connection\": \"keep-alive\",\n      \t\t\"Content-Length\": \"\" + file.getSize(),\n      \t\t\"Content-Type\": \"multipart/form-data; boundary=----WebKitFormBoundaryTfptZDRmE8C3dZmW\",\n      \t\t\"Host\": document.location.host,\n      \t\t\"Pragma\": \"no-cache\",\n      \t\t\"Referer\": document.location.href,\n      \t\t\"User-Agent\": navigator.userAgent\n      };\n      if (document.location.origin)\n        DEFAULT_HEADERS.Origin = document.location.origin;\n      for (var key in DEFAULT_HEADERS)\n      \theaderLength += DEFAULT_HEADERS[key].length + 1; \n\n      var xhr = new XMLHttpRequest();\n      if (com.zenesis.qx.upload.XhrHandler.isWithCredentials())\n        xhr.withCredentials = true;\n\n      var self = this;\n\n      file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", xhr);\n\n      xhr.upload.onprogress = function(e) {\n        self.debug(\"onprogress: lengthComputable=\" + e.lengthComputable + \", total=\" + e.total + \", loaded=\" + e.loaded + \", headerLength=\" + headerLength);\n        if (e.lengthComputable) {\n          file.setSize(e.total - headerLength);\n          file.setProgress(e.loaded - headerLength);\n        }\n      };\n\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState == 4) {\n          var response = xhr.responseText;\n          // self.debug(\"xhr server status=\" + xhr.status + \", responseText=\" +\n          // response);\n          file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", null);\n          file.setStatus(xhr.status);\n          self._onCompleted(file, response);\n        }\n      };\n\n      if (typeof FormData == \"function\" || typeof FormData == \"object\") {\n        var fd = new FormData();\n\n        // build query string\n        var action = this._getUploader().getUploadUrl();\n        var params = this._getMergedParams(file);\n        for (var name in params)\n          fd.append(name, encodeURIComponent(params[name]));\n        fd.append(\"file\", file.getBrowserObject());\n\n        xhr.open(\"POST\", action, true);\n        setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        setRequestHeader(\"X-File-Name\", encodeURIComponent(file.getFilename()));\n        xhr.send(fd);\n\n      } else {\n        var browserFile = file.getBrowserObject();\n        var boundary = \"--------FormData\" + Math.random(), body = \"\", action = this._getUploader().getUploadUrl(), params = this\n            ._getMergedParams(file);\n        for ( var name in params) {\n          body += \"--\" + boundary + \"\\r\\n\";\n          body += \"Content-Disposition: form-data; name=\\\"\" + name + \"\\\";\\r\\n\\r\\n\";\n          body += params[name] + \"\\r\\n\";\n        }\n        body += \"--\" + boundary + \"\\r\\n\";\n        body += \"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"\" + file.getFilename() + \"\\\"\\r\\n\";\n        body += \"Content-Type: \" + (browserFile.type || \"application/octet-stream\") + \"\\r\\n\\r\\n\";\n\n        if (typeof browserFile.getAsBinary == \"function\") {\n          sendAsMime(browserFile.getAsBinary());\n        } else {\n          var reader = new FileReader();\n          reader.onload = function(evt) {\n            sendAsMime(evt.target.result);\n          };\n          reader.readAsBinaryString(browserFile);\n        }\n      }\n    },\n\n    /*\n     * @Override\n     */\n    _doCancel: function(file) {\n      var xhr = file.getUserData(\"com.zenesis.qx.upload.XhrHandler\");\n      if (xhr) {\n        xhr.abort();\n        file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", null);\n      }\n    }\n  },\n\n  statics: {\n    __withCredentials: false,\n\n    /**\n     * Detects whether this handler is support on the current browser\n     * \n     * @returns {Boolean}\n     */\n    isSupported: function(requireMultipartFormData) {\n      var input = document.createElement('input');\n      input.type = 'file';\n\n      var isSupported = 'multiple' in input && typeof File != \"undefined\" && typeof (new XMLHttpRequest()).upload != \"undefined\";\n\n      return isSupported;\n    },\n\n    /**\n     * Whether to set XMLHttpRequest.withCredentials (used for CORS uploads wth\n     * cookies)\n     */\n    setWithCredentials: function(value) {\n      this.__withCredentials = true;\n    },\n\n    /**\n     * Whether to set XMLHttpRequest.withCredentials (used for CORS uploads wth\n     * cookies)\n     */\n    isWithCredentials: function() {\n      return this.__withCredentials;\n    }\n  }\n});\n"
  ]
}