{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/data/marshal/MEventBubbling.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "events",
    "members",
    "_applyEventPropagation",
    "value",
    "old",
    "name",
    "fireDataEvent",
    "item",
    "_registerEventChaining",
    "getUserData",
    "toHashCode",
    "listeners",
    "i",
    "length",
    "removeListenerById",
    "setUserData",
    "core",
    "Object",
    "Class",
    "hasMixin",
    "constructor",
    "data",
    "marshal",
    "MEventBubbling",
    "listener",
    "lang",
    "Function",
    "bind",
    "__changePropertyListener",
    "id",
    "addListener",
    "push",
    "e",
    "getData",
    "hasInterface",
    "getTarget",
    "IListData",
    "indexOf",
    "dotIndex",
    "bracketIndex",
    "newName",
    "index",
    "substring",
    "rest",
    "parseInt"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin used for the bubbling events. If you want to use this in your own model\n * classes, be sure that every property will call the\n * {@link #_applyEventPropagation} function on every change.\n */\nqx.Mixin.define(\"qx.data.marshal.MEventBubbling\",\n{\n\n  events :\n  {\n    /**\n     * The change event which will be fired on every change in the model no\n     * matter what property changes. This event bubbles so the root model will\n     * fire a change event on every change of its children properties too.\n     *\n     * Note that properties are required to call\n     * {@link #_applyEventPropagation} on apply for changes to be tracked as\n     * desired. It is already taken care of that properties created with the\n     * {@link qx.data.marshal.Json} marshaler call this method.\n     *\n     * The data will contain a map with the following four keys\n     *   <li>value: The new value of the property</li>\n     *   <li>old: The old value of the property.</li>\n     *   <li>name: The name of the property changed including its parent\n     *     properties separated by dots.</li>\n     *   <li>item: The item which has the changed property.</li>\n     * Due to that, the <code>getOldData</code> method will always return null\n     * because the old data is contained in the map.\n     */\n    \"changeBubble\": \"qx.event.type.Data\"\n  },\n\n\n  members :\n  {\n    /**\n     * Apply function for every property created with the\n     * {@link qx.data.marshal.Json} marshaler. It fires and\n     * {@link #changeBubble} event on every change. It also adds the chaining\n     * listener if possible which is necessary for the bubbling of the events.\n     *\n     * @param value {var} The new value of the property.\n     * @param old {var} The old value of the property.\n     * @param name {String} The name of the changed property.\n     */\n    _applyEventPropagation : function(value, old, name)\n    {\n      this.fireDataEvent(\"changeBubble\", {\n        value: value, name: name, old: old, item: this\n      });\n\n      this._registerEventChaining(value, old, name);\n    },\n\n\n    /**\n     * Registers for the given parameters the changeBubble listener, if\n     * possible. It also removes the old listener, if an old item with\n     * a changeBubble event is given.\n     *\n     * @param value {var} The new value of the property.\n     * @param old {var} The old value of the property.\n     * @param name {String} The name of the changed property.\n     */\n    _registerEventChaining : function(value, old, name)\n    {\n      // if an old value is given, remove the old listener if possible\n      if (old != null && old.getUserData && old.getUserData(\"idBubble-\" + this.toHashCode()) != null) {\n        var listeners = old.getUserData(\"idBubble-\" + this.toHashCode());\n        for (var i = 0; i < listeners.length; i++) {\n          old.removeListenerById(listeners[i]);\n        }\n        old.setUserData(\"idBubble-\" + this.toHashCode(), null);\n      }\n\n      // if the child supports chaining\n      if ((value instanceof qx.core.Object)\n        && qx.Class.hasMixin(value.constructor, qx.data.marshal.MEventBubbling)\n      ) {\n        // create the listener\n        var listener = qx.lang.Function.bind(\n          this.__changePropertyListener, this, name\n        );\n        // add the listener\n        var id = value.addListener(\"changeBubble\", listener, this);\n        var listeners = value.getUserData(\"idBubble-\" + this.toHashCode());\n        if (listeners == null)\n        {\n          listeners = [];\n          value.setUserData(\"idBubble-\" + this.toHashCode(), listeners);\n        }\n        listeners.push(id);\n      }\n    },\n\n\n    /**\n     * Listener responsible for formating the name and firing the change event\n     * for the changed property.\n     *\n     * @param name {String} The name of the former properties.\n     * @param e {qx.event.type.Data} The date event fired by the property\n     *   change.\n     */\n    __changePropertyListener : function(name, e)\n    {\n      var data = e.getData();\n      var value = data.value;\n      var old = data.old;\n\n      // if the target is an array\n      if (qx.Class.hasInterface(e.getTarget().constructor, qx.data.IListData)) {\n\n        if (data.name.indexOf) {\n          var dotIndex = data.name.indexOf(\".\") != -1 ? data.name.indexOf(\".\") : data.name.length;\n          var bracketIndex = data.name.indexOf(\"[\") != -1 ? data.name.indexOf(\"[\") : data.name.length;\n\n          // brackets in the first spot is ok [BUG #5985]\n          if (bracketIndex == 0) {\n            var newName = name + data.name;\n          } else if (dotIndex < bracketIndex) {\n            var index = data.name.substring(0, dotIndex);\n            var rest = data.name.substring(dotIndex + 1, data.name.length);\n            if (rest[0] != \"[\") {\n              rest = \".\" + rest;\n            }\n            var newName =  name + \"[\" + index + \"]\" + rest;\n          } else if (bracketIndex < dotIndex) {\n            var index = data.name.substring(0, bracketIndex);\n            var rest = data.name.substring(bracketIndex, data.name.length);\n            var newName =  name + \"[\" + index + \"]\" + rest;\n          } else {\n            var newName =  name + \"[\" + data.name + \"]\";\n          }\n        } else {\n          var newName =  name + \"[\" + data.name + \"]\";\n        }\n\n      // if the target is not an array\n      } else {\n        // special case for array as first element of the chain [BUG #5985]\n        if (parseInt(name) == name && name !== \"\") {\n          name = \"[\" + name + \"]\";\n        }\n        var newName =  name + \".\" + data.name;\n      }\n\n      this.fireDataEvent(\n        \"changeBubble\",\n        {\n          value: value,\n          name: newName,\n          old: old,\n          item: data.item || e.getTarget()\n        }\n      );\n    }\n  }\n});\n"
  ]
}