{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/data/marshal/IMarshaler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "toClass",
    "data",
    "includeBubbleEvents",
    "toModel",
    "marshal",
    "IMarshaler"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,4BAApB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASC,IAAT,EAAeC,mBAAf,EAAoC,CAAE,CAXlD;;AAcE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAAO,EAAG,iBAASF,IAAT,EAAe,CAAE;AAtB7B;AAFF,GADA;AArBAR,EAAAA,EAAE,CAACQ,IAAH,CAAQG,OAAR,CAAgBC,UAAhB,CAA2BT,aAA3B,GAA2CA,aAA3C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Defines the methods needed by every marshaler which should work with the\n * qooxdoo data stores.\n */\nqx.Interface.define(\"qx.data.marshal.IMarshaler\",\n{\n  members :\n  {\n    /**\n     * Creates for the given data the needed classes. The classes contain for\n     * every key in the data a property. The classname is always the prefix\n     * <code>qx.data.model</code>. Two objects containing the same keys will not\n     * create two different classes.\n     *\n     * @param data {Object} The object for which classes should be created.\n     * @param includeBubbleEvents {Boolean} Whether the model should support\n     *   the bubbling of change events or not.\n     */\n    toClass : function(data, includeBubbleEvents) {},\n\n\n    /**\n     * Creates for the given data the needed models. Be sure to have the classes\n     * created with {@link #toClass} before calling this method.\n     *\n     * @param data {Object} The object for which models should be created.\n     *\n     * @return {qx.core.Object} The created model object.\n     */\n    toModel : function(data) {}\n  }\n});\n"
  ]
}