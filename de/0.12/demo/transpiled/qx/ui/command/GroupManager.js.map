{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/command/GroupManager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "__groups",
    "members",
    "__activeGroup",
    "add",
    "group",
    "includes",
    "push",
    "setActive",
    "has",
    "_getGroup",
    "remove",
    "index",
    "indexOf",
    "getActive",
    "splice",
    "i",
    "length",
    "item",
    "block",
    "unblock",
    "destruct",
    "ui",
    "command",
    "GroupManager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   Authors:\n     * Mustafa Sak (msak)\n\n\n************************************************************************ */\n\n/**\n * Registrar for command groups to be able to active or deactive them.\n */\nqx.Class.define(\"qx.ui.command.GroupManager\",\n{\n  extend : qx.core.Object,\n\n\n  construct : function()\n  {\n    this.base(arguments);\n    this.__groups = [];\n  },\n\n\n  members :\n  {\n    __groups: null,\n    __activeGroup : null,\n\n\n    /**\n     * Add command group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>false</code> if group was already added before\n     */\n    add : function(group)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(group, qx.ui.command.Group, \"Given group is not an instance of qx.ui.command.Group\");\n      }\n\n      if (this.__groups.includes(group)){\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\"Group is already added!\");\n        }\n        return false;\n      }\n\n      this.__groups.push(group);\n\n      // deactivate added group to prevent collusions\n      group.setActive(false);\n\n      return true;\n    },\n\n\n    /**\n     * Whether a command manager was added.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>true</code> if group already added\n     */\n    has : function(group)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(group, qx.ui.command.Group, \"Given group is not an instance of qx.ui.command.Group\");\n      }\n\n      return !!(this._getGroup(group));\n    },\n\n\n    /**\n     * Removes a command group from group manager. If removed group was the\n     * active group, active group will be set to <code>null</code> Returns the\n     * group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {qx.ui.command.Group | null} Command group or null if group was not added before\n     */\n    remove : function(group)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(group, qx.ui.command.Group, \"Group must be an instance of qx.ui.command.Group\");\n      }\n\n      var index = this.__groups.indexOf(group);\n      if (index === -1){\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\"Group was not added before. Please use \" +\n            \"'add()' method to add the group.\");\n        }\n      }\n\n      // reset active group\n      if (this.getActive() === group) {\n        this.__activeGroup = null;\n      }\n\n      // remove group from internal array\n      this.__groups.splice(index, 1);\n\n      return group;\n    },\n\n\n    /**\n     * Activates a command group and deactivates all other added groups.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>false</code> if group was not added before\n     */\n    setActive : function(group)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(group, qx.ui.command.Group, \"Given group is not an instance of qx.ui.command.Group\");\n      }\n\n      if (!this.has(group)) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\"Group was not added before! You have to use 'addCommand()' method before activating!\");\n        }\n        return false;\n      }\n\n      // iterate through all groups and deactivate all expect the given one\n      for (var i=0; i<this.__groups.length; i++) {\n        var item = this.__groups[i];\n        if (item == group){\n          item.setActive(true);\n          this.__activeGroup = item;\n          continue;\n        }\n        item.setActive(false);\n      }\n\n      return true;\n    },\n\n\n    /**\n     * Returns active command group.\n     *\n     * @return {qx.ui.command.Group | null} Active command group\n     */\n    getActive : function()\n    {\n      return this.__activeGroup;\n    },\n\n\n    /**\n     * Blocks the active command group.\n     */\n    block : function()\n    {\n      if(this.__activeGroup){\n        this.__activeGroup.setActive(false);\n      }\n    },\n\n\n    /**\n     * Unblocks the active command group.\n     */\n    unblock : function()\n    {\n      if(this.__activeGroup){\n        this.__activeGroup.setActive(true);\n      }\n    },\n\n\n    /**\n     * Helper function returns added command group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {qx.ui.command.Group | null} Command group or null\n     */\n    _getGroup : function(group)\n    {\n      var index = this.__groups.indexOf(group);\n      if (index === -1){\n        return null;\n      }\n\n      return this.__groups[index];\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__groups = this.__activeGroup = null;\n  }\n});\n"
  ]
}