{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/ButtonLayout.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "members",
    "verifyLayoutProperty",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "children",
    "_getLayoutChildren",
    "child",
    "column",
    "columnChildren",
    "i",
    "l",
    "length",
    "getLayoutProperties",
    "menu",
    "__getMenu",
    "columns",
    "getColumnSizes",
    "spacing",
    "getSpacingX",
    "neededWidth",
    "lang",
    "Array",
    "sum",
    "left",
    "top",
    "Util",
    "hint",
    "getSizeHint",
    "childTop",
    "computeVerticalAlignOffset",
    "getAlignY",
    "height",
    "offsetLeft",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "width",
    "getMarginLeft",
    "getMarginRight",
    "widget",
    "Menu",
    "getLayoutParent",
    "_computeSizeHint",
    "neededHeight",
    "Math",
    "max",
    "ButtonLayout"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Layout used for the menu buttons which may contain four elements. A icon,\n * a label, a shortcut text and an arrow (for a sub menu)\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.menu.ButtonLayout\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value) {\n        this.assert(name==\"column\", \"The property '\"+name+\"' is not supported by the MenuButton layout!\");\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      var children = this._getLayoutChildren();\n      var child;\n      var column;\n\n      var columnChildren = [];\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        column = child.getLayoutProperties().column;\n        columnChildren[column] = child;\n      }\n\n      var menu = this.__getMenu(children[0]);\n\n      var columns = menu.getColumnSizes();\n      var spacing = menu.getSpacingX();\n\n      // stretch label column\n      var neededWidth = qx.lang.Array.sum(columns) + spacing * (columns.length - 1);\n      if (neededWidth < availWidth) {\n        columns[1] += availWidth - neededWidth;\n      }\n\n\n      var left = padding.left, top = padding.top;\n      var Util = qx.ui.layout.Util;\n\n      for (var i=0, l=columns.length; i<l; i++)\n      {\n        child = columnChildren[i];\n\n        if (child)\n        {\n          var hint = child.getSizeHint();\n          var childTop = top + Util.computeVerticalAlignOffset(child.getAlignY()||\"middle\", hint.height, availHeight, 0, 0);\n          var offsetLeft = Util.computeHorizontalAlignOffset(child.getAlignX()||\"left\", hint.width, columns[i], child.getMarginLeft(), child.getMarginRight());\n          child.renderLayout(left + offsetLeft, childTop, hint.width, hint.height);\n        }\n\n        if (columns[i] > 0) {\n          left += columns[i] + spacing;\n        }\n      }\n    },\n\n\n    /**\n     * Get the widget's menu\n     *\n     * @param widget {qx.ui.core.Widget} the widget to get the menu for\n     * @return {qx.ui.menu.Menu} the menu\n     */\n    __getMenu : function(widget)\n    {\n      while (!(widget instanceof qx.ui.menu.Menu)) {\n        widget = widget.getLayoutParent();\n      }\n      return widget;\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      var children = this._getLayoutChildren();\n      var neededHeight = 0;\n      var neededWidth = 0;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        var hint = children[i].getSizeHint();\n        neededWidth += hint.width;\n        neededHeight = Math.max(neededHeight, hint.height);\n      }\n\n      return {\n        width : neededWidth,\n        height : neededHeight\n      };\n    }\n  }\n});\n"
  ]
}