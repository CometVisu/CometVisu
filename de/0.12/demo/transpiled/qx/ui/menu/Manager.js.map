{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__objects",
    "el",
    "document",
    "body",
    "Registration",
    "event",
    "addListener",
    "window",
    "documentElement",
    "_onPointerDown",
    "_onRoll",
    "_onKeyUpDown",
    "_onKeyPress",
    "Environment",
    "get",
    "bom",
    "Element",
    "hideAll",
    "__openTimer",
    "Timer",
    "_onOpenInterval",
    "__closeTimer",
    "_onCloseInterval",
    "members",
    "__scheduleOpen",
    "__scheduleClose",
    "_getChild",
    "menu",
    "start",
    "iter",
    "loop",
    "children",
    "getChildren",
    "length",
    "child",
    "i",
    "isEnabled",
    "isAnonymous",
    "isVisible",
    "_isInMenu",
    "widget",
    "ui",
    "Menu",
    "getLayoutParent",
    "_isMenuOpener",
    "menus",
    "getOpener",
    "_getMenuButton",
    "AbstractButton",
    "add",
    "obj",
    "reg",
    "push",
    "setZIndex",
    "remove",
    "lang",
    "Array",
    "exclude",
    "getActiveMenu",
    "scheduleOpen",
    "cancelClose",
    "cancelOpen",
    "restartWith",
    "getOpenInterval",
    "scheduleClose",
    "getCloseInterval",
    "stop",
    "e",
    "open",
    "preventContextMenuOnce",
    "__onPreventContextMenu",
    "target",
    "getTarget",
    "Widget",
    "getWidgetByElement",
    "stopPropagation",
    "preventDefault",
    "removeListener",
    "getMenu",
    "__selectionKeys",
    "__navigationKeys",
    "iden",
    "getKeyIdentifier",
    "getSelectedButton",
    "navigation",
    "selection",
    "_onKeyPressUp",
    "_onKeyPressDown",
    "_onKeyPressLeft",
    "_onKeyPressRight",
    "button",
    "_onKeyPressEnter",
    "_onKeyPressSpace",
    "selectedButton",
    "indexOf",
    "nextItem",
    "setSelectedButton",
    "resetSelectedButton",
    "menuOpener",
    "parentMenu",
    "resetOpenedButton",
    "menubar",
    "Button",
    "buttons",
    "getMenuBar",
    "getMenuButtons",
    "index",
    "prevButton",
    "subMenu",
    "setOpenedButton",
    "first",
    "getOpenedButton",
    "nextButton",
    "hasListener",
    "clone",
    "setBubbles",
    "setTarget",
    "dispatchEvent",
    "getMomentum",
    "destruct",
    "_disposeObjects",
    "_disposeArray",
    "Manager"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;AASAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EACA;AACEC,IAAAA,IAAI,EAAG,WADT;AAEEC,IAAAA,MAAM,EAAGP,EAAE,CAACQ,IAAH,CAAQC,MAFnB;;AAME;;;;;AAMAC,IAAAA,SAAS,EAAG,qBACZ;AACE,4CADF,CAGE;;AACA,WAAKC,SAAL,GAAiB,EAAjB;AAEA,UAAIC,EAAE,GAAGC,QAAQ,CAACC,IAAlB;AACA,UAAIC,YAAY,GAAGf,EAAE,CAACgB,KAAH,CAASD,YAA5B,CAPF,CASE;;AACAA,MAAAA,YAAY,CAACE,WAAb,CAAyBC,MAAM,CAACL,QAAP,CAAgBM,eAAzC,EAA0D,aAA1D,EAAyE,KAAKC,cAA9E,EAA8F,IAA9F,EAAoG,IAApG;AACAL,MAAAA,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,MAA7B,EAAqC,KAAKS,OAA1C,EAAmD,IAAnD,EAAyD,IAAzD,EAXF,CAaE;;AACAN,MAAAA,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,SAA7B,EAAwC,KAAKU,YAA7C,EAA2D,IAA3D,EAAiE,IAAjE;AACAP,MAAAA,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,OAA7B,EAAsC,KAAKU,YAA3C,EAAyD,IAAzD,EAA+D,IAA/D;AACAP,MAAAA,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,UAA7B,EAAyC,KAAKW,WAA9C,EAA2D,IAA3D,EAAiE,IAAjE,EAhBF,CAkBE;AACA;;AACA,UAAI,CAACvB,EAAE,CAACQ,IAAH,CAAQgB,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,CAAL,EAA6C;AAC3C;AACAzB,QAAAA,EAAE,CAAC0B,GAAH,CAAOC,OAAP,CAAeV,WAAf,CAA2BC,MAA3B,EAAmC,MAAnC,EAA2C,KAAKU,OAAhD,EAAyD,IAAzD;AACD,OAvBH,CAyBE;;;AACA,WAAKC,SAAL,GAAmB,IAAI7B,EAAE,CAACgB,KAAH,CAASc,KAAb,EAAnB;;AACA,WAAKD,SAAL,CAAiBZ,WAAjB,CAA6B,UAA7B,EAAyC,KAAKc,eAA9C,EAA+D,IAA/D,EA3BF,CA6BE;;;AACA,WAAKC,SAAL,GAAoB,IAAIhC,EAAE,CAACgB,KAAH,CAASc,KAAb,EAApB;;AACA,WAAKE,SAAL,CAAkBf,WAAlB,CAA8B,UAA9B,EAA0C,KAAKgB,gBAA/C,EAAiE,IAAjE;AACD,KA7CH;;AAkDE;;;;;AAMAC,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAc,EAAG,IADnB;AAEEC,MAAAA,SAAe,EAAG,IAFpB;AAGEP,MAAAA,SAAW,EAAG,IAHhB;AAIEG,MAAAA,SAAY,EAAG,IAJjB;AAKErB,MAAAA,SAAS,EAAG,IALd;;AAUE;;;;;;AAMA;;;;;;;;;AASA0B,MAAAA,SAAS,EAAG,mBAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,IAA5B,EACZ;AACE,YAAIC,QAAQ,GAAGJ,IAAI,CAACK,WAAL,EAAf;AACA,YAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AACA,YAAIC,KAAJ;;AAEA,aAAK,IAAIC,CAAC,GAACP,KAAX,EAAkBO,CAAC,GAACF,MAAF,IAAYE,CAAC,IAAE,CAAjC,EAAoCA,CAAC,IAAEN,IAAvC,EACA;AACEK,UAAAA,KAAK,GAAGH,QAAQ,CAACI,CAAD,CAAhB;;AACA,cAAID,KAAK,CAACE,SAAN,MAAqB,CAACF,KAAK,CAACG,WAAN,EAAtB,IAA6CH,KAAK,CAACI,SAAN,EAAjD,EAAoE;AAClE,mBAAOJ,KAAP;AACD;AACF;;AAED,YAAIJ,IAAJ,EACA;AACEK,UAAAA,CAAC,GAAGA,CAAC,IAAIF,MAAL,GAAc,CAAd,GAAkBA,MAAM,GAAC,CAA7B;;AACA,iBAAOE,CAAC,IAAEP,KAAV,EAAiBO,CAAC,IAAEN,IAApB,EACA;AACEK,YAAAA,KAAK,GAAGH,QAAQ,CAACI,CAAD,CAAhB;;AACA,gBAAID,KAAK,CAACE,SAAN,MAAqB,CAACF,KAAK,CAACG,WAAN,EAAtB,IAA6CH,KAAK,CAACI,SAAN,EAAjD,EAAoE;AAClE,qBAAOJ,KAAP;AACD;AACF;AACF;;AAED,eAAO,IAAP;AACD,OApDH;;AAuDE;;;;;;AAMAK,MAAAA,SAAS,EAAG,mBAASC,MAAT,EACZ;AACE,eAAMA,MAAN,EACA;AACE,cAAIA,MAAM,YAAYnD,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWe,IAAjC,EAAuC;AACrC,mBAAO,IAAP;AACD;;AAEDF,UAAAA,MAAM,GAAGA,MAAM,CAACG,eAAP,EAAT;AACD;;AAED,eAAO,KAAP;AACD,OAzEH;;AA4EE;;;;;;AAMAC,MAAAA,aAAa,EAAG,uBAASJ,MAAT,EAChB;AACE,YAAIK,KAAK,GAAG,KAAK7C,SAAjB;;AAEA,aAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,KAAK,CAACZ,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,cAAIU,KAAK,CAACV,CAAD,CAAL,CAASW,SAAT,OAAyBN,MAA7B,EAAqC;AACnC,mBAAO,IAAP;AACD;AACF;;AAED,eAAO,KAAP;AACD,OA7FH;;AAgGE;;;;;;AAMAO,MAAAA,cAAc,EAAG,wBAASP,MAAT,EACjB;AACE,eAAMA,MAAN,EACA;AACE,cAAIA,MAAM,YAAYnD,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWqB,cAAjC,EAAiD;AAC/C,mBAAOR,MAAP;AACD;;AAEDA,UAAAA,MAAM,GAAGA,MAAM,CAACG,eAAP,EAAT;AACD;;AAED,eAAO,IAAP;AACD,OAlHH;;AAqHE;;;;;;AAMA;;;;;AAKAM,MAAAA,GAAG,EAAG,aAASC,GAAT,EACN;AAQE,YAAIC,GAAG,GAAG,KAAKnD,SAAf;AACAmD,QAAAA,GAAG,CAACC,IAAJ,CAASF,GAAT;AACAA,QAAAA,GAAG,CAACG,SAAJ,CAAc,MAAIF,GAAG,CAAClB,MAAtB;AACD,OA5IH;;AA+IE;;;;;AAKAqB,MAAAA,MAAM,EAAG,gBAASJ,GAAT,EACT;AAQE,YAAIC,GAAG,GAAG,KAAKnD,SAAf;;AACA,YAAImD,GAAJ,EAAS;AACP9D,UAAAA,EAAE,CAACkE,IAAH,CAAQC,KAAR,CAAcF,MAAd,CAAqBH,GAArB,EAA0BD,GAA1B;AACD;AACF,OAjKH;;AAoKE;;;AAGAjC,MAAAA,OAAO,EAAG,mBACV;AACE,YAAIkC,GAAG,GAAG,KAAKnD,SAAf;;AACA,YAAImD,GAAJ,EACA;AACE,eAAK,IAAIhB,CAAC,GAACgB,GAAG,CAAClB,MAAJ,GAAW,CAAtB,EAAyBE,CAAC,IAAE,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAClCgB,YAAAA,GAAG,CAAChB,CAAD,CAAH,CAAOsB,OAAP;AACD;AACF;AACF,OAhLH;;AAmLE;;;;;;AAMAC,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIP,GAAG,GAAG,KAAKnD,SAAf;AACA,eAAOmD,GAAG,CAAClB,MAAJ,GAAa,CAAb,GAAiBkB,GAAG,CAACA,GAAG,CAAClB,MAAJ,GAAW,CAAZ,CAApB,GAAqC,IAA5C;AACD,OA7LH;;AAkME;;;;;;AAMA;;;;;;;AAOA0B,MAAAA,YAAY,EAAG,sBAAShC,IAAT,EACf;AACE;AACA,aAAKiC,WAAL,CAAiBjC,IAAjB,EAFF,CAIE;;AACA,YAAIA,IAAI,CAACW,SAAL,EAAJ,EACA;AACE;AACA,cAAI,KAAKd,SAAT,EAAyB;AACvB,iBAAKqC,UAAL,CAAgB,KAAKrC,SAArB;AACD;AACF,SAND,CAQA;AACA;AATA,aAUK,IAAI,KAAKA,SAAL,IAAuBG,IAA3B,EACL;AACE;AACA,iBAAKH,SAAL,GAAsBG,IAAtB;;AACA,iBAAKT,SAAL,CAAiB4C,WAAjB,CAA6BnC,IAAI,CAACoC,eAAL,EAA7B;AACD;AACF,OArOH;;AAwOE;;;;;;;AAOAC,MAAAA,aAAa,EAAG,uBAASrC,IAAT,EAChB;AACE;AACA,aAAKkC,UAAL,CAAgBlC,IAAhB,EAFF,CAIE;;AACA,YAAI,CAACA,IAAI,CAACW,SAAL,EAAL,EACA;AACE;AACA,cAAI,KAAKb,SAAT,EAA0B;AACxB,iBAAKmC,WAAL,CAAiB,KAAKnC,SAAtB;AACD;AACF,SAND,CAQA;AACA;AATA,aAUK,IAAI,KAAKA,SAAL,IAAwBE,IAA5B,EACL;AACE;AACA,iBAAKF,SAAL,GAAuBE,IAAvB;;AACA,iBAAKN,SAAL,CAAkByC,WAAlB,CAA8BnC,IAAI,CAACsC,gBAAL,EAA9B;AACD;AACF,OArQH;;AAwQE;;;;;;AAMAJ,MAAAA,UAAU,EAAG,oBAASlC,IAAT,EACb;AACE,YAAI,KAAKH,SAAL,IAAuBG,IAA3B,EACA;AACE;AACA,eAAKT,SAAL,CAAiBgD,IAAjB;;AACA,eAAK1C,SAAL,GAAsB,IAAtB;AACD;AACF,OAtRH;;AAyRE;;;;;;AAMAoC,MAAAA,WAAW,EAAG,qBAASjC,IAAT,EACd;AACE,YAAI,KAAKF,SAAL,IAAwBE,IAA5B,EACA;AACE;AACA,eAAKN,SAAL,CAAkB6C,IAAlB;;AACA,eAAKzC,SAAL,GAAuB,IAAvB;AACD;AACF,OAvSH;;AA0SE;;;;;;AAMA;;;;;;AAMAL,MAAAA,eAAe,EAAG,yBAAS+C,CAAT,EAClB;AACE;AACA,aAAKjD,SAAL,CAAiBgD,IAAjB,GAFF,CAIE;;;AACA,aAAK1C,SAAL,CAAoB4C,IAApB;;AACA,aAAK5C,SAAL,GAAsB,IAAtB;AACD,OA9TH;;AAiUE;;;;;;AAMAF,MAAAA,gBAAgB,EAAG,0BAAS6C,CAAT,EACnB;AACE;AACA,aAAK9C,SAAL,CAAkB6C,IAAlB,GAFF,CAIE;;;AACA,aAAKzC,SAAL,CAAqBgC,OAArB;;AACA,aAAKhC,SAAL,GAAuB,IAAvB;AACD,OA/UH;;AAkVE;;;;;;AAOA;;;;;;;;AAQA4C,MAAAA,sBAAsB,EAAG,kCACzB;AACEhF,QAAAA,EAAE,CAACgB,KAAH,CAASD,YAAT,CAAsBE,WAAtB,CAAkCJ,QAAQ,CAACC,IAA3C,EAAiD,aAAjD,EAAgE,KAAKmE,SAArE,EAA6F,IAA7F,EAAmG,IAAnG;AACD,OApWH;;AAuWE;;;;;;;;AAQAA,MAAAA,SAAsB,EAAG,mBAASH,CAAT,EACzB;AACE,YAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;AACAD,QAAAA,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT;;AACA,YAAI,KAAKhC,SAAL,CAAegC,MAAf,CAAJ,EAA4B;AAC1BJ,UAAAA,CAAC,CAACQ,eAAF;AACAR,UAAAA,CAAC,CAACS,cAAF;AACD,SANH,CAQE;;;AACAvF,QAAAA,EAAE,CAACgB,KAAH,CAASD,YAAT,CAAsByE,cAAtB,CAAqC3E,QAAQ,CAACC,IAA9C,EAAoD,aAApD,EAAmE,KAAKmE,SAAxE,EAAgG,IAAhG,EAAsG,IAAtG;AACD,OA1XH;;AA6XE;;;;;;AAMA;;;;;AAKA7D,MAAAA,cAAc,EAAG,wBAAS0D,CAAT,EACjB;AACE,YAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;AACAD,QAAAA,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT,CAFF,CAIE;AACA;AACA;AACA;;AACA,YAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAKtD,OAAL;AACA;AACD,SAXH,CAaE;AACA;AACA;;;AACA,YAAIsD,MAAM,CAACO,OAAP,IAAkBP,MAAM,CAACO,OAAP,EAAlB,IAAsCP,MAAM,CAACO,OAAP,GAAiBxC,SAAjB,EAA1C,EAAwE;AACtE;AACD,SAlBH,CAoBE;;;AACA,YAAI,KAAKtC,SAAL,CAAeiC,MAAf,GAAwB,CAAxB,IAA6B,CAAC,KAAKM,SAAL,CAAegC,MAAf,CAAlC,EAA0D;AACxD,eAAKtD,OAAL;AACD;AACF,OAjaH;;AAoaE;;;;;;AAMA;;;;AAIA8D,MAAAA,SAAe,EACf;AACE,iBAAU,CADZ;AAEE,iBAAU;AAFZ,OA/aF;;AAqbE;;;;AAIAC,MAAAA,SAAgB,EAChB;AACE,kBAAW,CADb;AAEE,cAAO,CAFT;AAGE,gBAAS,CAHX;AAIE,gBAAS,CAJX;AAKE,iBAAU;AALZ,OA1bF;;AAmcE;;;;;;AAMArE,MAAAA,YAAY,EAAG,sBAASwD,CAAT,EACf;AACE,YAAIxC,IAAI,GAAG,KAAK+B,aAAL,EAAX;;AACA,YAAI,CAAC/B,IAAL,EAAW;AACT;AACD,SAJH,CAME;;;AACA,YAAIsD,IAAI,GAAGd,CAAC,CAACe,gBAAF,EAAX;;AACA,YAAI,KAAKF,SAAL,CAAsBC,IAAtB,KAAgC,KAAKF,SAAL,CAAqBE,IAArB,KAA8BtD,IAAI,CAACwD,iBAAL,EAAlE,EAA6F;AAC3FhB,UAAAA,CAAC,CAACQ,eAAF;AACD;AACF,OArdH;;AAwdE;;;;;;;;;AASA/D,MAAAA,WAAW,EAAG,qBAASuD,CAAT,EACd;AACE,YAAIxC,IAAI,GAAG,KAAK+B,aAAL,EAAX;;AACA,YAAI,CAAC/B,IAAL,EAAW;AACT;AACD;;AAED,YAAIsD,IAAI,GAAGd,CAAC,CAACe,gBAAF,EAAX;AACA,YAAIE,UAAU,GAAG,KAAKJ,SAAL,CAAsBC,IAAtB,CAAjB;AACA,YAAII,SAAS,GAAG,KAAKN,SAAL,CAAqBE,IAArB,CAAhB;;AAEA,YAAIG,UAAJ,EACA;AACE,kBAAOH,IAAP;AAEE,iBAAK,IAAL;AACE,mBAAKK,aAAL,CAAmB3D,IAAnB;;AACA;;AAEF,iBAAK,MAAL;AACE,mBAAK4D,eAAL,CAAqB5D,IAArB;;AACA;;AAEF,iBAAK,MAAL;AACE,mBAAK6D,eAAL,CAAqB7D,IAArB;;AACA;;AAEF,iBAAK,OAAL;AACE,mBAAK8D,gBAAL,CAAsB9D,IAAtB;;AACA;;AAEF,iBAAK,QAAL;AACE,mBAAKV,OAAL;AACA;AApBJ;;AAuBAkD,UAAAA,CAAC,CAACQ,eAAF;AACAR,UAAAA,CAAC,CAACS,cAAF;AACD,SA3BD,MA4BK,IAAIS,SAAJ,EACL;AACE;AACA,cAAIK,MAAM,GAAG/D,IAAI,CAACwD,iBAAL,EAAb;;AACA,cAAIO,MAAJ,EACA;AACE,oBAAOT,IAAP;AAEE,mBAAK,OAAL;AACE,qBAAKU,gBAAL,CAAsBhE,IAAtB,EAA4B+D,MAA5B,EAAoCvB,CAApC;;AACA;;AAEF,mBAAK,OAAL;AACE,qBAAKyB,gBAAL,CAAsBjE,IAAtB,EAA4B+D,MAA5B,EAAoCvB,CAApC;;AACA;AARJ;;AAWAA,YAAAA,CAAC,CAACQ,eAAF;AACAR,YAAAA,CAAC,CAACS,cAAF;AACD;AACF;AACF,OA7hBH;;AAgiBE;;;;;AAKAU,MAAAA,aAAa,EAAG,uBAAS3D,IAAT,EAChB;AACE;AACA,YAAIkE,cAAc,GAAGlE,IAAI,CAACwD,iBAAL,EAArB;AACA,YAAIpD,QAAQ,GAAGJ,IAAI,CAACK,WAAL,EAAf;AACA,YAAIJ,KAAK,GAAGiE,cAAc,GAAGlE,IAAI,CAACmE,OAAL,CAAaD,cAAb,IAA6B,CAAhC,GAAoC9D,QAAQ,CAACE,MAAT,GAAgB,CAA9E;;AACA,YAAI8D,QAAQ,GAAG,KAAKrE,SAAL,CAAeC,IAAf,EAAqBC,KAArB,EAA4B,CAAC,CAA7B,EAAgC,IAAhC,CAAf,CALF,CAOE;;;AACA,YAAImE,QAAJ,EAAc;AACZpE,UAAAA,IAAI,CAACqE,iBAAL,CAAuBD,QAAvB;AACD,SAFD,MAEO;AACLpE,UAAAA,IAAI,CAACsE,mBAAL;AACD;AACF,OAnjBH;;AAsjBE;;;;;AAKAV,MAAAA,eAAe,EAAG,yBAAS5D,IAAT,EAClB;AACE;AACA,YAAIkE,cAAc,GAAGlE,IAAI,CAACwD,iBAAL,EAArB;AACA,YAAIvD,KAAK,GAAGiE,cAAc,GAAGlE,IAAI,CAACmE,OAAL,CAAaD,cAAb,IAA6B,CAAhC,GAAoC,CAA9D;;AACA,YAAIE,QAAQ,GAAG,KAAKrE,SAAL,CAAeC,IAAf,EAAqBC,KAArB,EAA4B,CAA5B,EAA+B,IAA/B,CAAf,CAJF,CAME;;;AACA,YAAImE,QAAJ,EAAc;AACZpE,UAAAA,IAAI,CAACqE,iBAAL,CAAuBD,QAAvB;AACD,SAFD,MAEO;AACLpE,UAAAA,IAAI,CAACsE,mBAAL;AACD;AACF,OAxkBH;;AA2kBE;;;;;AAKAT,MAAAA,eAAe,EAAG,yBAAS7D,IAAT,EAClB;AACE,YAAIuE,UAAU,GAAGvE,IAAI,CAACmB,SAAL,EAAjB;;AACA,YAAI,CAACoD,UAAL,EAAiB;AACf;AACD,SAJH,CAME;;;AACA,YAAIA,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWqB,cAArC,EACA;AACE,cAAImD,UAAU,GAAGD,UAAU,CAACvD,eAAX,EAAjB;AAEAwD,UAAAA,UAAU,CAACC,iBAAX;AACAD,UAAAA,UAAU,CAACH,iBAAX,CAA6BE,UAA7B;AACD,SAND,CAQA;AARA,aASK,IAAIA,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAM4D,OAAN,CAAcC,MAAxC,EACL;AACE,gBAAIC,OAAO,GAAGL,UAAU,CAACM,UAAX,GAAwBC,cAAxB,EAAd;AACA,gBAAIC,KAAK,GAAGH,OAAO,CAACT,OAAR,CAAgBI,UAAhB,CAAZ,CAFF,CAIE;;AACA,gBAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACD,aAPH,CASE;;;AACA,gBAAIC,UAAU,GAAG,IAAjB;AACA,gBAAI1E,MAAM,GAAIsE,OAAO,CAACtE,MAAtB;;AACA,iBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EACA;AACE,kBAAIuD,MAAM,GAAGa,OAAO,CAAC,CAACG,KAAK,GAAGvE,CAAR,GAAYF,MAAb,IAAuBA,MAAxB,CAApB;;AACA,kBAAGyD,MAAM,CAACtD,SAAP,MAAsBsD,MAAM,CAACpD,SAAP,EAAzB,EAA6C;AAC3CqE,gBAAAA,UAAU,GAAGjB,MAAb;AACA;AACD;AACF;;AAED,gBAAIiB,UAAU,IAAIA,UAAU,IAAIT,UAAhC,EAA4C;AAC1CS,cAAAA,UAAU,CAACvC,IAAX,CAAgB,IAAhB;AACD;AACF;AACF,OA3nBH;;AA8nBE;;;;;AAKAqB,MAAAA,gBAAgB,EAAG,0BAAS9D,IAAT,EACnB;AACE,YAAIkE,cAAc,GAAGlE,IAAI,CAACwD,iBAAL,EAArB,CADF,CAGE;;AACA,YAAIU,cAAJ,EACA;AACE,cAAIe,OAAO,GAAGf,cAAc,CAACf,OAAf,EAAd;;AAEA,cAAI8B,OAAJ,EACA;AACE;AACAjF,YAAAA,IAAI,CAACkF,eAAL,CAAqBhB,cAArB,EAFF,CAIE;;AACA,gBAAIiB,KAAK,GAAG,KAAKpF,SAAL,CAAekF,OAAf,EAAwB,CAAxB,EAA2B,CAA3B,CAAZ;;AACA,gBAAIE,KAAJ,EAAW;AACTF,cAAAA,OAAO,CAACZ,iBAAR,CAA0Bc,KAA1B;AACD;;AAED;AACD;AACF,SAjBD,CAmBA;AACA;AApBA,aAqBK,IAAI,CAACnF,IAAI,CAACoF,eAAL,EAAL,EACL;AACE,gBAAID,KAAK,GAAG,KAAKpF,SAAL,CAAeC,IAAf,EAAqB,CAArB,EAAwB,CAAxB,CAAZ;;AAEA,gBAAImF,KAAJ,EACA;AACEnF,cAAAA,IAAI,CAACqE,iBAAL,CAAuBc,KAAvB;;AAEA,kBAAIA,KAAK,CAAChC,OAAN,EAAJ,EAAqB;AACnBnD,gBAAAA,IAAI,CAACkF,eAAL,CAAqBC,KAArB;AACD;;AAED;AACD;AACF,WAvCH,CAyCE;;;AACA,YAAIZ,UAAU,GAAGvE,IAAI,CAACmB,SAAL,EAAjB,CA1CF,CA4CE;;AACA,YAAIoD,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAW2E,MAAjC,IAA2CT,cAA/C,EACA;AACE;AACA;AACA,iBAAOK,UAAP,EACA;AACEA,YAAAA,UAAU,GAAGA,UAAU,CAACvD,eAAX,EAAb;;AACA,gBAAIuD,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWe,IAArC,EACA;AACEwD,cAAAA,UAAU,GAAGA,UAAU,CAACpD,SAAX,EAAb;;AACA,kBAAIoD,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAM4D,OAAN,CAAcC,MAAxC,EAAgD;AAC9C;AACD;AACF,aAND,MAQA;AACE;AACD;AACF;;AAED,cAAI,CAACJ,UAAL,EAAiB;AACf;AACD;AACF,SApEH,CAsEE;;;AACA,YAAIA,UAAU,YAAY7G,EAAE,CAACoD,EAAH,CAAM4D,OAAN,CAAcC,MAAxC,EACA;AACE,cAAIC,OAAO,GAAGL,UAAU,CAACM,UAAX,GAAwBC,cAAxB,EAAd;AACA,cAAIC,KAAK,GAAGH,OAAO,CAACT,OAAR,CAAgBI,UAAhB,CAAZ,CAFF,CAIE;;AACA,cAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACD,WAPH,CASE;;;AACA,cAAIM,UAAU,GAAG,IAAjB;AACA,cAAI/E,MAAM,GAAIsE,OAAO,CAACtE,MAAtB;;AACA,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EACA;AACE,gBAAIuD,MAAM,GAAGa,OAAO,CAAC,CAACG,KAAK,GAAGvE,CAAT,IAAcF,MAAf,CAApB;;AACA,gBAAGyD,MAAM,CAACtD,SAAP,MAAsBsD,MAAM,CAACpD,SAAP,EAAzB,EAA6C;AAC3C0E,cAAAA,UAAU,GAAGtB,MAAb;AACA;AACD;AACF;;AAED,cAAIsB,UAAU,IAAIA,UAAU,IAAId,UAAhC,EAA4C;AAC1Cc,YAAAA,UAAU,CAAC5C,IAAX,CAAgB,IAAhB;AACD;AACF;AACF,OAruBH;;AAwuBE;;;;;;;AAOAuB,MAAAA,gBAAgB,EAAG,0BAAShE,IAAT,EAAe+D,MAAf,EAAuBvB,CAAvB,EACnB;AACE;AACA,YAAIuB,MAAM,CAACuB,WAAP,CAAmB,UAAnB,CAAJ,EACA;AACE;AACA,cAAIC,KAAK,GAAG/C,CAAC,CAAC+C,KAAF,EAAZ;AACAA,UAAAA,KAAK,CAACC,UAAN,CAAiB,KAAjB;AACAD,UAAAA,KAAK,CAACE,SAAN,CAAgB1B,MAAhB,EAJF,CAME;;AACAA,UAAAA,MAAM,CAAC2B,aAAP,CAAqBH,KAArB;AACD,SAXH,CAaE;;;AACA,aAAKjG,OAAL;AACD,OA/vBH;;AAkwBE;;;;;;;AAOA2E,MAAAA,gBAAgB,EAAG,0BAASjE,IAAT,EAAe+D,MAAf,EAAuBvB,CAAvB,EACnB;AACE;AACA,YAAIuB,MAAM,CAACuB,WAAP,CAAmB,UAAnB,CAAJ,EACA;AACE;AACA,cAAIC,KAAK,GAAG/C,CAAC,CAAC+C,KAAF,EAAZ;AACAA,UAAAA,KAAK,CAACC,UAAN,CAAiB,KAAjB;AACAD,UAAAA,KAAK,CAACE,SAAN,CAAgB1B,MAAhB,EAJF,CAME;;AACAA,UAAAA,MAAM,CAAC2B,aAAP,CAAqBH,KAArB;AACD;AACF,OAtxBH;;AAyxBE;;;;;AAKAxG,MAAAA,OAAO,EAAG,iBAASyD,CAAT,EAAY;AACpB,YAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;AACAD,QAAAA,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT;;AAEA,YACE,KAAKvE,SAAL,CAAeiC,MAAf,GAAwB,CAAxB,IACG,CAAC,KAAKM,SAAL,CAAegC,MAAf,CADJ,IAEG,CAAC,KAAK3B,aAAL,CAAmB2B,MAAnB,CAFJ,IAGG,CAACJ,CAAC,CAACmD,WAAF,EAJN,EAKE;AACA,eAAKrG,OAAL;AACD;AACF;AA1yBH,KAzDF;;AAy2BE;;;;;AAMAsG,IAAAA,QAAQ,EAAG,oBACX;AACE,UAAInH,YAAY,GAAGf,EAAE,CAACgB,KAAH,CAASD,YAA5B;AACA,UAAIH,EAAE,GAAGC,QAAQ,CAACC,IAAlB,CAFF,CAIE;;AACAC,MAAAA,YAAY,CAACyE,cAAb,CAA4BtE,MAAM,CAACL,QAAP,CAAgBM,eAA5C,EAA6D,aAA7D,EAA4E,KAAKC,cAAjF,EAAiG,IAAjG,EAAuG,IAAvG,EALF,CAOE;;AACAL,MAAAA,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,SAAhC,EAA2C,KAAKU,YAAhD,EAA8D,IAA9D,EAAoE,IAApE;AACAP,MAAAA,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,OAAhC,EAAyC,KAAKU,YAA9C,EAA4D,IAA5D,EAAkE,IAAlE;AACAP,MAAAA,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,UAAhC,EAA4C,KAAKW,WAAjD,EAA8D,IAA9D,EAAoE,IAApE;;AAEA,WAAK4G,eAAL,CAAqB,WAArB,EAAoC,WAApC;;AACA,WAAKC,aAAL,CAAmB,WAAnB;AACD;AA93BH,GADA;AA5BApI,EAAAA,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAW+F,OAAX,CAAmBlI,aAAnB,GAAmCA,aAAnC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This singleton manages visible menu instances and supports some\n * core features to schedule menu open/close with timeout support.\n *\n * It also manages the whole keyboard support for the currently\n * registered widgets.\n *\n * The zIndex order is also managed by this class.\n */\nqx.Class.define(\"qx.ui.menu.Manager\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Create data structure\n    this.__objects = [];\n\n    var el = document.body;\n    var Registration = qx.event.Registration;\n\n    // React on pointer/mouse events, but on native, to support inline applications\n    Registration.addListener(window.document.documentElement, \"pointerdown\", this._onPointerDown, this, true);\n    Registration.addListener(el, \"roll\", this._onRoll, this, true);\n\n    // React on keypress events\n    Registration.addListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    // only use the blur event to hide windows on non touch devices [BUG #4033]\n    // When the menu is located on top of an iFrame, the select will fail\n    if (!qx.core.Environment.get(\"event.touch\")) {\n      // Hide all when the window is blurred\n      qx.bom.Element.addListener(window, \"blur\", this.hideAll, this);\n    }\n\n    // Create open timer\n    this.__openTimer = new qx.event.Timer();\n    this.__openTimer.addListener(\"interval\", this._onOpenInterval, this);\n\n    // Create close timer\n    this.__closeTimer = new qx.event.Timer();\n    this.__closeTimer.addListener(\"interval\", this._onCloseInterval, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __scheduleOpen : null,\n    __scheduleClose : null,\n    __openTimer : null,\n    __closeTimer : null,\n    __objects : null,\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Query engine for menu children.\n     *\n     * @param menu {qx.ui.menu.Menu} Any menu instance\n     * @param start {Integer} Child index to start with\n     * @param iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>\n     * @param loop {Boolean?false} Whether to wrap when reaching the begin/end of the list\n     * @return {qx.ui.menu.Button} Any menu button or <code>null</code>\n     */\n    _getChild : function(menu, start, iter, loop)\n    {\n      var children = menu.getChildren();\n      var length = children.length;\n      var child;\n\n      for (var i=start; i<length && i>=0; i+=iter)\n      {\n        child = children[i];\n        if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n          return child;\n        }\n      }\n\n      if (loop)\n      {\n        i = i == length ? 0 : length-1;\n        for (; i!=start; i+=iter)\n        {\n          child = children[i];\n          if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Whether the given widget is inside any Menu instance.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> when the widget is part of any menu\n     */\n    _isInMenu : function(widget)\n    {\n      while(widget)\n      {\n        if (widget instanceof qx.ui.menu.Menu) {\n          return true;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Whether the given widget is one of the menu openers.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> if the widget is a menu opener\n     */\n    _isMenuOpener : function(widget)\n    {\n      var menus = this.__objects;\n\n      for (var i = 0; i < menus.length; i++) {\n        if (menus[i].getOpener() === widget) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Returns an instance of a menu button if the given widget is a child\n     *\n     * @param widget {qx.ui.core.Widget} any widget\n     * @return {qx.ui.menu.Button} Any menu button instance or <code>null</code>\n     */\n    _getMenuButton : function(widget)\n    {\n      while(widget)\n      {\n        if (widget instanceof qx.ui.menu.AbstractButton) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a menu to the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    add : function(obj)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      reg.push(obj);\n      obj.setZIndex(1e6+reg.length);\n    },\n\n\n    /**\n     * Remove a menu from the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    remove : function(obj)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      if (reg) {\n        qx.lang.Array.remove(reg, obj);\n      }\n    },\n\n\n    /**\n     * Hides all currently opened menus.\n     */\n    hideAll : function()\n    {\n      var reg = this.__objects;\n      if (reg)\n      {\n        for (var i=reg.length-1; i>=0; i--) {\n          reg[i].exclude();\n        }\n      }\n    },\n\n\n    /**\n     * Returns the menu which was opened at last (which\n     * is the active one this way)\n     *\n     * @return {qx.ui.menu.Menu} The current active menu or <code>null</code>\n     */\n    getActiveMenu : function()\n    {\n      var reg = this.__objects;\n      return reg.length > 0 ? reg[reg.length-1] : null;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCHEDULED OPEN/CLOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedules the given menu to be opened after the\n     * {@link qx.ui.menu.Menu#openInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for open\n     */\n    scheduleOpen : function(menu)\n    {\n      // Cancel close of given menu first\n      this.cancelClose(menu);\n\n      // When the menu is already visible\n      if (menu.isVisible())\n      {\n        // Cancel all other open requests\n        if (this.__scheduleOpen) {\n          this.cancelOpen(this.__scheduleOpen);\n        }\n      }\n\n      // When the menu is not visible and not scheduled already\n      // then schedule it for opening\n      else if (this.__scheduleOpen != menu)\n      {\n        // menu.debug(\"Schedule open\");\n        this.__scheduleOpen = menu;\n        this.__openTimer.restartWith(menu.getOpenInterval());\n      }\n    },\n\n\n    /**\n     * Schedules the given menu to be closed after the\n     * {@link qx.ui.menu.Menu#closeInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for close\n     */\n    scheduleClose : function(menu)\n    {\n      // Cancel open of the menu first\n      this.cancelOpen(menu);\n\n      // When the menu is already invisible\n      if (!menu.isVisible())\n      {\n        // Cancel all other close requests\n        if (this.__scheduleClose) {\n          this.cancelClose(this.__scheduleClose);\n        }\n      }\n\n      // When the menu is visible and not scheduled already\n      // then schedule it for closing\n      else if (this.__scheduleClose != menu)\n      {\n        // menu.debug(\"Schedule close\");\n        this.__scheduleClose = menu;\n        this.__closeTimer.restartWith(menu.getCloseInterval());\n      }\n    },\n\n\n    /**\n     * When the given menu is scheduled for open this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for open\n     */\n    cancelOpen : function(menu)\n    {\n      if (this.__scheduleOpen == menu)\n      {\n        // menu.debug(\"Cancel open\");\n        this.__openTimer.stop();\n        this.__scheduleOpen = null;\n      }\n    },\n\n\n    /**\n     * When the given menu is scheduled for close this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for close\n     */\n    cancelClose : function(menu)\n    {\n      if (this.__scheduleClose == menu)\n      {\n        // menu.debug(\"Cancel close\");\n        this.__closeTimer.stop();\n        this.__scheduleClose = null;\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for a pending open request. Configured to the interval\n     * of the current menu to open.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onOpenInterval : function(e)\n    {\n      // Stop timer\n      this.__openTimer.stop();\n\n      // Open menu and reset flag\n      this.__scheduleOpen.open();\n      this.__scheduleOpen = null;\n    },\n\n\n    /**\n     * Event listener for a pending close request. Configured to the interval\n     * of the current menu to close.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onCloseInterval : function(e)\n    {\n      // Stop timer, reset scheduling flag\n      this.__closeTimer.stop();\n\n      // Close menu and reset flag\n      this.__scheduleClose.exclude();\n      this.__scheduleClose = null;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXTMENU EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Internal function registers a handler to stop next\n     * <code>contextmenu</code> event.\n     * This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n     * right click was pressed.\n     *\n     * @internal\n     */\n    preventContextMenuOnce : function()\n    {\n      qx.event.Registration.addListener(document.body, \"contextmenu\", this.__onPreventContextMenu, this, true);\n    },\n\n\n    /**\n     * Internal event handler to stop <code>contextmenu</code> event bubbling,\n     * if target is inside the opened menu.\n     *\n     * @param e {qx.event.type.Mouse} contextmenu event\n     *\n     * @internal\n     */\n    __onPreventContextMenu : function(e)\n    {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n      if (this._isInMenu(target)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      // stop only once\n      qx.event.Registration.removeListener(document.body, \"contextmenu\", this.__onPreventContextMenu, this, true);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for pointerdown events\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDown : function(e)\n    {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      // If the target is 'null' the tap appears on a DOM element witch is not\n      // a widget. This happens normally with an inline application, when the user\n      // taps not in the inline application. In this case all all currently\n      // open menus should be closed.\n      if (target == null) {\n        this.hideAll();\n        return;\n      }\n\n      // If the target is the one which has opened the current menu\n      // we ignore the pointerdown to let the button process the event\n      // further with toggling or ignoring the tap.\n      if (target.getMenu && target.getMenu() && target.getMenu().isVisible()) {\n        return;\n      }\n\n      // All taps not inside a menu will hide all currently open menus\n      if (this.__objects.length > 0 && !this._isInMenu(target)) {\n        this.hideAll();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Map of all keys working on an active menu selection\n     * @lint ignoreReferenceField(__selectionKeys)\n     */\n    __selectionKeys :\n    {\n      \"Enter\" : 1,\n      \"Space\" : 1\n    },\n\n\n    /**\n     * @type {Map} Map of all keys working without a selection\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys :\n    {\n      \"Escape\" : 1,\n      \"Up\" : 1,\n      \"Down\" : 1,\n      \"Left\" : 1,\n      \"Right\" : 1\n    },\n\n\n    /**\n     * Event handler for all keyup/keydown events. Stops all events\n     * when any menu is opened.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyUpDown : function(e)\n    {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      // Stop for all supported key combos\n      var iden = e.getKeyIdentifier();\n      if (this.__navigationKeys[iden] || (this.__selectionKeys[iden] && menu.getSelectedButton())) {\n        e.stopPropagation();\n      }\n    },\n\n\n    /**\n     * Event handler for all keypress events. Delegates the event to the more\n     * specific methods defined in this class.\n     *\n     * Currently processes the keys: <code>Up</code>, <code>Down</code>,\n     * <code>Left</code>, <code>Right</code> and <code>Enter</code>.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyPress : function(e)\n    {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      var iden = e.getKeyIdentifier();\n      var navigation = this.__navigationKeys[iden];\n      var selection = this.__selectionKeys[iden];\n\n      if (navigation)\n      {\n        switch(iden)\n        {\n          case \"Up\":\n            this._onKeyPressUp(menu);\n            break;\n\n          case \"Down\":\n            this._onKeyPressDown(menu);\n            break;\n\n          case \"Left\":\n            this._onKeyPressLeft(menu);\n            break;\n\n          case \"Right\":\n            this._onKeyPressRight(menu);\n            break;\n\n          case \"Escape\":\n            this.hideAll();\n            break;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      else if (selection)\n      {\n        // Do not process these events when no item is hovered\n        var button = menu.getSelectedButton();\n        if (button)\n        {\n          switch(iden)\n          {\n            case \"Enter\":\n              this._onKeyPressEnter(menu, button, e);\n              break;\n\n            case \"Space\":\n              this._onKeyPressSpace(menu, button, e);\n              break;\n          }\n\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    },\n\n\n    /**\n     * Event handler for <code>Up</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressUp : function(menu)\n    {\n      // Query for previous child\n      var selectedButton = menu.getSelectedButton();\n      var children = menu.getChildren();\n      var start = selectedButton ? menu.indexOf(selectedButton)-1 : children.length-1;\n      var nextItem = this._getChild(menu, start, -1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n\n    /**\n     * Event handler for <code>Down</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressDown : function(menu)\n    {\n      // Query for next child\n      var selectedButton = menu.getSelectedButton();\n      var start = selectedButton ? menu.indexOf(selectedButton)+1 : 0;\n      var nextItem = this._getChild(menu, start, 1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n\n    /**\n     * Event handler for <code>Left</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressLeft : function(menu)\n    {\n      var menuOpener = menu.getOpener();\n      if (!menuOpener) {\n        return;\n      }\n\n      // Back to the \"parent\" menu\n      if (menuOpener instanceof qx.ui.menu.AbstractButton)\n      {\n        var parentMenu = menuOpener.getLayoutParent();\n\n        parentMenu.resetOpenedButton();\n        parentMenu.setSelectedButton(menuOpener);\n      }\n\n      // Goto the previous toolbar button\n      else if (menuOpener instanceof qx.ui.menubar.Button)\n      {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get previous button, fallback to end if first arrived\n        var prevButton = null;\n        var length =  buttons.length;\n        for (var i = 1; i <= length; i++)\n        {\n          var button = buttons[(index - i + length) % length];\n          if(button.isEnabled() && button.isVisible()) {\n            prevButton = button;\n            break;\n          }\n        }\n\n        if (prevButton && prevButton != menuOpener) {\n          prevButton.open(true);\n        }\n      }\n    },\n\n\n    /**\n     * Event handler for <code>Right</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressRight : function(menu)\n    {\n      var selectedButton = menu.getSelectedButton();\n\n      // Open sub-menu of hovered item and select first child\n      if (selectedButton)\n      {\n        var subMenu = selectedButton.getMenu();\n\n        if (subMenu)\n        {\n          // Open previously hovered item\n          menu.setOpenedButton(selectedButton);\n\n          // Hover first item in new submenu\n          var first = this._getChild(subMenu, 0, 1);\n          if (first) {\n            subMenu.setSelectedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // No hover and no open item\n      // When first button has a menu, open it, otherwise only hover it\n      else if (!menu.getOpenedButton())\n      {\n        var first = this._getChild(menu, 0, 1);\n\n        if (first)\n        {\n          menu.setSelectedButton(first);\n\n          if (first.getMenu()) {\n            menu.setOpenedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // Jump to the next toolbar button\n      var menuOpener = menu.getOpener();\n\n      // Look up opener hierarchy for menu button\n      if (menuOpener instanceof qx.ui.menu.Button && selectedButton)\n      {\n        // From one inner selected button try to find the top level\n        // menu button which has opened the whole menu chain.\n        while (menuOpener)\n        {\n          menuOpener = menuOpener.getLayoutParent();\n          if (menuOpener instanceof qx.ui.menu.Menu)\n          {\n            menuOpener = menuOpener.getOpener();\n            if (menuOpener instanceof qx.ui.menubar.Button) {\n              break;\n            }\n          }\n          else\n          {\n            break;\n          }\n        }\n\n        if (!menuOpener) {\n          return;\n        }\n      }\n\n      // Ask the toolbar for the next menu button\n      if (menuOpener instanceof qx.ui.menubar.Button)\n      {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get next button, fallback to first if end arrived\n        var nextButton = null;\n        var length =  buttons.length;\n        for (var i = 1; i <= length; i++)\n        {\n          var button = buttons[(index + i) % length];\n          if(button.isEnabled() && button.isVisible()) {\n            nextButton = button;\n            break;\n          }\n        }\n\n        if (nextButton && nextButton != menuOpener) {\n          nextButton.open(true);\n        }\n      }\n    },\n\n\n    /**\n     * Event handler for <code>Enter</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressEnter : function(menu, button, e)\n    {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\"))\n      {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n\n      // Hide all open menus\n      this.hideAll();\n    },\n\n\n    /**\n     * Event handler for <code>Space</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressSpace : function(menu, button, e)\n    {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\"))\n      {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n    },\n\n\n    /**\n     * Event handler for roll which hides all windows on scroll.\n     *\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll : function(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      if (\n        this.__objects.length > 0\n        && !this._isInMenu(target)\n        && !this._isMenuOpener(target)\n        && !e.getMomentum()\n      ) {\n        this.hideAll();\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    var Registration = qx.event.Registration;\n    var el = document.body;\n\n    // React on pointerdown events\n    Registration.removeListener(window.document.documentElement, \"pointerdown\", this._onPointerDown, this, true);\n\n    // React on keypress events\n    Registration.removeListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    this._disposeObjects(\"__openTimer\", \"__closeTimer\");\n    this._disposeArray(\"__objects\");\n  }\n});\n"
  ]
}