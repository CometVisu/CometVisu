{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/core/Scroller.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "scroll",
    "AbstractScrollArea",
    "construct",
    "rowCount",
    "columnCount",
    "cellHeight",
    "cellWidth",
    "__pane",
    "virtual",
    "Pane",
    "addListener",
    "_computeScrollbars",
    "_onScrollPaneX",
    "_onScrollPaneY",
    "Environment",
    "get",
    "_add",
    "edge",
    "row",
    "column",
    "members",
    "getPane",
    "_createChildControlImpl",
    "id",
    "hash",
    "getItemTop",
    "item",
    "Error",
    "getItemBottom",
    "getItemLeft",
    "getItemRight",
    "_onScrollBarX",
    "e",
    "setScrollX",
    "getData",
    "_onScrollBarY",
    "setScrollY",
    "destruct",
    "dispose",
    "Scroller"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The Scroller wraps a {@link Pane} and provides scroll bars to interactively\n * scroll the pane's content.\n *\n * @childControl pane {qx.ui.virtual.core.Pane} Virtual pane.\n */\nqx.Class.define(\"qx.ui.virtual.core.Scroller\",\n{\n  extend : qx.ui.core.scroll.AbstractScrollArea,\n\n\n  /**\n   * @param rowCount {Integer?0} The number of rows of the virtual grid.\n   * @param columnCount {Integer?0} The number of columns of the virtual grid.\n   * @param cellHeight {Integer?10} The default cell height.\n   * @param cellWidth {Integer?10} The default cell width.\n   */\n  construct : function(rowCount, columnCount, cellHeight, cellWidth)\n  {\n    this.base(arguments);\n\n    this.__pane = new qx.ui.virtual.core.Pane(rowCount, columnCount, cellHeight, cellWidth);\n    this.__pane.addListener(\"update\", this._computeScrollbars, this);\n    this.__pane.addListener(\"scrollX\", this._onScrollPaneX, this);\n    this.__pane.addListener(\"scrollY\", this._onScrollPaneY, this);\n\n    if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n      this._add(this.__pane, {edge: 0});\n    } else {\n      this._add(this.__pane, {row: 0, column: 0});\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.core.Pane} Virtual pane. */\n    __pane : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ACCESSOR METHODS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Get the scroller's virtual pane.\n     *\n     * @return {qx.ui.virtual.core.Pane} The scroller's pane.\n     */\n    getPane : function() {\n      return this.__pane;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      if (id === \"pane\") {\n        return this.__pane;\n      } else {\n        return this.base(arguments, id);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemTop : function(item)\n    {\n      throw new Error(\"The method 'getItemTop' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemBottom : function(item)\n    {\n      throw new Error(\"The method 'getItemBottom' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Top offset.\n     * @abstract\n     */\n    getItemLeft : function(item)\n    {\n      throw new Error(\"The method 'getItemLeft' is not implemented!\");\n    },\n\n\n    /**\n     * NOT IMPLEMENTED\n     *\n     * @param item {qx.ui.core.Widget} Item to query.\n     * @return {Integer} Right offset.\n     * @abstract\n     */\n    getItemRight : function(item)\n    {\n      throw new Error(\"The method 'getItemRight' is not implemented!\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    // overridden\n    _onScrollBarX : function(e) {\n      this.__pane.setScrollX(e.getData());\n    },\n\n\n    // overridden\n    _onScrollBarY : function(e) {\n      this.__pane.setScrollY(e.getData());\n    }\n  },\n\n\n  destruct : function()\n  {\n    this.__pane.dispose();\n    this.__pane = null;\n  }\n});\n"
  ]
}