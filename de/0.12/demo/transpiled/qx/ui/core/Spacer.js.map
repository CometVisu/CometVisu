{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Spacer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "construct",
    "width",
    "height",
    "setWidth",
    "setHeight",
    "members",
    "checkAppearanceNeeds",
    "addChildrenToQueue",
    "queue",
    "destroy",
    "$$disposed",
    "parent",
    "$$parent",
    "_remove",
    "Dispose",
    "add",
    "Spacer"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,UADtB;;AAKE;;;;;;AAMD;;;;AAICC,IAAAA,SAAS,EAAG,mBAASC,KAAT,EAAgBC,MAAhB,EACZ;AACE,mDADF,CAGE;;AACA,WAAKC,QAAL,CAAcF,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,CAAtC;AACA,WAAKG,SAAL,CAAeF,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0B,CAAzC;AACD,KAtBH;;AA0BE;;;;;AAMAG,IAAAA,OAAO,EACP;AACE;;;;;;AAMAC,MAAAA,oBAAoB,EAAG,gCAAW,CAChC;AACD,OATH;;AAYE;;;;;AAKAC,MAAAA,kBAAkB,EAAG,4BAASC,KAAT,EAAgB,CACnC;AACD,OAnBH;;AAsBE;;;;;;;AAOAC,MAAAA,OAAO,EAAG,mBACV;AACE,YAAI,KAAKC,UAAT,EAAqB;AACnB;AACD;;AAED,YAAIC,MAAM,GAAG,KAAKC,QAAlB;;AACA,YAAID,MAAJ,EAAY;AACVA,UAAAA,MAAM,CAACE,OAAP,CAAe,IAAf;AACD;;AAEDvB,QAAAA,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWU,KAAX,CAAiBM,OAAjB,CAAyBC,GAAzB,CAA6B,IAA7B;AACD;AAzCH;AAjCF,GADA;AA9CAzB,EAAAA,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWkB,MAAX,CAAkBvB,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A Spacer is a \"virtual\" widget, which can be placed into any layout and takes\n * the space a normal widget of the same size would take.\n *\n * Spacers are invisible and very light weight because they don't require any\n * DOM modifications.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var container = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n *   container.add(new qx.ui.core.Widget());\n *   container.add(new qx.ui.core.Spacer(50));\n *   container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * This example places two widgets and a spacer into a container with a\n * horizontal box layout. In this scenario the spacer creates an empty area of\n * 50 pixel width between the two widgets.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/spacer.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.Spacer\",\n{\n  extend : qx.ui.core.LayoutItem,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n /**\n  * @param width {Integer?null} the initial width\n  * @param height {Integer?null} the initial height\n  */\n  construct : function(width, height)\n  {\n    this.base(arguments);\n\n    // Initialize dimensions\n    this.setWidth(width != null ? width : 0);\n    this.setHeight(height != null ? height : 0);\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * Helper method called from the visibility queue to detect outstanding changes\n     * to the appearance.\n     *\n     * @internal\n     */\n    checkAppearanceNeeds : function() {\n      // placeholder to improve compatibility with Widget.\n    },\n\n\n    /**\n     * Recursively adds all children to the given queue\n     *\n     * @param queue {Map} The queue to add widgets to\n     */\n    addChildrenToQueue : function(queue) {\n      // placeholder to improve compatibility with Widget.\n    },\n\n\n    /**\n     * Removes this widget from its parent and dispose it.\n     *\n     * Please note that the widget is not disposed synchronously. The\n     * real dispose happens after the next queue flush.\n     *\n     */\n    destroy : function()\n    {\n      if (this.$$disposed) {\n        return;\n      }\n\n      var parent = this.$$parent;\n      if (parent) {\n        parent._remove(this);\n      }\n\n      qx.ui.core.queue.Dispose.add(this);\n    }\n  }\n});\n"
  ]
}