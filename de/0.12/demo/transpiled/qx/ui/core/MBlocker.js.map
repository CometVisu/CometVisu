{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/ui/core/MBlocker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "blockerColor",
    "check",
    "init",
    "nullable",
    "apply",
    "themeable",
    "blockerOpacity",
    "members",
    "__blocker",
    "_createBlocker",
    "ui",
    "core",
    "Blocker",
    "_applyBlockerColor",
    "value",
    "old",
    "getBlocker",
    "setColor",
    "_applyBlockerOpacity",
    "setOpacity",
    "block",
    "isBlocked",
    "unblock",
    "forceUnblock",
    "blockContent",
    "zIndex",
    "destruct",
    "_disposeObjects",
    "MBlocker"
  ],
  "mappings": ";;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;AAUAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EACA;AACEC,IAAAA,UAAU,EACV;AACE;;;AAGAC,MAAAA,YAAY,EACZ;AACEC,QAAAA,KAAK,EAAG,OADV;AAEEC,QAAAA,IAAI,EAAG,IAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAG,oBAJV;AAKEC,QAAAA,SAAS,EAAE;AALb,OALF;;AAcE;;;AAGAC,MAAAA,cAAc,EACd;AACEL,QAAAA,KAAK,EAAG,QADV;AAEEC,QAAAA,IAAI,EAAG,CAFT;AAGEE,QAAAA,KAAK,EAAG,sBAHV;AAIEC,QAAAA,SAAS,EAAE;AAJb;AAlBF,KAFF;AA6BEE,IAAAA,OAAO,EACP;AACEC,MAAAA,SAAS,EAAG,IADd;;AAIE;;;;AAIAC,MAAAA,cAAc,EAAG,0BAAW;AAC1B,eAAO,IAAIhB,EAAE,CAACiB,EAAH,CAAMC,IAAN,CAAWC,OAAf,CAAuB,IAAvB,CAAP;AACD,OAVH;AAaE;AACAC,MAAAA,kBAAkB,EAAG,4BAASC,KAAT,EAAgBC,GAAhB,EAAqB;AACxC,aAAKC,UAAL,GAAkBC,QAAlB,CAA2BH,KAA3B;AACD,OAhBH;AAmBE;AACAI,MAAAA,oBAAoB,EAAG,8BAASJ,KAAT,EAAgBC,GAAhB,EAAqB;AAC1C,aAAKC,UAAL,GAAkBG,UAAlB,CAA6BL,KAA7B;AACD,OAtBH;;AAwBE;;;;AAIAM,MAAAA,KAAK,EAAG,iBAAW;AACjB,aAAKJ,UAAL,GAAkBI,KAAlB;AACD,OA9BH;;AAiCE;;;;;AAKAC,MAAAA,SAAS,EAAG,qBAAW;AACrB,eAAO,KAAKb,SAAL,IAAkB,KAAKA,SAAL,CAAea,SAAf,EAAzB;AACD,OAxCH;;AA2CE;;;;;AAKAC,MAAAA,OAAO,EAAG,mBAAW;AACnB,YAAI,KAAKd,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAec,OAAf;AACD;AACF,OApDH;;AAuDE;;;;AAIAC,MAAAA,YAAY,EAAG,wBAAW;AACxB,YAAI,KAAKf,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAee,YAAf;AACD;AACF,OA/DH;;AAkEE;;;;;;AAMAC,MAAAA,YAAY,EAAG,sBAASC,MAAT,EAAiB;AAC9B,aAAKT,UAAL,GAAkBQ,YAAlB,CAA+BC,MAA/B;AACD,OA1EH;;AA6EE;;;;;AAKAT,MAAAA,UAAU,EAAG,sBAAW;AACtB,YAAI,CAAC,KAAKR,SAAV,EAAqB;AACnB,eAAKA,SAAL,GAAiB,KAAKC,cAAL,EAAjB;AACD;;AACD,eAAO,KAAKD,SAAZ;AACD;AAvFH,KA9BF;AAyHEkB,IAAAA,QAAQ,EAAG,oBAAW;AACpB,WAAKC,eAAL,CAAqB,WAArB;AACD;AA3HH,GADA;AA5BAlC,EAAAA,EAAE,CAACiB,EAAH,CAAMC,IAAN,CAAWiB,QAAX,CAAoBhC,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin blocks events and can be included into all widgets.\n *\n * The {@link #block} and {@link #unblock} methods provided by this mixin can be used\n * to block any event from the widget. When blocked,\n * the blocker widget overlays the widget to block, including the padding area.\n *\n * The ({@link #blockContent} method can be used to block child widgets with a\n * zIndex below a certain value.\n */\nqx.Mixin.define(\"qx.ui.core.MBlocker\",\n{\n  properties :\n  {\n    /**\n     * Color of the blocker\n     */\n    blockerColor  :\n    {\n      check : \"Color\",\n      init : null,\n      nullable: true,\n      apply : \"_applyBlockerColor\",\n      themeable: true\n    },\n\n\n    /**\n     * Opacity of the blocker\n     */\n    blockerOpacity :\n    {\n      check : \"Number\",\n      init : 1,\n      apply : \"_applyBlockerOpacity\",\n      themeable: true\n    }\n  },\n\n\n  members :\n  {\n    __blocker : null,\n\n\n    /**\n     * Template method for creating the blocker item.\n     * @return {qx.ui.core.Blocker} The blocker to use.\n     */\n    _createBlocker : function() {\n      return new qx.ui.core.Blocker(this);\n    },\n\n\n    // property apply\n    _applyBlockerColor : function(value, old) {\n      this.getBlocker().setColor(value);\n    },\n\n\n    // property apply\n    _applyBlockerOpacity : function(value, old) {\n      this.getBlocker().setOpacity(value);\n    },\n\n    /**\n     * Block all events from this widget by placing a transparent overlay widget,\n     * which receives all events, exactly over the widget.\n     */\n    block : function() {\n      this.getBlocker().block();\n    },\n\n\n    /**\n     * Returns whether the widget is blocked.\n     *\n     * @return {Boolean} Whether the widget is blocked.\n     */\n    isBlocked : function() {\n      return this.__blocker && this.__blocker.isBlocked();\n    },\n\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it takes care of\n     * the amount of {@link #block} calls. The blocker is only removed if\n     * the number of {@link #unblock} calls is identical to {@link #block} calls.\n     */\n    unblock : function() {\n      if (this.__blocker) {\n        this.__blocker.unblock();\n      }\n    },\n\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it doesn't take care of\n     * the amount of {@link #block} calls. The blocker is directly removed.\n     */\n    forceUnblock : function() {\n      if (this.__blocker) {\n        this.__blocker.forceUnblock();\n      }\n    },\n\n\n    /**\n     * Block direct child widgets with a zIndex below <code>zIndex</code>\n     *\n     * @param zIndex {Integer} All child widgets with a zIndex below this value\n     *     will be blocked\n     */\n    blockContent : function(zIndex) {\n      this.getBlocker().blockContent(zIndex);\n    },\n\n\n    /**\n     * Get the blocker\n     *\n     * @return {qx.ui.core.Blocker} The blocker\n     */\n    getBlocker : function() {\n      if (!this.__blocker) {\n        this.__blocker = this._createBlocker();\n      }\n      return this.__blocker;\n    }\n  },\n\n\n  destruct : function() {\n    this._disposeObjects(\"__blocker\");\n  }\n});\n"
  ]
}