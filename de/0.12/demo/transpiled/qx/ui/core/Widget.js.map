{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/ui/core/Widget.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "include",
    "locale",
    "MTranslation",
    "implement",
    "IDisposable",
    "construct",
    "__contentElement",
    "__createContentElement",
    "initFocusable",
    "initSelectable",
    "initNativeContextMenu",
    "events",
    "appear",
    "disappear",
    "createChildControl",
    "resize",
    "move",
    "syncAppearance",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "auxclick",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "dbltap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "roll",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "capture",
    "losecapture",
    "drop",
    "dragleave",
    "dragover",
    "drag",
    "dragstart",
    "dragend",
    "dragchange",
    "droprequest",
    "properties",
    "paddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "zIndex",
    "nullable",
    "event",
    "decorator",
    "backgroundColor",
    "textColor",
    "inheritable",
    "font",
    "dereference",
    "opacity",
    "cursor",
    "toolTip",
    "toolTipText",
    "toolTipIcon",
    "blockToolTip",
    "showToolTipWhenDisabled",
    "visibility",
    "enabled",
    "anonymous",
    "tabIndex",
    "focusable",
    "keepFocus",
    "keepActive",
    "draggable",
    "droppable",
    "selectable",
    "contextMenu",
    "nativeContextMenu",
    "appearance",
    "statics",
    "DEBUG",
    "UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR",
    "getWidgetByElement",
    "element",
    "considerAnonymousState",
    "widget",
    "$$widgetObject",
    "getAnonymous",
    "parentNode",
    "e",
    "contains",
    "parent",
    "child",
    "getLayoutParent",
    "__separatorPool",
    "util",
    "ObjectPool",
    "members",
    "__initialAppearanceApplied",
    "__toolTipTextListenerId",
    "__layoutManager",
    "_getLayout",
    "_setLayout",
    "layout",
    "connectToWidget",
    "queue",
    "Layout",
    "add",
    "setLayoutParent",
    "$$parent",
    "content",
    "getContentElement",
    "$$disposed",
    "remove",
    "$$refreshInheritables",
    "Visibility",
    "_updateInsets",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "lang",
    "Object",
    "isEmpty",
    "inner",
    "size",
    "pixel",
    "contentStyles",
    "position",
    "margin",
    "keys",
    "length",
    "setStyles",
    "local",
    "hasLayoutChildren",
    "inset",
    "getInsets",
    "innerWidth",
    "right",
    "innerHeight",
    "bottom",
    "getDecorator",
    "decoratorPadding",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getPadding",
    "getPaddingTop",
    "getPaddingRight",
    "getPaddingBottom",
    "getPaddingLeft",
    "Error",
    "_findTopControl",
    "hasListener",
    "fireDataEvent",
    "getBounds",
    "__separators",
    "clearSeparators",
    "reg",
    "pool",
    "Widget",
    "i",
    "l",
    "poolObject",
    "renderSeparator",
    "separator",
    "bounds",
    "getObject",
    "set",
    "elem",
    "domEl",
    "getDomElement",
    "style",
    "push",
    "_computeSizeHint",
    "getWidth",
    "minWidth",
    "getMinWidth",
    "maxWidth",
    "getMaxWidth",
    "getHeight",
    "minHeight",
    "getMinHeight",
    "maxHeight",
    "getMaxHeight",
    "contentHint",
    "_getContentHint",
    "insets",
    "insetX",
    "insetY",
    "Infinity",
    "invalidateLayoutCache",
    "hint",
    "getSizeHint",
    "_getHeightForWidth",
    "contentWidth",
    "hasHeightForWidth",
    "contentHeight",
    "getHeightForWidth",
    "_getContentHeightForWidth",
    "getInnerSize",
    "computed",
    "fadeOut",
    "duration",
    "fadeIn",
    "_applyAnonymous",
    "value",
    "setAttribute",
    "removeAttribute",
    "show",
    "setVisibility",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "Manager",
    "flush",
    "offsetWidth",
    "el",
    "_createContentElement",
    "connectWidget",
    "styles",
    "root",
    "Inline",
    "html",
    "Element",
    "overflowX",
    "overflowY",
    "__widgetChildren",
    "getLayoutChildren",
    "children",
    "__emptyChildren",
    "layoutChildren",
    "hasUserBounds",
    "concat",
    "Array",
    "scheduleLayoutUpdate",
    "invalidateLayoutChildren",
    "invalidateChildrenCache",
    "getChildrenContainer",
    "_getChildren",
    "_indexOf",
    "indexOf",
    "_hasChildren",
    "addChildrenToQueue",
    "_add",
    "options",
    "__addHelper",
    "_addAt",
    "index",
    "ref",
    "setLayoutProperties",
    "insertBefore",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "insertAfter",
    "_remove",
    "__removeHelper",
    "_removeAt",
    "removeAt",
    "_removeAll",
    "_afterAddChild",
    "_afterRemoveChild",
    "updateLayoutProperties",
    "releaseCapture",
    "isCapturing",
    "Registration",
    "getManager",
    "dispatcher",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "_applyPadding",
    "old",
    "name",
    "__updateContentPadding",
    "direction",
    "firstLow",
    "replace",
    "setStyle",
    "_applyDecorator",
    "getCssClassName",
    "removeClass",
    "addCssClass",
    "addClass",
    "_applyToolTipText",
    "addListener",
    "getToolTipText",
    "translate",
    "setToolTipText",
    "_applyTextColor",
    "_applyZIndex",
    "_applyVisibility",
    "_applyOpacity",
    "_applyCursor",
    "isSelectable",
    "Environment",
    "get",
    "_applyBackgroundColor",
    "color",
    "getBackgroundColor",
    "resolved",
    "Color",
    "_applyFont",
    "_onChangeTheme",
    "isDisposed",
    "updateAppearance",
    "getFont",
    "Type",
    "isString",
    "getTextColor",
    "__states",
    "$$stateChanges",
    "_forwardStates",
    "hasState",
    "state",
    "states",
    "addState",
    "Appearance",
    "forward",
    "controls",
    "__childControls",
    "control",
    "id",
    "removeState",
    "replaceState",
    "__appearanceSelector",
    "__updateSelector",
    "selector",
    "styler",
    "Property",
    "$$method",
    "setThemed",
    "unstyler",
    "resetThemed",
    "oldData",
    "styleFrom",
    "getAppearance",
    "obj",
    "$$subcontrol",
    "$$subparent",
    "reverse",
    "join",
    "newData",
    "prop",
    "undefined",
    "_applyAppearance",
    "checkAppearanceNeeds",
    "syncWidget",
    "jobs",
    "getEventTarget",
    "target",
    "getFocusTarget",
    "getEnabled",
    "getFocusable",
    "getFocusElement",
    "isTabable",
    "isFocusable",
    "_applyFocusable",
    "getTabIndex",
    "isNativelyFocusable",
    "_applyKeepFocus",
    "_applyKeepActive",
    "_applyTabIndex",
    "_applySelectable",
    "getCursor",
    "setSelectable",
    "_applyEnabled",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "_applyNativeContextMenu",
    "_applyContextMenu",
    "getOpener",
    "resetOpener",
    "removeListener",
    "_onContextMenuOpen",
    "_onBeforeContextMenuOpen",
    "setOpener",
    "getType",
    "getPointerType",
    "getContextMenu",
    "openAtPointer",
    "stop",
    "getData",
    "_onStopEvent",
    "stopPropagation",
    "_getDragDropCursor",
    "DragDropCursor",
    "isEnabled",
    "_onDragStart",
    "_onDrag",
    "_onDragEnd",
    "_onDragChange",
    "placeToPointer",
    "getApplicationRoot",
    "setGlobalCursor",
    "moveTo",
    "resetGlobalCursor",
    "action",
    "getCurrentAction",
    "setAction",
    "resetAction",
    "visualizeFocus",
    "visualizeBlur",
    "scrollChildIntoView",
    "alignX",
    "alignY",
    "direct",
    "isScheduled",
    "getChildren",
    "forEach",
    "sibling",
    "scrollChildIntoViewX",
    "scrollChildIntoViewY",
    "align",
    "tabFocus",
    "hasChildControl",
    "_getCreatedChildControls",
    "getChildControl",
    "notcreate",
    "_createChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_isChildControlVisible",
    "_releaseChildControl",
    "pos",
    "_createChildControlImpl",
    "substring",
    "exc",
    "message",
    "toString",
    "$$resyncNeeded",
    "hash",
    "_disposeChildControls",
    "destroy",
    "dispose",
    "getSubcontrolId",
    "getContentLocation",
    "bom",
    "Location",
    "setDomLeft",
    "setDomTop",
    "setDomPosition",
    "Dispose",
    "clone",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "removeListenerById",
    "contentEl",
    "disconnectWidget",
    "setContextMenu",
    "_disposeArray",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n\n************************************************************************ */\n\n/**\n * This is the base class for all widgets.\n *\n * *External Documentation*\n *\n * <a href='http://manual.qooxdoo.org/${qxversion}/pages/widget.html' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @use(qx.ui.core.EventHandler)\n * @use(qx.event.handler.DragDrop)\n * @asset(qx/static/blank.gif)\n *\n * @ignore(qx.ui.root.Inline)\n */\nqx.Class.define(\"qx.ui.core.Widget\",\n{\n  extend : qx.ui.core.LayoutItem,\n  include : [qx.locale.MTranslation],\n  implement: [ qx.core.IDisposable ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Create basic element\n    this.__contentElement = this.__createContentElement();\n\n    // Initialize properties\n    this.initFocusable();\n    this.initSelectable();\n    this.initNativeContextMenu();\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired after the widget appears on the screen.\n     */\n    appear : \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget disappears from the screen.\n     */\n    disappear : \"qx.event.type.Event\",\n\n    /**\n     * Fired after the creation of a child control. The passed data is the\n     * newly created child widget.\n     */\n    createChildControl : \"qx.event.type.Data\",\n\n\n    /**\n     * Fired on resize (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    resize : \"qx.event.type.Data\",\n\n    /**\n     * Fired on move (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    move : \"qx.event.type.Data\",\n\n    /**\n     * Fired after the appearance has been applied. This happens before the\n     * widget becomes visible, on state and appearance changes. The data field\n     * contains the state map. This can be used to react on state changes or to\n     * read properties set by the appearance.\n     */\n    syncAppearance : \"qx.event.type.Data\",\n\n\n\n    /** Fired if the mouse cursor moves over the widget.\n     *  The data property of the event contains the widget's computed location\n     *  and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    mousemove : \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor enters the widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseover : \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor leaves widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseout : \"qx.event.type.Mouse\",\n\n    /** Mouse button is pressed on the widget. */\n    mousedown : \"qx.event.type.Mouse\",\n\n    /** Mouse button is released on the widget. */\n    mouseup : \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    click : \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using a non primary button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    auxclick : \"qx.event.type.Mouse\",\n\n    /** Widget is double clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    dblclick : \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using the right mouse button. */\n    contextmenu : \"qx.event.type.Mouse\",\n\n    /** Fired before the context menu is opened. */\n    beforeContextmenuOpen : \"qx.event.type.Data\",\n\n    /** Fired if the mouse wheel is used over the widget. */\n    mousewheel : \"qx.event.type.MouseWheel\",\n\n    /** Fired if a touch at the screen is started. */\n    touchstart : \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen has ended. */\n    touchend : \"qx.event.type.Touch\",\n\n    /** Fired during a touch at the screen. */\n    touchmove : \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen is canceled. */\n    touchcancel : \"qx.event.type.Touch\",\n\n    /** Fired when a pointer taps on the screen. */\n    tap : \"qx.event.type.Tap\",\n\n    /** Fired when a pointer holds on the screen. */\n    longtap : \"qx.event.type.Tap\",\n\n    /** Fired when a pointer taps twice on the screen. */\n    dbltap : \"qx.event.type.Tap\",\n\n    /** Fired when a pointer swipes over the screen. */\n    swipe : \"qx.event.type.Touch\",\n\n    /** Fired when two pointers performing a rotate gesture on the screen. */\n    rotate : \"qx.event.type.Rotate\",\n\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\n    pinch : \"qx.event.type.Pinch\",\n\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\n    track : \"qx.event.type.Track\",\n\n    /** Fired when an active pointer moves on the screen or the mouse wheel is used. */\n    roll : \"qx.event.type.Roll\",\n\n    /** Fired if a pointer (mouse/touch/pen) moves or changes any of it's values. */\n    pointermove : \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) hovers the widget. */\n    pointerover : \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) leaves this widget. */\n    pointerout : \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if a pointer (mouse/touch/pen) button is pressed or\n     * a finger touches the widget.\n     */\n    pointerdown : \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if all pointer (mouse/touch/pen) buttons are released or\n     * the finger is lifted from the widget.\n     */\n    pointerup : \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) action is canceled. */\n    pointercancel : \"qx.event.type.Pointer\",\n\n    /** This event if fired if a keyboard key is released. */\n    keyup : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event if fired if a keyboard key is pressed down. This event is\n     * only fired once if the user keeps the key pressed for a while.\n     */\n    keydown : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired any time a key is pressed. It will be repeated if\n     * the user keeps the key pressed. The pressed key can be determined using\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\n     */\n    keypress : \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired if the pressed key or keys result in a printable\n     * character. Since the character is not necessarily associated with a\n     * single physical key press, the event does not have a key identifier\n     * getter. This event gets repeated if the user keeps pressing the key(s).\n     *\n     * The unicode code of the pressed key can be read using\n     * {@link qx.event.type.KeyInput#getCharCode}.\n     */\n    keyinput : \"qx.event.type.KeyInput\",\n\n\n\n    /**\n     * The event is fired when the widget gets focused. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    focus : \"qx.event.type.Focus\",\n\n    /**\n     * The event is fired when the widget gets blurred. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    blur : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget receive the focus.\n     */\n    focusin : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget lost the focus.\n     */\n    focusout : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets active (receives keyboard events etc.)\n     */\n    activate : \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets inactive\n     */\n    deactivate : \"qx.event.type.Focus\",\n\n\n\n    /**\n     * Fired if the widget becomes the capturing widget by a call to {@link #capture}.\n     */\n    capture : \"qx.event.type.Event\",\n\n    /**\n     * Fired if the widget looses the capturing mode by a call to\n     * {@link #releaseCapture} or a mouse click.\n     */\n    losecapture : \"qx.event.type.Event\",\n\n\n\n    /**\n     * Fired on the drop target when the drag&drop action is finished\n     * successfully. This event is normally used to transfer the data\n     * from the drag to the drop target.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drop : \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when leaving it.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragleave : \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when reaching it via the pointer.\n     * This event can be canceled if none of the incoming data types\n     * are supported.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragover : \"qx.event.type.Drag\",\n\n    /**\n     * Fired during the drag. Contains the current pointer coordinates\n     * using {@link qx.event.type.Drag#getDocumentLeft} and\n     * {@link qx.event.type.Drag#getDocumentTop}\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drag : \"qx.event.type.Drag\",\n\n    /**\n     * Initiate the drag-and-drop operation. This event is cancelable\n     * when the drag operation is currently not allowed/possible.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragstart : \"qx.event.type.Drag\",\n\n    /**\n     * Fired on the source (drag) target every time a drag session was ended.\n     */\n    dragend : \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drag configuration has been modified e.g. the user\n     * pressed a key which changed the selected action. This event will be\n     * fired on the draggable and the droppable element. In case of the\n     * droppable element, you can cancel the event and prevent a drop based on\n     * e.g. the current action.\n     */\n    dragchange : \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drop was successfully done and the target widget\n     * is now asking for data. The listener should transfer the data,\n     * respecting the selected action, to the event. This can be done using\n     * the event's {@link qx.event.type.Drag#addData} method.\n     */\n    droprequest : \"qx.event.type.Drag\"\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (right) */\n    paddingRight :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (bottom) */\n    paddingBottom :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /** Padding of the widget (left) */\n    paddingLeft :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyPadding\",\n      themeable : true\n    },\n\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    padding :\n    {\n      group : [ \"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\" ],\n      mode  : \"shorthand\",\n      themeable : true\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLING PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The z-index property sets the stack order of an element. An element with\n     * greater stack order is always in front of another element with lower stack order.\n     */\n    zIndex :\n    {\n      nullable : true,\n      init : 10,\n      apply : \"_applyZIndex\",\n      event : \"changeZIndex\",\n      check : \"Integer\",\n      themeable : true\n    },\n\n\n    /**\n     * The decorator property points to an object, which is responsible\n     * for drawing the widget's decoration, e.g. border, background or shadow.\n     *\n     * This can be a decorator object or a string pointing to a decorator\n     * defined in the decoration theme.\n     */\n    decorator :\n    {\n      nullable : true,\n      init : null,\n      apply : \"_applyDecorator\",\n      event : \"changeDecorator\",\n      check : \"Decorator\",\n      themeable : true\n    },\n\n\n    /**\n     * The background color the rendered widget.\n     */\n    backgroundColor :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyBackgroundColor\",\n      event : \"changeBackgroundColor\",\n      themeable : true\n    },\n\n\n    /**\n     * The text color the rendered widget.\n     */\n    textColor :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyTextColor\",\n      event : \"changeTextColor\",\n      themeable : true,\n      inheritable : true\n    },\n\n\n    /**\n     * The widget's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font :\n    {\n      nullable : true,\n      apply : \"_applyFont\",\n      check : \"Font\",\n      event : \"changeFont\",\n      themeable : true,\n      inheritable : true,\n      dereference : true\n    },\n\n\n    /**\n     * Mapping to native style property opacity.\n     *\n     * The uniform opacity setting to be applied across an entire object.\n     * Behaves like the new CSS-3 Property.\n     * Any values outside the range 0.0 (fully transparent) to 1.0\n     * (fully opaque) will be clamped to this range.\n     */\n    opacity :\n    {\n      check : \"Number\",\n      apply : \"_applyOpacity\",\n      themeable : true,\n      nullable : true,\n      init : null\n    },\n\n\n    /**\n     * Mapping to native style property cursor.\n     *\n     * The name of the cursor to show when the pointer is over the widget.\n     * This is any valid CSS2 cursor name defined by W3C.\n     *\n     * The following values are possible crossbrowser:\n     * <ul><li>default</li>\n     * <li>crosshair</li>\n     * <li>pointer</li>\n     * <li>move</li>\n     * <li>n-resize</li>\n     * <li>ne-resize</li>\n     * <li>e-resize</li>\n     * <li>se-resize</li>\n     * <li>s-resize</li>\n     * <li>sw-resize</li>\n     * <li>w-resize</li>\n     * <li>nw-resize</li>\n     * <li>nesw-resize</li>\n     * <li>nwse-resize</li>\n     * <li>text</li>\n     * <li>wait</li>\n     * <li>help </li>\n     * </ul>\n     */\n    cursor :\n    {\n      check : \"String\",\n      apply : \"_applyCursor\",\n      themeable : true,\n      inheritable : true,\n      nullable : true,\n      init : null\n    },\n\n\n    /**\n     * Sets the tooltip instance to use for this widget. If only the tooltip\n     * text and icon have to be set its better to use the {@link #toolTipText}\n     * and {@link #toolTipIcon} properties since they use a shared tooltip\n     * instance.\n     *\n     * If this property is set the {@link #toolTipText} and {@link #toolTipIcon}\n     * properties are ignored.\n     */\n    toolTip :\n    {\n      check : \"qx.ui.tooltip.ToolTip\",\n      nullable : true\n    },\n\n\n    /**\n     * The text of the widget's tooltip. This text can contain HTML markup.\n     * The text is displayed using a shared tooltip instance. If the tooltip\n     * must be customized beyond the text and an icon {@link #toolTipIcon}, the\n     * {@link #toolTip} property has to be used\n     */\n    toolTipText :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeToolTipText\",\n      apply : \"_applyToolTipText\"\n    },\n\n\n    /**\n    * The icon URI of the widget's tooltip. This icon is displayed using a shared\n    * tooltip instance. If the tooltip must be customized beyond the tooltip text\n    * {@link #toolTipText} and the icon, the {@link #toolTip} property has to be\n    * used.\n    */\n    toolTipIcon :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeToolTipText\"\n    },\n\n    /**\n     * Controls if a tooltip should shown or not.\n     */\n    blockToolTip :\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n    /**\n     * Forces to show tooltip when widget is disabled.\n     */\n    showToolTipWhenDisabled:\n    {\n      check : \"Boolean\",\n      init : false\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MANAGEMENT PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Controls the visibility. Valid values are:\n     *\n     * <ul>\n     *   <li><b>visible</b>: Render the widget</li>\n     *   <li><b>hidden</b>: Hide the widget but don't relayout the widget's parent.</li>\n     *   <li><b>excluded</b>: Hide the widget and relayout the parent as if the\n     *     widget was not a child of its parent.</li>\n     * </ul>\n     */\n    visibility :\n    {\n      check : [\"visible\", \"hidden\", \"excluded\"],\n      init : \"visible\",\n      apply : \"_applyVisibility\",\n      event : \"changeVisibility\"\n    },\n\n\n    /**\n     * Whether the widget is enabled. Disabled widgets are usually grayed out\n     * and do not process user created events. While in the disabled state most\n     * user input events are blocked. Only the {@link #pointerover} and\n     * {@link #pointerout} events will be dispatched.\n     */\n    enabled :\n    {\n      init : true,\n      check : \"Boolean\",\n      inheritable : true,\n      apply : \"_applyEnabled\",\n      event : \"changeEnabled\"\n    },\n\n\n    /**\n     * Whether the widget is anonymous.\n     *\n     * Anonymous widgets are ignored in the event hierarchy. This is useful\n     * for combined widgets where the internal structure do not have a custom\n     * appearance with a different styling from the element around. This is\n     * especially true for widgets like checkboxes or buttons where the text\n     * or icon are handled synchronously for state changes to the outer widget.\n     */\n    anonymous :\n    {\n      init : false,\n      check : \"Boolean\",\n      apply : \"_applyAnonymous\"\n    },\n\n\n    /**\n     * Defines the tab index of an widget. If widgets with tab indexes are part\n     * of the current focus root these elements are sorted in first priority. Afterwards\n     * the sorting continues by rendered position, zIndex and other criteria.\n     *\n     * Please note: The value must be between 1 and 32000.\n     */\n    tabIndex :\n    {\n      check : \"Integer\",\n      nullable : true,\n      apply : \"_applyTabIndex\"\n    },\n\n\n    /**\n     * Whether the widget is focusable e.g. rendering a focus border and visualize\n     * as active element.\n     *\n     * See also {@link #isTabable} which allows runtime checks for\n     * <code>isChecked</code> or other stuff to test whether the widget is\n     * reachable via the TAB key.\n     */\n    focusable :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyFocusable\"\n    },\n\n\n    /**\n     * If this property is enabled, the widget and all of its child widgets\n     * will never get focused. The focus keeps at the currently\n     * focused widget.\n     *\n     * This only works for widgets which are not {@link #focusable}.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepFocus :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyKeepFocus\"\n    },\n\n\n    /**\n     * If this property if enabled, the widget and all of its child widgets\n     * will never get activated. The activation keeps at the currently\n     * activated widget.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepActive :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyKeepActive\"\n    },\n\n\n    /** Whether the widget acts as a source for drag&drop operations */\n    draggable :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDraggable\"\n    },\n\n\n    /** Whether the widget acts as a target for drag&drop operations */\n    droppable :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyDroppable\"\n    },\n\n\n    /**\n     * Whether the widget contains content which may be selected by the user.\n     *\n     * If the value set to <code>true</code> the native browser selection can\n     * be used for text selection. But it is normally useful for\n     * forms fields, longer texts/documents, editors, etc.\n     */\n    selectable :\n    {\n      check : \"Boolean\",\n      init : false,\n      event : \"changeSelectable\",\n      apply : \"_applySelectable\"\n    },\n\n\n    /**\n     * Whether to show a context menu and which one\n     */\n    contextMenu :\n    {\n      check : \"qx.ui.menu.Menu\",\n      apply : \"_applyContextMenu\",\n      nullable : true,\n      event : \"changeContextMenu\"\n    },\n\n\n    /**\n     * Whether the native context menu should be enabled for this widget. To\n     * globally enable the native context menu set the {@link #nativeContextMenu}\n     * property of the root widget ({@link qx.ui.root.Abstract}) to\n     * <code>true</code>.\n     */\n    nativeContextMenu :\n    {\n      check : \"Boolean\",\n      init : false,\n      themeable : true,\n      event : \"changeNativeContextMenu\",\n      apply : \"_applyNativeContextMenu\"\n    },\n\n\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this widget. This controls the styling of the element.\n     */\n    appearance :\n    {\n      check : \"String\",\n      init : \"widget\",\n      apply : \"_applyAppearance\",\n      event : \"changeAppearance\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** Whether the widget should print out hints and debug messages */\n    DEBUG : false,\n\n    /** Whether to throw an error on focus/blur if the widget is unfocusable */\n    UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR : true,\n\n    /**\n     * Returns the widget, which contains the given DOM element.\n     *\n     * @param element {Element} The DOM element to search the widget for.\n     * @param considerAnonymousState {Boolean?false} If true, anonymous widget\n     *   will not be returned.\n     * @return {qx.ui.core.Widget} The widget containing the element.\n     */\n    getWidgetByElement : function(element, considerAnonymousState)\n    {\n      while(element)\n      {\n      \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \t\tqx.core.Assert.assertTrue((!element.$$widget && !element.$$widgetObject) ||\n      \t\t\t\t(element.$$widgetObject && element.$$widget && element.$$widgetObject.toHashCode() === element.$$widget));\n      \t}\n        var widget = element.$$widgetObject;\n\n        // check for anonymous widgets\n        if (widget) {\n\t        if (!considerAnonymousState || !widget.getAnonymous()) {\n\t          return widget;\n\t        }\n        }\n\n        // Fix for FF, which occasionally breaks (BUG#3525)\n        try {\n          element = element.parentNode;\n        } catch (e) {\n          return null;\n        }\n      }\n      return null;\n    },\n\n\n    /**\n     * Whether the \"parent\" widget contains the \"child\" widget.\n     *\n     * @param parent {qx.ui.core.Widget} The parent widget\n     * @param child {qx.ui.core.Widget} The child widget\n     * @return {Boolean} Whether one of the \"child\"'s parents is \"parent\"\n     */\n    contains : function(parent, child)\n    {\n      while (child)\n      {\n        child = child.getLayoutParent();\n\n        if (parent == child) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /** @type {Map} Contains all pooled separators for reuse */\n    __separatorPool : new qx.util.ObjectPool()\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __contentElement : null,\n    __initialAppearanceApplied : null,\n    __toolTipTextListenerId : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {qx.ui.layout.Abstract} The connected layout manager\n     */\n    __layoutManager : null,\n\n\n    // overridden\n    _getLayout : function() {\n      return this.__layoutManager;\n    },\n\n\n    /**\n     * Set a layout manager for the widget. A a layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    _setLayout : function(layout)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (layout) {\n          this.assertInstance(layout, qx.ui.layout.Abstract);\n        }\n      }\n\n      if (this.__layoutManager) {\n        this.__layoutManager.connectToWidget(null);\n      }\n\n      if (layout) {\n        layout.connectToWidget(this);\n      }\n\n      this.__layoutManager = layout;\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    // overridden\n    setLayoutParent : function(parent)\n    {\n      if (this.$$parent === parent) {\n        return;\n      }\n\n      var content = this.getContentElement();\n\n      if (this.$$parent && !this.$$parent.$$disposed) {\n        this.$$parent.getContentElement().remove(content);\n      }\n\n      this.$$parent = parent || null;\n\n      if (parent && !parent.$$disposed) {\n        this.$$parent.getContentElement().add(content);\n      }\n\n      // Update inheritable properties\n      this.$$refreshInheritables();\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n\n    /** @type {Boolean} Whether insets have changed and must be updated */\n    _updateInsets : null,\n\n\n    // overridden\n    renderLayout : function(left, top, width, height)\n    {\n      var changes = this.base(arguments, left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return null;\n      }\n\n      if (qx.lang.Object.isEmpty(changes) && !this._updateInsets) {\n        return null;\n      }\n\n      var content = this.getContentElement();\n      var inner = changes.size || this._updateInsets;\n      var pixel = \"px\";\n\n      var contentStyles = {};\n      // Move content to new position\n      if (changes.position)\n      {\n        contentStyles.left = left + pixel;\n        contentStyles.top = top + pixel;\n      }\n\n      if (inner || changes.margin)\n      {\n        contentStyles.width = width + pixel;\n        contentStyles.height = height + pixel;\n      }\n\n      if (Object.keys(contentStyles).length > 0) {\n        content.setStyles(contentStyles);\n      }\n\n      if (inner || changes.local || changes.margin)\n      {\n        if (this.__layoutManager && this.hasLayoutChildren()) {\n          var inset = this.getInsets();\n          var innerWidth = width - inset.left - inset.right;\n          var innerHeight = height - inset.top - inset.bottom;\n\n          var decorator = this.getDecorator();\n          var decoratorPadding = {left: 0, right: 0, top: 0, bottom: 0};\n          if (decorator) {\n            decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n            decoratorPadding = decorator.getPadding();\n          }\n\n          var padding = {\n            top: this.getPaddingTop() + decoratorPadding.top,\n            right: this.getPaddingRight() + decoratorPadding.right,\n            bottom: this.getPaddingBottom() + decoratorPadding.bottom,\n            left : this.getPaddingLeft() + decoratorPadding.left\n          };\n\n          this.__layoutManager.renderLayout(innerWidth, innerHeight, padding);\n        } else if (this.hasLayoutChildren()) {\n          throw new Error(\"At least one child in control \" +\n            this._findTopControl() +\n            \" requires a layout, but no one was defined!\");\n        }\n      }\n\n      // Fire events\n      if (changes.position && this.hasListener(\"move\")) {\n        this.fireDataEvent(\"move\", this.getBounds());\n      }\n\n      if (changes.size && this.hasListener(\"resize\")) {\n        this.fireDataEvent(\"resize\", this.getBounds());\n      }\n\n      // Cleanup flags\n      delete this._updateInsets;\n\n      return changes;\n    },\n\n\n\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SEPARATOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    __separators : null,\n\n    // overridden\n    clearSeparators : function()\n    {\n      var reg = this.__separators;\n      if (!reg) {\n        return;\n      }\n\n      var pool = qx.ui.core.Widget.__separatorPool;\n      var content = this.getContentElement();\n      var widget;\n\n      for (var i=0, l=reg.length; i<l; i++)\n      {\n        widget = reg[i];\n        pool.poolObject(widget);\n        content.remove(widget.getContentElement());\n      }\n\n      // Clear registry\n      reg.length = 0;\n    },\n\n\n    // overridden\n    renderSeparator : function(separator, bounds)\n    {\n      // Insert\n      var widget = qx.ui.core.Widget.__separatorPool.getObject(qx.ui.core.Widget);\n      widget.set({\n        decorator: separator\n      });\n      var elem = widget.getContentElement();\n      this.getContentElement().add(elem);\n\n      // Move\n      var domEl = elem.getDomElement();\n      // use the DOM element because the cache of the qx.html.Element could be\n      // wrong due to changes made by the decorators which work on the DOM element too\n      if (domEl) {\n        domEl.style.top = bounds.top + \"px\";\n        domEl.style.left = bounds.left + \"px\";\n        domEl.style.width = bounds.width + \"px\";\n        domEl.style.height = bounds.height + \"px\";\n      } else {\n        elem.setStyles({\n          left : bounds.left + \"px\",\n          top : bounds.top + \"px\",\n          width : bounds.width + \"px\",\n          height : bounds.height + \"px\"\n        });\n      }\n\n      // Remember element\n      if (!this.__separators) {\n        this.__separators = [];\n      }\n      this.__separators.push(widget);\n    },\n\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE HINTS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      // Start with the user defined values\n      var width = this.getWidth();\n      var minWidth = this.getMinWidth();\n      var maxWidth = this.getMaxWidth();\n\n      var height = this.getHeight();\n      var minHeight = this.getMinHeight();\n      var maxHeight = this.getMaxHeight();\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (minWidth !== null && maxWidth !== null) {\n          this.assert(minWidth <= maxWidth, \"minWidth is larger than maxWidth!\");\n        }\n        if (minHeight !== null && maxHeight !== null) {\n          this.assert(minHeight <= maxHeight, \"minHeight is larger than maxHeight!\");\n        }\n      }\n\n      // Ask content\n      var contentHint = this._getContentHint();\n\n      var insets = this.getInsets();\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      if (width == null) {\n        width = contentHint.width + insetX;\n      }\n\n      if (height == null) {\n        height = contentHint.height + insetY;\n      }\n\n      if (minWidth == null)\n      {\n        minWidth = insetX;\n\n        if (contentHint.minWidth != null) {\n          minWidth += contentHint.minWidth;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (minWidth > maxWidth && maxWidth != null) {\n            minWidth = maxWidth;\n          }\n        }\n      }\n\n      if (minHeight == null)\n      {\n        minHeight = insetY;\n\n        if (contentHint.minHeight != null) {\n          minHeight += contentHint.minHeight;\n          // do not apply bigger min height than max height [BUG #5008]\n          if (minHeight > maxHeight && maxHeight != null) {\n            minHeight = maxHeight;\n          }\n        }\n      }\n\n      if (maxWidth == null)\n      {\n        if (contentHint.maxWidth == null) {\n          maxWidth = Infinity;\n        } else {\n          maxWidth = contentHint.maxWidth + insetX;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxWidth < minWidth && minWidth != null) {\n            maxWidth = minWidth;\n          }\n        }\n      }\n\n      if (maxHeight == null)\n      {\n        if (contentHint.maxHeight == null) {\n          maxHeight = Infinity;\n        } else {\n          maxHeight = contentHint.maxHeight + insetY;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxHeight < minHeight && minHeight != null) {\n            maxHeight = minHeight;\n          }\n        }\n      }\n\n      // Build size hint and return\n      return {\n        width : width,\n        minWidth : minWidth,\n        maxWidth : maxWidth,\n        height : height,\n        minHeight : minHeight,\n        maxHeight : maxHeight\n      };\n    },\n\n\n    // overridden\n    invalidateLayoutCache : function()\n    {\n      this.base(arguments);\n\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateLayoutCache();\n      }\n    },\n\n\n    /**\n     * Returns the recommended/natural dimensions of the widget's content.\n     *\n     * For labels and images this may be their natural size when defined without\n     * any dimensions. For containers this may be the recommended size of the\n     * underlying layout manager.\n     *\n     * Developer note: This can be overwritten by the derived classes to allow\n     * a custom handling here.\n     *\n     * @return {Map}\n     */\n    _getContentHint : function()\n    {\n      var layout = this.__layoutManager;\n      if (layout)\n      {\n        if (this.hasLayoutChildren())\n        {\n          var hint = layout.getSizeHint();\n\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            var msg = \"The layout of the widget\" + this.toString() +\n              \" returned an invalid size hint!\";\n            this.assertInteger(hint.width, \"Wrong 'left' argument. \" + msg);\n            this.assertInteger(hint.height, \"Wrong 'top' argument. \" + msg);\n          }\n\n          return hint;\n        }\n        else\n        {\n          return {\n            width : 0,\n            height : 0\n          };\n        }\n      }\n      else\n      {\n        return {\n          width : 100,\n          height : 50\n        };\n      }\n    },\n\n\n    // overridden\n    _getHeightForWidth : function(width)\n    {\n      // Prepare insets\n      var insets = this.getInsets();\n\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      // Compute content width\n      var contentWidth = width - insetX;\n\n      // Compute height\n      var layout = this._getLayout();\n      if (layout && layout.hasHeightForWidth()) {\n        var contentHeight =  layout.getHeightForWidth(contentWidth);\n      } else {\n        contentHeight = this._getContentHeightForWidth(contentWidth);\n      }\n\n      // Computed box height\n      var height = contentHeight + insetY;\n\n      return height;\n    },\n\n\n    /**\n     * Returns the computed height for the given width.\n     *\n     * @abstract\n     * @param width {Integer} Incoming width (as limitation)\n     * @return {Integer} Computed height while respecting the given width.\n     */\n    _getContentHeightForWidth : function(width) {\n      throw new Error(\"Abstract method call: _getContentHeightForWidth()!\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INSET CALCULATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the sum of the widget's padding and border width.\n     *\n     * @return {Map} Contains the keys <code>top</code>, <code>right</code>,\n     *   <code>bottom</code> and <code>left</code>. All values are integers.\n     */\n    getInsets : function()\n    {\n      var top = this.getPaddingTop();\n      var right = this.getPaddingRight();\n      var bottom = this.getPaddingBottom();\n      var left = this.getPaddingLeft();\n      if (this.getDecorator()) {\n        var decorator = qx.theme.manager.Decoration.getInstance().resolve(this.getDecorator());\n        var inset = decorator.getInsets();\n\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          this.assertNumber(\n            inset.top,\n            \"Invalid top decorator inset detected: \" + inset.top\n          );\n          this.assertNumber(\n            inset.right,\n            \"Invalid right decorator inset detected: \" + inset.right\n          );\n          this.assertNumber(\n            inset.bottom,\n            \"Invalid bottom decorator inset detected: \" + inset.bottom\n          );\n          this.assertNumber(\n            inset.left,\n            \"Invalid left decorator inset detected: \" + inset.left\n          );\n        }\n\n        top += inset.top;\n        right += inset.right;\n        bottom += inset.bottom;\n        left += inset.left;\n      }\n\n      return {\n        \"top\" : top,\n        \"right\" : right,\n        \"bottom\" : bottom,\n        \"left\" : left\n      };\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPUTED LAYOUT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget's computed inner size as available\n     * through the layout process.\n     *\n     * This function is guaranteed to return a correct value\n     * during a {@link #resize} or {@link #move} event dispatch.\n     *\n     * @return {Map} The widget inner dimension in pixel (if the layout is\n     *    valid). Contains the keys <code>width</code> and <code>height</code>.\n     */\n    getInnerSize : function()\n    {\n      var computed = this.getBounds();\n      if (!computed) {\n        return null;\n      }\n\n      // Return map data\n      var insets = this.getInsets();\n      return {\n        width : computed.width - insets.left - insets.right,\n        height : computed.height - insets.top - insets.bottom\n      };\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fade out this widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut : function(duration) {\n      return this.getContentElement().fadeOut(duration);\n    },\n\n    /**\n     * Fade in the widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn : function(duration) {\n      return this.getContentElement().fadeIn(duration);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyAnonymous : function(value) {\n      if (value) {\n        this.getContentElement().setAttribute(\"qxanonymous\", \"true\");\n      } else {\n        this.getContentElement().removeAttribute(\"qxanonymous\");\n      }\n    },\n\n\n    /**\n     * Make this widget visible.\n     *\n     */\n    show : function() {\n      this.setVisibility(\"visible\");\n    },\n\n\n    /**\n     * Hide this widget.\n     *\n     */\n    hide : function() {\n      this.setVisibility(\"hidden\");\n    },\n\n\n    /**\n     * Hide this widget and exclude it from the underlying layout.\n     *\n     */\n    exclude : function() {\n      this.setVisibility(\"excluded\");\n    },\n\n\n    /**\n     * Whether the widget is locally visible.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\n     */\n    isVisible : function() {\n      return this.getVisibility() === \"visible\";\n    },\n\n\n    /**\n     * Whether the widget is locally hidden.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\n     */\n    isHidden : function() {\n      return this.getVisibility() !== \"visible\";\n    },\n\n\n    /**\n     * Whether the widget is locally excluded.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\n     */\n    isExcluded : function() {\n      return this.getVisibility() === \"excluded\";\n    },\n\n\n    /**\n     * Detects if the widget and all its parents are visible.\n     *\n     * WARNING: Please use this method with caution because it flushes the\n     * internal queues which might be an expensive operation.\n     *\n     * @return {Boolean} true, if the widget is currently on the screen\n     */\n    isSeeable : function()\n    {\n      // Flush the queues because to detect if the widget ins visible, the\n      // queues need to be flushed (see bug #5254)\n      qx.ui.core.queue.Manager.flush();\n      // if the element is already rendered, a check for the offsetWidth is enough\n      var element = this.getContentElement().getDomElement();\n      if (element) {\n        // will also be 0 if the parents are not visible\n        return element.offsetWidth > 0;\n      }\n      // if no element is available, it can not be visible\n      return false;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CREATION OF HTML ELEMENTS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Create the widget's content HTML element.\n     *\n     * @return {qx.html.Element} The content HTML element\n     */\n    __createContentElement : function()\n    {\n      var el = this._createContentElement();\n      el.connectWidget(this);\n\n      // make sure to allow all pointer events\n      el.setStyles({\"touch-action\": \"none\", \"-ms-touch-action\" : \"none\"});\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        el.setAttribute(\"qxClass\", this.classname);\n      }\n\n      var styles = {\n        \"zIndex\": 10,\n        \"boxSizing\": \"border-box\"\n      };\n\n      if (!qx.ui.root.Inline ||\n        !(this instanceof qx.ui.root.Inline))\n      {\n        styles.position = \"absolute\";\n      }\n\n      el.setStyles(styles);\n\n      return el;\n    },\n\n\n    /**\n     * Creates the content element. The style properties\n     * position and zIndex are modified from the Widget\n     * core.\n     *\n     * This function may be overridden to customize a class\n     * content.\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    _createContentElement : function()\n    {\n      return new qx.html.Element(\"div\", {\n        overflowX: \"hidden\",\n        overflowY: \"hidden\"\n      });\n    },\n\n\n    /**\n     * Returns the element wrapper of the widget's content element.\n     * This method exposes widget internal and must be used with caution!\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    getContentElement : function() {\n      return this.__contentElement;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {qx.ui.core.LayoutItem[]} List of all child widgets */\n    __widgetChildren : null,\n\n\n    /**\n     * Returns all children, which are layout relevant. This excludes all widgets,\n     * which have a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>.\n     *\n     * @internal\n     * @return {qx.ui.core.Widget[]} All layout relevant children.\n     */\n    getLayoutChildren : function()\n    {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return this.__emptyChildren;\n      }\n\n      var layoutChildren;\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        var child = children[i];\n        if (child.hasUserBounds() || child.isExcluded())\n        {\n          if (layoutChildren == null) {\n            layoutChildren = children.concat();\n          }\n\n          qx.lang.Array.remove(layoutChildren, child);\n        }\n      }\n\n      return layoutChildren || children;\n    },\n\n\n    /**\n     * Marks the layout of this widget as invalid and triggers a layout update.\n     * This is a shortcut for <code>qx.ui.core.queue.Layout.add(this);</code>.\n     */\n    scheduleLayoutUpdate : function() {\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    /**\n     * Resets the cache for children which should be laid out.\n     */\n    invalidateLayoutChildren : function()\n    {\n      var layout = this.__layoutManager;\n      if (layout) {\n        layout.invalidateChildrenCache();\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n\n    /**\n     * Returns whether the layout has children, which are layout relevant. This\n     * excludes all widgets, which have a {@link qx.ui.core.Widget#visibility}\n     * value of <code>exclude</code>.\n     *\n     * @return {Boolean} Whether the layout has layout relevant children\n     */\n    hasLayoutChildren : function()\n    {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return false;\n      }\n\n      var child;\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        if (!child.hasUserBounds() && !child.isExcluded()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Returns the widget which contains the children and\n     * is relevant for laying them out. This is from the user point of\n     * view and may not be identical to the technical structure.\n     *\n     * @return {qx.ui.core.Widget} Widget which contains the children.\n     */\n    getChildrenContainer : function() {\n      return this;\n    },\n\n\n    /**\n     * @type {Array} Placeholder for children list in empty widgets.\n     *     Mainly to keep instance number low.\n     *\n     * @lint ignoreReferenceField(__emptyChildren)\n     */\n    __emptyChildren : [],\n\n\n    /**\n     * Returns the children list\n     *\n     * @return {qx.ui.core.LayoutItem[]} The children array (Arrays are\n     *   reference types, so please do not modify it in-place).\n     */\n    _getChildren : function() {\n      return this.__widgetChildren || this.__emptyChildren;\n    },\n\n\n    /**\n     * Returns the index position of the given widget if it is\n     * a child widget. Otherwise it returns <code>-1</code>.\n     *\n     * @param child {qx.ui.core.Widget} the widget to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given widget is no child of this layout.\n     */\n    _indexOf : function(child)\n    {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return -1;\n      }\n\n      return children.indexOf(child);\n    },\n\n\n    /**\n     * Whether the widget contains children.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\n     */\n    _hasChildren : function()\n    {\n      var children = this.__widgetChildren;\n      return children != null && (!!children[0]);\n    },\n\n\n    /**\n     * Recursively adds all children to the given queue\n     *\n     * @param queue {Array} The queue to add widgets to\n     */\n    addChildrenToQueue : function(queue)\n    {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return;\n      }\n\n      var child;\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n        queue.push(child);\n\n        child.addChildrenToQueue(queue);\n      }\n    },\n\n\n    /**\n     * Adds a new child widget.\n     *\n     * The supported keys of the layout options map depend on the layout manager\n     * used to position the widget. The options are documented in the class\n     * documentation of each layout manager {@link qx.ui.layout}.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to add.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _add : function(child, options)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(child, qx.ui.core.LayoutItem.constructor, \"'Child' must be an instance of qx.ui.core.LayoutItem!\");\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      if (this.__widgetChildren) {\n        this.__widgetChildren.push(child);\n      } else {\n        this.__widgetChildren = [ child ];\n      }\n\n      this.__addHelper(child, options);\n    },\n\n\n    /**\n     * Add a child widget at the specified index\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param index {Integer} Index, at which the widget will be inserted. If no\n     *   widget exists at the given index, the new widget gets appended to the\n     *   current list of children.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAt : function(child, index, options)\n    {\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      var ref = this.__widgetChildren[index];\n\n      if (ref === child) {\n        child.setLayoutProperties(options);\n      }\n\n      if (ref) {\n        qx.lang.Array.insertBefore(this.__widgetChildren, child, ref);\n      } else {\n        this.__widgetChildren.push(child);\n      }\n\n      this.__addHelper(child, options);\n    },\n\n\n    /**\n     * Add a widget before another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param before {qx.ui.core.LayoutItem} widget before the new widget will be inserted.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addBefore : function(child, before, options)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(before, this._getChildren(),\n          \"The 'before' widget is not a child of this widget!\");\n      }\n\n      if (child == before) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertBefore(this.__widgetChildren, child, before);\n\n      this.__addHelper(child, options);\n    },\n\n\n    /**\n     * Add a widget after another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param after {qx.ui.core.LayoutItem} widget, after which the new widget will\n     *   be inserted\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAfter : function(child, after, options)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(after, this._getChildren(),\n          \"The 'after' widget is not a child of this widget!\");\n      }\n\n      if (child == after) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertAfter(this.__widgetChildren, child, after);\n\n      this.__addHelper(child, options);\n    },\n\n\n    /**\n     * Remove the given child widget.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to remove\n     */\n    _remove : function(child)\n    {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      qx.lang.Array.remove(this.__widgetChildren, child);\n      this.__removeHelper(child);\n    },\n\n\n    /**\n     * Remove the widget at the specified index.\n     *\n     * @param index {Integer} Index of the widget to remove.\n     * @return {qx.ui.core.LayoutItem} The removed item.\n     */\n    _removeAt : function(index)\n    {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      var child = this.__widgetChildren[index];\n\n      qx.lang.Array.removeAt(this.__widgetChildren, index);\n      this.__removeHelper(child);\n\n      return child;\n    },\n\n\n    /**\n     * Remove all children.\n     *\n     * @return {Array} An array containing the removed children.\n     */\n    _removeAll : function()\n    {\n      if (!this.__widgetChildren) {\n        return [];\n      }\n\n      // Working on a copy to make it possible to clear the\n      // internal array before calling setLayoutParent()\n      var children = this.__widgetChildren.concat();\n      this.__widgetChildren.length = 0;\n\n      for (var i=children.length-1; i>=0; i--) {\n        this.__removeHelper(children[i]);\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n\n      return children;\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - TEMPLATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method gets called each time after a child widget was added and can\n     * be overridden to get notified about child adds.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The added child.\n     */\n    _afterAddChild : null,\n\n\n    /**\n     * This method gets called each time after a child widget was removed and\n     * can be overridden to get notified about child removes.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The removed child.\n     */\n    _afterRemoveChild : null,\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Convenience function to add a child widget. It will insert the child to\n     * the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to add.\n     * @param options {Map|null} Optional layout data for the widget.\n     */\n    __addHelper : function(child, options)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        this.assertInstance(child, qx.ui.core.LayoutItem, \"Invalid widget to add: \" + child);\n        this.assertNotIdentical(child, this, \"Could not add widget to itself: \" + child);\n\n        if (options != null) {\n          this.assertType(options, \"object\", \"Invalid layout data: \" + options);\n        }\n      }\n\n      // Remove from old parent\n      var parent = child.getLayoutParent();\n      if (parent && parent != this) {\n        parent._remove(child);\n      }\n\n      // Remember parent\n      child.setLayoutParent(this);\n\n      // Import options: This call will\n      //  - clear the layout's children cache as well and\n      //  - add its parent (this widget) to the layout queue\n      if (options) {\n        child.setLayoutProperties(options);\n      } else {\n        this.updateLayoutProperties();\n      }\n\n      // call the template method\n      if (this._afterAddChild) {\n        this._afterAddChild(child);\n      }\n    },\n\n\n    /**\n     * Convenience function to remove a child widget. It will remove it\n     * from the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to remove.\n     */\n    __removeHelper : function(child)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertNotUndefined(child);\n      }\n\n      if (child.getLayoutParent() !== this) {\n        throw new Error(\"Remove Error: \" + child + \" is not a child of this widget!\");\n      }\n\n      // Clear parent connection\n      child.setLayoutParent(null);\n\n      // clear the layout's children cache\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateChildrenCache();\n      }\n\n      // Add to layout queue\n      qx.ui.core.queue.Layout.add(this);\n\n      // call the template method\n      if (this._afterRemoveChild) {\n        this._afterRemoveChild(child);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enables pointer event capturing. All pointer events will dispatched on this\n     * widget until capturing is disabled using {@link #releaseCapture} or a\n     * pointer button is clicked. If the widgets becomes the capturing widget the\n     * {@link #capture} event is fired. Once it loses capture mode the\n     * {@link #losecapture} event is fired.\n     *\n     * @param capture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture : function(capture) {\n      this.getContentElement().capture(capture);\n    },\n\n\n    /**\n     * Disables pointer capture mode enabled by {@link #capture}.\n     */\n    releaseCapture : function() {\n      this.getContentElement().releaseCapture();\n    },\n\n\n    /**\n     * Checks if pointer event capturing is enabled for this widget.\n     *\n     * @return {Boolean} <code>true</code> if capturing is active\n     */\n    isCapturing : function() {\n      var el = this.getContentElement().getDomElement();\n      if (!el) {\n        return false;\n      }\n      var manager = qx.event.Registration.getManager(el);\n      var dispatcher = manager.getDispatcher(qx.event.dispatch.MouseCapture);\n      return el == dispatcher.getCaptureElement();\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPadding : function(value, old, name)\n    {\n      this._updateInsets = true;\n      qx.ui.core.queue.Layout.add(this);\n\n      this.__updateContentPadding(name, value);\n    },\n\n\n    /**\n     * Helper to updated the css padding of the content element considering the\n     * padding of the decorator.\n     * @param style {String} The name of the css padding property e.g. <code>paddingTop</code>\n     * @param value {Number} The value to set.\n     */\n    __updateContentPadding : function(style, value) {\n      var content = this.getContentElement();\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (decorator) {\n        var direction = qx.Bootstrap.firstLow(style.replace(\"padding\", \"\"));\n        value += decorator.getPadding()[direction] || 0;\n      }\n      content.setStyle(style, value + \"px\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DECORATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyDecorator : function(value, old)\n    {\n      var content = this.getContentElement();\n\n      if (old) {\n        old = qx.theme.manager.Decoration.getInstance().getCssClassName(old);\n        content.removeClass(old);\n      }\n\n      if (value) {\n        value = qx.theme.manager.Decoration.getInstance().addCssClass(value);\n        content.addClass(value);\n      }\n      if (value || old){\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyToolTipText : function(value, old)\n    {\n      if (qx.core.Environment.get(\"qx.dynlocale\"))\n      {\n        if (this.__toolTipTextListenerId) {\n          return;\n        }\n        var manager = qx.locale.Manager.getInstance();\n        this.__toolTipTextListenerId = manager.addListener(\"changeLocale\",\n          function() {\n            var toolTipText = this.getToolTipText();\n            if (toolTipText && toolTipText.translate) {\n              this.setToolTipText(toolTipText.translate());\n            }\n          }\n        , this);\n      }\n    },\n\n    // property apply\n    _applyTextColor : function(value, old) {\n      // empty template\n    },\n\n\n    // property apply\n    _applyZIndex : function(value, old) {\n      this.getContentElement().setStyle(\"zIndex\", value == null ? 0 : value);\n    },\n\n\n    // property apply\n    _applyVisibility : function(value, old)\n    {\n      var content = this.getContentElement();\n\n      if (value === \"visible\") {\n        content.show();\n      } else {\n        content.hide();\n      }\n\n      // only force a layout update if visibility change from/to \"exclude\"\n      var parent = this.$$parent;\n      if (parent && (old == null || value == null || old === \"excluded\" || value === \"excluded\")) {\n        parent.invalidateLayoutChildren();\n      }\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n\n    // property apply\n    _applyOpacity : function(value, old) {\n      this.getContentElement().setStyle(\"opacity\", value == 1 ? null : value);\n    },\n\n\n    // property apply\n    _applyCursor : function(value, old)\n    {\n      if (value == null && !this.isSelectable()) {\n        value = \"default\";\n      }\n\n      // In Opera the cursor must be set directly.\n      // http://bugzilla.qooxdoo.org/show_bug.cgi?id=1729\n      this.getContentElement().setStyle(\n        \"cursor\", value, qx.core.Environment.get(\"engine.name\") == \"opera\"\n      );\n    },\n\n\n    // property apply\n    _applyBackgroundColor : function(value, old) {\n      var color = this.getBackgroundColor();\n      var content = this.getContentElement();\n\n      var resolved = qx.theme.manager.Color.getInstance().resolve(color);\n      content.setStyle(\"backgroundColor\", resolved);\n    },\n\n\n    // property apply\n    _applyFont : function(value, old) {\n      // empty template\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DYNAMIC THEME SWITCH SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onChangeTheme : function() {\n      if (this.isDisposed()) {\n        return;\n      }\n\n      this.base(arguments);\n\n      // update the appearance\n      this.updateAppearance();\n\n      // DECORATOR //\n      var value = this.getDecorator();\n      this._applyDecorator(null, value);\n      this._applyDecorator(value);\n\n      // FONT //\n      value = this.getFont();\n      if (qx.lang.Type.isString(value)) {\n        this._applyFont(value, value);\n      }\n\n      // TEXT COLOR //\n      value = this.getTextColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyTextColor(value, value);\n      }\n\n      // BACKGROUND COLOR //\n      value = this.getBackgroundColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyBackgroundColor(value, value);\n      }\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} The current widget states */\n    __states : null,\n\n\n    /** @type {Boolean} Whether the widget has state changes which are not yet queued */\n    $$stateChanges : null,\n\n\n    /** @type {Map} Can be overridden to forward states to the child controls. */\n    _forwardStates : null,\n\n\n    /**\n     * Returns whether a state is set.\n     *\n     * @param state {String} the state to check.\n     * @return {Boolean} whether the state is set.\n     */\n    hasState : function(state)\n    {\n      var states = this.__states;\n      return !!states && !!states[state];\n    },\n\n\n    /**\n     * Sets a state.\n     *\n     * @param state {String} The state to add\n     */\n    addState : function(state)\n    {\n      // Dynamically create state map\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (states[state]) {\n        return;\n      }\n\n      // Add state and queue\n      this.__states[state] = true;\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls)\n      {\n        var control;\n        for (var id in controls)\n        {\n          control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            controls[id].addState(state);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Clears a state.\n     *\n     * @param state {String} the state to clear.\n     */\n    removeState : function(state)\n    {\n      // Check for existing state\n      var states = this.__states;\n      if (!states || !states[state]) {\n        return;\n      }\n\n      // Clear state and queue\n      delete this.__states[state];\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls)\n      {\n        for (var id in controls)\n        {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.removeState(state);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Replaces the first state with the second one.\n     *\n     * This method is ideal for state transitions e.g. normal => selected.\n     *\n     * @param old {String} Previous state\n     * @param value {String} New state\n     */\n    replaceState : function(old, value)\n    {\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (!states[value]) {\n        states[value] = true;\n      }\n\n      if (states[old]) {\n        delete states[old];\n      }\n\n      if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[value] && controls)\n      {\n        for (var id in controls)\n        {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.replaceState(old, value);\n          }\n        }\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPEARANCE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {String} The currently compiled selector to lookup the matching appearance */\n    __appearanceSelector : null,\n\n\n    /** @type {Boolean} Whether the selectors needs to be recomputed before updating appearance */\n    __updateSelector : null,\n\n\n    /**\n     * Renders the appearance using the current widget states.\n     *\n     * Used exclusively by {qx.ui.core.queue.Appearance}.\n     */\n    syncAppearance : function()\n    {\n      var states = this.__states;\n      var selector = this.__appearanceSelector;\n      var manager = qx.theme.manager.Appearance.getInstance();\n\n      // Cache deep accessor\n      var styler = qx.core.Property.$$method.setThemed;\n      var unstyler = qx.core.Property.$$method.resetThemed;\n\n      // Check for requested selector update\n      if (this.__updateSelector)\n      {\n        // Clear flag\n        delete this.__updateSelector;\n\n        // Check if the selector was created previously\n        if (selector)\n        {\n          // Query old selector\n          var oldData = manager.styleFrom(selector, states, null, this.getAppearance());\n\n          // Clear current selector (to force recompute)\n          selector = null;\n        }\n      }\n\n      // Build selector\n      if (!selector)\n      {\n        var obj = this;\n        var id = [];\n\n        do {\n          id.push(obj.$$subcontrol||obj.getAppearance());\n        } while (obj = obj.$$subparent);\n\n        // Combine parent control IDs, add top level appearance, filter result\n        // to not include positioning information anymore (e.g. #3)\n        selector = id.reverse().join(\"/\").replace(/#[0-9]+/g, \"\");\n        this.__appearanceSelector = selector;\n      }\n\n      // Query current selector\n      var newData = manager.styleFrom(selector, states, null, this.getAppearance());\n      if (newData)\n      {\n        if (oldData)\n        {\n          for (var prop in oldData)\n          {\n            if (newData[prop] === undefined) {\n              this[unstyler[prop]]();\n            }\n          }\n        }\n\n        // Check property availability of new data\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          for (var prop in newData)\n          {\n            if (!this[styler[prop]]) {\n              throw new Error(this.classname +\n                ' has no themeable property \"' + prop +\n                '\" while styling ' + selector);\n            }\n          }\n        }\n\n        // Apply new data\n        for (var prop in newData) {\n          newData[prop] === undefined ? this[unstyler[prop]]() : this[styler[prop]](newData[prop]);\n        }\n      }\n      else if (oldData)\n      {\n        // Clear old data\n        for (var prop in oldData) {\n          this[unstyler[prop]]();\n        }\n      }\n\n      this.fireDataEvent(\"syncAppearance\", this.__states);\n    },\n\n\n    // property apply\n    _applyAppearance : function(value, old) {\n      this.updateAppearance();\n    },\n\n\n    /**\n     * Helper method called from the visibility queue to detect outstanding changes\n     * to the appearance.\n     *\n     * @internal\n     */\n    checkAppearanceNeeds : function()\n    {\n      // CASE 1: Widget has never got an appearance already because it was never\n      // visible before. Normally add it to the queue is the easiest way to update it.\n      if (!this.__initialAppearanceApplied)\n      {\n        qx.ui.core.queue.Appearance.add(this);\n        this.__initialAppearanceApplied = true;\n      }\n\n      // CASE 2: Widget has got an appearance before, but was hidden for some time\n      // which results into maybe omitted state changes have not been applied.\n      // In this case the widget is already queued in the appearance. This is basically\n      // what all addState/removeState do, but the queue itself may not have been registered\n      // to be flushed\n      else if (this.$$stateChanges)\n      {\n        qx.ui.core.queue.Appearance.add(this);\n        delete this.$$stateChanges;\n      }\n    },\n\n\n    /**\n     * Refreshes the appearance of this widget and all\n     * registered child controls.\n     */\n    updateAppearance : function()\n    {\n      // Clear selector\n      this.__updateSelector = true;\n\n      // Add to appearance queue\n      qx.ui.core.queue.Appearance.add(this);\n\n      // Update child controls\n      var controls = this.__childControls;\n      if (controls)\n      {\n        var obj;\n        for (var id in controls)\n        {\n          obj = controls[id];\n\n          if (obj instanceof qx.ui.core.Widget) {\n            obj.updateAppearance();\n          }\n        }\n      }\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET QUEUE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method is called during the flush of the\n     * {@link qx.ui.core.queue.Widget widget queue}.\n     *\n     * @param jobs {Map} A map of jobs.\n     */\n    syncWidget : function(jobs) {\n      // empty implementation\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the next event target in the parent chain. May\n     * also return the widget itself if it is not anonymous.\n     *\n     * @return {qx.ui.core.Widget} A working event target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getEventTarget : function()\n    {\n      var target = this;\n\n      while (target.getAnonymous())\n      {\n        target = target.getLayoutParent();\n        if (!target) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n\n    /**\n     * Returns the next focus target in the parent chain. May\n     * also return the widget itself if it is not anonymous and focusable.\n     *\n     * @return {qx.ui.core.Widget} A working focus target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getFocusTarget : function()\n    {\n      var target = this;\n\n      if (!target.getEnabled()) {\n        return null;\n      }\n\n      while (target.getAnonymous() || !target.getFocusable())\n      {\n        target = target.getLayoutParent();\n        if (!target || !target.getEnabled()) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n\n    /**\n     * Returns the element which should be focused.\n     *\n     * @return {qx.html.Element} The html element to focus.\n     */\n    getFocusElement : function() {\n      return this.getContentElement();\n    },\n\n\n    /**\n     * Whether the widget is reachable by pressing the TAB key.\n     *\n     * Normally tests for both, the focusable property and a positive or\n     * undefined tabIndex property. The widget must have a DOM element\n     * since only visible widgets are tabable.\n     *\n     * @return {Boolean} Whether the element is tabable.\n     */\n    isTabable : function() {\n      return (!!this.getContentElement().getDomElement()) && this.isFocusable();\n    },\n\n\n    // property apply\n    _applyFocusable : function(value, old)\n    {\n      var target = this.getFocusElement();\n\n      // Apply native tabIndex attribute\n      if (value)\n      {\n        var tabIndex = this.getTabIndex();\n        if (tabIndex == null) {\n          tabIndex = 1;\n        }\n\n        target.setAttribute(\"tabIndex\", tabIndex);\n\n        // Omit native dotted outline border\n        target.setStyle(\"outline\", \"none\");\n      }\n      else\n      {\n        if (target.isNativelyFocusable()) {\n          target.setAttribute(\"tabIndex\", -1);\n        } else if (old) {\n          target.setAttribute(\"tabIndex\", null);\n        }\n      }\n    },\n\n\n    // property apply\n    _applyKeepFocus : function(value)\n    {\n      var target = this.getFocusElement();\n      target.setAttribute(\"qxKeepFocus\", value ? \"on\" : null);\n    },\n\n\n    // property apply\n    _applyKeepActive : function(value)\n    {\n      var target = this.getContentElement();\n      target.setAttribute(\"qxKeepActive\", value ? \"on\" : null);\n    },\n\n\n    // property apply\n    _applyTabIndex : function(value)\n    {\n      if (value == null) {\n        value = 1;\n      } else if (value < 1 || value > 32000) {\n        throw new Error(\"TabIndex property must be between 1 and 32000\");\n      }\n\n      if (this.getFocusable() && value != null) {\n        this.getFocusElement().setAttribute(\"tabIndex\", value);\n      }\n    },\n\n\n    // property apply\n    _applySelectable : function(value, old)\n    {\n      // Re-apply cursor if not in \"initSelectable\"\n      if (old !== null) {\n        this._applyCursor(this.getCursor());\n      }\n\n      // Apply qooxdoo attribute\n      this.getContentElement().setSelectable(value);\n    },\n\n\n    // property apply\n    _applyEnabled : function(value, old)\n    {\n      if (value===false)\n      {\n        this.addState(\"disabled\");\n\n        // hovered not configured in widget, but as this is a\n        // standardized name in qooxdoo and we never want a hover\n        // state for disabled widgets, remove this state every time\n        this.removeState(\"hovered\");\n\n        // Blur when focused\n        if (this.isFocusable())\n        {\n          // Remove focused state\n          this.removeState(\"focused\");\n\n          // Remove tabIndex\n          this._applyFocusable(false, true);\n        }\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      }\n      else\n      {\n        this.removeState(\"disabled\");\n\n        // Re-add tabIndex\n        if (this.isFocusable()) {\n          this._applyFocusable(true, false);\n        }\n\n        // Re-add draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(true, false);\n        }\n\n        // Re-add droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(true, false);\n        }\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXT MENU\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyNativeContextMenu : function(value, old, name) {\n      // empty body to allow overriding\n    },\n\n\n    // property apply\n    _applyContextMenu : function(value, old)\n    {\n      if (old)\n      {\n        old.removeState(\"contextmenu\");\n\n        if (old.getOpener() == this) {\n          old.resetOpener();\n        }\n\n        if (!value)\n        {\n          this.removeListener(\"contextmenu\", this._onContextMenuOpen);\n          this.removeListener(\"longtap\", this._onContextMenuOpen);\n          old.removeListener(\"changeVisibility\", this._onBeforeContextMenuOpen, this);\n        }\n      }\n\n      if (value)\n      {\n        value.setOpener(this);\n        value.addState(\"contextmenu\");\n\n        if (!old)\n        {\n          this.addListener(\"contextmenu\", this._onContextMenuOpen);\n          this.addListener(\"longtap\", this._onContextMenuOpen);\n          value.addListener(\"changeVisibility\", this._onBeforeContextMenuOpen, this);\n        }\n      }\n    },\n\n\n    /**\n     * Event listener for <code>contextmenu</code> event\n     *\n     * @param e {qx.event.type.Pointer} The event object\n     */\n    _onContextMenuOpen : function(e)\n    {\n      // only allow long tap context menu on touch interactions\n      if (e.getType() == \"longtap\") {\n        if (e.getPointerType() !== \"touch\") {\n          return;\n        }\n      }\n      this.getContextMenu().openAtPointer(e);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      e.stop();\n    },\n\n\n    /**\n     * Event listener for <code>beforeContextmenuOpen</code> event\n     *\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onBeforeContextMenuOpen : function(e)\n    {\n      if (e.getData() == \"visible\" && this.hasListener(\"beforeContextmenuOpen\")) {\n        this.fireDataEvent(\"beforeContextmenuOpen\", e);\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USEFUL COMMON EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener which stops a bubbling event from\n     * propagates further.\n     *\n     * @param e {qx.event.type.Event} Any bubbling event\n     */\n    _onStopEvent : function(e) {\n      e.stopPropagation();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      DRAG & DROP SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper to return a instance of a {@link qx.ui.core.DragDropCursor}.\n     * If you want to use your own DragDropCursor, override this method\n     * and return your custom instance.\n     * @return {qx.ui.core.DragDropCursor} A drag drop cursor implementation.\n     */\n    _getDragDropCursor : function() {\n      return qx.ui.core.DragDropCursor.getInstance();\n    },\n\n    // property apply\n    _applyDraggable : function(value, old)\n    {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Force cursor creation\n      this._getDragDropCursor();\n\n      // Process listeners\n      if (value)\n      {\n        this.addListener(\"dragstart\", this._onDragStart);\n        this.addListener(\"drag\", this._onDrag);\n        this.addListener(\"dragend\", this._onDragEnd);\n        this.addListener(\"dragchange\", this._onDragChange);\n      }\n      else\n      {\n        this.removeListener(\"dragstart\", this._onDragStart);\n        this.removeListener(\"drag\", this._onDrag);\n        this.removeListener(\"dragend\", this._onDragEnd);\n        this.removeListener(\"dragchange\", this._onDragChange);\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDraggable\", value ? \"on\" : null);\n    },\n\n\n    // property apply\n    _applyDroppable : function(value, old)\n    {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDroppable\", value ? \"on\" : null);\n    },\n\n\n    /**\n     * Event listener for own <code>dragstart</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragStart : function(e)\n    {\n      this._getDragDropCursor().placeToPointer(e);\n      this.getApplicationRoot().setGlobalCursor(\"default\");\n    },\n\n\n    /**\n     * Event listener for own <code>drag</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDrag : function(e) {\n      this._getDragDropCursor().placeToPointer(e);\n    },\n\n\n    /**\n     * Event listener for own <code>dragend</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragEnd : function(e)\n    {\n      this._getDragDropCursor().moveTo(-1000, -1000);\n      this.getApplicationRoot().resetGlobalCursor();\n    },\n\n\n    /**\n     * Event listener for own <code>dragchange</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragChange : function(e)\n    {\n      var cursor = this._getDragDropCursor();\n      var action = e.getCurrentAction();\n      action ? cursor.setAction(action) : cursor.resetAction();\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      VISUALIZE FOCUS STATES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler which is executed when the widget receives the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * apply states etc. to a focused widget.\n     *\n     * @internal\n     */\n    visualizeFocus : function() {\n      this.addState(\"focused\");\n    },\n\n\n    /**\n     * Event handler which is executed when the widget lost the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * remove states etc. from a previously focused widget.\n     *\n     * @internal\n     */\n    visualizeBlur : function() {\n      this.removeState(\"focused\");\n    },\n\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL CHILD INTO VIEW\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The method scrolls the given item into view.\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param alignX {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param alignY {String?null} Alignment of the item. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoView : function(child, alignX, alignY, direct)\n    {\n      // Scroll directly on default\n      direct = typeof direct == \"undefined\" ? true : direct;\n\n      // Always lazy scroll when either\n      // - the child\n      // - its layout parent\n      // - its siblings\n      // have layout changes scheduled.\n      //\n      // This is to make sure that the scroll position is computed\n      // after layout changes have been applied to the DOM. Note that changes\n      // scheduled for the grand parent (and up) are not tracked and need to\n      // be signaled manually.\n      var Layout = qx.ui.core.queue.Layout;\n      var parent;\n\n      // Child\n      if (direct) {\n        direct = !Layout.isScheduled(child);\n        parent = child.getLayoutParent();\n\n        // Parent\n        if (direct && parent) {\n          direct = !Layout.isScheduled(parent);\n\n          // Siblings\n          if (direct) {\n            parent.getChildren().forEach(function(sibling) {\n              direct = direct && !Layout.isScheduled(sibling);\n            });\n          }\n        }\n      }\n\n      this.scrollChildIntoViewX(child, alignX, direct);\n      this.scrollChildIntoViewY(child, alignY, direct);\n    },\n\n\n    /**\n     * The method scrolls the given item into view (x-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX : function(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewX(child.getContentElement(), align, direct);\n    },\n\n\n    /**\n     * The method scrolls the given item into view (y-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY : function(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewY(child.getContentElement(), align, direct);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS SYSTEM USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Focus this widget.\n     *\n     */\n    focus : function()\n    {\n      if (this.isFocusable()) {\n        this.getFocusElement().focus();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n\n    /**\n     * Remove focus from this widget.\n     *\n     */\n    blur : function()\n    {\n      if (this.isFocusable()) {\n        this.getFocusElement().blur();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n\n    /**\n     * Activate this widget e.g. for keyboard events.\n     *\n     */\n    activate : function() {\n      this.getContentElement().activate();\n    },\n\n\n    /**\n     * Deactivate this widget e.g. for keyboard events.\n     *\n     */\n    deactivate : function() {\n      this.getContentElement().deactivate();\n    },\n\n\n    /**\n     * Focus this widget when using the keyboard. This is\n     * mainly thought for the advanced qooxdoo keyboard handling\n     * and should not be used by the application developer.\n     *\n     * @internal\n     */\n    tabFocus : function() {\n      this.getFocusElement().focus();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given ID is assigned to a child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is registered.\n     */\n    hasChildControl : function(id)\n    {\n      if (!this.__childControls) {\n        return false;\n      }\n\n      return !!this.__childControls[id];\n    },\n\n\n    /** @type {Map} Map of instantiated child controls */\n    __childControls : null,\n\n\n    /**\n     * Returns a map of all already created child controls\n     *\n     * @return {Map} mapping of child control id to the child widget.\n     */\n    _getCreatedChildControls : function() {\n      return this.__childControls;\n    },\n\n\n    /**\n     * Returns the child control from the given ID. Returns\n     * <code>null</code> when the child control is unknown.\n     *\n     * It is designed for widget authors, who want to access child controls,\n     * which are created by the widget itself.\n     *\n     * <b>Warning</b>: This method exposes widget internals and modifying the\n     * returned sub widget may bring the widget into an inconsistent state.\n     * Accessing child controls defined in a super class or in an foreign class\n     * is not supported. Do not use it if the result can be achieved using public\n     * API or theming.\n     *\n     * @param id {String} ID of the child control\n     * @param notcreate {Boolean?false} Whether the child control\n     *    should not be created dynamically if not yet available.\n     * @return {qx.ui.core.Widget} Child control\n     */\n    getChildControl : function(id, notcreate)\n    {\n      if (!this.__childControls)\n      {\n        if (notcreate) {\n          return null;\n        }\n\n        this.__childControls = {};\n      }\n\n      var control = this.__childControls[id];\n      if (control) {\n        return control;\n      }\n\n      if (notcreate === true) {\n        return null;\n      }\n\n      return this._createChildControl(id);\n    },\n\n\n    /**\n     * Shows the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} the child control\n     */\n    _showChildControl : function(id)\n    {\n      var control = this.getChildControl(id);\n      control.show();\n      return control;\n    },\n\n\n    /**\n     * Excludes the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     */\n    _excludeChildControl : function(id)\n    {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        control.exclude();\n      }\n    },\n\n\n    /**\n     * Whether the given child control is visible.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is visible.\n     */\n    _isChildControlVisible : function(id)\n    {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        return control.isVisible();\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Release the child control by ID and decouple the\n     * child from the parent. This method does not dispose the child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The released control\n     */\n    _releaseChildControl : function(id)\n    {\n      var control = this.getChildControl(id, false);\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // remove connection to parent\n      delete control.$$subcontrol;\n      delete control.$$subparent;\n\n      // remove state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.removeState(state);\n          }\n        }\n      }\n\n      delete this.__childControls[id];\n\n      return control;\n    },\n\n\n    /**\n     * Force the creation of the given child control by ID.\n     *\n     * Do not override this method! Override {@link #_createChildControlImpl}\n     * instead if you need to support new controls.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The created control\n     * @throws {Error} when the control was created before\n     */\n    _createChildControl : function(id)\n    {\n      if (!this.__childControls) {\n        this.__childControls = {};\n      } else if (this.__childControls[id]) {\n        throw new Error(\"Child control '\" + id + \"' already created!\");\n      }\n\n      var pos = id.indexOf(\"#\");\n      try {\n        if (pos == -1) {\n          var control = this._createChildControlImpl(id);\n        } else {\n          var control = this._createChildControlImpl(\n            id.substring(0, pos), id.substring(pos + 1, id.length)\n          );\n        }\n      } catch(exc) {\n        exc.message = \"Exception while creating child control '\" + id +\n        \"' of widget \" + this.toString() + \": \" + exc.message;\n        throw exc;\n      }\n\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // Establish connection to parent\n      control.$$subcontrol = id;\n      control.$$subparent = this;\n\n      // Support for state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget)\n      {\n        for (var state in states)\n        {\n          if (forward[state]) {\n            control.addState(state);\n          }\n        }\n      }\n\n      // If the appearance is already synced after the child control\n      // we need to update the appearance now, because the selector\n      // might be not correct in certain cases.\n      if (control.$$resyncNeeded) {\n        delete control.$$resyncNeeded;\n        control.updateAppearance();\n      }\n\n      this.fireDataEvent(\"createChildControl\", control);\n\n      // Register control and return\n      return this.__childControls[id] = control;\n    },\n\n\n    /**\n     * Internal method to create child controls. This method\n     * should be overwritten by classes which extends this one\n     * to support new child control types.\n     *\n     * @param id {String} ID of the child control. If a # is used, the id is\n     *   the part in front of the #.\n     * @param hash {String?undefined} If a child control name contains a #,\n     *   all text following the # will be the hash argument.\n     * @return {qx.ui.core.Widget} The created control or <code>null</code>\n     */\n    _createChildControlImpl : function(id, hash) {\n      return null;\n    },\n\n\n    /**\n     * Dispose all registered controls. This is automatically\n     * executed by the widget.\n     *\n     */\n    _disposeChildControls : function()\n    {\n      var controls = this.__childControls;\n      if (!controls) {\n        return;\n      }\n\n      var Widget = qx.ui.core.Widget;\n\n      for (var id in controls)\n      {\n        var control = controls[id];\n        if (!Widget.contains(this, control)) {\n          control.destroy();\n        } else {\n          control.dispose();\n        }\n      }\n\n      delete this.__childControls;\n    },\n\n\n    /**\n     * Finds and returns the top level control. This is the first\n     * widget which is not a child control of any other widget.\n     *\n     * @return {qx.ui.core.Widget} The top control\n     */\n    _findTopControl : function()\n    {\n      var obj = this;\n      while (obj)\n      {\n        if (!obj.$$subparent) {\n          return obj;\n        }\n\n        obj = obj.$$subparent;\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Return the ID (name) if this instance was a created as a child control of another widget.\n     *\n     * See the first parameter id in {@link qx.ui.core.Widget#_createChildControlImpl}\n     *\n     * @return {String|null} ID of the current widget or null if it was not created as a subcontrol\n     */\n    getSubcontrolId : function()\n    {\n      return this.$$subcontrol || null;\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LOWER LEVEL ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Computes the location of the content element in context of the document\n     * dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element\n     *   (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default,\n     *   uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to\n     *   border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute\n     *   positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for\n     *   static/relative positioned content).\n     *\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\n     *   <code>right</code> and <code>bottom</code> which contains the distance\n     *   of the element relative to the document.\n     */\n    getContentLocation : function(mode)\n    {\n      var domEl = this.getContentElement().getDomElement();\n      return domEl ? qx.bom.element.Location.get(domEl, mode) : null;\n    },\n\n\n    /**\n     * Directly modifies the relative left position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Left position\n     */\n    setDomLeft : function(value)\n    {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n\n    /**\n     * Directly modifies the relative top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Top position\n     */\n    setDomTop : function(value)\n    {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.top = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n\n    /**\n     * Directly modifies the relative left and top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param left {Integer} Left position\n     * @param top {Integer} Top position\n     */\n    setDomPosition : function(left, top)\n    {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl)\n      {\n        domEl.style.left = left + \"px\";\n        domEl.style.top = top + \"px\";\n      }\n      else\n      {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ENHANCED DISPOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes this widget from its parent and disposes it.\n     *\n     * Please note that the widget is not disposed synchronously. The\n     * real dispose happens after the next queue flush.\n     *\n     */\n    destroy : function()\n    {\n      if (this.$$disposed) {\n        return;\n      }\n\n      var parent = this.$$parent;\n      if (parent) {\n        parent._remove(this);\n      }\n\n      qx.ui.core.queue.Dispose.add(this);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      CLONE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone : function()\n    {\n      var clone = this.base(arguments);\n\n      if (this.getChildren)\n      {\n        var children = this.getChildren();\n        for (var i=0, l=children.length; i<l; i++) {\n          clone.add(children[i].clone());\n        }\n      }\n\n      return clone;\n    }\n\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    // Some dispose stuff is not needed in global shutdown, otherwise\n    // it just slows down things a bit, so do not do them.\n    if (!qx.core.ObjectRegistry.inShutDown)\n    {\n      if (qx.core.Environment.get(\"qx.dynlocale\"))\n      {\n        if (this.__toolTipTextListenerId)\n        {\n          qx.locale.Manager.getInstance().removeListenerById(\n            this.__toolTipTextListenerId\n          );\n        }\n      }\n\n      // Remove widget pointer from DOM\n      var contentEl = this.getContentElement();\n      if (contentEl) {\n      \tcontentEl.disconnectWidget(this);\n      }\n\n      // Clean up all child controls\n      this._disposeChildControls();\n\n      // Remove from ui queues\n      qx.ui.core.queue.Appearance.remove(this);\n      qx.ui.core.queue.Layout.remove(this);\n      qx.ui.core.queue.Visibility.remove(this);\n      qx.ui.core.queue.Widget.remove(this);\n    }\n\n    if (this.getContextMenu()) {\n      this.setContextMenu(null);\n    }\n\n    // pool decorators if not in global shutdown\n    if (!qx.core.ObjectRegistry.inShutDown)\n    {\n      this.clearSeparators();\n      this.__separators = null;\n    }\n    else\n    {\n      this._disposeArray(\"__separators\");\n    }\n\n    // Clear children array\n    this._disposeArray(\"__widgetChildren\");\n\n\n    // Cleanup map of appearance states\n    this.__states = this.__childControls = null;\n\n\n    // Dispose layout manager and HTML elements\n    this._disposeObjects(\n      \"__layoutManager\",\n      \"__contentElement\"\n    );\n  }\n});\n"
  ]
}