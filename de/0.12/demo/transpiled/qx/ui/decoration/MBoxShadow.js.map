{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MBoxShadow.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "shadowHorizontalLength",
    "nullable",
    "apply",
    "shadowVerticalLength",
    "shadowBlurRadius",
    "shadowSpreadRadius",
    "shadowColor",
    "inset",
    "init",
    "shadowLength",
    "group",
    "mode",
    "members",
    "_styleBoxShadow",
    "styles",
    "propName",
    "core",
    "Environment",
    "get",
    "getShadowVerticalLength",
    "getShadowHorizontalLength",
    "bom",
    "Style",
    "getCssName",
    "Color",
    "theme",
    "manager",
    "getInstance",
    "boxShadowProperties",
    "vLengths",
    "hLengths",
    "blurs",
    "spreads",
    "colors",
    "insets",
    "i",
    "length",
    "vLength",
    "hLength",
    "blur",
    "spread",
    "color",
    "resolve",
    "value",
    "_getExtendedPropertyValueArrays",
    "_applyBoxShadow",
    "ui",
    "decoration",
    "MBoxShadow"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Mixin for the box shadow CSS property.\n * This mixin is usually used by {@link qx.ui.decoration.Decorator}.\n *\n * Keep in mind that this is not supported by all browsers:\n *\n * * Firefox 3,5+\n * * IE9+\n * * Safari 3.0+\n * * Opera 10.5+\n * * Chrome 4.0+\n *\n * It is possible to define multiple box shadows by setting an \n * array containing the needed values as the property value.\n * In case multiple values are specified, the values of the properties\n * are repeated until all match in length.\n *\n * An example:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       shadowBlurRadius: 2,\n *       shadowVerticalLength: 1,\n *       shadowColor: ['rgba(0, 0, 0, 0.2)', 'rgba(255, 255, 255, 0.4)'],\n *       inset: [true, false]\n *     }\n *   }\n * </pre>\n * which is the same as:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       shadowBlurRadius: [2, 2],\n *       shadowVerticalLength: [1, 1],\n *       shadowColor: ['rgba(0, 0, 0, 0.2)', 'rgba(255, 255, 255, 0.4)'],\n *       inset: [true, false]\n *     }\n *   }\n */\nqx.Mixin.define(\"qx.ui.decoration.MBoxShadow\",\n{\n  properties : {\n    /** Horizontal length of the shadow. */\n    shadowHorizontalLength :\n    {\n      nullable : true,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** Vertical length of the shadow. */\n    shadowVerticalLength :\n    {\n      nullable : true,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** The blur radius of the shadow. */\n    shadowBlurRadius :\n    {\n      nullable : true,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** The spread radius of the shadow. */\n    shadowSpreadRadius :\n    {\n      nullable : true,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** The color of the shadow. */\n    shadowColor :\n    {\n      nullable : true,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** Inset shadows are drawn inside the border. */\n    inset :\n    {\n      init : false,\n      apply : \"_applyBoxShadow\"\n    },\n\n    /** Property group to set the shadow length. */\n    shadowLength :\n    {\n      group : [\"shadowHorizontalLength\", \"shadowVerticalLength\"],\n      mode : \"shorthand\"\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Takes a styles map and adds the box shadow styles in place to the\n     * given map. This is the needed behavior for\n     * {@link qx.ui.decoration.Decorator}.\n     *\n     * @param styles {Map} A map to add the styles.\n     */\n    _styleBoxShadow : function(styles) {\n      var propName = qx.core.Environment.get(\"css.boxshadow\");\n      if (!propName ||\n          this.getShadowVerticalLength() == null &&\n          this.getShadowHorizontalLength() == null)\n      {\n        return;\n      }\n\n      propName = qx.bom.Style.getCssName(propName);\n\n      var Color = null;\n      if(qx.core.Environment.get(\"qx.theme\")) {\n        Color = qx.theme.manager.Color.getInstance();\n      }\n\n      var boxShadowProperties = [\"shadowVerticalLength\", \"shadowHorizontalLength\", \"shadowBlurRadius\",\n        \"shadowSpreadRadius\", \"shadowColor\", \"inset\"];\n        \n      (function(vLengths, hLengths, blurs, spreads, colors, insets) {\n        for(var i=0;i<vLengths.length;i++) {\n          var vLength = vLengths[i] || 0;\n          var hLength = hLengths[i] || 0;\n          var blur = blurs[i] || 0;\n          var spread = spreads[i] || 0;\n          var color = colors[i] || \"black\";\n          var inset = insets[i];\n\n          if(Color) {\n            color = Color.resolve(color);\n          }\n\n          if(color != null) {\n            var value = (inset ? 'inset ' : '') + hLength + \"px \" + vLength + \"px \" + blur + \"px \" + spread + \"px \" + color;\n            // apply or append the box shadow styles\n            if (!styles[propName]) {\n              styles[propName] = value;\n            } else {\n              styles[propName] += \",\" + value;\n            }\n          }\n        }\n      }).apply(this, this._getExtendedPropertyValueArrays(boxShadowProperties));\n    },\n\n\n    // property apply\n    _applyBoxShadow : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this._isInitialized()) {\n          throw new Error(\"This decorator is already in-use. Modification is not possible anymore!\");\n        }\n      }\n    }\n  }\n});\n"
  ]
}