{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MSingleBorder.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "widthTop",
    "check",
    "init",
    "apply",
    "widthRight",
    "widthBottom",
    "widthLeft",
    "styleTop",
    "nullable",
    "styleRight",
    "styleBottom",
    "styleLeft",
    "colorTop",
    "colorRight",
    "colorBottom",
    "colorLeft",
    "left",
    "group",
    "right",
    "top",
    "bottom",
    "width",
    "mode",
    "style",
    "color",
    "members",
    "_styleBorder",
    "styles",
    "core",
    "Environment",
    "get",
    "Color",
    "theme",
    "manager",
    "getInstance",
    "resolve",
    "getColorTop",
    "getColorRight",
    "getColorBottom",
    "getColorLeft",
    "getWidthTop",
    "getStyleTop",
    "getWidthRight",
    "getStyleRight",
    "getWidthBottom",
    "getStyleBottom",
    "getWidthLeft",
    "getStyleLeft",
    "position",
    "_getDefaultInsetsForBorder",
    "_applyWidth",
    "_applyStyle",
    "_resetInsets",
    "ui",
    "decoration",
    "MSingleBorder"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * A basic decorator featuring simple borders based on CSS styles.\n * This mixin is usually used by {@link qx.ui.decoration.Decorator}.\n */\nqx.Mixin.define(\"qx.ui.decoration.MSingleBorder\",\n{\n  properties :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY: WIDTH\n    ---------------------------------------------------------------------------\n    */\n\n    /** top width of border */\n    widthTop :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyWidth\"\n    },\n\n    /** right width of border */\n    widthRight :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyWidth\"\n    },\n\n    /** bottom width of border */\n    widthBottom :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyWidth\"\n    },\n\n    /** left width of border */\n    widthLeft :\n    {\n      check : \"Number\",\n      init : 0,\n      apply : \"_applyWidth\"\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY: STYLE\n    ---------------------------------------------------------------------------\n    */\n\n    /** top style of border */\n    styleTop :\n    {\n      nullable : true,\n      check : [ \"solid\", \"dotted\", \"dashed\", \"double\", \"inset\", \"outset\", \"ridge\", \"groove\"],\n      init : \"solid\",\n      apply : \"_applyStyle\"\n    },\n\n    /** right style of border */\n    styleRight :\n    {\n      nullable : true,\n      check : [ \"solid\", \"dotted\", \"dashed\", \"double\", \"inset\", \"outset\", \"ridge\", \"groove\"],\n      init : \"solid\",\n      apply : \"_applyStyle\"\n    },\n\n    /** bottom style of border */\n    styleBottom :\n    {\n      nullable : true,\n      check : [ \"solid\", \"dotted\", \"dashed\", \"double\", \"inset\", \"outset\", \"ridge\", \"groove\"],\n      init : \"solid\",\n      apply : \"_applyStyle\"\n    },\n\n    /** left style of border */\n    styleLeft :\n    {\n      nullable : true,\n      check : [ \"solid\", \"dotted\", \"dashed\", \"double\", \"inset\", \"outset\", \"ridge\", \"groove\"],\n      init : \"solid\",\n      apply : \"_applyStyle\"\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY: COLOR\n    ---------------------------------------------------------------------------\n    */\n\n    /** top color of border */\n    colorTop :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyStyle\"\n    },\n\n    /** right color of border */\n    colorRight :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyStyle\"\n    },\n\n    /** bottom color of border */\n    colorBottom :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyStyle\"\n    },\n\n    /** left color of border */\n    colorLeft :\n    {\n      nullable : true,\n      check : \"Color\",\n      apply : \"_applyStyle\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY GROUP: EDGE\n    ---------------------------------------------------------------------------\n    */\n\n    /** Property group to configure the left border */\n    left : {\n      group : [ \"widthLeft\", \"styleLeft\", \"colorLeft\" ]\n    },\n\n    /** Property group to configure the right border */\n    right : {\n      group : [ \"widthRight\", \"styleRight\", \"colorRight\" ]\n    },\n\n    /** Property group to configure the top border */\n    top : {\n      group : [ \"widthTop\", \"styleTop\", \"colorTop\" ]\n    },\n\n    /** Property group to configure the bottom border */\n    bottom : {\n      group : [ \"widthBottom\", \"styleBottom\", \"colorBottom\" ]\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY GROUP: TYPE\n    ---------------------------------------------------------------------------\n    */\n\n    /** Property group to set the border width of all sides */\n    width :\n    {\n      group : [ \"widthTop\", \"widthRight\", \"widthBottom\", \"widthLeft\" ],\n      mode : \"shorthand\"\n    },\n\n    /** Property group to set the border style of all sides */\n    style :\n    {\n      group : [ \"styleTop\", \"styleRight\", \"styleBottom\", \"styleLeft\" ],\n      mode : \"shorthand\"\n    },\n\n    /** Property group to set the border color of all sides */\n    color :\n    {\n      group : [ \"colorTop\", \"colorRight\", \"colorBottom\", \"colorLeft\" ],\n      mode : \"shorthand\"\n    }\n  },\n\n\n  members :\n  {\n    /**\n     * Takes a styles map and adds the border styles styles in place\n     * to the given map. This is the needed behavior for\n     * {@link qx.ui.decoration.Decorator}.\n     *\n     * @param styles {Map} A map to add the styles.\n     */\n    _styleBorder : function(styles)\n    {\n      if (qx.core.Environment.get(\"qx.theme\"))\n      {\n        var Color = qx.theme.manager.Color.getInstance();\n\n        var colorTop = Color.resolve(this.getColorTop());\n        var colorRight = Color.resolve(this.getColorRight());\n        var colorBottom = Color.resolve(this.getColorBottom());\n        var colorLeft = Color.resolve(this.getColorLeft());\n      }\n      else\n      {\n        var colorTop = this.getColorTop();\n        var colorRight = this.getColorRight();\n        var colorBottom = this.getColorBottom();\n        var colorLeft = this.getColorLeft();\n      }\n\n      // Add borders\n      var width = this.getWidthTop();\n      if (width > 0) {\n        styles[\"border-top\"] = width + \"px \" + this.getStyleTop() + \" \" + (colorTop || \"\");\n      }\n\n      var width = this.getWidthRight();\n      if (width > 0) {\n        styles[\"border-right\"] = width + \"px \" + this.getStyleRight() + \" \" + (colorRight || \"\");\n      }\n\n      var width = this.getWidthBottom();\n      if (width > 0) {\n        styles[\"border-bottom\"] = width + \"px \" + this.getStyleBottom() + \" \" + (colorBottom || \"\");\n      }\n\n      var width = this.getWidthLeft();\n      if (width > 0) {\n        styles[\"border-left\"] = width + \"px \" + this.getStyleLeft() + \" \" + (colorLeft || \"\");\n      }\n\n      // Check if valid\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (styles.length === 0) {\n          throw new Error(\"Invalid Single decorator (zero border width). Use qx.ui.decorator.Background instead!\");\n        }\n      }\n\n      // Add basic styles\n      styles.position = \"absolute\";\n    },\n\n\n    /**\n     * Implementation of the interface for the single border.\n     *\n     * @return {Map} A map containing the default insets.\n     *   (top, right, bottom, left)\n     */\n    _getDefaultInsetsForBorder : function()\n    {\n      return {\n        top : this.getWidthTop(),\n        right : this.getWidthRight(),\n        bottom : this.getWidthBottom(),\n        left : this.getWidthLeft()\n      };\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyWidth : function()\n    {\n      this._applyStyle();\n\n      this._resetInsets();\n    },\n\n\n    // property apply\n    _applyStyle : function()\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (this._isInitialized()) {\n          throw new Error(\"This decorator is already in-use. Modification is not possible anymore!\");\n        }\n      }\n    }\n  }\n});\n"
  ]
}