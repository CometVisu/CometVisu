{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/bom/storage/Web.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__local",
    "__session",
    "getLocal",
    "bom",
    "storage",
    "Web",
    "getSession",
    "construct",
    "type",
    "__type",
    "members",
    "getStorage",
    "window",
    "getLength",
    "length",
    "setItem",
    "key",
    "value",
    "lang",
    "Json",
    "stringify",
    "e",
    "Error",
    "getItem",
    "item",
    "Type",
    "isString",
    "parse",
    "removeItem",
    "clear",
    "i",
    "getKey",
    "index",
    "forEach",
    "callback",
    "scope",
    "call"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Storage implementation using HTML web storage:\n * http://www.w3.org/TR/webstorage/\n *\n * @require(qx.bom.storage.Web#getLength)\n * @require(qx.bom.storage.Web#setItem)\n * @require(qx.bom.storage.Web#getItem)\n * @require(qx.bom.storage.Web#removeItem)\n * @require(qx.bom.storage.Web#clear)\n * @require(qx.bom.storage.Web#getKey)\n * @require(qx.bom.storage.Web#forEach)\n */\nqx.Bootstrap.define(\"qx.bom.storage.Web\", {\n  statics : {\n    __local : null,\n    __session : null,\n\n    /**\n     * Static accessor for the local storage.\n     * @return {qx.bom.storage.Web} An instance of a local storage.\n     */\n    getLocal : function() {\n      if (this.__local) {\n        return this.__local;\n      }\n      return this.__local = new qx.bom.storage.Web(\"local\");\n    },\n\n\n    /**\n     * Static accessor for the session storage.\n     * @return {qx.bom.storage.Web} An instance of a session storage.\n     */\n    getSession : function() {\n      if (this.__session) {\n        return this.__session;\n      }\n      return this.__session = new qx.bom.storage.Web(\"session\");\n    }\n  },\n\n\n  /**\n   * Create a new instance. Usually, you should take the static\n   * accessors to get your instance.\n   *\n   * @param type {String} type of storage, either\n   *   <code>local</code> or <code>session</code>.\n   */\n  construct : function(type) {\n    this.__type = type;\n  },\n\n\n  members : {\n    __type : null,\n\n\n    /**\n     * Returns the internal used storage (the native object).\n     *\n     * @internal\n     * @return {Storage} The native storage implementation.\n     */\n    getStorage : function() {\n      return window[this.__type + \"Storage\"];\n    },\n\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @return {Integer} The length of the storage.\n     */\n    getLength : function() {\n      return this.getStorage(this.__type).length;\n    },\n\n\n    /**\n     * Store an item in the storage.\n     *\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setItem : function(key, value) {\n      value = qx.lang.Json.stringify(value);\n      try {\n        this.getStorage(this.__type).setItem(key, value);\n      } catch (e) {\n        throw new Error(\"Storage full.\");\n      }\n    },\n\n\n    /**\n     * Returns the stored item.\n     *\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getItem : function(key) {\n      var item = this.getStorage(this.__type).getItem(key);\n\n      if (qx.lang.Type.isString(item)) {\n        item = qx.lang.Json.parse(item);\n      // special case for FF3\n      } else if (item && item.value && qx.lang.Type.isString(item.value)) {\n        item = qx.lang.Json.parse(item.value);\n      }\n\n      return item;\n    },\n\n\n    /**\n     * Removes an item form the storage.\n     * @param key {String} The identifier.\n     */\n    removeItem : function(key) {\n      this.getStorage(this.__type).removeItem(key);\n    },\n\n\n    /**\n     * Deletes every stored item in the storage.\n     */\n    clear : function() {\n      var storage = this.getStorage(this.__type);\n      if (!storage.clear) {\n        for (var i = storage.length - 1; i >= 0; i--) {\n          storage.removeItem(storage.key(i));\n        }\n      } else {\n        storage.clear();\n      }\n    },\n\n\n    /**\n     * Returns the named key at the given index.\n     * @param index {Integer} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getKey : function(index) {\n      return this.getStorage(this.__type).key(index);\n    },\n\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEach : function(callback, scope) {\n      var length = this.getLength();\n      for (var i = 0; i < length; i++) {\n        var key = this.getKey(i);\n        callback.call(scope, key, this.getItem(key));\n      }\n    }\n  }\n});\n"
  ]
}