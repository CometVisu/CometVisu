{
  "className": "qx.bom.HashHistory",
  "packageName": "qx.bom",
  "name": "HashHistory",
  "superClass": "qx.bom.History",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 232,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2012 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n Fabian Jakobs (fjakobs)\n Mustafa Sak (msak)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>History manager implementation for IE greater 7. IE reloads iframe\n content on history actions even just hash value changed. This\n implementation forwards history states (hashes) to a helper iframe.\n This class must be disposed of after use</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 14
      },
      "end": {
        "line": 41,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "members": {
    "__checkOnHashChange": {
      "location": {
        "start": {
          "line": 46,
          "column": 4
        },
        "end": {
          "line": 46,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iframe": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iframeReady": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "addToHistory": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>overridden</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "__initIframe": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes the iframe</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__createIframe": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>IMPORTANT NOTE FOR IE:\n Setting the source before adding the iframe to the document.\n Otherwise IE will bring up a \"Unsecure items â€¦\" warning in SSL mode</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element}",
            "type": "qx.bom.Element",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__waitForIFrame": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Waits for the IFrame being loaded. Once the IFrame is loaded\n the callback is called with the provided context.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} This function will be called once the iframe is loaded",
            "paramName": "callback",
            "description": " This function will be called once the iframe is loaded",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object?window} The context for the callback.",
            "paramName": "context",
            "description": " The context for the callback.",
            "optional": true,
            "defaultValue": "window",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "retry {Integer} number of tries to initialize the iframe",
            "paramName": "retry",
            "description": " number of tries to initialize the iframe",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__attachListeners": {
      "location": {
        "start": {
          "line": 144,
          "column": 4
        },
        "end": {
          "line": 147,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Attach hash change listeners</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__detatchListeners": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove hash change listeners</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onHashChange": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>hash change event handler</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_readState": {
      "location": {
        "start": {
          "line": 177,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Browser dependent function to read the current state of the history</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} current state of the browser history",
            "type": "qx.bom.String",
            "description": " current state of the browser history"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_getHash": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the fragment identifier of the top window URL. For gecko browsers we\n have to use a regular expression to avoid encoding problems.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} the fragment identifier or <code>null</code> if the\n iframe isn't ready yet",
            "type": "String|null",
            "description": " the fragment identifier or <code>null</code> if the\n iframe isn't ready yet"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_writeState": {
      "location": {
        "start": {
          "line": 204,
          "column": 4
        },
        "end": {
          "line": 207,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Save a state into the browser history.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "state {String} state to save",
            "paramName": "state",
            "description": " state to save",
            "type": "qx.bom.String"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "_setHash": {
      "location": {
        "start": {
          "line": 215,
          "column": 4
        },
        "end": {
          "line": 224,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the fragment identifier of the window URL</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} the fragment identifier",
            "paramName": "value",
            "description": " the fragment identifier",
            "type": "qx.bom.String"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.bom.History",
      "appearsIn": [
        "qx.bom.History"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTitle": {
      "type": "function",
      "name": "getTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for title"
          }
        ]
      }
    },
    "setTitle": {
      "type": "function",
      "name": "setTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for title"
          }
        ]
      }
    },
    "resetTitle": {
      "type": "function",
      "name": "resetTitle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>title</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ]
      }
    },
    "getState": {
      "type": "function",
      "name": "getState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for state"
          }
        ]
      }
    },
    "setState": {
      "type": "function",
      "name": "setState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>state</code>.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for state"
          }
        ]
      }
    },
    "resetState": {
      "type": "function",
      "name": "resetState",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.bom.History",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>state</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #state}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 228,
        "column": 13
      },
      "end": {
        "line": 231,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}