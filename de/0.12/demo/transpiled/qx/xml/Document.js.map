{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/xml/Document.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "DOMDOC",
    "XMLHTTP",
    "isXmlDocument",
    "elem",
    "nodeType",
    "documentElement",
    "nodeName",
    "ownerDocument",
    "create",
    "namespaceUri",
    "qualifiedName",
    "core",
    "Environment",
    "get",
    "obj",
    "ActiveXObject",
    "setProperty",
    "str",
    "loadXML",
    "document",
    "implementation",
    "createDocument",
    "Error",
    "fromString",
    "dom",
    "xml",
    "Document",
    "parser",
    "DOMParser",
    "parseFromString",
    "defer",
    "domDoc",
    "httpReq",
    "i",
    "l",
    "length",
    "ex"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Cross browser XML document creation API\n *\n * The main purpose of this class is to allow you to create XML document objects in a\n * cross-browser fashion. Use <code>create</code> to create an empty document,\n * <code>fromString</code> to create one from an existing XML text. Both methods\n * return a *native DOM object*. That means you use standard DOM methods on such\n * an object (e.g. <code>createElement</code>).\n *\n * The following links provide further information on XML documents:\n *\n * * <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document\">W3C Interface Specification</a>\n * * <a href=\"http://msdn2.microsoft.com/en-us/library/ms535918.aspx\">MS xml Object</a>\n * * <a href=\"http://msdn2.microsoft.com/en-us/library/ms764622.aspx\">MSXML GUIDs and ProgIDs</a>\n * * <a href=\"https://developer.mozilla.org/en-US/docs/Parsing_and_serializing_XML\">MDN Parsing and Serializing XML</a>\n */\nqx.Bootstrap.define(\"qx.xml.Document\",\n{\n  statics :\n  {\n    /** @type {String} ActiveX class name of DOMDocument (IE specific) */\n    DOMDOC : null,\n\n    /** @type {String} ActiveX class name of XMLHttpRequest (IE specific) */\n    XMLHTTP : null,\n\n\n    /**\n     * Whether the given element is a XML document or element\n     * which is part of a XML document.\n     *\n     * @param elem {Document|Element} Any DOM Document or Element\n     * @return {Boolean} Whether the document is a XML document\n     */\n    isXmlDocument : function(elem)\n    {\n      if (elem.nodeType === 9) {\n        return elem.documentElement.nodeName !== \"HTML\";\n      } else if (elem.ownerDocument) {\n        return this.isXmlDocument(elem.ownerDocument);\n      } else {\n        return false;\n      }\n    },\n\n\n    /**\n     * Create an XML document.\n     *\n     * Returns a native DOM document object, set up for XML.\n     *\n     * @param namespaceUri {String ? null} The namespace URI of the document element to create or null.\n     * @param qualifiedName {String ? null} The qualified name of the document element to be created or null.\n     * @return {Document} empty XML object\n     *\n     * @ignore(ActiveXObject)\n     */\n    create : function(namespaceUri, qualifiedName)\n    {\n      // ActiveX - This is the preferred way for IE9 as well since it has no XPath\n      // support when using the native implementation.createDocument\n      if (qx.core.Environment.get(\"plugin.activex\")) {\n        var obj = new ActiveXObject(this.DOMDOC);\n        //The SelectionLanguage property is no longer needed in MSXML 6; trying\n        // to set it causes an exception in IE9.\n        if (this.DOMDOC == \"MSXML2.DOMDocument.3.0\") {\n          obj.setProperty(\"SelectionLanguage\", \"XPath\");\n        }\n\n        if (qualifiedName)\n        {\n          var str = '<\\?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<';\n\n          str += qualifiedName;\n\n          if (namespaceUri) {\n            str += \" xmlns='\" + namespaceUri + \"'\";\n          }\n\n          str += \" />\";\n          obj.loadXML(str);\n        }\n\n        return obj;\n      }\n\n      if (qx.core.Environment.get(\"xml.implementation\")) {\n        return document.implementation.createDocument(namespaceUri || \"\", qualifiedName || \"\", null);\n      }\n\n      throw new Error(\"No XML implementation available!\");\n    },\n\n\n    /**\n     * The string passed in is parsed into a DOM document.\n     *\n     * @param str {String} the string to be parsed\n     * @return {Document} XML document with given content\n     * @signature function(str)\n     *\n     * @ignore(DOMParser)\n     */\n    fromString : function(str)\n    {\n      // Legacy IE/ActiveX\n      if (qx.core.Environment.get(\"plugin.activex\")) {\n        var dom = qx.xml.Document.create();\n        dom.loadXML(str);\n        return dom;\n      }\n\n      if (qx.core.Environment.get(\"xml.domparser\")) {\n        var parser = new DOMParser();\n        return parser.parseFromString(str, \"text/xml\");\n      }\n\n      throw new Error(\"No XML implementation available!\");\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics)\n  {\n    // Detecting available ActiveX implementations.\n    if (qx.core.Environment.get(\"plugin.activex\"))\n    {\n      // According to information on the Microsoft XML Team's WebLog\n      // it is recommended to check for availability of MSXML versions 6.0 and 3.0.\n      // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n      var domDoc = [ \"MSXML2.DOMDocument.6.0\", \"MSXML2.DOMDocument.3.0\" ];\n      var httpReq = [ \"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\" ];\n\n      for (var i=0, l=domDoc.length; i<l; i++)\n      {\n        try\n        {\n          // Keep both objects in sync with the same version.\n          // This is important as there were compatibility issues detected.\n          new ActiveXObject(domDoc[i]);\n          new ActiveXObject(httpReq[i]);\n        }\n        catch(ex) {\n          continue;\n        }\n\n        // Update static constants\n        statics.DOMDOC = domDoc[i];\n        statics.XMLHTTP = httpReq[i];\n\n        // Stop loop here\n        break;\n      }\n    }\n  }\n});\n"
  ]
}