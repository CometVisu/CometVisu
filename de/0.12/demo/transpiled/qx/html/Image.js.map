{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/html/Image.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Element",
    "members",
    "__paddingTop",
    "__paddingLeft",
    "tagNameHint",
    "setPadding",
    "paddingLeft",
    "paddingTop",
    "getNodeName",
    "setStyle",
    "_applyProperty",
    "name",
    "value",
    "elem",
    "getDomElement",
    "styles",
    "getAllStyles",
    "getStyle",
    "backgroundRepeat",
    "source",
    "_getProperty",
    "scale",
    "repeat",
    "bom",
    "element",
    "Decoration",
    "update",
    "_removeProperty",
    "key",
    "direct",
    "_setProperty",
    "_createDomElement",
    "core",
    "Environment",
    "get",
    "setNodeName",
    "getTagName",
    "_copyData",
    "fromMarkup",
    "setSource",
    "getSource",
    "resetSource",
    "setScale",
    "getScale",
    "Image"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This is a simple image class using the low level image features of\n * qooxdoo and wraps it for the qx.html layer.\n */\nqx.Class.define(\"qx.html.Image\",\n{\n  extend : qx.html.Element,\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __paddingTop : null,\n    __paddingLeft: null,\n\n\n    // this member variable is only used for IE browsers to be able\n    // to the tag name which will be set. This is heavily connected to the runtime\n    // change of decorators and the use of external (=unmanaged images). It is\n    // necessary to be able to determine what tag will be used e.g. before the\n    // ImageLoader has finished its loading of an external image.\n    // See Bug #3894 for more details\n    tagNameHint : null,\n\n\n    /**\n     * Maps padding to background-position if the widget is rendered as a\n     * background image\n     * @param paddingLeft {Integer} left padding value\n     * @param paddingTop {Integer} top padding value\n     */\n    setPadding : function(paddingLeft, paddingTop)\n    {\n      this.__paddingLeft = paddingLeft;\n      this.__paddingTop = paddingTop;\n\n      if (this.getNodeName() == \"div\") {\n        this.setStyle(\"backgroundPosition\", paddingLeft + \"px \" + paddingTop + \"px\");\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      ELEMENT API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyProperty : function(name, value)\n    {\n      this.base(arguments, name, value);\n\n      if (name === \"source\")\n      {\n        var elem = this.getDomElement();\n\n        // To prevent any wrong background-position or -repeat it is necessary\n        // to reset those styles whenever a background-image is updated.\n        // This is only necessary if any backgroundImage was set already.\n        // See bug #3376 for details\n        var styles = this.getAllStyles();\n\n        if (this.getNodeName() == \"div\" && this.getStyle(\"backgroundImage\"))\n        {\n          styles.backgroundRepeat = null;\n        }\n\n        var source = this._getProperty(\"source\");\n        var scale = this._getProperty(\"scale\");\n        var repeat = scale ? \"scale\" : \"no-repeat\";\n\n        // Source can be null in certain circumstances.\n        // See bug #3701 for details.\n        if (source != null) {\n          // Normalize \"\" to null\n          source = source || null;\n\n          styles.paddingTop = this.__paddingTop;\n          styles.paddingLeft = this.__paddingLeft;\n\n          qx.bom.element.Decoration.update(elem, source, repeat, styles);\n        }\n      }\n    },\n\n    // overridden\n    _removeProperty : function(key, direct) {\n      if (key == \"source\") {\n        // Work-around check for null in #_applyProperty, introduced with fix\n        // for bug #3701. Use empty string that is later normalized to null.\n        // This fixes bug #4524.\n        this._setProperty(key, \"\", direct);\n      } else {\n        this._setProperty(key, null, direct);\n      }\n    },\n\n    // overridden\n    _createDomElement : function()\n    {\n      var scale = this._getProperty(\"scale\");\n      var repeat = scale ? \"scale\" : \"no-repeat\";\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        var source = this._getProperty(\"source\");\n\n        if (this.tagNameHint != null) {\n          this.setNodeName(this.tagNameHint);\n        } else {\n          this.setNodeName(qx.bom.element.Decoration.getTagName(repeat, source));\n        }\n      }\n      else\n      {\n        this.setNodeName(qx.bom.element.Decoration.getTagName(repeat));\n      }\n\n      return this.base(arguments);\n    },\n\n\n    // overridden\n    // be sure that style attributes are merged and not overwritten\n    _copyData : function(fromMarkup) {\n      return this.base(arguments, true);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      IMAGE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the image source\n     *\n     * @param value {Boolean} Whether the HTML mode should be used.\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setSource : function(value)\n    {\n      this._setProperty(\"source\", value);\n      return this;\n    },\n\n\n    /**\n     * Returns the image source.\n     *\n     * @return {String} Current image source.\n     */\n    getSource : function() {\n      return this._getProperty(\"source\");\n    },\n\n\n    /**\n     * Resets the current source to null which means that no image\n     * is shown anymore.\n     * @return {qx.html.Image} The current instance for chaining\n     */\n    resetSource : function()\n    {\n      // webkit browser do not allow to remove the required \"src\" attribute.\n      // If removing the attribute the old image is still visible.\n      if ((qx.core.Environment.get(\"engine.name\") == \"webkit\")) {\n        this._setProperty(\"source\", \"qx/static/blank.gif\");\n      } else {\n        this._removeProperty(\"source\", true);\n      }\n      return this;\n    },\n\n\n    /**\n     * Whether the image should be scaled or not.\n     *\n     * @param value {Boolean} Scale the image\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setScale : function(value)\n    {\n      this._setProperty(\"scale\", value);\n      return this;\n    },\n\n\n    /**\n     * Returns whether the image is scaled or not.\n     *\n     * @return {Boolean} Whether the image is scaled\n     */\n    getScale : function() {\n      return this._getProperty(\"scale\");\n    }\n  }\n});\n"
  ]
}