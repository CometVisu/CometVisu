{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/theme/manager/Appearance.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__styleCache",
    "__aliasMap",
    "properties",
    "theme",
    "check",
    "nullable",
    "event",
    "apply",
    "members",
    "__defaultStates",
    "_applyTheme",
    "__resolveId",
    "id",
    "defaultId",
    "chain",
    "db",
    "appearances",
    "entry",
    "divider",
    "end",
    "splitted",
    "split",
    "chainCopy",
    "lang",
    "Array",
    "clone",
    "alias",
    "length",
    "unshift",
    "pop",
    "baseid",
    "join",
    "mapped",
    "i",
    "shift",
    "subId",
    "resolved",
    "include",
    "style",
    "styleFrom",
    "states",
    "getTheme",
    "aliasMap",
    "name",
    "warn",
    "unique",
    "bits",
    "$$bits",
    "$$length",
    "sum",
    "state",
    "cache",
    "undefined",
    "result",
    "base",
    "incl",
    "local",
    "baseIncludeKey",
    "hasOwnProperty",
    "baseKey",
    "includeKey",
    "localKey",
    "manager",
    "Appearance"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Manager for appearance themes\n */\nqx.Class.define(\"qx.theme.manager.Appearance\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    this.__styleCache = {};\n    this.__aliasMap = {};\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /** Currently used appearance theme */\n    theme :\n    {\n      check : \"Theme\",\n      nullable : true,\n      event : \"changeTheme\",\n      apply : \"_applyTheme\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /**\n     * @lint ignoreReferenceField(__defaultStates)\n     */\n    __defaultStates : {},\n    __styleCache : null,\n    __aliasMap : null,\n\n\n    // property apply\n    _applyTheme : function() {\n      // empty the caches\n      this.__aliasMap = {};\n      this.__styleCache = {};\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      THEME HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the appearance entry ID to use\n     * when all aliases etc. are processed.\n     *\n     * @param id {String} ID to resolve.\n     * @param theme {Theme} Theme to use for lookup.\n     * @param defaultId {String} ID for a fallback.\n     * @param chain {Array} The appearance id chain.\n     * @return {String} Resolved ID\n     */\n    __resolveId : function(id, theme, defaultId, chain)\n    {\n      var db = theme.appearances;\n      var entry = db[id];\n\n      if (!entry)\n      {\n        var divider = \"/\";\n        var end = [];\n        var splitted = id.split(divider);\n        var chainCopy = qx.lang.Array.clone(splitted);\n        var alias;\n\n        while (!entry && splitted.length > 0)\n        {\n          end.unshift(splitted.pop());\n          var baseid = splitted.join(divider);\n          entry = db[baseid];\n\n          if (entry)\n          {\n            alias = entry.alias || entry;\n\n            if (typeof alias === \"string\")\n            {\n              var mapped = alias + divider + end.join(divider);\n              return this.__resolveId(mapped, theme, defaultId, chainCopy);\n            }\n          }\n        }\n\n        // check if we find a control fitting in the appearance [BUG #4020]\n        for (var i = 0; i < end.length - 1; i++) {\n          // remove the first id, it has already been checked at startup\n          end.shift();\n          // build a new subid without the former first id\n          var subId = end.join(divider);\n          var resolved = this.__resolveId(subId, theme, null, chainCopy);\n          if (resolved) {\n            return resolved;\n          }\n        }\n\n        // check for the fallback\n        if (defaultId != null) {\n          return this.__resolveId(defaultId, theme, null, chainCopy);\n        }\n\n        // it's safe to output this message here since we can be sure that the return\n        // value is 'null' and something went wrong with the id lookup.\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (typeof chain !== \"undefined\") {\n            this.debug(\"Cannot find a matching appearance for '\" + chain.join(\"/\") + \"'.\");\n\n            if (chain.length > 1) {\n              this.info(\"Hint: This may be an issue with nested child controls and a missing alias definition in the appearance theme.\");\n            }\n          }\n        }\n\n        return null;\n      }\n      else if (typeof entry === \"string\")\n      {\n        return this.__resolveId(entry, theme, defaultId, chainCopy);\n      }\n      else if (entry.include && !entry.style)\n      {\n        return this.__resolveId(entry.include, theme, defaultId, chainCopy);\n      }\n\n      return id;\n    },\n\n\n    /**\n     * Get the result of the \"state\" function for a given id and states\n     *\n     * @param id {String} id of the appearance (e.g. \"button\", \"label\", ...)\n     * @param states {Map} hash map defining the set states\n     * @param theme {Theme?} appearance theme\n     * @param defaultId {String} fallback id.\n     * @return {Map} map of widget properties as returned by the \"state\" function\n     */\n    styleFrom : function(id, states, theme, defaultId)\n    {\n      if (!theme) {\n        theme = this.getTheme();\n      }\n\n      // Resolve ID\n      var aliasMap = this.__aliasMap;\n      if(!aliasMap[theme.name]) {\n        aliasMap[theme.name] = {};\n      }\n      var resolved = aliasMap[theme.name][id];\n      if (!resolved) {\n        resolved = aliasMap[theme.name][id] = this.__resolveId(id, theme, defaultId);\n      }\n\n      // Query theme for ID\n      var entry = theme.appearances[resolved];\n      if (!entry)\n      {\n        this.warn(\"Missing appearance: \" + id);\n        return null;\n      }\n\n      // Entries with includes, but without style are automatically merged\n      // by the ID handling in {@link #getEntry}. When there is no style method in the\n      // final object the appearance is empty and null could be returned.\n      if (!entry.style) {\n        return null;\n      }\n\n      // Build an unique cache name from ID and state combination\n      var unique = resolved;\n      if (states)\n      {\n        // Create data fields\n        var bits = entry.$$bits;\n        if (!bits)\n        {\n          bits = entry.$$bits = {};\n          entry.$$length = 0;\n        }\n\n        // Compute sum\n        var sum = 0;\n        for (var state in states)\n        {\n          if (!states[state]) {\n            continue;\n          }\n\n          if (bits[state] == null) {\n            bits[state] = 1<<entry.$$length++;\n          }\n\n          sum += bits[state];\n        }\n\n        // Only append the sum if it is bigger than zero\n        if (sum > 0) {\n          unique += \":\" + sum;\n        }\n      }\n\n      // Using cache if available\n      var cache = this.__styleCache;\n      if (cache[theme.name] && (cache[theme.name][unique] !== undefined)) {\n        return cache[theme.name][unique];\n      }\n\n      // Fallback to default (empty) states map\n      if (!states) {\n        states = this.__defaultStates;\n      }\n\n      // Compile the appearance\n      var result;\n\n      // If an include or base is defined, too, we need to merge the entries\n      if (entry.include || entry.base)\n      {\n\n        // Gather included data\n        var incl;\n        if (entry.include) {\n          incl = this.styleFrom(entry.include, states, theme, defaultId);\n        }\n\n        // This process tries to insert the original data first, and\n        // append the new data later, to higher prioritize the local\n        // data above the included/inherited data. This is especially needed\n        // for property groups or properties which includes other\n        // properties when modified.\n        var local = entry.style(states, incl);\n\n        // Create new map\n        result = {};\n\n        // Copy base data, but exclude overwritten local and included stuff\n        if (entry.base)\n        {\n          var base = this.styleFrom(resolved, states, entry.base, defaultId);\n\n          if (entry.include)\n          {\n            for (var baseIncludeKey in base)\n            {\n              if (!incl.hasOwnProperty(baseIncludeKey) && !local.hasOwnProperty(baseIncludeKey)) {\n                result[baseIncludeKey] = base[baseIncludeKey];\n              }\n            }\n          }\n          else\n          {\n            for (var baseKey in base)\n            {\n              if (!local.hasOwnProperty(baseKey)) {\n                result[baseKey] = base[baseKey];\n              }\n            }\n          }\n        }\n\n        // Copy include data, but exclude overwritten local stuff\n        if (entry.include)\n        {\n          for (var includeKey in incl)\n          {\n            if (!local.hasOwnProperty(includeKey)) {\n              result[includeKey] = incl[includeKey];\n            }\n          }\n        }\n\n        // Append local data\n        for (var localKey in local) {\n          result[localKey] = local[localKey];\n        }\n      }\n      else\n      {\n        result = entry.style(states);\n      }\n\n      // Cache new entry and return\n      if(!cache[theme.name]) {\n        cache[theme.name] = {};\n      }\n       return cache[theme.name][unique] = result || null;\n    }\n  }\n});\n"
  ]
}