{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/theme/manager/Meta.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "events",
    "properties",
    "theme",
    "check",
    "nullable",
    "apply",
    "members",
    "_applyTheme",
    "value",
    "old",
    "colorChanged",
    "decorationChanged",
    "fontChanged",
    "iconChanged",
    "appearanceChanged",
    "meta",
    "color",
    "decoration",
    "font",
    "icon",
    "appearance",
    "colorMgr",
    "manager",
    "Color",
    "getInstance",
    "decorationMgr",
    "Decoration",
    "fontMgr",
    "Font",
    "iconMgr",
    "Icon",
    "appearanceMgr",
    "Appearance",
    "_suspendEvents",
    "dec",
    "getTheme",
    "setTheme",
    "fireEvent",
    "_activateEvents",
    "__timer",
    "_fireEvent",
    "e",
    "getTarget",
    "refresh",
    "hasListener",
    "removeListener",
    "addListener",
    "initialize",
    "env",
    "Environment",
    "obj",
    "get",
    "Theme",
    "getByName",
    "Error",
    "environment",
    "Meta"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EACA;AACEC,IAAAA,IAAI,EAAG,WADT;AAEEC,IAAAA,MAAM,EAAGP,EAAE,CAACQ,IAAH,CAAQC,MAFnB;AAIEC,IAAAA,MAAM,EACN;AACE;AACA,qBAAgB;AAFlB,KALF;AAWEC,IAAAA,UAAU,EACV;AACE;;;;AAIAC,MAAAA,KAAK,EACL;AACEC,QAAAA,KAAK,EAAG,OADV;AAEEC,QAAAA,QAAQ,EAAG,KAFb;AAGEC,QAAAA,KAAK,EAAG;AAHV;AANF,KAZF;AA0BEC,IAAAA,OAAO,EACP;AACE;AACAC,MAAAA,WAAW,EAAG,qBAASC,KAAT,EAAgBC,GAAhB,EACd;AACE;AACA,YAAIC,YAAY,GAAG,IAAnB;AACA,YAAIC,iBAAiB,GAAG,IAAxB;AACA,YAAIC,WAAW,GAAG,IAAlB;AACA,YAAIC,WAAW,GAAG,IAAlB;AACA,YAAIC,iBAAiB,GAAG,IAAxB;;AAEA,YAAIL,GAAJ,EAAS;AACPC,UAAAA,YAAY,GAAGF,KAAK,CAACO,IAAN,CAAWC,KAAX,KAAqBP,GAAG,CAACM,IAAJ,CAASC,KAA7C;AACAL,UAAAA,iBAAiB,GAAGH,KAAK,CAACO,IAAN,CAAWE,UAAX,KAA0BR,GAAG,CAACM,IAAJ,CAASE,UAAvD;AACAL,UAAAA,WAAW,GAAGJ,KAAK,CAACO,IAAN,CAAWG,IAAX,KAAoBT,GAAG,CAACM,IAAJ,CAASG,IAA3C;AACAL,UAAAA,WAAW,GAAGL,KAAK,CAACO,IAAN,CAAWI,IAAX,KAAoBV,GAAG,CAACM,IAAJ,CAASI,IAA3C;AACAL,UAAAA,iBAAiB,GAAGN,KAAK,CAACO,IAAN,CAAWK,UAAX,KAA0BX,GAAG,CAACM,IAAJ,CAASK,UAAvD;AACD;;AAGD,YAAIC,QAAQ,GAAG/B,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBC,KAAjB,CAAuBC,WAAvB,EAAf;AACA,YAAIC,aAAa,GAAGnC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBI,UAAjB,CAA4BF,WAA5B,EAApB;AACA,YAAIG,OAAO,GAAGrC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBM,IAAjB,CAAsBJ,WAAtB,EAAd;AACA,YAAIK,OAAO,GAAGvC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBQ,IAAjB,CAAsBN,WAAtB,EAAd;AACA,YAAIO,aAAa,GAAGzC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBU,UAAjB,CAA4BR,WAA5B,EAApB,CArBF,CAuBE;;AACA,aAAKS,cAAL,GAxBF,CA2BE;;;AACA,YAAIvB,YAAJ,EAAkB;AAChB;AACA,cAAI,CAACC,iBAAL,EAAwB;AACtB,gBAAIuB,GAAG,GAAGT,aAAa,CAACU,QAAd,EAAV;;AACAV,YAAAA,aAAa,CAAClB,WAAd,CAA0B2B,GAA1B;AACD;;AACDb,UAAAA,QAAQ,CAACe,QAAT,CAAkB5B,KAAK,CAACO,IAAN,CAAWC,KAA7B;AACD;;AACDS,QAAAA,aAAa,CAACW,QAAd,CAAuB5B,KAAK,CAACO,IAAN,CAAWE,UAAlC;AACAU,QAAAA,OAAO,CAACS,QAAR,CAAiB5B,KAAK,CAACO,IAAN,CAAWG,IAA5B;AACAW,QAAAA,OAAO,CAACO,QAAR,CAAiB5B,KAAK,CAACO,IAAN,CAAWI,IAA5B;AACAY,QAAAA,aAAa,CAACK,QAAd,CAAuB5B,KAAK,CAACO,IAAN,CAAWK,UAAlC,EAvCF,CAyCE;;AACA,YAAIV,YAAY,IAAIC,iBAAhB,IAAqCC,WAArC,IAAoDC,WAApD,IAAmEC,iBAAvE,EAA0F;AACxF,eAAKuB,SAAL,CAAe,aAAf;AACD,SA5CH,CA8CE;;;AACA,aAAKC,eAAL;AACD,OAnDH;AAsDEC,MAAAA,QAAO,EAAG,IAtDZ;;AAyDE;;;;;AAKAC,MAAAA,UAAU,EAAG,oBAASC,CAAT,EACb;AACE,YAAIA,CAAC,CAACC,SAAF,OAAkBpD,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBC,KAAjB,CAAuBC,WAAvB,EAAtB,EAA4D;AAC1D;AACA;AACAlC,UAAAA,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBI,UAAjB,CAA4BF,WAA5B,GAA0CmB,OAA1C;AACD;;AAED,aAAKN,SAAL,CAAe,aAAf;AACD,OAvEH;;AA0EE;;;;AAIAJ,MAAAA,cAAc,EAAG,0BACjB;AACE,YAAIZ,QAAQ,GAAG/B,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBC,KAAjB,CAAuBC,WAAvB,EAAf;AACA,YAAIC,aAAa,GAAGnC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBI,UAAjB,CAA4BF,WAA5B,EAApB;AACA,YAAIG,OAAO,GAAGrC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBM,IAAjB,CAAsBJ,WAAtB,EAAd;AACA,YAAIK,OAAO,GAAGvC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBQ,IAAjB,CAAsBN,WAAtB,EAAd;AACA,YAAIO,aAAa,GAAGzC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBU,UAAjB,CAA4BR,WAA5B,EAApB,CALF,CAOE;;AACA,YAAIH,QAAQ,CAACuB,WAAT,CAAqB,aAArB,CAAJ,EAAyC;AACvCvB,UAAAA,QAAQ,CAACwB,cAAT,CAAwB,aAAxB,EAAuC,KAAKL,UAA5C,EAAwD,IAAxD;AACD;;AAED,YAAIf,aAAa,CAACmB,WAAd,CAA0B,aAA1B,CAAJ,EAA8C;AAC5CnB,UAAAA,aAAa,CAACoB,cAAd,CAA6B,aAA7B,EAA4C,KAAKL,UAAjD,EAA6D,IAA7D;AACD;;AAED,YAAIb,OAAO,CAACiB,WAAR,CAAoB,aAApB,CAAJ,EAAwC;AACtCjB,UAAAA,OAAO,CAACkB,cAAR,CAAuB,aAAvB,EAAsC,KAAKL,UAA3C,EAAuD,IAAvD;AACD;;AAED,YAAIX,OAAO,CAACe,WAAR,CAAoB,aAApB,CAAJ,EAAwC;AACtCf,UAAAA,OAAO,CAACgB,cAAR,CAAuB,aAAvB,EAAsC,KAAKL,UAA3C,EAAuD,IAAvD;AACD;;AAED,YAAIT,aAAa,CAACa,WAAd,CAA0B,aAA1B,CAAJ,EAA8C;AAC5Cb,UAAAA,aAAa,CAACc,cAAd,CAA6B,aAA7B,EAA4C,KAAKL,UAAjD,EAA6D,IAA7D;AACD;AACF,OA1GH;;AA6GE;;;;AAIAF,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIjB,QAAQ,GAAG/B,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBC,KAAjB,CAAuBC,WAAvB,EAAf;AACA,YAAIC,aAAa,GAAGnC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBI,UAAjB,CAA4BF,WAA5B,EAApB;AACA,YAAIG,OAAO,GAAGrC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBM,IAAjB,CAAsBJ,WAAtB,EAAd;AACA,YAAIK,OAAO,GAAGvC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBQ,IAAjB,CAAsBN,WAAtB,EAAd;AACA,YAAIO,aAAa,GAAGzC,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBU,UAAjB,CAA4BR,WAA5B,EAApB,CALF,CAOE;;AACA,YAAI,CAACH,QAAQ,CAACuB,WAAT,CAAqB,aAArB,CAAL,EAA0C;AACxCvB,UAAAA,QAAQ,CAACyB,WAAT,CAAqB,aAArB,EAAoC,KAAKN,UAAzC,EAAqD,IAArD;AACD;;AAED,YAAI,CAACf,aAAa,CAACmB,WAAd,CAA0B,aAA1B,CAAL,EAA+C;AAC7CnB,UAAAA,aAAa,CAACqB,WAAd,CAA0B,aAA1B,EAAyC,KAAKN,UAA9C,EAA0D,IAA1D;AACD;;AAED,YAAI,CAACb,OAAO,CAACiB,WAAR,CAAoB,aAApB,CAAL,EAAyC;AACvCjB,UAAAA,OAAO,CAACmB,WAAR,CAAoB,aAApB,EAAmC,KAAKN,UAAxC,EAAoD,IAApD;AACD;;AAED,YAAI,CAACX,OAAO,CAACe,WAAR,CAAoB,aAApB,CAAL,EAAyC;AACvCf,UAAAA,OAAO,CAACiB,WAAR,CAAoB,aAApB,EAAmC,KAAKN,UAAxC,EAAoD,IAApD;AACD;;AAED,YAAI,CAACT,aAAa,CAACa,WAAd,CAA0B,aAA1B,CAAL,EAA+C;AAC7Cb,UAAAA,aAAa,CAACe,WAAd,CAA0B,aAA1B,EAAyC,KAAKN,UAA9C,EAA0D,IAA1D;AACD;AACF,OA7IH;;AAgJE;;;;AAIAO,MAAAA,UAAU,EAAG,sBACb;AACE,YAAIC,GAAG,GAAG1D,EAAE,CAACQ,IAAH,CAAQmD,WAAlB;AACA,YAAI/C,KAAJ,EAAWgD,GAAX;AAEAhD,QAAAA,KAAK,GAAG8C,GAAG,CAACG,GAAJ,CAAQ,UAAR,CAAR;;AACA,YAAIjD,KAAJ,EACA;AACEgD,UAAAA,GAAG,GAAG5D,EAAE,CAAC8D,KAAH,CAASC,SAAT,CAAmBnD,KAAnB,CAAN;;AACA,cAAI,CAACgD,GAAL,EAAU;AACR,kBAAM,IAAII,KAAJ,CAAU,wCAAwCpD,KAAlD,CAAN;AACD;;AAED,eAAKkC,QAAL,CAAcc,GAAd;AACD;AACF;AAnKH,KA3BF;;AAoME;;;;;AAMAK,IAAAA,WAAW,EAAG;AACZ,kBAAa;AADD;AA1MhB,GADA;AAtBAjE,EAAAA,EAAE,CAACY,KAAH,CAASoB,OAAT,CAAiBkC,IAAjB,CAAsB/D,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Manager for meta themes\n */\nqx.Class.define(\"qx.theme.manager.Meta\",\n{\n  type : \"singleton\",\n  extend : qx.core.Object,\n\n  events :\n  {\n    /** Fires if any theme manager has been changed. */\n    \"changeTheme\" : \"qx.event.type.Event\"\n  },\n\n\n  properties :\n  {\n    /**\n     * Meta theme. Applies the defined color, decoration, ... themes to\n     * the corresponding managers.\n     */\n    theme :\n    {\n      check : \"Theme\",\n      nullable : false,\n      apply : \"_applyTheme\"\n    }\n  },\n\n\n  members :\n  {\n    // property apply\n    _applyTheme : function(value, old)\n    {\n      // collect changes\n      var colorChanged = true;\n      var decorationChanged = true;\n      var fontChanged = true;\n      var iconChanged = true;\n      var appearanceChanged = true;\n\n      if (old) {\n        colorChanged = value.meta.color !== old.meta.color;\n        decorationChanged = value.meta.decoration !== old.meta.decoration;\n        fontChanged = value.meta.font !== old.meta.font;\n        iconChanged = value.meta.icon !== old.meta.icon;\n        appearanceChanged = value.meta.appearance !== old.meta.appearance;\n      }\n\n\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var decorationMgr = qx.theme.manager.Decoration.getInstance();\n      var fontMgr = qx.theme.manager.Font.getInstance();\n      var iconMgr = qx.theme.manager.Icon.getInstance();\n      var appearanceMgr = qx.theme.manager.Appearance.getInstance();\n\n      // suspend listeners\n      this._suspendEvents();\n\n\n      // apply meta changes\n      if (colorChanged) {\n        // color theme changed, but decorator not? force decorator\n        if (!decorationChanged) {\n          var dec = decorationMgr.getTheme();\n          decorationMgr._applyTheme(dec);\n        }\n        colorMgr.setTheme(value.meta.color);\n      }\n      decorationMgr.setTheme(value.meta.decoration);\n      fontMgr.setTheme(value.meta.font);\n      iconMgr.setTheme(value.meta.icon);\n      appearanceMgr.setTheme(value.meta.appearance);\n\n      // fire change event only if at least one theme manager changed\n      if (colorChanged || decorationChanged || fontChanged || iconChanged || appearanceChanged) {\n        this.fireEvent(\"changeTheme\");\n      }\n\n      // re add listener\n      this._activateEvents();\n    },\n\n\n    __timer : null,\n\n\n    /**\n     * Fires <code>changeTheme</code> event.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _fireEvent : function(e)\n    {\n      if (e.getTarget() === qx.theme.manager.Color.getInstance()) {\n        // force clearing all previously created CSS rules, to be able to\n        // re-create decorator rules with changed color theme\n        qx.theme.manager.Decoration.getInstance().refresh();\n      }\n\n      this.fireEvent(\"changeTheme\");\n    },\n\n\n    /**\n     * Removes listeners for <code>changeTheme</code> event of all\n     * related theme managers.\n     */\n    _suspendEvents : function()\n    {\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var decorationMgr = qx.theme.manager.Decoration.getInstance();\n      var fontMgr = qx.theme.manager.Font.getInstance();\n      var iconMgr = qx.theme.manager.Icon.getInstance();\n      var appearanceMgr = qx.theme.manager.Appearance.getInstance();\n\n      // suspend listeners\n      if (colorMgr.hasListener(\"changeTheme\")) {\n        colorMgr.removeListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (decorationMgr.hasListener(\"changeTheme\")) {\n        decorationMgr.removeListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (fontMgr.hasListener(\"changeTheme\")) {\n        fontMgr.removeListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (iconMgr.hasListener(\"changeTheme\")) {\n        iconMgr.removeListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (appearanceMgr.hasListener(\"changeTheme\")) {\n        appearanceMgr.removeListener(\"changeTheme\", this._fireEvent, this);\n      }\n    },\n\n\n    /**\n     * Activates listeners for <code>changeTheme</code> event of all related\n     * theme managers, to forwards the event to this meta manager instance.\n     */\n    _activateEvents : function()\n    {\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var decorationMgr = qx.theme.manager.Decoration.getInstance();\n      var fontMgr = qx.theme.manager.Font.getInstance();\n      var iconMgr = qx.theme.manager.Icon.getInstance();\n      var appearanceMgr = qx.theme.manager.Appearance.getInstance();\n\n      // add listeners to check changes\n      if (!colorMgr.hasListener(\"changeTheme\")) {\n        colorMgr.addListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (!decorationMgr.hasListener(\"changeTheme\")) {\n        decorationMgr.addListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (!fontMgr.hasListener(\"changeTheme\")) {\n        fontMgr.addListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (!iconMgr.hasListener(\"changeTheme\")) {\n        iconMgr.addListener(\"changeTheme\", this._fireEvent, this);\n      }\n\n      if (!appearanceMgr.hasListener(\"changeTheme\")) {\n        appearanceMgr.addListener(\"changeTheme\", this._fireEvent, this);\n      }\n    },\n\n\n    /**\n     * Initialize the themes which were selected using the settings. Should only\n     * be called from qooxdoo based application.\n     */\n    initialize : function()\n    {\n      var env = qx.core.Environment;\n      var theme, obj;\n\n      theme = env.get(\"qx.theme\");\n      if (theme)\n      {\n        obj = qx.Theme.getByName(theme);\n        if (!obj) {\n          throw new Error(\"The theme to use is not available: \" + theme);\n        }\n\n        this.setTheme(obj);\n      }\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     ENVIRONMENT SETTINGS\n  *****************************************************************************\n  */\n\n  environment : {\n    \"qx.theme\" : \"qx.theme.Modern\"\n  }\n});\n"
  ]
}