{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/io/part/ClosurePart.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "io",
    "part",
    "Part",
    "construct",
    "name",
    "packages",
    "loader",
    "call",
    "members",
    "__packagesToLoad",
    "preload",
    "callback",
    "self",
    "packagesLoaded",
    "that",
    "i",
    "_packages",
    "length",
    "pkg",
    "getReadyState",
    "loadClosure",
    "_loader",
    "notifyPackageResult",
    "load",
    "_checkCompleteLoading",
    "_readyState",
    "_appendPartListener",
    "pkgReadyState",
    "addPackageListener",
    "bind",
    "_onPackageLoad",
    "_markAsCompleted",
    "__executePackages",
    "execute",
    "ClosurePart"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Wrapper for a part as defined in the config file. This class knows about all\n * packages the part depends on and provides functionality to load the part.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.io.part.ClosurePart\",\n{\n  extend : qx.io.part.Part,\n\n  /**\n   * @param name {String} Name of the part as defined in the config file at\n   *    compile time.\n   * @param packages {qx.io.part.Package[]} List of dependent packages\n   * @param loader {qx.Part} The loader of this part.\n   */\n  construct : function(name, packages, loader)\n  {\n    qx.io.part.Part.call(this, name, packages, loader);\n  },\n\n\n  members :\n  {\n    __packagesToLoad : 0,\n\n\n    // overridden\n    preload : function(callback, self)\n    {\n      // store how many packages are already preloaded\n      var packagesLoaded = 0;\n      var that = this;\n\n      for (var i = 0; i < this._packages.length; i++)\n      {\n        var pkg = this._packages[i];\n        if (pkg.getReadyState() == \"initialized\") {\n\n          pkg.loadClosure(function(pkg) {\n            packagesLoaded++;\n            that._loader.notifyPackageResult(pkg);\n            // everything loaded?\n            if (packagesLoaded >= that._packages.length && callback) {\n              callback.call(self);\n            }\n          }, this._loader);\n        }\n      }\n    },\n\n\n    /**\n     * Loads the closure part including all its packages. The loading will\n     * be done parallel. After all packages are available, the closures are\n     * executed in the correct order.\n     *\n     * @param callback {Function} The function to call after the loading.\n     * @param self {Object?} The context of the callback.\n     */\n    load : function(callback, self)\n    {\n      if (this._checkCompleteLoading(callback, self)) {\n        return;\n      };\n\n      this._readyState = \"loading\";\n\n      if (callback) {\n        this._appendPartListener(callback, self, this);\n      }\n\n      this.__packagesToLoad = this._packages.length;\n\n      for (var i = 0; i < this._packages.length; i++)\n      {\n        var pkg = this._packages[i];\n        var pkgReadyState = pkg.getReadyState();\n\n        // trigger loading\n        if (pkgReadyState == \"initialized\") {\n          pkg.loadClosure(this._loader.notifyPackageResult, this._loader);\n        }\n\n        // Listener for package changes\n        if (pkgReadyState == \"initialized\" || pkgReadyState == \"loading\")\n        {\n          this._loader.addPackageListener(\n            pkg,\n            qx.Bootstrap.bind(this._onPackageLoad, this, pkg)\n          );\n        }\n        else if (pkgReadyState == \"error\")\n        {\n          this._markAsCompleted(\"error\");\n          return;\n        }\n        else {\n          // \"complete\" and \"cached\"\n          this.__packagesToLoad--;\n        }\n      }\n\n      // execute closures in case everything is already loaded/cached\n      if (this.__packagesToLoad <= 0) {\n        this.__executePackages();\n      }\n    },\n\n\n    /**\n     * Executes the packages in their correct order and marks the part as\n     * complete after execution.\n     */\n    __executePackages : function()\n    {\n      for (var i = 0; i < this._packages.length; i++) {\n        this._packages[i].execute();\n      }\n      this._markAsCompleted(\"complete\");\n    },\n\n\n    /**\n     * Handler for every package load. It checks for errors and decreases the\n     * packages to load. If all packages has been loaded, it invokes the\n     * execution.\n     *\n     * @param pkg {qx.io.part.Package} The loaded package.\n     */\n    _onPackageLoad : function(pkg)\n    {\n      // if the part already has an error, ignore the callback\n      if (this._readyState == \"error\") {\n        return;\n      }\n\n      // one error package results in an error part\n      if (pkg.getReadyState() == \"error\") {\n        this._markAsCompleted(\"error\");\n        return;\n      }\n\n      // every package could be loaded -> execute the closures\n      this.__packagesToLoad--;\n      if (this.__packagesToLoad <= 0) {\n        this.__executePackages();\n      }\n    }\n  }\n});"
  ]
}