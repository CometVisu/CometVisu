{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/lang/Number.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "isInRange",
    "nr",
    "vmin",
    "vmax",
    "isBetweenRange",
    "limit",
    "equals",
    "x",
    "y",
    "Math",
    "abs",
    "Number",
    "EPSILON",
    "max",
    "lang"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gBAAhB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;;;;;;;;AAQAC,MAAAA,SAAS,EAAG,mBAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AACnC,eAAOF,EAAE,IAAIC,IAAN,IAAcD,EAAE,IAAIE,IAA3B;AACD,OAXH;;AAcE;;;;;;;;AAQAC,MAAAA,cAAc,EAAG,wBAASH,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AACxC,eAAOF,EAAE,GAAGC,IAAL,IAAaD,EAAE,GAAGE,IAAzB;AACD,OAxBH;;AA2BE;;;;;;;;;;;;AAYAE,MAAAA,KAAK,EAAG,eAASJ,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EACR;AACE,YAAIA,IAAI,IAAI,IAAR,IAAgBF,EAAE,GAAGE,IAAzB,EAA+B;AAC7B,iBAAOA,IAAP;AACD,SAFD,MAEO,IAAID,IAAI,IAAI,IAAR,IAAgBD,EAAE,GAAGC,IAAzB,EAA+B;AACpC,iBAAOA,IAAP;AACD,SAFM,MAEA;AACL,iBAAOD,EAAP;AACD;AACF,OAhDH;;AAmDE;;;;;;;AAOAK,MAAAA,MAAM,EAAG,gBAASC,CAAT,EAAYC,CAAZ,EACT;AAME;AACA,eAAOD,CAAC,KAAKC,CAAN,IACAC,IAAI,CAACC,GAAL,CAASH,CAAC,GAAGC,CAAb,IAAkBG,MAAM,CAACC,OADzB,IAEAH,IAAI,CAACC,GAAL,CAASH,CAAC,GAAGC,CAAb,KAAmBC,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACC,GAAL,CAASH,CAAT,CAAT,EAAsBE,IAAI,CAACC,GAAL,CAASF,CAAT,CAAtB,IAAqC,KAF/D;AAGD;AArEH;AAFF,GADA;AAzBAf,EAAAA,EAAE,CAACqB,IAAH,CAAQH,MAAR,CAAef,aAAf,GAA+BA,aAA/B",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Helper functions for numbers.\n *\n * The native JavaScript Number is not modified by this class.\n *\n */\nqx.Class.define(\"qx.lang.Number\",\n{\n  statics :\n  {\n    /**\n     * Check whether the number is in a given range\n     *\n     * @param nr {Number} the number to check\n     * @param vmin {Integer} lower bound of the range\n     * @param vmax {Integer} upper bound of the range\n     * @return {Boolean} whether the number is >= vmin and <= vmax\n     */\n    isInRange : function(nr, vmin, vmax) {\n      return nr >= vmin && nr <= vmax;\n    },\n\n\n    /**\n     * Check whether the number is between a given range\n     *\n     * @param nr {Number} the number to check\n     * @param vmin {Integer} lower bound of the range\n     * @param vmax {Integer} upper bound of the range\n     * @return {Boolean} whether the number is > vmin and < vmax\n     */\n    isBetweenRange : function(nr, vmin, vmax) {\n      return nr > vmin && nr < vmax;\n    },\n\n\n    /**\n     * Limit the number to a given range\n     *\n     * * If the number is greater than the upper bound, the upper bound is returned\n     * * If the number is smaller than the lower bound, the lower bound is returned\n     * * If the number is in the range, the number is returned\n     *\n     * @param nr {Number} the number to limit\n     * @param vmin {Integer} lower bound of the range\n     * @param vmax {Integer} upper bound of the range\n     * @return {Integer} the limited number\n     */\n    limit : function(nr, vmin, vmax)\n    {\n      if (vmax != null && nr > vmax) {\n        return vmax;\n      } else if (vmin != null && nr < vmin) {\n        return vmin;\n      } else {\n        return nr;\n      }\n    },\n\n\n    /**\n     * Checks the equality of two numbers regarding the imprecision of floats.\n     *\n     * @param x {Number}\n     * @param y {Number}\n     * @return {Boolean}\n     */\n    equals : function(x, y)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertNumber(x);\n        qx.core.Assert.assertNumber(y);\n      }\n\n      // 1e-14 is the relative difference.\n      return x === y ||\n             Math.abs(x - y) < Number.EPSILON ||\n             Math.abs(x - y) <= Math.max(Math.abs(x), Math.abs(y)) * 1e-14;\n    }\n  }\n});\n"
  ]
}