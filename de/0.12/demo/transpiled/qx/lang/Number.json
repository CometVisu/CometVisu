{
  "className": "qx.lang.Number",
  "packageName": "qx.lang",
  "name": "Number",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 100,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n     2004-2008 1&amp;1 Internet AG, Germany, http://www.1und1.de\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Sebastian Werner (wpbasti)\n Andreas Ecker (ecker)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Helper functions for numbers.\n The native JavaScript Number is not modified by this class.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "isInRange": {
      "location": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the number is in a given range</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to check",
            "paramName": "nr",
            "description": " the number to check",
            "type": "qx.lang.Number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the number is >= vmin and <= vmax",
            "type": "Boolean",
            "description": " whether the number is >= vmin and <= vmax"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isBetweenRange": {
      "location": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check whether the number is between a given range</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to check",
            "paramName": "nr",
            "description": " the number to check",
            "type": "qx.lang.Number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the number is > vmin and < vmax",
            "type": "Boolean",
            "description": " whether the number is > vmin and < vmax"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "limit": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Limit the number to a given range</p>\n<ul>\n<li>If the number is greater than the upper bound, the upper bound is returned</li>\n<li>If the number is smaller than the lower bound, the lower bound is returned</li>\n<li>If the number is in the range, the number is returned</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "nr {Number} the number to limit",
            "paramName": "nr",
            "description": " the number to limit",
            "type": "qx.lang.Number"
          },
          {
            "name": "@param",
            "body": "vmin {Integer} lower bound of the range",
            "paramName": "vmin",
            "description": " lower bound of the range",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "vmax {Integer} upper bound of the range",
            "paramName": "vmax",
            "description": " upper bound of the range",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the limited number",
            "type": "Integer",
            "description": " the limited number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "equals": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks the equality of two numbers regarding the imprecision of floats.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Number}"
          },
          {
            "name": "@param",
            "body": "y {Number}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}