{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/external/qooxdoo/framework/source/class/qx/event/handler/Appear.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__targets",
    "handler",
    "Appear",
    "__instances",
    "toHashCode",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "appear",
    "disappear",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "refresh",
    "all",
    "hash",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "ObjectRegistry",
    "targets",
    "$$displayed",
    "offsetWidth",
    "unregisterEvent",
    "legacyIe",
    "Environment",
    "get",
    "tracker",
    "self",
    "keys",
    "forEach",
    "elem",
    "undefined",
    "Utils",
    "then",
    "displayed",
    "evt",
    "createEvent",
    "dispatchEvent",
    "promise",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This class supports <code>appear</code> and <code>disappear</code> events\n * on DOM level.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Appear\",\n{\n  extend : qx.core.Object,\n  implement : [ qx.event.IEventHandler, qx.core.IDisposable ],\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager)\n  {\n    this.base(arguments);\n\n    this.__manager = manager;\n    this.__targets = {};\n\n    // Register\n    qx.event.handler.Appear.__instances[this.toHashCode()] = this;\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY : qx.event.Registration.PRIORITY_NORMAL,\n\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES :\n    {\n      appear : true,\n      disappear : true\n    },\n\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK : qx.event.IEventHandler.TARGET_DOMNODE,\n\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE : true,\n\n\n    /** @type {Map} Stores all appear manager instances */\n    __instances : {},\n\n\n    /**\n     * Refreshes all appear handlers. Useful after massive DOM manipulations e.g.\n     * through qx.html.Element.\n     *\n     */\n     refresh : function()\n     {\n       var all = this.__instances;\n       for (var hash in all) {\n         all[hash].refresh();\n       }\n     }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __manager : null,\n    __targets : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent : function(target, type) {},\n\n\n    // interface implementation\n    registerEvent : function(target, type, capture)\n    {\n      var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n      var targets = this.__targets;\n\n      if (targets && !targets[hash])\n      {\n        targets[hash] = target;\n        target.$$displayed = target.offsetWidth > 0;\n      }\n    },\n\n\n    // interface implementation\n    unregisterEvent : function(target, type, capture)\n    {\n      var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n      var targets = this.__targets;\n      if (!targets) {\n        return;\n      }\n\n      if (targets[hash]) {\n        delete targets[hash];\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method should be called by all DOM tree modifying routines\n     * to check the registered nodes for changes.\n     *\n     * @return {qx.Promise?} a promise, if one or more of the event handlers returned one \n     */\n    refresh : function()\n    {\n      var targets = this.__targets;\n\n      var legacyIe = qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9;\n\n      var tracker = {};\n      var self = this;\n      Object.keys(targets).forEach(function(hash) {\n        var elem = targets[hash];\n        if (elem === undefined) {\n          return;\n        }\n\n        qx.event.Utils.then(tracker, function() {\n          var displayed = elem.offsetWidth > 0;\n          if (!displayed && legacyIe) {\n            // force recalculation in IE 8. See bug #7872\n            displayed = elem.offsetWidth > 0;\n          }\n          if ((!!elem.$$displayed) !== displayed)\n          {\n            elem.$$displayed = displayed;\n\n            var evt = qx.event.Registration.createEvent(displayed ? \"appear\" : \"disappear\");\n            return self.__manager.dispatchEvent(elem, evt);\n          }\n        });\n      });\n      return tracker.promise;\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__manager = this.__targets = null;\n\n    // Deregister\n    delete qx.event.handler.Appear.__instances[this.toHashCode()];\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}