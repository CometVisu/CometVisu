{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/util/placement/DirectAxis.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_moveToEdgeAndAlign",
    "util",
    "placement",
    "AbstractAxis",
    "computeStart",
    "size",
    "target",
    "offsets",
    "areaSize",
    "position",
    "DirectAxis"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,8BAApB,EACA;AACEC,IAAAA,OAAO,EACP;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,mBAAmB,EAAGN,EAAE,CAACO,IAAH,CAAQC,SAAR,CAAkBC,YAAlB,CAA+BH,mBAdvD;;AAgBE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACII,MAAAA,YAAY,EAAG,sBAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AACjE,eAAO,KAAKT,mBAAL,CAAyBK,IAAzB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDE,QAAhD,CAAP;AACD;AArCH;AAFF,GADA;AAvBAf,EAAAA,EAAE,CAACO,IAAH,CAAQC,SAAR,CAAkBQ,UAAlB,CAA6Bb,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Places the object directly at the specified position. It is not moved if\n * parts of the object are outside of the axis' range.\n */\nqx.Bootstrap.define(\"qx.util.placement.DirectAxis\",\n{\n  statics :\n  {\n    /**\n     * Computes the start of the object by taking only the attachment and\n     * alignment into account. The object by be not fully visible.\n     *\n     * @param size {Integer} Size of the object to align\n     * @param target {Map} Location of the object to align the object to. This map\n     *   should have the keys <code>start</code> and <code>end</code>.\n     * @param offsets {Map} Map with all offsets on each side.\n     *   Comes with the keys <code>start</code> and <code>end</code>.\n     * @param position {String} Accepts the same values as the <code> position</code>\n     *   argument of {@link #computeStart}.\n     * @return {Integer} The computed start position of the object.\n     */\n    _moveToEdgeAndAlign : qx.util.placement.AbstractAxis._moveToEdgeAndAlign,\n\n    /**\n     * Computes the start of the object on the axis\n     *\n     * @param size {Integer} Size of the object to align\n     * @param target {Map} Location of the object to align the object to. This map\n     *   should have the keys <code>start</code> and <code>end</code>.\n     * @param offsets {Map} Map with all offsets on each side.\n     *   Comes with the keys <code>start</code> and <code>end</code>.\n     * @param areaSize {Integer} Size of the axis.\n     * @param position {String} Alignment of the object on the target. Valid values are\n     *   <ul>\n     *   <li><code>edge-start</code> The object is placed before the target</li>\n     *   <li><code>edge-end</code> The object is placed after the target</li>\n     *   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\n     *   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\n     *   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\n     *   </ul>\n     * @return {Integer} The computed start position of the object.\n     */\n    computeStart : function(size, target, offsets, areaSize, position) {\n      return this._moveToEdgeAndAlign(size, target, offsets, position);\n    }\n  }\n});"
  ]
}