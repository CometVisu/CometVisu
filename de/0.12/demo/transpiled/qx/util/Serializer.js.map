{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/util/Serializer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "toUriParameter",
    "object",
    "qxSerializer",
    "dateFormat",
    "result",
    "properties",
    "util",
    "PropertyUtil",
    "getAllProperties",
    "constructor",
    "name",
    "group",
    "undefined",
    "value",
    "lang",
    "String",
    "firstUp",
    "Type",
    "isArray",
    "isdataArray",
    "data",
    "IListData",
    "hasInterface",
    "i",
    "length",
    "valueAtI",
    "getItem",
    "__toUriParameter",
    "isDate",
    "format",
    "substring",
    "$$type",
    "classname",
    "core",
    "Object",
    "encValue",
    "encodeURIComponent",
    "toNativeObject",
    "getLength",
    "push",
    "Serializer",
    "returnValue",
    "locale",
    "LocalizedString",
    "toString",
    "isObject",
    "key",
    "toJson",
    "isString",
    "replace",
    "isRegExp"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ***********************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This is an util class responsible for serializing qooxdoo objects.\n *\n * @ignore(qx.data, qx.data.IListData)\n * @ignore(qx.locale, qx.locale.LocalizedString)\n */\nqx.Class.define(\"qx.util.Serializer\",\n{\n  statics :\n  {\n\n    /**\n     * Serializes the properties of the given qooxdoo object. To get the\n     * serialization working, every property needs to have a string\n     * representation because the value of the property will be concatenated to the\n     * serialized string.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes <ou want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toUriParameter : function(object, qxSerializer, dateFormat)\n    {\n      var result = \"\";\n      var properties = qx.util.PropertyUtil.getAllProperties(object.constructor);\n\n      for (var name in properties) {\n        // ignore property groups\n        if (properties[name].group != undefined) {\n          continue;\n        }\n        var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n\n        // handle arrays\n        if (qx.lang.Type.isArray(value)) {\n          var isdataArray = qx.data && qx.data.IListData &&\n            qx.Class.hasInterface(value && value.constructor, qx.data.IListData);\n          for (var i = 0; i < value.length; i++) {\n            var valueAtI = isdataArray ? value.getItem(i) : value[i];\n            result += this.__toUriParameter(name, valueAtI, qxSerializer);\n          }\n        } else if (qx.lang.Type.isDate(value) && dateFormat != null) {\n          result += this.__toUriParameter(\n            name, dateFormat.format(value), qxSerializer\n          );\n        } else {\n          result += this.__toUriParameter(name, value, qxSerializer);\n        }\n      }\n      return result.substring(0, result.length - 1);\n    },\n\n\n    /**\n     * Helper method for {@link #toUriParameter}. Check for qooxdoo objects\n     * and returns the serialized name value pair for the given parameter.\n     *\n     * @param name {String} The name of the value\n     * @param value {var} The value itself\n     * @param qxSerializer {Function?} The serializer for qooxdoo objects.\n     * @return {String} The serialized name value pair.\n     */\n    __toUriParameter : function(name, value, qxSerializer)\n    {\n\n      if (value && value.$$type == \"Class\") {\n        value = value.classname;\n      }\n\n      if (value && (value.$$type == \"Interface\" || value.$$type == \"Mixin\")) {\n        value = value.name;\n      }\n\n      if (value instanceof qx.core.Object && qxSerializer != null) {\n        var encValue = encodeURIComponent(qxSerializer(value));\n        if (encValue === undefined) {\n          var encValue = encodeURIComponent(value);\n        }\n      } else {\n        var encValue = encodeURIComponent(value);\n      }\n      return encodeURIComponent(name) + \"=\" + encValue + \"&\";\n    },\n\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a native\n     * object.\n     *\n     * @param object {qx.core.Object}\n     *   Any qooxdoo object\n     *\n     * @param qxSerializer {Function?}\n     *   Function used for serializing qooxdoo objects stored in the properties\n     *   of the object. Check for the type of classes you want to serialize\n     *   and return the serialized value. In all other cases, just return\n     *   nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {null|Array|String|Object}\n     *   The serialized object. Depending on the input qooxdoo object, the returning\n     *   type will vary.\n     */\n    toNativeObject : function(object, qxSerializer, dateFormat)\n    {\n      var result;\n\n      // null or undefined\n      if (object == null)\n      {\n        return null;\n      }\n\n      // data array\n      if (qx.data && qx.data.IListData && qx.Class.hasInterface(object.constructor, qx.data.IListData))\n      {\n        result = [];\n        for (var i = 0; i < object.getLength(); i++)\n        {\n          result.push(qx.util.Serializer.toNativeObject(\n            object.getItem(i), qxSerializer, dateFormat)\n          );\n        }\n\n        return result;\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object))\n      {\n        result = [];\n        for (var i = 0; i < object.length; i++)\n        {\n          result.push(qx.util.Serializer.toNativeObject(\n            object[i], qxSerializer, dateFormat)\n          );\n        }\n\n        return result;\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return object.classname;\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return object.name;\n      }\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object)\n      {\n        if (qxSerializer != null)\n        {\n          var returnValue = qxSerializer(object);\n\n          // if we have something returned, return that\n          if (returnValue != undefined)\n          {\n            return returnValue;\n          }\n\n          // continue otherwise\n        }\n\n        result = {};\n\n        var properties =\n          qx.util.PropertyUtil.getAllProperties(object.constructor);\n\n        for (var name in properties)\n        {\n          // ignore property groups\n          if (properties[name].group != undefined)\n          {\n            continue;\n          }\n\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result[name] = qx.util.Serializer.toNativeObject(\n            value, qxSerializer, dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // date objects with date format\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return dateFormat.format(object);\n      }\n\n      // localized strings\n      if (qx.locale && qx.locale.LocalizedString && object instanceof qx.locale.LocalizedString) {\n        return object.toString();\n      }\n\n      // JavaScript objects\n      if (qx.lang.Type.isObject(object))\n      {\n        result = {};\n\n        for (var key in object)\n        {\n          result[key] = qx.util.Serializer.toNativeObject(\n            object[key], qxSerializer, dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // all other stuff, including String, Date, RegExp\n      return object;\n    },\n\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a json object.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes <ou want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toJson : function(object, qxSerializer, dateFormat) {\n      var result = \"\";\n\n      // null or undefined\n      if (object == null) {\n        return \"null\";\n      }\n\n      // data array\n      if (qx.data && qx.data.IListData && qx.Class.hasInterface(object.constructor, qx.data.IListData)) {\n        result += \"[\";\n        for (var i = 0; i < object.getLength(); i++) {\n          result += qx.util.Serializer.toJson(object.getItem(i), qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object)) {\n        result += \"[\";\n        for (var i = 0; i < object.length; i++) {\n          result += qx.util.Serializer.toJson(object[i], qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return '\"' + object.classname + '\"';\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return '\"' + object.name + '\"';\n      }\n\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object) {\n        if (qxSerializer != null) {\n          var returnValue = qxSerializer(object);\n          // if we have something returned, return that\n          if (returnValue != undefined) {\n            return '\"' + returnValue + '\"';\n          }\n          // continue otherwise\n        }\n        result += \"{\";\n        var properties = qx.util.PropertyUtil.getAllProperties(object.constructor);\n        for (var name in properties) {\n          // ignore property groups\n          if (properties[name].group != undefined) {\n            continue;\n          }\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result += '\"' + name + '\":' + qx.util.Serializer.toJson(value, qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // localized strings\n      if (qx.locale && qx.locale.LocalizedString && object instanceof qx.locale.LocalizedString) {\n        object = object.toString();\n        // no return here because we want to have the string checks as well!\n      }\n\n      // date objects with formater\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return '\"' + dateFormat.format(object) + '\"';\n      }\n\n      // javascript objects\n      if (qx.lang.Type.isObject(object)) {\n        result += \"{\";\n        for (var key in object) {\n          result += '\"' + key + '\":' +\n                    qx.util.Serializer.toJson(object[key], qxSerializer, dateFormat) + \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // strings\n      if (qx.lang.Type.isString(object)) {\n        // escape\n        object = object.replace(/([\\\\])/g, '\\\\\\\\');\n        object = object.replace(/([\"])/g, '\\\\\"');\n        object = object.replace(/([\\r])/g, '\\\\r');\n        object = object.replace(/([\\f])/g, '\\\\f');\n        object = object.replace(/([\\n])/g, '\\\\n');\n        object = object.replace(/([\\t])/g, '\\\\t');\n        object = object.replace(/([\\b])/g, '\\\\b');\n\n        return '\"' + object + '\"';\n      }\n\n      // Date and RegExp\n      if (qx.lang.Type.isDate(object) || qx.lang.Type.isRegExp(object)) {\n        return '\"' + object + '\"';\n      }\n\n      // all other stuff\n      return object + \"\";\n    }\n  }\n});\n"
  ]
}