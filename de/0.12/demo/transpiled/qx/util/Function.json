{
  "className": "qx.util.Function",
  "packageName": "qx.util",
  "name": "Function",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 36,
        "column": 0
      },
      "end": {
        "line": 147,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n  http://qooxdoo.org\n  Copyright:\n    2012 - 2014 1&amp;1 Internet AG, Germany, http://www.1und1.de\n License:\n     MIT: https://opensource.org/licenses/MIT\n    See the LICENSE file in the project's top-level directory for details.\n Authors:\n Alexander Steitz (aback)\n Tobias Oberrauch (toberrauch)\n ======================================================================\n This class contains code based on the following work:\n Underscore.js\n    http://underscorejs.org\n    Version 1.5.2\n Copyright:\n    2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters &amp; Editors\n License:\n    MIT: http://www.opensource.org/licenses/mit-license.php\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>Utility module to give some support to work with functions.</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "debounce": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a debounced version of the given callback. The execution of the callback\n is delayed by the given delay and after no events were triggered anymore.\n This mechanism is very useful for event handling: only after a specified delay\n the event should be handled (e.g. at keyboard input by the user) to prevent flooding\n the handler with a large amounts of events.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} the callback which should be executed after the given delay\n if the wrapper method is *not* called during this delay.",
            "paramName": "callback",
            "description": " the callback which should be executed after the given delay\n if the wrapper method is *not* called during this delay.",
            "type": "qx.util.Function"
          },
          {
            "name": "@param",
            "body": "delay {Number} Delay in milliseconds",
            "paramName": "delay",
            "description": " Delay in milliseconds",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "immediate {Boolean?} whether to run the callback at the beginning and then debounce, default is <code>false</code>",
            "paramName": "immediate",
            "description": " whether to run the callback at the beginning and then debounce, default is <code>false</code>",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function} a wrapper function which <em>shields</em> the given callback function",
            "type": "qx.util.Function",
            "description": " a wrapper function which <em>shields</em> the given callback function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "throttle": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 145,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a throttled version of the given callback. The execution of the callback\n is throttled which means it is only executed in the given interval.\n This mechanism is very useful for event handling: only in specified intervals\n the event should be handled (e.g. at resize of the browser window) to prevent flooding\n the handler with a large amounts of events.\n As default the <code>leading</code> and <code>trailing</code> calls are executed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} the callback which should be executed in the given interval",
            "paramName": "callback",
            "description": " the callback which should be executed in the given interval",
            "type": "qx.util.Function"
          },
          {
            "name": "@param",
            "body": "interval {Number} Interval in milliseconds",
            "paramName": "interval",
            "description": " Interval in milliseconds",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "options {Map} the keys are <code>leading</code> and <code>trailing</code> to control the\n executing of the callback precisely. Default values are <code>true</code> for both options.",
            "paramName": "options",
            "description": " the keys are <code>leading</code> and <code>trailing</code> to control the\n executing of the callback precisely. Default values are <code>true</code> for both options.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function} a wrapper function which <em>shields</em> the given callback function",
            "type": "qx.util.Function",
            "description": " a wrapper function which <em>shields</em> the given callback function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}