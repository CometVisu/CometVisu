{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/client/source/class/cv/io/Client.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "backendName",
    "backendUrl",
    "cv",
    "io",
    "Client",
    "CLIENTS",
    "push",
    "backend",
    "loginSettings",
    "loggedIn",
    "callbackAfterLoggedIn",
    "context",
    "loginOnly",
    "backendNameAliases",
    "setBackend",
    "backends",
    "addresses",
    "initialAddresses",
    "filters",
    "user",
    "pass",
    "device",
    "headers",
    "statics",
    "TEST_MODE",
    "ERROR_CODES",
    "CONNECTION",
    "PROTOCOL_MISSING_VERSION",
    "PROTOCOL_INVALID_READ_RESPONSE",
    "PROTOCOL_INVALID_READ_RESPONSE_MISSING_I",
    "stopAll",
    "forEach",
    "client",
    "stop",
    "name",
    "baseURL",
    "transport",
    "resources",
    "login",
    "read",
    "write",
    "rrd",
    "maxConnectionAge",
    "maxDataAge",
    "maxRetries",
    "hooks",
    "resendHeaders",
    "undefined",
    "onClose",
    "oldValue",
    "doRequest",
    "getResourcePath",
    "beforeSend",
    "properties",
    "running",
    "check",
    "init",
    "event",
    "connected",
    "apply",
    "dataReceived",
    "currentTransport",
    "server",
    "nullable",
    "members",
    "session",
    "__lastError",
    "_applyConnected",
    "value",
    "setInitialAddresses",
    "newBackend",
    "assign",
    "transportFallback",
    "window",
    "EventSource",
    "substr",
    "getCurrentTransport",
    "LongPolling",
    "dispose",
    "setCurrentTransport",
    "Sse",
    "util",
    "ResponseParser",
    "PARSER",
    "json",
    "parser",
    "Json",
    "parse",
    "getBackend",
    "xhr",
    "headerName",
    "setRequestHeader",
    "subscribe",
    "startCommunication",
    "length",
    "connect",
    "callback",
    "request",
    "u",
    "p",
    "d",
    "handleLogin",
    "call",
    "getResponse",
    "args",
    "ev",
    "getTarget",
    "getResponseHeader",
    "getQueryString",
    "data",
    "prefix",
    "suffix",
    "getOwnPropertyNames",
    "key",
    "Array",
    "isArray",
    "join",
    "substring",
    "url",
    "options",
    "qs",
    "Uri",
    "appendParamsToUrl",
    "ajaxRequest",
    "Xhr",
    "listeners",
    "eventName",
    "qxEventName",
    "addListener",
    "set",
    "accept",
    "_onError",
    "send",
    "req",
    "serverErrorHandled",
    "code",
    "getStatus",
    "text",
    "getStatusText",
    "response",
    "getUrl",
    "time",
    "Date",
    "now",
    "setConnected",
    "fireDataEvent",
    "getLastError",
    "prototype",
    "slice",
    "arguments",
    "c",
    "s",
    "setServer",
    "setDataReceived",
    "handleSession",
    "setRunning",
    "abort",
    "buildRequest",
    "asString",
    "a",
    "f",
    "address",
    "ts",
    "getTime",
    "v",
    "restart",
    "full",
    "update",
    "record",
    "type",
    "showError",
    "message",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Client.js \n * \n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * The JavaScript library that implements the CometVisu protocol.\n * The Client handles all communication issues to supply the user\n * of this object with reliable realtime data.\n * It can be seen as the session layer (layer 5) according to the OSI\n * model.\n *\n * @author Christan Mayer\n * @author Tobias Bräutigam\n * @since 0.5.3 (initial contribution) 0.10.0+0.11.0 (major refactoring)\n *\n * @ignore($)\n */\nqx.Class.define('cv.io.Client', {\n  extend: qx.core.Object,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  /**\n   * @param backendName {String} name of the backend\n   * @param backendUrl {String} URL of the login resource\n   */\n  construct: function(backendName, backendUrl) {\n    this.base(arguments);\n    cv.io.Client.CLIENTS.push(this);\n    this.backend = {};\n    this.loginSettings = {\n      loggedIn: false,\n      callbackAfterLoggedIn: null,\n      context: null,\n      loginOnly: false // login only for backend configuration, do not start address subscription\n    };\n\n    // init default settings\n    if (cv.io.Client.backendNameAliases[backendName]) {\n      this.backendName = cv.io.Client.backendNameAliases[backendName];\n    } else {\n      this.backendName = backendName;\n    }\n\n    if (backendName && backendName !== 'default') {\n      if (typeof backendName === 'object') {\n        // override default settings\n        this.setBackend(backendName);\n      } else if (cv.io.Client.backends[backendName]) {\n        // merge backend settings into default backend\n        this.setBackend(cv.io.Client.backends[backendName]);\n      }\n    } else {\n      this.setBackend(cv.io.Client.backends['default']);\n    }\n\n    this.backendUrl = backendUrl;\n\n    this.addresses = [];\n    this.initialAddresses = [];\n    this.filters = [];\n    this.user = '';\n    this.pass = '';\n    this.device = '';\n    this.headers = {};\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    CLIENTS: [],\n    TEST_MODE: false,\n    ERROR_CODES: {\n      CONNECTION: 1,\n      PROTOCOL_MISSING_VERSION: 10,\n      PROTOCOL_INVALID_READ_RESPONSE: 50,\n      PROTOCOL_INVALID_READ_RESPONSE_MISSING_I: 51\n    },\n\n    /**\n     * Stop all running clients\n     */\n    stopAll: function() {\n      this.CLIENTS.forEach(function(client) {\n        client.stop();\n      });\n    },\n\n    // used for backwards compability\n    backendNameAliases: {\n      'cgi-bin': 'default',\n      'oh': 'openhab',\n      'oh2': 'openhab2'\n    },\n    // setup of the different known backends (openhab2 configures itself by sending the config\n    // with the login response so no defaults are defined here\n    backends: {\n      'default': {\n        name: 'default',\n        baseURL: '/cgi-bin/',\n        transport: 'long-polling',\n        resources: {\n          login: 'l',\n          read: 'r',\n          write: 'w',\n          rrd: 'rrdfetch'\n        },\n        maxConnectionAge: 60 * 1000, // in milliseconds - restart if last read is older\n        maxDataAge: 3200 * 1000, // in milliseconds - reload all data when last successful\n        // read is older (should be faster than the index overflow at max data rate,\n        // i.e. 2^16 @ 20 tps for KNX TP)\n        maxRetries: 3, // amount of connection retries for temporary server failures\n        hooks: {}\n      },\n      'openhab': {\n        name: 'openHAB',\n        baseURL: '/services/cv/',\n        // keep the e.g. atmosphere tracking-id if there is one\n        resendHeaders: {\n          'X-Atmosphere-tracking-id': undefined\n        },\n        // fixed headers that are send everytime\n        headers: {\n          'X-Atmosphere-Transport': 'long-polling'\n        },\n        hooks: {\n          onClose: function () {\n            // send an close request to the openHAB server\n            var oldValue = this.headers[\"X-Atmosphere-Transport\"];\n            this.headers[\"X-Atmosphere-Transport\"] = \"close\";\n            this.doRequest(this.getResourcePath('read'), null, null, null, {\n              beforeSend: this.beforeSend\n            });\n            if (oldValue !== undefined) {\n              this.headers[\"X-Atmosphere-Transport\"] = oldValue;\n            } else {\n              delete this.headers[\"X-Atmosphere-Transport\"];\n            }\n          }\n        }\n      },\n      \"openhab2\": {\n        name: \"openHAB2\",\n        baseURL: \"/rest/cv/\",\n        transport: \"sse\"\n      }\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    /**\n     * Is the communication running at the moment?\n     */\n    running : {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRunning\"\n    },\n\n    /**\n     * Is the client connected to a backend at the moment?\n     */\n    connected: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeConnected\",\n      apply: \"_applyConnected\"\n    },\n\n    /**\n     * needed to be able to check if the incoming update is the initial answer or a successing update\n     */\n    dataReceived : {\n      check: \"Boolean\",\n      init: false\n    },\n    /**\n     * the currently used transport layer\n     */\n    currentTransport: {\n      init: null\n    },\n\n    /**\n     * The server we are currently speaking to (read from the login response)\n     */\n    server: {\n      check: \"String\",\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    backend: null,\n    backendName: null,\n    backendUrl: null,\n    addresses: null, // the subscribed addresses\n    initialAddresses: null, // the addresses which should be loaded before the subscribed addresses\n    filters: null, // the subscribed filters\n    user : null, // the current user\n    pass : null, // the current password\n    device : null, // the current device ID\n    session: null, // current session ID\n\n    loginSettings : null,\n    headers: null,\n    __lastError: null,\n\n    // property apply\n    _applyConnected: function(value) {\n      if (value === true) {\n        this.__lastError = null;\n      }\n    },\n\n    setInitialAddresses: function(addresses) {\n      this.initialAddresses = addresses;\n    },\n\n    setBackend: function(newBackend) {\n      // override default settings\n      var backend = Object.assign({}, cv.io.Client.backends['default'], newBackend);\n      this.backend = backend;\n      if (backend.transport === 'sse' && backend.transportFallback) {\n        if (window.EventSource === undefined) {\n          // browser does not support EventSource object => use fallback\n          // transport + settings\n          Object.assign(backend, backend.transportFallback);\n        }\n      }\n      // add trailing slash to baseURL if not set\n      if (backend.baseURL && backend.baseURL.substr(-1) !== \"/\") {\n        backend.baseURL += \"/\";\n      }\n      var currentTransport = this.getCurrentTransport();\n      switch(backend.transport) {\n        case \"long-polling\":\n          if (!(currentTransport instanceof cv.io.transport.LongPolling)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.LongPolling(this));\n          }\n          break;\n        case \"sse\":\n          if (!(currentTransport instanceof cv.io.transport.Sse)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.Sse(this));\n          }\n          break;\n      }\n      if (this.backend.name === \"openHAB\") {\n        // use the fallback parser\n        qx.util.ResponseParser.PARSER.json = cv.io.parser.Json.parse;\n      }\n    },\n\n    getBackend: function() {\n      return this.backend;\n    },\n\n    /**\n     * manipulates the header of the current ajax query before it is been send to the server\n     */\n    beforeSend : function (xhr) {\n      for (var headerName in this.resendHeaders) {\n        if (this.resendHeaders[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.resendHeaders[headerName]);\n        }\n      }\n      for (headerName in this.headers) {\n        if (this.headers[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.headers[headerName]);\n        }\n      }\n    },\n\n    /* return the relative path to a resource on the currently used backend\n     *\n     *\n     *\n     * @param name\n     *          {String} Name of the resource (e.g. login, read, write, rrd)\n     * @return {String} relative path to the resource\n     */\n    getResourcePath : function (name) {\n      return this.backend.baseURL + this.backend.resources[name];\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter. The second parameter\n     * (filter) is optional\n     *\n     * @param addresses {Array?} addresses to subscribe to\n     * @param filters {Array?} Filters\n     *\n     */\n    subscribe : function (addresses, filters) {\n      var startCommunication = !this.addresses.length; // start when\n      // addresses were\n      // empty\n      this.addresses = addresses ? addresses : [];\n      this.filters = filters ? filters : [];\n\n      if (!addresses.length) {\n        this.stop(); // stop when new addresses are empty\n      }\n      else if (startCommunication) {\n        if (this.loginSettings.loginOnly === true) {\n          // connect to the backend\n          this.getCurrentTransport().connect();\n          this.loginSettings.loginOnly = false;\n        }\n        else {\n          this.login(false);\n        }\n      }\n    },\n\n    /**\n     * This function starts the communication by a login and then runs the\n     * ongoing communication task\n     *\n     * @param loginOnly {Boolean} if true only login and backend configuration, no subscription\n     *                            to addresses (default: false)\n     * @param callback {Function} call this function when login is done\n     * @param context {Object} context for the callback (this)\n     *\n     */\n    login : function (loginOnly, callback, context) {\n      if (!this.loginSettings.loggedIn) {\n        this.loginSettings.loginOnly = !!loginOnly;\n        this.loginSettings.callbackAfterLoggedIn = callback;\n        this.loginSettings.context = context;\n        var request = {};\n        if ('' !== this.user) {\n          request.u = this.user;\n        }\n        if ('' !== this.pass) {\n          request.p = this.pass;\n        }\n        if ('' !== this.device) {\n          request.d = this.device;\n        }\n        this.doRequest(this.backendUrl ? this.backendUrl : this.getResourcePath(\"login\"),\n          request, this.handleLogin, this);\n      } else if (this.loginSettings.callbackAfterLoggedIn) {\n        // call callback immediately\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * Get the json response from the parameter received from the used XHR transport\n     */\n    getResponse: qx.core.Environment.select(\"cv.xhr\", {\n      \"jquery\": function(args) {\n        var data = args[0];\n        if (data && $.type(data) === \"string\") {\n          data = cv.io.parser.Json.parse(data);\n        }\n        return data;\n      },\n\n      \"qx\": function(args) {\n        var ev = args[0];\n        if (!ev) { return null; }\n        var json = ev.getTarget().getResponse();\n        if (!json) { return null; }\n        if (typeof json === 'string') {\n          json = cv.io.parser.Json.parse(json);\n        }\n        return json;\n      }\n    }),\n\n    getResponseHeader: qx.core.Environment.select(\"cv.xhr\", {\n      \"jquery\": function (args, name) {\n        return args[2].getResponseHeader(name);\n      },\n      \"qx\": function (args, name) {\n        if (!args[0]) {\n          return null;\n        }\n        return args[0].getTarget().getResponseHeader(name);\n      }\n    }),\n\n    getQueryString: function(data) {\n      var prefix = \"\";\n      var suffix = \"\";\n      if (data) {\n        Object.getOwnPropertyNames(data).forEach(function (key) {\n          if (key === \"i\" || key === \"t\") {\n            prefix += key + \"=\" + data[key] + \"&\";\n          } else if (Array.isArray(data[key])) {\n            suffix += key + \"=\" + data[key].join(\"&\" + key + \"=\") + \"&\";\n          } else {\n            suffix += key + \"=\" + data[key] + \"&\";\n          }\n        });\n        if (suffix.length) {\n          suffix = suffix.substring(0, suffix.length-1);\n        } else if (prefix.length) {\n          prefix = prefix.substring(0, prefix.length-1);\n        }\n      }\n      return prefix+suffix;\n    },\n\n    /**\n     * Creates an XHR request. The request type depends von the \"cv.xhr\" environment setting\n     * (currently \"qx\" and \"jquery\" are supported)\n     * @param url {String} URI\n     * @param data {Map} request data\n     * @param callback {Function} success callback\n     * @param context {Object} context fot the callback\n     * @return {qx.io.request.Xhr|jQuery}\n     */\n    doRequest: qx.core.Environment.select(\"cv.xhr\", {\n      \"jquery\": function(url, data, callback, context, options) {\n        var qs = \"\";\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var config = {\n          url         : url,\n          dataType    : 'json',\n          context     : context,\n          success     : callback\n        };\n        if (options) {\n          if (options.listeners) {\n            config = $.extend(config, options.listeners);\n            delete options.listeners;\n          }\n        }\n        config = $.extend(config, options || {});\n        var request = new cv.io.request.Jquery(config);\n        request.send();\n        return request;\n      },\n      \"qx\": function(url, data, callback, context, options) {\n        // append data to URL\n        var qs = \"\";\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var ajaxRequest = new qx.io.request.Xhr(url);\n        if (options) {\n          if (options.beforeSend) {\n            this.beforeSend(ajaxRequest);\n            delete options.beforeSend;\n          }\n          if (options.listeners) {\n            Object.getOwnPropertyNames(options.listeners).forEach(function(eventName) {\n              var qxEventName = 'error' !== eventName ? eventName : 'statusError';\n              ajaxRequest.addListener(qxEventName, options.listeners[eventName], context);\n            });\n            delete options.listeners;\n          }\n        }\n        ajaxRequest.set(Object.assign({\n          accept: \"application/json\"\n        }, options || {}));\n        if (callback) {\n          ajaxRequest.addListener(\"success\", callback, context);\n        }\n        ajaxRequest.addListener(\"statusError\", this._onError, this);\n        ajaxRequest.send();\n        return ajaxRequest;\n      }\n    }),\n\n    /**\n     * Handle errors from qooxdoos XHR request\n     * @param ev {Event}\n     */\n    _onError: function(ev) {\n      var req = ev.getTarget();\n      if(req.serverErrorHandled) {\n        return; // ignore error when already handled\n      }\n      this.__lastError = {\n        code: req.getStatus(),\n        text: req.getStatusText(),\n        response: req.getResponse(),\n        url: req.getUrl(),\n        time: Date.now()\n      };\n      this.setConnected(false);\n      this.fireDataEvent(\"changeConnected\", false);\n    },\n\n    /**\n     * Get the last recorded error\n     *\n     * @return {{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}\n     */\n    getLastError: function() {\n      return this.__lastError;\n    },\n\n    /**\n     * Handles login response, applies backend configuration if send by\n     * backend and forwards to the configurated transport handleSession\n     * function\n     *\n     * Parameter vary dependent from the XHR type used\n     * qx (Qooxdoo):\n     *   ev {Event} the 'success' event from the XHR request\n     *\n     * jQuery:\n     *   data {Object} The JSON data returned from the server\n     *   textStatus {String} a string describing the status\n     *   request {Object} the jqXHR object\n     */\n    handleLogin : function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      var json = this.getResponse(args);\n      // read backend configuration if send by backend\n      if (json.c) {\n        this.setBackend(Object.assign(this.getBackend(), json.c));\n      }\n      this.session = json.s || \"SESSION\";\n      this.setServer(this.getResponseHeader(args, \"Server\"));\n\n      this.setDataReceived(false);\n      if (this.loginSettings.loginOnly) {\n        this.getCurrentTransport().handleSession(args, false);\n      } else {\n        this.getCurrentTransport().handleSession(args, true);\n      }\n      this.loginSettings.loggedIn = true;\n      if (this.loginSettings.callbackAfterLoggedIn) {\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * This function stops an ongoing connection\n     *\n     */\n    stop : function () {\n      this.setRunning(false);\n      if (this.getCurrentTransport().abort) {\n        this.getCurrentTransport().abort();\n      }\n      this.loginSettings.loggedIn = false;\n    },\n\n    /**\n     * Build the URL part that contains the addresses and filters\n     *\n     * @param addresses {Array}\n     * @return {Map}\n     */\n    buildRequest : function (addresses, asString) {\n      if (asString === true) {\n        // return as query string\n        var qs = \"s=\"+this.session;\n        addresses = addresses ? addresses : this.addresses;\n        qs += \"&a=\"+addresses.join(\"&a=\");\n        if (this.filters.length) {\n          qs += \"&f=\"+this.filters.join(\"&f=\");\n        }\n        return qs;\n      } else {\n        var data = {\n          s: this.session\n        };\n        addresses = addresses || this.addresses;\n        if (addresses && addresses.length) {\n          data.a = addresses;\n        }\n        if (this.filters.length) {\n          data.f = this.filters;\n        }\n        return data;\n      }\n    },\n\n    /**\n     * This function sends a value\n     * @param address {String} address to send the value to\n     * @param value {String} value to send\n     *\n     */\n    write : function (address, value) {\n      /**\n       * ts is a quirk to fix wrong caching on some Android-tablets/Webkit;\n       * could maybe selective based on UserAgent but isn't that costly on writes\n       */\n      var ts = new Date().getTime();\n      this.doRequest(this.getResourcePath(\"write\"), {\n        s: this.session,\n        a: address,\n        v: value,\n        ts: ts\n      }, null, null, {\n        accept: \"application/json, text/javascript, */*; q=0.01\"\n      });\n    },\n\n    /**\n     * Restart the connection\n     */\n    restart: function(full) {\n      this.getCurrentTransport().restart(full);\n    },\n\n    update: function(json) {}, // jshint ignore:line\n\n    /**\n     * Can be overridden to record client communication with backend\n     * @param type {String} type of event to record\n     * @param data {Object} data to record\n     */\n    record: function(type, data) {}, // jshint ignore:line\n\n    /**\n     * Can be overridden to provide an error handler for client errors\n     * @param type {Number} one of cv.io.Client.ERROR_CODES\n     * @param message {String} detailed error message\n     * @param args\n     */\n    showError: function(type, message, args) {} // jshint ignore:line\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this.stop();\n  }\n});\n"
  ]
}