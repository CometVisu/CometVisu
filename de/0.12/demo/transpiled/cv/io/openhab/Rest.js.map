{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/io/openhab/Rest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "backendName",
    "backendUrl",
    "initialAddresses",
    "_backendName",
    "_backendUrl",
    "__groups",
    "__memberLookup",
    "properties",
    "connected",
    "check",
    "init",
    "event",
    "server",
    "nullable",
    "members",
    "__lastError",
    "__token",
    "getBackend",
    "setInitialAddresses",
    "addresses",
    "getResourcePath",
    "name",
    "map",
    "src",
    "url",
    "params",
    "start",
    "endTime",
    "end",
    "__convertTimes",
    "Date",
    "startTime",
    "match",
    "exec",
    "amount",
    "parseInt",
    "interval",
    "setTime",
    "getTime",
    "test",
    "d",
    "push",
    "toISOString",
    "join",
    "time",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "response",
    "data",
    "newRrd",
    "Array",
    "length",
    "j",
    "l",
    "parseFloat",
    "state",
    "authorize",
    "req",
    "setRequestHeader",
    "createAuthorizedRequest",
    "method",
    "request",
    "Xhr",
    "__isActive",
    "type",
    "subscribe",
    "filters",
    "addListener",
    "e",
    "getTarget",
    "res",
    "getResponse",
    "update",
    "forEach",
    "entry",
    "isArray",
    "active",
    "obj",
    "hasOwnProperty",
    "send",
    "running",
    "eventSource",
    "EventSource",
    "addEventListener",
    "handleMessage",
    "bind",
    "handleError",
    "onerror",
    "error",
    "setConnected",
    "onopen",
    "debug",
    "payload",
    "JSON",
    "parse",
    "item",
    "topic",
    "split",
    "change",
    "value",
    "groupNames",
    "groupName",
    "group",
    "keys",
    "memberName",
    "member",
    "write",
    "address",
    "setRequestData",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "username",
    "btoa",
    "password",
    "setServer",
    "getResponseHeader",
    "call",
    "getLastError",
    "restart",
    "full",
    "console",
    "log",
    "json",
    "record",
    "showError",
    "message",
    "args",
    "hasProvider",
    "includes",
    "getProviderUrl",
    "getProviderConvertFunction",
    "result",
    "element",
    "label",
    "hints",
    "transform",
    "toLowerCase",
    "openhab",
    "Rest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Rest.js\n *\n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * openHAB Rest client, that uses the native openHAB REST-API directly and does not\n * need the openHAB-cometvisu binding to be installed\n */\nqx.Class.define('cv.io.openhab.Rest', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (backendName, backendUrl) {\n    this.base(arguments);\n    this.initialAddresses = [];\n    this._backendName = backendName;\n    this._backendUrl = backendUrl || \"/rest\";\n    this.__groups = {};\n    this.__memberLookup = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n\n    connected: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeConnected\"\n    },\n\n    server: {\n      check: \"String\",\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastError: null,\n    _backendName: null,\n    _backendUrl: null,\n    __token: null,\n    __groups: null,\n    __memberLookup: null,\n\n    getBackend: function () {\n      return {};\n    },\n\n    // not used / needed in this client\n    setInitialAddresses: function(addresses) {\n    },\n\n    getResourcePath : function (name, map) {\n      if (name === 'charts' && map && map.src) {\n        let url = this._backendUrl + \"persistence/items/\" + map.src;\n        const params = [];\n        if (map.start) {\n          let endTime = map.end ? this.__convertTimes(map.end) : new Date();\n          let startTime = new Date();\n          const match = /^end-([\\d]*)([\\w]+)$/.exec(map.start);\n          if (match) {\n            const amount = parseInt(match[1]) || 1;\n            let interval = 0;\n            switch (match[2]) {\n              case 'second':\n                interval = 1000;\n                break;\n              case 'minute':\n                interval = 60000;\n                break;\n              case 'hour':\n                interval = 60 * 60000;\n                break;\n              case 'day':\n                interval = 24 * 60 * 60000;\n                break;\n              case 'month':\n                interval = 30 * 24 * 60 * 60000;\n                break;\n              case 'year':\n                interval = 365 * 24 * 60 * 60000;\n                break;\n            }\n            startTime.setTime(endTime.getTime() - (amount * interval));\n          } else if (/^[\\d]+$/.test(map.start)) {\n            const d = new Date();\n            d.setTime(parseInt(map.start) * 1000);\n          }\n\n          params.push(\"starttime=\" + startTime.toISOString());\n          params.push(\"endtime=\" + endTime.toISOString());\n        }\n\n        url += \"?\" + params.join(\"&\");\n        return url;\n      }\n      return null;\n    },\n\n    __convertTimes: function (time) {\n      if (time === \"now\") {\n        return new Date();\n      } else if (/^[\\d]+$/.test(time)) {\n        let d = new Date();\n        d.setTime(parseInt(time) * 1000);\n      } else {\n        return null;\n      }\n    },\n\n    hasCustomChartsDataProcessor : function () {\n      return true;\n    },\n\n    processChartsData : function (response) {\n      const data = response.data;\n      const newRrd = new Array(data.length);\n      for (let j = 0, l = data.length; j < l; j++) {\n        newRrd[j] = [data[j].time, parseFloat(data[j].state)];\n      }\n      return newRrd;\n    },\n\n    /**\n     * Auth basic authentication header to request\n     * @param req {qx.io.request.Xhr}\n     * @private\n     */\n    authorize: function (req) {\n      if (this.__token) {\n        req.setRequestHeader(\"Authorization\", this.__token);\n      }\n    },\n\n    /**\n     * Creates an authorized request to the backend with a relative path\n     * @param url {String?} appended to the backends base path\n     * @param method {String?} HTTP method type (GET is the default)\n     * @return A XHR request {qx.io.request.Xhr}\n     */\n    createAuthorizedRequest: function (url, method) {\n      const req = new qx.io.request.Xhr(this._backendUrl + (url || \"\"), method);\n      this.authorize(req);\n      return req;\n    },\n\n    __isActive: function (type, state) {\n      switch (type) {\n        case \"Decimal\":\n        case \"Percent\":\n        case \"Number\":\n        case \"Dimmer\":\n          return parseInt(state) > 0;\n\n        case \"Rollershutter\":\n          return state === \"0\";\n\n        case \"Contact\":\n          return state === \"OPENED\";\n\n        case \"OnOff\":\n        case \"Switch\":\n          return state === \"ON\";\n\n        default:\n          return null;\n      }\n    },\n\n    subscribe : function (addresses, filters) {\n      // send first request to get all states once\n      const req = this.createAuthorizedRequest(\"items?fields=name,state,members,type&recursive=true\");\n      req.addListener(\"success\", function(e) {\n        const req = e.getTarget();\n\n        const res = req.getResponse();\n        const update = {};\n        res.forEach(function(entry) {\n          if (entry.members && Array.isArray(entry.members)) {\n            // this is a group\n            let active = 0;\n            const map = {};\n            entry.members.forEach(obj => {\n              map[obj.name] = {type: obj.type, state: obj.state};\n              if (this.__isActive(obj.type, obj.state)) {\n                active++;\n              }\n              if (!this.__memberLookup.hasOwnProperty(obj.name)) {\n                this.__memberLookup[obj.name] = [entry.name];\n              } else {\n                this.__memberLookup[obj.name].push(entry.name);\n              }\n              return map;\n            });\n            this.__groups[entry.name] = {\n              members: map,\n              active: active\n            };\n            update[\"number:\" + entry.name] = active;\n          }\n          update[entry.name] = entry.state;\n        }, this);\n        this.update(update);\n      }, this);\n      // Send request\n      req.send();\n\n      // create sse session\n      this.running = true;\n      this.eventSource = new EventSource(this._backendUrl + \"events?topics=openhab/items/*/statechanged\");\n\n      // add default listeners\n      this.eventSource.addEventListener('message', this.handleMessage.bind(this), false);\n      this.eventSource.addEventListener('error', this.handleError.bind(this), false);\n      // add additional listeners\n      //Object.getOwnPropertyNames(this.__additionalTopics).forEach(this.__addRecordedEventListener, this);\n      this.eventSource.onerror = function () {\n        this.error(\"connection lost\");\n        this.setConnected(false);\n      }.bind(this);\n      this.eventSource.onopen = function () {\n        this.debug(\"connection established\");\n        this.setConnected(true);\n      }.bind(this);\n    },\n\n    handleMessage: function(payload) {\n      if (payload.type === \"message\") {\n        const data = JSON.parse(payload.data);\n        if (data.type === \"ItemStateChangedEvent\" || data.type === \"GroupItemStateChangedEvent\") {\n          //extract item name from topic\n          const update = {}\n          const item = data.topic.split(\"/\")[2];\n          const change = JSON.parse(data.payload);\n          update[item] = change.value;\n          // check if this Item is part of any group\n          if (this.__memberLookup.hasOwnProperty(item)) {\n            const groupNames = this.__memberLookup[item];\n            groupNames.forEach(groupName => {\n              const group = this.__groups[groupName];\n              let active = 0;\n              group.members[item].value = change.value;\n              Object.keys(group.members).forEach(memberName => {\n                const member = group.members[memberName];\n                if (this.__isActive(member.type, member.value)) {\n                  active++;\n                }\n              });\n              group.active = active;\n              update[\"number:\" + groupName] = active;\n            })\n\n          }\n          this.update(update);\n        }\n      }\n    },\n\n    write: function (address, value) {\n      const req = this.createAuthorizedRequest(\"items/\" + address, \"POST\");\n      req.setRequestHeader(\"Content-Type\", \"text/plain\");\n      req.setRequestData(value);\n      req.send();\n    },\n\n    handleError: function (error) {\n      this.error(error);\n    },\n\n    login : function (loginOnly, credentials, callback, context) {\n      if (credentials && credentials.username) {\n        // just saving the credentials for later use as we are using basic authentication\n        this.__token = \"Basic \" + btoa(credentials.username + \":\" + (credentials.password || \"\"));\n      }\n      // no login needed we just do a request to the if the backend is reachable\n      const req = this.createAuthorizedRequest();\n      req.addListener(\"success\", function(e) {\n        const req = e.getTarget();\n        this.setServer(req.getResponseHeader(\"Server\"));\n        if (callback) {\n          callback.call(context);\n        }\n      }, this);\n      // Send request\n      req.send();\n    },\n\n    getLastError: function() {\n      return this.__lastError;\n    },\n    restart: function(full) {\n      console.log(\"Not implemented\");\n    },\n\n    update: function(json) {}, // jshint ignore:line\n    record: function(type, data) {},\n    showError: function(type, message, args) {},\n\n    hasProvider: function (name) {\n      return [\"addresses\", \"rrd\"].includes(name);\n    },\n    getProviderUrl: function (name) {\n      switch (name) {\n        case \"addresses\":\n          return this._backendUrl + \"items?fields=name,type,label\"\n        case \"rrd\":\n          return this._backendUrl + \"persistence/items\"\n        default:\n          return null;\n      }\n    },\n    getProviderConvertFunction : function (name) {\n      switch (name) {\n        case \"addresses\":\n          return function (result) {\n            const data = {};\n            result.forEach(element => {\n              const type = element.type ? element.type.split(\":\")[0] : \"\";\n              if (!data.hasOwnProperty(type)) {\n                data[type] = [];\n              }\n              const entry = {\n                value: element.name,\n                label: element.label || element.name\n              }\n              if (type) {\n                entry.hints = [\n                  {\n                    transform: \"OH:\" + type.toLowerCase()\n                  }\n                ];\n              }\n              data[type].push(entry);\n            });\n            return data;\n          }\n        case \"rrd\":\n          return function (result) {\n            return result.map(element => {\n              return {value: element, label: element};\n            });\n          }\n        default:\n          return null;\n      }\n    }\n  }\n});\n"
  ]
}