{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/client/source/class/cv/io/transport/Sse.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "client",
    "__additionalTopics",
    "members",
    "running",
    "sessionId",
    "eventSource",
    "handleSession",
    "args",
    "connect",
    "json",
    "getResponse",
    "s",
    "version",
    "v",
    "split",
    "parseInt",
    "error",
    "setDataReceived",
    "EventSource",
    "util",
    "Uri",
    "appendParamsToUrl",
    "getResourcePath",
    "buildRequest",
    "addEventListener",
    "handleMessage",
    "bind",
    "handleError",
    "getOwnPropertyNames",
    "forEach",
    "__addRecordedEventListener",
    "onerror",
    "setConnected",
    "onopen",
    "debug",
    "e",
    "record",
    "data",
    "JSON",
    "parse",
    "d",
    "update",
    "dispatchTopicMessage",
    "topic",
    "message",
    "entry",
    "call",
    "subscribe",
    "callback",
    "context",
    "push",
    "isConnectionRunning",
    "readyState",
    "CLOSED",
    "OPEN",
    "restart",
    "doFullReload",
    "abort",
    "close",
    "cv",
    "io",
    "transport",
    "Sse"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Sse.js \n * \n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @ignore(EventSource)\n */\nqx.Class.define('cv.io.transport.Sse', {\n  extend: qx.core.Object,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  /**\n   *\n   * @param client {cv.io.Client}\n   */\n  construct: function(client) {\n    this.client = client;\n    this.__additionalTopics = {};\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n\n    running: false,\n    sessionId: null,\n    client: null,\n    eventSource: null,\n    __additionalTopics: null,\n    /**\n     * This function gets called once the communication is established\n     * and session information is available\n     *\n     * @param args {Array} arguments from the XHR response callback\n     * @param connect {Boolean} whether to start the connection or not\n     */\n    handleSession: function (args, connect) {\n      var json = this.client.getResponse(args);\n      this.sessionId = json.s;\n      this.version = json.v.split('.', 3);\n\n      if (0 < parseInt(this.version[0]) || 1 < parseInt(this.version[1])) {\n        this.error('ERROR CometVisu Client: too new protocol version (' + json.v + ') used!');\n      }\n      if (connect) {\n        this.connect();\n      }\n    },\n\n    /**\n     * Establish the SSE connection\n     */\n    connect: function () {\n      // send first request\n      this.running = true;\n      this.client.setDataReceived(false);\n      this.eventSource = new EventSource(qx.util.Uri.appendParamsToUrl(\n        this.client.getResourcePath(\"read\"),\n        this.client.buildRequest(null, true))\n      );\n      // add default listeners\n      this.eventSource.addEventListener('message', this.handleMessage.bind(this), false);\n      this.eventSource.addEventListener('error', this.handleError.bind(this), false);\n      // add additional listeners\n      Object.getOwnPropertyNames(this.__additionalTopics).forEach(this.__addRecordedEventListener, this);\n      this.eventSource.onerror = function () {\n        this.error(\"connection lost\");\n        this.client.setConnected(false);\n      }.bind(this);\n      this.eventSource.onopen = function () {\n        this.debug(\"connection established\");\n        this.client.setConnected(true);\n      }.bind(this);\n    },\n\n    /**\n     * Handle messages send from server as Server-Sent-Event\n     */\n    handleMessage: function (e) {\n      this.client.record(\"read\", e.data);\n      var json = JSON.parse(e.data);\n      var data = json.d;\n      this.client.update(data);\n      this.client.setDataReceived(true);\n    },\n\n    dispatchTopicMessage: function(topic, message) {\n      this.client.record(topic, message);\n      if (this.__additionalTopics[topic]) {\n        this.__additionalTopics[topic].forEach(function(entry) {\n          entry[0].call(entry[1], message);\n        });\n      }\n    },\n\n    /**\n     * Subscribe to SSE events of a certain topic\n     * @param topic {String}\n     * @param callback {Function}\n     * @param context {Object}\n     */\n    subscribe: function(topic, callback, context) {\n      if (!this.__additionalTopics[topic]) {\n        this.__additionalTopics[topic] = [];\n      }\n      this.__additionalTopics[topic].push([callback, context]);\n      if (this.isConnectionRunning()) {\n        this.__addRecordedEventListener(topic);\n      }\n    },\n\n    __addRecordedEventListener: function(topic) {\n      this.debug(\"subscribing to topic \"+topic);\n      this.eventSource.addEventListener(topic, function(e) {\n        this.dispatchTopicMessage(topic, e);\n      }.bind(this), false);\n    },\n\n    /**\n     * Handle errors\n     */\n    handleError: function (e) {\n      if (e.readyState === EventSource.CLOSED) {\n        // Connection was closed.\n        this.running = false;\n        // reconnect\n        this.connect();\n      }\n    },\n\n    /**\n     * Check if the connection is still running.\n     *\n     * @return {Boolean}\n     */\n    isConnectionRunning: function () {\n      return this.eventSource && this.eventSource.readyState === EventSource.OPEN;\n    },\n\n    /**\n     * Restart the read request\n     */\n    restart: function (doFullReload) {\n      if (doFullReload || this.eventSource.readyState === EventSource.CLOSED) {\n        this.abort();\n        this.connect();\n      }\n    },\n\n    /**\n     * Abort the read request properly\n     *\n     *\n     */\n    abort: function () {\n      if (this.isConnectionRunning() === true) {\n        this.eventSource.close();\n      }\n    }\n  }\n});"
  ]
}