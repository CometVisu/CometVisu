{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/IconHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__db",
    "cv",
    "IconConfig",
    "DB",
    "members",
    "insert",
    "name",
    "arguments",
    "uri",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "window",
    "get",
    "undefined",
    "all",
    "split",
    "length",
    "shift",
    "getURI",
    "i",
    "apply",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "getIconElement",
    "icon",
    "classes",
    "iconclass",
    "getIconText",
    "fillIcons",
    "array",
    "forEach",
    "IconTools",
    "fillRecoloredIcon",
    "list",
    "keys",
    "debug",
    "IconHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* IconHandler.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @author Christian Mayer\n * @since 2012\n */\n\n/**\n * The object \"icon\" contains the whole API necessary to handle the icons.\n *\n */\nqx.Class.define('cv.IconHandler', {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function () {\n    this.__db = cv.IconConfig.DB;\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    /**\n     * Internal database of the known icons.\n     * Initially filled with the default icons.\n     */\n    __db: null,\n\n    /**\n     * Insert or overwrite one or many icons into the database. The parameter\n     * might be a full hash of icon definitions or a single one consisting out of\n     * a name and a URI path. Optional further parameters are a \"type\" and a\n     * flavour.\n     */\n    insert: function () {\n      var name = arguments[0];\n      var uri = arguments[1];\n      var type = arguments[2] || '*';\n      var flavour = arguments[3] || '*';\n      var color = arguments[4] || '*';\n      var styling = arguments[5];\n      var dynamic = arguments[6];\n\n      if (!this.__db[name]) {\n        this.__db[name] = {};\n      }\n      if (!this.__db[name][type]) {\n        this.__db[name][type] = {};\n      }\n      if (!this.__db[name][type][flavour]) {\n        this.__db[name][type][flavour] = {};\n      }\n\n      if (dynamic && window[dynamic]) {\n        this.__db[name][type][flavour][color] = window[dynamic](uri);\n      }\n      else {\n        this.__db[name][type][flavour][color] = {\n          uri: uri,\n          styling: styling\n        };\n      }\n    },\n\n    /**\n     * Get the icon information for a name.\n     *\n     * @param name {String} Name\n     * @param type {String?} Type\n     * @param flavour {String?} Flavour\n     * @param color {String?} Color (only relevant for monochrome icons)\n     * @return {String} The URI for the icon - or \"undefined\" if not known\n     */\n    get: function (name, type, flavour, color) {\n      if (!this.__db[name]) {\n        return undefined;\n      }\n      if (!this.__db[name][type]) {\n        type = '*'; // undefined -> use default\n      }\n      var all;\n      if (typeof this.__db[name][type] === 'string') {\n        type = this.__db[name][type]; // redirect link\n        if (type.split('/').length > 1) {\n          all = type.split('/');\n          type = all.shift();\n          if (flavour === undefined) {\n            flavour = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour]) {\n        flavour = '*'; // undefined -> use default\n      }\n      if (typeof this.__db[name][type][flavour] === 'string') {\n        flavour = this.__db[name][type][flavour]; // redirect link\n        if (flavour.split('/').length > 1) {\n          all = flavour.split('/');\n          flavour = all.shift();\n          if (!color) {\n            color = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour][color]) {\n        color = '*'; // undefined -> use default\n      }\n      // handle a generic mapping function\n      if (typeof this.__db[name][type][flavour]['*'] === 'function') {\n        return this.__db[name][type][flavour]['*'];\n      }\n      if (typeof this.__db[name][type][flavour][color] === 'string') {\n        color = this.__db[name][type][flavour][color];\n      } // redirect link\n      return this.__db[name][type][flavour][color];\n    },\n\n    getURI: function () {\n      var i = this.get.apply(this, arguments);\n      if (i) {\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n    },\n\n    /**\n     * Return an icon DOM element.\n     */\n    getIconElement: function () {\n      var i = this.get.apply(this, arguments);\n      if (i) {\n        var styling = arguments[4];\n        if (i.icon && !styling && typeof i !== 'function') {\n          return i.icon;\n        }\n\n        // fetch and cache image\n        if (!styling) {\n          styling = i.styling;\n        }\n\n        var classes = 'icon';\n        var iconclass = arguments[5];\n        if (iconclass) {\n          classes = classes + ' custom_' + iconclass;\n        }\n\n        if (typeof i === 'function') {\n          i.icon = i(arguments[3], styling, classes, false);\n        } else {\n          i.icon = '<img class=\"' + classes + '\" src=\"' + qx.util.ResourceManager.getInstance().toUri(i.uri) +'\" style=\"' + (styling ? styling : '') + '\"/>';\n        }\n        return i.icon;\n      }\n    },\n\n    /**\n     * Return a String for the icon, e.g. build a DOM tree in a string before\n     * passing it to ParseHTML. After the content was added to the DOM the\n     * fillIcons method must be called to fill missing content (e.g. the <canvas>\n     * icons.\n     * @param name {String} Name\n     * @param type {String?} Type\n     * @param flavour {String?} Flavour\n     * @param color {String?} Color (only relevant for monochrome icons)\n     * @param styling {String?} Styling\n     * @param iconclass {String?} icon class\n     */\n    getIconText: function (name, type, flavour, color, styling, iconclass) {\n      var i = this.get.apply(this, arguments);\n      if (i) {\n        if (!styling) {\n          styling = !i.styling ? '' : ' style=\"' + i.styling + '\"';\n        }\n        else {\n          styling = ' style=\"' + styling + '\"';\n        }\n\n        var classes = 'icon';\n        if (iconclass) {\n          classes = classes + ' custom_' + iconclass;\n        }\n\n        if (typeof i === 'function') {\n          return i(color, styling, classes, true);\n        } else {\n          return '<img class=\"' + classes + '\" src=\"' + qx.util.ResourceManager.getInstance().toUri(i.uri) + '\"' + styling + '/>';\n        }\n      }\n    },\n\n    /**\n     * Fill the icons in the array.\n     */\n    fillIcons: function (array) {\n      array.forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n    },\n\n    /**\n     * List all known icons\n     *\n     *\n     * @return {Array} List of all known icon names\n     */\n    list: function () {\n      return Object.keys(this.__db);\n    },\n\n    /**\n     * Return icon database for debuging purposes - use ONLY for debugging as it's\n     * circumventing the data hiding and exposes a writeable reference to the\n     * database object!\n     *\n     *\n     * @return {Object} The icon database\n     */\n    debug: function () {\n      return this.__db;\n    }\n  }\n});\n"
  ]
}