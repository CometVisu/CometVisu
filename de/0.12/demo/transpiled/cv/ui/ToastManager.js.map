{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/ToastManager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "notifications",
    "IHandler",
    "include",
    "ui",
    "MHandleMessage",
    "type",
    "construct",
    "set",
    "rootElementId",
    "messageElementId",
    "setDelegate",
    "prepareMessage",
    "message",
    "hasOwnProperty",
    "duration",
    "getMessageDuration",
    "bind",
    "postHandleMessage",
    "config",
    "payload",
    "action",
    "event",
    "Timer",
    "once",
    "getMessages",
    "remove",
    "util",
    "DeferredCall",
    "TemplateEngine",
    "getInstance",
    "executeWhenDomFinished",
    "_init",
    "schedule",
    "properties",
    "messageDuration",
    "check",
    "init",
    "members",
    "__domElement",
    "__timer",
    "__opened",
    "document",
    "querySelector",
    "getRootElementId",
    "dom",
    "Element",
    "create",
    "querySelectorAll",
    "length",
    "body",
    "appendChild",
    "template",
    "id",
    "html",
    "getMessageElementId",
    "_list",
    "data",
    "controller",
    "website",
    "List",
    "_messages",
    "Registration",
    "addListener",
    "_onListTap",
    "_performAction",
    "actions",
    "deleteMessage",
    "destruct",
    "stop",
    "parentNode",
    "removeChild",
    "ToastManager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ToastManager.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Handles toast positioning in the gui.\n */\nqx.Class.define(\"cv.ui.ToastManager\", {\n  extend: qx.core.Object,\n  implement: cv.core.notifications.IHandler,\n  include: cv.ui.MHandleMessage,\n  type: \"singleton\",\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function() {\n    this.base(arguments);\n    this.set({\n      rootElementId: \"toast-list\",\n      messageElementId: \"toast_\"\n    });\n\n    this.setDelegate({\n      prepareMessage: function(message) {\n        // all toast messages need a duration\n        if (!message.hasOwnProperty(\"duration\")) {\n          message.duration = this.getMessageDuration();\n        }\n      }.bind(this),\n      postHandleMessage: function(message, config, payload) {\n        if (payload.action === \"added\" || payload.action === \"replaced\") {\n          // add removal listener\n          qx.event.Timer.once(function() {\n            this.getMessages().remove(message);\n          }, this, message.duration);\n        }\n      }.bind(this)\n    });\n\n    // as the Mixins constructor has not been called yet, the messages array has not been initialized\n    // so we defer this call here to make sure everything is in place\n    new qx.util.DeferredCall(function() {\n      cv.TemplateEngine.getInstance().executeWhenDomFinished(this._init, this);\n    }, this).schedule();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n\n    /**\n     * Default time in MS a toast message is visible\n     */\n    messageDuration: {\n      check: \"Number\",\n      init: 5000\n    }\n  },\n\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __domElement: null,\n    __timer: null,\n    __opened: false,\n\n    /**\n     * Attach to dom element and style it\n     */\n    _init: function() {\n      if (!this.__domElement) {\n        // check if there is one (might be restored from cache)\n        this.__domElement = document.querySelector(this.getRootElementId());\n        if (!this.__domElement) {\n          this.__domElement = qx.dom.Element.create(\"div\", {\"id\": this.getRootElementId()});\n        }\n      }\n      if (document.querySelectorAll(this.getRootElementId()).length === 0) {\n        document.body.appendChild(this.__domElement);\n      }\n      if (document.querySelectorAll(\"#ToastTemplate\").length === 0) {\n        var template = qx.dom.Element.create(\"script\", {\n          id: \"ToastTemplate\",\n          type: \"text/template\",\n          html: '<div class=\"toast {{severity}}{{#actions}} selectable{{/actions}}\" title=\"{{tooltip}}\" id=\"'+this.getMessageElementId()+'{{ id }}\"><div class=\"content\">{{&message}}</div></div>'\n        });\n        document.body.appendChild(template);\n      }\n      this._list = new qx.data.controller.website.List(this._messages, this.__domElement, \"ToastTemplate\");\n      qx.event.Registration.addListener(this.__domElement, \"tap\", this._onListTap, this);\n    },\n\n    _performAction: function(message) {\n      if (message.actions) {\n        return false;\n      }\n      // default is to delete the toast\n      this.deleteMessage(message.id);\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    if (this.__timer) {\n      this.__timer.stop();\n      this.__timer = null;\n    }\n    if (this.__domElement) {\n      this.__domElement.parentNode.removeChild(this.__domElement);\n      this.__domElement = null;\n    }\n  }\n});"
  ]
}