{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Diff.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "Source",
    "construct",
    "_handledActions",
    "statics",
    "COUNTER",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "properties",
    "originalContent",
    "check",
    "init",
    "apply",
    "modifiedContent",
    "members",
    "_initWorker",
    "_draw",
    "window",
    "monaco",
    "load",
    "domElement",
    "getContentElement",
    "getDomElement",
    "addListenerOnce",
    "_editor",
    "createDiffEditor",
    "folding",
    "autoIndent",
    "automaticLayout",
    "readOnly",
    "getFile",
    "_loadFile",
    "_applyContent",
    "original",
    "getOriginalContent",
    "modified",
    "getModifiedContent",
    "file",
    "originalModel",
    "createModel",
    "_getLanguage",
    "getOriginalFile",
    "updateOptions",
    "_getDefaultModelOptions",
    "modifiedModel",
    "getModifiedFile",
    "setModel",
    "clear",
    "getModel",
    "dispose",
    "model",
    "CompareFiles",
    "isSupported",
    "_client",
    "readSync",
    "path",
    "getFullPath",
    "err",
    "res",
    "snackbar",
    "Controller",
    "error",
    "setModifiedContent",
    "setOriginalContent",
    "resetOriginalContent",
    "resetModifiedContent",
    "Diff"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    // overridden, diff editor is read only, no worker needed\n    _initWorker: function () {},\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        var domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: true\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent: function () {\n      var original = this.getOriginalContent();\n      var modified = this.getModifiedContent();\n      if (original && modified) {\n        var file = this.getFile();\n        var originalModel = window.monaco.editor.createModel(original, this._getLanguage(file.getOriginalFile()));\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        var modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(file.getModifiedFile()));\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    clear: function () {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    _loadFile: function (file) {\n      if (this._editor) {\n        if (file && file instanceof cv.ui.manager.model.CompareFiles && this.isSupported(file.getModifiedFile())) {\n          this._client.readSync({path: file.getModifiedFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setModifiedContent(res);\n            }\n          }, this);\n\n          this._client.readSync({path: file.getOriginalFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setOriginalContent(res);\n            }\n          }, this);\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n"
  ]
}