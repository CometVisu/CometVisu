{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/completion/Config.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "schema",
    "__elementCache",
    "_schema",
    "_dataProvider",
    "cv",
    "ui",
    "manager",
    "editor",
    "data",
    "Provider",
    "getInstance",
    "members",
    "__metaElementCache",
    "getLastOpenedTag",
    "text",
    "tags",
    "match",
    "undefined",
    "closingTags",
    "i",
    "length",
    "indexOf",
    "push",
    "substring",
    "tagPosition",
    "lastIndexOf",
    "tag",
    "closingBracketIdx",
    "openedTag",
    "contentSearch",
    "currentAttribute",
    "attrMatch",
    "exec",
    "filteredElementSearch",
    "test",
    "tagName",
    "isAttributeSearch",
    "isContentSearch",
    "splice",
    "findElements",
    "parent",
    "elementName",
    "maxDepth",
    "currentDepth",
    "inMeta",
    "cache",
    "getElementNode",
    "allowedElements",
    "getAllowedElements",
    "element",
    "result",
    "isItemAvailable",
    "itemName",
    "maxOccurs",
    "items",
    "count",
    "parseInt",
    "getElementString",
    "indent",
    "prefix",
    "insertText",
    "getName",
    "allowedAttributes",
    "getAllowedAttributes",
    "getOwnPropertyNames",
    "forEach",
    "attr",
    "attribute",
    "isOptional",
    "getDefaultValue",
    "requiredElements",
    "getRequiredElements",
    "allowedContent",
    "getAllowedContent",
    "isContentAllowed",
    "_text",
    "_grouping",
    "trim",
    "children",
    "elemName",
    "elem",
    "getAvailableElements",
    "usedItems",
    "availableItems",
    "filter",
    "name",
    "startsWith",
    "childElem",
    "getBounds",
    "max",
    "label",
    "kind",
    "window",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Field",
    "detail",
    "getType",
    "documentation",
    "getDocumentation",
    "join",
    "getAvailableAttributes",
    "usedChildTags",
    "attrs",
    "Property",
    "getTypeString",
    "getProvider",
    "triggerCharacters",
    "provideCompletionItems",
    "model",
    "position",
    "textUntilPosition",
    "getValueInRange",
    "startLineNumber",
    "startColumn",
    "endLineNumber",
    "lineNumber",
    "endColumn",
    "column",
    "completeText",
    "getValue",
    "metaEndPos",
    "textMeta",
    "mappingNames",
    "stylingNames",
    "templates",
    "map",
    "vmap",
    "regex",
    "templatesStart",
    "templatesString",
    "replace",
    "split",
    "rawTemplate",
    "nameMatch",
    "variables",
    "vregex",
    "lastOpenedTag",
    "openedTags",
    "openedAttributes",
    "parts",
    "shift",
    "cleanedText",
    "xmlDoc",
    "xml",
    "Document",
    "fromString",
    "lastChild",
    "lastElementChild",
    "lastFound",
    "attributes",
    "outerHTML",
    "nodeName",
    "toLowerCase",
    "entry",
    "res",
    "searchedElement",
    "getDesigns",
    "then",
    "sugg",
    "suggestions",
    "getTransforms",
    "getPlugins",
    "getIcons",
    "getInfluxDBs",
    "getInfluxDBFields",
    "includes",
    "influxAttributes",
    "getNamedItem",
    "getInfluxDBTags",
    "value",
    "getInfluxDBValues",
    "keys",
    "EnumMember",
    "templateNames",
    "variableName",
    "locale",
    "Manager",
    "tr",
    "Variable",
    "mappingName",
    "stylingName",
    "getAddresses",
    "getRrds",
    "typeFilter",
    "getMediaFiles",
    "currentItem",
    "type",
    "getEnumeration",
    "Value",
    "endsWith",
    "bind",
    "destruct",
    "completion",
    "Config"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * XSD-based code completion provider for the monaco text editor.\n *\n * @since 0.11.0\n * @author Tobias Bräutigam\n */\nqx.Class.define('cv.ui.manager.editor.completion.Config', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  /**\n   *\n   * @param schema {cv.ui.manager.model.Schema}\n   */\n  construct: function (schema) {\n    this.base(arguments);\n    this.__elementCache = {};\n    this._schema = schema;\n    this._dataProvider = cv.ui.manager.editor.data.Provider.getInstance();\n\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __elementCache: null,\n    __metaElementCache: null,\n    _dataProvider: null,\n\n    getLastOpenedTag: function (text) {\n      // get all tags inside of the content\n      var tags = text.match(/<\\/*(?=\\S*)([a-zA-Z-]+)/g);\n      if (!tags) {\n        return undefined;\n      }\n      // we need to know which tags are closed\n      var closingTags = [];\n      for (var i = tags.length - 1; i >= 0; i--) {\n        if (tags[i].indexOf('</') === 0) {\n          closingTags.push(tags[i].substring('</'.length));\n        }\n        else {\n          // get the last position of the tag\n          var tagPosition = text.lastIndexOf(tags[i]);\n          var tag = tags[i].substring('<'.length);\n          var closingBracketIdx = text.indexOf('/>', tagPosition);\n          // if the tag wasn't closed\n          if (closingBracketIdx === -1) {\n            // if there are no closing tags or the current tag wasn't closed\n            if (!closingTags.length || closingTags[closingTags.length - 1] !== tag) {\n              // we found our tag, but let's get the information if we are looking for\n              // a child element or an attribute\n              text = text.substring(tagPosition);\n\n              var openedTag = text.indexOf('<') > text.indexOf('>');\n              var contentSearch = false;\n              var currentAttribute = null;\n              if (openedTag) {\n                var attrMatch = /([\\w\\-_\\.\\d]+)=\"[^\"]*$/.exec(text);\n                contentSearch = !!attrMatch;\n                currentAttribute = attrMatch ? attrMatch[1] : null;\n              }\n              var filteredElementSearch = /<[\\w-_\\d]+$/.test(text);\n              return {\n                tagName: tag,\n                currentAttribute: currentAttribute,\n                filteredElementSearch: filteredElementSearch,\n                isAttributeSearch: !filteredElementSearch && openedTag && !contentSearch,\n                isContentSearch: contentSearch,\n                text: text\n              };\n            }\n            // remove the last closed tag\n            closingTags.splice(closingTags.length - 1, 1);\n          }\n          // remove the last checked tag and continue processing the rest of the content\n          text = text.substring(0, tagPosition);\n        }\n      }\n    },\n\n    findElements: function (parent, elementName, maxDepth, currentDepth, inMeta) {\n      var cache = inMeta === true ? this.__metaElementCache : this.__elementCache;\n      if (elementName in cache) {\n        return cache[elementName];\n      }\n      if (maxDepth < currentDepth) {\n        return null;\n      }\n      if (!parent) {\n        parent = this._schema.getElementNode('pages');\n      }\n      if (currentDepth === undefined) {\n        currentDepth = 1;\n      }\n      var allowedElements = parent.getAllowedElements();\n      // console.log(parent.name+\" looking for \"+elementName+\" in tree level \"+currentDepth+ \"(<\"+maxDepth+\") (\"+Object.getOwnPropertyNames(allowedElements).join(\", \")+\")\");\n      if (elementName in allowedElements) {\n        // console.log(\"found \"+elementName+\" in tree level \"+currentDepth);\n        this.__elementCache[elementName] = allowedElements[elementName];\n        return allowedElements[elementName];\n      } else {\n        for (var element in allowedElements) {\n          if (inMeta !== true && element === 'meta') {\n            continue;\n          }\n          if (maxDepth > currentDepth) {\n            var result = this.findElements(allowedElements[element], elementName, maxDepth, currentDepth + 1);\n            if (result) {\n              cache[elementName] = result;\n              // console.log(\"found \" + elementName + \" in tree level \" + currentDepth);\n              return result;\n            }\n          }\n        }\n      }\n\n    },\n\n    isItemAvailable: function (itemName, maxOccurs, items) {\n      // the default for 'maxOccurs' is 1\n      maxOccurs = maxOccurs || '1';\n      // the element can appere infinite times, so it is available\n      if (maxOccurs && maxOccurs === 'unbounded') {\n        return true;\n      }\n      // count how many times the element appeared\n      var count = 0;\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === itemName) {\n          count++;\n        }\n      }\n      // if it didn't appear yet, or it can appear again, then it\n      // is available, otherwise it't not\n      return count === 0 || parseInt(maxOccurs) > count;\n    },\n\n    getElementString: function (element, indent, prefix) {\n      var insertText = indent+prefix+element.getName()+\" \";\n      // add all required attributes with default values\n      const allowedAttributes = element.getAllowedAttributes();\n      Object.getOwnPropertyNames(allowedAttributes).forEach(function(attr) {\n        var attribute = allowedAttributes[attr];\n        if (!attribute.isOptional) {\n          insertText += attr+'=\"'+(attribute.getDefaultValue() ? attribute.getDefaultValue() : \"\")+'\" ';\n        }\n      });\n      // add mandatory children\n      var requiredElements = element.getRequiredElements();\n      var allowedContent = element.getAllowedContent();\n      var isContentAllowed = allowedContent._text || requiredElements.length > 0 || !!allowedContent._grouping;\n      if (!isContentAllowed) {\n        // close tag\n        insertText = insertText.trim()+\"/\";\n      } else {\n        // close open tag\n        insertText = insertText.trim()+\">\";\n\n        // insert required elements\n        var children = 0;\n        requiredElements.forEach(function(elemName) {\n          var elem = this.findElements(element, elemName, 1, 0);\n          if (elem) {\n            insertText += \"\\n    \" + this.getElementString(elem, indent + \"    \", \"<\") + \">\";\n            children++;\n          }\n        }, this);\n        // add closing tag\n        if (children > 0) {\n          insertText += \"\\n\"+indent;\n        }\n        insertText += \"</\"+element.getName();\n      }\n      return insertText;\n    },\n\n    getAvailableElements: function (element, usedItems) {\n      var availableItems = [];\n      var children = element.getAllowedElements();\n\n      // if there are no such elements, then there are no suggestions\n      if (!children) {\n        return [];\n      }\n      Object.getOwnPropertyNames(children).filter(name => !name.startsWith('#')).forEach(function(name) {\n        // get all element attributes\n        var childElem = children[name];\n        // the element is a suggestion if it's available\n        if (this.isItemAvailable(childElem.getName(), childElem.getBounds().max, usedItems)) {\n          // mark it as a 'field', and get the documentation\n          availableItems.push({\n            label: childElem.getName(),\n            insertText: this.getElementString(childElem, \"\", \"\"),\n            kind: window.monaco.languages.CompletionItemKind.Field,\n            detail: childElem.getType(),\n            documentation: childElem.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n      // return the suggestions we found\n      return availableItems;\n    },\n\n    getAvailableAttributes: function (element, usedChildTags) {\n      var availableItems = [];\n      // get all attributes for the element\n      var attrs = element.getAllowedAttributes();\n      Object.getOwnPropertyNames(attrs).forEach(function(name) { // jshint ignore:line\n        var attr = attrs[name];\n        // accept it in a suggestion list only the attribute is not used yet\n        if (usedChildTags.indexOf(attr.name) === -1) {\n          // mark it as a 'property', and get it's documentation\n          availableItems.push({\n            label: attr.getName(),\n            insertText: attr.getName()+'=\"\"',\n            kind: window.monaco.languages.CompletionItemKind.Property,\n            detail: attr.getTypeString(),\n            documentation: attr.getDocumentation().join(\"\\n\")\n          });\n        }\n      }, this);\n\n      // return the elements we found\n      return availableItems;\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['<', '\"'],\n        provideCompletionItems: function (model, position) {\n          // get editor content before the pointer\n          var textUntilPosition = model.getValueInRange({\n            startLineNumber: 1,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n          });\n          // parse mappings\n          var completeText = model.getValue();\n          var metaEndPos = completeText.indexOf('</meta>');\n          var textMeta = metaEndPos > 0 ? completeText.substring(0, metaEndPos) : completeText;\n          var mappingNames = [];\n          var stylingNames = [];\n          var templates = {};\n          var map, vmap;\n          var regex = /<mapping name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            mappingNames.push(map[1]);\n          }\n          regex = /<styling name=\"([^\"]+)\"/gm;\n          while ((map = regex.exec(textMeta)) !== null) {\n            stylingNames.push(map[1]);\n          }\n          var templatesStart = textMeta.indexOf('<templates>');\n          if (templatesStart >= 0) {\n            var templatesString = textMeta.substring(templatesStart + 11, textMeta.indexOf('</templates>') - 12).replace(/(?:\\r\\n|\\r|\\n)/g, '');\n            templatesString.split('</template>').forEach(function (rawTemplate) {\n              var nameMatch = /<template name=\"([^\"]+)\"/.exec(rawTemplate);\n              // search for variables\n              var variables = [];\n              var vregex = /{{{?\\s*([\\w\\d]+)\\s*}?}}/gm;\n              while ((vmap = vregex.exec(rawTemplate)) !== null) {\n                variables.push(vmap[1]);\n              }\n              templates[nameMatch[1]] = variables;\n            }, this);\n          }\n\n          // if we want suggestions, inside of which tag are we?\n          var lastOpenedTag = this.getLastOpenedTag(textUntilPosition);\n          // console.log(lastOpenedTag);\n          // get opened tags to see what tag we should look for in the XSD schema\n          var openedTags = [];\n          // attrobutes of the ancestors\n          var openedAttributes = [];\n          // get the elements/attributes that are already mentioned in the element we're in\n          var usedItems = [];\n          var isAttributeSearch = lastOpenedTag && lastOpenedTag.isAttributeSearch;\n          var isContentSearch = lastOpenedTag && lastOpenedTag.isContentSearch;\n          var filteredElementSearch = lastOpenedTag && lastOpenedTag.filteredElementSearch;\n          // no need to calculate the position in the XSD schema if we are in the root element\n          var parts;\n          if (lastOpenedTag) {\n            // try to create a valid XML document\n            parts = lastOpenedTag.text.split(\" \");\n            parts.shift();\n            var cleanedText = textUntilPosition;\n            if (parts.length) {\n              cleanedText = cleanedText.substring(0, cleanedText.length-parts.join(\" \").length)+\">\";\n            }\n            // parse the content (not cleared text) into an xml document\n            var xmlDoc = qx.xml.Document.fromString(cleanedText);\n            var lastChild = xmlDoc.lastElementChild;\n            var i;\n            var lastFound = false;\n            while (lastChild) {\n              openedTags.push(lastChild.tagName);\n              openedAttributes.push(lastChild.attributes);\n              // if we found our last opened tag\n              if (lastChild.tagName === lastOpenedTag.tagName) {\n                lastFound = true;\n                // if we are looking for attributes, then used items should\n                // be the attributes we already used\n                if (lastOpenedTag.isAttributeSearch && lastChild.outerHTML === lastOpenedTag.text) {\n                  var attrs = lastChild.attributes;\n                  for (i = 0; i < attrs.length; i++) {\n                    usedItems.push(attrs[i].nodeName);\n                  }\n                }\n                else {\n                  // if we are looking for child elements, then used items\n                  // should be the elements that were already used\n                  var children = lastChild.children;\n                  for (i = 0; i < children.length; i++) {\n                    if (children[i].tagName.toLowerCase() !== 'parsererror') {\n                      usedItems.push(children[i].tagName);\n                    }\n                  }\n                }\n                break;\n              }\n              // we haven't found the last opened tag yet, so we move to\n              // the next element\n              lastChild = lastChild.lastElementChild;\n            }\n            if (!lastFound) {\n              // fallback -> parse string\n              if (isAttributeSearch || isContentSearch) {\n                parts = lastOpenedTag.text.split(\" \");\n                // skip tag name\n                parts.shift();\n                parts.forEach(function(entry) {\n                  usedItems.push(entry.split(\"=\").shift());\n                });\n              }\n            }\n          }\n          var res = [];\n          var match;\n          // find the last opened tag in the schema to see what elements/attributes it can have\n          var searchedElement = openedTags[openedTags.length-1];\n          if (isContentSearch) {\n            // handle data providers if the is one relevant\n            if (lastOpenedTag.tagName === 'pages' && lastOpenedTag.currentAttribute === 'design') {\n              return this._dataProvider.getDesigns().then(function (sugg) {\n                return {suggestions: sugg};\n              });\n            } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === 'transform') {\n              return {suggestions: this._dataProvider.getTransforms()};\n            } else if (lastOpenedTag.tagName === 'plugin' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getPlugins()};\n            } else if (lastOpenedTag.tagName === 'icon' && lastOpenedTag.currentAttribute === 'name') {\n              return {suggestions: this._dataProvider.getIcons()};\n            } else if (lastOpenedTag.tagName === 'influx') {\n              if (lastOpenedTag.currentAttribute === 'measurement') {\n                return this._dataProvider.getInfluxDBs().then(function (suggestions) {\n                  return {suggestions: suggestions};\n                });\n              } else if (lastOpenedTag.currentAttribute === 'field') {\n                match = /measurement=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                if (match) {\n                  return this._dataProvider.getInfluxDBFields(match[1]).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'tag' && (lastOpenedTag.currentAttribute === 'key' || lastOpenedTag.currentAttribute === 'value') && openedTags.includes('influx')) {\n              var influxAttributes = openedAttributes[openedTags.indexOf('influx')];\n              var attr = influxAttributes.getNamedItem('measurement');\n              if (attr) {\n                if (lastOpenedTag.currentAttribute === 'key') {\n                  return this._dataProvider.getInfluxDBTags(attr.value).then(function (suggestions) {\n                    return {suggestions: suggestions};\n                  });\n                } else if (lastOpenedTag.currentAttribute === 'value') {\n                  match = /key=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n                  if (match) {\n                    return this._dataProvider.getInfluxDBValues(attr.value, match[1]).then(function (suggestions) {\n                      return {suggestions: suggestions};\n                    });\n                  }\n                }\n              }\n            } else if (lastOpenedTag.tagName === 'template' && lastOpenedTag.currentAttribute === 'name' && openedTags.includes('meta')) {\n              res = Object.keys(templates).map(function (name) {\n                return {\n                  label: name,\n                  insertText: name,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.tagName === 'value' &&\n              lastOpenedTag.currentAttribute === 'name' &&\n              !openedTags.includes('meta') &&\n              openedTags.includes('template')) {\n              // TODO: find out template name\n              var templateNames = Object.keys(templates);\n              templateNames.forEach(function (name) {\n                templates[name].forEach(function (variableName) {\n                  res.push({\n                    label: variableName,\n                    insertText: variableName,\n                    detail: qx.locale.Manager.tr('Variable from template %1', name),\n                    kind: window.monaco.languages.CompletionItemKind.Variable\n                  });\n                }, this);\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'mapping') {\n              res = mappingNames.map(function (mappingName) {\n                return {\n                  label: mappingName,\n                  insertText: mappingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            } else if (lastOpenedTag.currentAttribute === 'styling') {\n              res = stylingNames.map(function (stylingName) {\n                return {\n                  label: stylingName,\n                  insertText: stylingName,\n                  kind: window.monaco.languages.CompletionItemKind.EnumMember\n                };\n              }, this);\n              return {suggestions: res};\n            }\n\n            // TODO: completions that have to be retrieved from the backend\n            // * rrds\n            // * Influx: dbs, tags fields\n            // * media files\n\n            searchedElement = lastOpenedTag.tagName;\n          } else if (!isAttributeSearch && filteredElementSearch) {\n            searchedElement = openedTags[openedTags.length-2];\n          } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === null) {\n            return this._dataProvider.getAddresses('monaco').then(res => {\n              return {suggestions: res};\n            });\n          }\n          if (searchedElement === 'rrd') {\n            return this._dataProvider.getRrds('monaco').then(res => {\n              return {suggestions: res};\n            });\n          } else if (searchedElement === 'file' && !isAttributeSearch && !isContentSearch && openedTags.includes('files')) {\n            match = /type=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n            var typeFilter = !!match ? match[1] : null;\n            return this._dataProvider.getMediaFiles(typeFilter).then(function (suggestions) {\n              return {suggestions: suggestions};\n            });\n          }\n          var currentItem = this.findElements(this._schema.getElementNode(\"pages\"), searchedElement, openedTags.length, openedTags.includes('meta'));\n\n          // return available elements/attributes if the tag exists in the schema, or an empty\n          // array if it doesn't\n          if (isContentSearch) {\n            var currentAttribute = usedItems[usedItems.length-1];\n\n            if (currentItem && currentAttribute in currentItem.getAllowedAttributes()) {\n              var attribute = currentItem.getAllowedAttributes()[currentAttribute];\n              var type = attribute.getTypeString();\n              attribute.getEnumeration().forEach(function(entry) {\n                res.push({\n                  label: entry,\n                  kind: window.monaco.languages.CompletionItemKind.Value,\n                  detail: type,\n                  documentation: attribute.getDocumentation().join(\"\\n\")\n                });\n              });\n            }\n          }\n          else if (isAttributeSearch) {\n            // get attributes completions\n            res = currentItem ? this.getAvailableAttributes(currentItem, usedItems) : [];\n          }\n          else {\n            // get elements completions\n            if (lastOpenedTag && lastOpenedTag.text.endsWith(\"</\")) {\n              res.push({\n                label: lastOpenedTag.tagName,\n                kind: window.monaco.languages.CompletionItemKind.Field\n              });\n            } else {\n              res = currentItem ? this.getAvailableElements(currentItem, usedItems) : [];\n            }\n          }\n          return {suggestions: res};\n        }.bind(this)\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__elementCache = null;\n    this._schema = null;\n    this._dataProvider = null;\n  }\n});\n"
  ]
}