{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Worker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "_files",
    "_worker",
    "cv",
    "data",
    "FileWorker",
    "getInstance",
    "addListener",
    "_onMessage",
    "properties",
    "editor",
    "check",
    "nullable",
    "members",
    "open",
    "file",
    "code",
    "schema",
    "postMessage",
    "path",
    "getFullPath",
    "xml",
    "Document",
    "isXmlDocument",
    "documentElement",
    "outerHTML",
    "close",
    "contentChanged",
    "content",
    "validateConfig",
    "isConfigFile",
    "getServerPath",
    "log",
    "Logger",
    "error",
    "e",
    "topic",
    "getData",
    "getEditor",
    "isTemporary",
    "setModified",
    "modified",
    "setHash",
    "currentHash",
    "setValid",
    "length",
    "showErrors",
    "showDecorations",
    "destruct",
    "terminate",
    "ui",
    "manager",
    "Worker"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n *\n */\nqx.Class.define('cv.ui.manager.editor.Worker', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._files = {};\n    // create WebWorker\n    this._worker = cv.data.FileWorker.getInstance();\n    this._worker.addListener('message', this._onMessage, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    editor: {\n      check: 'cv.ui.manager.editor.Source',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _worker: null,\n    _files: null,\n\n    open: function (file, code, schema) {\n      this._worker.postMessage([\"openFile\", {\n        path: file.getFullPath(),\n        code: qx.xml.Document.isXmlDocument(code) ? code.documentElement.outerHTML : code,\n        schema: schema\n      }]);\n      this._files[file.getFullPath()] = file;\n    },\n\n    close: function (file) {\n      this._worker.postMessage([\"closeFile\", {\n        path: file.getFullPath()\n      }]);\n      delete this._files[file.getFullPath()];\n    },\n\n    contentChanged: function (file, content) {\n      this._worker.postMessage([\"contentChange\", {\n        path: file.getFullPath(),\n        code: content\n      }]);\n    },\n\n    validateConfig: function (file) {\n      if (file.isConfigFile()) {\n        return this._worker.validateConfig(file.getServerPath());\n      } else {\n        qx.log.Logger.error(this, file.getFullPath() + ' is no configuration file');\n      }\n    },\n\n    _onMessage: function (e) {\n      let topic = e.getData().topic;\n      let data = e.getData().data;\n      let path = e.getData().path;\n      let file = this._files[path];\n      if (!file && topic !== 'validationResult') {\n        qx.log.Logger.error(this, 'no file found for path ' + path + ' ignoring worker message for topic ' + topic);\n        return;\n      }\n      let editor = this.getEditor();\n      switch(topic) {\n        case \"modified\":\n          // new files are always modified, to not override that state\n          if (!file.isTemporary()) {\n            file.setModified(data.modified);\n          }\n          file.setHash(data.currentHash);\n          break;\n\n        case \"errors\":\n          file.setValid(!data || data.length === 0);\n          if (editor) {\n            editor.showErrors(path, data);\n          }\n          break;\n\n        case \"decorations\":\n          if (editor) {\n            editor.showDecorations(path, data);\n          }\n          break;\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._worker.terminate();\n    this._worker = null;\n  }\n});\n"
  ]
}