{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/ui/manager/upload/UploadMgr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "UploadMgr",
    "construct",
    "widget",
    "uploadUrl",
    "_init",
    "statics",
    "LAST_ID",
    "properties",
    "multiple",
    "refine",
    "init",
    "folder",
    "check",
    "nullable",
    "apply",
    "filename",
    "force",
    "members",
    "_updateUploadUrl",
    "getFolder",
    "path",
    "getFullPath",
    "url",
    "cv",
    "io",
    "rest",
    "Client",
    "getBaseUrl",
    "setUploadUrl",
    "addListener",
    "evt",
    "file",
    "getData",
    "getFilename",
    "setParam",
    "isForce",
    "progressListenerId",
    "getTarget",
    "uploadedSize",
    "debug",
    "getSize",
    "Math",
    "round",
    "stateListenerId",
    "state",
    "getStatus",
    "ui",
    "manager",
    "snackbar",
    "Controller",
    "error",
    "locale",
    "Manager",
    "tr",
    "dialog",
    "Dialog",
    "confirm",
    "confirmed",
    "forceUpload",
    "err",
    "getResponse",
    "lang",
    "Json",
    "parse",
    "message",
    "e",
    "info",
    "event",
    "Bus",
    "dispatchByName",
    "action",
    "removeListenerById",
    "_getUniqueFileId",
    "setForce",
    "newFile",
    "File",
    "getBrowserObject",
    "getId",
    "set",
    "size",
    "uploadWidget",
    "getUploadWidget",
    "getUploadHandler",
    "_addFile",
    "getAutoUpload",
    "beginUploads",
    "uploadFile",
    "bomFile",
    "id",
    "name",
    "fileName",
    "fileSize",
    "setSize",
    "setUploadWidget",
    "UploadButton",
    "replaceFile",
    "replacedFile",
    "setFolder",
    "getParent",
    "getName"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * Extend {com.zenesis.qx.upload.UploadMgr} to allow files to e uploaded via HTML5 drop\n */\nqx.Class.define(\"cv.ui.manager.upload.UploadMgr\", {\n  extend : com.zenesis.qx.upload.UploadMgr,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (widget, uploadUrl) {\n    this.base(arguments, widget, uploadUrl);\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    LAST_ID: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    multiple: {\n      refine: true,\n      init: false\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_updateUploadUrl'\n    },\n\n    filename: {\n      check: 'String',\n      nullable: true\n    },\n\n    force: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  members : {\n\n    _updateUploadUrl: function () {\n      var folder = this.getFolder();\n      var path = folder ? folder.getFullPath() : '.';\n      var url = cv.io.rest.Client.getBaseUrl() + '/fs?type=file&path=' + path;\n      this.setUploadUrl(url);\n    },\n\n    _init: function () {\n      this.addListener(\"addFile\", function(evt) {\n        var file = evt.getData();\n        var filename = this.getFilename();\n        if (filename) {\n          file.setParam('filename', filename);\n        }\n        if (this.isForce()) {\n          file.setParam('force', true);\n        }\n        var progressListenerId = file.addListener(\"changeProgress\", function (evt) {\n          var file = evt.getTarget();\n          var uploadedSize = evt.getData();\n\n          this.debug(\"Upload \" + file.getFilename() + \": \" +\n            uploadedSize + \" / \" + file.getSize() + \" - \" +\n            Math.round(uploadedSize / file.getSize() * 100) + \"%\");\n        }, this);\n\n        var stateListenerId = file.addListener(\"changeState\", function(evt) {\n          var state = evt.getData();\n          var file = evt.getTarget();\n\n          if (state === \"uploading\") {\n            this.debug(file.getFilename() + \" (Uploading...)\");\n          } else if (state === \"uploaded\") {\n            this.debug(file.getFilename() + \" (Complete)\");\n            if (file.getStatus() !== 200) {\n              // something went wrong\n              switch (file.getStatus()) {\n                case 406:\n                  if (this.isForce()) {\n                    cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Replacing the file failed.'));\n                  } else {\n                    dialog.Dialog.confirm(qx.locale.Manager.tr('This file already exists, do you want to replace it?'), function (confirmed) {\n                      if (confirmed) {\n                        this.forceUpload(file);\n                      }\n                    }, this, qx.locale.Manager.tr('File already exists'));\n                  }\n                  break;\n\n                case 403:\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Uploading this file is not allowed here.'));\n                  break;\n\n                default:\n                  var err = file.getResponse();\n                  try {\n                    err = qx.lang.Json.parse(err).message;\n                  } catch (e) {\n                  }\n                  this.error(err);\n                  cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('File upload stopped with an error: %1', err));\n                  break;\n              }\n            } else {\n              cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been uploaded'));\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'uploaded',\n                path: this.getFolder().getFullPath() + '/' + file.getFilename()\n              });\n            }\n          }\n          else if (state === \"cancelled\") {\n            this.debug(file.getFilename() + \" (Cancelled)\");\n          }\n          // Remove the listeners\n          if (state === \"uploaded\" || state === \"cancelled\") {\n            file.removeListenerById(progressListenerId);\n            file.removeListenerById(stateListenerId);\n          }\n        }, this);\n      }, this);\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @return {Number}\n     */\n    _getUniqueFileId: function() {\n      return ++cv.ui.manager.upload.UploadMgr.LAST_ID;\n    },\n\n    /**\n     * Re-upload a file in forced mode\n     * @param file {com.zenesis.qx.upload.File}\n     */\n    forceUpload: function (file) {\n      this.setForce(true);\n      var newFile =  new com.zenesis.qx.upload.File(file.getBrowserObject(), file.getFilename(), file.getId());\n      newFile.set({\n        size: file.getSize(),\n        uploadWidget: file.getUploadWidget()\n      });\n      newFile.setParam('force', true);\n      this.getUploadHandler()._addFile(newFile);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Upload file directly to the backend\n     *\n     * @param bomFile {File}\n     */\n    uploadFile: function(bomFile) {\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = typeof bomFile.name !== \"undefined\" ? bomFile.name : bomFile.fileName;\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      if (this.isForce()) {\n        file.setParam('force', true);\n      }\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Replace content of existing file with the upload\n     * @param bomFile {File}\n     * @param replacedFile {cv.ui.manager.model.FileItem}\n     */\n    replaceFile: function(bomFile, replacedFile) {\n      this.setFolder(replacedFile.getParent());\n      var id = \"upload-\" + this._getUniqueFileId();\n      var filename = replacedFile.getName();\n      var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      file.setParam('force', true);\n      file.setParam('filename', filename);\n      var fileSize = typeof bomFile.size !== \"undefined\" ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    }\n  }\n});"
  ]
}