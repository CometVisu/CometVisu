{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/layout/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "lastBodyWidth",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "oldWidth",
    "LAYOUT_MODE",
    "COLSPAN_CLASS",
    "getCurrentPageNavbarVisibility",
    "left",
    "right",
    "top",
    "bottom",
    "cv",
    "TemplateEngine",
    "getInstance",
    "pagePartsHandler",
    "getNavbarsVisibility",
    "currentPage",
    "getColspanClass",
    "width",
    "Config",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "adjustColumns",
    "getAvailableWidth",
    "oldClass",
    "newClass",
    "bodyWidth",
    "document",
    "documentElement",
    "clientWidth",
    "mobileUseChanged",
    "maxMobileScreenWidth",
    "navbarVisibility",
    "querySelector",
    "leftRect",
    "getBoundingClientRect",
    "widthNavbarLeft",
    "window",
    "getComputedStyle",
    "Math",
    "round",
    "mobileDevice",
    "rightRect",
    "widthNavbarRight",
    "getAvailableHeight",
    "windowHeight",
    "clientHeight",
    "topNav",
    "bottomNav",
    "topNavDisplay",
    "topDisplay",
    "bottomNavDisplay",
    "bottomDisplay",
    "topRect",
    "topHeight",
    "topNavRect",
    "topNavHeight",
    "bottomNavRect",
    "bottomNavHeight",
    "bottomRect",
    "bottomHeight",
    "nav_pathRect",
    "navPathHeight",
    "max",
    "rowspanClass",
    "rowspan",
    "configSettings",
    "usedRowspans",
    "getWidgetColspan",
    "widget",
    "getColspan",
    "getColspanS",
    "getColspanM",
    "getLayoutSuffix",
    "suffix",
    "applyColumnWidths",
    "selector",
    "includeNavbars",
    "mainAreaColumns",
    "dataset",
    "mainAreaColspan",
    "parseInt",
    "defaultColumns",
    "pageSelector",
    "selectors",
    "forEach",
    "area",
    "allContainer",
    "querySelectorAll",
    "length",
    "areaColumns",
    "areaColspan",
    "child",
    "ui",
    "structure",
    "WidgetFactory",
    "getInstanceByElement",
    "ourColspan",
    "w",
    "min",
    "__applyWidthClass",
    "adjustableElements",
    "e",
    "groupChild",
    "util",
    "Tree",
    "getChildWidgets",
    "groupColspan",
    "parentGroupElement",
    "getParent",
    "parentGroupWidget",
    "parentNode",
    "elem",
    "widthClassSuffix",
    "style",
    "classList",
    "cssClass",
    "startsWith",
    "remove",
    "add",
    "layout",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Manager.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n */\nqx.Class.define('cv.ui.layout.Manager', {\n\n  type: \"static\",\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // use to recognize if the screen width has crossed the maxMobileScreenWidth\n    lastBodyWidth: 0,\n    currentPageUnavailableWidth: -1,\n    currentPageUnavailableHeight: -1,\n    currentPageNavbarVisibility: null,\n    oldWidth: -1,\n\n    LAYOUT_MODE: 'DEFAULT',\n\n    COLSPAN_CLASS: null,\n\n    getCurrentPageNavbarVisibility: function () {\n      if (this.currentPageNavbarVisibility === null ||\n        this.currentPageNavbarVisibility.left === null ||\n        this.currentPageNavbarVisibility.right === null ||\n        this.currentPageNavbarVisibility.top === null ||\n        this.currentPageNavbarVisibility.bottom === null\n      ) {\n        this.currentPageNavbarVisibility = cv.TemplateEngine.getInstance().pagePartsHandler.getNavbarsVisibility(cv.TemplateEngine.getInstance().currentPage);\n      }\n      return this.currentPageNavbarVisibility;\n    },\n\n    // return S, M or L depening on the passed width\n    getColspanClass: function (width) {\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        return 'S';\n      }\n      if (width <= cv.Config.maxScreenWidthColspanM) {\n        return 'M';\n      }\n      return 'L';\n    },\n\n    adjustColumns: function () {\n      var\n        width = this.getAvailableWidth(),\n        oldClass = this.getColspanClass(this.oldWidth),\n        newClass = this.getColspanClass(width);\n\n      this.oldWidth = width;\n      this.COLSPAN_CLASS = newClass;\n      return oldClass !== newClass;\n    },\n\n    /**\n     * return the available width for a the currently visible page\n     * the available width is calculated by subtracting the following elements widths (if they are visible) from the body width\n     * - Left-Navbar\n     * - Right-Navbar\n     */\n    getAvailableWidth: function () {\n      // currently this calculation is done once after every page scroll (where cv.TemplateEngine.getInstance()currentPageUnavailableWidth is reseted)\n      // if the screen width falls below the threshold which activates/deactivates the mobile.css\n      // the calculation has to be done again, even if the page hasn´t changed (e.g. switching between portrait and landscape mode on a mobile can cause that)\n      var bodyWidth = document.documentElement.clientWidth;\n      var mobileUseChanged = (this.lastBodyWidth < cv.Config.maxMobileScreenWidth) !== (bodyWidth < cv.Config.maxMobileScreenWidth);\n      if (this.currentPageUnavailableWidth < 0 || mobileUseChanged || true) {\n        //      console.log(\"Mobile.css use changed \"+mobileUseChanged);\n        this.currentPageUnavailableWidth = 0;\n        var navbarVisibility = this.getCurrentPageNavbarVisibility();\n\n        var left = document.querySelector('#navbarLeft'),\n          leftRect = left.getBoundingClientRect(),\n          widthNavbarLeft = navbarVisibility.left === true && window.getComputedStyle(left)['display'] !== \"none\" ? Math.round(leftRect.right - leftRect.left) : 0;\n        if (widthNavbarLeft >= bodyWidth || cv.Config.mobileDevice ) {\n          // Left-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n          // maybe there is a better solution to solve this problem\n          // OR: we have a mobile device where the nav bar is floating above the other content\n          widthNavbarLeft = 0;\n        }\n        var right = document.querySelector('#navbarRight'),\n          rightRect = right.getBoundingClientRect(),\n          widthNavbarRight = navbarVisibility.right === true && window.getComputedStyle(right)['display'] !== \"none\" ? Math.round(rightRect.right - rightRect.left) : 0;\n        if (widthNavbarRight >= bodyWidth || cv.Config.mobileDevice) {\n          // Right-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n          // maybe there is a better solution to solve this problem\n          // OR: we have a mobile device where the nav bar is floating above the other content\n          widthNavbarRight = 0;\n        }\n        this.currentPageUnavailableWidth = widthNavbarLeft + widthNavbarRight + 1; // remove an additional pixel for Firefox\n        //      console.log(\"Width: \"+bodyWidth+\" - \"+widthNavbarLeft+\" - \"+widthNavbarRight);\n      }\n      this.lastBodyWidth = bodyWidth;\n      return bodyWidth - this.currentPageUnavailableWidth;\n    },\n\n    /**\n     * return the available height for a the currently visible page\n     * the available height is calculated by subtracting the following elements heights (if they are visible) from the window height\n     * - Top-Navigation\n     * - Top-Navbar\n     * - Bottom-Navbar\n     * - Statusbar\n     *\n     * Notice: the former way to use the subtract the main.position().top value from the total height leads to errors in certain cases\n     *         because the value of main.position().top is not reliable all the time\n     */\n    getAvailableHeight: function () {\n      var windowHeight = document.documentElement.clientHeight;\n      this.currentPageUnavailableHeight = 0;\n      var navbarVisibility = this.getCurrentPageNavbarVisibility();\n      var topNav = document.querySelector('#navbarTop');\n      var top = document.querySelector('#top');\n      var bottomNav = document.querySelector('#navbarBottom');\n      var bottom = document.querySelector('#bottom');\n      var topNavDisplay = window.getComputedStyle(topNav)['display'];\n      var topDisplay = window.getComputedStyle(top)['display'];\n      var bottomNavDisplay = window.getComputedStyle(bottomNav)['display'];\n      var bottomDisplay = window.getComputedStyle(bottom)['display'];\n      var topRect = top.getBoundingClientRect();\n      var topHeight = Math.round(topRect.bottom - topRect.top);\n      var topNavRect = topNav.getBoundingClientRect();\n      var topNavHeight = Math.round(topNavRect.bottom - topNavRect.top);\n      var bottomNavRect = bottomNav.getBoundingClientRect();\n      var bottomNavHeight = Math.round(bottomNavRect.bottom - bottomNavRect.top);\n      var bottomRect = bottom.getBoundingClientRect();\n      var bottomHeight = Math.round(bottomRect.bottom - bottomRect.top);\n      var nav_pathRect = document.querySelector('.nav_path').getBoundingClientRect();\n      var navPathHeight = Math.round(nav_pathRect.bottom - nav_pathRect.top);\n\n      if (topDisplay  !== 'none' && topHeight > 0) {\n        this.currentPageUnavailableHeight += Math.max(topHeight, navPathHeight);\n      }\n      if (topNavDisplay !== 'none' && navbarVisibility.top === true && topNavHeight > 0) {\n        this.currentPageUnavailableHeight += topNavHeight;\n      }\n      if (bottomNavDisplay !== 'none' && navbarVisibility.bottom === true && bottomNavHeight > 0) {\n        this.currentPageUnavailableHeight += bottomNavHeight;\n      }\n      if (bottomDisplay !== 'none' && bottomHeight > 0) {\n        this.currentPageUnavailableHeight += bottomHeight;\n      }\n      if (this.currentPageUnavailableHeight > 0) {\n        this.currentPageUnavailableHeight += 1;// remove an additional pixel for Firefox\n      }\n      return windowHeight - this.currentPageUnavailableHeight;\n    },\n\n    rowspanClass: function (rowspan) {\n      cv.Config.configSettings.usedRowspans[rowspan] = true;\n      return 'rowspan rowspan' + rowspan;\n    },\n\n    getWidgetColspan: function(widget, width) {\n      if (widget.getColspan) {\n        if (width <= cv.Config.maxScreenWidthColspanS) {\n          return widget.getColspanS();\n        }\n        if (width <= cv.Config.maxScreenWidthColspanM) {\n          return widget.getColspanM();\n        }\n        return widget.getColspan();\n      }\n      return 0;\n    },\n\n    getLayoutSuffix: function (width) {\n      var suffix = '';\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        suffix = '-s';\n      } else if (width <= cv.Config.maxScreenWidthColspanM) {\n        suffix = '-m';\n      }\n      return suffix;\n    },\n\n    /**\n     * applies the correct width to the widgets corresponding to the given colspan setting\n     *\n     * @param selector {String?} only update elements found by the given selector\n     * @param includeNavbars {Boolean?} also update navbar elements (default: true)\n     */\n    applyColumnWidths: function (selector, includeNavbars) {\n      var width = this.getAvailableWidth();\n      var mainAreaColumns = document.querySelector('#main').dataset['columns'];\n      var mainAreaColspan = parseInt(mainAreaColumns || cv.Config.defaultColumns);\n\n      var pageSelector = selector ? selector : '#main .activePage';\n      var selectors = [];\n\n      if (includeNavbars === true) {\n        selectors = ['#navbarTop', '#navbarLeft', pageSelector, '#navbarRight', '#navbarBottom'];\n      } else {\n        selectors = [pageSelector];\n      }\n\n      selectors.forEach(function (area) {\n        var allContainer = document.querySelectorAll(area + ' .widget_container');\n        if (allContainer.length > 0) {\n          var areaColumns = document.querySelector(area).dataset['columns'];\n          var areaColspan = areaColumns || cv.Config.defaultColumns;\n          allContainer.forEach(function(child) {\n            var widget = cv.ui.structure.WidgetFactory.getInstanceByElement(child);\n            var ourColspan = this.getWidgetColspan(widget, width);\n\n            var w = 'auto';\n            if (ourColspan > 0) {\n              w = Math.min(100, ourColspan / areaColspan * 100) + '%';\n            }\n            this.__applyWidthClass(child, w);\n          }, this);\n\n        }\n\n        // and elements inside groups\n        var adjustableElements = document.querySelectorAll(area + ' .group .widget_container');\n        adjustableElements.forEach(function (e) {\n          var\n            widget = cv.ui.structure.WidgetFactory.getInstanceByElement(e),\n            ourColspan = this.getWidgetColspan(widget, width);\n          if (ourColspan === null) {\n            // workaround for nowidget groups\n            var groupChild = cv.util.Tree.getChildWidgets(widget, 'group')[0];\n            ourColspan = this.getWidgetColspan(groupChild, width);\n          }\n          var w = 'auto';\n          if (ourColspan > 0) {\n            var groupColspan = mainAreaColspan;\n            var parentGroupElement = cv.util.Tree.getParent(e, '.widget_container', '.group', 1)[0];\n            if (parentGroupElement) {\n              var parentGroupWidget = cv.ui.structure.WidgetFactory.getInstanceByElement(parentGroupElement.parentNode);\n              if (parentGroupWidget) {\n                groupColspan = Math.min(mainAreaColspan, this.getWidgetColspan(parentGroupWidget, width));\n              }\n            }\n            w = Math.min(100, ourColspan / groupColspan * 100) + '%'; // in percent\n          }\n          this.__applyWidthClass(e, w);\n        }, this);\n      }, this);\n    },\n\n    __applyWidthClass: function (elem, widthClassSuffix) {\n      if (widthClassSuffix === 'auto') {\n        elem.style.width = widthClassSuffix;\n      } else {\n        switch (this.LAYOUT_MODE) {\n          case 'GRID':\n            // remove all old width related classes\n            elem.classList.forEach(function (cssClass) {\n              if (cssClass.startsWith('width-')) {\n                elem.classList.remove(cssClass);\n              }\n            }, this);\n            elem.classList.add('width-' + parseInt(widthClassSuffix));\n            break;\n\n          default:\n            elem.style.width = widthClassSuffix;\n            break;\n        }\n      }\n    }\n  }\n});\n"
  ]
}