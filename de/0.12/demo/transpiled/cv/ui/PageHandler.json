{
  "className": "cv.ui.PageHandler",
  "packageName": "cv.ui",
  "name": "PageHandler",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 225,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Christian Mayer"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2016"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "speed": {
      "location": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 5
        }
      },
      "jsdoc": {},
      "name": "speed",
      "propertyType": "new",
      "init": 400,
      "check": "Number",
      "defaultValue": 400
    },
    "easing": {
      "location": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 5
        }
      },
      "jsdoc": {},
      "name": "easing",
      "propertyType": "new",
      "init": "ease",
      "check": "string",
      "defaultValue": "ease"
    },
    "currentPath": {
      "location": {
        "start": {
          "line": 49,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 5
        }
      },
      "name": "currentPath",
      "propertyType": "new",
      "init": "",
      "check": "String",
      "defaultValue": ""
    },
    "animationType": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 5
        }
      },
      "name": "animationType",
      "propertyType": "new",
      "init": "slide",
      "possibleValues": [
        "slide",
        "fade",
        "flip",
        "pop",
        "swap",
        "none"
      ],
      "defaultValue": "slide"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "seekTo": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "__getAnimationConfig": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 183,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the animation configs for the current animationType setting</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "direction {String} \"up\" or \"down\"",
            "paramName": "direction",
            "description": " \"up\" or \"down\"",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onLeavePage": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cleanup after page has been left</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "oldPageWidget {cv.ui.structure.pure.Page}"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onEnterPage": {
      "location": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 223,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cleanup after page has been entered</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "pageWidget {cv.ui.structure.pure.Page}"
          },
          {
            "name": "@param",
            "body": "oldPos {String} CSS-position value to set",
            "paramName": "oldPos",
            "description": " CSS-position value to set",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "updateVisibility {Boolean} set the visibility property of the page to true or do not change it",
            "paramName": "updateVisibility",
            "description": " set the visibility property of the page to true or do not change it",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getSpeed": {
      "type": "function",
      "name": "getSpeed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>speed</code>.\n\nFor further details take a look at the property definition: {@link #speed}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for speed"
          }
        ]
      }
    },
    "setSpeed": {
      "type": "function",
      "name": "setSpeed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>speed</code>.\n\nFor further details take a look at the property definition: {@link #speed}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for speed"
          }
        ]
      }
    },
    "resetSpeed": {
      "type": "function",
      "name": "resetSpeed",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>speed</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #speed}."
          }
        ]
      }
    },
    "getEasing": {
      "type": "function",
      "name": "getEasing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>easing</code>.\n\nFor further details take a look at the property definition: {@link #easing}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "string",
            "desc": "Returns the value for easing"
          }
        ]
      }
    },
    "setEasing": {
      "type": "function",
      "name": "setEasing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>easing</code>.\n\nFor further details take a look at the property definition: {@link #easing}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "string",
            "paramName": "value",
            "desc": "Value for easing"
          }
        ]
      }
    },
    "resetEasing": {
      "type": "function",
      "name": "resetEasing",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>easing</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #easing}."
          }
        ]
      }
    },
    "getCurrentPath": {
      "type": "function",
      "name": "getCurrentPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>currentPath</code>.\n\nFor further details take a look at the property definition: {@link #currentPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for currentPath"
          }
        ]
      }
    },
    "setCurrentPath": {
      "type": "function",
      "name": "setCurrentPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>currentPath</code>.\n\nFor further details take a look at the property definition: {@link #currentPath}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for currentPath"
          }
        ]
      }
    },
    "resetCurrentPath": {
      "type": "function",
      "name": "resetCurrentPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>currentPath</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #currentPath}."
          }
        ]
      }
    },
    "getAnimationType": {
      "type": "function",
      "name": "getAnimationType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>animationType</code>.\n\nFor further details take a look at the property definition: {@link #animationType}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for animationType"
          }
        ]
      }
    },
    "setAnimationType": {
      "type": "function",
      "name": "setAnimationType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>animationType</code>.\n\nFor further details take a look at the property definition: {@link #animationType}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for animationType"
          }
        ]
      }
    },
    "resetAnimationType": {
      "type": "function",
      "name": "resetAnimationType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>animationType</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #animationType}."
          }
        ]
      }
    }
  },
  "descendants": []
}