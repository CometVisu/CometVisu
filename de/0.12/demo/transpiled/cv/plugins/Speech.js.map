{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Speech.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "cv",
    "ui",
    "common",
    "Update",
    "construct",
    "props",
    "_initOnCreate",
    "set",
    "__lastSpeech",
    "statics",
    "parse",
    "element",
    "path",
    "window",
    "speechSynthesis",
    "log",
    "Logger",
    "warn",
    "address",
    "parser",
    "WidgetParser",
    "makeAddressList",
    "data",
    "Model",
    "getInstance",
    "setWidgetData",
    "getAttribute",
    "toLowerCase",
    "parseInt",
    "properties",
    "check",
    "$$type",
    "$$initOnCacheLoad",
    "language",
    "mapping",
    "init",
    "repeatTimeout",
    "parentWidget",
    "members",
    "getDomString",
    "undefined",
    "_processIncomingValue",
    "value",
    "applyTransform",
    "applyMapping",
    "handleUpdate",
    "text",
    "TemplateEngine",
    "visu",
    "getDataReceived",
    "time",
    "Date",
    "now",
    "debug",
    "length",
    "substring",
    "getRepeatTimeout",
    "Math",
    "round",
    "notifications",
    "SpeechHandler",
    "say",
    "getLanguage",
    "defer",
    "addHandler",
    "plugins",
    "Speech",
    "structure",
    "WidgetFactory",
    "registerClass"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EAAqC;AACnCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADmB;AAEnCC,IAAAA,OAAO,EAAEC,EAAE,CAACC,EAAH,CAAMC,MAAN,CAAaC,MAFa;;AAInC;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgB;AACzB,WAAKC,aAAL,GAAqB,IAArB;AACA;AACA,WAAKC,GAAL,CAASF,KAAT;AACA,WAAKG,QAAL,GAAoB,EAApB;AACD,KAdkC;;AAiBnC;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,eAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC9B,YAAI,CAACC,MAAM,CAACC,eAAZ,EAA6B;AAC3BxB,UAAAA,EAAE,CAACyB,GAAH,CAAOC,MAAP,CAAcC,IAAd,CAAmB,IAAnB,EAAyB,kDAAzB;AACA;AACD;;AAED,YAAIC,OAAO,GAAGlB,EAAE,CAACmB,MAAH,CAAUC,YAAV,CAAuBC,eAAvB,CAAuCV,OAAvC,EAAgDC,IAAhD,CAAd;AAEA,eAAOZ,EAAE,CAACsB,IAAH,CAAQC,KAAR,CAAcC,WAAd,GAA4BC,aAA5B,CAA2Cb,IAA3C,EAAiD;AACtD,kBAAYA,IAD0C;AAEtD,sBAAYD,OAAO,CAACe,YAAR,CAAqB,MAArB,IAA+Bf,OAAO,CAACe,YAAR,CAAqB,MAArB,EAA8BC,WAA9B,EAA/B,GAA6E,IAFnC;AAGtD,qBAAYT,OAH0C;AAItD,qBAAYP,OAAO,CAACe,YAAR,CAAqB,SAArB,CAJ0C;AAKtD,2BAAiBf,OAAO,CAACe,YAAR,CAAqB,gBAArB,IAAyCE,QAAQ,CAACjB,OAAO,CAACe,YAAR,CAAqB,gBAArB,CAAD,CAAjD,GAA4F,CAAC,CALxD;AAMtD,oBAAY,QAN0C;AAOtD;AACA,+BAAqB;AARiC,SAAjD,CAAP;AAUD;AAnBM,KAtB0B;;AA4CnC;AACF;AACA;AACA;AACA;AACEG,IAAAA,UAAU,EAAE;AACVjB,MAAAA,IAAI,EAAgB;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OADV;AAEVC,MAAAA,MAAM,EAAc;AAAED,QAAAA,KAAK,EAAE;AAAT,OAFV;AAGVE,MAAAA,iBAAiB,EAAG;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAHV;AAIVG,MAAAA,QAAQ,EAAY;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAJV;AAKVI,MAAAA,OAAO,EAAa;AAAEJ,QAAAA,KAAK,EAAE,QAAT;AAAmBK,QAAAA,IAAI,EAAE;AAAzB,OALV;AAMVC,MAAAA,aAAa,EAAO;AAAEN,QAAAA,KAAK,EAAE,QAAT;AAAmBK,QAAAA,IAAI,EAAE,CAAC;AAA1B,OANV;AAOVE,MAAAA,YAAY,EAAE;AACZP,QAAAA,KAAK,EAAE,qCADK;AAEZK,QAAAA,IAAI,EAAE;AAFM;AAPJ,KAjDuB;;AA8DnC;AACF;AACA;AACA;AACA;AACEG,IAAAA,OAAO,EAAE;AACP9B,MAAAA,QAAY,EAAG,IADR;AAGP+B,MAAAA,YAAY,EAAE,wBAAW;AACvB,eAAOC,SAAP;AACD,OALM;AAOPC,MAAAA,qBAAqB,EAAE,+BAASvB,OAAT,EAAkBI,IAAlB,EAAwB;AAC7C;AACA,YAAIoB,KAAK,GAAG,KAAKC,cAAL,CAAoBzB,OAApB,EAA6BI,IAA7B,CAAZ,CAF6C,CAI7C;;AACA,eAAO,KAAKsB,YAAL,CAAkBF,KAAlB,CAAP;AACD,OAbM;AAePG,MAAAA,YAAY,EAAE,sBAASC,IAAT,EAAe5B,OAAf,EAAwB;AAEpC,YAAI,CAAClB,EAAE,CAAC+C,cAAH,CAAkBvB,WAAlB,GAAgCwB,IAAhC,CAAqCC,eAArC,EAAL,EAA6D;AAC3D;AACA,eAAKzC,QAAL,CAAkBU,OAAlB,IAA6B;AAC3B4B,YAAAA,IAAI,EAAEA,IADqB;AAE3BI,YAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAFqB,WAA7B;AAIA,eAAKC,KAAL,CAAW,8BAA4BP,IAAvC;AACA;AACD;;AAED,YAAI,CAACA,IAAD,IAASA,IAAI,CAACQ,MAAL,KAAgB,CAA7B,EAAgC;AAC9B;AACA,eAAKD,KAAL,CAAW,yBAAX;AACA;AACD;;AAED,YAAI,OAAOP,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACS,SAAL,CAAe,CAAf,EAAiB,CAAjB,MAAwB,GAAxD,EAA6D;AAC3D;AACAT,UAAAA,IAAI,GAAGA,IAAI,CAACS,SAAL,CAAe,CAAf,CAAP;AACD,SAHD,MAIK,IAAI,KAAKC,gBAAL,MAA2B,CAA/B,EAAkC;AACrC;AACA,cAAI,KAAKhD,QAAL,CAAkBU,OAAlB,KAA8B,KAAKV,QAAL,CAAkBU,OAAlB,EAA2B4B,IAA3B,KAAoCA,IAAlE,KAA2E,KAAKU,gBAAL,OAA4B,CAA5B,IAC7E,KAAKA,gBAAL,MAA2BC,IAAI,CAACC,KAAL,CAAW,CAACP,IAAI,CAACC,GAAL,KAAW,KAAK5C,QAAL,CAAkBU,OAAlB,EAA2BgC,IAAvC,IAA6C,IAAxD,CADzB,CAAJ,EAC6F;AAC3F;AACA,iBAAK1C,QAAL,CAAkBU,OAAlB,EAA2BgC,IAA3B,GAAkCC,IAAI,CAACC,GAAL,EAAlC,CAF2F,CAG3F;;AACA,iBAAKC,KAAL,CAAW,wCAAwCP,IAAnD;AACA;AACD;AACF;;AACD,aAAKO,KAAL,CAAW,uCAAX,EAAoD,KAAK7C,QAAL,CAAkBU,OAAlB,IAA6B,KAAKV,QAAL,CAAkBU,OAAlB,EAA2B4B,IAAxD,GAA+D,EAAnH,EAAuHA,IAAvH;AACA,aAAKtC,QAAL,CAAkBU,OAAlB,IAA6B;AAC3B4B,UAAAA,IAAI,EAAEA,IADqB;AAE3BI,UAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAFqB,SAA7B;AAKApD,QAAAA,EAAE,CAACH,IAAH,CAAQ8D,aAAR,CAAsBC,aAAtB,CAAoCpC,WAApC,GAAkDqC,GAAlD,CAAsDf,IAAtD,EAA4D,KAAKgB,WAAL,EAA5D;AACD;AAvDM,KAnE0B;AA6HnCC,IAAAA,KAAK,EAAE,eAAStD,OAAT,EAAkB;AACvB;AACAT,MAAAA,EAAE,CAACmB,MAAH,CAAUC,YAAV,CAAuB4C,UAAvB,CAAkC,QAAlC,EAA4ChE,EAAE,CAACiE,OAAH,CAAWC,MAAvD;AACAlE,MAAAA,EAAE,CAACC,EAAH,CAAMkE,SAAN,CAAgBC,aAAhB,CAA8BC,aAA9B,CAA4C,QAA5C,EAAsD5D,OAAtD;AACD;AAjIkC,GAArC;AAzDAT,EAAAA,EAAE,CAACiE,OAAH,CAAWC,MAAX,CAAkBzE,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* Speech.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Use the Web Speech API (https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API)\n * to make text-to-speech service available. This plugin listens to a address and forwards the\n * incoming data to the browser TTS engine (if the browser supports it)\n *\n * <h4>Simple example</h4>\n * <pre class=\"sunlight-highlight-xml\">\n * &lt;speech lang=&quot;en&quot;&gt;\n *  &lt;address transform=&quot;OH:string&quot; mode=&quot;read&quot;&gt;Speak&lt;/address&gt;\n * &lt;/speech&gt;\n * </pre>\n *\n * <h4>Example preventing repetition within a timeout and use mapping</h4>\n * <pre class=\"sunlight-highlight-xml\">\n * ...\n * &lt;meta&gt;\n *  &lt;plugins&gt;\n *    &lt;plugin name=&quot;speech&quot; /&gt;\n *  &lt;/plugins&gt;\n *  &lt;mappings&gt;\n *    &lt;mapping name=&quot;speak&quot;&gt;\n *      &lt;entry value=&quot;0&quot;&gt;Hello, welcome home&lt;/entry&gt;\n *      &lt;entry value=&quot;1&quot;&gt;Please close all windows&lt;/entry&gt;\n *      &lt;entry value=&quot;2&quot;&gt;Please close all doors&lt;/entry&gt;\n *    &lt;/mapping&gt;\n *  &lt;/mappings&gt;\n * &lt;/meta&gt;\n * ...\n * &lt;speech lang=&quot;en&quot; repeat-timout=&quot;300&quot; mapping=&quot;speak&quot;&gt;\n *  &lt;address transform=&quot;DPT:5.010&quot; mode=&quot;read&quot;&gt;Speak&lt;/address&gt;\n * &lt;/speech&gt;\n * </pre>\n *\n * @author Tobias Br√§utigam\n * @since 0.10.0\n *\n */\nqx.Class.define('cv.plugins.Speech', {\n  extend: qx.core.Object,\n  include: cv.ui.common.Update,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function(props) {\n    this._initOnCreate = true;\n    this.base(arguments);\n    this.set(props);\n    this.__lastSpeech = {};\n  },\n\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    parse: function (element, path) {\n      if (!window.speechSynthesis) {\n        qx.log.Logger.warn(this, \"this browser does not support the Web Speech API\");\n        return;\n      }\n\n      var address = cv.parser.WidgetParser.makeAddressList(element, path);\n\n      return cv.data.Model.getInstance().setWidgetData( path, {\n        'path'    : path,\n        'language': element.getAttribute('lang') ? element.getAttribute('lang') .toLowerCase() : null,\n        'address' : address,\n        'mapping' : element.getAttribute('mapping'),\n        'repeatTimeout': element.getAttribute('repeat-timeout') ? parseInt(element.getAttribute('repeat-timeout')) : -1,\n        '$$type'  : 'speech',\n        // this widget needs to be initialized when the cache is used, otherwise it wont be available\n        '$$initOnCacheLoad': true\n      });\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    path              : { check: \"String\" },\n    $$type            : { check: \"String\" },\n    $$initOnCacheLoad : { check: \"Boolean\" },\n    language          : { check: \"String\" },\n    mapping           : { check: \"String\", init: \"\" },\n    repeatTimeout     : { check: \"Number\", init: -1 },\n    parentWidget: {\n      check: \"cv.ui.structure.AbstractBasicWidget\",\n      init: null\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    __lastSpeech : null,\n\n    getDomString: function() {\n      return undefined;\n    },\n\n    _processIncomingValue: function(address, data) {\n      // #1: transform the raw value to a JavaScript type\n      var value = this.applyTransform(address, data);\n\n      // #2: map it to a value the user wants to see\n      return this.applyMapping(value);\n    },\n\n    handleUpdate: function(text, address) {\n\n      if (!cv.TemplateEngine.getInstance().visu.getDataReceived()) {\n        // first call -> skipping\n        this.__lastSpeech[address] = {\n          text: text,\n          time: Date.now()\n        };\n        this.debug(\"skipping initial TTS for \"+text);\n        return;\n      }\n\n      if (!text || text.length === 0) {\n        // nothing to say\n        this.debug(\"no text to speech given\");\n        return;\n      }\n\n      if (typeof text === \"string\" && text.substring(0,1) === \"!\") {\n        // override repeatTimeout, force saying this\n        text = text.substring(1);\n      }\n      else if (this.getRepeatTimeout() >= 0) {\n        // do not repeat (within timeout when this.repeatTimeout > 0)\n        if (this.__lastSpeech[address] && this.__lastSpeech[address].text === text && (this.getRepeatTimeout() === 0 ||\n          this.getRepeatTimeout() >= Math.round((Date.now()-this.__lastSpeech[address].time)/1000))) {\n          // update time\n          this.__lastSpeech[address].time = Date.now();\n          // do not repeat\n          this.debug(\"skipping TTS because of repetition \" + text);\n          return;\n        }\n      }\n      this.debug(\"changing lastSpeech from '%s' to '%s'\", this.__lastSpeech[address] ? this.__lastSpeech[address].text : \"\", text);\n      this.__lastSpeech[address] = {\n        text: text,\n        time: Date.now()\n      };\n\n      cv.core.notifications.SpeechHandler.getInstance().say(text, this.getLanguage());\n    }\n  },\n\n  defer: function(statics) {\n    // register the parser\n    cv.parser.WidgetParser.addHandler(\"speech\", cv.plugins.Speech);\n    cv.ui.structure.WidgetFactory.registerClass(\"speech\", statics);\n  }\n});\n"
  ]
}