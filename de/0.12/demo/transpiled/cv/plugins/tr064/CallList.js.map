{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/plugins/tr064/CallList.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "Update",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "parseRefresh",
    "transform",
    "value",
    "events",
    "properties",
    "device",
    "check",
    "init",
    "max",
    "columns",
    "TAM",
    "TAMColor",
    "TAMwait",
    "TAMwaitColor",
    "TAMplay",
    "TAMplayColor",
    "TAMstop",
    "TAMstopColor",
    "typeIncoming",
    "typeIncomingColor",
    "typeMissed",
    "typeMissedColor",
    "typeOutgoing",
    "typeOutgoingColor",
    "typeActiveIncoming",
    "typeActiveIncomingColor",
    "typeRejectedIncoming",
    "typeRejectedIncomingColor",
    "typeActiveOutgoing",
    "typeActiveOutgoingColor",
    "typeUnknown",
    "typeUnknownColor",
    "members",
    "__calllistUri",
    "__calllistList",
    "undefined",
    "__refreshingCalllist",
    "__TAMeventAttached",
    "_getInnerDomString",
    "refreshCalllist",
    "_setupRefreshAction",
    "_timer",
    "event",
    "Timer",
    "getRefresh",
    "addListener",
    "start",
    "_update",
    "address",
    "_displayCalllist",
    "self",
    "clLi",
    "getDomElement",
    "getElementsByClassName",
    "sid",
    "replace",
    "html",
    "types",
    "name",
    "getTypeUnknown",
    "color",
    "getTypeUnknownColor",
    "getTypeIncoming",
    "getTypeIncomingColor",
    "getTypeMissed",
    "getTypeMissedColor",
    "getTypeOutgoing",
    "getTypeOutgoingColor",
    "getTypeActiveIncoming",
    "getTypeActiveIncomingColor",
    "getTypeRejectedIncoming",
    "getTypeRejectedIncomingColor",
    "getTypeActiveOutgoing",
    "getTypeActiveOutgoingColor",
    "forEach",
    "cl",
    "audio",
    "type",
    "Type",
    "Path",
    "getDevice",
    "IconHandler",
    "getInstance",
    "getIconText",
    "getTAM",
    "getTAMColor",
    "getColumns",
    "split",
    "col",
    "Date",
    "Name",
    "Caller",
    "innerHTML",
    "tamList",
    "i",
    "length",
    "addEventListener",
    "__playTAM",
    "_getCallListURI",
    "url",
    "window",
    "fetch",
    "then",
    "response",
    "ok",
    "json",
    "console",
    "error",
    "status",
    "statusText",
    "source",
    "getMax",
    "text",
    "str",
    "DOMParser",
    "parseFromString",
    "itemList",
    "getElementsByTagName",
    "childrenList",
    "children",
    "entry",
    "ii",
    "nodeName",
    "textContent",
    "push",
    "fireEvent",
    "element",
    "previousElementSibling",
    "__TAMstop",
    "readyState",
    "__TAMwait",
    "paused",
    "playPromise",
    "play",
    "__TAMplay",
    "pause",
    "currentTime",
    "getTAMwait",
    "getTAMwaitColor",
    "getTAMplay",
    "getTAMplayColor",
    "getTAMstop",
    "getTAMstopColor",
    "defer",
    "loader",
    "util",
    "ScriptLoader",
    "addStyles",
    "addHandler",
    "plugins",
    "tr064",
    "CallList",
    "WidgetFactory",
    "registerClass"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;AAUAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EAA6C;AAC3CC,IAAAA,MAAM,EAAEC,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,cADmB;AAE3CC,IAAAA,OAAO,EAAE,CAACJ,EAAE,CAACC,EAAH,CAAMI,MAAN,CAAaC,OAAd,EAAuBN,EAAE,CAACC,EAAH,CAAMI,MAAN,CAAaE,MAApC,CAFkC;;AAI3C;;;;;;AAMA;;;;;AAKAC,IAAAA,OAAO,EAAE;AACP;;;;;;;;;;AAUAC,MAAAA,KAAK,EAAE,eAAUC,GAAV,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AAC7C,YAAIC,IAAI,GAAGd,EAAE,CAACe,MAAH,CAAUC,YAAV,CAAuBC,YAAvB,CAAoC,IAApC,EAA0CP,GAA1C,EAA+CC,IAA/C,EAAqDC,OAArD,EAA8DC,QAA9D,EAAwE,KAAKK,8BAAL,EAAxE,CAAX;AACAlB,QAAAA,EAAE,CAACe,MAAH,CAAUC,YAAV,CAAuBG,WAAvB,CAAmCT,GAAnC,EAAwCC,IAAxC;AACAX,QAAAA,EAAE,CAACe,MAAH,CAAUC,YAAV,CAAuBI,YAAvB,CAAoCV,GAApC,EAAyCC,IAAzC;AACAX,QAAAA,EAAE,CAACe,MAAH,CAAUC,YAAV,CAAuBK,YAAvB,CAAoCX,GAApC,EAAyCC,IAAzC;AACA,eAAOG,IAAP;AACD,OAjBM;AAmBPI,MAAAA,8BAA8B,EAAE,0CAAY;AAC1C,eAAO;AACL,oBAAU,EADL;AAEL,iBAAO;AAACI,YAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgB;AAAE,qBAAO,CAACA,KAAR;AAAe;AAA7C,WAFF;AAGL,qBAAW;AAAE,uBAAW;AAAb,WAHN;AAIL,iBAAgB;AAAE,uBAAW;AAAb,WAJX;AAKL,sBAAgB;AAAE,uBAAW;AAAb,WALX;AAML,qBAAgB;AAAE,uBAAW;AAAb,WANX;AAOL,0BAAgB;AAAE,uBAAW;AAAb,WAPX;AAQL,qBAAgB;AAAE,uBAAW;AAAb,WARX;AASL,0BAAgB;AAAE,uBAAW;AAAb,WATX;AAUL,qBAAgB;AAAE,uBAAW;AAAb,WAVX;AAWL,0BAAgB;AAAE,uBAAW;AAAb,WAXX;AAYL,0BAA8B;AAAE,uBAAW;AAAb,WAZzB;AAaL,+BAA8B;AAAE,uBAAW;AAAb,WAbzB;AAcL,wBAA8B;AAAE,uBAAW;AAAb,WAdzB;AAeL,6BAA8B;AAAE,uBAAW;AAAb,WAfzB;AAgBL,0BAA8B;AAAE,uBAAW;AAAb,WAhBzB;AAiBL,+BAA8B;AAAE,uBAAW;AAAb,WAjBzB;AAkBL,gCAA8B;AAAE,uBAAW;AAAb,WAlBzB;AAmBL,qCAA8B;AAAE,uBAAW;AAAb,WAnBzB;AAoBL,kCAA8B;AAAE,uBAAW;AAAb,WApBzB;AAqBL,uCAA8B;AAAE,uBAAW;AAAb,WArBzB;AAsBL,gCAA8B;AAAE,uBAAW;AAAb,WAtBzB;AAuBL,qCAA8B;AAAE,uBAAW;AAAb,WAvBzB;AAwBL,yBAA8B;AAAE,uBAAW;AAAb,WAxBzB;AAyBL,8BAA8B;AAAE,uBAAW;AAAb;AAzBzB,SAAP;AA2BD;AA/CM,KAfkC;;AAiE3C;;;;;AAKAC,IAAAA,MAAM,EAAE;AACN,4BAAsB,qBADhB,CACsC;;AADtC,KAtEmC;;AA0E3C;;;;;AAKAC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,QADD;AAENC,QAAAA,IAAI,EAAE;AAFA,OADE;AAKVC,MAAAA,GAAG,EAAE;AACHF,QAAAA,KAAK,EAAE,QADJ;AAEHC,QAAAA,IAAI,EAAE;AAFH,OALK;AASVE,MAAAA,OAAO,EAAO;AAAEH,QAAAA,KAAK,EAAE;AAAT,OATJ;AAUVI,MAAAA,GAAG,EAAW;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAVJ;AAWVK,MAAAA,QAAQ,EAAM;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAXJ;AAYVM,MAAAA,OAAO,EAAO;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAZJ;AAaVO,MAAAA,YAAY,EAAE;AAAEP,QAAAA,KAAK,EAAE;AAAT,OAbJ;AAcVQ,MAAAA,OAAO,EAAO;AAAER,QAAAA,KAAK,EAAE;AAAT,OAdJ;AAeVS,MAAAA,YAAY,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OAfJ;AAgBVU,MAAAA,OAAO,EAAO;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAhBJ;AAiBVW,MAAAA,YAAY,EAAE;AAAEX,QAAAA,KAAK,EAAE;AAAT,OAjBJ;AAkBVY,MAAAA,YAAY,EAAgB;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAlBlB;AAmBVa,MAAAA,iBAAiB,EAAW;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAnBlB;AAoBVc,MAAAA,UAAU,EAAkB;AAAEd,QAAAA,KAAK,EAAE;AAAT,OApBlB;AAqBVe,MAAAA,eAAe,EAAa;AAAEf,QAAAA,KAAK,EAAE;AAAT,OArBlB;AAsBVgB,MAAAA,YAAY,EAAgB;AAAEhB,QAAAA,KAAK,EAAE;AAAT,OAtBlB;AAuBViB,MAAAA,iBAAiB,EAAW;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAvBlB;AAwBVkB,MAAAA,kBAAkB,EAAU;AAAElB,QAAAA,KAAK,EAAE;AAAT,OAxBlB;AAyBVmB,MAAAA,uBAAuB,EAAK;AAAEnB,QAAAA,KAAK,EAAE;AAAT,OAzBlB;AA0BVoB,MAAAA,oBAAoB,EAAQ;AAAEpB,QAAAA,KAAK,EAAE;AAAT,OA1BlB;AA2BVqB,MAAAA,yBAAyB,EAAG;AAAErB,QAAAA,KAAK,EAAE;AAAT,OA3BlB;AA4BVsB,MAAAA,kBAAkB,EAAU;AAAEtB,QAAAA,KAAK,EAAE;AAAT,OA5BlB;AA6BVuB,MAAAA,uBAAuB,EAAK;AAAEvB,QAAAA,KAAK,EAAE;AAAT,OA7BlB;AA8BVwB,MAAAA,WAAW,EAAiB;AAAExB,QAAAA,KAAK,EAAE;AAAT,OA9BlB;AA+BVyB,MAAAA,gBAAgB,EAAY;AAAEzB,QAAAA,KAAK,EAAE;AAAT;AA/BlB,KA/E+B;;AAiH3C;;;;;AAKA0B,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,EADR;AAEPC,MAAAA,cAAc,EAAEC,SAFT;AAGPC,MAAAA,oBAAoB,EAAE,KAHf;;AAIP;;;;;AAKAC,MAAAA,kBAAkB,EAAE,EATb;AAWPC,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,aAAKC,eAAL,CAAqB,SAArB;AACA,eAAO,oGAAP;AACD,OAdM;AAePC,MAAAA,mBAAmB,EAAE,+BAAW;AAC9B,aAAKC,MAAL,GAAc,IAAIrE,EAAE,CAACsE,KAAH,CAASC,KAAb,CAAmB,KAAKC,UAAL,EAAnB,CAAd;;AACA,aAAKH,MAAL,CAAYI,WAAZ,CAAwB,UAAxB,EAAoC,YAAY;AAC9C,cAAI,CAAC,KAAKT,oBAAV,EACA;AACE,iBAAKG,eAAL,CAAqB,OAArB;AACD;AACF,SALD,EAKG,IALH;;AAMA,aAAKE,MAAL,CAAYK,KAAZ;AACD,OAxBM;AAyBPC,MAAAA,OAAO,EAAE,iBAASC,OAAT,EAAkB9C,KAAlB,EAAyB;AAChC,YAAI,CAAC,KAAKkC,oBAAV,EACA;AACE,eAAKG,eAAL,CAAqB,QAArB;AACD;AACF,OA9BM;AAgCPU,MAAAA,gBAAgB,EAAE,4BAAW;AAC3B,YACEC,IAAI,GAAG,IADT;AAAA,YAEEC,IAAI,GAAG,KAAKC,aAAL,GAAqBC,sBAArB,CAA4C,gBAA5C,EAA8D,CAA9D,CAFT;AAAA,YAGEC,GAAG,GAAI,KAAKrB,aAAL,GAAqB,KAAKA,aAAL,CAAmBsB,OAAnB,CAA2B,QAA3B,EAAoC,EAApC,CAArB,GAA+D,EAHxE;AAAA,YAIEC,IAAI,GAAG,EAJT;AAAA,YAKEC,KAAK,GAAG;AACN,aAAI;AAAEC,YAAAA,IAAI,EAAE,KAAKC,cAAL,EAAR;AAAyCC,YAAAA,KAAK,EAAE,KAAKC,mBAAL;AAAhD,WADE;AAEN,aAAI;AAAEH,YAAAA,IAAI,EAAE,KAAKI,eAAL,EAAR;AAAyCF,YAAAA,KAAK,EAAE,KAAKG,oBAAL;AAAhD,WAFE;AAGN,aAAI;AAAEL,YAAAA,IAAI,EAAE,KAAKM,aAAL,EAAR;AAAyCJ,YAAAA,KAAK,EAAE,KAAKK,kBAAL;AAAhD,WAHE;AAIN,aAAI;AAAEP,YAAAA,IAAI,EAAE,KAAKQ,eAAL,EAAR;AAAyCN,YAAAA,KAAK,EAAE,KAAKO,oBAAL;AAAhD,WAJE;AAKN,aAAI;AAAET,YAAAA,IAAI,EAAE,KAAKU,qBAAL,EAAR;AAAyCR,YAAAA,KAAK,EAAE,KAAKS,0BAAL;AAAhD,WALE;AAMN,cAAI;AAAEX,YAAAA,IAAI,EAAE,KAAKY,uBAAL,EAAR;AAAyCV,YAAAA,KAAK,EAAE,KAAKW,4BAAL;AAAhD,WANE;AAON,cAAI;AAAEb,YAAAA,IAAI,EAAE,KAAKc,qBAAL,EAAR;AAAyCZ,YAAAA,KAAK,EAAE,KAAKa,0BAAL;AAAhD;AAPE,SALV;;AAeA,aAAKvC,cAAL,CAAoBwC,OAApB,CAA4B,UAASC,EAAT,EAAY;AACtC,cACEC,KAAK,GAAG,EADV;AAAA,cAEEC,IAAI,GAAIF,EAAE,CAACG,IAAH,IAAWrB,KAAZ,GAAqBA,KAAK,CAACkB,EAAE,CAACG,IAAJ,CAA1B,GAAsCrB,KAAK,CAAC,CAAD,CAFpD;;AAIA,cAAIkB,EAAE,CAACI,IAAP,EACA;AACEH,YAAAA,KAAK,GAAG,mFACsD1B,IAAI,CAAC8B,SAAL,EADtD,GACyE,OADzE,GACiFL,EAAE,CAACI,IADpF,GACyF,SADzF,GACmGzB,GADnG,GACuG,IADvG,GAEJ,UAFI,GAGJ,6BAHI,GAIJ3E,EAAE,CAACsG,WAAH,CAAeC,WAAf,GAA6BC,WAA7B,CAA0CjC,IAAI,CAACkC,MAAL,EAA1C,EAAyD,GAAzD,EAA8D,GAA9D,EAAmElC,IAAI,CAACmC,WAAL,EAAnE,CAJI,GAKJ,QALJ;AAMD;;AAED7B,UAAAA,IAAI,IAAI,MAAR;AACAN,UAAAA,IAAI,CAACoC,UAAL,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6Bb,OAA7B,CAAsC,UAASc,GAAT,EAAa;AACjD,oBAAQA,GAAR;AAEE,mBAAK,MAAL;AACEhC,gBAAAA,IAAI,IAAI,SAAS7E,EAAE,CAACsG,WAAH,CAAeC,WAAf,GAA6BC,WAA7B,CAA0CN,IAAI,CAACnB,IAA/C,EAAqD,GAArD,EAA0D,GAA1D,EAA+DmB,IAAI,CAACjB,KAApE,CAAT,GAAwF,OAAhG;AACA;;AAEF,mBAAK,MAAL;AACEJ,gBAAAA,IAAI,IAAI,SAASmB,EAAE,CAACc,IAAZ,GAAqB,OAA7B;AACA;;AAEF,mBAAK,MAAL;AACEjC,gBAAAA,IAAI,IAAI,SAASmB,EAAE,CAACe,IAAZ,GAAqB,OAA7B;AACA;;AAEF,mBAAK,QAAL;AACElC,gBAAAA,IAAI,IAAI,SAASmB,EAAE,CAACgB,MAAZ,GAAqB,OAA7B;AACA;;AAEF,mBAAK,cAAL;AACE,oBAAIhB,EAAE,CAACe,IAAH,KAAY,EAAhB,EACA;AACElC,kBAAAA,IAAI,IAAI,SAASmB,EAAE,CAACe,IAAZ,GAAqB,OAA7B;AACD,iBAHD,MAGO;AACLlC,kBAAAA,IAAI,IAAI,SAASmB,EAAE,CAACgB,MAAZ,GAAqB,OAA7B;AACD;;AACD;;AAEF,mBAAK,KAAL;AACEnC,gBAAAA,IAAI,IAAI,SAASoB,KAAT,GAAiB,OAAzB;AACA;AA7BJ;AAgCD,WAjCD;AAkCApB,UAAAA,IAAI,IAAI,OAAR;AACD,SAnDD;;AAoDAL,QAAAA,IAAI,CAACyC,SAAL,GAAiBpC,IAAjB;AACA,YAAIqC,OAAO,GAAG1C,IAAI,CAACE,sBAAL,CAA4B,KAA5B,CAAd;;AACA,aAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EACA;AACED,UAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,gBAAX,CAA4B,OAA5B,EAAqC,YAAU;AAAE9C,YAAAA,IAAI,CAAC+C,SAAL,CAAe,IAAf;AAAuB,WAAxE;AACD;AACF,OA1GM;;AA4GP;;;;;AAKAC,MAAAA,eAAe,EAAE,2BAAW;AAC1B,YACEhD,IAAI,GAAG,IADT;AAAA,YAEEiD,GAAG,GAAG,4CAA4C,KAAKnB,SAAL,EAA5C,GAA+D,+FAFvE;AAIAoB,QAAAA,MAAM,CAACC,KAAP,CAAcF,GAAd,EACGG,IADH,CACS,UAAUC,QAAV,EAAqB;AAC1B,cAAIA,QAAQ,CAACC,EAAb,EACA;AACE,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,WAJyB,CAK1B;;;AACAC,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAyBJ,QAAQ,CAACJ,GAAlC,GAAwC,sBAAxC,GAAiEI,QAAQ,CAACK,MAA1E,GAAmF,IAAnF,GAA0FL,QAAQ,CAACM,UAAjH;AACA3D,UAAAA,IAAI,CAACjB,aAAL,GAAqB,QAArB;AACD,SATH,EAUGqE,IAVH,CAUS,UAAU7G,IAAV,EAAiB;AACtB,cAAI,OAAOA,IAAP,KAAgB,QAApB,EAA+B;AAC7ByD,YAAAA,IAAI,CAACjB,aAAL,GAAqBxC,IAArB;AACAyD,YAAAA,IAAI,CAACX,eAAL,CAAqB,gBAArB;AACD,WAHD,MAGO;AACLmE,YAAAA,OAAO,CAACC,KAAR,CAAc,yBAAyBR,GAAzB,GAA+B,uBAA7C,EAAsE1G,IAAtE;AACAyD,YAAAA,IAAI,CAACjB,aAAL,GAAqB,QAArB;AACD;AACF,SAlBH;AAmBD,OAzIM;AA2IPM,MAAAA,eAAe,EAAE,yBAASuE,MAAT,EAAiB;AAChC,aAAK1E,oBAAL,GAA4B,IAA5B;;AAEA,YAAI,KAAKH,aAAL,KAAuB,QAA3B,EACA;AACE,iBADF,CACU;AACT;;AAED,YAAI,KAAKA,aAAL,KAAuB,EAA3B,EACA;AACE,eAAKiE,eAAL;;AACA;AACD;;AAED,YACEhD,IAAI,GAAG,IADT;AAAA,YAEEiD,GAAG,GAAG,6CAA6C,KAAKnB,SAAL,EAA7C,GAAgE,OAAhE,GAA0E,KAAK/C,aAA/E,GAA+F,SAA/F,GAA2G,KAAK8E,MAAL,EAFnH;AAIAX,QAAAA,MAAM,CAACC,KAAP,CAAcF,GAAd,EACGG,IADH,CACS,UAAUC,QAAV,EAAqB;AAC1B,cAAIA,QAAQ,CAACC,EAAb,EACA;AACE,mBAAOD,QAAQ,CAACS,IAAT,EAAP;AACD,WAJyB,CAK1B;;;AACAN,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAyBJ,QAAQ,CAACJ,GAAlC,GAAwC,sBAAxC,GAAiEI,QAAQ,CAACK,MAA1E,GAAmF,IAAnF,GAA0FL,QAAQ,CAACM,UAAjH;AACA,iBAAO,QAAP;AACD,SATH,EAUGP,IAVH,CAUS,UAAUW,GAAV,EAAgB;AACrB,iBAAQ,IAAIb,MAAM,CAACc,SAAX,EAAD,CAAyBC,eAAzB,CAAyCF,GAAzC,EAA8C,UAA9C,CAAP;AACD,SAZH,EAaGX,IAbH,CAaS,UAAU7G,IAAV,EAAiB;AACtByD,UAAAA,IAAI,CAAChB,cAAL,GAAsB,EAAtB;AACA,cAAIkF,QAAQ,GAAG3H,IAAI,CAAC4H,oBAAL,CAA0B,MAA1B,CAAf;;AACA,eAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,QAAQ,CAACrB,MAA7B,EAAqCD,CAAC,EAAtC,EAA2C;AACzC,gBACEwB,YAAY,GAAGF,QAAQ,CAACtB,CAAD,CAAR,CAAYyB,QAD7B;AAAA,gBAEEC,KAAK,GAAG,EAFV;;AAGA,iBAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,YAAY,CAACvB,MAAnC,EAA2C0B,EAAE,EAA7C,EAAkD;AAChDD,cAAAA,KAAK,CAACF,YAAY,CAACG,EAAD,CAAZ,CAAiBC,QAAlB,CAAL,GAAmCJ,YAAY,CAACG,EAAD,CAAZ,CAAiBE,WAApD;AACD;;AACDzE,YAAAA,IAAI,CAAChB,cAAL,CAAoB0F,IAApB,CAA0BJ,KAA1B;AACD;;AACDtE,UAAAA,IAAI,CAACD,gBAAL;;AACAC,UAAAA,IAAI,CAACd,oBAAL,GAA4B,KAA5B;AACAc,UAAAA,IAAI,CAAC2E,SAAL,CAAe,oBAAf;AACD,SA5BH,WA6BU,UAAUlB,KAAV,EAAkB;AACxBD,UAAAA,OAAO,CAACC,KAAR,CAAe,iCAAf,EAAkDA,KAAlD;AACD,SA/BH;AAgCD,OA7LM;;AA+LP;;;AAGAV,MAAAA,SAAS,EAAE,mBAAU6B,OAAV,EAAoB;AAC7B,YACE5E,IAAI,GAAG,IADT;AAAA,YAEE0B,KAAK,GAAGkD,OAAO,CAACC,sBAFlB;;AAIA,YAAI,CAAC,KAAK1F,kBAAL,CAAwBuC,KAAxB,CAAL,EACA;AACEA,UAAAA,KAAK,CAACoB,gBAAN,CAAwB,OAAxB,EAAiC,YAAU;AAAC9C,YAAAA,IAAI,CAAC8E,SAAL,CAAeF,OAAf;AAAwB,WAApE;AACA,eAAKzF,kBAAL,CAAwBuC,KAAxB,IAAiC,IAAjC;AACD;;AAED,YAAIA,KAAK,CAACqD,UAAN,GAAmB,CAAvB,EAA2B;AAC3B;AACE,iBAAKC,SAAL,CAAeJ,OAAf;AACD;;AAED,YAAIlD,KAAK,CAACuD,MAAV,EACA;AACE,cAAIC,WAAW,GAAGxD,KAAK,CAACyD,IAAN,EAAlB;;AACA,cAAID,WAAW,KAAKjG,SAApB,EACA;AACEiG,YAAAA,WAAW,CACR9B,IADH,CACQ,YAAU;AAACpD,cAAAA,IAAI,CAACoF,SAAL,CAAeR,OAAf;AAAwB,aAD3C,WAES,YAAU;AAAC;AAAQ,aAF5B;AAGD;AACF,SATD,MASO;AACLlD,UAAAA,KAAK,CAAC2D,KAAN;AACA3D,UAAAA,KAAK,CAAC4D,WAAN,GAAoB,CAApB;;AACA,eAAKR,SAAL,CAAeF,OAAf;AACD;AACF,OAhOM;AAkOPI,MAAAA,SAAS,EAAE,mBAAUJ,OAAV,EAAoB;AAC7BA,QAAAA,OAAO,CAAClC,SAAR,GAAoBjH,EAAE,CAACsG,WAAH,CAAeC,WAAf,GAA6BC,WAA7B,CAA0C,KAAKsD,UAAL,EAA1C,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,KAAKC,eAAL,EAAvE,CAApB;AACD,OApOM;AAsOPJ,MAAAA,SAAS,EAAE,mBAAUR,OAAV,EAAoB;AAC7BA,QAAAA,OAAO,CAAClC,SAAR,GAAoBjH,EAAE,CAACsG,WAAH,CAAeC,WAAf,GAA6BC,WAA7B,CAA0C,KAAKwD,UAAL,EAA1C,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,KAAKC,eAAL,EAAvE,CAApB;AACD,OAxOM;AA0OPZ,MAAAA,SAAS,EAAE,mBAAUF,OAAV,EAAoB;AAC7BA,QAAAA,OAAO,CAAClC,SAAR,GAAoBjH,EAAE,CAACsG,WAAH,CAAeC,WAAf,GAA6BC,WAA7B,CAA0C,KAAK0D,UAAL,EAA1C,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,KAAKC,eAAL,EAAvE,CAApB;AACD;AA5OM,KAtHkC;AAqW3CC,IAAAA,KAAK,EAAE,eAAS5J,OAAT,EAAkB;AACvB,UAAI6J,MAAM,GAAGrK,EAAE,CAACsK,IAAH,CAAQC,YAAR,CAAqBhE,WAArB,EAAb;AACA8D,MAAAA,MAAM,CAACG,SAAP,CAAiB,yBAAjB;AACAxK,MAAAA,EAAE,CAACe,MAAH,CAAUC,YAAV,CAAuByJ,UAAvB,CAAkC,UAAlC,EAA8CzK,EAAE,CAAC0K,OAAH,CAAWC,KAAX,CAAiBC,QAA/D;AACA5K,MAAAA,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgB2K,aAAhB,CAA8BC,aAA9B,CAA4C,UAA5C,EAAwDtK,OAAxD;AACD;AA1W0C,GAA7C;AA7BAR,EAAAA,EAAE,CAAC0K,OAAH,CAAWC,KAAX,CAAiBC,QAAjB,CAA0BhL,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* CallList.js \n * \n * copyright (c) 2018, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The TR-064 plugin and widget creates a interface to routers that are\n * configured by the TR-064 protocol, like the well known Fritz!Box routers.\n * \n * The protocol is described at: https://avm.de/service/schnittstellen/\n * \n * @author Christian Mayer\n * @since 0.11.0\n */\n\nqx.Class.define('cv.plugins.tr064.CallList', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update],\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      var data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      cv.parser.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'device': {},\n        'max': {transform: function(value) { return +value;}},\n        'columns': { 'default': 'type;date;nameOrCaller;tam' },\n        'TAM':          { 'default': 'phone_answering' },\n        'TAMColor':     { 'default': '' },\n        'TAMwait':      { 'default': 'control_reload' },\n        'TAMwaitColor': { 'default': '' },\n        'TAMplay':      { 'default': 'audio_play' },\n        'TAMplayColor': { 'default': '' },\n        'TAMstop':      { 'default': 'phone_answering' },\n        'TAMstopColor': { 'default': '' },\n        'typeIncoming':               { 'default': 'phone_call_in' },\n        'typeIncomingColor':          { 'default': '' },\n        'typeMissed':                 { 'default': 'phone_missed_in' },\n        'typeMissedColor':            { 'default': '' },\n        'typeOutgoing':               { 'default': 'phone_call_out' },\n        'typeOutgoingColor':          { 'default': '' },\n        'typeActiveIncoming':         { 'default': 'phone_ring_in' },\n        'typeActiveIncomingColor':    { 'default': '' },\n        'typeRejectedIncoming':       { 'default': 'phone_call_end_in' },\n        'typeRejectedIncomingColor':  { 'default': '' },\n        'typeActiveOutgoing':         { 'default': 'phone_ring_out' },\n        'typeActiveOutgoingColor':    { 'default': '' },\n        'typeUnknown':                { 'default': 'text_question_mark' },\n        'typeUnknownColor':           { 'default': '' }\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    'tr064ListRefreshed': 'qx.event.type.Event' // event to support unit test\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    device: {\n      check: 'String',\n      init: ''\n    },\n    max: {\n      check: 'Number',\n      init: 0\n    },\n    columns:      { check: 'String' },\n    TAM:          { check: 'String' },\n    TAMColor:     { check: 'String' },\n    TAMwait:      { check: 'String' },\n    TAMwaitColor: { check: 'String' },\n    TAMplay:      { check: 'String' },\n    TAMplayColor: { check: 'String' },\n    TAMstop:      { check: 'String' },\n    TAMstopColor: { check: 'String' },\n    typeIncoming:               { check: 'String' },\n    typeIncomingColor:          { check: 'String' },\n    typeMissed:                 { check: 'String' },\n    typeMissedColor:            { check: 'String' },\n    typeOutgoing:               { check: 'String' },\n    typeOutgoingColor:          { check: 'String' },\n    typeActiveIncoming:         { check: 'String' },\n    typeActiveIncomingColor:    { check: 'String' },\n    typeRejectedIncoming:       { check: 'String' },\n    typeRejectedIncomingColor:  { check: 'String' },\n    typeActiveOutgoing:         { check: 'String' },\n    typeActiveOutgoingColor:    { check: 'String' },\n    typeUnknown:                { check: 'String' },\n    typeUnknownColor:           { check: 'String' }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __calllistUri: '',\n    __calllistList: undefined,\n    __refreshingCalllist: false,\n    /**\n     * Prevent warning \"Reference values are shared across all instances\"\n     * as the keys are unique a share doesn't matter:\n     * @lint ignoreReferenceField(__TAMeventAttached)\n     */\n    __TAMeventAttached: {},\n    \n    _getInnerDomString: function () {\n      this.refreshCalllist('initial');\n      return '<div class=\"actor\"><table class=\"TR064_calllist\"><tr><td>Loading TR-064...</td></tr></table></div>';\n    },\n    _setupRefreshAction: function() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', function () {\n        if( !this.__refreshingCalllist )\n        {\n          this.refreshCalllist('timer');\n        }\n      }, this);\n      this._timer.start();\n    },\n    _update: function(address, value) {\n      if( !this.__refreshingCalllist )\n      {\n        this.refreshCalllist('update');\n      }\n    },\n      \n    _displayCalllist: function() {\n      var \n        self = this,\n        clLi = this.getDomElement().getElementsByClassName('TR064_calllist')[0],\n        sid  = this.__calllistUri ? this.__calllistUri.replace(/.*sid=/,'') : '',\n        html = '',\n        types = {\n          0:  { name: this.getTypeUnknown()          , color: this.getTypeUnknownColor()           },\n          1:  { name: this.getTypeIncoming()         , color: this.getTypeIncomingColor()          },\n          2:  { name: this.getTypeMissed()           , color: this.getTypeMissedColor()            },\n          3:  { name: this.getTypeOutgoing()         , color: this.getTypeOutgoingColor()          },\n          9:  { name: this.getTypeActiveIncoming ()  , color: this.getTypeActiveIncomingColor()    },\n          10: { name: this.getTypeRejectedIncoming() , color: this.getTypeRejectedIncomingColor()  },\n          11: { name: this.getTypeActiveOutgoing()   , color: this.getTypeActiveOutgoingColor()    }\n        };\n      \n      this.__calllistList.forEach(function(cl){\n        var \n          audio = '',\n          type = (cl.Type in types) ? types[cl.Type] : types[0];\n        \n        if( cl.Path )\n        {\n          audio = '<audio preload=\"none\">'\n            + '<source src=\"resource/plugins/tr064/proxy.php?device=' + self.getDevice() + '&uri='+cl.Path+'%26sid='+sid+'\">'\n            + '</audio>'\n            + '<div class=\"tam clickable\">'\n            + cv.IconHandler.getInstance().getIconText( self.getTAM(), '*', '*', self.getTAMColor() )\n            + '</div>';\n        }\n        \n        html += '<tr>';\n        self.getColumns().split(';').forEach( function(col){\n          switch( col )\n          {\n            case 'type':\n              html += '<td>' + cv.IconHandler.getInstance().getIconText( type.name, '*', '*', type.color )  + '</td>';\n              break;\n            \n            case 'date':\n              html += '<td>' + cl.Date   + '</td>';\n              break;\n            \n            case 'name':\n              html += '<td>' + cl.Name   + '</td>';\n              break;\n            \n            case 'caller':\n              html += '<td>' + cl.Caller + '</td>';\n              break;\n            \n            case 'nameOrCaller':\n              if( cl.Name !== '' )\n              {\n                html += '<td>' + cl.Name   + '</td>';\n              } else {\n                html += '<td>' + cl.Caller + '</td>';\n              }\n              break;\n            \n            case 'tam':\n              html += '<td>' + audio + '</td>'\n              break;\n            \n          }\n        });\n        html += '</tr>';\n      });\n      clLi.innerHTML = html;\n      var tamList = clLi.getElementsByClassName('tam');\n      for( var i = 0; i < tamList.length; i++ )\n      {\n        tamList[i].addEventListener(\"click\", function(){ self.__playTAM(this); } );\n      }\n    },\n    \n    /**\n     * Fetch the TR-064 resource\n     *   /upnp/control/x_contact urn:dslforum-org:service:X_AVM-DE_OnTel:1 \n     *   GetCallList\n     */\n    _getCallListURI: function() {\n      var\n        self = this,\n        url = 'resource/plugins/tr064/soap.php?device=' + this.getDevice() + '&location=upnp/control/x_contact&uri=urn:dslforum-org:service:X_AVM-DE_OnTel:1&fn=GetCallList';\n      \n      window.fetch( url )\n        .then( function( response ) {\n          if( response.ok )\n          {\n            return response.json(); \n          }\n          // else:\n          console.error('Error: reading URL \"' + response.url + ' failed with status ' + response.status + ': ' + response.statusText );\n          self.__calllistUri = '<fail>';\n        })\n        .then( function( data ) {\n          if( typeof data === 'string' ) {\n            self.__calllistUri = data;\n            self.refreshCalllist('getCallListURI');\n          } else {\n            console.error('Error: reading URL \"' + url + ' failed with content:', data );\n            self.__calllistUri = '<fail>';\n          }\n        });\n    },\n\n    refreshCalllist: function(source) {\n      this.__refreshingCalllist = true;\n      \n      if( this.__calllistUri === '<fail>' )\n      {\n        return; // this problem won't fix anymore during this instance\n      }\n      \n      if( this.__calllistUri === '' )\n      {\n        this._getCallListURI();\n        return;\n      }\n      \n      var\n        self = this,\n        url = 'resource/plugins/tr064/proxy.php?device=' + this.getDevice() + '&uri=' + this.__calllistUri + '%26max=' + this.getMax();\n        \n      window.fetch( url )\n        .then( function( response ) {\n          if( response.ok )\n          {\n            return response.text(); \n          }\n          // else:\n          console.error('Error: reading URL \"' + response.url + ' failed with status ' + response.status + ': ' + response.statusText );\n          return '<xml/>';\n        })\n        .then( function( str ) {\n          return (new window.DOMParser()).parseFromString(str, \"text/xml\");\n        })\n        .then( function( data ) {\n          self.__calllistList = [];\n          var itemList = data.getElementsByTagName('Call');\n          for( var i = 0; i < itemList.length; i++ ) {\n            var\n              childrenList = itemList[i].children,\n              entry = {};\n            for( var ii = 0; ii < childrenList.length; ii++ ) {\n              entry[childrenList[ii].nodeName] = childrenList[ii].textContent;\n            }\n            self.__calllistList.push( entry );\n          }\n          self._displayCalllist();\n          self.__refreshingCalllist = false;\n          self.fireEvent('tr064ListRefreshed');\n        })\n        .catch( function( error ) { \n          console.error( 'TR-064 refreshCalllist() error:', error ); \n        });\n    },\n    \n    /**\n     * The EventListener for click on the TAM button.\n     */\n    __playTAM: function( element ) {\n      var\n        self = this,\n        audio = element.previousElementSibling;\n      \n      if( !this.__TAMeventAttached[audio] )\n      {\n        audio.addEventListener( 'ended', function(){self.__TAMstop(element)} );\n        this.__TAMeventAttached[audio] = true;\n      }\n      \n      if( audio.readyState < 4 ) // not ready yet\n      {\n        this.__TAMwait(element);\n      }\n      \n      if( audio.paused )\n      {\n        var playPromise = audio.play();\n        if( playPromise !== undefined )\n        {\n          playPromise\n            .then(function(){self.__TAMplay(element)})\n            .catch(function(){/*NOP*/});\n        }\n      } else {\n        audio.pause();\n        audio.currentTime = 0;\n        this.__TAMstop(element);\n      }\n    },\n    \n    __TAMwait: function( element ) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText( this.getTAMwait(), '*', '*', this.getTAMwaitColor() );\n    },\n    \n    __TAMplay: function( element ) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText( this.getTAMplay(), '*', '*', this.getTAMplayColor() );\n    },\n    \n    __TAMstop: function( element ) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconText( this.getTAMstop(), '*', '*', this.getTAMstopColor() );\n    }\n  },\n\n  defer: function(statics) {\n    var loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/tr064/tr064.css');\n    cv.parser.WidgetParser.addHandler(\"calllist\", cv.plugins.tr064.CallList);\n    cv.ui.structure.WidgetFactory.registerClass(\"calllist\", statics);\n  }\n\n});"
  ]
}