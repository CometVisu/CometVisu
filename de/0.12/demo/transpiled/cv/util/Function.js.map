{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/util/Function.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "throttle",
    "callback",
    "interval",
    "options",
    "context",
    "args",
    "result",
    "timeout",
    "previous",
    "later",
    "leading",
    "Date",
    "apply",
    "abort",
    "window",
    "clearTimeout",
    "call",
    "now",
    "remaining",
    "arguments",
    "trailing",
    "setTimeout",
    "cv",
    "util",
    "Function"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EAAoC;AAElCC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,QAAQ,EAAE,kBAAUC,QAAV,EAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AACxD,YAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,UAAAA,OAAO,GAAG,EAAV;AACD;;AAED,YAAIE,IAAJ,EAAUC,MAAV;AACA,YAAIC,OAAO,GAAG,IAAd;AACA,YAAIC,QAAQ,GAAG,CAAf;;AAEA,YAAIC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACtBD,UAAAA,QAAQ,GAAGL,OAAO,CAACO,OAAR,KAAoB,KAApB,GAA4B,CAA5B,GAAgC,IAAIC,IAAJ,EAA3C;AACAJ,UAAAA,OAAO,GAAG,IAAV;AACAD,UAAAA,MAAM,GAAGL,QAAQ,CAACW,KAAT,CAAeR,OAAf,EAAwBC,IAAxB,CAAT;AACD,SAJD;;AAMA,eAAO;AACLQ,UAAAA,KAAK,EAAE,iBAAY;AACjB,gBAAIN,OAAJ,EAAa;AACXO,cAAAA,MAAM,CAACC,YAAP,CAAoBR,OAApB;AACAA,cAAAA,OAAO,GAAG,IAAV;AACD;AACF,WANI;AAOLS,UAAAA,IAAI,EAAE,gBAAY;AAChB,gBAAIC,GAAG,GAAG,IAAIN,IAAJ,EAAV;;AACA,gBAAI,CAACH,QAAD,IAAaL,OAAO,CAACO,OAAR,KAAoB,KAArC,EAA4C;AAC1CF,cAAAA,QAAQ,GAAGS,GAAX;AACD;;AAED,gBAAIC,SAAS,GAAGhB,QAAQ,IAAIe,GAAG,GAAGT,QAAV,CAAxB;AACAH,YAAAA,IAAI,GAAGc,SAAP;;AACA,gBAAID,SAAS,IAAI,CAAjB,EAAoB;AAClBJ,cAAAA,MAAM,CAACC,YAAP,CAAoBR,OAApB;AACAA,cAAAA,OAAO,GAAG,IAAV;AACAC,cAAAA,QAAQ,GAAGS,GAAX;AACAX,cAAAA,MAAM,GAAGL,QAAQ,CAACW,KAAT,CAAeR,OAAf,EAAwBC,IAAxB,CAAT;AACD,aALD,MAKO,IAAI,CAACE,OAAD,IAAYJ,OAAO,CAACiB,QAAR,KAAqB,KAArC,EAA4C;AACjDb,cAAAA,OAAO,GAAGO,MAAM,CAACO,UAAP,CAAkBZ,KAAlB,EAAyBS,SAAzB,CAAV;AACD;;AACD,mBAAOZ,MAAP;AACD;AAxBI,SAAP;AA0BD;AApDM;AAFyB,GAApC;AAHAgB,EAAAA,EAAE,CAACC,IAAH,CAAQC,QAAR,CAAiB5B,aAAjB,GAAiCA,aAAjC",
  "sourcesContent": [
    "/**\n * Utility module to give some support to work with functions.\n */\nqx.Class.define(\"cv.util.Function\", {\n\n  statics: {\n    /**\n     * Like qx.util.Function.throttle with additional support to abort the throttling.\n     *\n     * @param callback {Function} the callback which should be executed in the given interval\n     * @param interval {Number} Interval in milliseconds\n     * @param options {Map} the keys are <code>leading</code> and <code>trailing</code> to control the\n     * executing of the callback precisely. Default values are <code>true</code> for both options.\n     * @return {Map} with 2 keys <code>call</code> a wrapper function which <em>shields</em> the given callback function\n     *                <code>abort</code> abort throttling and skip the trailing value\n     */\n    throttle: function (callback, interval, options, context) {\n      if (typeof options === \"undefined\") {\n        options = {};\n      }\n\n      var args, result;\n      var timeout = null;\n      var previous = 0;\n\n      var later = function () {\n        previous = options.leading === false ? 0 : new Date();\n        timeout = null;\n        result = callback.apply(context, args);\n      };\n\n      return {\n        abort: function () {\n          if (timeout) {\n            window.clearTimeout(timeout);\n            timeout = null;\n          }\n        },\n        call: function () {\n          var now = new Date();\n          if (!previous && options.leading === false) {\n            previous = now;\n          }\n\n          var remaining = interval - (now - previous);\n          args = arguments;\n          if (remaining <= 0) {\n            window.clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = callback.apply(context, args);\n          } else if (!timeout && options.trailing !== false) {\n            timeout = window.setTimeout(later, remaining);\n          }\n          return result;\n        }\n      };\n    }\n  }\n});\n"
  ]
}