{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/util/Tree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "getChildWidgets",
    "widget",
    "getChildren",
    "filter",
    "child",
    "get$$type",
    "getParentWidget",
    "parent",
    "getParentPageData",
    "path",
    "data",
    "isPage",
    "substr",
    "length",
    "parentPath",
    "model",
    "cv",
    "Model",
    "getInstance",
    "Object",
    "keys",
    "getWidgetData",
    "parts",
    "split",
    "pop",
    "join",
    "getParentData",
    "traverseUp",
    "children",
    "indexOf",
    "getChildElements",
    "element",
    "selector",
    "Array",
    "from",
    "childNodes",
    "prototype",
    "call",
    "m",
    "matches",
    "getParentPage",
    "getParent",
    "getParentGroup",
    "until",
    "limit",
    "parents",
    "parentNode",
    "getAttribute",
    "found",
    "concat",
    "getClosest",
    "elem",
    "findClosest",
    "current",
    "util",
    "Tree"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Tree.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Tree\n *\n * @author tobiasb\n * @since 2016\n */\n\n/**\n * Helper methods for the widget tree\n */\nqx.Class.define('cv.util.Tree', {\n  type: \"static\",\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n\n    /*\n     * *********************************************************\n     * Widget tree helper functions\n     * ********************************************************\n     */\n    getChildWidgets: function(widget, type) {\n      return widget.getChildren().filter(function(child) {\n        return !type || child.get$$type() === type;\n      });\n    },\n\n    /**\n     * Get the parent widget with optional type filter\n     *\n     * @param widget {cv.ui.structure.AbstractWidget} start traversing up the with this widget\n     * @param type {String?} only return parent of this type\n     * @return {cv.ui.structure.AbstractWidget|null}\n     */\n    getParentWidget: function(widget, type) {\n      var parent = widget.getParentWidget();\n      while (parent) {\n        if (!type || parent.get$$type() === type) {\n          return parent;\n        }\n        parent = parent.getParentWidget();\n      }\n    },\n\n    /*\n     * *********************************************************\n     * Widget data tree helper functions\n     * ********************************************************\n     */\n    getParentPageData: function(path) {\n      var data = {};\n      var isPage = path.substr(-1,1) === \"_\"; // path ends with _\n      if (!isPage) {\n        path = path.substr(0, path.length - 1);\n      }\n      var parentPath = path;\n      if (parentPath === \"id_\") {\n        return null;\n      }\n      var model = cv.data.Model.getInstance();\n      while (Object.keys(data).length === 0 && parentPath.length > 2) {\n        data = model.getWidgetData(parentPath);\n        if (parentPath === \"id_\") {\n          break;\n        }\n        var parts = parentPath.substr(0, parentPath.length - 1).split(\"_\");\n        parts.pop();\n        parentPath = parts.join(\"_\") + \"_\";\n      }\n      return data;\n    },\n\n    /**\n     * Returns the data for the parent entry of the given path\n     * @param path {String}\n     * @return {var}\n     */\n    getParentData: function(path) {\n      var data = {};\n\n      function traverseUp(path) {\n        var parts = path.split(\"_\");\n        if (parts[parts.length - 1] === \"\") {\n          parts.pop();\n        } else {\n          parts[parts.length - 1] = \"\";\n        }\n        return parts.join(\"_\");\n      }\n      var parentPath = traverseUp(path);\n      if (parentPath === \"id\") {\n        // no parent\n        return null;\n      }\n\n      var model = cv.data.Model.getInstance();\n      while (parentPath.length >= 2) {\n        data = model.getWidgetData(parentPath);\n        if (parentPath === \"id_\" || (data.children && data.children.indexOf(path) >= 0)) {\n          return data;\n        }\n        parentPath = traverseUp(parentPath);\n      }\n      return null;\n    },\n\n    /*\n    * *********************************************************\n    * DOM-Element tree helper functions\n    * ********************************************************\n    */\n    getChildElements: function(element, selector) {\n      return Array.from(element.childNodes).filter(function(child) {\n        if (selector) {\n          return Array.prototype.filter.call(child,function(m){return m.matches(selector);});\n        } else {\n          return true;\n        }\n      }, this);\n    },\n\n    getParentPage: function(element) {\n      return this.getParent(element, \"#pages\", \".page\", 1)[0];\n    },\n\n    getParentGroup: function(element) {\n      return this.getParent(element, \"#pages\", \".group\", 1)[0];\n    },\n\n    getParent: function(element, until, selector, limit) {\n      var parents = [];\n      var parent = element.parentNode;\n      while (parent && parent.getAttribute('id') !== \"pages\") {\n        var found = [parent];\n        if (selector) {\n          found = Array.prototype.filter.call(found,function(m){return m.matches(selector);});\n        }\n        parents = parents.concat(found);\n        if (limit && parents.length >= limit) {\n          break;\n        }\n        if (until && Array.prototype.filter.call([parent],function(m){return m.matches(until);}).length > 0) {\n          break;\n        }\n        parent = parent.parentNode;\n      }\n      return parents;\n    },\n\n    getClosest: function(elem, selector) {\n\n      var findClosest = function (current) {\n        var found = Array.prototype.filter.call([current],function(m){return m.matches(selector);});\n        if (found.length) {\n          return found[0];\n        } else {\n          current = current.parentNode; // One up\n          if (current && current.parentNode) {\n            return findClosest(current);\n          }\n        }\n      };\n      return findClosest(elem);\n    }\n  }\n});"
  ]
}