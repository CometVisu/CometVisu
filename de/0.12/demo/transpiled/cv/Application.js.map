{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "statics",
    "HTML_STRUCT",
    "consoleCommands",
    "__commandManager",
    "createClient",
    "args",
    "Array",
    "prototype",
    "slice",
    "call",
    "arguments",
    "cv",
    "Config",
    "configSettings",
    "pluginsToLoad",
    "push",
    "unshift",
    "testMode",
    "Function",
    "bind",
    "apply",
    "Mockup",
    "Client",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "window",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "check",
    "init",
    "event",
    "commandManager",
    "deferredInit",
    "members",
    "_blocker",
    "block",
    "val",
    "bom",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "main",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "length",
    "join",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "add",
    "addListener",
    "showManager",
    "request",
    "queryKey",
    "manager",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "states",
    "engine",
    "isLoggedIn",
    "addListenerOnce",
    "ManagerMain",
    "toggleVisibility",
    "constructor",
    "$$instance",
    "setVisible",
    "getVisible",
    "ex",
    "bugData",
    "getClientData",
    "body",
    "tr",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "core",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "message",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "substring",
    "stack",
    "exc",
    "JSON",
    "stringify",
    "notification",
    "topic",
    "target",
    "PopupHandler",
    "title",
    "severity",
    "deletable",
    "actions",
    "optionGroup",
    "options",
    "link",
    "action",
    "ev",
    "parent",
    "getTarget",
    "parentNode",
    "id",
    "classList",
    "contains",
    "box",
    "querySelector",
    "url",
    "location",
    "href",
    "split",
    "shift",
    "checked",
    "Uri",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reportAction",
    "reporting",
    "download",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "notifications",
    "Router",
    "dispatchMessage",
    "throwError",
    "onerror",
    "Error",
    "Registration",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "stopAll",
    "Lifecycle",
    "onReady",
    "document",
    "enableCache",
    "ConfigCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "innerHTML",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "xml",
    "loader",
    "ScriptLoader",
    "setScriptsLoaded",
    "isValid",
    "cacheUsed",
    "clear",
    "data",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "initBackendClient",
    "__detectInitialPage",
    "structure",
    "getStructure",
    "loadParts",
    "setStructureLoaded",
    "error",
    "treePath",
    "initialPage",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "loadPlugins",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "loadIcons",
    "parseXML",
    "Bus",
    "subscribe",
    "dump",
    "iconsFromConfig",
    "icon",
    "IconHandler",
    "insert",
    "uri",
    "type",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "allPluginsQueued",
    "getData",
    "Timer",
    "once",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "LibraryManager",
    "get",
    "plugin",
    "hasOwnProperty",
    "startsWith",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "startpage",
    "Environment",
    "localStorage",
    "getItem",
    "rememberLastPage",
    "substr",
    "removeItem",
    "req",
    "parseUri",
    "anchor",
    "match",
    "getPageIdByPath"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Application.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icon/*)\n * @asset(sentry/bundle.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define(\"cv.Application\",\n{\n  extend : qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    var lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    HTML_STRUCT: '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" class=\"clearfix\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>',\n    consoleCommands: [],\n    __commandManager: null,\n\n    /**\n     * Client factory method -> create a client\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient: function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[0] === \"openhab2\") {\n        // auto-load openhab plugin for this backend\n        cv.Config.configSettings.pluginsToLoad.push(\"plugin-openhab\");\n      }\n      args.unshift(null);\n      if (cv.Config.testMode === true) {\n        return  new (Function.prototype.bind.apply(cv.io.Mockup, args)); // jshint ignore:line\n      } else {\n        return new (Function.prototype.bind.apply(cv.io.Client, args)); // jshint ignore:line\n      }\n    },\n\n    /**\n     * Register shortcuts to usefull commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand: function(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + \"() - \" + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _blocker: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block: function(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor(\"#000000\");\n          this._blocker.setBlockerOpacity(\"0.2\");\n        }\n        this._blocker.block();\n      } else if (this._blocker){\n        this._blocker.unblock();\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (typeof replayLog !== \"undefined\" && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n      cv.report.Record.prepare();\n\n      var info = \"\\n\"+\n        \"  _____                     ___      ___\\n\"+\n        \" / ____|                   | \\\\ \\\\    / (_)\\n\"+\n        \"| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n\"+\n        \"| |    / _ \\\\| '_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n\"+\n        \"| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n\"+\n        \" \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n\"+\n        \"-----------------------------------------------------------\\n\"+\n        \" ©2010-\"+(new Date().getFullYear())+\" Christian Mayer and the CometVisu contributers.\\n\"+\n        \" Version: \"+cv.Version.VERSION+\"\\n\";\n\n      if (cv.Application.consoleCommands.length) {\n        info += \"\\n Available commands:\\n\"+\n          \"    \"+cv.Application.consoleCommands.join(\"\\n    \")+\"\\n\";\n      }\n\n      info += \"-----------------------------------------------------------\\n\\n\";\n\n      console.log(info);\n\n      // add command to load and open the manager\n      var manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add(\"open-manager\", manCommand);\n      manCommand.addListener('execute', this.showManager, this);\n      if (cv.Config.request.queryKey.manager) {\n        this.showManager();\n      }\n\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      this.base(arguments);\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n\n      this.__init();\n    },\n\n    showManager: function () {\n      qx.io.PartLoader.require(['manager'], function (states) {\n        // break dependency\n        var engine = cv.TemplateEngine.getInstance();\n        if (!engine.isLoggedIn()) {\n          // never start the manager before we are logged in, as the login response might contain information about the REST API URL\n          engine.addListenerOnce('changeLoggedIn', this.showManager, this);\n          return;\n        }\n        var ManagerMain = cv.ui['manager']['Main'];\n        var toggleVisibility = !!ManagerMain.constructor.$$instance;\n        var manager = ManagerMain.getInstance();\n        if (toggleVisibility) {\n          manager.setVisible(!manager.getVisible());\n        }\n      }, this);\n    },\n\n    __globalErrorHandler: function(ex) {\n      // connect client data for Bug-Report\n      var bugData = cv.report.Record.getClientData();\n      var body = \"**\"+qx.locale.Manager.tr(\"Please describe what you have done until the error occured?\")+\"**\\n \\n\\n\";\n      var exString = \"\";\n      var maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      }\n      else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + \"\\nin \" + ex.getUri() + \" line \" + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + \": \" + ex.message;\n        if (ex.fileName) {\n          exString += \"\\n in file \" + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += \"\\n line \" + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += \"\\n Description: \" + ex.description;\n        }\n        try {\n          var lastLine = '';\n          var repeated = 0;\n          var nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += \"\\nNormalized Stack: \" + nStack.substring(0, maxTraceLength) + \"\\n\";\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += \"\\nOriginal Stack: \" + ex.stack + \"\\n\";\n          }\n        } catch(exc) {\n          if (ex.stack) {\n            exString += \"\\nStack: \" + ex.stack.substring(0, maxTraceLength) + \"\\n\";\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n      body += \"```\\n\"+exString+\"\\n```\\n\\n**Client-Data:**\\n```\\n\"+JSON.stringify(bugData, null, 2)+\"\\n```\";\n\n      var notification = {\n        topic: \"cv.error\",\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr(\"An error occured\"),\n        message: \"<pre>\"+ (ex.stack || exString) +\"</pre>\",\n        severity: \"urgent\",\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr(\"Enable on reload:\"),\n            options: []\n          },\n          link: [\n            {\n              title: qx.locale.Manager.tr(\"Reload\"),\n              action: function(ev) {\n                var parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === \"notification-center\" || parent.classList.contains(\"popup\")) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                var box = parent.querySelector(\"#enableReporting\");\n                var url = window.location.href.split(\"#\").shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, \"reporting=true\");\n                }\n                box = parent.querySelector(\"#reportErrors\");\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, \"reportErrors=true\");\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n      // reload with reporting checkbox\n      var reportAction = null;\n      var link = \"\";\n      if (cv.Config.reporting) {\n        // reporting is enabled -> download log and show hint how to append it to the ticket\n        body = '<!--\\n'+qx.locale.Manager.tr(\"Please do not forget to attach the downloaded Logfile to this ticket.\")+'\\n-->\\n\\n'+body;\n        reportAction = cv.report.Record.download;\n      } else {\n        if (qx.locale.Manager.getInstance().getLanguage() === \"de\") {\n          link = ' <a href=\"http://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr(\"Action recording\") + link,\n          name: \"enableReporting\"\n        });\n        // notification.message+='<div class=\"actions\"><input class=\"enableReporting\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable reporting on reload\")+link+'</div>';\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push(\n            {\n              title: qx.locale.Manager.tr(\"Send error to sentry.io\"),\n              action: function () {\n                Sentry.captureException(ex);\n              },\n              needsConfirmation: false,\n              deleteMessageAfterExecution: true\n            }\n          );\n        } else {\n          link = \"\";\n          if (qx.locale.Manager.getInstance().getLanguage() === \"de\") {\n            link = ' <a href=\"http://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr(\"Error reporting (on sentry.io)\") + link,\n            name: \"reportErrors\",\n            style: \"margin-left: 18px\"\n          });\n          // notification.message+='<div class=\"actions\"><input class=\"reportErrors\" type=\"checkbox\" value=\"true\"/>'+qx.locale.Manager.tr(\"Enable error reporting\")+link+'</div>';\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      \"true\":  function () {\n        window.onerror(new Error('test error'));\n      },\n      \"false\": null\n    }),\n\n    /**\n     * Internal initialization method\n     */\n    __init: function() {\n      qx.event.Registration.addListener(window, 'resize', cv.ui.layout.ResizeHandler.invalidateScreensize, cv.ui.layout.ResizeHandler);\n      qx.event.Registration.addListener(window, 'unload', function () {\n        cv.io.Client.stopAll();\n      }, this);\n      qx.bom.Lifecycle.onReady(function () {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n        var body = document.querySelector(\"body\");\n\n        if (cv.Config.enableCache && cv.ConfigCache.isCached()) {\n          // load settings\n          this.debug(\"using cache\");\n          cv.ConfigCache.restore();\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        } else {\n          // load empty HTML structure\n          body.innerHTML = cv.Application.HTML_STRUCT;\n          // initialize NotificationCenter\n          cv.ui.NotificationCenter.getInstance();\n          cv.ui.ToastManager.getInstance();\n        }\n        var configLoader = new cv.util.ConfigLoader();\n        configLoader.load(this.bootstrap, this);\n      }, this);\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    bootstrap: function(xml) {\n      this.debug(\"bootstrapping\");\n      var engine = cv.TemplateEngine.getInstance();\n      var loader = cv.util.ScriptLoader.getInstance();\n\n      engine.xml = xml;\n      loader.addListenerOnce(\"finished\", function() {\n        engine.setScriptsLoaded(true);\n      }, this);\n      if (cv.Config.enableCache && cv.ConfigCache.isCached()) {\n\n        // check if cache is still valid\n        if (!cv.ConfigCache.isValid(xml)) {\n          this.debug(\"cache is invalid re-parse xml\");\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n\n          // load empty HTML structure\n          var body = document.querySelector(\"body\");\n          body.innerHTML = cv.Application.HTML_STRUCT;\n\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          engine.initBackendClient();\n          this.__detectInitialPage();\n\n          // load part for structure\n          var structure = cv.Config.getStructure();\n          this.debug(\"loading structure \"+structure);\n          engine.loadParts([structure], function(states) {\n            if (states === \"complete\") {\n              this.debug(structure + \" has been loaded\");\n              this.setStructureLoaded(true);\n            } else {\n              this.error(structure + \" could not be loaded\");\n              this.setStructureLoaded(false);\n            }\n          }, this);\n\n          engine.addListenerOnce(\"changeReady\", function() {\n            // create the objects\n            cv.Config.treePath = cv.Config.initialPage;\n            var data = cv.data.Model.getInstance().getWidgetData(\"id_\");\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          }, this);\n          // check if the current design settings overrides the cache one\n          this.loadPlugins();\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            var styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function(style) {\n              styles.push(style.replace(\"designs/\"+cv.Config.configSettings.clientDesign, \"designs/\"+cv.Config.clientDesign));\n            }, this);\n            this.loadStyles(styles);\n\n            var scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function(style) {\n              scripts.push(style.replace(\"designs/\"+cv.Config.configSettings.clientDesign, \"designs/\"+cv.Config.clientDesign));\n            }, this);\n            this.loadScripts(scripts);\n\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n          this.loadIcons();\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug(\"starting\");\n        this.__detectInitialPage();\n        engine.parseXML(xml, function () {\n          this.loadPlugins();\n          this.loadStyles();\n          this.loadScripts();\n          this.debug(\"done\");\n\n          if (cv.Config.enableCache) {\n            // cache dom + data when everything is ready\n            qx.event.message.Bus.subscribe(\"setup.dom.finished\", function() {\n              cv.ConfigCache.dump(xml);\n            }, this);\n          }\n        }.bind(this));\n      }\n    },\n\n    /**\n     * Adds icons which were defined in the current configuration to the {@link cv.IconHandler}\n     */\n    loadIcons: function() {\n      cv.Config.configSettings.iconsFromConfig.forEach(function(icon) {\n        cv.IconHandler.getInstance().insert(icon.name, icon.uri, icon.type, icon.flavour, icon.color, icon.styling, icon.dynamic);\n      }, this);\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles: function(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        cv.util.ScriptLoader.getInstance().addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts: function(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins: function() {\n      var plugins = cv.Config.configSettings.pluginsToLoad;\n      if (plugins.length > 0) {\n        var standalonePlugins = [];\n        var partsLoaded = false;\n        var allPluginsQueued = false;\n        this.debug(\"loading plugins\");\n        var engine = cv.TemplateEngine.getInstance();\n        engine.addListener(\"changePartsLoaded\", function(ev) {\n          if (ev.getData() === true) {\n            this.debug(\"plugins loaded\");\n            partsLoaded = true;\n            if (allPluginsQueued) {\n              qx.event.Timer.once(function () {\n                cv.util.ScriptLoader.getInstance().setAllQueued(true);\n              }, this, 0);\n            }\n          }\n        }, this);\n        var parts = qx.Part.getInstance().getParts();\n        var partPlugins = [];\n        var path = qx.util.LibraryManager.getInstance().get('cv', 'resourceUri');\n        plugins.forEach(function(plugin) {\n          if (parts.hasOwnProperty(plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(path + \"/plugins/\" + plugin.replace(\"plugin-\", \"\") + \"/index.js\");\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they use need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            var lid = this.addListener('changeStructureLoaded', function (ev) {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            }, this);\n          }\n        } else {\n          allPluginsQueued = true;\n        }\n      } else {\n        this.debug(\"no plugins to load => all scripts queued\");\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __detectInitialPage: function() {\n      var startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get(\"html.storage.local\") === true) {\n          if ('remember' === startpage) {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if ('string' !== typeof( startpage ) || 'id_' !== startpage.substr(0, 3)) {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if ('noremember' === startpage) {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        var req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === \"id_\") {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n      } else {\n        // wait for DOM to be ready and detect the page id then\n        qx.event.message.Bus.subscribe(\"setup.dom.finished.before\", function() {\n          cv.Config.initialPage = cv.TemplateEngine.getInstance().getPageIdByPath(startpage) || \"id_\";\n        });\n      }\n    }\n  }\n});\n"
  ]
}