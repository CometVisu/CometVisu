{
  "version": 3,
  "sources": [
    "/home/travis/build/CometVisu/CometVisu/source/class/cv/transforms/OpenHab.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "isUndefined",
    "value",
    "undefined",
    "indexOf",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "encode",
    "phy",
    "decode",
    "string",
    "transforms",
    "OpenHab",
    "parseInt",
    "str",
    "parseFloat",
    "Date",
    "toLocaleDateString",
    "parse",
    "toLocaleTimeString",
    "date",
    "parts",
    "split",
    "setHours",
    "setMinutes",
    "setSeconds",
    "rgb",
    "util",
    "ColorUtil",
    "rgbToHsb",
    "hsbString",
    "hsbToRgb"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;AAEvC;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,qBAASC,KAAT,EAAgB;AAC3B,eAAO,CAAC,KAAD,EAAQ,eAAR,EAAyB,MAAzB,EAAiCC,SAAjC,EAA4C,IAA5C,EAAkDC,OAAlD,CAA0DF,KAA1D,KAAoE,CAA3E;AACD;AAHM,KAP8B;;AAcvC;AACF;AACA;AACA;AACEG,IAAAA,KAAK,EAAE,iBAAW;AAChBC,MAAAA,EAAE,CAACC,SAAH,CAAaC,YAAb,CAA0B,IAA1B,EAAgC;AAC9B,kBAAU;AACRC,UAAAA,IAAI,EAAE,WADE;AAERC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB;AACA,mBAAOA,GAAG,IAAI,CAAP,GAAW,IAAX,GAAkB,KAAzB,CAFqB,CAEW;AACjC,WALO;AAMRC,UAAAA,MAAM,EAAE,gBAAUC,MAAV,EAAkB;AACxB,gBAAIP,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCY,MAAlC,CAAJ,EAA+C;AAAE,qBAAO,CAAP;AAAW;;AAC5D,mBAAQA,MAAM,KAAK,IAAX,IAAmBG,QAAQ,CAACH,MAAD,CAAR,GAAmB,CAAvC,GAA4C,CAA5C,GAAgD,CAAvD;AACD;AATO,SADoB;AAY9B,mBAAW;AACTJ,UAAAA,IAAI,EAAE,YADG;AAETC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB;AACA,mBAAOA,GAAG,IAAI,CAAP,GAAW,MAAX,GAAoB,QAA3B,CAFqB,CAEgB;AACtC,WALQ;AAMTC,UAAAA,MAAM,EAAE,gBAAUC,MAAV,EAAkB;AACxB,gBAAIP,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCY,MAAlC,CAAJ,EAA+C;AAAE,qBAAO,CAAP;AAAW;;AAC5D,mBAAOA,MAAM,KAAK,MAAX,GAAoB,CAApB,GAAwB,CAA/B;AACD;AATQ,SAZmB;AAuB9B,yBAAiB;AACfJ,UAAAA,IAAI,EAAE,kBADS;AAEfC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB;AACA,gBAAIA,GAAG,IAAI,CAAX,EAAc;AAAE,qBAAO,MAAP;AAAgB,aAAhC,CAAiC;AAAjC,iBACK,IAAIA,GAAG,IAAI,CAAX,EAAc;AAAE,uBAAO,IAAP;AAAc,eAA9B,CAA+B;AAA/B,mBACA;AAAE,yBAAOA,GAAP;AAAa;AACrB,WAPc;AAQfC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,CAAP;AAAW,aAAzD,MACK,IAAIA,GAAG,KAAK,IAAZ,EAAkB;AAAE,qBAAO,CAAP;AAAW,aAA/B,MACA,IAAIA,GAAG,KAAK,MAAZ,EAAoB;AAAE,qBAAO,CAAP;AAAW,aAAjC,MACA;AAAE,qBAAOA,GAAP;AAAa;AACrB;AAbc,SAvBa;AAsC9B,kBAAU;AACRR,UAAAA,IAAI,EAAE,WADE;AAERC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB,mBAAOK,QAAQ,CAACL,GAAD,CAAf;AACD,WAJO;AAKRC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,CAAP;AAAW,aAAzD,MACK,IAAIA,GAAG,KAAK,IAAZ,EAAkB;AAAE,qBAAO,GAAP;AAAa,aAAjC,MACA,IAAIA,GAAG,KAAK,KAAZ,EAAmB;AAAE,qBAAO,CAAP;AAAW,aAAhC,MACA;AAAE,qBAAOD,QAAQ,CAACC,GAAD,CAAf;AAAuB;AAC/B;AAVO,SAtCoB;AAkD9B,kBAAU;AACRR,UAAAA,IAAI,EAAE,WADE;AAERC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB,mBAAOO,UAAU,CAACP,GAAD,CAAjB;AACD,WAJO;AAKRC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,CAAP;AAAW;;AACzD,mBAAOC,UAAU,CAACD,GAAD,CAAjB;AACD;AARO,SAlDoB;AA4D9B,kBAAU;AACRR,UAAAA,IAAI,EAAE,WADE;AAERC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB,mBAAOA,GAAP;AACD,WAJO;AAKRC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,EAAP;AAAY;;AAC1D,mBAAOA,GAAP;AACD;AARO,SA5DoB;AAsE9B,oBAAY;AACVR,UAAAA,IAAI,EAAE,aADI;AAEVC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB,gBAAIA,GAAG,YAAYQ,IAAnB,EAAyB;AACvB,qBAAOR,GAAG,CAACS,kBAAJ,EAAP;AACD,aAFD,MAEO;AACL,qBAAOT,GAAP;AACD;AACF,WARS;AASVC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,GAAP;AAAa;;AAC3D,mBAAO,IAAIE,IAAJ,CAASA,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAAT,CAAP;AACD;AAZS,SAtEkB;AAoF9B,gBAAQ;AACNR,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,MAAM,EAAE,gBAAUC,GAAV,EAAe;AACrB,gBAAIA,GAAG,YAAYQ,IAAnB,EAAyB;AACvB,qBAAOR,GAAG,CAACW,kBAAJ,EAAP;AACD,aAFD,MAEO;AACL,qBAAOX,GAAP;AACD;AACF,WARK;AASNC,UAAAA,MAAM,EAAE,gBAAUK,GAAV,EAAe;AACrB,gBAAIX,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgB,GAAlC,CAAJ,EAA4C;AAAE,qBAAO,GAAP;AAAa;;AAC3D,gBAAIM,IAAI,GAAG,IAAIJ,IAAJ,EAAX;AACA,gBAAIK,KAAK,GAAGP,GAAG,CAACQ,KAAJ,CAAU,GAAV,CAAZ;AACAF,YAAAA,IAAI,CAACG,QAAL,CAAcV,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAtB;AACAD,YAAAA,IAAI,CAACI,UAAL,CAAgBX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAxB;AACAD,YAAAA,IAAI,CAACK,UAAL,CAAgBZ,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAxB;AACA,mBAAOD,IAAP;AACD;AAjBK,SApFsB;AAuG9B,iBAAS;AACPd,UAAAA,IAAI,EAAE,UADC;AAEPC,UAAAA,MAAM,EAAE,gBAAUmB,GAAV,EAAe;AACrB,mBAAOnC,EAAE,CAACoC,IAAH,CAAQC,SAAR,CAAkBC,QAAlB,CAA2BH,GAA3B,CAAP;AACD,WAJM;AAKPjB,UAAAA,MAAM,EAAE,gBAAUqB,SAAV,EAAqB;AAC3B,gBAAI3B,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBd,WAAtB,CAAkCgC,SAAlC,CAAJ,EAAkD;AAAE,qBAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAP;AAAiB,aAD1C,CAE3B;;;AACA,mBAAOvC,EAAE,CAACoC,IAAH,CAAQC,SAAR,CAAkBG,QAAlB,CAA2BD,SAAS,CAACR,KAAV,CAAgB,GAAhB,CAA3B,CAAP;AACD;AATM;AAvGqB,OAAhC;AAmHD;AAtIsC,GAAzC;AA1BAnB,EAAAA,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBlB,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* OpenHab.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Transformations for the openHAB backend\n * \n * @author Tobias BrÃ¤utigam\n * @since 2012\n */\nqx.Class.define('cv.transforms.OpenHab', {\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    isUndefined: function(value) {\n      return ['NaN', 'Uninitialized', 'NULL', undefined, null].indexOf(value) >= 0;\n    }\n  },\n\n  \n  /**\n   * This class defines the default transforms: encode: transform JavaScript to\n   * bus value decode: transform bus to JavaScript value\n   */\n  defer: function() {\n    cv.Transform.addTransform('OH', {\n      'switch': {\n        name: 'OH_Switch',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          return phy == 1 ? 'ON' : 'OFF'; // jshint ignore:line\n        },\n        decode: function (string) {\n          if (cv.transforms.OpenHab.isUndefined(string)) { return 0; }\n          return (string === \"ON\" || parseInt(string) > 0) ? 1 : 0;\n        }\n      },\n      'contact': {\n        name: 'OH_Contact',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          return phy == 1 ? 'OPEN' : 'CLOSED'; // jshint ignore:line\n        },\n        decode: function (string) {\n          if (cv.transforms.OpenHab.isUndefined(string)) { return 0; }\n          return string === \"OPEN\" ? 1 : 0;\n        }\n      },\n      'rollershutter': {\n        name: \"OH_RollerShutter\",\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          if (phy == 1) { return 'DOWN'; } // jshint ignore:line\n          else if (phy == 0) { return 'UP'; } // jshint ignore:line\n          else { return phy; }\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return 0; }\n          else if (str === \"UP\") { return 0; }\n          else if (str === \"DOWN\") { return 1; }\n          else { return str; }\n        }\n      },\n      'dimmer': {\n        name: \"OH_Dimmer\",\n        encode: function (phy) {\n          return parseInt(phy);\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return 0; }\n          else if (str === \"ON\") { return 100; }\n          else if (str === \"OFF\") { return 0; }\n          else { return parseInt(str); }\n        }\n      },\n      'number': {\n        name: \"OH_Number\",\n        encode: function (phy) {\n          return parseFloat(phy);\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return 0; }\n          return parseFloat(str);\n        }\n      },\n      'string': {\n        name: \"OH_String\",\n        encode: function (phy) {\n          return phy;\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return ''; }\n          return str;\n        }\n      },\n      'datetime': {\n        name: \"OH_DateTime\",\n        encode: function (phy) {\n          if (phy instanceof Date) {\n            return phy.toLocaleDateString();\n          } else {\n            return phy;\n          }\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return '-'; }\n          return new Date(Date.parse(str));\n        }\n      },\n      'time': {\n        name: \"OH_Time\",\n        encode: function (phy) {\n          if (phy instanceof Date) {\n            return phy.toLocaleTimeString();\n          } else {\n            return phy;\n          }\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) { return '-'; }\n          var date = new Date();\n          var parts = str.split(\":\");\n          date.setHours(parseInt(parts[0]));\n          date.setMinutes(parseInt(parts[1]));\n          date.setSeconds(parseInt(parts[2]));\n          return date;\n        }\n      },\n      'color': {\n        name: \"OH_Color\",\n        encode: function (rgb) {\n          return qx.util.ColorUtil.rgbToHsb(rgb);\n        },\n        decode: function (hsbString) {\n          if (cv.transforms.OpenHab.isUndefined(hsbString)) { return [0,0,0]; }\n          // decode HSV/HSB to RGB\n          return qx.util.ColorUtil.hsbToRgb(hsbString.split(\",\"));\n        }\n      }\n    });\n  }\n});"
  ]
}