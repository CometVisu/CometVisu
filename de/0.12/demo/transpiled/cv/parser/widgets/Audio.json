{
  "className": "cv.parser.widgets.Audio",
  "packageName": "cv.parser.widgets",
  "name": "Audio",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 2
      },
      "end": {
        "line": 87,
        "column": 5
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Audio.js\n copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the Free\n Software Foundation; either version 3 of the License, or (at your option)\n any later version.\n This program is distributed in the hope that it will be useful, but WITHOUT\n ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n more details.\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA</p>"
        },
        {
          "name": "@description",
          "body": "<p>Parse &lt;audio;gt; config elements</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": true,
  "isSingleton": false,
  "statics": {
    "parse": {
      "location": {
        "start": {
          "line": 44,
          "column": 6
        },
        "end": {
          "line": 49,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the widgets XML configuration and extracts the given information\n to a simple key/value map.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xml {Element} XML-Element",
            "paramName": "xml",
            "description": " XML-Element",
            "type": "Element"
          },
          {
            "name": "@param",
            "body": "path {String} internal path of the widget",
            "paramName": "path",
            "description": " internal path of the widget",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "flavour {String} Flavour of the widget",
            "paramName": "flavour",
            "description": " Flavour of the widget",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "pageType {String} Page type (2d, 3d, ...)",
            "paramName": "pageType",
            "description": " Page type (2d, 3d, ...)",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} extracted data from config element as key/value map",
            "type": "Map",
            "description": " extracted data from config element as key/value map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAttributeToPropertyMappings": {
      "location": {
        "start": {
          "line": 63,
          "column": 6
        },
        "end": {
          "line": 81,
          "column": 7
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a map with definitions for the XML Parser to map XML-Attribute values\n to properties e.g\n </p>\n<pre>{\n  <attribute-name>: {\n    target: <property-name>,\n    default: <default-value>,\n    transform: <callback to transform the value to the desired value>\n  }\n }</pre>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Object",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 83,
        "column": 11
      },
      "end": {
        "line": 86,
        "column": 5
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}