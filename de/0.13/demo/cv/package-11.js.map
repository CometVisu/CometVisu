{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseRefresh","src","width","default","height","limit","header","date","content","snippet","showerror","ssl","linktarget","link","title","properties","check","init","members","_parser","_getInnerDomString","getWidth","getHeight","_onDomReady","plugins","Rss","superclass","prototype","call","RSSParser","refreshRSS","_setupRefreshAction","_this","_timer","event","Timer","getRefresh","addListener","start","_this2","parseURL","getSrc","err","feed","actor","getActor","target","querySelector","error","getShowerror","textContent","getHeader","headline","document","createElement","insertBefore","firstElementChild","elements","querySelectorAll","i","length","items","remove","useLink","getLink","showContent","getContent","showDate","getDate","some","entry","a","elem","setAttribute","getLinktarget","appendChild","classList","add","innerHTML","getSnippet","contentSnippet","innerText","Date","isoDate","toLocaleString","getLimit","destruct","defer","util","ScriptLoader","getInstance","addScripts","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Rss.js"],"sourcesContent":["/* Rss.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This plugins displays RSS-Feeds in the CometVisu.\n *\n * <pre class=\"sunlight-highlight-xml\">\n *   &lt;rss src=&quot;/visu/plugins/rss/rsslog.php&quot; refresh=&quot;300&quot; link=&quot;false&quot; title=&quot;false&quot;&gt;&lt;/rss&gt;\n *   &lt;rss src=&quot;http://www.tagesschau.de/xml/rss2&quot; refresh=&quot;300&quot;&gt;Test API&lt;/rss&gt;\n *   &lt;rss src=&quot;/visu/plugins/rss/tagesschau-rss2.xml&quot; refresh=&quot;300&quot; header=&quot;true&quot; date=&quot;true&quot;&gt;&lt;/rss&gt;\n * </pre>\n *\n * @author Michael Markstaller\n * @since 2011\n * @ignore(RSSParser)\n * @asset(plugins/rss/rss-parser.min.js)\n */\nqx.Class.define('cv.plugins.Rss', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        src: {},\n        width: { default: '' },\n        height: { default: '' },\n        limit: { default: 10 },\n        header: { default: true },\n        date: { default: true },\n        content: { default: true },\n        snippet: { default: true },\n        showerror: { default: true },\n        ssl: { default: false },\n        linktarget: { default: '_new' },\n        link: { default: true },\n        title: { default: true }\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: { check: 'String', init: '' },\n    width: { init: '' },\n    height: { init: '' },\n    limit: { init: 10 },\n    header: { init: true },\n    date: { init: true },\n    content: { init: true },\n    snippet: { init: true },\n    showerror: { init: true },\n    ssl: { init: false },\n    linktarget: { init: '_new' },\n    link: { init: true },\n    title: { init: true }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    _parser: null,\n\n    _getInnerDomString() {\n      const rssstyle =\n        '' + this.getWidth() ? 'width:' + this.getWidth() : '' + this.getHeight() ? 'height:' + this.getHeight() : '';\n      return '<div class=\"actor\"><ul class=\"rss_inline\" style=\"' + rssstyle + '\"></ul>';\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n      this._parser = new RSSParser();\n      this.refreshRSS();\n    },\n\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        this.refreshRSS();\n      });\n      this._timer.start();\n    },\n\n    refreshRSS() {\n      this._parser.parseURL(this.getSrc(), (err, feed) => {\n        const actor = this.getActor();\n        let target = actor.querySelector('.rss_inline');\n        if (err) {\n          this.error(err);\n          if (this.getShowerror()) {\n            target.textContent = 'ERROR: ' + err;\n          }\n          return;\n        }\n        if (this.getHeader()) {\n          let headline = actor.querySelector(':scope > h3');\n          if (!headline) {\n            headline = document.createElement('h3');\n            actor.insertBefore(headline, actor.firstElementChild);\n          }\n          headline.textContent = feed.title;\n        }\n\n        const elements = target.querySelectorAll(':scope > li');\n        for (let i = elements.length; i >= feed.items.length; i--) {\n          elements[i].remove();\n        }\n\n        const useLink = this.getLink();\n        const showContent = this.getContent();\n        const showDate = this.getDate();\n\n        feed.items.some((entry, i) => {\n          let elem = target.querySelector(':scope > li[data-row=\"' + i + '\"]');\n          let a;\n          let content;\n          let date;\n          if (!elem) {\n            elem = document.createElement('li');\n            if (useLink) {\n              a = document.createElement('a');\n              a.setAttribute('target', this.getLinktarget());\n              elem.appendChild(a);\n            }\n            if (showContent) {\n              content = document.createElement('p');\n              content.classList.add('content');\n              elem.appendChild(content);\n            }\n            if (showDate) {\n              date = document.createElement('p');\n              date.classList.add('date');\n              elem.appendChild(date);\n            }\n            elem.setAttribute('data-row', '' + i);\n            target.appendChild(elem);\n          } else {\n            if (useLink) {\n              a = elem.querySelector(':scope > a');\n            }\n            if (showContent) {\n              content = elem.querySelector(':scope > p.content');\n            }\n            if (showDate) {\n              date = elem.querySelector(':scope > p.date');\n            }\n          }\n          if (useLink) {\n            a.textContent = entry.title;\n            a.setAttribute('href', entry.link);\n          } else {\n            elem.textContent = entry.title;\n          }\n          if (showContent) {\n            content.innerHTML = this.getSnippet() ? entry.contentSnippet : entry.content;\n          }\n          if (showDate) {\n            date.innerText = new Date(entry.isoDate).toLocaleString();\n          }\n          return i >= this.getLimit();\n        });\n      });\n    }\n  },\n\n  destruct() {\n    this._parser = null;\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addScripts('plugins/rss/rss-parser.min.js');\n    cv.parser.pure.WidgetParser.addHandler('rss', cv.plugins.Rss);\n    cv.ui.structure.WidgetFactory.registerClass('rss', statics);\n  }\n});\n"],"mappings":"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"}