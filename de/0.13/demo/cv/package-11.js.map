{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseRefresh","src","width","default","height","limit","header","date","content","snippet","showerror","ssl","linktarget","link","title","properties","check","init","members","_parser","_getInnerDomString","getWidth","getHeight","_onDomReady","plugins","Rss","superclass","prototype","call","refreshRSS","_setupRefreshAction","_this","_this2","actor","getActor","error","err","target","textContent","headline","querySelector","document","createElement","insertBefore","firstElementChild","elements","i","remove","a","elem","useLink","setAttribute","getLinktarget","appendChild","classList","add","entry","innerHTML","getSnippet","contentSnippet","innerText","Date","isoDate","toLocaleString","destruct","defer","util","ScriptLoader","getInstance","addScripts","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Rss.js"],"sourcesContent":["/* Rss.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This plugins displays RSS-Feeds in the CometVisu.\n *\n * <pre class=\"sunlight-highlight-xml\">\n *   &lt;rss src=&quot;/visu/plugins/rss/rsslog.php&quot; refresh=&quot;300&quot; link=&quot;false&quot; title=&quot;false&quot;&gt;&lt;/rss&gt;\n *   &lt;rss src=&quot;http://www.tagesschau.de/xml/rss2&quot; refresh=&quot;300&quot;&gt;Test API&lt;/rss&gt;\n *   &lt;rss src=&quot;/visu/plugins/rss/tagesschau-rss2.xml&quot; refresh=&quot;300&quot; header=&quot;true&quot; date=&quot;true&quot;&gt;&lt;/rss&gt;\n * </pre>\n *\n * @author Michael Markstaller\n * @since 2011\n * @ignore(RSSParser)\n * @asset(plugins/rss/rss-parser.min.js)\n */\nqx.Class.define('cv.plugins.Rss', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        src: {},\n        width: { default: '' },\n        height: { default: '' },\n        limit: { default: 10 },\n        header: { default: true },\n        date: { default: true },\n        content: { default: true },\n        snippet: { default: true },\n        showerror: { default: true },\n        ssl: { default: false },\n        linktarget: { default: '_new' },\n        link: { default: true },\n        title: { default: true }\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: { check: 'String', init: '' },\n    width: { init: '' },\n    height: { init: '' },\n    limit: { init: 10 },\n    header: { init: true },\n    date: { init: true },\n    content: { init: true },\n    snippet: { init: true },\n    showerror: { init: true },\n    ssl: { init: false },\n    linktarget: { init: '_new' },\n    link: { init: true },\n    title: { init: true }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    _parser: null,\n\n    _getInnerDomString() {\n      const rssstyle =\n        '' + this.getWidth() ? 'width:' + this.getWidth() : '' + this.getHeight() ? 'height:' + this.getHeight() : '';\n      return '<div class=\"actor\"><ul class=\"rss_inline\" style=\"' + rssstyle + '\"></ul>';\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n      this._parser = new RSSParser();\n      this.refreshRSS();\n    },\n\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        this.refreshRSS();\n      });\n      this._timer.start();\n    },\n\n    refreshRSS() {\n      this._parser.parseURL(this.getSrc(), (err, feed) => {\n        const actor = this.getActor();\n        let target = actor.querySelector('.rss_inline');\n        if (err) {\n          this.error(err);\n          if (this.getShowerror()) {\n            target.textContent = 'ERROR: ' + err;\n          }\n          return;\n        }\n        if (this.getHeader()) {\n          let headline = actor.querySelector(':scope > h3');\n          if (!headline) {\n            headline = document.createElement('h3');\n            actor.insertBefore(headline, actor.firstElementChild);\n          }\n          headline.textContent = feed.title;\n        }\n\n        const elements = target.querySelectorAll(':scope > li');\n        for (let i = elements.length; i >= feed.items.length; i--) {\n          elements[i].remove();\n        }\n\n        const useLink = this.getLink();\n        const showContent = this.getContent();\n        const showDate = this.getDate();\n\n        feed.items.some((entry, i) => {\n          let elem = target.querySelector(':scope > li[data-row=\"' + i + '\"]');\n          let a;\n          let content;\n          let date;\n          if (!elem) {\n            elem = document.createElement('li');\n            if (useLink) {\n              a = document.createElement('a');\n              a.setAttribute('target', this.getLinktarget());\n              elem.appendChild(a);\n            }\n            if (showContent) {\n              content = document.createElement('p');\n              content.classList.add('content');\n              elem.appendChild(content);\n            }\n            if (showDate) {\n              date = document.createElement('p');\n              date.classList.add('date');\n              elem.appendChild(date);\n            }\n            elem.setAttribute('data-row', '' + i);\n            target.appendChild(elem);\n          } else {\n            if (useLink) {\n              a = elem.querySelector(':scope > a');\n            }\n            if (showContent) {\n              content = elem.querySelector(':scope > p.content');\n            }\n            if (showDate) {\n              date = elem.querySelector(':scope > p.date');\n            }\n          }\n          if (useLink) {\n            a.textContent = entry.title;\n            a.setAttribute('href', entry.link);\n          } else {\n            elem.textContent = entry.title;\n          }\n          if (showContent) {\n            content.innerHTML = this.getSnippet() ? entry.contentSnippet : entry.content;\n          }\n          if (showDate) {\n            date.innerText = new Date(entry.isoDate).toLocaleString();\n          }\n          return i >= this.getLimit();\n        });\n      });\n    }\n  },\n\n  destruct() {\n    this._parser = null;\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addScripts('plugins/rss/rss-parser.min.js');\n    cv.parser.pure.WidgetParser.addHandler('rss', cv.plugins.Rss);\n    cv.ui.structure.WidgetFactory.registerClass('rss', statics);\n  }\n});\n"],"mappings":"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"}