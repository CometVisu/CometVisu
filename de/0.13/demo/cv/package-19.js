function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}!function(){var e={dependsOn:{"qx.ui.root.Inline":{require:!0,defer:"runtime"},"qx.Class":{usage:"dynamic",require:!0},"qx.core.Object":{construct:!0,require:!0},"cv.Config":{construct:!0},"cv.core.notifications.Router":{construct:!0},"cv.io.BackendConnections":{construct:!0},"cv.TemplateEngine":{construct:!0},"qx.dom.Element":{},"cv.ui.NotificationCenter":{},"cv.util.IconTools":{},"qx.ui.command.Command":{},"qx.event.Registration":{},"qx.theme.manager.Meta":{},"cv.theme.Dark":{},"qx.ui.layout.VBox":{},"cv.plugins.openhab.Settings":{},"qx.event.Timer":{defer:"runtime"}}};qx.Bootstrap.executePendingDefers(e);qx.Class.define("cv.plugins.openhab.Openhab",{extend:qx.core.Object,type:"singleton",construct:function(){qx.core.Object.constructor.call(this);if(!Object.prototype.hasOwnProperty.call(cv.Config.request.queryKey,"preview")){this.__P_23_0=cv.core.notifications.Router.getInstance();var e=cv.io.BackendConnections.getClientByType("openhab");if(e){var t=e.getCurrentTransport&&e.getCurrentTransport();t&&t.subscribe("notifications",this._onNotification,this);cv.TemplateEngine.getInstance().executeWhenDomFinished(this._createSettings,this)}}},members:{__P_23_0:null,__P_23_1:null,_openSettings:null,_createSettings:function(){var e=this,t=qx.dom.Element.create("section",{id:"qxsettings",html:"<div></div>"});qx.dom.Element.insertAfter(t,document.querySelector("#"+cv.ui.NotificationCenter.getInstance().getRootElementId()+" section.messages"));var n=qx.dom.Element.create("div",{html:cv.util.IconTools.svgKUF("edit_settings")(null,"width: 22px; height: 22px;","",!0),style:"float: left;"});this._openSettings=new qx.ui.command.Command("Ctrl+S");this._openSettings.addListener("execute",(function(){cv.ui.NotificationCenter.getInstance().show();e.__P_23_1.show()}));cv.TemplateEngine.getInstance().getCommands().add("open-settings",this._openSettings);qx.dom.Element.insertBegin(n,document.querySelector("#notification-center footer"));qx.event.Registration.addListener(n,"tap",(function(){this.__P_23_1.show()}),this);qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);this._inline=new qx.ui.root.Inline(document.querySelector("#qxsettings > div"),!0,!1);this._inline.setLayout(new qx.ui.layout.VBox);this.__P_23_1=new cv.plugins.openhab.Settings;this.__P_23_1.exclude();this._inline.add(this.__P_23_1,{flex:1})},_onNotification:function(e){e.data||this.error("invalid content received from SSE: ",e);var t="object"===_typeof(e.data)?e.data:JSON.parse(e.data);this.__P_23_0.dispatchMessage(t.topic||"cv.backend",t)}},destruct:function(){this._disposeObjects("__P_23_1","_openSettings");this.__P_23_0=null},defer:function(e){qx.event.Timer.once(e.getInstance,e,1e3)}});cv.plugins.openhab.Openhab.$$dbClassInfo=e}();!function(){var e={dependsOn:{"qx.Class":{usage:"dynamic",require:!0},"qx.ui.core.Widget":{construct:!0,require:!0},"qx.ui.layout.VBox":{construct:!0},"qx.io.rest.Resource":{},"cv.io.BackendConnections":{},"qx.data.store.Rest":{},"cv.io.openhab.Rest":{},"qx.util.Serializer":{},"qx.ui.form.TextField":{},"qx.ui.form.CheckBox":{},"cv.plugins.openhab.renderer.Single":{},"cv.Config":{},"qx.data.controller.Form":{},"qx.ui.basic.Label":{},"qx.ui.form.Form":{},"qx.ui.form.Button":{},"qx.locale.Manager":{}}};qx.Bootstrap.executePendingDefers(e);qx.Class.define("cv.plugins.openhab.Settings",{extend:qx.ui.core.Widget,construct:function(){var e=this;qx.ui.core.Widget.constructor.call(this);this._setLayout(new qx.ui.layout.VBox);this.set({padding:10,backgroundColor:"rgba(216, 216, 216, 1.0)",textColor:"rgb(61, 61, 61)"});this.getBounds()?this.getContentElement().setStyle("text-shadow","none"):this.addListenerOnce("appear",(function(){e.getContentElement().setStyle("text-shadow","none")}));this.__P_24_0="org.openhab.cometvisu";this.__P_24_1="ui:cometvisu";this._initConfigRestClient()},properties:{modified:{check:"Boolean",init:!1,event:"changeModified"}},members:{__P_24_0:null,__P_24_1:null,__P_24_2:null,__P_24_3:null,__P_24_4:null,__P_24_5:!1,_store:null,__P_24_6:null,_initStore:function(e){var t=this,n={get:{method:"GET",url:"/rest/services/"+e+"/config"},delete:{method:"DELETE",url:"/rest/services/"+e+"/config"},put:{method:"PUT",url:"/rest/services/"+e+"/config"}},o=this.__P_24_3=new qx.io.rest.Resource(n),i=cv.io.BackendConnections.getClientByType("openhab");this._store=new qx.data.store.Rest(o,"get",{configureRequest:function(e){e.setRequestHeader("Content-Type","application/json");i instanceof cv.io.openhab.Rest&&i.authorize(e)},manipulateData:function(e){var t={};Object.getOwnPropertyNames(e).forEach((function(n){t[n.replace(/[\.>]/g,"_")]=e[n]}));Object.prototype.hasOwnProperty.call(t,"autoDownload")||(t.autoDownload=!1);return t}});o.get();this._store.addListenerOnce("changeModel",(function(){t.__P_24_6=JSON.parse(qx.util.Serializer.toJson(t._store.getModel()))}))},_saveConfig:function(){var e=qx.util.Serializer.toJson(this._store.getModel());e=e.replace(/icons_mapping_/g,"icons.mapping>");e=JSON.parse(e.replace("icons_enableMapping","icons>enableMapping"));this.__P_24_3.put(null,e);this.__P_24_3.addListenerOnce("putSuccess",this.close,this)},_initConfigRestClient:function(){var e=this,t={get:{method:"GET",url:"/rest/config-descriptions/"+this.__P_24_1}},n=this.__P_24_2=new qx.io.rest.Resource(t),o=cv.io.BackendConnections.getClientByType("openhab");n.addListener("getSuccess",(function(t){e._createForm(t.getRequest().getResponse())}));n.configureRequest((function(e){e.setRequestHeader("Content-Type","application/json");o instanceof cv.io.openhab.Rest&&o.authorize(e)}));n.get();this._initStore(this.__P_24_0)},_createForm:function(e){if(e&&Object.prototype.hasOwnProperty.call(e,"parameters")&&Array.isArray(e.parameters)){this._createChildControl("title");var t=this.getChildControl("form");e.parameters.forEach((function(e){var n;switch(e.type){case"TEXT":n=new qx.ui.form.TextField;e.defaultValue&&n.setPlaceholder(e.defaultValue);break;case"BOOLEAN":(n=new qx.ui.form.CheckBox).setValue("true"===e.defaultValue)}e.readOnly&&n.setReadOnly(!0);e.required&&n.setRequired(!0);n.setToolTipText(e.description);n.addListener("changeValue",this._onFormFieldChange,this);t.add(n,e.label,null,e.name,null,e)}),this);var n=new cv.plugins.openhab.renderer.Single(t);if(cv.Config.guessIfProxied()){n.setBottomText(this.tr("The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing."));n.getChildControl("bottom-text").set({padding:10,textAlign:"center",font:"bold"})}n.addButton(this.getChildControl("cancel-button"));n.addButton(this.getChildControl("save-button"));this._addAt(n,1);var o=new qx.data.controller.Form(null,t);this._store.bind("model",o,"model");this.setModified(!1)}},_onFormFieldChange:function(){var e=!1,t=this.getChildControl("form").getItems();Object.getOwnPropertyNames(t).some((function(n){if(this.__P_24_6[n]!=t[n].getValue()){this.debug(n+" has changed from "+this.__P_24_6[n]+" to "+t[n].getValue());e=!0;return!0}return!1}),this);this.setModified(e)},_createChildControlImpl:function(e,t){var n;switch(e){case"title":(n=new qx.ui.basic.Label(this.tr("openHAB backend settings"))).set({font:"bold",marginBottom:5,allowGrowX:!0,decorator:"window-caption"});this._addAt(n,0);break;case"form":n=new qx.ui.form.Form;break;case"cancel-button":(n=new qx.ui.form.Button(qx.locale.Manager.tr("Cancel"))).addListener("execute",this.close,this);break;case"save-button":(n=new qx.ui.form.Button(qx.locale.Manager.tr("Save"))).addListener("execute",this._saveConfig,this);this.bind("modified",n,"enabled")}return n||cv.plugins.openhab.Settings.superclass.prototype._createChildControlImpl.call(this,e,t)},close:function(){this.setVisibility("excluded")}},destruct:function(){this._disposeObjects("__P_24_2","__P_24_3","__root","_store","_window")}});cv.plugins.openhab.Settings.$$dbClassInfo=e}();!function(){var e={dependsOn:{"qx.Class":{usage:"dynamic",require:!0},"qx.ui.form.renderer.AbstractRenderer":{construct:!0,require:!0},"qx.ui.layout.VBox":{construct:!0},"qx.ui.container.Composite":{},"qx.ui.basic.Label":{},"qx.ui.layout.HBox":{},"qx.ui.form.CheckBox":{}}};qx.Bootstrap.executePendingDefers(e);qx.Class.define("cv.plugins.openhab.renderer.Single",{extend:qx.ui.form.renderer.AbstractRenderer,construct:function(e){var t=new qx.ui.layout.VBox(6);this._setLayout(t);qx.ui.form.renderer.AbstractRenderer.constructor.call(this,e)},properties:{bottomText:{check:"String",nullable:!0,apply:"_applyBottomText"}},members:{_applyBottomText:function(e){var t=this.getChildControl("bottom-text");if(e){t.setValue(e);t.show()}else t.exclude()},_createChildControlImpl:function(e,t){var n;switch(e){case"content":n=new qx.ui.container.Composite(new qx.ui.layout.VBox(8));this._addAt(n,1);break;case"bottom-text":(n=new qx.ui.basic.Label(this.getBottomText())).set({rich:!0,wrap:!0});this._addAt(n,2);this.getBottomText()?n.show():n.exclude();break;case"button-container":var o=new qx.ui.layout.HBox;o.setAlignX("right");o.setSpacing(5);n=new qx.ui.container.Composite(o);this._addAt(n,3)}return n||cv.plugins.openhab.renderer.Single.superclass.prototype._createChildControlImpl.call(this,e,t)},addItems:function(e,t,n){null!==n&&this.getChildControl("content").add(this._createHeader(n));for(var o=this.getChildControl("content"),i=0;i<e.length;i++){var s=this._createLabel(t[i],e[i]),r=e[i];s.setBuddy(r);if(r instanceof qx.ui.form.CheckBox){var a=new qx.ui.container.Composite(new qx.ui.layout.HBox);a.add(s,{width:"50%"});a.add(r,{width:"50%"});o.add(a)}else{o.add(s);o.add(r)}this._connectVisibility(r,s);this._names.push({name:t[i],label:s,item:e[i]})}},addButton:function(e){this.getChildControl("button-container").add(e)},getLayout:function(){return this._getLayout()},_createLabel:function(e,t){var n=new qx.ui.basic.Label(this._createLabelText(e,t));this._labels.push(n);n.setRich(!0);n.setAppearance("form-renderer-label");return n},_createHeader:function(e){var t=new qx.ui.basic.Label(e);this._labels.push(t);t.setFont("bold");0!=this._row&&t.setMarginTop(10);t.setAlignX("left");return t}}});cv.plugins.openhab.renderer.Single.$$dbClassInfo=e}();qx.$$packageData[19]={locales:{},resources:{},translations:{en:{},de:{"The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing.":"Die CometVisu scheint über einen Proxy ausgeliefert zu werden. Änderungen an den Einstellungen könnten deshalb nicht den gewünschten Effekt habe.Bitte führen Sie daher nur Änderungen durch, wenn Sie wissen was Sie tun.","openHAB backend settings":"openHAB Backend Einstellungen",Cancel:"Abbruch",Save:"Speichern"}}};
//# sourceMappingURL=package-19.js.map