{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","Update","Operate","properties","src","check","nullable","transform","apply","database","delay","init","filter","datetime","mode","limit","timeformat","itemoffset","itemack","future","width","height","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseFormat","parseAddress","parseRefresh","default","parseInt","value","parseFloat","query","members","__P_15_0","__P_15_1","__P_15_2","__P_15_3","__P_15_4","__P_15_5","__P_15_6","__P_15_7","__P_15_8","normalizeUrl","indexOf","parts","util","Uri","parseUri","substring","queryKey","getDatabase","_applySrc","match","error","_getInnerDomString","style","getWidth","getHeight","getPath","_setupRefreshAction","_this","_timer","event","Timer","getRefresh","addListener","refreshRSSlog","start","_onDomReady","$$domReady","plugins","RssLog","superclass","prototype","call","message","Bus","subscribe","getParentPage","getDatetime","Config","currentPageId","_update","_this2","setTimeout","getDelay","_action","brss","String","htmlStringToDomElement","label","document","querySelector","title","innerText","popup","PopupHandler","showPopup","content","parent","Tree","getParent","Object","entries","margin","forEach","key_value","stop","Registration","stopPropagation","once","adddressSettings","addr","getAddress","Model","isWriteAddress","io","BackendConnections","getClient","backendType","write","Transform","encode","getCurrentDomElement","overflow","isBig","getSrc","__P_15_9","setUserData","request","Xhr","send","refresh","isEnabled","_this3","requestData","assign","getFilter","f","getLimit","getFuture","j","ResourceManager","getInstance","toUri","set","accept","method","__P_15_10","ev","getTarget","getResponse","__P_15_11","ul","c","replaceChildren","displayrows","dataset","innerHTML","dummyDiv","rect","getBoundingClientRect","itemheight","Math","round","bottom","top","parentNode","removeChild","widget","widgetRect","displayheight","labelElem","labelElemRect","floor","last_rowcount","result","__P_15_12","responseData","feed","getResponseContentType","items","getUserData","selector","getItemack","debug","getAttribute","createElement","itemnum","length","getMode","row","last","Date","strftime","i","idx","item","itemHtml","__P_15_13","rowElem","dom","Element","create","class","mapping","mappedValue","applyMapping","state","span","defaultValue2DOM","classList","add","id","tags","tmp","Array","isArray","x","map","trim","_onTap","appendChild","getLink","getTitle","getDescription","replace","entryDate","publishedDate","getTimeformat","toLocaleDateString","toLocaleTimeString","thisday","getCurrentTarget","toggle","contains","req","getUrl","u","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/RssLog.js"],"sourcesContent":["/* RssLog.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Michael Markstaller\n * @since 2011\n * @asset(plugins/rsslog/*)\n */\nqx.Class.define('cv.plugins.RssLog', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update, cv.ui.common.Operate],\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: 'String',\n      nullable: true,\n      transform: 'normalizeUrl',\n      apply: '_applySrc'\n    },\n\n    database: {\n      check: 'String',\n      nullable: true\n    },\n\n    delay: {\n      check: 'Number',\n      init: 0\n    },\n\n    filter: {\n      check: 'String',\n      nullable: true\n    },\n\n    datetime: {\n      check: 'Boolean',\n      init: true\n    },\n\n    mode: {\n      check: 'String',\n      init: 'last'\n    },\n\n    limit: {\n      check: 'Number',\n      init: 0\n    },\n\n    timeformat: {\n      check: 'String',\n      nullable: true\n    },\n\n    itemoffset: {\n      check: 'Number',\n      init: 0\n    },\n\n    itemack: {\n      check: ['modify', 'display', 'disable'],\n      init: 'modify'\n    },\n\n    future: {\n      check: 'String',\n      nullable: true\n    },\n\n    width: {\n      check: 'String',\n      nullable: true\n    },\n\n    height: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        src: {},\n        database: {},\n        delay: { default: 0, transform: parseInt },\n        width: {},\n        height: {},\n        filter: {},\n        datetime: {\n          default: true,\n          transform(value) {\n            if (typeof value === 'boolean') {\n              return value;\n            }\n            return value === 'true';\n          }\n        },\n\n        mode: { default: 'last' },\n        limit: { default: 0, transform: parseFloat },\n        timeformat: {},\n        itemack: { default: 'modify' }, // allowed: modify, display, disable\n        future: {},\n        query: {}\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __request: null,\n    __html: null,\n    __wrapper: null,\n    __fixedRequestData: null,\n    __external: false,\n\n    __separatordate: null,\n    __separatoradd: null,\n    __isFuture: null,\n    __separatorprevday: null,\n\n    /**\n     * Strip querystring from URL and store it as Map\n     * @param value {String} URL\n     * @return {String} normalized URL\n     */\n    normalizeUrl(value) {\n      this.__fixedRequestData = {};\n      if (value && value.indexOf('?') > 0) {\n        const parts = qx.util.Uri.parseUri(value);\n        value = value.substring(0, value.indexOf('?'));\n        this.__fixedRequestData = parts.queryKey;\n      }\n      if (this.getDatabase()) {\n        this.__fixedRequestData.database = this.getDatabase();\n      }\n      return value;\n    },\n\n    // property apply\n    _applySrc(value) {\n      if (value.match(/rsslog_mysql\\.php/)) {\n        this.error('Use of rsslog_mysql.php is depreciated. Please consult the documentation.');\n      }\n      this.__external =\n        !value.match(/rsslog\\.php/) && !value.match(/rsslog_mysql\\.php/) && !value.match(/rsslog_oh\\.php/);\n    },\n\n    _getInnerDomString() {\n      let style = '';\n      if (this.getWidth()) {\n        style += 'width:' + this.getWidth() + ';';\n      }\n      if (this.getHeight()) {\n        style += 'height:' + this.getHeight();\n      }\n\n      return (\n        '<div class=\"actor rsslogBody\"><div class=\"rsslog_inline\" id=\"rss_' +\n        this.getPath() +\n        '\" style=\"' +\n        style +\n        '\"></div></div>'\n      );\n    },\n\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        this.refreshRSSlog();\n      });\n      this._timer.start();\n    },\n\n    _onDomReady() {\n      if (!this.$$domReady) {\n        super._onDomReady();\n        qx.event.message.Bus.subscribe(\n          'path.' + this.getParentPage().getPath() + '.beforePageChange',\n          this.refreshRSSlog,\n          this\n        );\n\n        this.__html = '<span class=\"mappedValue\"></span><span>{text}</span>';\n        if (this.getDatetime()) {\n          this.__html = '{date}: ' + this.__html;\n        }\n        this.__wrapper = 'li';\n\n        if (cv.Config.currentPageId === this.getParentPage().getPath()) {\n          this.refreshRSSlog();\n        }\n      }\n    },\n\n    _update() {\n      setTimeout(() => this.refreshRSSlog(), this.getDelay());\n    },\n\n    _action() {\n      const brss = cv.util.String.htmlStringToDomElement(\n        '<div class=\"rsslog_popup\" id=\"rss_' + this.getPath() + '_big\"/>'\n      );\n\n      const label = document.querySelector('#' + this.getPath() + ' .label');\n      const title = label ? label.innerText || '' : '';\n      const popup = cv.ui.PopupHandler.showPopup('rsslog', {\n        title: title,\n        content: brss\n      });\n\n      const parent = cv.util.Tree.getParent(brss, 'div', null, 1)[0];\n      Object.entries({ height: '90%', width: '90%', margin: 'auto' }).forEach(function (key_value) {\n        parent.style[key_value[0]] = key_value[1];\n      });\n\n      // define parent as 100%!\n      if (this._timer) {\n        this._timer.stop();\n      }\n      qx.event.Registration.addListener(\n        brss,\n        'tap',\n        function (event) {\n          // don't let the popup know about the click, or it will close on touch-displays\n          event.stopPropagation();\n        },\n        this\n      );\n\n      qx.event.Registration.addListener(\n        popup,\n        'close',\n        function () {\n          // reload main data - but only once (popup and popup_background are caught\n          // here).\n          // But delay it so that any change done to the data has a chance to\n          // arrive here.\n\n          if (\n            popup.getCurrentDomElement() &&\n            popup.getCurrentDomElement().classList.contains('popup') &&\n            this.getItemack() === 'modify'\n          ) {\n            qx.event.Timer.once(\n              function () {\n                this.refreshRSSlog();\n              },\n              this,\n              100\n            );\n\n            let adddressSettings;\n            for (let addr in this.getAddress()) {\n              adddressSettings = this.getAddress()[addr];\n              if (!cv.data.Model.isWriteAddress(adddressSettings)) {\n                continue;\n              } // skip when write flag not set\n              cv.io.BackendConnections.getClient(adddressSettings.backendType).write(addr, cv.Transform.encode(this.getAddress()[addr], 0));\n            }\n          }\n        },\n        this\n      );\n\n      popup.getCurrentDomElement().querySelector('.main').style.overflow = 'auto';\n      this.refreshRSSlog(true);\n    },\n\n    refreshRSSlog(isBig) {\n      const src = this.getSrc();\n      if (!src) {\n        this.error('no src given, aborting RSS-Log refresh');\n        return;\n      }\n      if (!this.__request) {\n        if (!this.__external) {\n          this.__refreshRss();\n        } else {\n          this.error('external sources are no longer supported');\n        }\n      }\n      this.__request.setUserData('big', isBig);\n      if (this.__request instanceof qx.io.request.Xhr) {\n        this.__request.send();\n      }\n\n      const refresh = this.getRefresh();\n      if (typeof refresh !== 'undefined' && refresh) {\n        // reload regularly\n        if (this._timer && this._timer.isEnabled()) {\n          this._timer.start();\n        }\n      }\n    },\n\n    /**\n     * Fetch data from builtin PHP script\n     */\n    __refreshRss() {\n      const src = this.getSrc();\n      const requestData = Object.assign({}, this.__fixedRequestData);\n      if (this.getFilter()) {\n        requestData.f = this.getFilter();\n      }\n      if (this.getLimit()) {\n        requestData.limit = this.getLimit();\n      }\n      if (this.getFuture()) {\n        requestData.future = this.getFuture();\n      }\n      requestData.j = 1;\n      this.__request = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri(src));\n\n      this.__request.set({\n        accept: 'application/json',\n        requestData: requestData,\n        method: 'GET'\n      });\n\n      this.__request.addListener('success', this.__updateRssContent, this);\n      this.__request.addListener('error', ev => {\n        this.error('C: #rss_%s, Error: %s, Feed: %s', this.getPath(), ev.getTarget().getResponse(), src);\n      });\n    },\n\n    __prepareContentElement(ul, c) {\n      c.replaceChildren(); // delete anything inside\n\n      c.appendChild(ul);\n\n      // get height of one entry, calc max num of display items in widget\n      let displayrows = parseInt(c.dataset['last_rowcount'], 10) || 0;\n      ul.innerHTML = '<li class=\"rsslogRow odd\" id=\"dummydiv\">.</li>';\n      const dummyDiv = c.querySelector('#dummydiv');\n      const rect = dummyDiv.getBoundingClientRect();\n      const itemheight = Math.round(rect.bottom - rect.top);\n      dummyDiv.parentNode.removeChild(dummyDiv);\n      if (itemheight !== 0) {\n        const widget = c.parentNode.parentNode; // get the parent widget\n        const widgetRect = widget.getBoundingClientRect();\n        let displayheight = Math.round(widgetRect.bottom - widgetRect.top);\n        const labelElem = widget.querySelector('.label');\n        if (labelElem) {\n          // max. height of actor is widget-label(if exists)\n          const labelElemRect = labelElem.getBoundingClientRect();\n          displayheight -= Math.round(labelElemRect.bottom - labelElemRect.top);\n        }\n        displayrows = Math.floor(displayheight / itemheight);\n      }\n      c.dataset.last_rowcount = displayrows;\n      return displayrows;\n    },\n\n    __updateRssContent(ev) {\n      const result = ev.getTarget().getResponse();\n      if (typeof result === 'string') {\n        // no json -> error\n        this.error('Expected JSON, but got response MIME:', ev.getTarget().getResponseContentType());\n\n        this.error(result);\n        return;\n      }\n      this.__updateContent(result.responseData.feed.entries);\n    },\n\n    __updateContent(items) {\n      const isBig = this.__request.getUserData('big');\n      const selector = '#rss_' + this.getPath() + (isBig === true ? '_big' : '');\n      const c = document.querySelector(selector);\n      const itemack =\n        isBig === true ? this.getItemack() : this.getItemack() === 'modify' ? 'display' : this.getItemack();\n\n      this.debug('ID: ' + c.getAttribute('id') + ', Feed: ' + this.getSrc());\n\n      const ul = document.createElement('ul');\n      const displayrows = this.__prepareContentElement(ul, c);\n\n      const itemnum = items.length;\n      this.debug(\n        'C: #' + this.getPath() + ', ' + itemnum + ' element(s) found, ' + displayrows + ' displayrow(s) available'\n      );\n\n      let itemoffset = 0; // correct if mode='last' or itemnum<=displayrows\n\n      if (itemnum > displayrows) {\n        // no need to check mode if items are less than rows\n        if (this.getMode() === 'first') {\n          itemoffset = itemnum - displayrows;\n        }\n        if (this.getMode() === 'rollover') {\n          itemoffset = parseInt(c.dataset.itemoffset, 10) || 0;\n          if (itemoffset === itemnum) {\n            itemoffset = 0;\n          }\n          c.dataset.itemoffset = itemoffset + 1;\n        }\n      }\n\n      let row = 'rsslogodd';\n      let last = itemoffset + displayrows;\n      last = last > itemnum ? itemnum : last;\n\n      this.__separatordate = new Date().strftime('%d');\n      this.__separatoradd = false;\n      this.__separatorprevday = false;\n      this.__isFuture = false;\n\n      for (let i = itemoffset; i < last; i++) {\n        this.debug('C: #' + this.getPath() + ', processing item: ' + i + ' of ' + itemnum);\n\n        let idx = i;\n        idx = i >= itemnum ? (idx -= itemnum) : idx;\n\n        const item = items[idx];\n        const itemHtml = this.__getItemHtml(item, isBig);\n\n        const rowElem = qx.dom.Element.create('li', {\n          class: 'rsslogRow ' + row\n        });\n\n        rowElem.innerHTML = itemHtml;\n\n        if (item.mapping && item.mapping !== '') {\n          const mappedValue = this.applyMapping(itemack === 'disable' ? 0 : item.state, item.mapping);\n\n          const span = rowElem.querySelector('.mappedValue');\n          this.defaultValue2DOM(mappedValue, span);\n        }\n        if (this.__separatoradd && idx !== 0) {\n          rowElem.classList.add('rsslog_separator');\n          this.__separatorprevday = true;\n        } else {\n          this.__separatorprevday = false;\n        }\n\n        if (this.__separatorprevday === true) {\n          rowElem.classList.add('rsslog_prevday');\n        }\n\n        if (this.__isFuture) {\n          rowElem.classList.add(row === 'rsslogodd' ? 'rsslog_futureeven' : 'rsslog_futureodd');\n        }\n\n        rowElem.dataset.id = item.id;\n        rowElem.dataset.mapping = item.mapping;\n        if (item.tags) {\n          const tmp = rowElem.querySelector('span');\n          if (Array.isArray(item.tags)) {\n            const tags = item.tags.filter(x => x !== '').map(x => x.trim());\n            if (tags.length > 0) {\n              tmp.classList.add.apply(tmp.classList, item.tags);\n            }\n          } else {\n            tmp.classList.add(item.tags.trim());\n          }\n        }\n        if (item.state === '1' && itemack !== 'disable') {\n          rowElem.classList.add('rsslog_ack');\n        }\n\n        if (itemack === 'modify') {\n          qx.event.Registration.addListener(rowElem, 'tap', this._onTap, this);\n        }\n        ul.appendChild(rowElem);\n\n        // Alternate row classes\n        row = row === 'rsslogodd' ? 'rsslogeven' : 'rsslogodd';\n      }\n    },\n\n    __getItemHtml(item, isBig) {\n      let itemHtml = '';\n      if (!this.__external) {\n        itemHtml = this.__html;\n\n        itemHtml = itemHtml.replace(/\\{text\\}/, item.content);\n        const entryDate = new Date(item.publishedDate);\n        if (entryDate) {\n          itemHtml = this.getTimeformat()\n            ? itemHtml.replace(/\\{date\\}/, entryDate.strftime(this.getTimeformat()) + '&nbsp;')\n            : itemHtml.replace(\n                /\\{date\\}/,\n                entryDate.toLocaleDateString() + ' ' + entryDate.toLocaleTimeString() + '&nbsp;'\n              );\n\n          const thisday = entryDate.strftime('%d');\n          this.__separatoradd = this.__separatordate > 0 && this.__separatordate !== thisday;\n          this.__separatordate = thisday;\n          this.__isFuture = entryDate > new Date();\n        } else {\n          itemHtml = itemHtml.replace(/\\{date\\}/, '');\n        }\n      } else {\n        if (isBig) {\n          return '<b><a href=\"' + item.getLink() + '\">' + item.getTitle() + '</a></b><br/>' + item.getDescription();\n        }\n        return '<b>' + item.getTitle() + '</b><br/>' + item.getDescription();\n      }\n\n      return itemHtml;\n    },\n\n    _onTap(ev) {\n      const item = ev.getCurrentTarget();\n\n      const id = item.dataset.id;\n      const mapping = item.dataset.mapping;\n      item.classList.toggle('rsslog_ack');\n      const state = +item.classList.contains('rsslog_ack'); // the new state is the same as hasClass\n      if (mapping && mapping !== '') {\n        const mappedValue = this.applyMapping(state, mapping);\n        let span = item.querySelector('.mappedValue');\n        span.replaceChildren(); // delete anything inside\n        this.defaultValue2DOM(mappedValue, span);\n      }\n      const req = new qx.io.request.Xhr(this.__request.getUrl());\n      req.set({\n        method: 'GET',\n        requestData: Object.assign({}, this.__fixedRequestData, {\n          u: id,\n          state: state\n        }),\n\n        accept: 'application/json'\n      });\n\n      req.send();\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/rsslog/rsslog.css');\n    cv.parser.pure.WidgetParser.addHandler('rsslog', cv.plugins.RssLog);\n    cv.ui.structure.WidgetFactory.registerClass('rsslog', statics);\n  }\n});\n"],"mappings":"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"}