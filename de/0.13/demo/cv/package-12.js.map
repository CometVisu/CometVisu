{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","Update","Operate","properties","src","check","nullable","transform","apply","database","delay","init","filter","datetime","mode","limit","timeformat","itemoffset","itemack","future","width","height","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","parseFormat","parseAddress","parseRefresh","default","parseInt","value","parseFloat","query","members","__P_15_0","__P_15_1","__P_15_2","__P_15_3","__P_15_4","__P_15_5","__P_15_6","__P_15_7","__P_15_8","normalizeUrl","parts","util","Uri","parseUri","substring","indexOf","queryKey","getDatabase","_applySrc","match","error","_getInnerDomString","style","getWidth","getHeight","_setupRefreshAction","_this","refreshRSSlog","_onDomReady","$$domReady","plugins","RssLog","superclass","prototype","call","_update","_this2","getDelay","_action","brss","String","htmlStringToDomElement","getPath","label","document","querySelector","title","innerText","popup","PopupHandler","showPopup","content","parent","Tree","getParent","Object","entries","margin","forEach","key_value","_timer","stop","event","stopPropagation","Registration","addListener","getCurrentDomElement","classList","contains","getItemack","Timer","once","adddressSettings","getAddress","addr","overflow","isBig","getSrc","__P_15_9","send","isEnabled","start","_this3","requestData","assign","f","getFilter","getLimit","getFuture","io","request","Xhr","ResourceManager","getInstance","toUri","accept","method","ev","getTarget","getResponse","__P_15_11","ul","c","replaceChildren","innerHTML","dummyDiv","rect","getBoundingClientRect","itemheight","Math","round","bottom","top","parentNode","removeChild","widget","displayheight","widgetRect","labelElem","labelElemRect","displayrows","__P_15_10","result","getResponseContentType","__P_15_12","items","getUserData","selector","debug","getAttribute","createElement","itemnum","getMode","dataset","last","Date","strftime","i","idx","item","class","row","rowElem","itemHtml","mappedValue","applyMapping","state","mapping","span","defaultValue2DOM","add","tmp","tags","x","_onTap","__P_15_13","getLink","getTitle","getDescription","replace","entryDate","publishedDate","getTimeformat","toLocaleDateString","toLocaleTimeString","thisday","getCurrentTarget","id","toggle","req","set","u","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/RssLog.js"],"sourcesContent":["/* RssLog.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Michael Markstaller\n * @since 2011\n * @asset(plugins/rsslog/*)\n */\nqx.Class.define('cv.plugins.RssLog', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update, cv.ui.common.Operate],\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: 'String',\n      nullable: true,\n      transform: 'normalizeUrl',\n      apply: '_applySrc'\n    },\n\n    database: {\n      check: 'String',\n      nullable: true\n    },\n\n    delay: {\n      check: 'Number',\n      init: 0\n    },\n\n    filter: {\n      check: 'String',\n      nullable: true\n    },\n\n    datetime: {\n      check: 'Boolean',\n      init: true\n    },\n\n    mode: {\n      check: 'String',\n      init: 'last'\n    },\n\n    limit: {\n      check: 'Number',\n      init: 0\n    },\n\n    timeformat: {\n      check: 'String',\n      nullable: true\n    },\n\n    itemoffset: {\n      check: 'Number',\n      init: 0\n    },\n\n    itemack: {\n      check: ['modify', 'display', 'disable'],\n      init: 'modify'\n    },\n\n    future: {\n      check: 'String',\n      nullable: true\n    },\n\n    width: {\n      check: 'String',\n      nullable: true\n    },\n\n    height: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        src: {},\n        database: {},\n        delay: { default: 0, transform: parseInt },\n        width: {},\n        height: {},\n        filter: {},\n        datetime: {\n          default: true,\n          transform(value) {\n            if (typeof value === 'boolean') {\n              return value;\n            }\n            return value === 'true';\n          }\n        },\n\n        mode: { default: 'last' },\n        limit: { default: 0, transform: parseFloat },\n        timeformat: {},\n        itemack: { default: 'modify' }, // allowed: modify, display, disable\n        future: {},\n        query: {}\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __request: null,\n    __html: null,\n    __wrapper: null,\n    __fixedRequestData: null,\n    __external: false,\n\n    __separatordate: null,\n    __separatoradd: null,\n    __isFuture: null,\n    __separatorprevday: null,\n\n    /**\n     * Strip querystring from URL and store it as Map\n     * @param value {String} URL\n     * @return {String} normalized URL\n     */\n    normalizeUrl(value) {\n      this.__fixedRequestData = {};\n      if (value && value.indexOf('?') > 0) {\n        const parts = qx.util.Uri.parseUri(value);\n        value = value.substring(0, value.indexOf('?'));\n        this.__fixedRequestData = parts.queryKey;\n      }\n      if (this.getDatabase()) {\n        this.__fixedRequestData.database = this.getDatabase();\n      }\n      return value;\n    },\n\n    // property apply\n    _applySrc(value) {\n      if (value.match(/rsslog_mysql\\.php/)) {\n        this.error('Use of rsslog_mysql.php is depreciated. Please consult the documentation.');\n      }\n      this.__external =\n        !value.match(/rsslog\\.php/) && !value.match(/rsslog_mysql\\.php/) && !value.match(/rsslog_oh\\.php/);\n    },\n\n    _getInnerDomString() {\n      let style = '';\n      if (this.getWidth()) {\n        style += 'width:' + this.getWidth() + ';';\n      }\n      if (this.getHeight()) {\n        style += 'height:' + this.getHeight();\n      }\n\n      return (\n        '<div class=\"actor rsslogBody\"><div class=\"rsslog_inline\" id=\"rss_' +\n        this.getPath() +\n        '\" style=\"' +\n        style +\n        '\"></div></div>'\n      );\n    },\n\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        this.refreshRSSlog();\n      });\n      this._timer.start();\n    },\n\n    _onDomReady() {\n      if (!this.$$domReady) {\n        super._onDomReady();\n        qx.event.message.Bus.subscribe(\n          'path.' + this.getParentPage().getPath() + '.beforePageChange',\n          this.refreshRSSlog,\n          this\n        );\n\n        this.__html = '<span class=\"mappedValue\"></span><span>{text}</span>';\n        if (this.getDatetime()) {\n          this.__html = '{date}: ' + this.__html;\n        }\n        this.__wrapper = 'li';\n\n        if (cv.Config.currentPageId === this.getParentPage().getPath()) {\n          this.refreshRSSlog();\n        }\n      }\n    },\n\n    _update() {\n      setTimeout(() => this.refreshRSSlog(), this.getDelay());\n    },\n\n    _action() {\n      const brss = cv.util.String.htmlStringToDomElement(\n        '<div class=\"rsslog_popup\" id=\"rss_' + this.getPath() + '_big\"/>'\n      );\n\n      const label = document.querySelector('#' + this.getPath() + ' .label');\n      const title = label ? label.innerText || '' : '';\n      const popup = cv.ui.PopupHandler.showPopup('rsslog', {\n        title: title,\n        content: brss\n      });\n\n      const parent = cv.util.Tree.getParent(brss, 'div', null, 1)[0];\n      Object.entries({ height: '90%', width: '90%', margin: 'auto' }).forEach(function (key_value) {\n        parent.style[key_value[0]] = key_value[1];\n      });\n\n      // define parent as 100%!\n      if (this._timer) {\n        this._timer.stop();\n      }\n      qx.event.Registration.addListener(\n        brss,\n        'tap',\n        function (event) {\n          // don't let the popup know about the click, or it will close on touch-displays\n          event.stopPropagation();\n        },\n        this\n      );\n\n      qx.event.Registration.addListener(\n        popup,\n        'close',\n        function () {\n          // reload main data - but only once (popup and popup_background are caught\n          // here).\n          // But delay it so that any change done to the data has a chance to\n          // arrive here.\n\n          if (\n            popup.getCurrentDomElement() &&\n            popup.getCurrentDomElement().classList.contains('popup') &&\n            this.getItemack() === 'modify'\n          ) {\n            qx.event.Timer.once(\n              function () {\n                this.refreshRSSlog();\n              },\n              this,\n              100\n            );\n\n            let adddressSettings;\n            for (let addr in this.getAddress()) {\n              adddressSettings = this.getAddress()[addr];\n              if (!cv.data.Model.isWriteAddress(adddressSettings)) {\n                continue;\n              } // skip when write flag not set\n              cv.io.BackendConnections.getClient(adddressSettings.backendType).write(addr, cv.Transform.encode(this.getAddress()[addr], 0));\n            }\n          }\n        },\n        this\n      );\n\n      popup.getCurrentDomElement().querySelector('.main').style.overflow = 'auto';\n      this.refreshRSSlog(true);\n    },\n\n    refreshRSSlog(isBig) {\n      const src = this.getSrc();\n      if (!src) {\n        this.error('no src given, aborting RSS-Log refresh');\n        return;\n      }\n      if (!this.__request) {\n        if (!this.__external) {\n          this.__refreshRss();\n        } else {\n          this.error('external sources are no longer supported');\n        }\n      }\n      this.__request.setUserData('big', isBig);\n      if (this.__request instanceof qx.io.request.Xhr) {\n        this.__request.send();\n      }\n\n      const refresh = this.getRefresh();\n      if (typeof refresh !== 'undefined' && refresh) {\n        // reload regularly\n        if (this._timer && this._timer.isEnabled()) {\n          this._timer.start();\n        }\n      }\n    },\n\n    /**\n     * Fetch data from builtin PHP script\n     */\n    __refreshRss() {\n      const src = this.getSrc();\n      const requestData = Object.assign({}, this.__fixedRequestData);\n      if (this.getFilter()) {\n        requestData.f = this.getFilter();\n      }\n      if (this.getLimit()) {\n        requestData.limit = this.getLimit();\n      }\n      if (this.getFuture()) {\n        requestData.future = this.getFuture();\n      }\n      requestData.j = 1;\n      this.__request = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri(src));\n\n      this.__request.set({\n        accept: 'application/json',\n        requestData: requestData,\n        method: 'GET'\n      });\n\n      this.__request.addListener('success', this.__updateRssContent, this);\n      this.__request.addListener('error', ev => {\n        this.error('C: #rss_%s, Error: %s, Feed: %s', this.getPath(), ev.getTarget().getResponse(), src);\n      });\n    },\n\n    __prepareContentElement(ul, c) {\n      c.replaceChildren(); // delete anything inside\n\n      c.appendChild(ul);\n\n      // get height of one entry, calc max num of display items in widget\n      let displayrows = parseInt(c.dataset['last_rowcount'], 10) || 0;\n      ul.innerHTML = '<li class=\"rsslogRow odd\" id=\"dummydiv\">.</li>';\n      const dummyDiv = c.querySelector('#dummydiv');\n      const rect = dummyDiv.getBoundingClientRect();\n      const itemheight = Math.round(rect.bottom - rect.top);\n      dummyDiv.parentNode.removeChild(dummyDiv);\n      if (itemheight !== 0) {\n        const widget = c.parentNode.parentNode; // get the parent widget\n        const widgetRect = widget.getBoundingClientRect();\n        let displayheight = Math.round(widgetRect.bottom - widgetRect.top);\n        const labelElem = widget.querySelector('.label');\n        if (labelElem) {\n          // max. height of actor is widget-label(if exists)\n          const labelElemRect = labelElem.getBoundingClientRect();\n          displayheight -= Math.round(labelElemRect.bottom - labelElemRect.top);\n        }\n        displayrows = Math.floor(displayheight / itemheight);\n      }\n      c.dataset.last_rowcount = displayrows;\n      return displayrows;\n    },\n\n    __updateRssContent(ev) {\n      const result = ev.getTarget().getResponse();\n      if (typeof result === 'string') {\n        // no json -> error\n        this.error('Expected JSON, but got response MIME:', ev.getTarget().getResponseContentType());\n\n        this.error(result);\n        return;\n      }\n      this.__updateContent(result.responseData.feed.entries);\n    },\n\n    __updateContent(items) {\n      const isBig = this.__request.getUserData('big');\n      const selector = '#rss_' + this.getPath() + (isBig === true ? '_big' : '');\n      const c = document.querySelector(selector);\n      const itemack =\n        isBig === true ? this.getItemack() : this.getItemack() === 'modify' ? 'display' : this.getItemack();\n\n      this.debug('ID: ' + c.getAttribute('id') + ', Feed: ' + this.getSrc());\n\n      const ul = document.createElement('ul');\n      const displayrows = this.__prepareContentElement(ul, c);\n\n      const itemnum = items.length;\n      this.debug(\n        'C: #' + this.getPath() + ', ' + itemnum + ' element(s) found, ' + displayrows + ' displayrow(s) available'\n      );\n\n      let itemoffset = 0; // correct if mode='last' or itemnum<=displayrows\n\n      if (itemnum > displayrows) {\n        // no need to check mode if items are less than rows\n        if (this.getMode() === 'first') {\n          itemoffset = itemnum - displayrows;\n        }\n        if (this.getMode() === 'rollover') {\n          itemoffset = parseInt(c.dataset.itemoffset, 10) || 0;\n          if (itemoffset === itemnum) {\n            itemoffset = 0;\n          }\n          c.dataset.itemoffset = itemoffset + 1;\n        }\n      }\n\n      let row = 'rsslogodd';\n      let last = itemoffset + displayrows;\n      last = last > itemnum ? itemnum : last;\n\n      this.__separatordate = new Date().strftime('%d');\n      this.__separatoradd = false;\n      this.__separatorprevday = false;\n      this.__isFuture = false;\n\n      for (let i = itemoffset; i < last; i++) {\n        this.debug('C: #' + this.getPath() + ', processing item: ' + i + ' of ' + itemnum);\n\n        let idx = i;\n        idx = i >= itemnum ? (idx -= itemnum) : idx;\n\n        const item = items[idx];\n        const itemHtml = this.__getItemHtml(item, isBig);\n\n        const rowElem = qx.dom.Element.create('li', {\n          class: 'rsslogRow ' + row\n        });\n\n        rowElem.innerHTML = itemHtml;\n\n        if (item.mapping && item.mapping !== '') {\n          const mappedValue = this.applyMapping(itemack === 'disable' ? 0 : item.state, item.mapping);\n\n          const span = rowElem.querySelector('.mappedValue');\n          this.defaultValue2DOM(mappedValue, span);\n        }\n        if (this.__separatoradd && idx !== 0) {\n          rowElem.classList.add('rsslog_separator');\n          this.__separatorprevday = true;\n        } else {\n          this.__separatorprevday = false;\n        }\n\n        if (this.__separatorprevday === true) {\n          rowElem.classList.add('rsslog_prevday');\n        }\n\n        if (this.__isFuture) {\n          rowElem.classList.add(row === 'rsslogodd' ? 'rsslog_futureeven' : 'rsslog_futureodd');\n        }\n\n        rowElem.dataset.id = item.id;\n        rowElem.dataset.mapping = item.mapping;\n        if (item.tags) {\n          const tmp = rowElem.querySelector('span');\n          if (Array.isArray(item.tags)) {\n            const tags = item.tags.filter(x => x !== '');\n            if (tags.length > 0) {\n              tmp.classList.add.apply(tmp.classList, item.tags);\n            }\n          } else {\n            tmp.classList.add(item.tags);\n          }\n        }\n        if (item.state === '1' && itemack !== 'disable') {\n          rowElem.classList.add('rsslog_ack');\n        }\n\n        if (itemack === 'modify') {\n          qx.event.Registration.addListener(rowElem, 'tap', this._onTap, this);\n        }\n        ul.appendChild(rowElem);\n\n        // Alternate row classes\n        row = row === 'rsslogodd' ? 'rsslogeven' : 'rsslogodd';\n      }\n    },\n\n    __getItemHtml(item, isBig) {\n      let itemHtml = '';\n      if (!this.__external) {\n        itemHtml = this.__html;\n\n        itemHtml = itemHtml.replace(/\\{text\\}/, item.content);\n        const entryDate = new Date(item.publishedDate);\n        if (entryDate) {\n          itemHtml = this.getTimeformat()\n            ? itemHtml.replace(/\\{date\\}/, entryDate.strftime(this.getTimeformat()) + '&nbsp;')\n            : itemHtml.replace(\n                /\\{date\\}/,\n                entryDate.toLocaleDateString() + ' ' + entryDate.toLocaleTimeString() + '&nbsp;'\n              );\n\n          const thisday = entryDate.strftime('%d');\n          this.__separatoradd = this.__separatordate > 0 && this.__separatordate !== thisday;\n          this.__separatordate = thisday;\n          this.__isFuture = entryDate > new Date();\n        } else {\n          itemHtml = itemHtml.replace(/\\{date\\}/, '');\n        }\n      } else {\n        if (isBig) {\n          return '<b><a href=\"' + item.getLink() + '\">' + item.getTitle() + '</a></b><br/>' + item.getDescription();\n        }\n        return '<b>' + item.getTitle() + '</b><br/>' + item.getDescription();\n      }\n\n      return itemHtml;\n    },\n\n    _onTap(ev) {\n      const item = ev.getCurrentTarget();\n\n      const id = item.dataset.id;\n      const mapping = item.dataset.mapping;\n      item.classList.toggle('rsslog_ack');\n      const state = +item.classList.contains('rsslog_ack'); // the new state is the same as hasClass\n      if (mapping && mapping !== '') {\n        const mappedValue = this.applyMapping(state, mapping);\n        let span = item.querySelector('.mappedValue');\n        span.replaceChildren(); // delete anything inside\n        this.defaultValue2DOM(mappedValue, span);\n      }\n      const req = new qx.io.request.Xhr(this.__request.getUrl());\n      req.set({\n        method: 'GET',\n        requestData: Object.assign({}, this.__fixedRequestData, {\n          u: id,\n          state: state\n        }),\n\n        accept: 'application/json'\n      });\n\n      req.send();\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/rsslog/rsslog.css');\n    cv.parser.pure.WidgetParser.addHandler('rsslog', cv.plugins.RssLog);\n    cv.ui.structure.WidgetFactory.registerClass('rsslog', statics);\n  }\n});\n"],"mappings":"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"}