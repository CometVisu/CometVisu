{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","properties","format","check","init","locale","nullable","statics","__P_17_0","__P_17_1","__P_17_2","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","lang","target","default","uniqid","startTimer","event","Timer","start","members","__P_17_3","__P_17_4","_getInnerDomString","getValueElement","getDomElement","querySelector","_onDomReady","plugins","Strftime","__P_17_5","elem","d","Date","getLocale","innerText","strftime","getFormat","destruct","removeListener","defer","util","ScriptLoader","getInstance","addStyles","addHandler","WidgetFactory","registerClass","a","A","b","B","c","p","P","x","X","ext","locales","fr","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Strftime.js"],"sourcesContent":["/* Strftime.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This plugins integrates formatted date and clock strings into based on strftime.\n *\n * @author Michael Hausl [michael at hausl dot com]\n * @since 0.8.0\n * @asset(plugins/strftime/strftime.css)\n */\nqx.Class.define('cv.plugins.Strftime', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    format: {\n      check: 'String',\n      init: '%c'\n    },\n\n    locale: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    __elements: {},\n    __internalCounter: 0,\n    __timer: null,\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      return cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        lang: { target: 'locale' },\n        format: { default: '%c' }\n      };\n    },\n\n    uniqid() {\n      return this.__internalCounter++;\n    },\n\n    startTimer() {\n      if (!this.__timer) {\n        this.__timer = new qx.event.Timer(1000);\n      }\n      if (!this.__timer.isEnabled()) {\n        this.__timer.start();\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __timerStarted: false,\n    __valueElement: null,\n\n    _getInnerDomString() {\n      return '<div class=\"strftime_value\"></div>';\n    },\n\n    // overridden\n    getValueElement() {\n      if (!this.__valueElement) {\n        this.__valueElement = this.getDomElement().querySelector('.strftime_value');\n      }\n      return this.__valueElement;\n    },\n\n    // overridden\n    _onDomReady() {\n      this.self(arguments).startTimer();\n      this.self(arguments).__timer.addListener('interval', this.__update, this);\n    },\n\n    __update() {\n      const elem = this.getValueElement();\n      const d = new Date();\n      d.locale = this.getLocale();\n      elem.innerText = d.strftime(this.getFormat());\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this.self(arguments).__timer.removeListener('interval', this.__update, this);\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/strftime/strftime.css');\n    cv.parser.pure.WidgetParser.addHandler('strftime', statics);\n    cv.ui.structure.WidgetFactory.registerClass('strftime', statics);\n\n    // extend locales by German and French\n    Date.ext.locales.de = {\n      a: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n      A: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n\n      b: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n\n      B: [\n        'Januar',\n        'Februar',\n        'März',\n        'April',\n        'Mai',\n        'Juni',\n        'Juli',\n        'August',\n        'September',\n        'Oktober',\n        'November',\n        'Dezember'\n      ],\n\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n\n    Date.ext.locales.fr = {\n      a: ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam'],\n      A: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n\n      b: ['jan', 'fév', 'mar', 'avr', 'mai', 'jun', 'jui', 'aoû', 'sep', 'oct', 'nov', 'déc'],\n\n      B: [\n        'janvier',\n        'février',\n        'mars',\n        'avril',\n        'mai',\n        'juin',\n        'juillet',\n        'août',\n        'septembre',\n        'octobre',\n        'novembre',\n        'décembre'\n      ],\n\n      c: '%a %d %b %Y %T %Z',\n      p: ['', ''],\n      P: ['', ''],\n      x: '%d.%m.%Y',\n      X: '%T'\n    };\n  }\n});\n"],"mappings":"+TAyBCA,GAAAC,MAAAC,OAAA,uBACCC,OAAOC,GAAAC,GAAOC,UAAAC,KAAAC,eAOfC,WAAA,CACCC,OAAU,CACRC,MAAQ,SACNC,KAAK,MADCC,OADE,CAMVF,MAAQ,SACNG,UAAO,IASZC,QAAA,CACCC,SAAS,GACPC,SAAY,EACZC,SAAmB,KAWtBC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,OAdOnB,GAAAoB,OAAAjB,KAcDkB,aAAWC,aAdVC,KAc6BP,EAAAC,EAAAC,EAAAC,EAAAI,KAAAC,iC,EASnCA,+BAvBM,WAyBP,OACEC,KAAO,CACLC,OAAM,UAAApB,OADD,CAELqB,QAAQ,M,EAEXC,OA9BM,WAgCP,OAhCOL,KAAAV,U,EAkCNgB,WAlCM,WAoCPN,KApCOT,WAqCLS,KAAKT,SAAL,IAAmBlB,GAAAkC,MAAAC,MAAA,M,2BAGnBR,KAAKT,SAAKkB,O,GAUfC,QAAA,CACCC,UAAS,EACPC,SAAgB,KAChBC,mBAFO,WAIP,0C,EAIAC,gBAAA,WACAd,KAAAY,WACEZ,KAAKY,SAALZ,KAA0Be,gBAAAC,cAAA,oB,sBAM5BC,YAAA,WACAxC,GAAAyC,QAjBOC,SAAAb,a,yEAoBNc,SApBM,WAsBP,IAAAC,EAtBOrB,KAAAc,kBAuBCQ,EAAI,IAAGC,KACbD,EAAApC,OAAUc,KAAAwB,YACVH,EAAEI,UAAcH,EAAAI,SAAhB1B,KAAA2B,Y,GASLC,SAAA,WACCnD,GAAAyC,QA/GqCC,SAAA5B,SA+G1BsC,eAAA,WAAA7B,KAAAoB,SAAApB,K,EAEV8B,MAjHoC,SAAA1C,GAAAX,GAAAsD,KAmH/BC,aAASC,cACPC,UAAY,iCAClBzD,GAAAoB,OAAOjB,KAAAkB,aAAUqC,WAAA,WAAjB/C,GACAX,GAAGC,GAAAC,UAAYyD,cAAaC,cAAW,WAAYjD,G,qBAInDkD,EAAK,MAAI,KAAQ,KAAK,qBACpBC,EAAG,CAAC,UAAD,SAAmB,WAAY,WADd,kCAEpBC,EAAG,CAAC,YAAW,MAAU,YAAY,YAAY,YAAc,MAAW,aAE1EC,EAAG,CAAC,SAAO,UAAc,OAAO,QAAO,MAAO,OAAO,OAAlD,SAAuE,YAJtD,iCAMpBC,EAAG,oBAeHC,EAAG,QACHC,EAAG,CAAC,GAAI,IACRC,EAAG,WACHC,EAAG,MAxBiBvB,KAAtBwB,IAAAC,QAAAC,GAAA,CA4BAX,EAAK,OAAI,MAAT,MAAsB,yBACpBC,EAAG,CAAC,WAAD,QAAsB,QAAO,WAAc,QAD1B,qBAEpBC,EAAG,CAAC,YAAY,MAAS,MAAtB,MAA+B,MAAY,MAA3C,MAAoD,MAAY,YAF/C,OAIpBC,EAAG,CAAC,UAAO,UAAc,OAAO,QAAO,MAAO,OAA3C,UAAgE,OAAO,YAJtD,iCAMpBC,EAAG,oBAeHC,EAAG,QACHC,EAAG,CAAC,GAAI,IACRC,EAAG,WACHC,EAAG,K,IA9K8BrE,GAAtCyC,QAAAC,SAAA+B,e"}