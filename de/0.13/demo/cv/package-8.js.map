{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","HasChildren","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","this","parseChildren","getWidgetElements","xmlElement","Model","getInstance","setWidgetData","containerClass","members","__P_12_0","__P_12_1","getDomString","window","innerWidth","Config","maxMobileScreenWidth","navLeft","document","querySelector","classList","contains","add","style","display","event","message","Bus","subscribe","navbar","bom","element","Animation","animate","util","SLIDE_LEFT_OUT","addListenerOnce","getChildrenDomString","_onDomReady","isTouchDevice","touchScroll","_action","SLIDE_LEFT_IN","id","scrollStartPos","elem","Registration","addListener","scrollTop","touches","pageY","preventDefault","createEvent","e","defer","ScriptLoader","addStyles","addHandler","WidgetFactory","registerClass","plugins","MobileMenu","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/MobileMenu.js"],"sourcesContent":["/* MobileMenu.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author alltime84\n * @since 2016\n * @asset(plugins/mobilemenu/*.css)\n */\nqx.Class.define('cv.plugins.MobileMenu', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.HasChildren],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n\n      cv.parser.pure.WidgetParser.parseChildren(xml, path, flavour, pageType);\n      return data;\n    },\n\n    getWidgetElements(xmlElement, path) {\n      cv.data.Model.getInstance().setWidgetData(path + '_0', {\n        containerClass: 'actor'\n      });\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __navLeft: null,\n    __isTouchDevice: null,\n\n    // overridden\n    getDomString() {\n      if (window.innerWidth <= cv.Config.maxMobileScreenWidth) {\n        const navLeft = (this.__navLeft = document.querySelector('#navbarLeft'));\n        if (!navLeft.classList.contains('mobilemenu')) {\n          navLeft.classList.add('mobilemenu');\n        }\n        navLeft.style.display = 'none';\n        qx.event.message.Bus.subscribe('path.pageChanged', function () {\n          const navbar = navLeft.querySelector('.navbar');\n          const animation = qx.bom.element.Animation.animate(navbar, qx.util.Animation.SLIDE_LEFT_OUT);\n\n          animation.addListenerOnce('end', () => {\n            navLeft.style.display = 'none';\n          });\n        });\n\n        return '<div class=\"clearfix mobilemenuTrigger\">' + this.getChildrenDomString() + '</div>';\n      }\n      return '<div class=\"clearfix mobilemenuTrigger\" style=\"display: none\"></div>';\n    },\n\n    _onDomReady() {\n      if (this.isTouchDevice()) {\n        this.touchScroll('navbarLeft');\n      }\n    },\n\n    _action() {\n      if (window.innerWidth <= cv.Config.maxMobileScreenWidth) {\n        if (this.isTouchDevice()) {\n          this.__navLeft.style.display = 'block';\n          const navbar = this.__navLeft.querySelector('.navbar.navbarActive');\n          qx.bom.element.Animation.animate(navbar, qx.util.Animation.SLIDE_LEFT_IN);\n        }\n      }\n    },\n\n    touchScroll(id) {\n      let scrollStartPos = 0;\n\n      const elem = document.querySelector('#' + id);\n      qx.event.Registration.addListener(\n        elem,\n        'touchstart',\n        function (event) {\n          scrollStartPos = this.scrollTop + event.touches[0].pageY;\n          event.preventDefault();\n        },\n        false\n      );\n\n      qx.event.Registration.addListener(\n        elem,\n        'touchmove',\n        function (event) {\n          this.scrollTop = scrollStartPos - event.touches[0].pageY;\n          event.preventDefault();\n        },\n        false\n      );\n    },\n\n    isTouchDevice() {\n      if (this.__isTouchDevice === null) {\n        try {\n          document.createEvent('TouchEvent');\n          this.__isTouchDevice = true;\n        } catch (e) {\n          this.__isTouchDevice = false;\n        }\n      }\n      return this.__isTouchDevice;\n    }\n  },\n\n  // VisuDesign_Custom.prototype.addCreator(\"mobilemenu\", {\n  //   create: function(element, path, flavour, type) {\n  //     var $e = $(element);\n  //     var data = templateEngine.widgetDataInsert( path, {\n  //       content           : getWidgetElements($e, path)\n  //     } );\n  // });\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/mobilemenu/mobilemenu.css');\n    cv.parser.pure.WidgetParser.addHandler('mobilemenu', statics);\n    cv.ui.structure.WidgetFactory.registerClass('mobilemenu', statics);\n  }\n});\n"],"mappings":"+dAuBCA,GAAAC,MAAAC,OAAA,yBACCC,OAAOC,GAAAC,GAAOC,UAAAC,KAAAC,eACdC,QAAQ,CAAEL,GAAGC,GAACK,OAASC,aAOxBC,QAAA,CAWAC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,IAAKC,EAAAd,GAAAe,OAACZ,KAAKa,aAAaC,aAAYC,KAAAR,EAAAC,EAAAC,EAAAC,GAClCb,GAAAe,OAAUZ,KAAMa,aAAYG,cAAaT,EAAAC,EAAaC,EAASC,GAE/D,OAAGC,C,EAELM,kBAAC,SAAAC,EAAAV,GAEDX,GAAAc,KAAAQ,MAAAC,cAAiBC,cAAAb,EAAC,KAAU,CACxBc,eAAY,S,GAUnBC,QAAA,CACCC,SAAS,KACPC,SAAW,KAGXC,aAAA,WACA,GAAAC,OAAYC,YAAA/B,GAAAgC,OAAAC,qBAAG,CACb,IAAIC,EAAOhB,KAAUS,SAAOQ,SAAOC,cAAoB,eAC/CF,EAAOG,UAASC,SAAY,eAClCJ,EAAKG,UAAQE,IAAU,cAEvBL,EAAAM,MAAAC,QAAA,OACA7C,GAAA8C,MAAQC,QAAMC,IAAOC,UAAS,+BAC5B,IAACC,EAAMZ,EAAYE,cAAU,WACdxC,GAAAmD,IAAQC,QAAAC,UAAcC,QAAUJ,EAAAlD,GAAAuD,KAAAF,UAAAG,gBACzCC,gBAAmB,OAAQ,WAEjCnB,EAAUM,MAAAC,QAAgB,M,OAG5B,MAAE,2CAAAvB,KAAAoC,uBAAA,Q,CAGJ,4E,EAEFC,YAAC,WAEDrC,KAAWsC,iBACTtC,KAAIuC,YAAK,a,EAGXC,QAAC,WAED,GAAA5B,OAAOC,YAAA/B,GAAGgC,OAAAC,sBACJf,KAAOsC,gBAAiB,CAC1BtC,KAAIS,SAAKa,MAAaC,QAAI,QACxB,IAAIK,EAAU5B,KAACS,SAAaS,cAAU,wBACtCxC,GAAAmD,IAAMC,QAASC,UAAKC,QAAUJ,EAAclD,GAAAuD,KAAAF,UAAAU,c,GAIlDF,YAAC,SAAAG,GAED,IAAAC,EAAW,EACLC,EAAA3B,SAAcC,cAAI,IAAAwB,GAEtBhE,GAAA8C,MAAUqB,aAAYC,YAAcF,EAAM,cAAG,SAAApB,GAC3CmB,EAAO3C,KAAa+C,UACpBvB,EACAwB,QAAA,GAAYC,MAEVzB,EAAA0B,gB,IACA,GACFxE,GACA8C,MACDqB,aAAAC,YAAAF,EAAA,sBAAApB,GAECxB,KAAC+C,UAAMJ,EACPnB,EACAwB,QAAA,GACAC,MACEzB,EAAK0B,gB,IACL,E,EAINZ,cAAC,WAED,GAAa,OAAbtC,KAAAU,SACE,IACEO,SAAIkC,YAAA,cACFnD,KAAAU,UAAS,C,CACT,MAAK0C,GACLpD,KAAAU,UAAU,C,CAGd,OAAAV,KAAAU,Q,GAWJ2C,MAAA,SAAA/D,GAEKR,GAAAmD,KAACqB,aAASjD,cACPkD,UAAY,qCAClBzE,GAAAe,OAAOZ,KAAAa,aAAU0D,WAAA,aAAoClE,GACrDR,GAAGC,GAAAC,UAAYyE,cAAaC,cAAW,aAAcpE,E,IAGxDR,GAAC6E,QAAAC,WAAAC,e","ignoreList":[]}