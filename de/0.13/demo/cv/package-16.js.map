{"version":3,"names":["extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","Update","construct","props","_this","this","constructor","call","__P_24_0","addListenerOnce","refreshCalllist","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseFormat","parseAddress","parseRefresh","device","max","transform","value","columns","default","TAM","TAMColor","TAMwait","TAMwaitColor","TAMplay","TAMplayColor","TAMstop","TAMstopColor","typeIncoming","typeIncomingColor","typeMissed","typeMissedColor","typeOutgoing","typeOutgoingColor","typeActiveIncoming","typeActiveIncomingColor","typeRejectedIncoming","typeRejectedIncomingColor","typeActiveOutgoing","typeActiveOutgoingColor","typeUnknown","typeUnknownColor","events","tr064ListRefreshed","properties","check","init","members","__P_24_1","__P_24_2","undefined","__P_24_3","_getInnerDomString","_setupRefreshAction","_this2","_timer","qx","event","Timer","getRefresh","addListener","start","_update","address","_displayCalllist","self","clLi","getDomElement","getElementsByClassName","sid","replace","html","types","name","getTypeUnknown","color","getTypeUnknownColor","getTypeIncoming","getTypeIncomingColor","getTypeMissed","getTypeMissedColor","getTypeOutgoing","getTypeOutgoingColor","getTypeActiveIncoming","getTypeActiveIncomingColor","getTypeRejectedIncoming","getTypeRejectedIncomingColor","getTypeActiveOutgoing","getTypeActiveOutgoingColor","forEach","cl","audio","type","Type","Path","getDevice","IconHandler","getInstance","getIconElement","getTAM","getTAMColor","getColumns","split","col","Date","Name","Caller","innerHTML","tamList","i","length","addEventListener","__P_24_4","_getCallListURI","url","window","fetch","then","response","ok","json","core","notifications","Router","dispatchMessage","title","locale","Manager","tr","severity","message","status","statusText","JSON","stringify","source","getMax","text","str","DOMParser","parseFromString","itemList","getElementsByTagName","childrenList","children","entry","ii","nodeName","textContent","push","fireEvent","error","element","previousElementSibling","__P_24_5","readyState","__P_24_6","paused","playPromise","play","__P_24_7","pause","currentTime","getTAMwait","getTAMwaitColor","getTAMplay","getTAMplayColor","getTAMstop","getTAMstopColor","defer","util","ScriptLoader","addStyles","addHandler","plugins","tr064","CallList","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/tr064/CallList.js"],"sourcesContent":["/* CallList.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The TR-064 plugin and widget creates a interface to routers that are\n * configured by the TR-064 protocol, like the well known Fritz!Box routers.\n *\n * The protocol is described at: https://avm.de/service/schnittstellen/\n *\n * @author Christian Mayer\n * @since 0.11.0\n * @asset(plugins/tr064/*)\n */\n\nqx.Class.define('cv.plugins.tr064.CallList', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(props) {\n    super(props);\n    this.__TAMeventAttached = {};\n    this.addListenerOnce('domReady', () => {\n      this.refreshCalllist('initial');\n    });\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        device: {},\n        max: {\n          transform(value) {\n            return +value;\n          }\n        },\n\n        columns: { default: 'type;date;nameOrCaller;tam' },\n        TAM: { default: 'phone_answering' },\n        TAMColor: { default: '' },\n        TAMwait: { default: 'control_reload' },\n        TAMwaitColor: { default: '' },\n        TAMplay: { default: 'audio_play' },\n        TAMplayColor: { default: '' },\n        TAMstop: { default: 'phone_answering' },\n        TAMstopColor: { default: '' },\n        typeIncoming: { default: 'phone_call_in' },\n        typeIncomingColor: { default: '' },\n        typeMissed: { default: 'phone_missed_in' },\n        typeMissedColor: { default: '' },\n        typeOutgoing: { default: 'phone_call_out' },\n        typeOutgoingColor: { default: '' },\n        typeActiveIncoming: { default: 'phone_ring_in' },\n        typeActiveIncomingColor: { default: '' },\n        typeRejectedIncoming: { default: 'phone_call_end_in' },\n        typeRejectedIncomingColor: { default: '' },\n        typeActiveOutgoing: { default: 'phone_ring_out' },\n        typeActiveOutgoingColor: { default: '' },\n        typeUnknown: { default: 'text_question_mark' },\n        typeUnknownColor: { default: '' }\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    tr064ListRefreshed: 'qx.event.type.Event' // event to support unit test\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    device: {\n      check: 'String',\n      init: ''\n    },\n\n    max: {\n      check: 'Number',\n      init: 0\n    },\n\n    columns: { check: 'String' },\n    TAM: { check: 'String' },\n    TAMColor: { check: 'String' },\n    TAMwait: { check: 'String' },\n    TAMwaitColor: { check: 'String' },\n    TAMplay: { check: 'String' },\n    TAMplayColor: { check: 'String' },\n    TAMstop: { check: 'String' },\n    TAMstopColor: { check: 'String' },\n    typeIncoming: { check: 'String' },\n    typeIncomingColor: { check: 'String' },\n    typeMissed: { check: 'String' },\n    typeMissedColor: { check: 'String' },\n    typeOutgoing: { check: 'String' },\n    typeOutgoingColor: { check: 'String' },\n    typeActiveIncoming: { check: 'String' },\n    typeActiveIncomingColor: { check: 'String' },\n    typeRejectedIncoming: { check: 'String' },\n    typeRejectedIncomingColor: { check: 'String' },\n    typeActiveOutgoing: { check: 'String' },\n    typeActiveOutgoingColor: { check: 'String' },\n    typeUnknown: { check: 'String' },\n    typeUnknownColor: { check: 'String' }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __calllistUri: '',\n    __calllistList: undefined,\n    __refreshingCalllist: false,\n    /**\n     * Prevent warning \"Reference values are shared across all instances\"\n     * as the keys are unique a share doesn't matter:\n     * @lint ignoreReferenceField(__TAMeventAttached)\n     */\n    __TAMeventAttached: null,\n\n    _getInnerDomString() {\n      return '<div class=\"actor\"><table class=\"TR064_calllist\"><tr><td>Loading TR-064...</td></tr></table></div>';\n    },\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        if (!this.__refreshingCalllist) {\n          this.refreshCalllist('timer');\n        }\n      });\n      this._timer.start();\n    },\n    _update(address, value) {\n      if (!this.__refreshingCalllist) {\n        this.refreshCalllist('update');\n      }\n    },\n\n    _displayCalllist() {\n      const self = this;\n      const clLi = this.getDomElement().getElementsByClassName('TR064_calllist')[0];\n      const sid = this.__calllistUri ? this.__calllistUri.replace(/.*sid=/, '') : '';\n      let html = '';\n      const types = {\n        0: { name: this.getTypeUnknown(), color: this.getTypeUnknownColor() },\n        1: { name: this.getTypeIncoming(), color: this.getTypeIncomingColor() },\n        2: { name: this.getTypeMissed(), color: this.getTypeMissedColor() },\n        3: { name: this.getTypeOutgoing(), color: this.getTypeOutgoingColor() },\n        9: {\n          name: this.getTypeActiveIncoming(),\n          color: this.getTypeActiveIncomingColor()\n        },\n\n        10: {\n          name: this.getTypeRejectedIncoming(),\n          color: this.getTypeRejectedIncomingColor()\n        },\n\n        11: {\n          name: this.getTypeActiveOutgoing(),\n          color: this.getTypeActiveOutgoingColor()\n        }\n      };\n\n      this.__calllistList.forEach(function (cl) {\n        let audio = '';\n        const type = cl.Type in types ? types[cl.Type] : types[0];\n\n        if (cl.Path) {\n          audio =\n            '<audio preload=\"none\">' +\n            '<source src=\"resource/plugins/tr064/proxy.php?device=' +\n            self.getDevice() +\n            '&uri=' +\n            cl.Path +\n            '%26sid=' +\n            sid +\n            '\">' +\n            '</audio>' +\n            '<div class=\"tam clickable\">' +\n            cv.IconHandler.getInstance().getIconElement(self.getTAM(), '*', '*', self.getTAMColor(), '', '', true) +\n            '</div>';\n        }\n\n        html += '<tr>';\n        self\n          .getColumns()\n          .split(';')\n          .forEach(function (col) {\n            switch (col) {\n              case 'type':\n                html +=\n                  '<td>' +\n                  cv.IconHandler.getInstance().getIconElement(type.name, '*', '*', type.color, '', '', true) +\n                  '</td>';\n                break;\n\n              case 'date':\n                html += '<td>' + cl.Date + '</td>';\n                break;\n\n              case 'name':\n                html += '<td>' + cl.Name + '</td>';\n                break;\n\n              case 'caller':\n                html += '<td>' + cl.Caller + '</td>';\n                break;\n\n              case 'nameOrCaller':\n                if (cl.Name !== '') {\n                  html += '<td>' + cl.Name + '</td>';\n                } else {\n                  html += '<td>' + cl.Caller + '</td>';\n                }\n                break;\n\n              case 'tam':\n                html += '<td>' + audio + '</td>';\n                break;\n            }\n          });\n        html += '</tr>';\n      });\n      clLi.innerHTML = html;\n      const tamList = clLi.getElementsByClassName('tam');\n      for (let i = 0; i < tamList.length; i++) {\n        tamList[i].addEventListener('click', function () {\n          self.__playTAM(this);\n        });\n      }\n    },\n\n    /**\n     * Fetch the TR-064 resource\n     *   /upnp/control/x_contact urn:dslforum-org:service:X_AVM-DE_OnTel:1\n     *   GetCallList\n     */\n    _getCallListURI() {\n      const self = this;\n      const url =\n        'resource/plugins/tr064/soap.php?device=' +\n        this.getDevice() +\n        '&location=upnp/control/x_contact&uri=urn:dslforum-org:service:X_AVM-DE_OnTel:1&fn=GetCallList';\n\n      window\n        .fetch(url)\n        .then(function (response) {\n          if (response.ok) {\n            return response.json();\n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr(\n              'Reading URL \"%1\" failed with status \"%2\": \"%2\"',\n              response.url,\n              response.status,\n              response.statusText\n            )\n          });\n\n          self.__calllistUri = '<fail>';\n          return null;\n        })\n        .then(function (data) {\n          if (typeof data === 'string') {\n            self.__calllistUri = data;\n            self.refreshCalllist('getCallListURI');\n          } else {\n            cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n              title: qx.locale.Manager.tr('TR-064 communication response error'),\n\n              severity: 'urgent',\n              message: qx.locale.Manager.tr('Reading URL \"%1\" failed with content: \"%2\"', url, JSON.stringify(data))\n            });\n\n            self.__calllistUri = '<fail>';\n          }\n        });\n    },\n\n    refreshCalllist(source) {\n      this.__refreshingCalllist = true;\n\n      if (this.__calllistUri === '<fail>') {\n        return; // this problem won't fix anymore during this instance\n      }\n\n      if (this.__calllistUri === '') {\n        this._getCallListURI();\n        return;\n      }\n\n      const self = this;\n      const url =\n        'resource/plugins/tr064/proxy.php?device=' +\n        this.getDevice() +\n        '&uri=' +\n        this.__calllistUri +\n        '%26max=' +\n        this.getMax();\n\n      window\n        .fetch(url)\n        .then(function (response) {\n          if (response.ok) {\n            return response.text();\n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr(\n              'Reading URL \"%1\" failed with status \"%2\": \"%2\"',\n              response.url,\n              response.status,\n              response.statusText\n            )\n          });\n\n          return '<xml/>';\n        })\n        .then(function (str) {\n          return new window.DOMParser().parseFromString(str, 'text/xml');\n        })\n        .then(function (data) {\n          self.__calllistList = [];\n          const itemList = data.getElementsByTagName('Call');\n          for (let i = 0; i < itemList.length; i++) {\n            const childrenList = itemList[i].children;\n            const entry = {};\n            for (let ii = 0; ii < childrenList.length; ii++) {\n              entry[childrenList[ii].nodeName] = childrenList[ii].textContent;\n            }\n            self.__calllistList.push(entry);\n          }\n          self._displayCalllist();\n          self.__refreshingCalllist = false;\n          self.fireEvent('tr064ListRefreshed');\n        })\n        .catch(function (error) {\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr('refreshCalllist() error: \"%1\"', JSON.stringify(error))\n          });\n\n          self.error('TR-064 refreshCalllist() error:', error);\n        });\n    },\n\n    /**\n     * The EventListener for click on the TAM button.\n     * @param element\n     */\n    __playTAM(element) {\n      const self = this;\n      const audio = element.previousElementSibling;\n\n      if (!this.__TAMeventAttached[audio]) {\n        audio.addEventListener('ended', function () {\n          self.__TAMstop(element);\n        });\n        this.__TAMeventAttached[audio] = true;\n      }\n\n      if (audio.readyState < 4) {\n        // not ready yet\n        this.__TAMwait(element);\n      }\n\n      if (audio.paused) {\n        const playPromise = audio.play();\n        if (playPromise !== undefined) {\n          playPromise\n            .then(function () {\n              self.__TAMplay(element);\n            })\n            .catch(function () {\n              /*NOP*/\n            });\n        }\n      } else {\n        audio.pause();\n        audio.currentTime = 0;\n        this.__TAMstop(element);\n      }\n    },\n\n    __TAMwait(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMwait(),\n        '*',\n        '*',\n        this.getTAMwaitColor(),\n        '',\n        '',\n        true\n      );\n    },\n\n    __TAMplay(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMplay(),\n        '*',\n        '*',\n        this.getTAMplayColor(),\n        '',\n        '',\n        true\n      );\n    },\n\n    __TAMstop(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMstop(),\n        '*',\n        '*',\n        this.getTAMstopColor(),\n        '',\n        '',\n        true\n      );\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/tr064/tr064.css');\n    cv.parser.pure.WidgetParser.addHandler('calllist', cv.plugins.tr064.CallList);\n\n    cv.ui.structure.WidgetFactory.registerClass('calllist', statics);\n  }\n});\n"],"mappings":"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","ignoreList":[]}