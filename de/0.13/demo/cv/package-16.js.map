{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","Update","construct","props","_this","this","__P_24_0","addListenerOnce","refreshCalllist","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseFormat","parseAddress","parseRefresh","device","max","transform","value","columns","default","TAM","TAMColor","TAMwait","TAMwaitColor","TAMplay","TAMplayColor","TAMstop","TAMstopColor","typeIncoming","typeIncomingColor","typeMissed","typeMissedColor","typeOutgoing","typeOutgoingColor","typeActiveIncoming","typeActiveIncomingColor","typeRejectedIncoming","typeRejectedIncomingColor","typeActiveOutgoing","typeActiveOutgoingColor","typeUnknown","typeUnknownColor","events","tr064ListRefreshed","properties","check","init","members","__P_24_1","__P_24_2","undefined","__P_24_3","_getInnerDomString","_setupRefreshAction","_this2","_update","address","_displayCalllist","self","clLi","getDomElement","getElementsByClassName","sid","replace","html","types","name","getTypeUnknown","color","getTypeUnknownColor","getTypeIncoming","getTypeIncomingColor","getTypeMissed","getTypeMissedColor","getTypeOutgoing","getTypeOutgoingColor","getTypeActiveIncoming","getTypeActiveIncomingColor","getTypeRejectedIncoming","getTypeRejectedIncomingColor","getTypeActiveOutgoing","getTypeActiveOutgoingColor","audio","type","cl","Type","getDevice","Path","IconHandler","getInstance","getIconElement","getTAM","getTAMColor","getColumns","split","forEach","col","Date","Name","Caller","tamList","i","addEventListener","__P_24_4","_getCallListURI","url","window","fetch","then","response","ok","json","title","locale","Manager","tr","severity","message","status","statusText","core","notifications","Router","dispatchMessage","JSON","stringify","source","getMax","text","str","DOMParser","parseFromString","itemList","getElementsByTagName","childrenList","children","entry","ii","nodeName","textContent","fireEvent","error","element","previousElementSibling","__P_24_5","__P_24_6","playPromise","play","__P_24_7","pause","currentTime","innerHTML","getTAMwait","getTAMwaitColor","getTAMplay","getTAMplayColor","getTAMstop","getTAMstopColor","defer","util","ScriptLoader","addStyles","addHandler","plugins","tr064","CallList","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/tr064/CallList.js"],"sourcesContent":["/* CallList.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The TR-064 plugin and widget creates a interface to routers that are\n * configured by the TR-064 protocol, like the well known Fritz!Box routers.\n *\n * The protocol is described at: https://avm.de/service/schnittstellen/\n *\n * @author Christian Mayer\n * @since 0.11.0\n * @asset(plugins/tr064/*)\n */\n\nqx.Class.define('cv.plugins.tr064.CallList', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh, cv.ui.common.Update],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(props) {\n    super(props);\n    this.__TAMeventAttached = {};\n    this.addListenerOnce('domReady', () => {\n      this.refreshCalllist('initial');\n    });\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        device: {},\n        max: {\n          transform(value) {\n            return +value;\n          }\n        },\n\n        columns: { default: 'type;date;nameOrCaller;tam' },\n        TAM: { default: 'phone_answering' },\n        TAMColor: { default: '' },\n        TAMwait: { default: 'control_reload' },\n        TAMwaitColor: { default: '' },\n        TAMplay: { default: 'audio_play' },\n        TAMplayColor: { default: '' },\n        TAMstop: { default: 'phone_answering' },\n        TAMstopColor: { default: '' },\n        typeIncoming: { default: 'phone_call_in' },\n        typeIncomingColor: { default: '' },\n        typeMissed: { default: 'phone_missed_in' },\n        typeMissedColor: { default: '' },\n        typeOutgoing: { default: 'phone_call_out' },\n        typeOutgoingColor: { default: '' },\n        typeActiveIncoming: { default: 'phone_ring_in' },\n        typeActiveIncomingColor: { default: '' },\n        typeRejectedIncoming: { default: 'phone_call_end_in' },\n        typeRejectedIncomingColor: { default: '' },\n        typeActiveOutgoing: { default: 'phone_ring_out' },\n        typeActiveOutgoingColor: { default: '' },\n        typeUnknown: { default: 'text_question_mark' },\n        typeUnknownColor: { default: '' }\n      };\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    tr064ListRefreshed: 'qx.event.type.Event' // event to support unit test\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    device: {\n      check: 'String',\n      init: ''\n    },\n\n    max: {\n      check: 'Number',\n      init: 0\n    },\n\n    columns: { check: 'String' },\n    TAM: { check: 'String' },\n    TAMColor: { check: 'String' },\n    TAMwait: { check: 'String' },\n    TAMwaitColor: { check: 'String' },\n    TAMplay: { check: 'String' },\n    TAMplayColor: { check: 'String' },\n    TAMstop: { check: 'String' },\n    TAMstopColor: { check: 'String' },\n    typeIncoming: { check: 'String' },\n    typeIncomingColor: { check: 'String' },\n    typeMissed: { check: 'String' },\n    typeMissedColor: { check: 'String' },\n    typeOutgoing: { check: 'String' },\n    typeOutgoingColor: { check: 'String' },\n    typeActiveIncoming: { check: 'String' },\n    typeActiveIncomingColor: { check: 'String' },\n    typeRejectedIncoming: { check: 'String' },\n    typeRejectedIncomingColor: { check: 'String' },\n    typeActiveOutgoing: { check: 'String' },\n    typeActiveOutgoingColor: { check: 'String' },\n    typeUnknown: { check: 'String' },\n    typeUnknownColor: { check: 'String' }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __calllistUri: '',\n    __calllistList: undefined,\n    __refreshingCalllist: false,\n    /**\n     * Prevent warning \"Reference values are shared across all instances\"\n     * as the keys are unique a share doesn't matter:\n     * @lint ignoreReferenceField(__TAMeventAttached)\n     */\n    __TAMeventAttached: null,\n\n    _getInnerDomString() {\n      return '<div class=\"actor\"><table class=\"TR064_calllist\"><tr><td>Loading TR-064...</td></tr></table></div>';\n    },\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', () => {\n        if (!this.__refreshingCalllist) {\n          this.refreshCalllist('timer');\n        }\n      });\n      this._timer.start();\n    },\n    _update(address, value) {\n      if (!this.__refreshingCalllist) {\n        this.refreshCalllist('update');\n      }\n    },\n\n    _displayCalllist() {\n      const self = this;\n      const clLi = this.getDomElement().getElementsByClassName('TR064_calllist')[0];\n      const sid = this.__calllistUri ? this.__calllistUri.replace(/.*sid=/, '') : '';\n      let html = '';\n      const types = {\n        0: { name: this.getTypeUnknown(), color: this.getTypeUnknownColor() },\n        1: { name: this.getTypeIncoming(), color: this.getTypeIncomingColor() },\n        2: { name: this.getTypeMissed(), color: this.getTypeMissedColor() },\n        3: { name: this.getTypeOutgoing(), color: this.getTypeOutgoingColor() },\n        9: {\n          name: this.getTypeActiveIncoming(),\n          color: this.getTypeActiveIncomingColor()\n        },\n\n        10: {\n          name: this.getTypeRejectedIncoming(),\n          color: this.getTypeRejectedIncomingColor()\n        },\n\n        11: {\n          name: this.getTypeActiveOutgoing(),\n          color: this.getTypeActiveOutgoingColor()\n        }\n      };\n\n      this.__calllistList.forEach(function (cl) {\n        let audio = '';\n        const type = cl.Type in types ? types[cl.Type] : types[0];\n\n        if (cl.Path) {\n          audio =\n            '<audio preload=\"none\">' +\n            '<source src=\"resource/plugins/tr064/proxy.php?device=' +\n            self.getDevice() +\n            '&uri=' +\n            cl.Path +\n            '%26sid=' +\n            sid +\n            '\">' +\n            '</audio>' +\n            '<div class=\"tam clickable\">' +\n            cv.IconHandler.getInstance().getIconElement(self.getTAM(), '*', '*', self.getTAMColor(), '', '', true) +\n            '</div>';\n        }\n\n        html += '<tr>';\n        self\n          .getColumns()\n          .split(';')\n          .forEach(function (col) {\n            switch (col) {\n              case 'type':\n                html +=\n                  '<td>' +\n                  cv.IconHandler.getInstance().getIconElement(type.name, '*', '*', type.color, '', '', true) +\n                  '</td>';\n                break;\n\n              case 'date':\n                html += '<td>' + cl.Date + '</td>';\n                break;\n\n              case 'name':\n                html += '<td>' + cl.Name + '</td>';\n                break;\n\n              case 'caller':\n                html += '<td>' + cl.Caller + '</td>';\n                break;\n\n              case 'nameOrCaller':\n                if (cl.Name !== '') {\n                  html += '<td>' + cl.Name + '</td>';\n                } else {\n                  html += '<td>' + cl.Caller + '</td>';\n                }\n                break;\n\n              case 'tam':\n                html += '<td>' + audio + '</td>';\n                break;\n            }\n          });\n        html += '</tr>';\n      });\n      clLi.innerHTML = html;\n      const tamList = clLi.getElementsByClassName('tam');\n      for (let i = 0; i < tamList.length; i++) {\n        tamList[i].addEventListener('click', function () {\n          self.__playTAM(this);\n        });\n      }\n    },\n\n    /**\n     * Fetch the TR-064 resource\n     *   /upnp/control/x_contact urn:dslforum-org:service:X_AVM-DE_OnTel:1\n     *   GetCallList\n     */\n    _getCallListURI() {\n      const self = this;\n      const url =\n        'resource/plugins/tr064/soap.php?device=' +\n        this.getDevice() +\n        '&location=upnp/control/x_contact&uri=urn:dslforum-org:service:X_AVM-DE_OnTel:1&fn=GetCallList';\n\n      window\n        .fetch(url)\n        .then(function (response) {\n          if (response.ok) {\n            return response.json();\n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr(\n              'Reading URL \"%1\" failed with status \"%2\": \"%2\"',\n              response.url,\n              response.status,\n              response.statusText\n            )\n          });\n\n          self.__calllistUri = '<fail>';\n          return null;\n        })\n        .then(function (data) {\n          if (typeof data === 'string') {\n            self.__calllistUri = data;\n            self.refreshCalllist('getCallListURI');\n          } else {\n            cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n              title: qx.locale.Manager.tr('TR-064 communication response error'),\n\n              severity: 'urgent',\n              message: qx.locale.Manager.tr('Reading URL \"%1\" failed with content: \"%2\"', url, JSON.stringify(data))\n            });\n\n            self.__calllistUri = '<fail>';\n          }\n        });\n    },\n\n    refreshCalllist(source) {\n      this.__refreshingCalllist = true;\n\n      if (this.__calllistUri === '<fail>') {\n        return; // this problem won't fix anymore during this instance\n      }\n\n      if (this.__calllistUri === '') {\n        this._getCallListURI();\n        return;\n      }\n\n      const self = this;\n      const url =\n        'resource/plugins/tr064/proxy.php?device=' +\n        this.getDevice() +\n        '&uri=' +\n        this.__calllistUri +\n        '%26max=' +\n        this.getMax();\n\n      window\n        .fetch(url)\n        .then(function (response) {\n          if (response.ok) {\n            return response.text();\n          }\n          // else:\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr(\n              'Reading URL \"%1\" failed with status \"%2\": \"%2\"',\n              response.url,\n              response.status,\n              response.statusText\n            )\n          });\n\n          return '<xml/>';\n        })\n        .then(function (str) {\n          return new window.DOMParser().parseFromString(str, 'text/xml');\n        })\n        .then(function (data) {\n          self.__calllistList = [];\n          const itemList = data.getElementsByTagName('Call');\n          for (let i = 0; i < itemList.length; i++) {\n            const childrenList = itemList[i].children;\n            const entry = {};\n            for (let ii = 0; ii < childrenList.length; ii++) {\n              entry[childrenList[ii].nodeName] = childrenList[ii].textContent;\n            }\n            self.__calllistList.push(entry);\n          }\n          self._displayCalllist();\n          self.__refreshingCalllist = false;\n          self.fireEvent('tr064ListRefreshed');\n        })\n        .catch(function (error) {\n          cv.core.notifications.Router.dispatchMessage('cv.tr064.error', {\n            title: qx.locale.Manager.tr('TR-064 communication error'),\n            severity: 'urgent',\n            message: qx.locale.Manager.tr('refreshCalllist() error: \"%1\"', JSON.stringify(error))\n          });\n\n          self.error('TR-064 refreshCalllist() error:', error);\n        });\n    },\n\n    /**\n     * The EventListener for click on the TAM button.\n     * @param element\n     */\n    __playTAM(element) {\n      const self = this;\n      const audio = element.previousElementSibling;\n\n      if (!this.__TAMeventAttached[audio]) {\n        audio.addEventListener('ended', function () {\n          self.__TAMstop(element);\n        });\n        this.__TAMeventAttached[audio] = true;\n      }\n\n      if (audio.readyState < 4) {\n        // not ready yet\n        this.__TAMwait(element);\n      }\n\n      if (audio.paused) {\n        const playPromise = audio.play();\n        if (playPromise !== undefined) {\n          playPromise\n            .then(function () {\n              self.__TAMplay(element);\n            })\n            .catch(function () {\n              /*NOP*/\n            });\n        }\n      } else {\n        audio.pause();\n        audio.currentTime = 0;\n        this.__TAMstop(element);\n      }\n    },\n\n    __TAMwait(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMwait(),\n        '*',\n        '*',\n        this.getTAMwaitColor(),\n        '',\n        '',\n        true\n      );\n    },\n\n    __TAMplay(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMplay(),\n        '*',\n        '*',\n        this.getTAMplayColor(),\n        '',\n        '',\n        true\n      );\n    },\n\n    __TAMstop(element) {\n      element.innerHTML = cv.IconHandler.getInstance().getIconElement(\n        this.getTAMstop(),\n        '*',\n        '*',\n        this.getTAMstopColor(),\n        '',\n        '',\n        true\n      );\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/tr064/tr064.css');\n    cv.parser.pure.WidgetParser.addHandler('calllist', cv.plugins.tr064.CallList);\n\n    cv.ui.structure.WidgetFactory.registerClass('calllist', statics);\n  }\n});\n"],"mappings":"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"}