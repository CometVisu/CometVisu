{"version":3,"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Clock.js"],"names":["qx","Class","define","extend","cv","ui","structure","AbstractWidget","include","common","Update","Operate","construct","props","value","Date","this","__P_8_0","constructor","call","properties","src","check","srcPopup","titlePopup","hide24h","init","hide24hPopup","hideAMPM","hideAMPMPopup","hideDigits","hideDigitsPopup","hideSeconds","hideSecondsPopup","sendOnFinish","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseFormat","parseAddress","transformValueTrue","default","src_popup","target","title_popup","hide_24h","transform","hide_24h_popup","hide_am_pm","hide_am_pm_popup","hide_digits","hide_digits_popup","hide_seconds","hide_seconds_popup","send_on_finish","getElements","svg","tspan","elements","hour24","querySelector","hour","minute","second","am","pm","digits","hour24Group","setAttribute","members","__P_8_1","__P_8_2","__P_8_3","__P_8_4","_getInnerDomString","_onDomReady","_this","trailing","uri","util","ResourceManager","getInstance","toUri","getSrc","uriPopup","getSrcPopup","promises","window","fetch","push","result","Error","responses","text","ok","then","texts","actor","getActor","firstElementChild","width","getAttribute","height","plugins","Clock","getHide24h","getHideAMPM","getHideDigits","getHideSeconds","popup","document","createElement","innerHTML","addEventListener","PopupHandler","showPopup","title","content","_width","HotSpotHour","HotSpotMinute","HotSpotSecond","_updateHands","error","initListeners","_update","address","isDataAlreadyHandled","defaultValueHandling","getHours","getMinutes","getSeconds","split","date","setValue","handleEvent","event","dragMode","id","preventDefault","stopPropagation","dragHelper","removeEventListener","__P_8_5","minutes","y","clientY","CTM","f","d","angle","Math","atan2","x","PI","time","getValue","oldHours","hours","floor","setDate","getDate","setMinutes","round","setHours","oldMinutes","setSeconds","seconds","oldSeconds","dragAction","toTimeString","__P_8_6","sendToBackend","_this2","_this$__P_8_","e","textContent","sprintf","defer","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"mappings":"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","sourcesContent":["/* Clock.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @asset(plugins/clock/*)\n */\nqx.Class.define('cv.plugins.Clock', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Update, cv.ui.common.Operate],\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (props) {\n    props.value = new Date();\n    this.__Elements = [];\n    this.base(arguments, props);\n  },\n\n  /*\n  ******************************************************\n  PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: 'String'\n    },\n    srcPopup: {\n      check: 'String'\n    },\n    titlePopup: {\n      check: 'String'\n    },\n    hide24h: {\n      check: 'Boolean',\n      init: false\n    },\n    hide24hPopup: {\n      check: 'Boolean',\n      init: false\n    },\n    hideAMPM: {\n      check: 'Boolean',\n      init: false\n    },\n    hideAMPMPopup: {\n      check: 'Boolean',\n      init: false\n    },\n    hideDigits: {\n      check: 'Boolean',\n      init: false\n    },\n    hideDigitsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n    hideSeconds: {\n      check: 'Boolean',\n      init: false\n    },\n    hideSecondsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n    sendOnFinish: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function () {\n      let transformValueTrue = function(value) {\n        return value === 'true';\n      };\n\n      return {\n        'src': {\n          'default': 'plugins/clock/clock_pure.svg'\n        },\n        'src_popup': {\n          target: 'srcPopup',\n          'default': ''\n        },\n        'title_popup': {\n          target: 'titlePopup',\n          'default': ''\n        },\n        'hide_24h': {\n          target: 'hide24h',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_24h_popup': {\n          target: 'hide24hPopup',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_am_pm': {\n          target: 'hideAMPM',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_am_pm_popup': {\n          target: 'hideAMPMPopup',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_digits': {\n          target: 'hideDigits',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_digits_popup': {\n          target: 'hideDigitsPopup',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_seconds': {\n          target: 'hideSeconds',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'hide_seconds_popup': {\n          target: 'hideSecondsPopup',\n          'default': false,\n          transform: transformValueTrue\n        },\n        'send_on_finish': {\n          target: 'sendOnFinish',\n          'default': false,\n          transform: transformValueTrue\n        }\n      };\n    },\n\n    getElements: function(svg, hide24h, hideAMPM, hideDigits, hideSeconds) {\n      let elements = {\n        hour24: svg.querySelector('#Hour24'),\n        hour: svg.querySelector('#Hour'),\n        minute: svg.querySelector('#Minute'),\n        second: svg.querySelector('#Second'),\n        am: svg.querySelector('#AM'),\n        pm: svg.querySelector('#PM'),\n        digits: svg.querySelector('#Digits')\n      };\n      let tspan;\n      while (elements.digits !== null && (tspan = elements.digits.querySelector('tspan')) !== null) {\n        elements.digits = tspan;\n      }\n      let hour24Group = svg.querySelector('#Hour24Group');\n\n      if (hide24h && hour24Group !== null) {\n        hour24Group.setAttribute('display', 'none');\n      }\n      if (hideAMPM) {\n        if (elements.am !== null) {\n          elements.am.setAttribute('display', 'none');\n          elements.am = null;\n        }\n        if (elements.pm !== null) {\n          elements.pm.setAttribute('display', 'none');\n          elements.pm = null;\n        }\n      }\n      if (hideDigits && elements.digits !== null) {\n        elements.digits.setAttribute('display', 'none');\n      }\n      if (hideSeconds && elements.second !== null) {\n        elements.second.setAttribute('display', 'none');\n      }\n\n      return elements;\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __svg: null, // cached access to the SVG in the DOM\n    __Elements: null, // cached access to the individual clock parts\n    __inDrag: 0, // is the handle currently dragged?\n    __timeToShow: null, // time to show on the clock\n    /**\n     *  to handle legacy mode, when a time string is used and not a `Date` object\n     */\n    __valueIsString: false,\n\n    _getInnerDomString: function () {\n      return '<div class=\"actor\" style=\"width:100%;height:100%\"></div>';\n    },\n\n    _onDomReady: function () {\n      this.base(arguments);\n\n      this.__throttled = cv.util.Function.throttle(this.dragAction, 250, {trailing: true}, this);\n\n      let uri = qx.util.ResourceManager.getInstance().toUri(this.getSrc());\n      let uriPopup = this.getSrcPopup();\n      let promises = [window.fetch(uri)];\n      if (uriPopup !== '') {\n        uriPopup = qx.util.ResourceManager.getInstance().toUri(uriPopup);\n        promises.push(window.fetch(uriPopup));\n      }\n      Promise.all(promises)\n        .then(responses => {\n          let result = [];\n          if (!responses[0].ok) {\n            throw new Error('Not 2xx response for URI \"' + uri + '\"');\n          } else {\n            result.push(responses[0].text());\n          }\n          if (uriPopup !== '') {\n            if (!responses[1].ok) {\n              throw new Error('Not 2xx response for popup URI \"' + uriPopup + '\"');\n            } else {\n              result.push(responses[1].text());\n            }\n          }\n          return Promise.all(result);\n        })\n        .then(texts => {\n          let actor = this.getActor();\n          actor.innerHTML = texts[0];\n          let svg = actor.firstElementChild;\n\n          // make sure that the SVG fits exactly to the available space\n          if (!svg.getAttribute('viewBox')) {\n            // fix SVGs that don't contain a viewBox\n            let width = svg.getAttribute('width') || 300;\n            let height = svg.getAttribute('height') || 150;\n            svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n          }\n          svg.setAttribute('width', '100%');\n          svg.setAttribute('height', '100%');\n          this.__Elements = [cv.plugins.Clock.getElements(svg, this.getHide24h(), this.getHideAMPM(), this.getHideDigits(), this.getHideSeconds())];\n\n          if (texts.length > 1) {\n            let popup = document.createElement('div');\n            let title = this.getTitlePopup();\n            popup.setAttribute('style', 'width:100%;height:100%;position:absolute;');\n            popup.innerHTML = texts[1];\n\n            svg.addEventListener('click', function() {\n              cv.ui.PopupHandler.showPopup('clock', {title: title, content: popup});\n            });\n            svg = popup.firstElementChild;\n\n           // make sure that also this SVG fits exactly to the available space\n            if (!svg.getAttribute('viewBox')) {\n              // fix SVGs that don't contain a viewBox\n              let width = svg.getAttribute('width') || 300;\n              let height = svg.getAttribute('height') || 150;\n              svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n            }\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('height', '100%');\n\n            this.__Elements.push(cv.plugins.Clock.getElements(svg, this.getHide24hPopup(), this.getHideAMPMPopup(), this.getHideDigitsPopup(), this.getHideSecondsPopup()));\n          }\n\n          svg.setAttribute('style', 'touch-action: none'); // prevent scroll interference\n\n          let HotSpotHour = svg.querySelector('#HotSpotHour');\n          if (HotSpotHour) {\n            HotSpotHour.addEventListener('pointerdown', this);\n          }\n          let HotSpotMinute = svg.querySelector('#HotSpotMinute');\n          if (HotSpotMinute) {\n            HotSpotMinute.addEventListener('pointerdown', this);\n          }\n          let HotSpotSecond = svg.querySelector('#HotSpotSecond');\n          if (HotSpotSecond) {\n            HotSpotSecond.addEventListener('pointerdown', this);\n          }\n          this.__svg = svg;\n\n          if (this.__timeToShow !== null) {\n            // did we receive a time earlier than the SVG? => Show it now\n            this._updateHands();\n          }\n        })\n        .catch(error => {\n          this.error('There has been a problem with the reading of the clock SVG:', error);\n        });\n    },\n\n    // overridden\n    initListeners: function () {},\n\n    // overridden\n    _update: function (address, data, isDataAlreadyHandled) {\n      let value = isDataAlreadyHandled ? data : this.defaultValueHandling(address, data);\n      if (value instanceof Date) {\n        this.__valueIsString = false;\n        this.__timeToShow = [value.getHours(), value.getMinutes(), value.getSeconds()];\n      } else {\n        this.__valueIsString = true;\n        this.__timeToShow = typeof value === 'string' ? value.split(':') : [0, 0, 0];\n        this.__timeToShow[0] = (this.__timeToShow[0]>=0 && this.__timeToShow[0]<=23) ? this.__timeToShow[0] : 0;\n        this.__timeToShow[1] = (this.__timeToShow[1]>=0 && this.__timeToShow[1]<=59) ? this.__timeToShow[1] : 0;\n        this.__timeToShow[2] = (this.__timeToShow[2]>=0 && this.__timeToShow[2]<=59) ? this.__timeToShow[2] : 0;\n        let date = new Date(); // assume today\n        date.setHours(this.__timeToShow[0], this.__timeToShow[1], this.__timeToShow[2], 0);\n        this.setValue(date);\n      }\n      this._updateHands();\n    },\n\n    handleEvent: function (event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n      \n      switch (event.type) {\n        case 'pointerdown':\n          switch (event.target.id) {\n            case 'HotSpotHour':\n              this.__inDrag = dragMode.hour;\n              break;\n\n            case 'HotSpotMinute':\n              this.__inDrag = dragMode.minute;\n              break;\n\n            case 'HotSpotSecond':\n              this.__inDrag = dragMode.second;\n              break;\n\n            default:\n              this.__inDrag = dragMode.none;\n              return; // early exit\n          }\n          document.addEventListener('pointermove', this);\n          document.addEventListener('pointerup', this);\n          event.preventDefault();\n          event.stopPropagation();\n          break;\n\n        case 'pointermove':\n          if (this.__inDrag === dragMode.none) {\n            return;\n          }\n          event.preventDefault();\n          event.stopPropagation();\n          if (event.buttons > 0) {\n            this.dragHelper(event);\n            break;\n          } // jshint ignore:line\n          // pass through to end drag when no buttons are pressed anymore\n\n        // eslint-disable-next-line no-fallthrough\n        case 'pointerup':\n        case 'pointercancel':\n          this.dragHelper(event);\n          this.__inDrag = dragMode.none;\n          document.removeEventListener('pointermove', this);\n          document.removeEventListener('pointerup', this);\n          break;\n      }\n\n      if (!this.getSendOnFinish() || event.type === 'pointerup') {\n        this.__throttled.call();\n      }\n    },\n\n    dragHelper: function (event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n\n      let CTM = this.__svg.getScreenCTM(); // get the Current Transformation Matrix\n      let x = (event.clientX - CTM.e) / CTM.a - 60;\n      let y = 60 - (event.clientY - CTM.f) / CTM.d;\n      let angle = (Math.atan2(x, y) * 180 / Math.PI + 360) % 360;\n\n      let time = this.getValue();\n      let minutes;\n      switch (this.__inDrag) {\n        case dragMode.hour: {\n          let oldHours = time.getHours();\n          let pm = oldHours >= 12;\n          let hours = Math.floor(angle / 30);\n          minutes = (angle % 30) * 2;\n\n          if (oldHours % 12 > 9 && hours < 3) {\n            if (pm) {\n              pm = false;\n              time.setDate(time.getDate() + 1);\n            } else {\n              pm = true;\n            }\n          } else if (hours > 9 && oldHours % 12 < 3) {\n            if (pm) {\n              pm = false;\n            } else {\n              pm = true;\n              time.setDate(time.getDate() - 1);\n            }\n          }\n\n          time.setHours(hours + pm * 12);\n          time.setMinutes(minutes);\n          break;\n        }\n\n        case dragMode.minute: {\n          if (this.getHideSeconds()) {\n            minutes = Math.round(angle / 6);\n          } else {\n            minutes = Math.floor(angle / 6);\n          }\n          let oldMinutes = time.getMinutes();\n\n          if (oldMinutes > 45 && minutes < 15) {\n            time.setHours(time.getHours() + 1);\n          } else if (minutes > 45 && oldMinutes < 15) {\n            time.setHours(time.getHours() - 1);\n          }\n          time.setMinutes(minutes);\n          time.setSeconds((angle % 6) * 10);\n          break;\n        }\n\n        case dragMode.second: {\n          let seconds = Math.round(angle / 6) % 60;\n          let oldSeconds = time.getSeconds();\n\n          if (oldSeconds > 45 && seconds < 15) {\n            time.setMinutes(time.getMinutes() + 1);\n          } else if (seconds > 45 && oldSeconds < 15) {\n            time.setMinutes(time.getMinutes() - 1);\n          }\n          time.setSeconds(seconds);\n          break;\n        }\n      }\n      if (this.getHideSeconds()) {\n        time.setSeconds(0);\n      }\n      this.__timeToShow = [time.getHours(), time.getMinutes(), time.getSeconds()];\n      this._updateHands();\n    },\n\n    dragAction: function () {\n      const value = this.__valueIsString\n        ? this.getValue().toTimeString().split(' ')[0]\n        : this.getValue();\n      this.__lastBusValue = this.sendToBackend(value, false, this.__lastBusValue);\n    },\n\n    _updateHands: function () {\n      const [hour, minute, second] = this.__timeToShow;\n      Array.isArray(this.__Elements) && this.__Elements.forEach(e => {\n        let showSeconds = true;\n        if (e.hour !== null) {\n          if (showSeconds) {\n            e.hour.setAttribute('transform', 'rotate(' + ((hour % 12) * 360 / 12 + minute * 30 / 60 + second * 30 / 60 / 60) + ',0,0)');\n          } else {\n            e.hour.setAttribute('transform', 'rotate(' + ((hour % 12) * 360 / 12 + minute * 30 / 60) + ',0,0)');\n          }\n        }\n        if (e.minute !== null) {\n          if (showSeconds) {\n            e.minute.setAttribute('transform', 'rotate(' + (minute * 6 + second * 6 / 60) + ',0,0)');\n          } else {\n            e.minute.setAttribute('transform', 'rotate(' + (minute * 6) + ',0,0)');\n          }\n        }\n        if (e.second !== null) {\n          e.second.setAttribute('transform', 'rotate(' + (second * 6) + ',0,0)');\n        }\n        if (e.hour24 !== null) {\n          e.hour24.setAttribute('transform', 'rotate(' + ((hour % 24) * 360 / 24 + minute * 15 / 60) + ',0,0)');\n        }\n        if (e.am !== null) {\n          e.am.setAttribute('display', hour < 12 ? '' : 'none');\n        }\n        if (e.pm !== null) {\n          e.pm.setAttribute('display', hour < 12 ? 'none' : '');\n        }\n        if (e.digits !== null) {\n          if (this.getHideSeconds()) {\n            e.digits.textContent = sprintf('%02d:%02d', hour, minute);\n          } else {\n            e.digits.textContent = sprintf('%02d:%02d:%02d', hour, minute, second);\n          }\n        }\n      });\n    }\n  },\n\n  defer: function(statics) {\n    cv.parser.WidgetParser.addHandler('clock', cv.plugins.Clock);\n    cv.ui.structure.WidgetFactory.registerClass('clock', statics);\n  }\n});\n"]}