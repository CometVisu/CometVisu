{"version":3,"names":["qx","Class","define","extend","core","Object","type","construct","constructor","call","this","prototype","hasOwnProperty","cv","Config","request","queryKey","__P_23_0","notifications","Router","getInstance","client","io","BackendConnections","getClientByType","sse","getCurrentTransport","subscribe","_onNotification","TemplateEngine","executeWhenDomFinished","_createSettings","members","__P_23_1","_openSettings","_this","settingsRoot","dom","Element","create","id","html","insertAfter","document","querySelector","ui","NotificationCenter","getRootElementId","button","util","IconTools","svgKUF","style","command","Command","addListener","show","getCommands","add","insertBegin","event","Registration","theme","manager","Meta","setTheme","Dark","_inline","setLayout","layout","VBox","plugins","openhab","Settings","exclude","flex","e","data","error","json","_typeof","JSON","parse","dispatchMessage","topic","destruct","_disposeObjects","defer","statics","Timer","once","Openhab","$$dbClassInfo","Bootstrap","executePendingDefers","Widget","_setLayout","set","padding","backgroundColor","textColor","getBounds","getContentElement","setStyle","addListenerOnce","__P_24_0","__P_24_1","_initConfigRestClient","properties","modified","check","init","__P_24_2","__P_24_3","__P_24_4","__P_24_5","_store","__P_24_6","_initStore","pid","_this2","serviceDesc","get","method","url","delete","put","service","rest","Resource","store","Rest","configureRequest","req","setRequestHeader","authorize","manipulateData","n","getOwnPropertyNames","forEach","key","replace","autoDownload","Serializer","toJson","getModel","_saveConfig","close","_this3","description","config","ev","_createForm","getRequest","getResponse","Array","isArray","parameters","_createChildControl","form","getChildControl","param","field","TextField","defaultValue","setPlaceholder","CheckBox","setValue","readOnly","setReadOnly","required","setRequired","setToolTipText","_onFormFieldChange","label","name","renderer","Single","guessIfProxied","setBottomText","tr","textAlign","font","addButton","_addAt","controller","Form","bind","setModified","items","getItems","some","getValue","debug","_createChildControlImpl","hash","control","basic","Label","marginBottom","allowGrowX","decorator","Button","locale","Manager","superclass","setVisibility","AbstractRenderer","bottomText","nullable","apply","_applyBottomText","value","container","Composite","getBottomText","rich","wrap","hbox","HBox","setAlignX","setSpacing","addItems","names","title","_createHeader","i","length","_createLabel","item","setBuddy","box","width","_connectVisibility","_names","push","getLayout","_getLayout","_createLabelText","_labels","setRich","setAppearance","header","setFont","_row","setMarginTop"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/Openhab.js","/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/Settings.js","/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/renderer/Single.js"],"sourcesContent":["/* Openhab.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This Plugin provides some specials to improve the integration with openHAB backend.\n *\n * .. NOTE::\n *\n *    This plugin gets automatically activated if the openHAB2 backend is used.\n *    There is no need to add it to the ``plugins`` section of the ``visu_config.xml``.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n *\n * @require(qx.ui.root.Inline)\n */\nqx.Class.define('cv.plugins.openhab.Openhab', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  *****************************************************************************\n    CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct() {\n    super();\n    if (!Object.prototype.hasOwnProperty.call(cv.Config.request.queryKey, 'preview')) {\n      this.__notificationRouter = cv.core.notifications.Router.getInstance();\n\n      // listen to notifications\n      const client = cv.io.BackendConnections.getClientByType('openhab');\n      if (client) {\n        const sse = client.getCurrentTransport && client.getCurrentTransport();\n        if (sse) {\n          sse.subscribe('notifications', this._onNotification, this);\n        }\n        cv.TemplateEngine.getInstance().executeWhenDomFinished(this._createSettings, this);\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __notificationRouter: null,\n    __settings: null,\n    _openSettings: null,\n\n    _createSettings() {\n      // add element structure to notification-center\n      const settingsRoot = qx.dom.Element.create('section', {\n        id: 'qxsettings',\n        html: '<div></div>'\n      });\n\n      qx.dom.Element.insertAfter(\n        settingsRoot,\n        document.querySelector('#' + cv.ui.NotificationCenter.getInstance().getRootElementId() + ' section.messages')\n      );\n\n      // add a settings button to trigger opening the settings\n      const button = qx.dom.Element.create('div', {\n        html: cv.util.IconTools.svgKUF('edit_settings')(null, 'width: 22px; height: 22px;', '', true),\n\n        style: 'float: left;'\n      });\n\n      this._openSettings = new qx.ui.command.Command('Ctrl+S');\n      this._openSettings.addListener('execute', () => {\n        cv.ui.NotificationCenter.getInstance().show();\n        this.__settings.show();\n      });\n      cv.TemplateEngine.getInstance().getCommands().add('open-settings', this._openSettings);\n      qx.dom.Element.insertBegin(button, document.querySelector('#notification-center footer'));\n\n      qx.event.Registration.addListener(\n        button,\n        'tap',\n        function () {\n          this.__settings.show();\n        },\n        this\n      );\n\n      //add to DOM\n      qx.theme.manager.Meta.getInstance().setTheme(cv.theme.Dark);\n\n      // Initialize tooltip manager (currently disable as it requires a root with basic layout\n      // and that breaks the inline container sizes)\n      // qx.ui.tooltip.Manager.getInstance();\n\n      this._inline = new qx.ui.root.Inline(document.querySelector('#qxsettings > div'), true, false);\n\n      this._inline.setLayout(new qx.ui.layout.VBox());\n      this.__settings = new cv.plugins.openhab.Settings();\n      this.__settings.exclude();\n      this._inline.add(this.__settings, { flex: 1 });\n    },\n\n    /**\n     * Handles notification messages from backend\n     * @param e {Event}\n     * @protected\n     */\n    _onNotification(e) {\n      if (!e.data) {\n        this.error('invalid content received from SSE: ', e);\n      }\n      const json = typeof e.data === 'object' ? e.data : JSON.parse(e.data);\n      this.__notificationRouter.dispatchMessage(json.topic || 'cv.backend', json);\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this._disposeObjects('__settings', '_openSettings');\n    this.__notificationRouter = null;\n  },\n\n  defer(statics) {\n    // initialize on load but delay the call\n    qx.event.Timer.once(statics.getInstance, statics, 1000);\n  }\n});\n","/* Settings.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Show and edit openHAB CometVisu backends settings via openHAB api.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n *\n */\nqx.Class.define('cv.plugins.openhab.Settings', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  *****************************************************************************\n    CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct() {\n    super();\n    this._setLayout(new qx.ui.layout.VBox());\n    this.set({\n      padding: 10,\n      backgroundColor: 'rgba(216, 216, 216, 1.0)',\n      textColor: 'rgb(61, 61, 61)'\n    });\n\n    // override text-shadow setting\n    if (!this.getBounds()) {\n      this.addListenerOnce('appear', () => {\n        this.getContentElement().setStyle('text-shadow', 'none');\n      });\n    } else {\n      this.getContentElement().setStyle('text-shadow', 'none');\n    }\n\n    this.__servicePid = 'org.openhab.cometvisu';\n    this.__uri = 'ui:cometvisu';\n\n    this._initConfigRestClient();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __servicePid: null,\n    __uri: null,\n    __configDescriptionResource: null,\n    __service: null,\n    __configDescription: null,\n    __inDom: false,\n    _store: null,\n    __initialValues: null,\n\n    _initStore(pid) {\n      const serviceDesc = {\n        get: { method: 'GET', url: '/rest/services/' + pid + '/config' },\n        delete: { method: 'DELETE', url: '/rest/services/' + pid + '/config' },\n        put: { method: 'PUT', url: '/rest/services/' + pid + '/config' }\n      };\n\n      const service = (this.__service = new qx.io.rest.Resource(serviceDesc));\n      const client = cv.io.BackendConnections.getClientByType('openhab');\n\n      this._store = new qx.data.store.Rest(service, 'get', {\n        configureRequest(req) {\n          req.setRequestHeader('Content-Type', 'application/json');\n          if (client instanceof cv.io.openhab.Rest) {\n            client.authorize(req);\n          }\n        },\n        manipulateData(data) {\n          // normalize the keys (replace .> with _) for the marshaller\n          const n = {};\n          Object.getOwnPropertyNames(data).forEach(function (key) {\n            n[key.replace(/[\\.>]/g, '_')] = data[key];\n          });\n          if (!Object.prototype.hasOwnProperty.call(n, 'autoDownload')) {\n            n.autoDownload = false;\n          }\n          return n;\n        }\n      });\n\n      // load data\n      service.get();\n      this._store.addListenerOnce('changeModel', () => {\n        this.__initialValues = JSON.parse(qx.util.Serializer.toJson(this._store.getModel()));\n      });\n    },\n\n    _saveConfig() {\n      let data = qx.util.Serializer.toJson(this._store.getModel());\n      data = data.replace(/icons_mapping_/g, 'icons.mapping>');\n      data = JSON.parse(data.replace('icons_enableMapping', 'icons>enableMapping'));\n\n      this.__service.put(null, data);\n      this.__service.addListenerOnce('putSuccess', this.close, this);\n    },\n\n    _initConfigRestClient() {\n      const description = {\n        get: { method: 'GET', url: '/rest/config-descriptions/' + this.__uri }\n      };\n\n      const config = (this.__configDescriptionResource = new qx.io.rest.Resource(description));\n      const client = cv.io.BackendConnections.getClientByType('openhab');\n\n      config.addListener('getSuccess', ev => {\n        this._createForm(ev.getRequest().getResponse());\n      });\n      config.configureRequest(function (req) {\n        req.setRequestHeader('Content-Type', 'application/json');\n        if (client instanceof cv.io.openhab.Rest) {\n          client.authorize(req);\n        }\n      });\n      config.get();\n\n      this._initStore(this.__servicePid);\n    },\n\n    _createForm(config) {\n      if (config && Object.prototype.hasOwnProperty.call(config, 'parameters') && Array.isArray(config.parameters)) {\n        this._createChildControl('title');\n        const form = this.getChildControl('form');\n        config.parameters.forEach(function (param) {\n          let field;\n          switch (param.type) {\n            case 'TEXT':\n              field = new qx.ui.form.TextField();\n              if (param.defaultValue) {\n                field.setPlaceholder(param.defaultValue);\n              }\n              break;\n            case 'BOOLEAN':\n              field = new qx.ui.form.CheckBox();\n              field.setValue(param.defaultValue === 'true');\n              break;\n          }\n\n          if (param.readOnly) {\n            field.setReadOnly(true);\n          }\n          if (param.required) {\n            field.setRequired(true);\n          }\n          field.setToolTipText(param.description);\n          field.addListener('changeValue', this._onFormFieldChange, this);\n          form.add(field, param.label, null, param.name, null, param);\n        }, this);\n\n        const renderer = new cv.plugins.openhab.renderer.Single(form);\n        if (cv.Config.guessIfProxied()) {\n          renderer.setBottomText(\n            this.tr(\n              'The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing.'\n            )\n          );\n\n          renderer.getChildControl('bottom-text').set({\n            padding: 10,\n            textAlign: 'center',\n            font: 'bold'\n          });\n        }\n        renderer.addButton(this.getChildControl('cancel-button'));\n        renderer.addButton(this.getChildControl('save-button'));\n\n        this._addAt(renderer, 1);\n        const controller = new qx.data.controller.Form(null, form);\n\n        this._store.bind('model', controller, 'model');\n\n        this.setModified(false);\n      }\n    },\n\n    _onFormFieldChange() {\n      let modified = false;\n      const items = this.getChildControl('form').getItems();\n      Object.getOwnPropertyNames(items).some(function (name) {\n        // noinspection EqualityComparisonWithCoercionJS\n        if (this.__initialValues[name] != items[name].getValue()) {\n          this.debug(name + ' has changed from ' + this.__initialValues[name] + ' to ' + items[name].getValue());\n\n          modified = true;\n          return true;\n        }\n        return false;\n      }, this);\n      this.setModified(modified);\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      let control;\n      switch (id) {\n        case 'title':\n          control = new qx.ui.basic.Label(this.tr('openHAB backend settings'));\n          control.set({\n            font: 'bold',\n            marginBottom: 5,\n            allowGrowX: true,\n            decorator: 'window-caption'\n          });\n\n          this._addAt(control, 0);\n          break;\n\n        case 'form':\n          control = new qx.ui.form.Form();\n          break;\n\n        case 'cancel-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Cancel'));\n          control.addListener('execute', this.close, this);\n          break;\n\n        case 'save-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Save'));\n          control.addListener('execute', this._saveConfig, this);\n          this.bind('modified', control, 'enabled');\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    close() {\n      this.setVisibility('excluded');\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this._disposeObjects('__configDescriptionResource', '__service', '__root', '_store', '_window');\n  }\n});\n","/* Single.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * {@link qx.ui.form.renderer.Single} with right column flexed.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n */\n\nqx.Class.define('cv.plugins.openhab.renderer.Single', {\n  extend: qx.ui.form.renderer.AbstractRenderer,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct(form) {\n    const layout = new qx.ui.layout.VBox(6);\n    this._setLayout(layout);\n\n    super(form);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    bottomText: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyBottomText'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    // property apply\n    _applyBottomText(value) {\n      const control = this.getChildControl('bottom-text');\n      if (value) {\n        control.setValue(value);\n        control.show();\n      } else {\n        control.exclude();\n      }\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      let control;\n      switch (id) {\n        case 'content':\n          control = new qx.ui.container.Composite(new qx.ui.layout.VBox(8));\n          this._addAt(control, 1);\n          break;\n\n        case 'bottom-text':\n          control = new qx.ui.basic.Label(this.getBottomText());\n          control.set({\n            rich: true,\n            wrap: true\n          });\n\n          this._addAt(control, 2);\n          if (this.getBottomText()) {\n            control.show();\n          } else {\n            control.exclude();\n          }\n          break;\n\n        case 'button-container': {\n          const hbox = new qx.ui.layout.HBox();\n          hbox.setAlignX('right');\n          hbox.setSpacing(5);\n          control = new qx.ui.container.Composite(hbox);\n          this._addAt(control, 3);\n          break;\n        }\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    /**\n     * Add a group of form items with the corresponding names. The names are\n     * displayed as label.\n     * The title is optional and is used as grouping for the given form\n     * items.\n     *\n     * @param items {qx.ui.core.Widget[]} An array of form items to render.\n     * @param names {String[]} An array of names for the form items.\n     * @param title {String?} A title of the group you are adding.\n     */\n    addItems(items, names, title) {\n      // add the header\n      if (title !== null) {\n        this.getChildControl('content').add(this._createHeader(title));\n      }\n\n      const container = this.getChildControl('content');\n\n      // add the items\n      for (let i = 0; i < items.length; i++) {\n        const label = this._createLabel(names[i], items[i]);\n        const item = items[i];\n        label.setBuddy(item);\n\n        if (item instanceof qx.ui.form.CheckBox) {\n          // label + checkbox in one line\n          const box = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n          box.add(label, { width: '50%' });\n          box.add(item, { width: '50%' });\n          container.add(box);\n        } else {\n          container.add(label);\n          container.add(item);\n        }\n\n        this._connectVisibility(item, label);\n\n        // store the names for translation\n        if (qx.core.Environment.get('qx.dynlocale')) {\n          this._names.push({ name: names[i], label: label, item: items[i] });\n        }\n      }\n    },\n\n    /**\n     * Adds a button to the form renderer. All buttons will be added in a\n     * single row at the bottom of the form.\n     *\n     * @param button {qx.ui.form.Button} The button to add.\n     */\n    addButton(button) {\n      // add the button\n      this.getChildControl('button-container').add(button);\n    },\n\n    /**\n     * Returns the set layout for configuration.\n     *\n     * @return {qx.ui.layout.Grid} The grid layout of the widget.\n     */\n    getLayout() {\n      return this._getLayout();\n    },\n\n    /**\n     * Creates a label for the given form item.\n     *\n     * @param name {String} The content of the label without the\n     *   trailing * and :\n     * @param item {qx.ui.core.Widget} The item, which has the required state.\n     * @return {qx.ui.basic.Label} The label for the given item.\n     */\n    _createLabel(name, item) {\n      const label = new qx.ui.basic.Label(this._createLabelText(name, item));\n      // store labels for disposal\n      this._labels.push(label);\n      label.setRich(true);\n      label.setAppearance('form-renderer-label');\n      return label;\n    },\n\n    /**\n     * Creates a header label for the form groups.\n     *\n     * @param title {String} Creates a header label.\n     * @return {qx.ui.basic.Label} The header for the form groups.\n     */\n    _createHeader(title) {\n      const header = new qx.ui.basic.Label(title);\n      // store labels for disposal\n      this._labels.push(header);\n      header.setFont('bold');\n      if (this._row != 0) {\n        header.setMarginTop(10);\n      }\n      header.setAlignX('left');\n      return header;\n    }\n  }\n});\n"],"mappings":"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","ignoreList":[]}