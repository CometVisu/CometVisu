{"version":3,"names":["qx","Class","define","extend","core","Object","include","cv","ui","common","Update","construct","props","this","_initOnCreate","constructor","call","set","__P_16_0","statics","parse","element","path","window","speechSynthesis","log","Logger","warn","address","parser","pure","WidgetParser","makeAddressList","data","Model","getInstance","setWidgetData","language","getAttribute","toLowerCase","mapping","repeatTimeout","parseInt","$$type","$$initOnCacheLoad","properties","check","init","parentWidget","members","getDomString","_processIncomingValue","value","applyTransform","applyMapping","handleUpdate","text","io","BackendConnections","getClient","getDataReceived","length","substring","getRepeatTimeout","Math","round","Date","now","time","debug","notifications","SpeechHandler","say","getLanguage","defer","addHandler","plugins","Speech","structure","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Speech.js"],"sourcesContent":["/* Speech.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Use the Web Speech API (https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API)\n * to make text-to-speech service available. This plugin listens to a address and forwards the\n * incoming data to the browser TTS engine (if the browser supports it)\n *\n * <h4>Simple example</h4>\n * <pre class=\"sunlight-highlight-xml\">\n * &lt;speech lang=&quot;en&quot;&gt;\n *  &lt;address transform=&quot;OH:string&quot; mode=&quot;read&quot;&gt;Speak&lt;/address&gt;\n * &lt;/speech&gt;\n * </pre>\n *\n * <h4>Example preventing repetition within a timeout and use mapping</h4>\n * <pre class=\"sunlight-highlight-xml\">\n * ...\n * &lt;meta&gt;\n *  &lt;plugins&gt;\n *    &lt;plugin name=&quot;speech&quot; /&gt;\n *  &lt;/plugins&gt;\n *  &lt;mappings&gt;\n *    &lt;mapping name=&quot;speak&quot;&gt;\n *      &lt;entry value=&quot;0&quot;&gt;Hello, welcome home&lt;/entry&gt;\n *      &lt;entry value=&quot;1&quot;&gt;Please close all windows&lt;/entry&gt;\n *      &lt;entry value=&quot;2&quot;&gt;Please close all doors&lt;/entry&gt;\n *    &lt;/mapping&gt;\n *  &lt;/mappings&gt;\n * &lt;/meta&gt;\n * ...\n * &lt;speech lang=&quot;en&quot; repeat-timout=&quot;300&quot; mapping=&quot;speak&quot;&gt;\n *  &lt;address transform=&quot;DPT:5.010&quot; mode=&quot;read&quot;&gt;Speak&lt;/address&gt;\n * &lt;/speech&gt;\n * </pre>\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.10.0\n *\n */\nqx.Class.define('cv.plugins.Speech', {\n  extend: qx.core.Object,\n  include: cv.ui.common.Update,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct(props) {\n    this._initOnCreate = true;\n    super();\n    this.set(props);\n    this.__lastSpeech = {};\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    parse(element, path) {\n      if (!window.speechSynthesis) {\n        qx.log.Logger.warn(this, 'this browser does not support the Web Speech API');\n\n        return null;\n      }\n\n      const address = cv.parser.pure.WidgetParser.makeAddressList(element, path);\n\n      return cv.data.Model.getInstance().setWidgetData(path, {\n        path: path,\n        language: element.getAttribute('lang') ? element.getAttribute('lang').toLowerCase() : '',\n        address: address,\n        mapping: element.getAttribute('mapping') || '',\n        repeatTimeout: element.getAttribute('repeat-timeout') ? parseInt(element.getAttribute('repeat-timeout')) : -1,\n        $$type: 'speech',\n        // this widget needs to be initialized when the cache is used, otherwise it wont be available\n        $$initOnCacheLoad: true\n      });\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    path: { check: 'String' },\n    $$type: { check: 'String' },\n    $$initOnCacheLoad: { check: 'Boolean' },\n    language: { check: 'String' },\n    mapping: { check: 'String', init: '' },\n    repeatTimeout: { check: 'Number', init: -1 },\n    parentWidget: {\n      check: 'cv.ui.structure.pure.AbstractBasicWidget',\n      init: null\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    __lastSpeech: null,\n\n    getDomString() {\n      return undefined;\n    },\n\n    _processIncomingValue(address, data) {\n      // #1: transform the raw value to a JavaScript type\n      const value = this.applyTransform(address, data);\n\n      // #2: map it to a value the user wants to see\n      return this.applyMapping(value);\n    },\n\n    handleUpdate(text, address) {\n      if (!cv.io.BackendConnections.getClient().getDataReceived()) {\n        // first call -> skipping\n        this.__lastSpeech[address] = {\n          text: text,\n          time: Date.now()\n        };\n\n        this.debug('skipping initial TTS for ' + text);\n        return;\n      }\n\n      if (!text || text.length === 0) {\n        // nothing to say\n        this.debug('no text to speech given');\n        return;\n      }\n\n      if (typeof text === 'string' && text.substring(0, 1) === '!') {\n        // override repeatTimeout, force saying this\n        text = text.substring(1);\n      } else if (this.getRepeatTimeout() >= 0) {\n        // do not repeat (within timeout when this.repeatTimeout > 0)\n        if (\n          this.__lastSpeech[address] &&\n          this.__lastSpeech[address].text === text &&\n          (this.getRepeatTimeout() === 0 ||\n            this.getRepeatTimeout() >= Math.round((Date.now() - this.__lastSpeech[address].time) / 1000))\n        ) {\n          // update time\n          this.__lastSpeech[address].time = Date.now();\n          // do not repeat\n          this.debug('skipping TTS because of repetition ' + text);\n          return;\n        }\n      }\n      this.debug(\n        'changing lastSpeech from \\'%s\\' to \\'%s\\'',\n        this.__lastSpeech[address] ? this.__lastSpeech[address].text : '',\n        text\n      );\n\n      this.__lastSpeech[address] = {\n        text: text,\n        time: Date.now()\n      };\n\n      cv.core.notifications.SpeechHandler.getInstance().say(text, this.getLanguage());\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('speech', cv.plugins.Speech);\n    cv.ui.structure.WidgetFactory.registerClass('speech', statics);\n  }\n});\n"],"mappings":"wbAuDCA,GAAAC,MAAAC,OAAA,qBACCC,OAAOH,GAAAI,KAAOC,OACdC,QAAQC,GAAGC,GAAIC,OAAOC,OAOvBC,UAAA,SAAAC,GACCC,KAAAC,eAAA,EACEd,GAAAI,KAAKC,OAAAU,YAAoBC,KAAAH,MACzBA,KAAAI,IAAAL,GACAC,KAAKK,SAAU,E,EAQlBC,QAAA,CACCC,MAAS,SAAAC,EAAAC,GACP,IAAKC,OAAAC,gBAAU,CACbxB,GAAKyB,IAAAC,OAAOC,KAAAd,KAAe,oDACzB,OAAO,I,CAGT,IAAAe,EAAArB,GAAAsB,OAAAC,KAAAC,aAAAC,gBAAAX,EAAAC,GAEA,OAAMf,GAAA0B,KAAUC,MAAGC,cAAYC,cAAad,EAAA,CAE5CA,KAAOA,EACLe,SAAUhB,EAAAiB,aAAA,QAAAjB,EAAAiB,aAAA,QAAAC,cAAA,GACVX,QAAQA,EACRY,QAASnB,EAAOiB,aAAA,eAChBG,cAASpB,EAAQiB,aAAa,kBAAgBI,SAAArB,EAAAiB,aAAA,sBAC9CK,OAAA,SAEAC,mBAAA,G,GAUPC,WAAA,CACCvB,KAAA,CACEwB,MAAM,UAAkBH,OAAC,CACzBG,MAAQ,UAAkBF,kBAAC,CAC3BE,MAAA,WAAsCT,SAAC,CACvCS,MAAQ,UAAoBN,QAAC,CAC7BM,MAAS,SAAEC,KAAK,IAAqBN,cAAC,CACtCK,MAAA,SAAiBC,MAAO,GAAmBC,aAAC,CAC5CF,MAAA,2CACEC,KAAK,OASVE,QAAA,CACC/B,SAAS,KACPgC,aAAkB,W,EAIlBC,sBAAC,SAAAvB,EAAAK,GAGC,IAAAmB,EAAAvC,KAAAwC,eAAAzB,EAAAK,GAGA,OAAApB,KAAAyC,aAAAF,E,EAEFG,aAAC,SAAAC,EAAA5B,GAED,GAAArB,GAAAkD,GAAYC,mBAAZC,YAAmBC,kBAUjB,GAAAJ,GAAA,IAAAA,EAAAK,OAAA,CAMA,oBAAAL,GAAA,MAAAA,EAAAM,UAAA,KAGEN,IAAAM,UAAA,QACI,GAAGjD,KAAKkD,oBAAY,GAExBlD,KAAAK,SAAAU,IAAAf,KAAAK,SAAAU,GAAA4B,WAAA,IAAA3C,KAAAkD,oBAAAlD,KAAAkD,oBAAAC,KAAAC,OAAAC,KAAAC,MAAAtD,KAAAK,SAAAU,GAAAwC,MAAA,OAOEvD,KAAAK,SAAAU,GAAAwC,KAAAF,KAAAC,MAEAtD,KAAAwD,MAAA,sCAAAb,GACA,M,CAGJ3C,KAAAwD,MAAA,wCAAAxD,KAAAK,SAAAU,GAAAf,KAAAK,SAAAU,GAAA4B,KAAA,GAAAA,GACA3C,KAAKK,SACHU,GAAA,CAKF4B,KAAKA,EACHY,KAAMF,KAAIC,OAEZ5D,GAACH,KAAAkE,cAAAC,cAAApC,cAAAqC,IAAAhB,EAAA3C,KAAA4D,c,MAhCC5D,KAAAwD,MAAA,+BAbJ,CAEIxD,KAAAK,SAAAU,GAAA,CACA4B,KAAKA,EACHY,KAAMF,KAAIC,OAEZtD,KAACwD,MAAA,4BAAAb,E,IA2CPkB,MAAC,SAAAvD,GAGCZ,GAAAsB,OAAAC,KAAAC,aAAA4C,WAAA,SAAApE,GAAAqE,QAAAC,QACAtE,GAAGC,GAAAsE,UAAYC,cAAaC,cAAW,SAAa7D,E,IAGvDZ,GAACqE,QAAAC,OAAAI,e","ignoreList":[]}