{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Update","Operate","construct","props","value","Date","setHours","this","__P_10_0","__P_10_1","constructor","call","properties","src","check","srcPopup","titlePopup","hide24h","init","hide24hPopup","hideAMPM","hideAMPMPopup","hideDigits","hideDigitsPopup","hideSeconds","hideSecondsPopup","sendOnFinish","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseFormat","parseAddress","transformValueTrue","default","src_popup","target","title_popup","hide_24h","transform","hide_24h_popup","hide_am_pm","hide_am_pm_popup","hide_digits","hide_digits_popup","hide_seconds","hide_seconds_popup","send_on_finish","getElements","svg","tspan","elements","hour24","querySelector","hour","minute","second","am","pm","digits","hour24Group","setAttribute","members","__P_10_2","__P_10_3","__P_10_4","_getInnerDomString","_onDomReady","_this","plugins","Clock","superclass","prototype","__P_10_5","util","Function","throttle","dragAction","trailing","uri","ResourceManager","getInstance","toUri","getSrc","uriPopup","getSrcPopup","promises","window","fetch","push","Promise","all","then","responses","result","ok","Error","text","texts","actor","getActor","innerHTML","firstElementChild","getAttribute","width","height","getHide24h","getHideAMPM","getHideDigits","getHideSeconds","length","popup","document","createElement","title","getTitlePopup","addEventListener","PopupHandler","showPopup","content","_width","_height","getHide24hPopup","getHideAMPMPopup","getHideDigitsPopup","getHideSecondsPopup","HotSpotHour","HotSpotMinute","HotSpotSecond","_updateHands","error","initListeners","_update","address","isDataAlreadyHandled","applyTransform","getHours","getMinutes","getSeconds","setValue","split","date","handleEvent","event","dragMode","type","id","preventDefault","stopPropagation","buttons","dragHelper","removeEventListener","getSendOnFinish","minutes","CTM","getScreenCTM","x","clientX","e","a","y","clientY","f","d","angle","Math","atan2","PI","time","getValue","oldHours","hours","floor","setDate","getDate","setMinutes","round","oldMinutes","setSeconds","seconds","oldSeconds","toTimeString","__P_10_6","sendToBackend","_this2","_this$__P_10_","_slicedToArray","isArray","forEach","textContent","sprintf","defer","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Clock.js"],"sourcesContent":["/* Clock.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @asset(plugins/clock/*)\n */\nqx.Class.define('cv.plugins.Clock', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Update, cv.ui.common.Operate],\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(props) {\n    props.value = new Date();\n    props.value.setHours(0, 0, 0, 0);\n    this.__timeToShow = [0, 0, 0];\n    this.__Elements = [];\n    super(props);\n  },\n\n  /*\n  ******************************************************\n  PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: 'String'\n    },\n\n    srcPopup: {\n      check: 'String'\n    },\n\n    titlePopup: {\n      check: 'String'\n    },\n\n    hide24h: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hide24hPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideAMPM: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideAMPMPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideDigits: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideDigitsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideSeconds: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideSecondsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    sendOnFinish: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      let transformValueTrue = function (value) {\n        return value === 'true';\n      };\n\n      return {\n        src: {\n          default: 'plugins/clock/clock_pure.svg'\n        },\n\n        src_popup: {\n          target: 'srcPopup',\n          default: ''\n        },\n\n        title_popup: {\n          target: 'titlePopup',\n          default: ''\n        },\n\n        hide_24h: {\n          target: 'hide24h',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_24h_popup: {\n          target: 'hide24hPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_am_pm: {\n          target: 'hideAMPM',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_am_pm_popup: {\n          target: 'hideAMPMPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_digits: {\n          target: 'hideDigits',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_digits_popup: {\n          target: 'hideDigitsPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_seconds: {\n          target: 'hideSeconds',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_seconds_popup: {\n          target: 'hideSecondsPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        send_on_finish: {\n          target: 'sendOnFinish',\n          default: false,\n          transform: transformValueTrue\n        }\n      };\n    },\n\n    getElements(svg, hide24h, hideAMPM, hideDigits, hideSeconds) {\n      let elements = {\n        hour24: svg.querySelector('#Hour24'),\n        hour: svg.querySelector('#Hour'),\n        minute: svg.querySelector('#Minute'),\n        second: svg.querySelector('#Second'),\n        am: svg.querySelector('#AM'),\n        pm: svg.querySelector('#PM'),\n        digits: svg.querySelector('#Digits')\n      };\n\n      let tspan;\n      while (elements.digits !== null && (tspan = elements.digits.querySelector('tspan')) !== null) {\n        elements.digits = tspan;\n      }\n      let hour24Group = svg.querySelector('#Hour24Group');\n\n      if (hide24h && hour24Group !== null) {\n        hour24Group.setAttribute('display', 'none');\n      }\n      if (hideAMPM) {\n        if (elements.am !== null) {\n          elements.am.setAttribute('display', 'none');\n          elements.am = null;\n        }\n        if (elements.pm !== null) {\n          elements.pm.setAttribute('display', 'none');\n          elements.pm = null;\n        }\n      }\n      if (hideDigits && elements.digits !== null) {\n        elements.digits.setAttribute('display', 'none');\n      }\n      if (hideSeconds && elements.second !== null) {\n        elements.second.setAttribute('display', 'none');\n      }\n\n      return elements;\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __svg: null, // cached access to the SVG in the DOM\n    __Elements: null, // cached access to the individual clock parts\n    __inDrag: 0, // is the handle currently dragged?\n    __timeToShow: null, // time to show on the clock\n    /**\n     *  to handle legacy mode, when a time string is used and not a `Date` object\n     */\n    __valueIsString: false,\n\n    _getInnerDomString() {\n      return '<div class=\"actor\" style=\"width:100%;height:100%\"></div>';\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n\n      this.__throttled = cv.util.Function.throttle(this.dragAction, 250, { trailing: true }, this);\n\n      let uri = qx.util.ResourceManager.getInstance().toUri(this.getSrc());\n      let uriPopup = this.getSrcPopup();\n      let promises = [window.fetch(uri)];\n      if (uriPopup !== '') {\n        uriPopup = qx.util.ResourceManager.getInstance().toUri(uriPopup);\n        promises.push(window.fetch(uriPopup));\n      }\n      Promise.all(promises)\n        .then(responses => {\n          let result = [];\n          if (!responses[0].ok) {\n            throw new Error('Not 2xx response for URI \"' + uri + '\"');\n          } else {\n            result.push(responses[0].text());\n          }\n          if (uriPopup !== '') {\n            if (!responses[1].ok) {\n              throw new Error('Not 2xx response for popup URI \"' + uriPopup + '\"');\n            } else {\n              result.push(responses[1].text());\n            }\n          }\n          return Promise.all(result);\n        })\n        .then(texts => {\n          let actor = this.getActor();\n          actor.innerHTML = texts[0];\n          let svg = actor.firstElementChild;\n\n          // make sure that the SVG fits exactly to the available space\n          if (!svg.getAttribute('viewBox')) {\n            // fix SVGs that don't contain a viewBox\n            let width = svg.getAttribute('width') || 300;\n            let height = svg.getAttribute('height') || 150;\n            svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n          }\n          svg.setAttribute('width', '100%');\n          svg.setAttribute('height', '100%');\n          this.__Elements = [\n            cv.plugins.Clock.getElements(\n              svg,\n              this.getHide24h(),\n              this.getHideAMPM(),\n              this.getHideDigits(),\n              this.getHideSeconds()\n            )\n          ];\n\n          if (texts.length > 1) {\n            let popup = document.createElement('div');\n            let title = this.getTitlePopup();\n            popup.setAttribute('style', 'width:100%;height:100%;position:absolute;');\n\n            popup.innerHTML = texts[1];\n\n            svg.addEventListener('click', function () {\n              cv.ui.PopupHandler.showPopup('clock', {\n                title: title,\n                content: popup\n              });\n            });\n            svg = popup.firstElementChild;\n\n            // make sure that also this SVG fits exactly to the available space\n            if (!svg.getAttribute('viewBox')) {\n              // fix SVGs that don't contain a viewBox\n              let width = svg.getAttribute('width') || 300;\n              let height = svg.getAttribute('height') || 150;\n              svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n            }\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('height', '100%');\n\n            this.__Elements.push(\n              cv.plugins.Clock.getElements(\n                svg,\n                this.getHide24hPopup(),\n                this.getHideAMPMPopup(),\n                this.getHideDigitsPopup(),\n                this.getHideSecondsPopup()\n              )\n            );\n          }\n\n          svg.setAttribute('style', 'touch-action: none'); // prevent scroll interference\n\n          let HotSpotHour = svg.querySelector('#HotSpotHour');\n          if (HotSpotHour) {\n            HotSpotHour.addEventListener('pointerdown', this);\n          }\n          let HotSpotMinute = svg.querySelector('#HotSpotMinute');\n          if (HotSpotMinute) {\n            HotSpotMinute.addEventListener('pointerdown', this);\n          }\n          let HotSpotSecond = svg.querySelector('#HotSpotSecond');\n          if (HotSpotSecond) {\n            HotSpotSecond.addEventListener('pointerdown', this);\n          }\n          this.__svg = svg;\n          this._updateHands();\n        })\n        .catch(error => {\n          this.error('There has been a problem with the reading of the clock SVG:', error);\n        });\n    },\n\n    // overridden\n    initListeners() {},\n\n    // overridden\n    _update(address, data, isDataAlreadyHandled) {\n      let value = isDataAlreadyHandled ? data : this.applyTransform(address, data);\n      if (value instanceof Date) {\n        this.__valueIsString = false;\n        this.__timeToShow = [value.getHours(), value.getMinutes(), value.getSeconds()];\n\n        this.setValue(value);\n      } else {\n        this.__valueIsString = true;\n        this.__timeToShow = typeof value === 'string' ? value.split(':') : [0, 0, 0];\n        this.__timeToShow[0] = this.__timeToShow[0] >= 0 && this.__timeToShow[0] <= 23 ? this.__timeToShow[0] : 0;\n        this.__timeToShow[1] = this.__timeToShow[1] >= 0 && this.__timeToShow[1] <= 59 ? this.__timeToShow[1] : 0;\n        this.__timeToShow[2] = this.__timeToShow[2] >= 0 && this.__timeToShow[2] <= 59 ? this.__timeToShow[2] : 0;\n        let date = new Date(); // assume today\n        date.setHours(this.__timeToShow[0], this.__timeToShow[1], this.__timeToShow[2], 0);\n\n        this.setValue(date);\n      }\n      this._updateHands();\n    },\n\n    handleEvent(event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n\n      switch (event.type) {\n        case 'pointerdown':\n          switch (event.target.id) {\n            case 'HotSpotHour':\n              this.__inDrag = dragMode.hour;\n              break;\n\n            case 'HotSpotMinute':\n              this.__inDrag = dragMode.minute;\n              break;\n\n            case 'HotSpotSecond':\n              this.__inDrag = dragMode.second;\n              break;\n\n            default:\n              this.__inDrag = dragMode.none;\n              return; // early exit\n          }\n          document.addEventListener('pointermove', this);\n          document.addEventListener('pointerup', this);\n          event.preventDefault();\n          event.stopPropagation();\n          break;\n\n        case 'pointermove':\n          if (this.__inDrag === dragMode.none) {\n            return;\n          }\n          event.preventDefault();\n          event.stopPropagation();\n          if (event.buttons > 0) {\n            this.dragHelper(event);\n            break;\n          }\n        // pass through to end drag when no buttons are pressed anymore\n\n        // eslint-disable-next-line no-fallthrough\n        case 'pointerup':\n        case 'pointercancel':\n          this.dragHelper(event);\n          this.__inDrag = dragMode.none;\n          document.removeEventListener('pointermove', this);\n          document.removeEventListener('pointerup', this);\n          break;\n      }\n\n      if (!this.getSendOnFinish() || event.type === 'pointerup') {\n        this.__throttled.call();\n      }\n    },\n\n    dragHelper(event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n\n      let CTM = this.__svg.getScreenCTM(); // get the Current Transformation Matrix\n      let x = (event.clientX - CTM.e) / CTM.a - 60;\n      let y = 60 - (event.clientY - CTM.f) / CTM.d;\n      let angle = ((Math.atan2(x, y) * 180) / Math.PI + 360) % 360;\n\n      let time = this.getValue();\n      let minutes;\n      switch (this.__inDrag) {\n        case dragMode.hour: {\n          let oldHours = time.getHours();\n          let pm = oldHours >= 12;\n          let hours = Math.floor(angle / 30);\n          minutes = (angle % 30) * 2;\n\n          if (oldHours % 12 > 9 && hours < 3) {\n            if (pm) {\n              pm = false;\n              time.setDate(time.getDate() + 1);\n            } else {\n              pm = true;\n            }\n          } else if (hours > 9 && oldHours % 12 < 3) {\n            if (pm) {\n              pm = false;\n            } else {\n              pm = true;\n              time.setDate(time.getDate() - 1);\n            }\n          }\n\n          time.setHours(hours + pm * 12);\n          time.setMinutes(minutes);\n          break;\n        }\n\n        case dragMode.minute: {\n          if (this.getHideSeconds()) {\n            minutes = Math.round(angle / 6);\n          } else {\n            minutes = Math.floor(angle / 6);\n          }\n          let oldMinutes = time.getMinutes();\n\n          if (oldMinutes > 45 && minutes < 15) {\n            time.setHours(time.getHours() + 1);\n          } else if (minutes > 45 && oldMinutes < 15) {\n            time.setHours(time.getHours() - 1);\n          }\n          time.setMinutes(minutes);\n          time.setSeconds((angle % 6) * 10);\n          break;\n        }\n\n        case dragMode.second: {\n          let seconds = Math.round(angle / 6) % 60;\n          let oldSeconds = time.getSeconds();\n\n          if (oldSeconds > 45 && seconds < 15) {\n            time.setMinutes(time.getMinutes() + 1);\n          } else if (seconds > 45 && oldSeconds < 15) {\n            time.setMinutes(time.getMinutes() - 1);\n          }\n          time.setSeconds(seconds);\n          break;\n        }\n      }\n\n      if (this.getHideSeconds()) {\n        time.setSeconds(0);\n      }\n      this.__timeToShow = [time.getHours(), time.getMinutes(), time.getSeconds()];\n\n      this._updateHands();\n    },\n\n    dragAction() {\n      const value = this.__valueIsString ? this.getValue().toTimeString().split(' ')[0] : this.getValue();\n      this.__lastBusValue = this.sendToBackend(value, false, this.__lastBusValue);\n    },\n\n    _updateHands() {\n      const [hour, minute, second] = this.__timeToShow;\n      Array.isArray(this.__Elements) &&\n        this.__Elements.forEach(e => {\n          let showSeconds = true;\n          if (e.hour !== null) {\n            if (showSeconds) {\n              e.hour.setAttribute(\n                'transform',\n                'rotate(' + (((hour % 12) * 360) / 12 + (minute * 30) / 60 + (second * 30) / 60 / 60) + ',0,0)'\n              );\n            } else {\n              e.hour.setAttribute('transform', 'rotate(' + (((hour % 12) * 360) / 12 + (minute * 30) / 60) + ',0,0)');\n            }\n          }\n          if (e.minute !== null) {\n            if (showSeconds) {\n              e.minute.setAttribute('transform', 'rotate(' + (minute * 6 + (second * 6) / 60) + ',0,0)');\n            } else {\n              e.minute.setAttribute('transform', 'rotate(' + minute * 6 + ',0,0)');\n            }\n          }\n          if (e.second !== null) {\n            e.second.setAttribute('transform', 'rotate(' + second * 6 + ',0,0)');\n          }\n          if (e.hour24 !== null) {\n            e.hour24.setAttribute('transform', 'rotate(' + (((hour % 24) * 360) / 24 + (minute * 15) / 60) + ',0,0)');\n          }\n          if (e.am !== null) {\n            e.am.setAttribute('display', hour < 12 ? '' : 'none');\n          }\n          if (e.pm !== null) {\n            e.pm.setAttribute('display', hour < 12 ? 'none' : '');\n          }\n          if (e.digits !== null) {\n            if (this.getHideSeconds()) {\n              e.digits.textContent = sprintf('%02d:%02d', hour, minute);\n            } else {\n              e.digits.textContent = sprintf('%02d:%02d:%02d', hour, minute, second);\n            }\n          }\n        });\n    }\n  },\n\n  defer(statics) {\n    cv.parser.pure.WidgetParser.addHandler('clock', cv.plugins.Clock);\n    cv.ui.structure.WidgetFactory.registerClass('clock', statics);\n  }\n});\n"],"mappings":"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"}