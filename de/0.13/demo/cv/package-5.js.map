{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Update","Operate","construct","props","value","Date","setHours","this","__P_10_0","__P_10_1","constructor","call","properties","src","check","srcPopup","titlePopup","hide24h","init","hide24hPopup","hideAMPM","hideAMPMPopup","hideDigits","hideDigitsPopup","hideSeconds","hideSecondsPopup","sendOnFinish","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseFormat","parseAddress","transformValueTrue","default","src_popup","target","title_popup","hide_24h","transform","hide_24h_popup","hide_am_pm","hide_am_pm_popup","hide_digits","hide_digits_popup","hide_seconds","hide_seconds_popup","send_on_finish","getElements","svg","tspan","elements","hour24","querySelector","hour","minute","second","am","pm","digits","hour24Group","setAttribute","members","__P_10_2","__P_10_3","__P_10_4","_getInnerDomString","_onDomReady","_this","trailing","uri","util","ResourceManager","getInstance","toUri","getSrc","uriPopup","getSrcPopup","promises","window","fetch","push","result","Error","responses","text","ok","then","texts","actor","getActor","firstElementChild","width","getAttribute","height","plugins","Clock","getHide24h","getHideAMPM","getHideDigits","getHideSeconds","popup","document","createElement","innerHTML","addEventListener","PopupHandler","showPopup","title","content","_width","HotSpotHour","HotSpotMinute","HotSpotSecond","error","initListeners","_update","address","isDataAlreadyHandled","applyTransform","getHours","getMinutes","getSeconds","setValue","split","date","handleEvent","event","dragMode","id","preventDefault","stopPropagation","dragHelper","removeEventListener","__P_10_5","minutes","y","clientY","CTM","f","d","angle","Math","atan2","x","PI","time","getValue","oldHours","hours","floor","setDate","getDate","setMinutes","round","oldMinutes","setSeconds","seconds","oldSeconds","dragAction","toTimeString","__P_10_6","sendToBackend","_updateHands","_this2","_this$__P_10_","e","textContent","sprintf","defer","addHandler","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Clock.js"],"sourcesContent":["/* Clock.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @asset(plugins/clock/*)\n */\nqx.Class.define('cv.plugins.Clock', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Update, cv.ui.common.Operate],\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(props) {\n    props.value = new Date();\n    props.value.setHours(0, 0, 0, 0);\n    this.__timeToShow = [0, 0, 0];\n    this.__Elements = [];\n    super(props);\n  },\n\n  /*\n  ******************************************************\n  PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    src: {\n      check: 'String'\n    },\n\n    srcPopup: {\n      check: 'String'\n    },\n\n    titlePopup: {\n      check: 'String'\n    },\n\n    hide24h: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hide24hPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideAMPM: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideAMPMPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideDigits: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideDigitsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideSeconds: {\n      check: 'Boolean',\n      init: false\n    },\n\n    hideSecondsPopup: {\n      check: 'Boolean',\n      init: false\n    },\n\n    sendOnFinish: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      let transformValueTrue = function (value) {\n        return value === 'true';\n      };\n\n      return {\n        src: {\n          default: 'plugins/clock/clock_pure.svg'\n        },\n\n        src_popup: {\n          target: 'srcPopup',\n          default: ''\n        },\n\n        title_popup: {\n          target: 'titlePopup',\n          default: ''\n        },\n\n        hide_24h: {\n          target: 'hide24h',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_24h_popup: {\n          target: 'hide24hPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_am_pm: {\n          target: 'hideAMPM',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_am_pm_popup: {\n          target: 'hideAMPMPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_digits: {\n          target: 'hideDigits',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_digits_popup: {\n          target: 'hideDigitsPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_seconds: {\n          target: 'hideSeconds',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        hide_seconds_popup: {\n          target: 'hideSecondsPopup',\n          default: false,\n          transform: transformValueTrue\n        },\n\n        send_on_finish: {\n          target: 'sendOnFinish',\n          default: false,\n          transform: transformValueTrue\n        }\n      };\n    },\n\n    getElements(svg, hide24h, hideAMPM, hideDigits, hideSeconds) {\n      let elements = {\n        hour24: svg.querySelector('#Hour24'),\n        hour: svg.querySelector('#Hour'),\n        minute: svg.querySelector('#Minute'),\n        second: svg.querySelector('#Second'),\n        am: svg.querySelector('#AM'),\n        pm: svg.querySelector('#PM'),\n        digits: svg.querySelector('#Digits')\n      };\n\n      let tspan;\n      while (elements.digits !== null && (tspan = elements.digits.querySelector('tspan')) !== null) {\n        elements.digits = tspan;\n      }\n      let hour24Group = svg.querySelector('#Hour24Group');\n\n      if (hide24h && hour24Group !== null) {\n        hour24Group.setAttribute('display', 'none');\n      }\n      if (hideAMPM) {\n        if (elements.am !== null) {\n          elements.am.setAttribute('display', 'none');\n          elements.am = null;\n        }\n        if (elements.pm !== null) {\n          elements.pm.setAttribute('display', 'none');\n          elements.pm = null;\n        }\n      }\n      if (hideDigits && elements.digits !== null) {\n        elements.digits.setAttribute('display', 'none');\n      }\n      if (hideSeconds && elements.second !== null) {\n        elements.second.setAttribute('display', 'none');\n      }\n\n      return elements;\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __svg: null, // cached access to the SVG in the DOM\n    __Elements: null, // cached access to the individual clock parts\n    __inDrag: 0, // is the handle currently dragged?\n    __timeToShow: null, // time to show on the clock\n    /**\n     *  to handle legacy mode, when a time string is used and not a `Date` object\n     */\n    __valueIsString: false,\n\n    _getInnerDomString() {\n      return '<div class=\"actor\" style=\"width:100%;height:100%\"></div>';\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n\n      this.__throttled = cv.util.Function.throttle(this.dragAction, 250, { trailing: true }, this);\n\n      let uri = qx.util.ResourceManager.getInstance().toUri(this.getSrc());\n      let uriPopup = this.getSrcPopup();\n      let promises = [window.fetch(uri)];\n      if (uriPopup !== '') {\n        uriPopup = qx.util.ResourceManager.getInstance().toUri(uriPopup);\n        promises.push(window.fetch(uriPopup));\n      }\n      Promise.all(promises)\n        .then(responses => {\n          let result = [];\n          if (!responses[0].ok) {\n            throw new Error('Not 2xx response for URI \"' + uri + '\"');\n          } else {\n            result.push(responses[0].text());\n          }\n          if (uriPopup !== '') {\n            if (!responses[1].ok) {\n              throw new Error('Not 2xx response for popup URI \"' + uriPopup + '\"');\n            } else {\n              result.push(responses[1].text());\n            }\n          }\n          return Promise.all(result);\n        })\n        .then(texts => {\n          let actor = this.getActor();\n          actor.innerHTML = texts[0];\n          let svg = actor.firstElementChild;\n\n          // make sure that the SVG fits exactly to the available space\n          if (!svg.getAttribute('viewBox')) {\n            // fix SVGs that don't contain a viewBox\n            let width = svg.getAttribute('width') || 300;\n            let height = svg.getAttribute('height') || 150;\n            svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n          }\n          svg.setAttribute('width', '100%');\n          svg.setAttribute('height', '100%');\n          this.__Elements = [\n            cv.plugins.Clock.getElements(\n              svg,\n              this.getHide24h(),\n              this.getHideAMPM(),\n              this.getHideDigits(),\n              this.getHideSeconds()\n            )\n          ];\n\n          if (texts.length > 1) {\n            let popup = document.createElement('div');\n            let title = this.getTitlePopup();\n            popup.setAttribute('style', 'width:100%;height:100%;position:absolute;');\n\n            popup.innerHTML = texts[1];\n\n            svg.addEventListener('click', function () {\n              cv.ui.PopupHandler.showPopup('clock', {\n                title: title,\n                content: popup\n              });\n            });\n            svg = popup.firstElementChild;\n\n            // make sure that also this SVG fits exactly to the available space\n            if (!svg.getAttribute('viewBox')) {\n              // fix SVGs that don't contain a viewBox\n              let width = svg.getAttribute('width') || 300;\n              let height = svg.getAttribute('height') || 150;\n              svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n            }\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('height', '100%');\n\n            this.__Elements.push(\n              cv.plugins.Clock.getElements(\n                svg,\n                this.getHide24hPopup(),\n                this.getHideAMPMPopup(),\n                this.getHideDigitsPopup(),\n                this.getHideSecondsPopup()\n              )\n            );\n          }\n\n          svg.setAttribute('style', 'touch-action: none'); // prevent scroll interference\n\n          let HotSpotHour = svg.querySelector('#HotSpotHour');\n          if (HotSpotHour) {\n            HotSpotHour.addEventListener('pointerdown', this);\n          }\n          let HotSpotMinute = svg.querySelector('#HotSpotMinute');\n          if (HotSpotMinute) {\n            HotSpotMinute.addEventListener('pointerdown', this);\n          }\n          let HotSpotSecond = svg.querySelector('#HotSpotSecond');\n          if (HotSpotSecond) {\n            HotSpotSecond.addEventListener('pointerdown', this);\n          }\n          this.__svg = svg;\n          this._updateHands();\n        })\n        .catch(error => {\n          this.error('There has been a problem with the reading of the clock SVG:', error);\n        });\n    },\n\n    // overridden\n    initListeners() {},\n\n    // overridden\n    _update(address, data, isDataAlreadyHandled) {\n      let value = isDataAlreadyHandled ? data : this.applyTransform(address, data);\n      if (value instanceof Date) {\n        this.__valueIsString = false;\n        this.__timeToShow = [value.getHours(), value.getMinutes(), value.getSeconds()];\n\n        this.setValue(value);\n      } else {\n        this.__valueIsString = true;\n        this.__timeToShow = typeof value === 'string' ? value.split(':') : [0, 0, 0];\n        this.__timeToShow[0] = this.__timeToShow[0] >= 0 && this.__timeToShow[0] <= 23 ? this.__timeToShow[0] : 0;\n        this.__timeToShow[1] = this.__timeToShow[1] >= 0 && this.__timeToShow[1] <= 59 ? this.__timeToShow[1] : 0;\n        this.__timeToShow[2] = this.__timeToShow[2] >= 0 && this.__timeToShow[2] <= 59 ? this.__timeToShow[2] : 0;\n        let date = new Date(); // assume today\n        date.setHours(this.__timeToShow[0], this.__timeToShow[1], this.__timeToShow[2], 0);\n\n        this.setValue(date);\n      }\n      this._updateHands();\n    },\n\n    handleEvent(event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n\n      switch (event.type) {\n        case 'pointerdown':\n          switch (event.target.id) {\n            case 'HotSpotHour':\n              this.__inDrag = dragMode.hour;\n              break;\n\n            case 'HotSpotMinute':\n              this.__inDrag = dragMode.minute;\n              break;\n\n            case 'HotSpotSecond':\n              this.__inDrag = dragMode.second;\n              break;\n\n            default:\n              this.__inDrag = dragMode.none;\n              return; // early exit\n          }\n          document.addEventListener('pointermove', this);\n          document.addEventListener('pointerup', this);\n          event.preventDefault();\n          event.stopPropagation();\n          break;\n\n        case 'pointermove':\n          if (this.__inDrag === dragMode.none) {\n            return;\n          }\n          event.preventDefault();\n          event.stopPropagation();\n          if (event.buttons > 0) {\n            this.dragHelper(event);\n            break;\n          }\n        // pass through to end drag when no buttons are pressed anymore\n\n        // eslint-disable-next-line no-fallthrough\n        case 'pointerup':\n        case 'pointercancel':\n          this.dragHelper(event);\n          this.__inDrag = dragMode.none;\n          document.removeEventListener('pointermove', this);\n          document.removeEventListener('pointerup', this);\n          break;\n      }\n\n      if (!this.getSendOnFinish() || event.type === 'pointerup') {\n        this.__throttled.call();\n      }\n    },\n\n    dragHelper(event) {\n      const dragMode = {\n        none: 0,\n        hour: 1,\n        minute: 2,\n        second: 3\n      };\n\n      let CTM = this.__svg.getScreenCTM(); // get the Current Transformation Matrix\n      let x = (event.clientX - CTM.e) / CTM.a - 60;\n      let y = 60 - (event.clientY - CTM.f) / CTM.d;\n      let angle = ((Math.atan2(x, y) * 180) / Math.PI + 360) % 360;\n\n      let time = this.getValue();\n      let minutes;\n      switch (this.__inDrag) {\n        case dragMode.hour: {\n          let oldHours = time.getHours();\n          let pm = oldHours >= 12;\n          let hours = Math.floor(angle / 30);\n          minutes = (angle % 30) * 2;\n\n          if (oldHours % 12 > 9 && hours < 3) {\n            if (pm) {\n              pm = false;\n              time.setDate(time.getDate() + 1);\n            } else {\n              pm = true;\n            }\n          } else if (hours > 9 && oldHours % 12 < 3) {\n            if (pm) {\n              pm = false;\n            } else {\n              pm = true;\n              time.setDate(time.getDate() - 1);\n            }\n          }\n\n          time.setHours(hours + pm * 12);\n          time.setMinutes(minutes);\n          break;\n        }\n\n        case dragMode.minute: {\n          if (this.getHideSeconds()) {\n            minutes = Math.round(angle / 6);\n          } else {\n            minutes = Math.floor(angle / 6);\n          }\n          let oldMinutes = time.getMinutes();\n\n          if (oldMinutes > 45 && minutes < 15) {\n            time.setHours(time.getHours() + 1);\n          } else if (minutes > 45 && oldMinutes < 15) {\n            time.setHours(time.getHours() - 1);\n          }\n          time.setMinutes(minutes);\n          time.setSeconds((angle % 6) * 10);\n          break;\n        }\n\n        case dragMode.second: {\n          let seconds = Math.round(angle / 6) % 60;\n          let oldSeconds = time.getSeconds();\n\n          if (oldSeconds > 45 && seconds < 15) {\n            time.setMinutes(time.getMinutes() + 1);\n          } else if (seconds > 45 && oldSeconds < 15) {\n            time.setMinutes(time.getMinutes() - 1);\n          }\n          time.setSeconds(seconds);\n          break;\n        }\n      }\n\n      if (this.getHideSeconds()) {\n        time.setSeconds(0);\n      }\n      this.__timeToShow = [time.getHours(), time.getMinutes(), time.getSeconds()];\n\n      this._updateHands();\n    },\n\n    dragAction() {\n      const value = this.__valueIsString ? this.getValue().toTimeString().split(' ')[0] : this.getValue();\n      this.__lastBusValue = this.sendToBackend(value, false, this.__lastBusValue);\n    },\n\n    _updateHands() {\n      const [hour, minute, second] = this.__timeToShow;\n      Array.isArray(this.__Elements) &&\n        this.__Elements.forEach(e => {\n          let showSeconds = true;\n          if (e.hour !== null) {\n            if (showSeconds) {\n              e.hour.setAttribute(\n                'transform',\n                'rotate(' + (((hour % 12) * 360) / 12 + (minute * 30) / 60 + (second * 30) / 60 / 60) + ',0,0)'\n              );\n            } else {\n              e.hour.setAttribute('transform', 'rotate(' + (((hour % 12) * 360) / 12 + (minute * 30) / 60) + ',0,0)');\n            }\n          }\n          if (e.minute !== null) {\n            if (showSeconds) {\n              e.minute.setAttribute('transform', 'rotate(' + (minute * 6 + (second * 6) / 60) + ',0,0)');\n            } else {\n              e.minute.setAttribute('transform', 'rotate(' + minute * 6 + ',0,0)');\n            }\n          }\n          if (e.second !== null) {\n            e.second.setAttribute('transform', 'rotate(' + second * 6 + ',0,0)');\n          }\n          if (e.hour24 !== null) {\n            e.hour24.setAttribute('transform', 'rotate(' + (((hour % 24) * 360) / 24 + (minute * 15) / 60) + ',0,0)');\n          }\n          if (e.am !== null) {\n            e.am.setAttribute('display', hour < 12 ? '' : 'none');\n          }\n          if (e.pm !== null) {\n            e.pm.setAttribute('display', hour < 12 ? 'none' : '');\n          }\n          if (e.digits !== null) {\n            if (this.getHideSeconds()) {\n              e.digits.textContent = sprintf('%02d:%02d', hour, minute);\n            } else {\n              e.digits.textContent = sprintf('%02d:%02d:%02d', hour, minute, second);\n            }\n          }\n        });\n    }\n  },\n\n  defer(statics) {\n    cv.parser.pure.WidgetParser.addHandler('clock', cv.plugins.Clock);\n    cv.ui.structure.WidgetFactory.registerClass('clock', statics);\n  }\n});\n"],"mappings":"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"}