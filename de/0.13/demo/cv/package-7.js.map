{"version":3,"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/Link.js"],"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","properties","cssClass","check","init","text","href","newWindow","statics","parse","xml","path","flavour","pageType","parser","WidgetParser","parseElement","this","getAttributeToPropertyMappings","class","target","default","transform","value","members","_getInnerDomString","classes","getCssClass","attributes","defer","addHandler","plugins","Link","WidgetFactory","registerClass","$$dbClassInfo"],"mappings":"kQAyBCA,GAAAC,MAAAC,OAAA,mBACCC,OAAOC,GAAAC,GAAOC,UAAAC,KAAAC,eAOfC,YACCC,UACEC,MAAQ,SACNC,KAAK,IADGC,MAIVF,MAAM,SACJC,KAAK,IADDE,MAINH,MAAM,SACJC,KAAK,IADDG,WAINJ,MAAS,UACPC,MAAK,IASVI,SAWAC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,OAAOjB,GAAAkB,OAAAf,KAAUgB,aAAWC,aAArBC,KAAwCP,EAAAC,EAAAC,EAAAC,EAAAI,KAAAC,mCAE9CA,+BAbM,WAeP,OACEC,OACEC,OAAS,WAACC,QAAQ,IAAThB,MACTgB,QAAQ,IAAAf,MACRe,QAAQ,IAAAd,WACRc,SAAa,EAACC,UAAW,SAAZC,GAAmB,MAAW,SAAFA,OAWhDC,SACCC,mBAAS,WACP,IAAAC,EAAA,4BAEEA,GAAS,IAAAT,KAAeU,oEAGlBC,EAAY,wBAElBA,GAAS,6EARJC,MAhEwB,SAAArB,GA+EjCZ,GAAKkB,OAAEf,KAAAgB,aAAAe,WAAkB,OAAAlC,GAAAmC,QAAAC,MACvBpC,GAAGC,GAAAC,UAAYmC,cAAaC,cAAW,OAAW1B,MAhFnBZ,GAAlCmC,QAAAC,KAAAG,cAAAA","sourcesContent":["/* Link.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This plugins integrates a simple link.\n *\n * @author Stefan Borchert [stefan@borchert.cc]\n * @since 2015\n */\nqx.Class.define('cv.plugins.Link', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    cssClass: {\n      check: 'String',\n      init: ''\n    },\n    text: {\n      check: 'String',\n      init: ''\n    },\n    href: {\n      check: 'String',\n      init: ''\n    },\n    newWindow: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      return cv.parser.pure.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'class': {target: 'cssClass', 'default': ''},\n        'text': {'default': ''},\n        'href': {'default': ''},\n        'newWindow': {'default': false, transform: function(value) {\n            return value === 'true';\n          }}\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    _getInnerDomString: function () {\n      let classes = 'link';\n      if (this.getCssClass()) {\n        classes += ' '+this.getCssClass();\n      }\n      const href = this.getHref() ? ' href=\"' + this.getHref() + '\"' : '';\n      let attributes = '';\n      if (this.isNewWindow()) {\n        attributes += ' target=\"_blank\"';\n      }\n      return '<a class=\"'+classes+'\"' + href + attributes + '>' + this.getText() + '</a>';\n    }\n  },\n\n  defer: function(statics) {\n    cv.parser.pure.WidgetParser.addHandler('link', cv.plugins.Link);\n    cv.ui.structure.WidgetFactory.registerClass('link', statics);\n  }\n});\n"]}