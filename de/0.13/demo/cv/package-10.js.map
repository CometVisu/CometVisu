{"version":3,"names":["qx","Class","define","extend","cv","ui","structure","pure","AbstractWidget","include","common","Refresh","construct","props","refresh","constructor","call","this","__P_13_0","Object","keys","forEach","key","TemplateEngine","getInstance","isDomFinished","_refreshAction","event","message","Bus","subscribe","statics","parse","xml","path","flavour","pageType","data","parser","WidgetParser","parseElement","getAttributeToPropertyMappings","parseRefresh","class","target","lang","owID","q","lat","lon","units","type","forecast24hItems","forecastDailyItems","detailItems","showSunrise","appid","description","properties","cssClass","check","nullable","forecastDailyhItems","members","_getInnerDomString","classes","getCssClass","getPath","_setupRefreshAction","_timer","Timer","getRefresh","addListener","start","$","getDomElement","openweathermap","defer","loader","util","ScriptLoader","addStyles","addScripts","addHandler","plugins","OpenweatherMap","WidgetFactory","registerClass","$$dbClassInfo"],"sources":["/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/OpenweatherMap.js"],"sourcesContent":["/* OpenweatherMap.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This plugins integrates OpenWeatherMap data.\n *\n * @author Stefan Borchert (stefan@borchert.cc)\n * @author Matthias\n * @since 0.9.0\n * @asset(plugins/openweathermap/owm_core.js)\n * @asset(plugins/openweathermap/owm_basic_style.css)\n * @asset(plugins/openweathermap/owm_weathericon.css)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.eot)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.woff)\n * @asset(plugins/openweathermap/font/weathericons-regular-webfont.ttf)\n */\nqx.Class.define('cv.plugins.OpenweatherMap', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: cv.ui.common.Refresh,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct(props) {\n    props.refresh *= 60;\n    super(props);\n    this.__options = {};\n    Object.keys(props).forEach(function (key) {\n      if (props[key]) {\n        this.__options[key] = props[key];\n      }\n    }, this);\n    if (props.refresh === 0) {\n      // call once\n      if (cv.TemplateEngine.getInstance().isDomFinished()) {\n        this._refreshAction();\n      } else {\n        qx.event.message.Bus.subscribe(\n          'setup.dom.finished',\n          function () {\n            this._refreshAction();\n          },\n          this\n        );\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        class: { target: 'cssClass' },\n        lang: {},\n        owID: {},\n        q: {},\n        lat: {},\n        lon: {},\n        units: {},\n        type: {},\n        forecast24hItems: {},\n        forecastDailyItems: {},\n        detailItems: {},\n        showSunrise: {},\n        appid: {},\n        description: {}\n      };\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    cssClass: {\n      check: 'String',\n      nullable: true\n    },\n\n    lang: {\n      check: 'String',\n      nullable: true\n    },\n\n    owID: {\n      check: 'String',\n      nullable: true\n    },\n\n    q: {\n      check: 'String',\n      nullable: true\n    },\n\n    lat: {\n      check: 'String',\n      nullable: true\n    },\n\n    lon: {\n      check: 'String',\n      nullable: true\n    },\n\n    units: {\n      check: 'String',\n      nullable: true\n    },\n\n    type: {\n      check: 'String',\n      nullable: true\n    },\n\n    forecast24hItems: {\n      check: 'String',\n      nullable: true\n    },\n\n    forecastDailyhItems: {\n      check: 'String',\n      nullable: true\n    },\n\n    showSunrise: {\n      check: 'String',\n      nullable: true\n    },\n\n    detailItems: {\n      check: 'String',\n      nullable: true\n    },\n\n    appid: {\n      check: 'String',\n      nullable: true\n    },\n\n    description: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __options: null,\n\n    _getInnerDomString() {\n      let classes = 'widget clearfix text openweathermap';\n      if (this.getCssClass()) {\n        classes += ' ' + this.getCssClass();\n      }\n      return (\n        '<div class=\"' + classes + '\"><div id=\"owm_' + this.getPath() + '\" class=\"openweathermap_value\"></div></div>'\n      );\n    },\n\n    _setupRefreshAction() {\n      this._timer = new qx.event.Timer(this.getRefresh());\n      this._timer.addListener('interval', this._refreshAction, this);\n      this._timer.start();\n      // call once immediately\n      this._refreshAction();\n    },\n\n    _refreshAction() {\n      const elem = $(this.getDomElement());\n      elem.openweathermap(this.__options);\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/openweathermap/owm_basic_style.css');\n    loader.addStyles('plugins/openweathermap/owm_weathericon.css');\n    loader.addScripts('plugins/openweathermap/owm_core.js');\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('openweathermap', cv.plugins.OpenweatherMap);\n\n    cv.ui.structure.WidgetFactory.registerClass('openweathermap', statics);\n  }\n});\n"],"mappings":"ybA+BCA,GAAAC,MAAAC,OAAA,6BACCC,OAAOC,GAAAC,GAAOC,UAAAC,KAAAC,eACdC,QAAQL,GAAGC,GAAGK,OAAAC,QAOfC,UAAA,SAAAC,GACCA,EAAAC,SAAS,GACPV,GAAAC,GAAMC,UAAOC,KAAMC,eAAAO,YAAAC,KAAAC,KAAAJ,GACnBI,KAAAC,SAAA,GACAC,OAAKC,KAAAP,GAAcQ,SAAA,SAAAC,GACbT,EAAMS,KACVL,KAAIC,SAAYI,GAAAT,EAAAS,G,GAEhBL,MACM,IAALJ,EAAKC,UAENV,GAAAmB,eAAAC,cAAAC,gBACAR,KAAOS,iBAEN1B,GAAA2B,MAAMC,QAAAC,IAAAC,UAAA,iCACHb,KAACS,gB,GAGCT,M,EAYXc,QAAA,CAWAC,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACG,IAAKC,EAAAjC,GAAAkC,OAAC/B,KAAKgC,aAAaC,aAAYvB,KAAAgB,EAAAC,EAAAC,EAAAC,EAAAnB,KAAAwB,kCAClCrC,GAAAkC,OAAU/B,KAAMgC,aAAYG,aAAaT,EAAAC,GASzC,OAAGG,C,EAELI,+BAAC,WAED,OACEE,MAAO,CACLC,OAAO,YAAqBC,KAAC,GAC7BC,KAAM,CAAC,EACPC,EAAA,CAAI,EACJC,IAAK,GACLC,IAAK,CAAC,EACNC,MAAO,GACPC,KAAK,CAAE,EACPC,iBAAQ,GACRC,mBAAoB,GACpBC,YAAA,GACAC,YAAa,CAAC,EACdC,MAAA,GACAC,YAAS,G,GAUhBC,WAAA,CACCC,SAAY,CACVC,MAAQ,SACNC,UAAO,GAEThB,KAAC,CAEDe,MAAM,SACJC,UAAO,GAETf,KAAC,CAEDc,MAAM,SACJC,UAAO,GAETd,EAAC,CAEAa,MAAE,SACDC,UAAO,GAETb,IAAC,CAEDY,MAAK,SACHC,UAAO,GAETZ,IAAC,CAEDW,MAAK,SACHC,UAAO,GAETX,MAAC,CAEDU,MAAO,SACLC,UAAO,GAETV,KAAC,CAEDS,MAAM,SACJC,UAAO,GAETT,iBAAC,CAEDQ,MAAA,SACEC,UAAO,GAETC,oBAAC,CAEDF,MAAA,SACEC,UAAO,GAETN,YAAC,CAEDK,MAAA,SACEC,UAAO,GAETP,YAAC,CAEDM,MAAA,SACEC,UAAO,GAETL,MAAC,CAEDI,MAAO,SACLC,UAAO,GAETJ,YAAC,CAEDG,MAAA,SACEC,UAAO,IASZE,QAAA,CACC7C,SAAS,KACP8C,mBAAe,WAEf,IAAAC,EAAA,sCACMhD,KAAAiD,gBACJD,GAAS,IAAAhD,KAAeiD,eAExB,qBAAAD,EAAA,kBAAAhD,KAAAkD,UAAA,6C,EAIFC,oBAAC,WAEDnD,KAAAoD,OAAA,IAAmBrE,GAAA2B,MAAA2C,MAAArD,KAAAsD,cACjBtD,KAAKoD,OAAMG,YAAU,WAAYvD,KAAKS,eAAaT,MACnDA,KAAKoD,OAAOI,QAEZxD,KAAAS,gB,EAEFA,eAAC,WAEDgD,EAAczD,KAAA0D,iBACNC,eAAc3D,KAAAC,S,GAGxB2D,MAAC,SAAA9C,GAED,IAAK+C,EAAA1E,GAAA2E,KAACC,aAASxD,cACbsD,EAAMG,UAAY,8CAClBH,EAAOG,UAAU,8CACjBH,EAAOI,WAAU,sCAEjB9E,GAAAkC,OAAA/B,KAAAgC,aAAA4C,WAAA,iBAAA/E,GAAAgF,QAAAC,gBACAjF,GAAGC,GAAAC,UAAYgF,cAAaC,cAAW,iBAAqBxD,E,IAI/D3B,GAACgF,QAAAC,eAAAG,e","ignoreList":[]}