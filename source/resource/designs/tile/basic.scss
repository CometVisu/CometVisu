@use "sass:math";

/* colors */
$appBackground: #525151;
$tileBackground: #2e2e2e;
$buttonBackground: #1f1f1f;
$primaryColor: #ff9900;

$primaryText: #b6b6b6;
$secondaryText: #7e7d7d;

/* dimensions */
$defaultSpace: 8px;
$tileCellSize: 64px;
$borderRadius: 18px;
$tileRows: 3;
$tileColumns: 3;

body {
    background-color: $appBackground;
    font-family: Roboto;

    .tile-list {
        margin: $defaultSpace*2;
        display: flex;
        align-items: center;
    }

    .tile {
        width: $tileCellSize * $tileColumns;
        height: $tileCellSize * $tileRows;
        background-color: $tileBackground;
        border-radius: $borderRadius;
        box-shadow: 2px 4px 4px rgba(0, 0, 0, 0.25);
        display: grid;
        grid-template-columns: repeat($tileColumns, 1fr);
        grid-template-rows: repeat($tileRows, 1fr);

        .row {
            height: 64px;
            width: 100%;
        }

        .round-button {
            width: $tileCellSize - $defaultSpace;
            height: $tileCellSize - $defaultSpace;
            border-radius: math.div($tileCellSize - $defaultSpace, 2);
            background: $buttonBackground;
            border: 1px solid $primaryColor;
            box-sizing: border-box;
            color: $primaryColor;
            text-align: center;
            position: relative;

            span {
                margin: 0;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
        }
    }
    label.primary {
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        /* identical to box height */
        text-align: center;
        color: $primaryText;
        display: block;
    }
    label.secondary {
        font-style: normal;
        font-weight: normal;
        font-size: 14px;
        text-align: center;
        color: $secondaryText;
        display: block;
    }
    .row {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    @for $i from 2 through $tileColumns {
        .colspan-#{$i} {
            grid-column: 1 / span #{$i};
        }
    }
    @for $i from 2 through $tileRows {
        .rowspan-#{$i} {
            grid-row: 1 / span #{$i};
        }
    }
    .row.first {
        grid-row: 1;
        justify-content: flex-end;
    }
    .row.middle {
        grid-row: math.ceil(math.div($tileRows, 2));
    }
    .row.last {
        grid-row: $tileRows;
        justify-content: flex-start;
    }
    .row.last > label:first-child {
        margin-top: 4px;
    }
}
