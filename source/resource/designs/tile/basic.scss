@use "sass:math";

/* colors */
$appBackground: #525151;
$tileBackground: #2e2e2e;
$buttonBackground: #1f1f1f;
$primaryColor: #ff9900;
$secondaryColor: #666666;

$primaryText: #b6b6b6;
$secondaryText: #7e7d7d;

/* dimensions */
$defaultSpace: 8px;
$tileCellSize: 64px;
$borderRadius: 18px;
$tileRows: 3;
$tileColumns: 3;

@font-face {
    font-family: "Roboto";
    font-style: normal;
    font-weight: 400;
    src: url("../metal/fonts/Roboto-Regular.ttf");
}

@import url("fonts/remixicon.css");

body {
    background-color: $appBackground;
    font-family: Roboto;

    tl-page {
        margin: $defaultSpace*2;
        display: flex;
        align-items: center;
        width: 100%;
        height: 100%;
        gap: $defaultSpace * 2;
    }

    tl-tile {
        width: $tileCellSize * $tileColumns;
        height: $tileCellSize * $tileRows;
        background-color: $tileBackground;
        border-radius: $borderRadius;
        box-shadow: 2px 4px 4px rgba(0, 0, 0, 0.25);
        display: grid;
        grid-template-columns: repeat($tileColumns, 1fr);
        grid-template-rows: repeat($tileRows, 1fr);
        justify-items: center;

        .row {
            height: 64px;
            width: 100%;
        }

        @for $i from 2 through $tileColumns {
            .colspan-#{$i} {
                grid-column: 1 / span #{$i};
            }

            > [column='#{$i}'] {
                grid-column: #{$i};
            }
        }
        @for $i from 2 through $tileRows {
            .rowspan-#{$i} {
                grid-row: 1 / span #{$i};
            }
            > [row='#{$i}'] {
                grid-row: #{$i};
            }
        }

        tl-row {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        > [row='first'] {
            grid-row: 1;
            justify-content: flex-end;
        }

        > [row='middle'] {
            grid-row: math.ceil(math.div($tileRows, 2));
        }

        > [row='last'] {
            grid-row: $tileRows;
            justify-content: flex-start;
        }

        > [row='last'] > label:first-child {
            margin-top: 4px;
        }
    }

    tl-tile.clickable {
        cursor: pointer;
    }

    label, label.primary {
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        /* identical to box height */
        text-align: center;
        color: $primaryText;
        display: block;
    }

    label.secondary {
        font-style: normal;
        font-weight: normal;
        font-size: 14px;
        text-align: center;
        color: $secondaryText;
        display: block;
    }

    cv-address {
        display: none;
    }

    tl-button {
        width: $tileCellSize - $defaultSpace;
        height: $tileCellSize - $defaultSpace;
        border-radius: $defaultSpace;
        background: $buttonBackground;
        box-sizing: border-box;
        text-align: center;
        position: relative;
        color: $secondaryColor;
        border: 1px solid $secondaryColor;
        box-shadow: 0 0 1px 0 $secondaryColor inset, 0 0 1px 0 $secondaryColor;
        align-self: center;
        cursor: pointer;

        .value {
            margin: 0;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        cv-icon {
            font-size: math.div($tileCellSize - $defaultSpace*2, 2);
        }
    }

    tl-button.round-button {
        border-radius: math.div($tileCellSize - $defaultSpace, 2);
    }

    tl-button.active {
        color: $primaryColor;
        border: 1px solid $primaryColor;
        box-shadow: 0 0 1px 0 $primaryColor inset, 0 0 1px 0 $primaryColor;
    }
}
