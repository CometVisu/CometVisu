{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Label",
    "construct",
    "value",
    "version",
    "core",
    "Environment",
    "get",
    "defer",
    "add",
    "qxl",
    "versionlabel",
    "VersionLabel"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_versionlabel_v2_0_0/source/class/qxl/versionlabel/VersionLabel.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Thomas Herchenroeder (thron7)\n\n************************************************************************ */\n\n/**\n * Slightly extended form of a @{qx.ui.basic.Label}, to include a version/\n * revision string of qooxdoo.\n */\nqx.Class.define(\"qxl.versionlabel.VersionLabel\", {\n  extend: qx.ui.basic.Label,\n\n  construct(value, version) {\n    if (!value) {\n      // if no parameter value given: use the environment variable\n      value = qx.core.Environment.get(\"qxl.versionlabel.name\");\n    }\n\n    if (!version) {\n      // if no parameter value given: use the environment variable\n      version = qx.core.Environment.get(\"qxl.versionlabel.version\");\n\n      if (!version) {\n        // revision or version number as fallback\n        version = qx.core.Environment.get(\"qx.revision\");\n        if (version == \"\") {\n          version = qx.core.Environment.get(\"qx.version\");\n        }\n      }\n    }\n\n    super(value + \" \" + version);\n  },\n\n  defer() {\n    /**\n     * The name of the version label which is shown in the upper right corner.\n     * Defaults to 'qooxdoo'.\n     */\n    qx.core.Environment.add(\"qxl.versionlabel.name\", \"qooxdoo\");\n\n    /**\n     * The version string of the version label which is shown in the upper right corner.\n     * Defaults to 'null' to be able to fallback to 'qx.revision' or 'qx.version' easily.\n     */\n    qx.core.Environment.add(\"qxl.versionlabel.version\", null);\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,+BAA+B,EAAE;IAC/CC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,KAAK;IAEzBC,SAAS,qBAACC,KAAK,EAAEC,OAAO,EAAE;MACxB,IAAI,CAACD,KAAK,EAAE;QACV;QACAA,KAAK,cAAmD;MAC1D;MAEA,IAAI,CAACC,OAAO,EAAE;QACZ;QACAA,OAAO,eAAsD;QAE7D,IAAI,CAACA,OAAO,EAAE;UACZ;UACAA,OAAO,GAAGZ,EAAE,CAACa,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC;UAChD,IAAIH,OAAO,IAAI,EAAE,EAAE;YACjBA,OAAO,GAAGZ,EAAE,CAACa,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,YAAY,CAAC;UACjD;QACF;MACF;MAEA,yCAAMJ,KAAK,GAAG,GAAG,GAAGC,OAAO;IAC7B,CAAC;IAEDI,KAAK,mBAAG;MACN;AACJ;AACA;AACA;MACIhB,EAAE,CAACa,IAAI,CAACC,WAAW,CAACG,GAAG,CAAC,uBAAuB,EAAE,SAAS,CAAC;;MAE3D;AACJ;AACA;AACA;MACIjB,EAAE,CAACa,IAAI,CAACC,WAAW,CAACG,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC;IAC3D;EACF,CAAC,CAAC;EA5DFC,GAAG,CAACC,YAAY,CAACC,YAAY,CAACjB,aAAa,GAAGA,aAAa;AAAC"
}