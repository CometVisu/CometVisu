{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "window",
    "Window",
    "include",
    "qxl",
    "dialog",
    "MDialog",
    "statics",
    "__useBlocker",
    "useBlocker",
    "value",
    "Dialog",
    "getInstanceByType",
    "alert",
    "message",
    "arguments",
    "length",
    "undefined",
    "callback",
    "context",
    "caption",
    "Alert",
    "image",
    "show",
    "error",
    "warning",
    "confirm",
    "Confirm",
    "prompt",
    "Prompt",
    "select",
    "options",
    "allowCancel",
    "defaultOptions",
    "label",
    "core",
    "Init",
    "getApplication",
    "tr",
    "Select",
    "form",
    "formData",
    "Assert",
    "assertMap",
    "Form",
    "registerFormElementHandlers",
    "MForm",
    "construct",
    "properties",
    "constructor",
    "call",
    "set",
    "visibility",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "alwaysOnTop",
    "modal",
    "movable",
    "resizable",
    "showClose",
    "showMaximize",
    "showMinimize",
    "showStatusbar",
    "setLayout",
    "layout",
    "Grow",
    "root",
    "getRoot",
    "add",
    "__blocker",
    "Blocker",
    "setOpacity",
    "getBlockerOpacity",
    "setColor",
    "getBlockerColor",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "addListener",
    "center",
    "_createWidgetContent",
    "_typeof",
    "setMessage",
    "_handleEscape",
    "check",
    "nullable",
    "event",
    "apply",
    "init",
    "blockerColor",
    "blockerOpacity",
    "members",
    "__previousFocus",
    "isUseBlocker",
    "maxWindowZIndex",
    "getZIndex",
    "windows",
    "getWindows",
    "i",
    "zIndex",
    "Math",
    "max",
    "setZIndex",
    "blockContent",
    "setVisibility",
    "getActiveWidget",
    "blur",
    "e",
    "hide",
    "unblock",
    "focus",
    "destruct",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_dialog_v5_0_0/source/class/qxl/dialog/Dialog.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2020 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     *  Christian Boulanger (cboulanger)\n     *  Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Base class for dialog widgets\n * @ignore(qxl.dialog.alert)\n * @ignore(qxl.dialog.error)\n * @ignore(qxl.dialog.warning)\n * @ignore(qxl.dialog.confirm)\n * @ignore(qxl.dialog.prompt)\n * @ignore(qxl.dialog.form)\n * @ignore(qxl.dialog.select)\n * @ignore(Promise)\n *\n */\nqx.Class.define(\"qxl.dialog.Dialog\", {\n  extend: qx.ui.window.Window,\n  include: [qxl.dialog.MDialog],\n\n  statics: {\n    /**\n     * for backwards-compability\n     * @type {Boolean}\n     */\n    __useBlocker: false,\n\n    /**\n     * Enforce the use of a coloured blocker.\n     * Added for backwards-compability with pre-1.2 versions\n     * @param  value {Boolean}\n     * @return {void}\n     */\n    useBlocker(value) {\n      qxl.dialog.Dialog.__useBlocker = value;\n    },\n\n    /**\n     * Returns a dialog instance by type\n     * @param type {String} The dialog type to get\n     * @return {qxl.dialog.Dialog}\n     */\n    getInstanceByType: qxl.dialog.MDialog.getInstanceByType,\n\n    /**\n     * Shortcut for alert dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    alert(message = \"\", callback = null, context = null, caption = \"\") {\n      return new qxl.dialog.Alert({\n        message,\n        callback,\n        context,\n        caption,\n        image: \"qxl.dialog.icon.info\",\n      }).show();\n    },\n\n    /**\n     * Shortcut for error dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    error(message = \"\", callback = null, context = null, caption = \"\") {\n      return new qxl.dialog.Alert({\n        message,\n        callback,\n        context,\n        caption,\n        image: \"qxl.dialog.icon.error\",\n      }).show();\n    },\n\n    /**\n     * Shortcut for warning dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Alert} The widget instance\n     */\n    warning(message = \"\", callback = null, context = null, caption = \"\") {\n      return new qxl.dialog.Alert({\n        message,\n        callback,\n        context,\n        caption,\n        image: \"qxl.dialog.icon.warning\",\n      }).show();\n    },\n\n    /**\n     * Shortcut for confirm dialog\n     * @param message {String} The message to display\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Confirm} The widget instance\n     */\n    confirm(message = \"\", callback = null, context = null, caption = \"\") {\n      return new qxl.dialog.Confirm({\n        message,\n        callback,\n        context,\n        caption,\n      }).show();\n    },\n\n    /**\n     * Shortcut for prompt dialog\n     * @param message {String} The message to display\n     * @param callback {Function} The callback function\n     * @param context {Object} The context to use with the callback function\n     * @param value {String} The default value of the prompt textfield\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Prompt} The widget instance\n     *\n     */\n    prompt(\n      message = \"\",\n      callback = null,\n      context = null,\n      value = \"\",\n      caption = \"\"\n    ) {\n      return new qxl.dialog.Prompt({\n        message,\n        callback,\n        context,\n        value,\n        caption,\n      }).show();\n    },\n\n    /**\n     * Shortcut for select dialog\n     * @param message {String} The message to display\n     * @param options {Array?} Options to select from. If omitted, \"Yes\" (true) or \"No\" (false) will be used.\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param allowCancel {Boolean?} Default: true. If the cancel button is pressed, the result value will be undefined.\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Select} The widget instance\n     */\n    select(\n      message = \"\",\n      options = null,\n      callback = null,\n      context = null,\n      allowCancel = true,\n      caption = \"\"\n    ) {\n      let defaultOptions = [\n        { label: qx.core.Init.getApplication().tr(\"Yes\"), value: true },\n        { label: qx.core.Init.getApplication().tr(\"No\"), value: false },\n      ];\n\n      return new qxl.dialog.Select({\n        message,\n        allowCancel,\n        options: options || defaultOptions,\n        callback,\n        context,\n        caption,\n      }).show();\n    },\n\n    /**\n     * Shortcut for form dialog. Cannot be reused.\n     * @param message {String} The message to display\n     * @param formData {Map} Map of form data. See {@link qxl.dialog.Form.formData}\n     * @param callback {Function?} The callback function\n     * @param context {Object?} The context to use with the callback function\n     * @param caption {String?} The caption of the dialog window\n     * @return {qxl.dialog.Form} The widget instance\n     */\n    form(message, formData, callback = null, context = null, caption = \"\") {\n      qx.core.Assert.assertMap(formData);\n      return new qxl.dialog.Form({\n        message,\n        formData,\n        allowCancel: true,\n        callback,\n        context,\n        caption,\n      }).show();\n    },\n\n    // ease use for form element writers\n    registerFormElementHandlers: qxl.dialog.MForm.registerFormElementHandlers,\n  },\n\n  /**\n   * Constructor\n   * @param properties {Map|String|undefined} If you supply a map, all the\n   * corresponding properties will be set. If a string is given, use it\n   * as to set the 'message' property.\n   */\n  construct(properties) {\n    super();\n    this.set({\n      visibility: \"hidden\",\n      allowClose: false,\n      allowMaximize: false,\n      allowMinimize: false,\n      alwaysOnTop: true,\n      modal: true,\n      movable: false,\n      resizable: false,\n      showClose: false,\n      showMaximize: false,\n      showMinimize: false,\n      showStatusbar: false,\n    });\n\n    this.setLayout(new qx.ui.layout.Grow());\n    let root = qx.core.Init.getApplication().getRoot();\n    root.add(this);\n    // use blocker (for backwards-compability)\n    this.__blocker = new qx.ui.core.Blocker(root);\n    this.__blocker.setOpacity(this.getBlockerOpacity());\n    this.__blocker.setColor(this.getBlockerColor());\n    // handle focus\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n    // resize the window when viewport size changes\n    this.addListener(\"resize\", this.center, this);\n    root.addListener(\"resize\", this.center, this);\n    this._createWidgetContent(properties);\n    // set properties from constructor param\n    if (typeof properties == \"object\") {\n      this.set(properties);\n    } else if (typeof properties == \"string\") {\n      this.setMessage(properties);\n    }\n    // escape key\n    root.addListener(\"keyup\", this._handleEscape, this);\n  },\n\n  properties: {\n    /**\n     * Whether the dialog is shown. If true, call the show() method. If false,\n     * call the hide() method.\n     */\n    show: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeShow\",\n      apply: \"_applyShow\",\n    },\n\n    /**\n     * Whether to block the ui while the widget is displayed\n     */\n    useBlocker: {\n      check: \"Boolean\",\n      init: false,\n    },\n\n    /**\n     * The blocker's color\n     */\n    blockerColor: {\n      check: \"String\",\n      init: \"black\",\n    },\n\n    /**\n     * The blocker's opacity\n     */\n    blockerOpacity: {\n      check: \"Number\",\n      init: 0.5,\n    },\n  },\n\n  members: {\n    /**\n     * A reference to the widget that previously had the focus\n     */\n    __previousFocus: null,\n\n    /**\n     * Show the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {this} The widget instance\n     */\n    show() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        // make sure the dialog is above any opened window\n        let root = qx.core.Init.getApplication().getRoot();\n        let maxWindowZIndex = root.getZIndex();\n        let windows = root.getWindows();\n        for (let i = 0; i < windows.length; i++) {\n          let zIndex = windows[i].getZIndex();\n          maxWindowZIndex = Math.max(maxWindowZIndex, zIndex);\n        }\n        this.setZIndex(maxWindowZIndex + 1);\n        this.__blocker.blockContent(maxWindowZIndex);\n      }\n      this.setVisibility(\"visible\");\n      this.__previousFocus =\n        qx.ui.core.FocusHandler.getInstance().getActiveWidget();\n      if (this.__previousFocus) {\n        try {\n          this.__previousFocus.blur();\n        } catch (e) {}\n        //this.__previousFocus.setFocusable(false);\n      }\n      return this;\n    },\n\n    /**\n     * Hide the widget. Overriding methods must call this parent method.\n     * Returns the widget instance for chaining.\n     * @return {qxl.dialog.Dialog} The widget instance\n     */\n    hide() {\n      if (this.isUseBlocker() || qxl.dialog.Dialog.__useBlocker) {\n        this.__blocker.unblock();\n      }\n      if (this.__previousFocus) {\n        try {\n          //this.__previousFocus.setFocusable(true);\n          this.__previousFocus.focus();\n        } catch (e) {}\n      }\n      this.setVisibility(\"hidden\");\n      return this;\n    },\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    let root = qx.core.Init.getApplication().getRoot();\n    root.removeListener(\"resize\", this.center, this);\n    root.removeListener(\"keyup\", this._handleEscape, this);\n  },\n});\n"
  ],
  "mappings": "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"
}