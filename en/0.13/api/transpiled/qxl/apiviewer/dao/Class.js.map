{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "Node",
    "construct",
    "className",
    "_className",
    "_package",
    "Package",
    "getParentPackage",
    "addClass",
    "members",
    "_construct",
    "_destruct",
    "_defer",
    "_staticMethods",
    "_constants",
    "_members",
    "_mixinMembers",
    "_properties",
    "_mixinProperties",
    "_events",
    "_mixinEvents",
    "_superClass",
    "_superInterfaces",
    "_superMixins",
    "_mixins",
    "_loadingPromise",
    "_loaded",
    "__url",
    "getMetaFile",
    "load",
    "url",
    "ClassLoader",
    "getBaseUri",
    "replace",
    "RequestUtil",
    "get",
    "then",
    "content",
    "meta",
    "eval",
    "_initMeta",
    "e",
    "error",
    "message",
    "isLoaded",
    "_jsdoc",
    "clazz",
    "jsdoc",
    "Method",
    "destruct",
    "defer",
    "statics",
    "name",
    "data",
    "type",
    "push",
    "Constant",
    "obj",
    "mixin",
    "events",
    "Event",
    "properties",
    "Property",
    "evt",
    "getEvent",
    "objE",
    "location",
    "body",
    "overriddenFrom",
    "_childControls",
    "arr",
    "forEach",
    "elem",
    "ChildControl",
    "all",
    "findClasses",
    "tmp",
    "p",
    "classes",
    "item",
    "_meta",
    "superClass",
    "_interfaces",
    "interfaces",
    "mixins",
    "Promise",
    "getPackage",
    "getName",
    "getFullName",
    "getPackageName",
    "getType",
    "isAbstract",
    "isStatic",
    "isSingleton",
    "getSuperClass",
    "getChildClasses",
    "_childClassesPromise",
    "descendants",
    "resolve",
    "getInterfaces",
    "getSuperInterfaces",
    "getMixins",
    "getSuperMixins",
    "getIncluder",
    "_includersPromise",
    "getImplementations",
    "_implementationsPromise",
    "getConstructor",
    "getChildControls",
    "getMembers",
    "getMethods",
    "getMixinMembers",
    "getMixinMethods",
    "getStatics",
    "getEvents",
    "getMixinEvents",
    "getProperties",
    "getProperty",
    "i",
    "length",
    "prop",
    "getMixinProperties",
    "getConstants",
    "getSee",
    "map",
    "getErrors",
    "getClassHierarchy",
    "includeNativeObjects",
    "result",
    "currentClass",
    "isNative",
    "isNativeObject",
    "getInterfaceHierarchy",
    "add",
    "itf",
    "getAllInterfaces",
    "includeSuperClasses",
    "interfaceNodes",
    "ifaceRecurser",
    "ifaceNode",
    "classNodes",
    "classNode",
    "getItemByNameFromMixins",
    "itemName",
    "getItem",
    "itemListNames",
    "list",
    "j",
    "getItemList",
    "listName",
    "methodMap",
    "constructor",
    "methods",
    "constants",
    "superInterfaces",
    "superMixins",
    "childControls",
    "getItemByListAndName",
    "loadDependedClasses",
    "loadClassList",
    "getDependedClasses",
    "foundClasses",
    "_native_classes",
    "Array",
    "Boolean",
    "Date",
    "Error",
    "Function",
    "Math",
    "Number",
    "Object",
    "RegExp",
    "String",
    "getClassByName",
    "create",
    "nativeClass",
    "undefined",
    "pkg",
    "cls",
    "getClassesByName",
    "classNames",
    "lang",
    "toNativeArray",
    "filter",
    "c",
    "classname"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/dao/Class.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This Class wraps the access to the documentation data of classes.\n */\nqx.Class.define(\"qxl.apiviewer.dao.Class\", {\n  extend: qxl.apiviewer.dao.Node,\n\n  /**\n   * @param className\n   */\n  construct(className) {\n    this.base(arguments);\n    this._className = className;\n    this._package = qxl.apiviewer.dao.Package.getParentPackage(className);\n    this._package.addClass(this);\n  },\n\n  members: {\n    _package: null,\n    _construct: null,\n    _destruct: null,\n    _defer: null,\n    _staticMethods: null,\n    _constants: null,\n    _members: null,\n    _mixinMembers: null,\n    _properties: null,\n    _mixinProperties: null,\n    _events: null,\n    _mixinEvents: null,\n    _superClass: null,\n    _superInterfaces: null,\n    _superMixins: null,\n    _mixins: null,\n\n    _loadingPromise: null,\n    _loaded: false,\n\n    __url: null,\n\n    /**\n     * retrieves the meta file name + path\n     */\n    getMetaFile() {\n      return this.__url;\n    },\n\n    /**\n     * Loads the class\n     *\n     * @return {Promise}\n     */\n    load() {\n      if (this._loadingPromise) {\n        return this._loadingPromise;\n      }\n\n      var url = (this.__url =\n        qxl.apiviewer.ClassLoader.getBaseUri() +\n        this._className.replace(/\\./g, \"/\") +\n        \".json\");\n      return (this._loadingPromise = qxl.apiviewer.RequestUtil.get(url)\n        .then((content) => {\n          /* eslint-disable-next-line no-eval */\n          var meta = eval(\"(\" + content + \")\");\n          return this._initMeta(meta).then(() => {\n            this._loaded = true;\n            return this;\n          });\n        })\n        .catch((e) => {\n          this.error(\"Couldn't load file: \" + url + \" \" + e.message);\n        }));\n    },\n\n    isLoaded() {\n      return this._loaded;\n    },\n\n    /**\n     * Loads meta data, including super classes/interfaces/mixins\n     * @param meta\n     * @return {qx.Promise}\n     */\n    _initMeta(meta) {\n      this.base(arguments, meta);\n\n      this._jsdoc = meta.clazz.jsdoc || {};\n\n      this._construct = meta.construct\n        ? [new qxl.apiviewer.dao.Method(meta.construct, this, \"construct\")]\n        : [];\n      this._destruct = meta.destruct\n        ? [new qxl.apiviewer.dao.Method(meta.destruct, this, \"destruct\")]\n        : [];\n      this._defer = meta.defer\n        ? [new qxl.apiviewer.dao.Method(meta.defer, this, \"defer\")]\n        : [];\n\n      this._staticMethods = [];\n      this._constants = [];\n      if (meta.statics) {\n        for (let name in meta.statics) {\n          let data = meta.statics[name];\n          if (data.type == \"variable\") {\n            this._constants.push(\n              new qxl.apiviewer.dao.Constant(data, this, name)\n            );\n          } else {\n            this._staticMethods.push(\n              new qxl.apiviewer.dao.Method(data, this, name)\n            );\n          }\n        }\n      }\n\n      this._members = [];\n      this._mixinMembers = [];\n      if (meta.members) {\n        for (let name in meta.members) {\n          let data = meta.members[name];\n          if (data.type == \"function\") {\n            let obj = new qxl.apiviewer.dao.Method(data, this, name);\n            if (data.mixin) {\n              this._mixinMembers.push(obj);\n            } else {\n              this._members.push(obj);\n            }\n          }\n        }\n      }\n\n      this._events = [];\n      this._mixinEvents = [];\n      if (meta.events) {\n        for (let name in meta.events) {\n          let data = meta.events[name];\n          let obj = new qxl.apiviewer.dao.Event(data, this);\n          if (data.mixin) {\n            this._mixinEvents.push(obj);\n          } else {\n            this._events.push(obj);\n          }\n        }\n      }\n\n      this._properties = [];\n      this._mixinProperties = [];\n      if (meta.properties) {\n        for (let name in meta.properties) {\n          let data = meta.properties[name];\n          let obj = new qxl.apiviewer.dao.Property(data, this, name);\n          if (data.mixin) {\n            this._mixinProperties.push(obj);\n          } else {\n            this._properties.push(obj);\n          }\n          let evt = obj.getEvent();\n          if (evt) {\n            let objE = new qxl.apiviewer.dao.Event(\n              {\n                location: obj.location,\n                name: evt,\n                type: \"qx.event.type.Data\",\n                jsdoc: {\n                  \"@description\": [\n                    {\n                      name: \"@description\",\n                      body: `Fired on change of the property {@link ${\n                        data.overriddenFrom || \"\"\n                      }#${name} ${name}}`,\n                    },\n                  ],\n                },\n              },\n\n              this\n            );\n            if (data.mixin) {\n              this._mixinEvents.push(objE);\n            } else {\n              this._events.push(objE);\n            }\n          }\n        }\n      }\n\n      this._childControls = [];\n      let arr = this._jsdoc[\"@childControl\"];\n      if (arr) {\n        arr.forEach((elem) => {\n          this._childControls.push(\n            new qxl.apiviewer.dao.ChildControl(elem, this)\n          );\n        });\n      }\n\n      var all = [];\n      /**\n       * @param tmp\n       */\n      function findClasses(tmp) {\n        let p = qxl.apiviewer.dao.Class.findClasses(tmp);\n        return p.then((classes) => {\n          classes.forEach((item) => {\n            all.push(item);\n          });\n          return classes;\n        });\n      }\n\n      this._superClass = null;\n      this._superInterfaces = [];\n      this._superMixins = [];\n      if (this._meta.type == \"interface\") {\n        all.push(\n          findClasses(meta.superClass).then(\n            (arr) => (this._superInterfaces = arr)\n          )\n        );\n      } else if (this._meta.type == \"mixin\") {\n        all.push(\n          findClasses(meta.superClass).then((arr) => (this._superMixins = arr))\n        );\n      } else {\n        all.push(\n          findClasses(meta.superClass).then(\n            (arr) => (this._superClass = arr[0] || null)\n          )\n        );\n      }\n      this._interfaces = [];\n      findClasses(meta.interfaces).then((arr) => (this._interfaces = arr));\n      this._mixins = [];\n      findClasses(meta.mixins).then((arr) => (this._mixins = arr));\n      return qx.Promise.all(all);\n    },\n\n    getPackage() {\n      return this._package;\n    },\n\n    /**\n     * Get the name of the class.\n     *\n     * @return {String} name of the class\n     */\n    getName() {\n      return this._className;\n    },\n\n    /**\n     * Get the full name of the class, including the package name.\n     *\n     * @return {String} full name of the class\n     */\n    getFullName() {\n      return this._className;\n    },\n\n    /**\n     * Get the package name of the class.\n     *\n     * @return {String} package name of the class\n     */\n    getPackageName() {\n      return this._package.getFullName();\n    },\n\n    /**\n     * Get type of the class. Valid types are \"class\", \"interface\" and \"mixin\".\n     *\n     * @return {String} The type of the class. Valid types are \"class\",\n     *         \"interface\" and \"mixin\".\n     */\n    getType() {\n      return this._meta.type;\n    },\n\n    /**\n     * Get whether the class is abstract.\n     *\n     * @return {Boolean} Whether the class is abstract.\n     */\n    isAbstract() {\n      return this._meta.isAbstract || false;\n    },\n\n    /**\n     * Get whether the class is a static class.\n     *\n     * @return {Boolean} Whether the class is static.\n     */\n    isStatic() {\n      return this._meta.isStatic || false;\n    },\n\n    /**\n     * Get whether the class is a singleton.\n     *\n     * @return {Boolean} Whether the class is a singleton.\n     */\n    isSingleton() {\n      return this._meta.isSingleton || false;\n    },\n\n    /**\n     * Get the super class of the class.\n     *\n     * @return {qxl.apiviewer.dao.Class} The super class of the class.\n     */\n    getSuperClass() {\n      return this._superClass;\n    },\n\n    /**\n     * Get the direct child classes of the class.\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} A list of direct child classes of the\n     *         class.\n     */\n    getChildClasses() {\n      if (!this._childClassesPromise) {\n        if (this._meta.type == \"class\") {\n          this._childClassesPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._childClassesPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._childClassesPromise;\n    },\n\n    /**\n     * Get all interfaces declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All interfaces declared at the class\n     *         declaration.\n     */\n    getInterfaces() {\n      return this._interfaces;\n    },\n\n    /**\n     * Get all super interfaces. (Only for interfaces)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super interfaces.\n     */\n    getSuperInterfaces() {\n      return this._superInterfaces;\n    },\n\n    /**\n     * Get all mixins declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All mixins declared at the class\n     *         declaration.\n     */\n    getMixins() {\n      return this._mixins;\n    },\n\n    /**\n     * Get all super mixins. (Only for mixins)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super mixins.\n     */\n    getSuperMixins() {\n      return this._superMixins;\n    },\n\n    /**\n     * Get all classes including this mixin. (Only for mixins)\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} All classes including this mixin.\n     */\n    getIncluder() {\n      if (!this._includersPromise) {\n        if (this._meta.type == \"mixin\") {\n          this._includersPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._includersPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._includersPromise;\n    },\n\n    /**\n     * Get all implementations of this interface. (Only for interfaces)\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} All implementations of this interface.\n     */\n    getImplementations() {\n      if (!this._implementationsPromise) {\n        if (this._meta.type == \"interface\") {\n          this._implementationsPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._implementationsPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._implementationsPromise;\n    },\n\n    /**\n     * Get the constructor of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method} The constructor of the class.\n     */\n    getConstructor() {\n      return this._construct;\n    },\n\n    /**\n     * Get all child controls\n     *\n     * @return {qxl.apiviewer.dao.ChildControl[]} All child controls.\n     */\n    getChildControls() {\n      return this._childControls;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMembers() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMethods() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMixinMembers() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMixinMethods() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the statics of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The statics of the class.\n     */\n    getStatics() {\n      return this._staticMethods;\n    },\n\n    /**\n     * Get the events of the class.\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getEvents() {\n      return this._events;\n    },\n\n    /**\n     * Get the events of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getMixinEvents() {\n      return this._mixinEvents;\n    },\n\n    /**\n     * Get the properties of the class.\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getProperties() {\n      return this._properties;\n    },\n\n    /**\n     * Returns a property with a given name\n     * @param name\n     * @return {qxl.apiviewer.dao.Property} The named property\n     */\n    getProperty(name) {\n      for (var i = 0; i < this._properties.length; i++) {\n        var prop = this._properties[i];\n        if (prop.getName() == name) {\n          return prop;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Get the properties of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getMixinProperties() {\n      return this._mixinProperties;\n    },\n\n    /**\n     * Get the constants of the class.\n     *\n     * @return {qxl.apiviewer.dao.Constant[]} The constants of the class.\n     */\n    getConstants() {\n      return this._constants;\n    },\n\n    /**\n     * Get all references declared using the \"see\" attribute.\n     *\n     * @return {String[]} A list of all references declared using the \"see\" attribute.\n     */\n    getSee() {\n      return (this._jsdoc[\"@see\"] || []).map((item) => item.body);\n    },\n\n    getErrors() {\n      return [];\n    },\n\n    /* COMPLEX FUNCTIONS */\n\n    /**\n     * Get the documentation nodes of all classes in the inheritance chain of a\n     * class. The first entry in the list is the class itself.\n     *\n     * @param includeNativeObjects\n     *          {Boolean} true if you want to get native JS objects too\n     * @return {qxl.apiviewer.dao.Class[]} array of super classes of the given\n     *         class.\n     */\n    getClassHierarchy(includeNativeObjects) {\n      var result = [];\n      for (\n        var currentClass = this;\n        currentClass;\n        currentClass = currentClass.getSuperClass()\n      ) {\n        var isNative = qxl.apiviewer.dao.Class.isNativeObject(currentClass);\n        if (!isNative || includeNativeObjects) {\n          result.push(currentClass);\n        }\n        if (isNative) {\n          break;\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Get the documentation nodes of all interfaces in the inheritance chain of\n     * an interface. The first entry in the list is the interface itself.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} array of super interfaces of the given\n     *         interface.\n     */\n    getInterfaceHierarchy() {\n      var result = [];\n\n      /**\n       * @param currentClass\n       */\n      function add(currentClass) {\n        result.push(currentClass);\n        currentClass.getSuperInterfaces().forEach((itf) => add(itf));\n      }\n      add(this);\n\n      return result;\n    },\n\n    /**\n     * Returns a list of all interfaces the class implements directly.\n     *\n     * @param includeSuperClasses\n     *          {Boolean?false} Whether the interfaces of all super classes\n     *          should be returned as well.\n     */\n    getAllInterfaces(includeSuperClasses) {\n      var interfaceNodes = [];\n\n      let ifaceRecurser = (ifaceNode) => {\n        interfaceNodes.push(ifaceNode);\n        (ifaceNode.getSuperInterfaces() || []).forEach(ifaceRecurser);\n      };\n\n      var classNodes = includeSuperClasses ? this.getClassHierarchy() : [this];\n      classNodes.forEach((classNode) => {\n        (classNode.getInterfaces() || []).forEach(ifaceRecurser);\n      });\n\n      return interfaceNodes;\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName\n     *          {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItemByNameFromMixins(itemName) {\n      return (\n        this._mixinMembers[itemName] ||\n        this._mixinProperties[itemName] ||\n        this._mixinEvents[itemName] ||\n        null\n      );\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItem(itemName) {\n      var itemListNames = [\n        \"getMembers\",\n        \"getStatics\",\n        \"getEvents\",\n        \"getProperties\",\n        \"getConstants\",\n        // \"getAppearances\",\n        \"getChildControls\",\n      ];\n\n      for (var i = 0; i < itemListNames.length; i++) {\n        var list = this[itemListNames[i]]();\n        if (list) {\n          for (var j = 0; j < list.length; j++) {\n            if (itemName == list[j].getName()) {\n              return list[j];\n            }\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Get an array of class items matching the given list name. Known list names are:\n     * <ul>\n     *   <li>events</li>\n     *   <li>constructor</li>\n     *   <li>properties</li>\n     *   <li>methods</li>\n     *   <li>methods-static</li>\n     *   <li>constants</li>\n     *   <li>appearances</li>\n     *   <li>superInterfaces</li>\n     *   <li>superMixins</li>\n     * </li>\n     *\n     * @param listName {String} name of the item list\n     * @return {apiviewer.dao.ClassItem[]} item list\n     */\n    getItemList(listName) {\n      var methodMap = {\n        events: \"getEvents\",\n        constructor: \"getConstructor\",\n        properties: \"getProperties\",\n        methods: \"getMembers\",\n        \"methods-static\": \"getStatics\",\n        constants: \"getConstants\",\n        //        \"appearances\" : \"getAppearances\",\n        superInterfaces: \"getSuperInterfaces\",\n        superMixins: \"getSuperMixins\",\n        childControls: \"getChildControls\",\n      };\n\n      if (listName == \"constructor\") {\n        return this.getConstructor() ? [this.getConstructor()] : [];\n      }\n      return this[methodMap[listName]]();\n    },\n\n    /**\n     * Get a class item by the item list name and the item name.\n     * Valid item list names are documented at {@link #getItemList}.\n     * .\n     * @param listName {String} name of the item list.\n     * @param itemName {String} name of the class item.\n     * @return {apiviewer.dao.ClassItem} the matching class item.\n     */\n    getItemByListAndName(listName, itemName) {\n      var list = this.getItemList(listName);\n      for (var j = 0; j < list.length; j++) {\n        if (itemName == list[j].getName()) {\n          return list[j];\n        }\n      }\n      return null;\n    },\n\n    loadDependedClasses() {\n      return qxl.apiviewer.ClassLoader.loadClassList(this.getDependedClasses());\n    },\n\n    /**\n     * Return a list of all classes, mixins and interfaces this class depends\n     * on. This includes all super classes and their mixins/interfaces and the\n     * class itself.\n     *\n     * @return {qx.Promise<Class[]>} array of dependent classes.\n     */\n    getDependedClasses() {\n      let foundClasses = [];\n      /**\n       * @param clazz\n       */\n      function findClasses(clazz) {\n        if (qxl.apiviewer.dao.Class.isNativeObject(clazz)) {\n          return;\n        }\n        clazz.load().then(() => {});\n\n        foundClasses.push(clazz);\n        clazz.getSuperClass() && findClasses(clazz.getSuperClass());\n        (clazz.getMixins() || []).forEach(() => findClasses);\n        (clazz.getSuperMixins() || []).forEach(() => findClasses);\n        (clazz.getInterfaces() || []).forEach(() => findClasses);\n        (clazz.getSuperInterfaces() || []).forEach(() => findClasses);\n      }\n\n      findClasses(this);\n      return foundClasses;\n    },\n  },\n\n  statics: {\n    _native_classes: {\n      Array: Array,\n      Boolean: Boolean,\n      Date: Date,\n      Error: Error,\n      Function: Function,\n      Math: Math,\n      Number: Number,\n      Object: Object,\n      RegExp: RegExp,\n      String: String,\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     * @param className\n     * {String} name of the class\n     * @param create\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassByName(className, create) {\n      var nativeClass = qxl.apiviewer.dao.Class._native_classes[className];\n      if (nativeClass !== undefined) {\n        return nativeClass;\n      }\n\n      var pkg = qxl.apiviewer.dao.Package.getParentPackage(className);\n      if (!pkg) {\n        throw new Error(\"Cannot find a package for \" + className);\n      }\n\n      var cls = pkg.getClassByName(className);\n      if (!cls && create) {\n        cls = new qxl.apiviewer.dao.Class(className);\n      }\n      return cls;\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     * @param classNames\n     * @param create\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassesByName(classNames, create) {\n      classNames = qx.lang.Array.toNativeArray(classNames);\n      var result = classNames.map((name) =>\n        qxl.apiviewer.dao.Class.getClassByName(name, create)\n      );\n      return result;\n    },\n\n    findClasses(name) {\n      if (!name) {\n        return qx.Promise.resolve([]);\n      }\n      var all = qx.lang.Array.toNativeArray(name)\n        .filter((name) => !qxl.apiviewer.dao.Class._native_classes[name])\n        .map((name) => {\n          let c = qxl.apiviewer.dao.Class.getClassByName(name);\n          if (c) {\n            c.load();\n          }\n          return c;\n        });\n      return qx.Promise.all(all);\n    },\n\n    /**\n     * Checks if the Class is a qooxdoo qxl.apiviewer.dao.Class Object or a native\n     * one\n     *\n     * @param clazz\n     *          {qxl.apiviewer.dao.Class} the object to be checked\n     * @return {Boolean} true if it is a JS native object\n     */\n    isNativeObject(clazz) {\n      return clazz.classname !== \"qxl.apiviewer.dao.Class\";\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}