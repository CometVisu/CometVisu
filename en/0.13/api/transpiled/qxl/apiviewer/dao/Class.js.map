{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "Node",
    "construct",
    "className",
    "_className",
    "_package",
    "Package",
    "getParentPackage",
    "addClass",
    "members",
    "_construct",
    "_destruct",
    "_defer",
    "_staticMethods",
    "_constants",
    "_members",
    "_mixinMembers",
    "_properties",
    "_mixinProperties",
    "_events",
    "_mixinEvents",
    "_superClass",
    "_superInterfaces",
    "_superMixins",
    "_mixins",
    "_loadingPromise",
    "_loaded",
    "__url",
    "getMetaFile",
    "load",
    "url",
    "ClassLoader",
    "getBaseUri",
    "replace",
    "RequestUtil",
    "get",
    "then",
    "content",
    "meta",
    "eval",
    "_initMeta",
    "e",
    "error",
    "message",
    "isLoaded",
    "_jsdoc",
    "clazz",
    "jsdoc",
    "Method",
    "destruct",
    "defer",
    "statics",
    "name",
    "data",
    "type",
    "push",
    "Constant",
    "obj",
    "mixin",
    "events",
    "Event",
    "properties",
    "Property",
    "evt",
    "getEvent",
    "objE",
    "location",
    "body",
    "overriddenFrom",
    "_childControls",
    "arr",
    "forEach",
    "elem",
    "ChildControl",
    "all",
    "findClasses",
    "tmp",
    "p",
    "classes",
    "item",
    "_meta",
    "superClass",
    "_interfaces",
    "interfaces",
    "mixins",
    "Promise",
    "getPackage",
    "getName",
    "getFullName",
    "getPackageName",
    "getType",
    "isAbstract",
    "isStatic",
    "isSingleton",
    "getSuperClass",
    "getChildClasses",
    "_childClassesPromise",
    "descendants",
    "resolve",
    "getInterfaces",
    "getSuperInterfaces",
    "getMixins",
    "getSuperMixins",
    "getIncluder",
    "_includersPromise",
    "getImplementations",
    "_implementationsPromise",
    "getConstructor",
    "getChildControls",
    "getMembers",
    "getMethods",
    "getMixinMembers",
    "getMixinMethods",
    "getStatics",
    "getEvents",
    "getMixinEvents",
    "getProperties",
    "getProperty",
    "i",
    "length",
    "prop",
    "getMixinProperties",
    "getConstants",
    "getSee",
    "map",
    "getErrors",
    "getClassHierarchy",
    "includeNativeObjects",
    "result",
    "currentClass",
    "isNative",
    "isNativeObject",
    "getInterfaceHierarchy",
    "add",
    "itf",
    "getAllInterfaces",
    "includeSuperClasses",
    "interfaceNodes",
    "ifaceRecurser",
    "ifaceNode",
    "classNodes",
    "classNode",
    "getItemByNameFromMixins",
    "itemName",
    "getItem",
    "itemListNames",
    "list",
    "j",
    "getItemList",
    "listName",
    "methodMap",
    "constructor",
    "methods",
    "constants",
    "superInterfaces",
    "superMixins",
    "childControls",
    "getItemByListAndName",
    "loadDependedClasses",
    "loadClassList",
    "getDependedClasses",
    "foundClasses",
    "_native_classes",
    "Array",
    "Boolean",
    "Date",
    "Error",
    "Function",
    "Math",
    "Number",
    "Object",
    "RegExp",
    "String",
    "getClassByName",
    "create",
    "nativeClass",
    "undefined",
    "pkg",
    "cls",
    "getClassesByName",
    "classNames",
    "lang",
    "toNativeArray",
    "filter",
    "c",
    "classname"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/dao/Class.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This Class wraps the access to the documentation data of classes.\n */\nqx.Class.define(\"qxl.apiviewer.dao.Class\", {\n  extend: qxl.apiviewer.dao.Node,\n\n  /**\n   * @param className\n   */\n  construct(className) {\n    this.base(arguments);\n    this._className = className;\n    this._package = qxl.apiviewer.dao.Package.getParentPackage(className);\n    this._package.addClass(this);\n  },\n\n  members: {\n    _package: null,\n    _construct: null,\n    _destruct: null,\n    _defer: null,\n    _staticMethods: null,\n    _constants: null,\n    _members: null,\n    _mixinMembers: null,\n    _properties: null,\n    _mixinProperties: null,\n    _events: null,\n    _mixinEvents: null,\n    _superClass: null,\n    _superInterfaces: null,\n    _superMixins: null,\n    _mixins: null,\n\n    _loadingPromise: null,\n    _loaded: false,\n\n    __url: null,\n\n    /**\n     * retrieves the meta file name + path\n     */\n    getMetaFile() {\n      return this.__url;\n    },\n\n    /**\n     * Loads the class\n     *\n     * @return {Promise}\n     */\n    load() {\n      if (this._loadingPromise) {\n        return this._loadingPromise;\n      }\n\n      var url = (this.__url =\n        qxl.apiviewer.ClassLoader.getBaseUri() +\n        this._className.replace(/\\./g, \"/\") +\n        \".json\");\n      return (this._loadingPromise = qxl.apiviewer.RequestUtil.get(url)\n        .then((content) => {\n          /* eslint-disable-next-line no-eval */\n          var meta = eval(\"(\" + content + \")\");\n          return this._initMeta(meta).then(() => {\n            this._loaded = true;\n            return this;\n          });\n        })\n        .catch((e) => {\n          this.error(\"Couldn't load file: \" + url + \" \" + e.message);\n        }));\n    },\n\n    isLoaded() {\n      return this._loaded;\n    },\n\n    /**\n     * Loads meta data, including super classes/interfaces/mixins\n     * @param meta\n     * @return {qx.Promise}\n     */\n    _initMeta(meta) {\n      this.base(arguments, meta);\n\n      this._jsdoc = meta.clazz.jsdoc || {};\n\n      this._construct = meta.construct\n        ? [new qxl.apiviewer.dao.Method(meta.construct, this, \"construct\")]\n        : [];\n      this._destruct = meta.destruct\n        ? [new qxl.apiviewer.dao.Method(meta.destruct, this, \"destruct\")]\n        : [];\n      this._defer = meta.defer\n        ? [new qxl.apiviewer.dao.Method(meta.defer, this, \"defer\")]\n        : [];\n\n      this._staticMethods = [];\n      this._constants = [];\n      if (meta.statics) {\n        for (let name in meta.statics) {\n          let data = meta.statics[name];\n          if (data.type == \"variable\") {\n            this._constants.push(\n              new qxl.apiviewer.dao.Constant(data, this, name)\n            );\n          } else {\n            this._staticMethods.push(\n              new qxl.apiviewer.dao.Method(data, this, name)\n            );\n          }\n        }\n      }\n\n      this._members = [];\n      this._mixinMembers = [];\n      if (meta.members) {\n        for (let name in meta.members) {\n          let data = meta.members[name];\n          if (data.type == \"function\") {\n            let obj = new qxl.apiviewer.dao.Method(data, this, name);\n            if (data.mixin) {\n              this._mixinMembers.push(obj);\n            } else {\n              this._members.push(obj);\n            }\n          }\n        }\n      }\n\n      this._events = [];\n      this._mixinEvents = [];\n      if (meta.events) {\n        for (let name in meta.events) {\n          let data = meta.events[name];\n          let obj = new qxl.apiviewer.dao.Event(data, this);\n          if (data.mixin) {\n            this._mixinEvents.push(obj);\n          } else {\n            this._events.push(obj);\n          }\n        }\n      }\n\n      this._properties = [];\n      this._mixinProperties = [];\n      if (meta.properties) {\n        for (let name in meta.properties) {\n          let data = meta.properties[name];\n          let obj = new qxl.apiviewer.dao.Property(data, this, name);\n          if (data.mixin) {\n            this._mixinProperties.push(obj);\n          } else {\n            this._properties.push(obj);\n          }\n          let evt = obj.getEvent();\n          if (evt) {\n            let objE = new qxl.apiviewer.dao.Event(\n              {\n                location: obj.location,\n                name: evt,\n                type: \"qx.event.type.Data\",\n                jsdoc: {\n                  \"@description\": [\n                    {\n                      name: \"@description\",\n                      body: `Fired on change of the property {@link ${\n                        data.overriddenFrom || \"\"\n                      }#${name} ${name}}`,\n                    },\n                  ],\n                },\n              },\n\n              this\n            );\n            if (data.mixin) {\n              this._mixinEvents.push(objE);\n            } else {\n              this._events.push(objE);\n            }\n          }\n        }\n      }\n\n      this._childControls = [];\n      let arr = this._jsdoc[\"@childControl\"];\n      if (arr) {\n        arr.forEach((elem) => {\n          this._childControls.push(\n            new qxl.apiviewer.dao.ChildControl(elem, this)\n          );\n        });\n      }\n\n      var all = [];\n      /**\n       * @param tmp\n       */\n      function findClasses(tmp) {\n        let p = qxl.apiviewer.dao.Class.findClasses(tmp);\n        return p.then((classes) => {\n          classes.forEach((item) => {\n            all.push(item);\n          });\n          return classes;\n        });\n      }\n\n      this._superClass = null;\n      this._superInterfaces = [];\n      this._superMixins = [];\n      if (this._meta.type == \"interface\") {\n        all.push(\n          findClasses(meta.superClass).then(\n            (arr) => (this._superInterfaces = arr)\n          )\n        );\n      } else if (this._meta.type == \"mixin\") {\n        all.push(\n          findClasses(meta.superClass).then((arr) => (this._superMixins = arr))\n        );\n      } else {\n        all.push(\n          findClasses(meta.superClass).then(\n            (arr) => (this._superClass = arr[0] || null)\n          )\n        );\n      }\n      this._interfaces = [];\n      findClasses(meta.interfaces).then((arr) => (this._interfaces = arr));\n      this._mixins = [];\n      findClasses(meta.mixins).then((arr) => (this._mixins = arr));\n      return qx.Promise.all(all);\n    },\n\n    getPackage() {\n      return this._package;\n    },\n\n    /**\n     * Get the name of the class.\n     *\n     * @return {String} name of the class\n     */\n    getName() {\n      return this._className;\n    },\n\n    /**\n     * Get the full name of the class, including the package name.\n     *\n     * @return {String} full name of the class\n     */\n    getFullName() {\n      return this._className;\n    },\n\n    /**\n     * Get the package name of the class.\n     *\n     * @return {String} package name of the class\n     */\n    getPackageName() {\n      return this._package.getFullName();\n    },\n\n    /**\n     * Get type of the class. Valid types are \"class\", \"interface\" and \"mixin\".\n     *\n     * @return {String} The type of the class. Valid types are \"class\",\n     *         \"interface\" and \"mixin\".\n     */\n    getType() {\n      return this._meta.type;\n    },\n\n    /**\n     * Get whether the class is abstract.\n     *\n     * @return {Boolean} Whether the class is abstract.\n     */\n    isAbstract() {\n      return this._meta.isAbstract || false;\n    },\n\n    /**\n     * Get whether the class is a static class.\n     *\n     * @return {Boolean} Whether the class is static.\n     */\n    isStatic() {\n      return this._meta.isStatic || false;\n    },\n\n    /**\n     * Get whether the class is a singleton.\n     *\n     * @return {Boolean} Whether the class is a singleton.\n     */\n    isSingleton() {\n      return this._meta.isSingleton || false;\n    },\n\n    /**\n     * Get the super class of the class.\n     *\n     * @return {qxl.apiviewer.dao.Class} The super class of the class.\n     */\n    getSuperClass() {\n      return this._superClass;\n    },\n\n    /**\n     * Get the direct child classes of the class.\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} A list of direct child classes of the\n     *         class.\n     */\n    getChildClasses() {\n      if (!this._childClassesPromise) {\n        if (this._meta.type == \"class\") {\n          this._childClassesPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._childClassesPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._childClassesPromise;\n    },\n\n    /**\n     * Get all interfaces declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All interfaces declared at the class\n     *         declaration.\n     */\n    getInterfaces() {\n      return this._interfaces;\n    },\n\n    /**\n     * Get all super interfaces. (Only for interfaces)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super interfaces.\n     */\n    getSuperInterfaces() {\n      return this._superInterfaces;\n    },\n\n    /**\n     * Get all mixins declared at the class declaration.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All mixins declared at the class\n     *         declaration.\n     */\n    getMixins() {\n      return this._mixins;\n    },\n\n    /**\n     * Get all super mixins. (Only for mixins)\n     *\n     * @return {qxl.apiviewer.dao.Class[]} All super mixins.\n     */\n    getSuperMixins() {\n      return this._superMixins;\n    },\n\n    /**\n     * Get all classes including this mixin. (Only for mixins)\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} All classes including this mixin.\n     */\n    getIncluder() {\n      if (!this._includersPromise) {\n        if (this._meta.type == \"mixin\") {\n          this._includersPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._includersPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._includersPromise;\n    },\n\n    /**\n     * Get all implementations of this interface. (Only for interfaces)\n     *\n     * @return {qx.Promise<qxl.apiviewer.dao.Class[]>} All implementations of this interface.\n     */\n    getImplementations() {\n      if (!this._implementationsPromise) {\n        if (this._meta.type == \"interface\") {\n          this._implementationsPromise = qxl.apiviewer.dao.Class.findClasses(\n            this._meta.descendants\n          );\n        } else {\n          this._implementationsPromise = qx.Promise.resolve([]);\n        }\n      }\n      return this._implementationsPromise;\n    },\n\n    /**\n     * Get the constructor of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method} The constructor of the class.\n     */\n    getConstructor() {\n      return this._construct;\n    },\n\n    /**\n     * Get all child controls\n     *\n     * @return {qxl.apiviewer.dao.ChildControl[]} All child controls.\n     */\n    getChildControls() {\n      return this._childControls;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMembers() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMethods() {\n      return this._members;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     * @deprecated Is this used any more????\n     */\n    getMixinMembers() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the members of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The members of the class.\n     */\n    getMixinMethods() {\n      return this._mixinMembers;\n    },\n\n    /**\n     * Get the statics of the class.\n     *\n     * @return {qxl.apiviewer.dao.Method[]} The statics of the class.\n     */\n    getStatics() {\n      return this._staticMethods;\n    },\n\n    /**\n     * Get the events of the class.\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getEvents() {\n      return this._events;\n    },\n\n    /**\n     * Get the events of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Event[]} The events of the class.\n     */\n    getMixinEvents() {\n      return this._mixinEvents;\n    },\n\n    /**\n     * Get the properties of the class.\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getProperties() {\n      return this._properties;\n    },\n\n    /**\n     * Returns a property with a given name\n     * @param name\n     * @return {qxl.apiviewer.dao.Property} The named property\n     */\n    getProperty(name) {\n      for (var i = 0; i < this._properties.length; i++) {\n        var prop = this._properties[i];\n        if (prop.getName() == name) {\n          return prop;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Get the properties of the class, contributed from mixins\n     *\n     * @return {qxl.apiviewer.dao.Property[]} The properties of the class.\n     */\n    getMixinProperties() {\n      return this._mixinProperties;\n    },\n\n    /**\n     * Get the constants of the class.\n     *\n     * @return {qxl.apiviewer.dao.Constant[]} The constants of the class.\n     */\n    getConstants() {\n      return this._constants;\n    },\n\n    /**\n     * Get all references declared using the \"see\" attribute.\n     *\n     * @return {String[]} A list of all references declared using the \"see\" attribute.\n     */\n    getSee() {\n      return (this._jsdoc[\"@see\"] || []).map((item) => item.body);\n    },\n\n    getErrors() {\n      return [];\n    },\n\n    /* COMPLEX FUNCTIONS */\n\n    /**\n     * Get the documentation nodes of all classes in the inheritance chain of a\n     * class. The first entry in the list is the class itself.\n     *\n     * @param includeNativeObjects\n     *          {Boolean} true if you want to get native JS objects too\n     * @return {qxl.apiviewer.dao.Class[]} array of super classes of the given\n     *         class.\n     */\n    getClassHierarchy(includeNativeObjects) {\n      var result = [];\n      for (\n        var currentClass = this;\n        currentClass;\n        currentClass = currentClass.getSuperClass()\n      ) {\n        var isNative = qxl.apiviewer.dao.Class.isNativeObject(currentClass);\n        if (!isNative || includeNativeObjects) {\n          result.push(currentClass);\n        }\n        if (isNative) {\n          break;\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Get the documentation nodes of all interfaces in the inheritance chain of\n     * an interface. The first entry in the list is the interface itself.\n     *\n     * @return {qxl.apiviewer.dao.Class[]} array of super interfaces of the given\n     *         interface.\n     */\n    getInterfaceHierarchy() {\n      var result = [];\n\n      /**\n       * @param currentClass\n       */\n      function add(currentClass) {\n        result.push(currentClass);\n        currentClass.getSuperInterfaces().forEach((itf) => add(itf));\n      }\n      add(this);\n\n      return result;\n    },\n\n    /**\n     * Returns a list of all interfaces the class implements directly.\n     *\n     * @param includeSuperClasses\n     *          {Boolean?false} Whether the interfaces of all super classes\n     *          should be returned as well.\n     */\n    getAllInterfaces(includeSuperClasses) {\n      var interfaceNodes = [];\n\n      let ifaceRecurser = (ifaceNode) => {\n        interfaceNodes.push(ifaceNode);\n        (ifaceNode.getSuperInterfaces() || []).forEach(ifaceRecurser);\n      };\n\n      var classNodes = includeSuperClasses ? this.getClassHierarchy() : [this];\n      classNodes.forEach((classNode) => {\n        (classNode.getInterfaces() || []).forEach(ifaceRecurser);\n      });\n\n      return interfaceNodes;\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName\n     *          {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItemByNameFromMixins(itemName) {\n      return (\n        this._mixinMembers[itemName] ||\n        this._mixinProperties[itemName] ||\n        this._mixinEvents[itemName] ||\n        null\n      );\n    },\n\n    /**\n     * Return a class item matching the given name.\n     *\n     * @param itemName {String} name of the class item\n     * @return {qxl.apiviewer.dao.ClassItem} the class item.\n     */\n    getItem(itemName) {\n      var itemListNames = [\n        \"getMembers\",\n        \"getStatics\",\n        \"getEvents\",\n        \"getProperties\",\n        \"getConstants\",\n        // \"getAppearances\",\n        \"getChildControls\",\n      ];\n\n      for (var i = 0; i < itemListNames.length; i++) {\n        var list = this[itemListNames[i]]();\n        if (list) {\n          for (var j = 0; j < list.length; j++) {\n            if (itemName == list[j].getName()) {\n              return list[j];\n            }\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Get an array of class items matching the given list name. Known list names are:\n     * <ul>\n     *   <li>events</li>\n     *   <li>constructor</li>\n     *   <li>properties</li>\n     *   <li>methods</li>\n     *   <li>methods-static</li>\n     *   <li>constants</li>\n     *   <li>appearances</li>\n     *   <li>superInterfaces</li>\n     *   <li>superMixins</li>\n     * </li>\n     *\n     * @param listName {String} name of the item list\n     * @return {apiviewer.dao.ClassItem[]} item list\n     */\n    getItemList(listName) {\n      var methodMap = {\n        events: \"getEvents\",\n        constructor: \"getConstructor\",\n        properties: \"getProperties\",\n        methods: \"getMembers\",\n        \"methods-static\": \"getStatics\",\n        constants: \"getConstants\",\n        //        \"appearances\" : \"getAppearances\",\n        superInterfaces: \"getSuperInterfaces\",\n        superMixins: \"getSuperMixins\",\n        childControls: \"getChildControls\",\n      };\n\n      if (listName == \"constructor\") {\n        return this.getConstructor() ? [this.getConstructor()] : [];\n      }\n      return this[methodMap[listName]]();\n    },\n\n    /**\n     * Get a class item by the item list name and the item name.\n     * Valid item list names are documented at {@link #getItemList}.\n     * .\n     * @param listName {String} name of the item list.\n     * @param itemName {String} name of the class item.\n     * @return {apiviewer.dao.ClassItem} the matching class item.\n     */\n    getItemByListAndName(listName, itemName) {\n      var list = this.getItemList(listName);\n      for (var j = 0; j < list.length; j++) {\n        if (itemName == list[j].getName()) {\n          return list[j];\n        }\n      }\n      return null;\n    },\n\n    loadDependedClasses() {\n      return qxl.apiviewer.ClassLoader.loadClassList(this.getDependedClasses());\n    },\n\n    /**\n     * Return a list of all classes, mixins and interfaces this class depends\n     * on. This includes all super classes and their mixins/interfaces and the\n     * class itself.\n     *\n     * @return {qx.Promise<Class[]>} array of dependent classes.\n     */\n    getDependedClasses() {\n      let foundClasses = [];\n      /**\n       * @param clazz\n       */\n      function findClasses(clazz) {\n        if (qxl.apiviewer.dao.Class.isNativeObject(clazz)) {\n          return;\n        }\n        clazz.load().then(() => {});\n\n        foundClasses.push(clazz);\n        clazz.getSuperClass() && findClasses(clazz.getSuperClass());\n        (clazz.getMixins() || []).forEach(() => findClasses);\n        (clazz.getSuperMixins() || []).forEach(() => findClasses);\n        (clazz.getInterfaces() || []).forEach(() => findClasses);\n        (clazz.getSuperInterfaces() || []).forEach(() => findClasses);\n      }\n\n      findClasses(this);\n      return foundClasses;\n    },\n  },\n\n  statics: {\n    _native_classes: {\n      Array: Array,\n      Boolean: Boolean,\n      Date: Date,\n      Error: Error,\n      Function: Function,\n      Math: Math,\n      Number: Number,\n      Object: Object,\n      RegExp: RegExp,\n      String: String,\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     * @param className\n     * {String} name of the class\n     * @param create\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassByName(className, create) {\n      var nativeClass = qxl.apiviewer.dao.Class._native_classes[className];\n      if (nativeClass !== undefined) {\n        return nativeClass;\n      }\n\n      var pkg = qxl.apiviewer.dao.Package.getParentPackage(className);\n      if (!pkg) {\n        throw new Error(\"Cannot find a package for \" + className);\n      }\n\n      var cls = pkg.getClassByName(className);\n      if (!cls && create) {\n        cls = new qxl.apiviewer.dao.Class(className);\n      }\n      return cls;\n    },\n\n    /**\n     * Get a class documentation by the class name.\n     * @param classNames\n     * @param create\n     * @return {qxl.apiviewer.dao.Class} The class documentation\n     */\n    getClassesByName(classNames, create) {\n      classNames = qx.lang.Array.toNativeArray(classNames);\n      var result = classNames.map((name) =>\n        qxl.apiviewer.dao.Class.getClassByName(name, create)\n      );\n      return result;\n    },\n\n    findClasses(name) {\n      if (!name) {\n        return qx.Promise.resolve([]);\n      }\n      var all = qx.lang.Array.toNativeArray(name)\n        .filter((name) => !qxl.apiviewer.dao.Class._native_classes[name])\n        .map((name) => {\n          let c = qxl.apiviewer.dao.Class.getClassByName(name);\n          if (c) {\n            c.load();\n          }\n          return c;\n        });\n      return qx.Promise.all(all);\n    },\n\n    /**\n     * Checks if the Class is a qooxdoo qxl.apiviewer.dao.Class Object or a native\n     * one\n     *\n     * @param clazz\n     *          {qxl.apiviewer.dao.Class} the object to be checked\n     * @return {Boolean} true if it is a JS native object\n     */\n    isNativeObject(clazz) {\n      return clazz.classname !== \"qxl.apiviewer.dao.Class\";\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}