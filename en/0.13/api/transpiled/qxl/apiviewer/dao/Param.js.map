{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "meta",
    "method",
    "_meta",
    "_method",
    "_types",
    "type",
    "lang",
    "Array",
    "toNativeArray",
    "map",
    "arrayDimensions",
    "dimensions",
    "m",
    "match",
    "length",
    "members",
    "_arrayDimensions",
    "getMethod",
    "getClass",
    "getName",
    "paramName",
    "getTypes",
    "getArrayDimensions",
    "getDefaultValue",
    "defaultValue",
    "isOptional",
    "Boolean",
    "optional",
    "getDescription",
    "description",
    "body",
    "qxl",
    "apiviewer",
    "dao",
    "Param"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/dao/Param.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Represents a parameter or return type, taken from JSDoc meta data\n *\n * Example data:\n *      qooxdoo style\n        \"@param\": [\n          {\n            \"name\": \"@param\",\n            \"body\": \"options {Map?null} Optional layout data for widget.\",\n            \"paramName\": \"options\",\n            \"description\": \" Optional layout data for widget.\",\n            \"optional\": true,\n            \"defaultValue\": \"null\",\n            \"type\": \"Map\"\n          }\n        ],\n        jsdoc style\n        \"@param\": [\n          {\n            \"name\": \"@param\",\n            \"body\": \"{Map?null} options Optional layout data for widget.\",\n            \"paramName\": \"options\",\n            \"description\": \" Optional layout data for widget.\",\n            \"optional\": true,\n            \"defaultValue\": \"null\",\n            \"type\": \"Map\"\n          }\n        ],\n        \"@return\": [\n          {\n            \"name\": \"@return\",\n            \"body\": \"{Integer} The index position or <code>-1</code> when\\nthe given widget is no child of this layout.\",\n            \"docComment\": \"\",\n            \"type\": \"Integer\",\n            \"desc\": \" The index position or <code>-1</code> when\\nthe given widget is no child of this layout.\"\n          }\n        ]\n */\nqx.Class.define(\"qxl.apiviewer.dao.Param\", {\n  extend: qx.core.Object,\n\n  construct(meta, method) {\n    this.base(arguments);\n    this._meta = meta;\n    this._method = method;\n    this._types = [{ type: \"var\" }];\n    if (meta.type) {\n      this._types = qx.lang.Array.toNativeArray(meta.type).map((type) => {\n        if (typeof type === \"object\") {\n          return { type: type.type, arrayDimensions: type.dimensions };\n        }\n        var m = type.match(/^([^[]+)((\\[\\])+)?$/);\n        if (m && m[2]) {\n          return { type: m[1], arrayDimensions: m[2].length / 2 };\n        }\n        return { type: type };\n      });\n    }\n  },\n\n  members: {\n    _method: null,\n    _meta: null,\n    _types: null,\n    _arrayDimensions: 0,\n\n    getMethod() {\n      return this._method;\n    },\n\n    getClass() {\n      return this._method.getClass();\n    },\n\n    getName() {\n      return this._meta.paramName;\n    },\n\n    getTypes() {\n      return this._types;\n    },\n\n    getArrayDimensions() {\n      return this._arrayDimensions;\n    },\n\n    getDefaultValue() {\n      return this._meta.defaultValue;\n    },\n\n    isOptional() {\n      return Boolean(this._meta.optional);\n    },\n    getDescription() {\n      return this._meta.description || this._meta.body;\n    },\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EAA2C;IACzCC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADyB;IAGzCC,SAHyC,qBAG/BC,IAH+B,EAGzBC,MAHyB,EAGjB;MACtB;MACA,KAAKC,KAAL,GAAaF,IAAb;MACA,KAAKG,OAAL,GAAeF,MAAf;MACA,KAAKG,MAAL,GAAc,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD,CAAd;;MACA,IAAIL,IAAI,CAACK,IAAT,EAAe;QACb,KAAKD,MAAL,GAAcd,EAAE,CAACgB,IAAH,CAAQC,KAAR,CAAcC,aAAd,CAA4BR,IAAI,CAACK,IAAjC,EAAuCI,GAAvC,CAA2C,UAACJ,IAAD,EAAU;UACjE,IAAI,QAAOA,IAAP,MAAgB,QAApB,EAA8B;YAC5B,OAAO;cAAEA,IAAI,EAAEA,IAAI,CAACA,IAAb;cAAmBK,eAAe,EAAEL,IAAI,CAACM;YAAzC,CAAP;UACD;;UACD,IAAIC,CAAC,GAAGP,IAAI,CAACQ,KAAL,CAAW,qBAAX,CAAR;;UACA,IAAID,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAV,EAAe;YACb,OAAO;cAAEP,IAAI,EAAEO,CAAC,CAAC,CAAD,CAAT;cAAcF,eAAe,EAAEE,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,GAAc;YAA7C,CAAP;UACD;;UACD,OAAO;YAAET,IAAI,EAAEA;UAAR,CAAP;QACD,CATa,CAAd;MAUD;IACF,CApBwC;IAsBzCU,OAAO,EAAE;MACPZ,OAAO,EAAE,IADF;MAEPD,KAAK,EAAE,IAFA;MAGPE,MAAM,EAAE,IAHD;MAIPY,gBAAgB,EAAE,CAJX;MAMPC,SANO,uBAMK;QACV,OAAO,KAAKd,OAAZ;MACD,CARM;MAUPe,QAVO,sBAUI;QACT,OAAO,KAAKf,OAAL,CAAae,QAAb,EAAP;MACD,CAZM;MAcPC,OAdO,qBAcG;QACR,OAAO,KAAKjB,KAAL,CAAWkB,SAAlB;MACD,CAhBM;MAkBPC,QAlBO,sBAkBI;QACT,OAAO,KAAKjB,MAAZ;MACD,CApBM;MAsBPkB,kBAtBO,gCAsBc;QACnB,OAAO,KAAKN,gBAAZ;MACD,CAxBM;MA0BPO,eA1BO,6BA0BW;QAChB,OAAO,KAAKrB,KAAL,CAAWsB,YAAlB;MACD,CA5BM;MA8BPC,UA9BO,wBA8BM;QACX,OAAOC,OAAO,CAAC,KAAKxB,KAAL,CAAWyB,QAAZ,CAAd;MACD,CAhCM;MAiCPC,cAjCO,4BAiCU;QACf,OAAO,KAAK1B,KAAL,CAAW2B,WAAX,IAA0B,KAAK3B,KAAL,CAAW4B,IAA5C;MACD;IAnCM;EAtBgC,CAA3C;EA1DAC,GAAG,CAACC,SAAJ,CAAcC,GAAd,CAAkBC,KAAlB,CAAwBzC,aAAxB,GAAwCA,aAAxC"
}