{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "Node",
    "construct",
    "meta",
    "parentClass",
    "name",
    "constructor",
    "call",
    "_class",
    "_name",
    "members",
    "getClass",
    "getName",
    "getFullName",
    "getTypes",
    "result",
    "arr",
    "_jsdoc",
    "map",
    "item",
    "type",
    "dims",
    "match",
    "dimensions",
    "length",
    "getSee",
    "body",
    "getOverriddenFrom",
    "_meta",
    "overriddenFrom",
    "getClassByName",
    "isRequiredByInterface",
    "ifaceNode",
    "Error",
    "classname",
    "getRequiredBy",
    "_requiredBy",
    "requiredBy",
    "interfaces",
    "getAllInterfaces",
    "j",
    "push",
    "destruct",
    "_itemDocNode",
    "_see",
    "_types",
    "ClassItem"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_1/source/class/qxl/apiviewer/dao/ClassItem.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This Class wraps the access to the documentation data of a class item.\n */\nqx.Class.define(\"qxl.apiviewer.dao.ClassItem\", {\n  extend: qxl.apiviewer.dao.Node,\n\n  /**\n   * @param meta\n   * @param parentClass {qxl.apiviewer.dao.Class} reference to the class this item belongs to\n   * @param name {String} name of the list in the JSON structure of the class\n   */\n  construct(meta, parentClass, name) {\n    this.base(arguments, meta);\n    this._class = parentClass;\n    this._name = name;\n  },\n\n  members: {\n    _class: null,\n    _name: null,\n\n    /**\n     * Get the class, this item belongs to\n     *\n     * @return {qxl.apiviewer.dao.Class} the class this item belongs to\n     */\n    getClass() {\n      return this._class;\n    },\n\n    /**\n     * Get the name of the item.\n     *\n     * @return {String} name of the item\n     */\n    getName() {\n      return this._name;\n    },\n\n    getFullName() {\n      return this.getClass().getFullName() + \"#\" + this._name;\n    },\n\n    /**\n     * Get the types of the item.\n     *\n     * @return {Map[]} Array of types of the item. A type has the keys 'type' and 'dimensions', where\n     * dimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\n     * dimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined\n     */\n    getTypes() {\n      var result = [];\n      var arr = this._jsdoc[\"@param\"];\n      if (arr) {\n        arr.map((item) => {\n          var result = {\n            type: item.type,\n          };\n\n          if (result.type) {\n            var dims = result.type.match(/\\[\\]/g);\n            if (dims) {\n              result.dimensions = dims.length;\n            }\n          }\n          return result;\n        });\n      }\n      return result;\n    },\n\n    /**\n     * Get all references declared using the \"see\" attribute.\n     *\n     * @return {String[]} A list of all references declared using the \"see\" attribute.\n     */\n    getSee() {\n      return (this._jsdoc[\"@see\"] || []).map((item) => item.body);\n    },\n\n    /**\n     * If the item is overwridden from one of the super classes, get the item, which is overwridden.\n     *\n     * @return {ClassItem} the overwridden class item\n     */\n    getOverriddenFrom() {\n      return this._meta.overriddenFrom\n        ? qxl.apiviewer.dao.Class.getClassByName(this._meta.overriddenFrom)\n        : null;\n    },\n\n    /**\n     * Checks whether the node is required by the given interface.\n     *\n     * @param ifaceNode {qxl.apiviewer.dao.Class} interface to check for\n     * @return {Boolean} whether the item is required by the interface.\n     */\n    isRequiredByInterface(ifaceNode) {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".isRequiredByInterface\"\n      );\n    },\n\n    /**\n     * Get the interface this item is required by.\n     *\n     * @return {qxl.apiviewer.dao.Class} The interface this item is required by.\n     */\n    getRequiredBy() {\n      if (this._requiredBy) {\n        return this._requiredBy;\n      }\n\n      var requiredBy = [];\n      var interfaces = this.getClass().getAllInterfaces(true);\n\n      for (var j = 0; j < interfaces.length; j++) {\n        if (this.isRequiredByInterface(interfaces[j])) {\n          requiredBy.push(interfaces[j]);\n        }\n      }\n      this._requiredBy = requiredBy;\n      return requiredBy;\n    },\n  },\n\n  /*\n  *****************************************************************************\n    DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._class =\n      this._itemDocNode =\n      this._requiredBy =\n      this._see =\n      this._types =\n        null;\n  },\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}