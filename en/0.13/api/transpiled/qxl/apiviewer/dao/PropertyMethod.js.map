{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "apiviewer",
    "dao",
    "ClassItem",
    "construct",
    "meta",
    "clazz",
    "name",
    "prefix",
    "constructor",
    "call",
    "type",
    "json",
    "check",
    "_params",
    "Param",
    "concat",
    "_return",
    "_throws",
    "_applyFor",
    "members",
    "_propertyName",
    "isStatic",
    "_meta",
    "isAbstract",
    "isAsync",
    "async",
    "isConstructor",
    "getName",
    "isFromProperty",
    "Boolean",
    "property",
    "isDeprecated",
    "PropertyMethod",
    "superclass",
    "prototype",
    "getFromProperty",
    "getParams",
    "getReturn",
    "getThrows",
    "getClass",
    "getProperty",
    "getApplyFor",
    "isRequiredByInterface",
    "iface",
    "_this",
    "getMethods",
    "some",
    "method"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_1/source/class/qxl/apiviewer/dao/PropertyMethod.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qxl.apiviewer.dao.PropertyMethod\", {\n  extend: qxl.apiviewer.dao.ClassItem,\n\n  /**\n   * Constructor for methods generated from properties\n   * \n   * @param {*} meta the meta data for the property\n   * @param {qxl.apiviewer.dao.Class} clazz \n   * @param {String} name \n   * @param {String} prefix - \"get\", \"set\", etc\n   */\n  construct(meta, clazz, name, prefix) {\n    this.base(arguments, meta, clazz, name);\n\n    let type = meta.json.check;\n    if (typeof type != \"string\") {\n      type = \"any\";\n    }\n    this._params = [];\n    if (prefix == \"set\") {\n      this._params = [\n        new qxl.apiviewer.dao.Param({\n            \"name\": \"@param\",\n            \"body\": `value {${type}} The value to set for the property ${name}`,\n            \"paramName\": \"value\",\n            \"description\": `Sets the ${name} property.`,\n            \"type\": type\n          }, this)\n      ]\n    }\n    if (prefix == \"get\" || prefix == \"is\") {\n      this._return = new qxl.apiviewer.dao.Param({\n            \"name\": \"@return\",\n            \"body\": `{${type}} The value to of the property ${name}`,\n            \"description\": `The ${name} property.`,\n            \"type\": type\n          }, this)\n    }\n    this._throws = [];\n    this._applyFor = [];\n  },\n\n  members: {\n    _params: null,\n    _return: null,\n    _throws: null,\n    _propertyName: null,\n    _applyFor: null,\n\n    isStatic() {\n      return this._meta.isStatic || false;\n    },\n\n    isAbstract() {\n      return this._meta.isAbstract || false;\n    },\n\n    isAsync() {\n      return this._meta.async || false;\n    },\n\n    isConstructor() {\n      return this.getName() == \"construct\";\n    },\n\n    isFromProperty() {\n      return Boolean(this._meta.property);\n    },\n\n    /**\n     * @Override\n     */\n    isDeprecated() {\n      return (\n        this.base(arguments)  ||\n        (this.getFromProperty() && this.getFromProperty().isDeprecated())\n      );\n    },\n\n    getParams() {\n      return this._params;\n    },\n\n    getReturn() {\n      return this._return;\n    },\n\n    getThrows() {\n      return this._throws;\n    },\n\n    getFromProperty() {\n      return this._propertyName\n        ? this.getClass().getProperty(this._propertyName)\n        : null;\n    },\n\n    getApplyFor() {\n      return this._applyFor;\n    },\n\n    /**\n     * @Override\n     */\n    isRequiredByInterface(iface) {\n      return (iface.getMethods() || []).some(\n        (method) => method.getName() == this.getName()\n      );\n    },\n  },\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}