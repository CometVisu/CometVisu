{
  "className": "qxl.apiviewer.dao.ClassItem",
  "packageName": "qxl.apiviewer.dao",
  "name": "ClassItem",
  "superClass": "qxl.apiviewer.dao.Node",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 645
      },
      "end": {
        "line": 161,
        "column": 3,
        "index": 4234
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This Class wraps the access to the documentation data of a class item.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 932
      },
      "end": {
        "line": 36,
        "column": 3,
        "index": 1058
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "meta",
          "paramName": "meta",
          "type": ""
        },
        {
          "name": "@param",
          "body": "parentClass {qxl.apiviewer.dao.Class} reference to the class this item belongs to",
          "paramName": "parentClass",
          "description": " reference to the class this item belongs to",
          "type": "qxl.apiviewer.dao.Class"
        },
        {
          "name": "@param",
          "body": "name {String} name of the list in the JSON structure of the class",
          "paramName": "name",
          "description": " name of the list in the JSON structure of the class",
          "type": "String"
        }
      ]
    }
  },
  "members": {
    "_class": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1078
        },
        "end": {
          "line": 39,
          "column": 16,
          "index": 1090
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_name": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1096
        },
        "end": {
          "line": 40,
          "column": 15,
          "index": 1107
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getClass": {
      "location": {
        "start": {
          "line": 47,
          "column": 4,
          "index": 1252
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1296
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the class, this item belongs to</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} the class this item belongs to",
            "type": "qxl.apiviewer.dao.Class",
            "description": " the class this item belongs to"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getName": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1400
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1442
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the name of the item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} name of the item",
            "type": "String",
            "description": " name of the item"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFullName": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1449
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1533
        }
      },
      "type": "function",
      "access": "public"
    },
    "getTypes": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1885
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2321
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the types of the item.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} Array of types of the item. A type has the keys 'type' and 'dimensions', where\n dimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\n dimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined",
            "type": "Map[]",
            "description": " Array of types of the item. A type has the keys 'type' and 'dimensions', where\n dimensions is the number of array dimensions (eg \"Integer[][]\" has a type of \"Integer\" and\n dimensions of 2, and \"Integer\" has type if \"Integer\" but dimensions is undefined"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSee": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2500
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2583
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get all references declared using the \"see\" attribute.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} A list of all references declared using the \"see\" attribute.",
            "type": "String[]",
            "description": " A list of all references declared using the \"see\" attribute."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getOverriddenFrom": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2768
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2926
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If the item is overwridden from one of the super classes, get the item, which is overwridden.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{ClassItem} the overwridden class item",
            "type": "qxl.apiviewer.dao.ClassItem",
            "description": " the overwridden class item"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRequiredByInterface": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 3168
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 3317
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks whether the node is required by the given interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ifaceNode {qxl.apiviewer.dao.Class} interface to check for",
            "paramName": "ifaceNode",
            "description": " interface to check for",
            "type": "qxl.apiviewer.dao.Class"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the item is required by the interface.",
            "type": "Boolean",
            "description": " whether the item is required by the interface."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRequiredBy": {
      "location": {
        "start": {
          "line": 129,
          "column": 4,
          "index": 3479
        },
        "end": {
          "line": 144,
          "column": 5,
          "index": 3896
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the interface this item is required by.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qxl.apiviewer.dao.Class} The interface this item is required by.",
            "type": "qxl.apiviewer.dao.Class",
            "description": " The interface this item is required by."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qxl.apiviewer.dao.Node",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 153,
        "column": 2,
        "index": 4092
      },
      "end": {
        "line": 160,
        "column": 3,
        "index": 4229
      }
    },
    "jsdoc": {}
  },
  "descendants": [
    "qxl.apiviewer.dao.Method",
    "qxl.apiviewer.dao.Constant",
    "qxl.apiviewer.dao.Event",
    "qxl.apiviewer.dao.Property",
    "qxl.apiviewer.dao.ChildControl"
  ]
}