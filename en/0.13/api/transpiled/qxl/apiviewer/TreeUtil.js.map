{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "statics",
    "getChild",
    "docNode",
    "childType",
    "children",
    "i",
    "length",
    "type",
    "getChildByAttribute",
    "attributeName",
    "attributeValue",
    "node",
    "attributes",
    "getIconUrl",
    "inherited",
    "constName",
    "dao",
    "qxl",
    "apiviewer",
    "Package",
    "getType",
    "isStatic",
    "isAbstract",
    "isSingleton",
    "Property",
    "isPublic",
    "isProtected",
    "isPrivate",
    "isInternal",
    "isThemeable",
    "Event",
    "Method",
    "isConstructor",
    "getClass",
    "Constant",
    "ChildControl",
    "ClassItem",
    "getOverriddenFrom",
    "getErrors",
    "hasWarning",
    "TreeUtil",
    "iconNameToIconPath",
    "iconName",
    "iconUrl",
    "iconParts",
    "split",
    "itemName",
    "startIndex",
    "Error",
    "iconPart",
    "push",
    "ICON_BLANK",
    "OVERLAY_ABSTRACT",
    "OVERLAY_ERROR",
    "OVERLAY_INHERITED",
    "OVERLAY_OVERRIDDEN",
    "OVERLAY_THEMEABLE",
    "OVERLAY_STATIC",
    "OVERLAY_WARN",
    "OVERLAY_MIXIN",
    "ICON_PACKAGE",
    "ICON_PACKAGE_WARN",
    "ICON_CLASS",
    "ICON_CLASS_WARN",
    "ICON_CLASS_ERROR",
    "ICON_CLASS_STATIC",
    "ICON_CLASS_STATIC_WARN",
    "ICON_CLASS_STATIC_ERROR",
    "ICON_CLASS_ABSTRACT",
    "ICON_CLASS_ABSTRACT_WARN",
    "ICON_CLASS_ABSTRACT_ERROR",
    "ICON_CLASS_SINGLETON",
    "ICON_CLASS_SINGLETON_WARN",
    "ICON_CLASS_SINGLETON_ERROR",
    "ICON_PROPERTY_PUB",
    "ICON_PROPERTY_PROT",
    "ICON_PROPERTY_PRIV",
    "ICON_PROPERTY_INTERN",
    "ICON_PROPERTY_PUB_THEMEABLE",
    "ICON_EVENT",
    "ICON_ENTRY",
    "ICON_INTERFACE",
    "ICON_INTERFACE_WARN",
    "ICON_MIXIN",
    "ICON_MIXIN_WARN",
    "ICON_METHOD_PUB",
    "ICON_METHOD_PUB_INHERITED",
    "ICON_CTOR",
    "ICON_METHOD_PROT",
    "ICON_METHOD_PRIV",
    "ICON_METHOD_INTERN",
    "ICON_CONSTANT",
    "ICON_APPEARANCE",
    "ICON_CHILDCONTROL",
    "defer",
    "members",
    "properties",
    "PRELOAD_IMAGES",
    "ICON_INFO",
    "ICON_SEARCH"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/TreeUtil.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A util class for handling the documentation tree.\n *\n * @ignore(qxl.apiviewer.dao)\n */\nqx.Class.define(\"qxl.apiviewer.TreeUtil\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n   CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n  },\n\n  /*\n  *****************************************************************************\n   STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Gets the child of a doc node having a certain type.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param childType {String} the type of the child to get.\n     * @return {Map} the wanted child or <code>null</code> if <code>docNode</code>\n     *           is <code>null</code> or has no such child.\n     */\n    getChild(docNode, childType) {\n      if (docNode && docNode.children) {\n        for (var i = 0; i < docNode.children.length; i++) {\n          if (docNode.children[i].type == childType) {\n            return docNode.children[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets the child of a doc node having a certain attribute value.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param attributeName {String} the name of the attribute the wanted child must have.\n     * @param attributeValue {String} the value of the attribute the wanted child must have.\n     * @return {Map} the wanted child or <code>code</code> if there is no such child.\n     */\n    getChildByAttribute(docNode, attributeName, attributeValue) {\n      if (docNode.children) {\n        for (var i = 0; i < docNode.children.length; i++) {\n          var node = docNode.children[i];\n\n          if (\n            node.attributes &&\n            node.attributes[attributeName] == attributeValue\n          ) {\n            return node;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets the icon URL of a doc node.\n     *\n     * @param node {Map} the node to get the icon for.\n     * @param inherited {Boolean? false} whether the node was inherited.\n     * @return {var} the URL of the icon. May be a string or an array of string\n     *           (in case of an overlay icon).\n     * @throws {Error} If node is of an unknown type.\n     */\n    getIconUrl(node, inherited) {\n      var constName;\n      var dao = qxl.apiviewer.dao;\n\n      if (node instanceof dao.Package) {\n        constName = \"ICON_PACKAGE\";\n      } else if (node instanceof dao.Class) {\n        switch (node.getType()) {\n          case \"mixin\":\n            constName = \"ICON_MIXIN\";\n            break;\n\n          case \"interface\":\n            constName = \"ICON_INTERFACE\";\n            break;\n\n          default:\n            constName = \"ICON_CLASS\";\n            if (node.isStatic()) {\n              constName += \"_STATIC\";\n            } else if (node.isAbstract()) {\n              constName += \"_ABSTRACT\";\n            } else if (node.isSingleton()) {\n              constName += \"_SINGLETON\";\n            }\n        }\n      } else if (node instanceof dao.Property) {\n        constName = \"ICON_PROPERTY\";\n        if (node.isPublic()) {\n          constName += \"_PUB\";\n        } else if (node.isProtected()) {\n          constName += \"_PROT\";\n        } else if (node.isPrivate()) {\n          constName += \"_PRIV\";\n        } else if (node.isInternal()) {\n          constName += \"_INTERN\";\n        }\n        if (node.isThemeable()) {\n          constName += \"_THEMEABLE\";\n        }\n      } else if (node instanceof dao.Event) {\n        constName = \"ICON_EVENT\";\n      } else if (node instanceof dao.Method) {\n        if (node.isConstructor()) {\n          constName = \"ICON_CTOR\";\n        } else {\n          constName = \"ICON_METHOD\";\n          if (node.isPublic()) {\n            constName += \"_PUB\";\n          } else if (node.isProtected()) {\n            constName += \"_PROT\";\n          } else if (node.isPrivate()) {\n            constName += \"_PRIV\";\n          } else if (node.isInternal()) {\n            constName += \"_INTERN\";\n          }\n        }\n\n        if (node.isStatic()) {\n          constName += \"_STATIC\";\n        } else if (node.isAbstract()) {\n          constName += \"_ABSTRACT\";\n        }\n\n        if (node.getClass().getType() == \"mixin\") {\n          constName += \"_MIXIN\";\n        }\n      } else if (node instanceof dao.Constant) {\n        constName = \"ICON_CONSTANT\";\n      } else if (node instanceof dao.ChildControl) {\n        constName = \"ICON_CHILDCONTROL\";\n      } else {\n        //        throw new Error(\"Unknown node type: \" + (node.type || node.name));\n      }\n\n      /*\n      if (node.attributes.isMixin) {\n        constName += \"_MIXIN\";\n      }\n      */\n\n      if (node instanceof dao.ClassItem) {\n        if (inherited) {\n          constName += \"_INHERITED\";\n        } else if (node.getOverriddenFrom && node.getOverriddenFrom()) {\n          constName += \"_OVERRIDDEN\";\n        }\n\n        if (node.getErrors().length > 0) {\n          constName += \"_ERROR\";\n        }\n      }\n\n      if (node.hasWarning ? node.hasWarning() : false) {\n        constName += \"_WARN\";\n      }\n\n      return qxl.apiviewer.TreeUtil.iconNameToIconPath(constName);\n    },\n\n    iconNameToIconPath(iconName) {\n      if (!iconName) {\n        return \"\";\n      }\n      var iconUrl = qxl.apiviewer.TreeUtil[iconName];\n\n      if (!iconUrl) {\n        var iconParts = iconName.split(\"_\");\n        var itemName = iconParts[0] + \"_\" + iconParts[1];\n        if (\n          iconParts[2] == \"PUB\" ||\n          iconParts[2] == \"PROT\" ||\n          iconParts[2] == \"PRIV\" ||\n          iconParts[2] == \"INTERN\"\n        ) {\n          itemName += \"_\" + iconParts[2];\n          var startIndex = 3;\n        } else {\n          startIndex = 2;\n        }\n        iconUrl = [qxl.apiviewer.TreeUtil[itemName]];\n        if (iconUrl[0] === null) {\n          throw new Error(\"Unknown img constant: \" + itemName);\n        }\n        for (var i = startIndex; i < iconParts.length; i++) {\n          var iconPart = qxl.apiviewer.TreeUtil[\"OVERLAY_\" + iconParts[i]];\n          if (iconPart === null) {\n            throw new Error(\"Unknown img constant: OVERLAY_\" + iconParts[i]);\n          }\n          iconUrl.push(iconPart);\n        }\n      }\n      return iconUrl;\n    },\n\n    /** {string} The URL of the blank icon. */\n    ICON_BLANK: \"qxl/apiviewer/image/blank.gif\",\n\n    /** {string} The URL of the overlay \"abstract\". */\n    OVERLAY_ABSTRACT: \"qxl/apiviewer/image/overlay_abstract18.gif\",\n\n    /** {string} The URL of the overlay \"error\". */\n    OVERLAY_ERROR: \"qxl/apiviewer/image/overlay_error18.gif\",\n\n    /** {string} The URL of the overlay \"inherited\". */\n    OVERLAY_INHERITED: \"qxl/apiviewer/image/overlay_inherited18.gif\",\n\n    /** {string} The URL of the overlay \"overridden\". */\n    OVERLAY_OVERRIDDEN: \"qxl/apiviewer/image/overlay_overridden18.gif\",\n\n    /** {string} The URL of the overlay \"themeable\". */\n    OVERLAY_THEMEABLE: \"qxl/apiviewer/image/overlay_themeable18.gif\",\n\n    /** {string} The URL of the overlay \"static\". */\n    OVERLAY_STATIC: \"qxl/apiviewer/image/overlay_static18.gif\",\n\n    /** {string} The URL of the overlay \"warning\". */\n    OVERLAY_WARN: \"qxl/apiviewer/image/overlay_warning18.gif\",\n\n    /** {string} The URL of the overlay \"mixin\". */\n    OVERLAY_MIXIN: \"qxl/apiviewer/image/overlay_mixin18.gif\",\n\n    /** {string} The icon URL of a package. */\n    ICON_PACKAGE: \"qxl/apiviewer/image/package18.gif\",\n\n    /** {string} The icon URL of a package with warning. */\n    ICON_PACKAGE_WARN: \"qxl/apiviewer/image/package_warning18.gif\",\n\n    /** {string} The icon URL of a class. */\n    ICON_CLASS: \"qxl/apiviewer/image/class18.gif\",\n\n    /** {string} The icon URL of a class with warning. */\n    ICON_CLASS_WARN: \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a class with error. */\n    ICON_CLASS_ERROR: \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a static class. */\n    ICON_CLASS_STATIC: \"qxl/apiviewer/image/class_static18.gif\",\n\n    /** {string} The icon URL of a static class with warning. */\n    ICON_CLASS_STATIC_WARN: \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of a static class with error. */\n    ICON_CLASS_STATIC_ERROR: \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class. */\n    ICON_CLASS_ABSTRACT: \"qxl/apiviewer/image/class_abstract18.gif\",\n\n    /** {string} The icon URL of an abstract class with warning. */\n    ICON_CLASS_ABSTRACT_WARN:\n      \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class with error. */\n    ICON_CLASS_ABSTRACT_ERROR:\n      \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class. */\n    ICON_CLASS_SINGLETON: \"qxl/apiviewer/image/class_singleton18.gif\",\n\n    /** {string} The icon URL of an singleton class with warning. */\n    ICON_CLASS_SINGLETON_WARN:\n      \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class with error. */\n    ICON_CLASS_SINGLETON_ERROR:\n      \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of a property. */\n    ICON_PROPERTY_PUB: \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of a protected property. */\n    ICON_PROPERTY_PROT: \"qxl/apiviewer/image/property_protected18.gif\",\n\n    /** {string} The icon URL of a private property. */\n    ICON_PROPERTY_PRIV: \"qxl/apiviewer/image/property_private18.gif\",\n\n    /** {string} The icon URL of a internal property. */\n    ICON_PROPERTY_INTERN: \"qxl/apiviewer/image/property_internal18.gif\",\n\n    /** {string} The icon URL of a themeable property. */\n    ICON_PROPERTY_PUB_THEMEABLE: \"qxl/apiviewer/image/property_themeable18.gif\",\n\n    /** {string} The icon URL of an event. */\n    ICON_EVENT: \"qxl/apiviewer/image/event18.gif\",\n\n    /** {string} The icon URL of an entry. Entry is a group property */\n    ICON_ENTRY: \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE: \"qxl/apiviewer/image/interface18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE_WARN: \"qxl/apiviewer/image/interface_warning18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN: \"qxl/apiviewer/image/mixin18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN_WARN: \"qxl/apiviewer/image/mixin_warning18.gif\",\n\n    /** {string} The icon URL of a public method. */\n    ICON_METHOD_PUB: \"qxl/apiviewer/image/method_public18.gif\",\n\n    /** {string} The icon URL of a public inherited method. */\n    ICON_METHOD_PUB_INHERITED:\n      \"qxl/apiviewer/image/method_public_inherited18.gif\",\n\n    /** {string} The icon URL of a constructor. */\n    ICON_CTOR: \"qxl/apiviewer/image/constructor18.gif\",\n\n    /** {string} The icon URL of a protected method. */\n    ICON_METHOD_PROT: \"qxl/apiviewer/image/method_protected18.gif\",\n\n    /** {string} The icon URL of a private method. */\n    ICON_METHOD_PRIV: \"qxl/apiviewer/image/method_private18.gif\",\n\n    /** {string} The icon URL of a internal method. */\n    ICON_METHOD_INTERN: \"qxl/apiviewer/image/method_internal18.gif\",\n\n    /** {string} The icon URL of a constant. */\n    ICON_CONSTANT: \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of an appearance. */\n    ICON_APPEARANCE: \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of a child control. */\n    ICON_CHILDCONTROL: \"qxl/apiviewer/image/childcontrol18.gif\",\n  },\n\n  /*\n  *****************************************************************************\n   DEFER\n  *****************************************************************************\n  */\n\n  defer(statics, members, properties) {\n    /** {string[]} images to preload */\n    statics.PRELOAD_IMAGES = [\n      statics.ICON_INFO,\n      statics.ICON_SEARCH,\n      statics.OVERLAY_ABSTRACT,\n      statics.OVERLAY_ERROR,\n      statics.OVERLAY_INHERITED,\n      statics.OVERLAY_OVERRIDDEN,\n      statics.OVERLAY_STATIC,\n      statics.OVERLAY_WARN,\n      statics.OVERLAY_MIXIN,\n      statics.OVERLAY_THEMEABLE,\n      statics.ICON_PACKAGE,\n      statics.ICON_PACKAGE_WARN,\n      statics.ICON_CLASS,\n      statics.ICON_CLASS_WARN,\n      statics.ICON_CLASS_ERROR,\n      statics.ICON_CLASS_STATIC,\n      statics.ICON_CLASS_STATIC_WARN,\n      statics.ICON_CLASS_STATIC_ERROR,\n      statics.ICON_CLASS_ABSTRACT,\n      statics.ICON_CLASS_ABSTRACT_WARN,\n      statics.ICON_CLASS_ABSTRACT_ERROR,\n      statics.ICON_CLASS_SINGLETON,\n      statics.ICON_CLASS_SINGLETON_WARN,\n      statics.ICON_CLASS_SINGLETON_ERROR,\n      statics.ICON_PROPERTY_PUB,\n      statics.ICON_PROPERTY_PROT,\n      statics.ICON_PROPERTY_PRIV,\n      statics.ICON_PROPERTY_INTERN,\n      statics.ICON_PROPERTY_PUB_THEMEABLE,\n      statics.ICON_EVENT,\n      statics.ICON_INTERFACE,\n      statics.ICON_INTERFACE_WARN,\n      statics.ICON_MIXIN,\n      statics.ICON_MIXIN_WARN,\n      statics.ICON_METHOD_PUB,\n      statics.ICON_METHOD_PUB_INHERITED,\n      statics.ICON_CTOR,\n      statics.ICON_METHOD_PROT,\n      statics.ICON_METHOD_PRIV,\n      statics.ICON_METHOD_INTERN,\n      statics.ICON_CONSTANT,\n      statics.ICON_CHILDCONTROL,\n    ];\n  },\n});\n"
  ],
  "mappings": "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"
}