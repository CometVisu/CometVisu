{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "statics",
    "getChild",
    "docNode",
    "childType",
    "children",
    "i",
    "length",
    "type",
    "getChildByAttribute",
    "attributeName",
    "attributeValue",
    "node",
    "attributes",
    "getIconUrl",
    "inherited",
    "constName",
    "dao",
    "qxl",
    "apiviewer",
    "Package",
    "getType",
    "isStatic",
    "isAbstract",
    "isSingleton",
    "Property",
    "isPublic",
    "isProtected",
    "isPrivate",
    "isInternal",
    "isThemeable",
    "Event",
    "Method",
    "isConstructor",
    "getClass",
    "Constant",
    "ChildControl",
    "ClassItem",
    "getOverriddenFrom",
    "getErrors",
    "hasWarning",
    "TreeUtil",
    "iconNameToIconPath",
    "iconName",
    "iconUrl",
    "iconParts",
    "split",
    "itemName",
    "startIndex",
    "Error",
    "iconPart",
    "push",
    "ICON_BLANK",
    "OVERLAY_ABSTRACT",
    "OVERLAY_ERROR",
    "OVERLAY_INHERITED",
    "OVERLAY_OVERRIDDEN",
    "OVERLAY_THEMEABLE",
    "OVERLAY_STATIC",
    "OVERLAY_WARN",
    "OVERLAY_MIXIN",
    "ICON_PACKAGE",
    "ICON_PACKAGE_WARN",
    "ICON_CLASS",
    "ICON_CLASS_WARN",
    "ICON_CLASS_ERROR",
    "ICON_CLASS_STATIC",
    "ICON_CLASS_STATIC_WARN",
    "ICON_CLASS_STATIC_ERROR",
    "ICON_CLASS_ABSTRACT",
    "ICON_CLASS_ABSTRACT_WARN",
    "ICON_CLASS_ABSTRACT_ERROR",
    "ICON_CLASS_SINGLETON",
    "ICON_CLASS_SINGLETON_WARN",
    "ICON_CLASS_SINGLETON_ERROR",
    "ICON_PROPERTY_PUB",
    "ICON_PROPERTY_PROT",
    "ICON_PROPERTY_PRIV",
    "ICON_PROPERTY_INTERN",
    "ICON_PROPERTY_PUB_THEMEABLE",
    "ICON_EVENT",
    "ICON_ENTRY",
    "ICON_INTERFACE",
    "ICON_INTERFACE_WARN",
    "ICON_MIXIN",
    "ICON_MIXIN_WARN",
    "ICON_METHOD_PUB",
    "ICON_METHOD_PUB_INHERITED",
    "ICON_CTOR",
    "ICON_METHOD_PROT",
    "ICON_METHOD_PRIV",
    "ICON_METHOD_INTERN",
    "ICON_CONSTANT",
    "ICON_APPEARANCE",
    "ICON_CHILDCONTROL",
    "defer",
    "members",
    "properties",
    "PRELOAD_IMAGES",
    "ICON_INFO",
    "ICON_SEARCH"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/TreeUtil.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A util class for handling the documentation tree.\n *\n * @ignore(qxl.apiviewer.dao)\n */\nqx.Class.define(\"qxl.apiviewer.TreeUtil\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n   CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n  },\n\n  /*\n  *****************************************************************************\n   STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Gets the child of a doc node having a certain type.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param childType {String} the type of the child to get.\n     * @return {Map} the wanted child or <code>null</code> if <code>docNode</code>\n     *           is <code>null</code> or has no such child.\n     */\n    getChild(docNode, childType) {\n      if (docNode && docNode.children) {\n        for (var i = 0; i < docNode.children.length; i++) {\n          if (docNode.children[i].type == childType) {\n            return docNode.children[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets the child of a doc node having a certain attribute value.\n     *\n     * @param docNode {Map} the doc node to get the child of.\n     * @param attributeName {String} the name of the attribute the wanted child must have.\n     * @param attributeValue {String} the value of the attribute the wanted child must have.\n     * @return {Map} the wanted child or <code>code</code> if there is no such child.\n     */\n    getChildByAttribute(docNode, attributeName, attributeValue) {\n      if (docNode.children) {\n        for (var i = 0; i < docNode.children.length; i++) {\n          var node = docNode.children[i];\n\n          if (\n            node.attributes &&\n            node.attributes[attributeName] == attributeValue\n          ) {\n            return node;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Gets the icon URL of a doc node.\n     *\n     * @param node {Map} the node to get the icon for.\n     * @param inherited {Boolean? false} whether the node was inherited.\n     * @return {var} the URL of the icon. May be a string or an array of string\n     *           (in case of an overlay icon).\n     * @throws {Error} If node is of an unknown type.\n     */\n    getIconUrl(node, inherited) {\n      var constName;\n      var dao = qxl.apiviewer.dao;\n\n      if (node instanceof dao.Package) {\n        constName = \"ICON_PACKAGE\";\n      } else if (node instanceof dao.Class) {\n        switch (node.getType()) {\n          case \"mixin\":\n            constName = \"ICON_MIXIN\";\n            break;\n\n          case \"interface\":\n            constName = \"ICON_INTERFACE\";\n            break;\n\n          default:\n            constName = \"ICON_CLASS\";\n            if (node.isStatic()) {\n              constName += \"_STATIC\";\n            } else if (node.isAbstract()) {\n              constName += \"_ABSTRACT\";\n            } else if (node.isSingleton()) {\n              constName += \"_SINGLETON\";\n            }\n        }\n      } else if (node instanceof dao.Property) {\n        constName = \"ICON_PROPERTY\";\n        if (node.isPublic()) {\n          constName += \"_PUB\";\n        } else if (node.isProtected()) {\n          constName += \"_PROT\";\n        } else if (node.isPrivate()) {\n          constName += \"_PRIV\";\n        } else if (node.isInternal()) {\n          constName += \"_INTERN\";\n        }\n        if (node.isThemeable()) {\n          constName += \"_THEMEABLE\";\n        }\n      } else if (node instanceof dao.Event) {\n        constName = \"ICON_EVENT\";\n      } else if (node instanceof dao.Method) {\n        if (node.isConstructor()) {\n          constName = \"ICON_CTOR\";\n        } else {\n          constName = \"ICON_METHOD\";\n          if (node.isPublic()) {\n            constName += \"_PUB\";\n          } else if (node.isProtected()) {\n            constName += \"_PROT\";\n          } else if (node.isPrivate()) {\n            constName += \"_PRIV\";\n          } else if (node.isInternal()) {\n            constName += \"_INTERN\";\n          }\n        }\n\n        if (node.isStatic()) {\n          constName += \"_STATIC\";\n        } else if (node.isAbstract()) {\n          constName += \"_ABSTRACT\";\n        }\n\n        if (node.getClass().getType() == \"mixin\") {\n          constName += \"_MIXIN\";\n        }\n      } else if (node instanceof dao.Constant) {\n        constName = \"ICON_CONSTANT\";\n      } else if (node instanceof dao.ChildControl) {\n        constName = \"ICON_CHILDCONTROL\";\n      } else {\n        //        throw new Error(\"Unknown node type: \" + (node.type || node.name));\n      }\n\n      /*\n      if (node.attributes.isMixin) {\n        constName += \"_MIXIN\";\n      }\n      */\n\n      if (node instanceof dao.ClassItem) {\n        if (inherited) {\n          constName += \"_INHERITED\";\n        } else if (node.getOverriddenFrom && node.getOverriddenFrom()) {\n          constName += \"_OVERRIDDEN\";\n        }\n\n        if (node.getErrors().length > 0) {\n          constName += \"_ERROR\";\n        }\n      }\n\n      if (node.hasWarning ? node.hasWarning() : false) {\n        constName += \"_WARN\";\n      }\n\n      return qxl.apiviewer.TreeUtil.iconNameToIconPath(constName);\n    },\n\n    iconNameToIconPath(iconName) {\n      if (!iconName) {\n        return \"\";\n      }\n      var iconUrl = qxl.apiviewer.TreeUtil[iconName];\n\n      if (!iconUrl) {\n        var iconParts = iconName.split(\"_\");\n        var itemName = iconParts[0] + \"_\" + iconParts[1];\n        if (\n          iconParts[2] == \"PUB\" ||\n          iconParts[2] == \"PROT\" ||\n          iconParts[2] == \"PRIV\" ||\n          iconParts[2] == \"INTERN\"\n        ) {\n          itemName += \"_\" + iconParts[2];\n          var startIndex = 3;\n        } else {\n          startIndex = 2;\n        }\n        iconUrl = [qxl.apiviewer.TreeUtil[itemName]];\n        if (iconUrl[0] === null) {\n          throw new Error(\"Unknown img constant: \" + itemName);\n        }\n        for (var i = startIndex; i < iconParts.length; i++) {\n          var iconPart = qxl.apiviewer.TreeUtil[\"OVERLAY_\" + iconParts[i]];\n          if (iconPart === null) {\n            throw new Error(\"Unknown img constant: OVERLAY_\" + iconParts[i]);\n          }\n          iconUrl.push(iconPart);\n        }\n      }\n      return iconUrl;\n    },\n\n    /** {string} The URL of the blank icon. */\n    ICON_BLANK: \"qxl/apiviewer/image/blank.gif\",\n\n    /** {string} The URL of the overlay \"abstract\". */\n    OVERLAY_ABSTRACT: \"qxl/apiviewer/image/overlay_abstract18.gif\",\n\n    /** {string} The URL of the overlay \"error\". */\n    OVERLAY_ERROR: \"qxl/apiviewer/image/overlay_error18.gif\",\n\n    /** {string} The URL of the overlay \"inherited\". */\n    OVERLAY_INHERITED: \"qxl/apiviewer/image/overlay_inherited18.gif\",\n\n    /** {string} The URL of the overlay \"overridden\". */\n    OVERLAY_OVERRIDDEN: \"qxl/apiviewer/image/overlay_overridden18.gif\",\n\n    /** {string} The URL of the overlay \"themeable\". */\n    OVERLAY_THEMEABLE: \"qxl/apiviewer/image/overlay_themeable18.gif\",\n\n    /** {string} The URL of the overlay \"static\". */\n    OVERLAY_STATIC: \"qxl/apiviewer/image/overlay_static18.gif\",\n\n    /** {string} The URL of the overlay \"warning\". */\n    OVERLAY_WARN: \"qxl/apiviewer/image/overlay_warning18.gif\",\n\n    /** {string} The URL of the overlay \"mixin\". */\n    OVERLAY_MIXIN: \"qxl/apiviewer/image/overlay_mixin18.gif\",\n\n    /** {string} The icon URL of a package. */\n    ICON_PACKAGE: \"qxl/apiviewer/image/package18.gif\",\n\n    /** {string} The icon URL of a package with warning. */\n    ICON_PACKAGE_WARN: \"qxl/apiviewer/image/package_warning18.gif\",\n\n    /** {string} The icon URL of a class. */\n    ICON_CLASS: \"qxl/apiviewer/image/class18.gif\",\n\n    /** {string} The icon URL of a class with warning. */\n    ICON_CLASS_WARN: \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a class with error. */\n    ICON_CLASS_ERROR: \"qxl/apiviewer/image/class_warning18.gif\",\n\n    /** {string} The icon URL of a static class. */\n    ICON_CLASS_STATIC: \"qxl/apiviewer/image/class_static18.gif\",\n\n    /** {string} The icon URL of a static class with warning. */\n    ICON_CLASS_STATIC_WARN: \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of a static class with error. */\n    ICON_CLASS_STATIC_ERROR: \"qxl/apiviewer/image/class_static_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class. */\n    ICON_CLASS_ABSTRACT: \"qxl/apiviewer/image/class_abstract18.gif\",\n\n    /** {string} The icon URL of an abstract class with warning. */\n    ICON_CLASS_ABSTRACT_WARN:\n      \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an abstract class with error. */\n    ICON_CLASS_ABSTRACT_ERROR:\n      \"qxl/apiviewer/image/class_abstract_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class. */\n    ICON_CLASS_SINGLETON: \"qxl/apiviewer/image/class_singleton18.gif\",\n\n    /** {string} The icon URL of an singleton class with warning. */\n    ICON_CLASS_SINGLETON_WARN:\n      \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of an singleton class with error. */\n    ICON_CLASS_SINGLETON_ERROR:\n      \"qxl/apiviewer/image/class_singleton_warning18.gif\",\n\n    /** {string} The icon URL of a property. */\n    ICON_PROPERTY_PUB: \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of a protected property. */\n    ICON_PROPERTY_PROT: \"qxl/apiviewer/image/property_protected18.gif\",\n\n    /** {string} The icon URL of a private property. */\n    ICON_PROPERTY_PRIV: \"qxl/apiviewer/image/property_private18.gif\",\n\n    /** {string} The icon URL of a internal property. */\n    ICON_PROPERTY_INTERN: \"qxl/apiviewer/image/property_internal18.gif\",\n\n    /** {string} The icon URL of a themeable property. */\n    ICON_PROPERTY_PUB_THEMEABLE: \"qxl/apiviewer/image/property_themeable18.gif\",\n\n    /** {string} The icon URL of an event. */\n    ICON_EVENT: \"qxl/apiviewer/image/event18.gif\",\n\n    /** {string} The icon URL of an entry. Entry is a group property */\n    ICON_ENTRY: \"qxl/apiviewer/image/property18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE: \"qxl/apiviewer/image/interface18.gif\",\n\n    /** {string} The icon URL of an interface. */\n    ICON_INTERFACE_WARN: \"qxl/apiviewer/image/interface_warning18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN: \"qxl/apiviewer/image/mixin18.gif\",\n\n    /** {string} The icon URL of an mixin. */\n    ICON_MIXIN_WARN: \"qxl/apiviewer/image/mixin_warning18.gif\",\n\n    /** {string} The icon URL of a public method. */\n    ICON_METHOD_PUB: \"qxl/apiviewer/image/method_public18.gif\",\n\n    /** {string} The icon URL of a public inherited method. */\n    ICON_METHOD_PUB_INHERITED:\n      \"qxl/apiviewer/image/method_public_inherited18.gif\",\n\n    /** {string} The icon URL of a constructor. */\n    ICON_CTOR: \"qxl/apiviewer/image/constructor18.gif\",\n\n    /** {string} The icon URL of a protected method. */\n    ICON_METHOD_PROT: \"qxl/apiviewer/image/method_protected18.gif\",\n\n    /** {string} The icon URL of a private method. */\n    ICON_METHOD_PRIV: \"qxl/apiviewer/image/method_private18.gif\",\n\n    /** {string} The icon URL of a internal method. */\n    ICON_METHOD_INTERN: \"qxl/apiviewer/image/method_internal18.gif\",\n\n    /** {string} The icon URL of a constant. */\n    ICON_CONSTANT: \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of an appearance. */\n    ICON_APPEARANCE: \"qxl/apiviewer/image/constant18.gif\",\n\n    /** {string} The icon URL of a child control. */\n    ICON_CHILDCONTROL: \"qxl/apiviewer/image/childcontrol18.gif\",\n  },\n\n  /*\n  *****************************************************************************\n   DEFER\n  *****************************************************************************\n  */\n\n  defer(statics, members, properties) {\n    /** {string[]} images to preload */\n    statics.PRELOAD_IMAGES = [\n      statics.ICON_INFO,\n      statics.ICON_SEARCH,\n      statics.OVERLAY_ABSTRACT,\n      statics.OVERLAY_ERROR,\n      statics.OVERLAY_INHERITED,\n      statics.OVERLAY_OVERRIDDEN,\n      statics.OVERLAY_STATIC,\n      statics.OVERLAY_WARN,\n      statics.OVERLAY_MIXIN,\n      statics.OVERLAY_THEMEABLE,\n      statics.ICON_PACKAGE,\n      statics.ICON_PACKAGE_WARN,\n      statics.ICON_CLASS,\n      statics.ICON_CLASS_WARN,\n      statics.ICON_CLASS_ERROR,\n      statics.ICON_CLASS_STATIC,\n      statics.ICON_CLASS_STATIC_WARN,\n      statics.ICON_CLASS_STATIC_ERROR,\n      statics.ICON_CLASS_ABSTRACT,\n      statics.ICON_CLASS_ABSTRACT_WARN,\n      statics.ICON_CLASS_ABSTRACT_ERROR,\n      statics.ICON_CLASS_SINGLETON,\n      statics.ICON_CLASS_SINGLETON_WARN,\n      statics.ICON_CLASS_SINGLETON_ERROR,\n      statics.ICON_PROPERTY_PUB,\n      statics.ICON_PROPERTY_PROT,\n      statics.ICON_PROPERTY_PRIV,\n      statics.ICON_PROPERTY_INTERN,\n      statics.ICON_PROPERTY_PUB_THEMEABLE,\n      statics.ICON_EVENT,\n      statics.ICON_INTERFACE,\n      statics.ICON_INTERFACE_WARN,\n      statics.ICON_MIXIN,\n      statics.ICON_MIXIN_WARN,\n      statics.ICON_METHOD_PUB,\n      statics.ICON_METHOD_PUB_INHERITED,\n      statics.ICON_CTOR,\n      statics.ICON_METHOD_PROT,\n      statics.ICON_METHOD_PRIV,\n      statics.ICON_METHOD_INTERN,\n      statics.ICON_CONSTANT,\n      statics.ICON_CHILDCONTROL,\n    ];\n  },\n});\n"
  ],
  "mappings": "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"
}