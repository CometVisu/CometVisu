{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "id",
    "check",
    "apply",
    "nullable",
    "init",
    "members",
    "_applyId",
    "oldId",
    "statics",
    "qxl",
    "apiviewer",
    "MWidgetRegistry",
    "unregister",
    "register",
    "getWidgetById",
    "__objectDb",
    "object",
    "Error"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/MWidgetRegistry.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\nqx.Mixin.define(\"qxl.apiviewer.MWidgetRegistry\", {\n  properties: {\n    id: {\n      check: \"String\",\n      apply: \"_applyId\",\n      nullable: true,\n      init: null,\n    },\n  },\n\n  members: {\n    _applyId(id, oldId) {\n      var statics = qxl.apiviewer.MWidgetRegistry;\n      if (oldId) {\n        statics.unregister(this, oldId);\n      }\n      if (id) {\n        statics.register(this, id);\n      }\n    },\n\n    getWidgetById(id) {\n      return qxl.apiviewer.MWidgetRegistry.getWidgetById(id);\n    },\n  },\n\n  statics: {\n    __objectDb: {},\n\n    /**\n     * Returns the widget registered under the given id by {@link #register}\n     *\n     * @param id {String} the id of the widget\n     * @return {qx.ui.core.Widget} the widget.\n     */\n    getWidgetById(id) {\n      return this.__objectDb[id];\n    },\n\n    /**\n     * Registers a widget under the given widget id to be used with\n     * {@link #getWidgetById}.\n     * @param object\n     * @param id {String} the id of the widget.\n     */\n    register(object, id) {\n      if (this.__objectDb[id]) {\n        throw new Error(\"An object with the id '\" + id + \"' already exists.\");\n      }\n      this.__objectDb[id] = object;\n    },\n\n    unregister(object, id) {\n      if (this.__objectDb[id] !== object) {\n        throw new Error(\n          \"The object is not registered with the id '\" + id + \"'.\"\n        );\n      }\n      delete this.__objectDb[id];\n    },\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EAAiD;IAC/CC,UAAU,EAAE;MACVC,EAAE,EAAE;QACFC,KAAK,EAAE,QADL;QAEFC,KAAK,EAAE,UAFL;QAGFC,QAAQ,EAAE,IAHR;QAIFC,IAAI,EAAE;MAJJ;IADM,CADmC;IAU/CC,OAAO,EAAE;MACPC,QADO,oBACEN,EADF,EACMO,KADN,EACa;QAClB,IAAIC,OAAO,GAAGC,GAAG,CAACC,SAAJ,CAAcC,eAA5B;;QACA,IAAIJ,KAAJ,EAAW;UACTC,OAAO,CAACI,UAAR,CAAmB,IAAnB,EAAyBL,KAAzB;QACD;;QACD,IAAIP,EAAJ,EAAQ;UACNQ,OAAO,CAACK,QAAR,CAAiB,IAAjB,EAAuBb,EAAvB;QACD;MACF,CATM;MAWPc,aAXO,yBAWOd,EAXP,EAWW;QAChB,OAAOS,GAAG,CAACC,SAAJ,CAAcC,eAAd,CAA8BG,aAA9B,CAA4Cd,EAA5C,CAAP;MACD;IAbM,CAVsC;IA0B/CQ,OAAO,EAAE;MACPO,SAAU,EAAE,EADL;;MAGP;AACJ;AACA;AACA;AACA;AACA;MACID,aATO,yBASOd,EATP,EASW;QAChB,OAAO,KAAKe,SAAL,CAAgBf,EAAhB,CAAP;MACD,CAXM;;MAaP;AACJ;AACA;AACA;AACA;AACA;MACIa,QAnBO,oBAmBEG,MAnBF,EAmBUhB,EAnBV,EAmBc;QACnB,IAAI,KAAKe,SAAL,CAAgBf,EAAhB,CAAJ,EAAyB;UACvB,MAAM,IAAIiB,KAAJ,CAAU,4BAA4BjB,EAA5B,GAAiC,mBAA3C,CAAN;QACD;;QACD,KAAKe,SAAL,CAAgBf,EAAhB,IAAsBgB,MAAtB;MACD,CAxBM;MA0BPJ,UA1BO,sBA0BII,MA1BJ,EA0BYhB,EA1BZ,EA0BgB;QACrB,IAAI,KAAKe,SAAL,CAAgBf,EAAhB,MAAwBgB,MAA5B,EAAoC;UAClC,MAAM,IAAIC,KAAJ,CACJ,+CAA+CjB,EAA/C,GAAoD,IADhD,CAAN;QAGD;;QACD,OAAO,KAAKe,SAAL,CAAgBf,EAAhB,CAAP;MACD;IAjCM;EA1BsC,CAAjD;EAnBAS,GAAG,CAACC,SAAJ,CAAcC,eAAd,CAA8Bf,aAA9B,GAA8CA,aAA9C"
}