{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "Tree",
    "construct",
    "setDecorator",
    "setPadding",
    "__root",
    "TreeFolder",
    "setOpen",
    "setRoot",
    "setSelection",
    "_classTreeNodeHash",
    "members",
    "setTreeData",
    "docTree",
    "_docTree",
    "__fillPackageNode",
    "_wantedClassName",
    "selectTreeNodeByClassName",
    "className",
    "Promise",
    "resolve",
    "scrollChildIntoView",
    "nameParts",
    "split",
    "name",
    "nameIndex",
    "next",
    "treeNode",
    "loading",
    "then",
    "length",
    "__getPackageNodeOpener",
    "packageTreeNode",
    "packageDoc",
    "depth",
    "self",
    "loaded",
    "setOpenSymbolMode",
    "docNode",
    "PackageTree",
    "qxl",
    "apiviewer",
    "packagesDoc",
    "getPackages",
    "sort",
    "l",
    "r",
    "getFullName",
    "map",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "segs",
    "getName",
    "setIcon",
    "setUserData",
    "add",
    "addListener",
    "load",
    "loadDependedClasses",
    "classes",
    "forEach",
    "classDoc",
    "classTreeNode",
    "treeType",
    "PACKAGE_TREE",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/ui/PackageTree.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider    (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker    (ecker)\n     * Fabian Jakobs    (fjakobs)\n     * Jonathan WeiÃŸ    (jonathan_rass)\n     * John Spackman    (johnspackman)\n     * Henner Kollmann  (hkollmann)\n\n************************************************************************ */\n\n/**\n * The package tree.\n */\nqx.Class.define(\"qxl.apiviewer.ui.PackageTree\", {\n  extend: qx.ui.tree.Tree,\n\n  construct() {\n    super(\"Documentation\");\n\n    this.setDecorator(null);\n    this.setPadding(0);\n\n    this.__root = new qx.ui.tree.TreeFolder(\"Packages\");\n    this.__root.setOpen(true);\n    this.setRoot(this.__root);\n    this.setSelection([this.__root]);\n    // Workaround: Since navigating in qx.ui.tree.Tree doesn't work, we've to\n    // maintain a hash that keeps the tree nodes for class names\n    this._classTreeNodeHash = {};\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n  members: {\n    __root: null,\n\n    /**\n     * Updates the tree on the left.\n     *\n     * @param docTree\n     *          {qxl.apiviewer.dao.Package} the documentation tree to use for\n     *          updating.\n     * @return {void}\n     */\n    setTreeData(docTree) {\n      this._docTree = docTree;\n\n      // Fill the packages tree\n      this.__fillPackageNode(this.__root, docTree, 0);\n\n      if (this._wantedClassName) {\n        this.selectTreeNodeByClassName(this._wantedClassName);\n        this._wantedClassName = null;\n      }\n    },\n\n    /**\n     * Selects a certain class.\n     *\n     * @param className {String} the name of the class to show.\n     * @async\n     * @return {Boolean} Whether the class name was valid and could be selected.\n     */\n    selectTreeNodeByClassName(className) {\n      if (!this._docTree) {\n        // The doc tree has not been loaded yet\n        // -> Remember the wanted class and show when loading is done\n        this._wantedClassName = className;\n        return qx.Promise.resolve(true);\n      }\n\n      if (!className) {\n        this.__root.setOpen(true);\n        this.setSelection([this.__root]);\n        this.scrollChildIntoView(this.__root);\n        return qx.Promise.resolve(true);\n      }\n\n      var nameParts = className.split(\".\");\n      var name = \"\";\n      var nameIndex = 0;\n\n      let next = () => {\n        if (nameIndex > 0) {\n          name += \".\";\n        }\n        name += nameParts[nameIndex];\n        var treeNode = this._classTreeNodeHash[name];\n        if (!treeNode) {\n          return qx.Promise.resolve(false);\n        }\n        treeNode.setOpen(true);\n        return treeNode.loading.then(() => {\n          nameIndex++;\n          if (nameIndex < nameParts.length) {\n            return next();\n          }\n          return treeNode;\n        });\n      };\n\n      return next().then((treeNode) => {\n        if (treeNode) {\n          this.setSelection([treeNode]);\n          this.scrollChildIntoView(treeNode);\n          return true;\n        }\n        this.setSelection([]);\n        return false;\n      });\n    },\n\n    /**\n     * Create a callback which loads the child nodes of a tree folder\n     *\n     * @param packageTreeNode\n     *          {qx.ui.tree.TreeFolder} the package tree folder.\n     * @param packageDoc\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     * @return {Function} the opener callback function\n     */\n    __getPackageNodeOpener(packageTreeNode, packageDoc, depth) {\n      var self = this;\n      return function () {\n        if (!packageTreeNode.loaded) {\n          packageTreeNode.loaded = true;\n          self.__fillPackageNode(packageTreeNode, packageDoc, depth + 1);\n          packageTreeNode.setOpenSymbolMode(\"always\");\n        }\n      };\n    },\n\n    /**\n     * Fills a package tree node with tree nodes for the sub packages and\n     * classes.\n     *\n     * @param treeNode\n     *          {qx.ui.tree.TreeFolder} the package tree node.\n     * @param docNode\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     */\n    __fillPackageNode(treeNode, docNode, depth) {\n      var PackageTree = qxl.apiviewer.ui.PackageTree;\n\n      var packagesDoc = docNode.getPackages();\n      packagesDoc.sort((l, r) => {\n        l = l.getFullName();\n        r = r.getFullName();\n        return l < r ? -1 : l > r ? 1 : 0;\n      });\n      qx.Promise.map(packagesDoc, (packageDoc) => {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(packageDoc);\n        var segs = packageDoc.getName().split(\".\");\n        var packageTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n        packageTreeNode.setIcon(iconUrl);\n        packageTreeNode.setOpenSymbolMode(\"always\");\n        packageTreeNode.setUserData(\"nodeName\", packageDoc.getFullName());\n        treeNode.add(packageTreeNode);\n\n        // defer adding of child nodes\n        packageTreeNode.addListener(\n          \"changeOpen\",\n          this.__getPackageNodeOpener(packageTreeNode, packageDoc, depth + 1),\n          this\n        );\n\n        // Register the tree node\n        this._classTreeNodeHash[packageDoc.getFullName()] = packageTreeNode;\n        return packageDoc.load();\n      });\n\n      treeNode.loading = docNode.loadDependedClasses().then((classes) => {\n        classes.sort((l, r) => {\n          l = l.getFullName();\n          r = r.getFullName();\n          return l < r ? -1 : l > r ? 1 : 0;\n        });\n        classes.forEach((classDoc) => {\n          var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(classDoc);\n          var segs = classDoc.getName().split(\".\");\n          var classTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n          classTreeNode.setIcon(iconUrl);\n          classTreeNode.setUserData(\"nodeName\", classDoc.getFullName());\n          classTreeNode.treeType = PackageTree.PACKAGE_TREE;\n          treeNode.add(classTreeNode);\n          classTreeNode.loading = qx.Promise.resolve();\n          classTreeNode.loaded = true;\n\n          // Register the tree node\n          this._classTreeNodeHash[classDoc.getFullName()] = classTreeNode;\n        });\n        return null;\n      });\n    },\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct() {\n    this._docTree = this._classTreeNodeHash = null;\n    this._disposeObjects(\"__root\");\n  },\n});\n"
  ],
  "mappings": "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"
}