{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "Tree",
    "construct",
    "constructor",
    "call",
    "setDecorator",
    "setPadding",
    "__root",
    "TreeFolder",
    "setOpen",
    "setRoot",
    "setSelection",
    "_classTreeNodeHash",
    "members",
    "setTreeData",
    "docTree",
    "_docTree",
    "__fillPackageNode",
    "_wantedClassName",
    "selectTreeNodeByClassName",
    "className",
    "_this",
    "Promise",
    "resolve",
    "scrollChildIntoView",
    "nameParts",
    "split",
    "name",
    "nameIndex",
    "next",
    "treeNode",
    "loading",
    "then",
    "length",
    "__getPackageNodeOpener",
    "__P_566_2",
    "packageTreeNode",
    "packageDoc",
    "depth",
    "self",
    "loaded",
    "setOpenSymbolMode",
    "__P_566_1",
    "docNode",
    "_this2",
    "PackageTree",
    "qxl",
    "apiviewer",
    "packagesDoc",
    "getPackages",
    "sort",
    "l",
    "r",
    "getFullName",
    "map",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "segs",
    "getName",
    "setIcon",
    "setUserData",
    "add",
    "addListener",
    "load",
    "loadDependedClasses",
    "classes",
    "forEach",
    "classDoc",
    "classTreeNode",
    "treeType",
    "PACKAGE_TREE",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/ui/PackageTree.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider    (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker    (ecker)\n     * Fabian Jakobs    (fjakobs)\n     * Jonathan WeiÃŸ    (jonathan_rass)\n     * John Spackman    (johnspackman)\n     * Henner Kollmann  (hkollmann)\n\n************************************************************************ */\n\n/**\n * The package tree.\n */\nqx.Class.define(\"qxl.apiviewer.ui.PackageTree\", {\n  extend: qx.ui.tree.Tree,\n\n  construct() {\n    super(\"Documentation\");\n\n    this.setDecorator(null);\n    this.setPadding(0);\n\n    this.__root = new qx.ui.tree.TreeFolder(\"Packages\");\n    this.__root.setOpen(true);\n    this.setRoot(this.__root);\n    this.setSelection([this.__root]);\n    // Workaround: Since navigating in qx.ui.tree.Tree doesn't work, we've to\n    // maintain a hash that keeps the tree nodes for class names\n    this._classTreeNodeHash = {};\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n  members: {\n    __root: null,\n\n    /**\n     * Updates the tree on the left.\n     *\n     * @param docTree\n     *          {qxl.apiviewer.dao.Package} the documentation tree to use for\n     *          updating.\n     * @return {void}\n     */\n    setTreeData(docTree) {\n      this._docTree = docTree;\n\n      // Fill the packages tree\n      this.__fillPackageNode(this.__root, docTree, 0);\n\n      if (this._wantedClassName) {\n        this.selectTreeNodeByClassName(this._wantedClassName);\n        this._wantedClassName = null;\n      }\n    },\n\n    /**\n     * Selects a certain class.\n     *\n     * @param className {String} the name of the class to show.\n     * @async\n     * @return {Boolean} Whether the class name was valid and could be selected.\n     */\n    selectTreeNodeByClassName(className) {\n      if (!this._docTree) {\n        // The doc tree has not been loaded yet\n        // -> Remember the wanted class and show when loading is done\n        this._wantedClassName = className;\n        return qx.Promise.resolve(true);\n      }\n\n      if (!className) {\n        this.__root.setOpen(true);\n        this.setSelection([this.__root]);\n        this.scrollChildIntoView(this.__root);\n        return qx.Promise.resolve(true);\n      }\n\n      var nameParts = className.split(\".\");\n      var name = \"\";\n      var nameIndex = 0;\n\n      let next = () => {\n        if (nameIndex > 0) {\n          name += \".\";\n        }\n        name += nameParts[nameIndex];\n        var treeNode = this._classTreeNodeHash[name];\n        if (!treeNode) {\n          return qx.Promise.resolve(false);\n        }\n        treeNode.setOpen(true);\n        return treeNode.loading.then(() => {\n          nameIndex++;\n          if (nameIndex < nameParts.length) {\n            return next();\n          }\n          return treeNode;\n        });\n      };\n\n      return next().then((treeNode) => {\n        if (treeNode) {\n          this.setSelection([treeNode]);\n          this.scrollChildIntoView(treeNode);\n          return true;\n        }\n        this.setSelection([]);\n        return false;\n      });\n    },\n\n    /**\n     * Create a callback which loads the child nodes of a tree folder\n     *\n     * @param packageTreeNode\n     *          {qx.ui.tree.TreeFolder} the package tree folder.\n     * @param packageDoc\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     * @return {Function} the opener callback function\n     */\n    __getPackageNodeOpener(packageTreeNode, packageDoc, depth) {\n      var self = this;\n      return function () {\n        if (!packageTreeNode.loaded) {\n          packageTreeNode.loaded = true;\n          self.__fillPackageNode(packageTreeNode, packageDoc, depth + 1);\n          packageTreeNode.setOpenSymbolMode(\"always\");\n        }\n      };\n    },\n\n    /**\n     * Fills a package tree node with tree nodes for the sub packages and\n     * classes.\n     *\n     * @param treeNode\n     *          {qx.ui.tree.TreeFolder} the package tree node.\n     * @param docNode\n     *          {qxl.apiviewer.dao.Package} the documentation node of the package.\n     * @param depth\n     *          {var} current depth in the tree\n     */\n    __fillPackageNode(treeNode, docNode, depth) {\n      var PackageTree = qxl.apiviewer.ui.PackageTree;\n\n      var packagesDoc = docNode.getPackages();\n      packagesDoc.sort((l, r) => {\n        l = l.getFullName();\n        r = r.getFullName();\n        return l < r ? -1 : l > r ? 1 : 0;\n      });\n      qx.Promise.map(packagesDoc, (packageDoc) => {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(packageDoc);\n        var segs = packageDoc.getName().split(\".\");\n        var packageTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n        packageTreeNode.setIcon(iconUrl);\n        packageTreeNode.setOpenSymbolMode(\"always\");\n        packageTreeNode.setUserData(\"nodeName\", packageDoc.getFullName());\n        treeNode.add(packageTreeNode);\n\n        // defer adding of child nodes\n        packageTreeNode.addListener(\n          \"changeOpen\",\n          this.__getPackageNodeOpener(packageTreeNode, packageDoc, depth + 1),\n          this\n        );\n\n        // Register the tree node\n        this._classTreeNodeHash[packageDoc.getFullName()] = packageTreeNode;\n        return packageDoc.load();\n      });\n\n      treeNode.loading = docNode.loadDependedClasses().then((classes) => {\n        classes.sort((l, r) => {\n          l = l.getFullName();\n          r = r.getFullName();\n          return l < r ? -1 : l > r ? 1 : 0;\n        });\n        classes.forEach((classDoc) => {\n          var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(classDoc);\n          var segs = classDoc.getName().split(\".\");\n          var classTreeNode = new qx.ui.tree.TreeFolder(segs[segs.length - 1]);\n          classTreeNode.setIcon(iconUrl);\n          classTreeNode.setUserData(\"nodeName\", classDoc.getFullName());\n          classTreeNode.treeType = PackageTree.PACKAGE_TREE;\n          treeNode.add(classTreeNode);\n          classTreeNode.loading = qx.Promise.resolve();\n          classTreeNode.loaded = true;\n\n          // Register the tree node\n          this._classTreeNodeHash[classDoc.getFullName()] = classTreeNode;\n        });\n        return null;\n      });\n    },\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct() {\n    this._docTree = this._classTreeNodeHash = null;\n    this._disposeObjects(\"__root\");\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,8BAA8B,EAAE;IAC9CC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,IAAI;IAEvBC,SAAS,WAAAA,UAAA,EAAG;MACVV,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAE,WAAA,CAAAC,IAAA,OAAM,eAAe;MAErB,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC;MACvB,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;MAElB,IAAI,CAACC,SAAM,GAAG,IAAIf,EAAE,CAACO,EAAE,CAACC,IAAI,CAACQ,UAAU,CAAC,UAAU,CAAC;MACnD,IAAI,CAACD,SAAM,CAACE,OAAO,CAAC,IAAI,CAAC;MACzB,IAAI,CAACC,OAAO,CAAC,IAAI,CAACH,SAAM,CAAC;MACzB,IAAI,CAACI,YAAY,CAAC,CAAC,IAAI,CAACJ,SAAM,CAAC,CAAC;MAChC;MACA;MACA,IAAI,CAACK,kBAAkB,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPN,SAAM,EAAE,IAAI;MAEZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIO,WAAW,WAAAA,YAACC,OAAO,EAAE;QACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO;;QAEvB;QACA,IAAI,CAACE,SAAiB,CAAC,IAAI,CAACV,SAAM,EAAEQ,OAAO,EAAE,CAAC,CAAC;QAE/C,IAAI,IAAI,CAACG,gBAAgB,EAAE;UACzB,IAAI,CAACC,yBAAyB,CAAC,IAAI,CAACD,gBAAgB,CAAC;UACrD,IAAI,CAACA,gBAAgB,GAAG,IAAI;QAC9B;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,yBAAyB,WAAAA,0BAACC,SAAS,EAAE;QAAA,IAAAC,KAAA;QACnC,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAE;UAClB;UACA;UACA,IAAI,CAACE,gBAAgB,GAAGE,SAAS;UACjC,OAAO5B,EAAE,CAAC8B,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;QACjC;QAEA,IAAI,CAACH,SAAS,EAAE;UACd,IAAI,CAACb,SAAM,CAACE,OAAO,CAAC,IAAI,CAAC;UACzB,IAAI,CAACE,YAAY,CAAC,CAAC,IAAI,CAACJ,SAAM,CAAC,CAAC;UAChC,IAAI,CAACiB,mBAAmB,CAAC,IAAI,CAACjB,SAAM,CAAC;UACrC,OAAOf,EAAE,CAAC8B,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;QACjC;QAEA,IAAIE,SAAS,GAAGL,SAAS,CAACM,KAAK,CAAC,GAAG,CAAC;QACpC,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIC,SAAS,GAAG,CAAC;QAEjB,IAAIC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;UACf,IAAID,SAAS,GAAG,CAAC,EAAE;YACjBD,IAAI,IAAI,GAAG;UACb;UACAA,IAAI,IAAIF,SAAS,CAACG,SAAS,CAAC;UAC5B,IAAIE,QAAQ,GAAGT,KAAI,CAACT,kBAAkB,CAACe,IAAI,CAAC;UAC5C,IAAI,CAACG,QAAQ,EAAE;YACb,OAAOtC,EAAE,CAAC8B,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;UAClC;UACAO,QAAQ,CAACrB,OAAO,CAAC,IAAI,CAAC;UACtB,OAAOqB,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,YAAM;YACjCJ,SAAS,EAAE;YACX,IAAIA,SAAS,GAAGH,SAAS,CAACQ,MAAM,EAAE;cAChC,OAAOJ,IAAI,EAAE;YACf;YACA,OAAOC,QAAQ;UACjB,CAAC,CAAC;QACJ,CAAC;QAED,OAAOD,IAAI,EAAE,CAACG,IAAI,CAAC,UAACF,QAAQ,EAAK;UAC/B,IAAIA,QAAQ,EAAE;YACZT,KAAI,CAACV,YAAY,CAAC,CAACmB,QAAQ,CAAC,CAAC;YAC7BT,KAAI,CAACG,mBAAmB,CAACM,QAAQ,CAAC;YAClC,OAAO,IAAI;UACb;UACAT,KAAI,CAACV,YAAY,CAAC,EAAE,CAAC;UACrB,OAAO,KAAK;QACd,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIuB,SAAsB,WAAAC,UAACC,eAAe,EAAEC,UAAU,EAAEC,KAAK,EAAE;QACzD,IAAIC,IAAI,GAAG,IAAI;QACf,OAAO,YAAY;UACjB,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE;YAC3BJ,eAAe,CAACI,MAAM,GAAG,IAAI;YAC7BD,IAAI,CAACtB,SAAiB,CAACmB,eAAe,EAAEC,UAAU,EAAEC,KAAK,GAAG,CAAC,CAAC;YAC9DF,eAAe,CAACK,iBAAiB,CAAC,QAAQ,CAAC;UAC7C;QACF,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIxB,SAAiB,WAAAyB,UAACZ,QAAQ,EAAEa,OAAO,EAAEL,KAAK,EAAE;QAAA,IAAAM,MAAA;QAC1C,IAAIC,WAAW,GAAGC,GAAG,CAACC,SAAS,CAAChD,EAAE,CAAC8C,WAAW;QAE9C,IAAIG,WAAW,GAAGL,OAAO,CAACM,WAAW,EAAE;QACvCD,WAAW,CAACE,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;UACzBD,CAAC,GAAGA,CAAC,CAACE,WAAW,EAAE;UACnBD,CAAC,GAAGA,CAAC,CAACC,WAAW,EAAE;UACnB,OAAOF,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAG,CAAC;QACnC,CAAC,CAAC;QACF5D,EAAE,CAAC8B,OAAO,CAACgC,GAAG,CAACN,WAAW,EAAE,UAACX,UAAU,EAAK;UAC1C,IAAIkB,OAAO,GAAGT,GAAG,CAACC,SAAS,CAACS,QAAQ,CAACC,UAAU,CAACpB,UAAU,CAAC;UAC3D,IAAIqB,IAAI,GAAGrB,UAAU,CAACsB,OAAO,EAAE,CAACjC,KAAK,CAAC,GAAG,CAAC;UAC1C,IAAIU,eAAe,GAAG,IAAI5C,EAAE,CAACO,EAAE,CAACC,IAAI,CAACQ,UAAU,CAACkD,IAAI,CAACA,IAAI,CAACzB,MAAM,GAAG,CAAC,CAAC,CAAC;UACtEG,eAAe,CAACwB,OAAO,CAACL,OAAO,CAAC;UAChCnB,eAAe,CAACK,iBAAiB,CAAC,QAAQ,CAAC;UAC3CL,eAAe,CAACyB,WAAW,CAAC,UAAU,EAAExB,UAAU,CAACgB,WAAW,EAAE,CAAC;UACjEvB,QAAQ,CAACgC,GAAG,CAAC1B,eAAe,CAAC;;UAE7B;UACAA,eAAe,CAAC2B,WAAW,CACzB,YAAY,EACZnB,MAAI,CAACV,SAAsB,CAACE,eAAe,EAAEC,UAAU,EAAEC,KAAK,GAAG,CAAC,CAAC,EACnEM,MAAI,CACL;;UAED;UACAA,MAAI,CAAChC,kBAAkB,CAACyB,UAAU,CAACgB,WAAW,EAAE,CAAC,GAAGjB,eAAe;UACnE,OAAOC,UAAU,CAAC2B,IAAI,EAAE;QAC1B,CAAC,CAAC;QAEFlC,QAAQ,CAACC,OAAO,GAAGY,OAAO,CAACsB,mBAAmB,EAAE,CAACjC,IAAI,CAAC,UAACkC,OAAO,EAAK;UACjEA,OAAO,CAAChB,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;YACrBD,CAAC,GAAGA,CAAC,CAACE,WAAW,EAAE;YACnBD,CAAC,GAAGA,CAAC,CAACC,WAAW,EAAE;YACnB,OAAOF,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAG,CAAC,GAAG,CAAC;UACnC,CAAC,CAAC;UACFc,OAAO,CAACC,OAAO,CAAC,UAACC,QAAQ,EAAK;YAC5B,IAAIb,OAAO,GAAGT,GAAG,CAACC,SAAS,CAACS,QAAQ,CAACC,UAAU,CAACW,QAAQ,CAAC;YACzD,IAAIV,IAAI,GAAGU,QAAQ,CAACT,OAAO,EAAE,CAACjC,KAAK,CAAC,GAAG,CAAC;YACxC,IAAI2C,aAAa,GAAG,IAAI7E,EAAE,CAACO,EAAE,CAACC,IAAI,CAACQ,UAAU,CAACkD,IAAI,CAACA,IAAI,CAACzB,MAAM,GAAG,CAAC,CAAC,CAAC;YACpEoC,aAAa,CAACT,OAAO,CAACL,OAAO,CAAC;YAC9Bc,aAAa,CAACR,WAAW,CAAC,UAAU,EAAEO,QAAQ,CAACf,WAAW,EAAE,CAAC;YAC7DgB,aAAa,CAACC,QAAQ,GAAGzB,WAAW,CAAC0B,YAAY;YACjDzC,QAAQ,CAACgC,GAAG,CAACO,aAAa,CAAC;YAC3BA,aAAa,CAACtC,OAAO,GAAGvC,EAAE,CAAC8B,OAAO,CAACC,OAAO,EAAE;YAC5C8C,aAAa,CAAC7B,MAAM,GAAG,IAAI;;YAE3B;YACAI,MAAI,CAAChC,kBAAkB,CAACwD,QAAQ,CAACf,WAAW,EAAE,CAAC,GAAGgB,aAAa;UACjE,CAAC,CAAC;UACF,OAAO,IAAI;QACb,CAAC,CAAC;MACJ;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEG,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACxD,QAAQ,GAAG,IAAI,CAACJ,kBAAkB,GAAG,IAAI;MAC9C,IAAI,CAAC6D,eAAe,CAAC,WAAQ,CAAC;IAChC;EACF,CAAC,CAAC;EArOF3B,GAAG,CAACC,SAAS,CAAChD,EAAE,CAAC8C,WAAW,CAAClD,aAAa,GAAGA,aAAa;AAAC"
}