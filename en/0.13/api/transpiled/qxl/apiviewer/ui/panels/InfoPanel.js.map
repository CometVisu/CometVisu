{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "labelText",
    "icon",
    "_labelText",
    "_icon",
    "qxl",
    "apiviewer",
    "ObjectRegistry",
    "register",
    "properties",
    "element",
    "check",
    "init",
    "nullable",
    "apply",
    "isOpen",
    "docNode",
    "async",
    "members",
    "getPanelTitle",
    "getPanelIcon",
    "canDisplayItem",
    "dao",
    "Error",
    "classname",
    "getItemTypeHtml",
    "node",
    "currentClassDocNode",
    "getItemTitleHtml",
    "getItemTextHtml",
    "showDetails",
    "getItemTooltip",
    "getItemHtml",
    "currentDocNode",
    "parentNode",
    "Package",
    "getPackage",
    "getClass",
    "html",
    "util",
    "StringBuilder",
    "inherited",
    "getType",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "add",
    "ui",
    "panels",
    "InfoPanel",
    "getItemCssClasses",
    "tooltipText",
    "tooltip",
    "ClassViewer",
    "createImageHtml",
    "typeHtml",
    "itemHasDetails",
    "ResourceManager",
    "getInstance",
    "toUri",
    "__encodeObject",
    "getName",
    "getFullName",
    "get",
    "object",
    "toHashCode",
    "getPanelHtml",
    "viewer",
    "uppercaseLabelText",
    "charAt",
    "toUpperCase",
    "substring",
    "getIsOpen",
    "_getPanelItems",
    "showInherited",
    "showIncluded",
    "daoClass",
    "result",
    "fromClassHash",
    "classes",
    "_canShowInherited",
    "getInterfaceHierarchy",
    "getClassHierarchy",
    "classIndex",
    "length",
    "currClassNode",
    "getPanelItemObjects",
    "forEach",
    "item",
    "name",
    "undefined",
    "push",
    "__filterItems",
    "nodeArr",
    "expandProperties",
    "showProtected",
    "showPrivate",
    "showInternal",
    "copyArr",
    "concat",
    "i",
    "isPropertyGenerated",
    "lang",
    "Array",
    "removeAt",
    "isPrivate",
    "isProtected",
    "isInternal",
    "_displayNodes",
    "nodes",
    "getBodyElement",
    "innerHTML",
    "_postProcessLinks",
    "AbstractViewer",
    "fixLinks",
    "highlightCode",
    "style",
    "display",
    "getElement",
    "update",
    "classViewer",
    "Promise",
    "resolve",
    "setDocNodeAsync",
    "then",
    "getShowInherited",
    "getShowIncluded",
    "getExpandProperties",
    "getShowProtected",
    "getShowPrivate",
    "getShowInternal",
    "sortItems",
    "_applyElement",
    "_titleElement",
    "firstChild",
    "_bodyElement",
    "lastChild",
    "getTitleElement",
    "getItemElement",
    "body",
    "elem",
    "getElementsByTagName",
    "elemArr",
    "childNodes",
    "getAttribute",
    "toggleShowItemDetails",
    "itemName",
    "fromClassName",
    "textDiv",
    "_showDetails",
    "fromClassNode",
    "getClassByName",
    "getDocNode",
    "arr",
    "tmp",
    "opencloseImgElem",
    "previousSibling",
    "src",
    "exc",
    "error",
    "el",
    "_processed",
    "q",
    "on",
    "e",
    "target",
    "getTarget",
    "mouseup",
    "removeAttribute",
    "setAttribute",
    "Function",
    "onClickValue",
    "click",
    "destruct",
    "statics",
    "ITEM_SPEC_REGEX",
    "SENTENCE_END_REGEX",
    "resolveLinkAttributes",
    "description",
    "packageBaseClass",
    "linkRegex",
    "hit",
    "lastPos",
    "exec",
    "index",
    "createItemLinkHtml",
    "linkText",
    "useIcon",
    "useShortName",
    "classNode",
    "className",
    "label",
    "trim",
    "indexOf",
    "fullName",
    "pos",
    "lastIndexOf",
    "baseClassname",
    "isLoaded",
    "itemNode",
    "cleanItemName",
    "parenPos",
    "__getItemFromClassHierarchy",
    "UiModel",
    "classNodes",
    "l",
    "getItemByNameFromMixins",
    "ClassItem",
    "iconCode",
    "Environment",
    "fullItemName",
    "protocol",
    "host",
    "pathname",
    "location",
    "window",
    "linkHtml",
    "join",
    "createSeeAlsoHtml",
    "see",
    "getSee",
    "seeAlsoLinks",
    "link",
    "isEmpty",
    "seeAlsoHtml",
    "createInheritedFromHtml",
    "over",
    "getOverriddenFrom",
    "createOverwriddenFromHtml",
    "createIncludedFromHtml",
    "baseClassNode",
    "getItem",
    "createDescriptionHtml",
    "desc",
    "getDescription",
    "__extractFirstSentence",
    "text",
    "ret",
    "substr",
    "descriptionHasDetails",
    "createTypeHtml",
    "typeNode",
    "defaultType",
    "types",
    "typeDimensions",
    "typeName",
    "getTypes",
    "j",
    "dimensions",
    "PRIMITIVES",
    "MDC_LINKS",
    "lastDot",
    "parseInt",
    "createErrorHtml",
    "errors",
    "getErrors",
    "attributes",
    "msg",
    "line",
    "column",
    "createDeprecationHtml",
    "isDeprecated",
    "getDeprecationText",
    "createAccessHtml",
    "isPublic",
    "access",
    "createInfoRequiredByHtml",
    "requiredBy",
    "getRequiredBy",
    "createSourceLinkHtml",
    "getLineNumber",
    "sourceUri",
    "getSourceUri",
    "title",
    "setTitleClass",
    "cssClasses"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/ui/panels/InfoPanel.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n     * Henner Kollmann (hkollmann)\n\n************************************************************************ */\n\n/**\n * @require(qx.module.event.GestureHandler)\n * @require(qx.module.Attribute)\n * @require(qx.module.event.Native)\n *\n * @ignore(location.*)\n */\nqx.Class.define(\"qxl.apiviewer.ui.panels.InfoPanel\", {\n  type: \"abstract\",\n\n  extend: qx.core.Object,\n\n  /**\n   * Creates an info panel. An info panel shows the information about one item\n   * type (e.g. for public methods).\n   * @param labelText\n   * {String} the label text describing the node type.\n   * @param icon\n   */\n  construct(labelText, icon) {\n    super();\n    this._labelText = labelText;\n    this._icon = icon;\n    qxl.apiviewer.ObjectRegistry.register(this);\n  },\n\n  properties: {\n    /** top level DOM node of the panel */\n    element: {\n      check: \"Element\",\n      init: null,\n      nullable: true,\n      apply: \"_applyElement\",\n    },\n\n    /** whether the info panel is open */\n    isOpen: {\n      check: \"Boolean\",\n      init: true,\n    },\n\n    docNode: {\n      nullable: true,\n      async: true,\n    },\n  },\n\n  members: {\n    _labelText: null,\n    _icon: null,\n\n    /**\n     * Returns the title of the panel\n     *\n     * @return {String}\n     */\n    getPanelTitle() {\n      return this._labelText;\n    },\n\n    /**\n     * Returns the icon for the panel\n     *\n     * @return {String}\n     */\n    getPanelIcon() {\n      return this._icon;\n    },\n\n    /**\n     * Whether the panel can display the given item node\n     * @param dao\n     * @return {Boolean} Whether the panel can display the given item node\n     */\n    canDisplayItem(dao) {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".canDisplayItem\"\n      );\n    },\n\n    /**\n     * Get the type HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTypeHtml(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the title HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTitleHtml(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the description text HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTextHtml(node, currentClassDocNode, showDetails) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    getItemTooltip(node, currentClassDocNode) {\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing the information about a class item. The root\n     * HTML element must be a table row (&lt;tr&gt;).\n     * @abstract\n     * @param node\n     * {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentDocNode\n     * @param showDetails\n     * {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemHtml(node, currentDocNode, showDetails) {\n      var parentNode;\n      if (\n        node instanceof qxl.apiviewer.dao.Class ||\n        node instanceof qxl.apiviewer.dao.Package\n      ) {\n        parentNode = node.getPackage();\n      } else {\n        parentNode = node.getClass();\n      }\n      var html = new qx.util.StringBuilder();\n\n      var inherited =\n        parentNode &&\n        parentNode != currentDocNode &&\n        parentNode.getType() == \"class\";\n      var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(node, inherited);\n\n      // Create the title row\n      html.add(\n        '<tr class=\"',\n        qxl.apiviewer.ui.panels.InfoPanel.getItemCssClasses(node),\n        '\">'\n      );\n      var tooltipText = this.getItemTooltip(node, currentDocNode);\n      var tooltip = tooltipText\n        ? 'title=\"' + tooltipText + '\" alt=\"' + tooltipText + '\"'\n        : \"\";\n      html.add(\n        '<td class=\"icon\" ',\n        tooltip,\n        \">\",\n        qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl),\n        \"</td>\"\n      );\n\n      var typeHtml = this.getItemTypeHtml(node, currentDocNode);\n      html.add(\n        '<td class=\"type\">',\n        typeHtml ? typeHtml + \"&nbsp;\" : \"&nbsp;\",\n        \"</td>\"\n      );\n\n      html.add('<td class=\"toggle\">');\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        // This node has details -> Show the detail button\n        html.add(\n          '<img src=\"',\n          qx.util.ResourceManager.getInstance().toUri(\n            \"qxl/apiviewer/image/open.gif\"\n          ),\n          '\" onclick=\"',\n          this.__encodeObject(this),\n          \".toggleShowItemDetails('\",\n          node.getName(),\n          \"'\",\n          parentNode != currentDocNode\n            ? \",'\" + parentNode.getFullName() + \"'\"\n            : \"\",\n          ')\"/>'\n        );\n      } else {\n        html.add(\"&#160;\");\n      }\n\n      html.add(\"</td>\");\n\n      html.add('<td class=\"text\">');\n\n      // Create headline\n      html.add(\"<h3\");\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        html.add(\n          ' onclick=\"',\n          this.__encodeObject(this),\n          \".toggleShowItemDetails('\",\n          node.getName(),\n          \"'\",\n          parentNode != currentDocNode\n            ? \",'\" + parentNode.getFullName() + \"'\"\n            : \"\",\n          ')\">'\n        );\n      } else {\n        html.add(\">\");\n      }\n\n      html.add(this.getItemTitleHtml(node, currentDocNode));\n\n      html.add(\"</h3>\");\n\n      // Create content area\n      html.add('<div _itemName=\"', node.getName(), '\">');\n      html.add(this.getItemTextHtml(node, currentDocNode, showDetails));\n      html.add(\"</div>\");\n\n      html.add(\"</td>\");\n      html.add(\"</tr>\");\n      return html.get();\n    },\n\n    /**\n     * Checks whether a class item has details. This method is abstract. Sub\n     * classes must override it.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {Boolean} whether the class item has details.\n     */\n    itemHasDetails(node, currentClassDocNode) {\n      return true;\n    },\n\n    __encodeObject(object) {\n      return (\n        \"qxl.apiviewer.ObjectRegistry.getObjectFromHashCode('\" +\n        object.toHashCode() +\n        \"')\"\n      );\n    },\n\n    /**\n     * Get the HTML fragment of the info panel\n     * @param viewer\n     * @return {String} HTML fragment of the info panel\n     */\n    getPanelHtml(viewer) {\n      var uppercaseLabelText =\n        this._labelText.charAt(0).toUpperCase() + this._labelText.substring(1);\n\n      var html = new qx.util.StringBuilder('<div class=\"info-panel\"><h2>');\n      html.add(\n        '<img class=\"openclose\" src=\"',\n        qx.util.ResourceManager.getInstance().toUri(\n          \"qxl/apiviewer/image/\" + (this.getIsOpen() ? \"close.gif\" : \"open.gif\")\n        ),\n        '\" onclick=\"',\n        this.__encodeObject(viewer),\n        \".togglePanelVisibility(\" + this.__encodeObject(this),\n        ')\"/> ',\n        '<span onclick=\"',\n        this.__encodeObject(viewer),\n        \".togglePanelVisibility(\",\n        this.__encodeObject(this),\n        ')\">',\n        uppercaseLabelText,\n        \"</span>\"\n      );\n\n      html.add(\"</h2><div></div></div>\");\n\n      return html.get();\n    },\n\n    /**\n     * Returns a list of all items to display in the panel\n     * @param showInherited {Boolean} whether to show inherited items\n     * @param showIncluded\n     * @param daoClass\n     * @return {qxl.apiviewer.dao.ClassItem[]} list of all items to display in the\n     * panel\n     */\n    _getPanelItems(showInherited, showIncluded, daoClass) {\n      if (!daoClass) {\n        return [];\n      }\n\n      var result = [];\n      var fromClassHash = {};\n      var classes;\n\n      // Get the classes to show\n      if (showInherited && this._canShowInherited()) {\n        if (daoClass.getType() == \"interface\") {\n          classes = daoClass.getInterfaceHierarchy();\n        } else {\n          classes = daoClass.getClassHierarchy();\n        }\n      } else {\n        classes = [daoClass];\n      }\n\n      for (var classIndex = 0; classIndex < classes.length; classIndex++) {\n        var currClassNode = classes[classIndex];\n        this.getPanelItemObjects(\n          currClassNode,\n          showInherited || showIncluded\n        ).forEach((item) => {\n          var name = item.getName();\n          if (fromClassHash[name] === undefined) {\n            result.push(item);\n            fromClassHash[name] = item;\n          }\n        });\n      }\n\n      return result;\n    },\n\n    _canShowInherited() {\n      return false;\n    },\n\n    getPanelItemObjects(daoClass, showInherited) {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".getPanelItemObjects\"\n      );\n    },\n\n    /**\n     * Filter the item list to display only the desired items.\n     * @param nodeArr\n     * {qxl.apiviewer.dao.ClassItem[]} array of class items\n     * @param expandProperties\n     * @param showProtected\n     * {Boolean} whether to show protected items\n     * @param showPrivate\n     * {Boolean} whether to show private items\n     * @param showInternal\n     * {Boolean} whether to show internal items\n     * @return {qxl.apiviewer.dao.ClassItem[]} filtered list of items\n     */\n    __filterItems(\n      nodeArr,\n      expandProperties,\n      showProtected,\n      showPrivate,\n      showInternal\n    ) {\n      var copyArr = nodeArr.concat();\n      for (var i = nodeArr.length - 1; i >= 0; i--) {\n        var node = nodeArr[i];\n        if (node.isPropertyGenerated() && !expandProperties) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isPrivate() && !showPrivate) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isProtected() && !showProtected) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isInternal() && !showInternal) {\n          qx.lang.Array.removeAt(copyArr, i);\n        }\n      }\n\n      return copyArr;\n    },\n\n    _displayNodes(nodes, currentClassDocNode) {\n      // Show the nodes\n      if (nodes && nodes.length > 0) {\n        var html = new qx.util.StringBuilder(\n          '<table cellspacing=\"0\" cellpadding=\"0\" class=\"info\" width=\"100%\">'\n        );\n\n        for (var i = 0; i < nodes.length; i++) {\n          html.add(this.getItemHtml(nodes[i], currentClassDocNode, false));\n        }\n\n        html.add(\"</table>\");\n\n        this.getBodyElement().innerHTML = html.get();\n        this._postProcessLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(this.getBodyElement());\n        this.getBodyElement().style.display = !this.getIsOpen() ? \"none\" : \"\";\n        this.getElement().style.display = \"\";\n      } else {\n        this.getElement().style.display = \"none\";\n      }\n    },\n\n    /**\n     * Updates an info panel.\n     *\n     * @param classViewer\n     *          {qxl.apiviewer.ui.ClassViewer} parent class viewer widget.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qx.Promise}\n     */\n    update(classViewer, currentClassDocNode) {\n      if (!this.getElement()) {\n        return qx.Promise.resolve(true);\n      }\n\n      return this.setDocNodeAsync(currentClassDocNode).then(() => {\n        var showInherited = classViewer.getShowInherited();\n        var showIncluded = classViewer.getShowIncluded();\n        var nodeArr = this._getPanelItems(\n          showInherited,\n          showIncluded,\n          currentClassDocNode\n        );\n\n        if (nodeArr && nodeArr.length > 0) {\n          var expandProperties = classViewer.getExpandProperties();\n          var showProtected = classViewer.getShowProtected();\n          var showPrivate = classViewer.getShowPrivate();\n          var showInternal = classViewer.getShowInternal();\n\n          nodeArr = this.__filterItems(\n            nodeArr,\n            expandProperties,\n            showProtected,\n            showPrivate,\n            showInternal\n          );\n          classViewer.sortItems(nodeArr);\n        }\n\n        this._displayNodes(nodeArr, currentClassDocNode);\n      });\n    },\n\n    _applyElement(element) {\n      this._titleElement = element.firstChild;\n      this._bodyElement = element.lastChild;\n    },\n\n    /** DOM node of the title of the panel */\n    getTitleElement() {\n      return this._titleElement;\n    },\n\n    /** DOM node of the body of the panel */\n    getBodyElement() {\n      return this._bodyElement;\n    },\n\n    /**\n     * Gets the HTML element showing the details of an item.\n     *\n     * @param panel\n     *          {InfoPanel} the info panel of the item.\n     * @param name\n     *          {String} the item's name.\n     * @return {Element} the HTML element showing the details of the item.\n     * @ignore(getElementsByTagName)\n     */\n\n    getItemElement(name) {\n      var body = this.getBodyElement();\n      var elem = body.getElementsByTagName(\"TBODY\")[0];\n      if (!elem) {\n        return null;\n      }\n      var elemArr = elem.childNodes;\n\n      for (var i = 0; i < elemArr.length; i++) {\n        // ARRG, should be implemented in a more fault-tolerant way\n        // iterate over tr's, look inside the third \"td\" and there the second\n        // element\n        if (\n          elemArr[i].childNodes[3].childNodes[1].getAttribute(\"_itemName\") ==\n          name\n        ) {\n          return elemArr[i].childNodes[3].childNodes[1];\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Event handler. Called when the user clicked a button for showing/hiding\n     * the details of an item.\n     * @param itemName\n     * @param fromClassName\n     * {String} the name of the class the item the item was defined in.\n     */\n    toggleShowItemDetails(itemName, fromClassName) {\n      try {\n        var textDiv = this.getItemElement(itemName);\n\n        if (!textDiv) {\n          throw Error(\"Element for name '\" + itemName + \"' not found!\");\n        }\n\n        var showDetails = textDiv._showDetails ? !textDiv._showDetails : true;\n        textDiv._showDetails = showDetails;\n\n        var fromClassNode = fromClassName\n          ? qxl.apiviewer.dao.Class.getClassByName(fromClassName)\n          : this.getDocNode();\n        var node = null;\n        for (\n          var arr = this.getPanelItemObjects(fromClassNode, true), i = 0;\n          i < arr.length && !node;\n          i++\n        ) {\n          var tmp = arr[i];\n          if (tmp.getName() == itemName) {\n            node = tmp;\n          }\n        }\n        if (!node) {\n          return;\n        }\n\n        // Update the close/open image\n        var opencloseImgElem = textDiv.parentNode.previousSibling.firstChild;\n        opencloseImgElem.src = qx.util.ResourceManager.getInstance().toUri(\n          showDetails\n            ? \"qxl/apiviewer/image/close.gif\"\n            : \"qxl/apiviewer/image/open.gif\"\n        );\n\n        // Update content\n        textDiv.innerHTML = this.getItemTextHtml(\n          node,\n          this.getDocNode(),\n          showDetails\n        );\n        this._postProcessLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(textDiv);\n      } catch (exc) {\n        this.error(\"Toggling item details failed\");\n        this.error(exc);\n      }\n    },\n\n    /**\n     * Convert mouseup and click listener attached to tap / pointerup listener.\n     *\n     * @param el\n     *          {Element} The element containing the links.\n     */\n    _postProcessLinks(el) {\n      if (el._processed) {\n        return;\n      }\n      q(el).on(\"pointerup\", function (e) {\n        var target = e.getTarget();\n        var mouseup = target.getAttribute(\"onmouseup\");\n        if (mouseup) {\n          target.removeAttribute(\"onmouseup\");\n          target.setAttribute(\"oldonmouseup\", mouseup);\n        } else {\n          mouseup = target.getAttribute(\"oldonmouseup\");\n        }\n\n        if (mouseup) {\n          Function(mouseup)();\n        }\n      });\n\n      q(el).on(\"tap\", function (e) {\n        var onClickValue =\n          \"event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;\";\n        var target = e.getTarget();\n        var click = target.getAttribute(\"onclick\");\n        if (click && click != onClickValue) {\n          target.removeAttribute(\"onclick\");\n          target.setAttribute(\"oldonclick\", click);\n          target.setAttribute(\"onclick\", onClickValue);\n        } else {\n          click = target.getAttribute(\"oldonclick\");\n        }\n\n        if (click) {\n          Function(click)();\n        }\n      });\n\n      el._processed = true;\n    },\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct() {\n    this._titleElement = this._bodyElement = null;\n  },\n\n  statics: {\n    /**\n     * {regexp} The regexp for parsing a item name (e.g.\n     * \"mypackage.MyClass#MY_CONSTANT alternative text\").\n     */\n    ITEM_SPEC_REGEX: /^(([\\w\\.]+)?(#\\w+(\\([^\\)]*\\))?)?)(\\s+(.*))?$/,\n\n    /** {regexp} The regexp that finds the end of a sentence. */\n    SENTENCE_END_REGEX: /[^\\.].\\.(\\s|<)/,\n\n    /**\n     * Creates HTML that replaces all &#64;link-attributes with links.\n     *\n     * @param description\n     *          {String} the description.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use for\n     *          auto-adding packages.\n     * @return {String} HTML fragment\n     */\n    resolveLinkAttributes(description, packageBaseClass) {\n      var linkRegex = /\\{@link([^\\}]*)\\}/gm;\n\n      var html = new qx.util.StringBuilder();\n      var hit;\n      var lastPos = 0;\n\n      while ((hit = linkRegex.exec(description))) {\n        // Add the text before the link\n        html.add(\n          description.substring(lastPos, hit.index) +\n            this.createItemLinkHtml(hit[1], packageBaseClass)\n        );\n\n        lastPos = hit.index + hit[0].length;\n      }\n\n      // Add the text after the last hit\n      html.add(description.substring(lastPos, description.length));\n\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML for a link to an item.\n     *\n     * @param linkText\n     *          {String} the link text (e.g. \"mypackage.MyClass#myMethod alt\n     *          text\")\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use when\n     *          auto-adding the package to a class name having no package\n     *          specified. If null, no automatic package addition is done.\n     * @param useIcon\n     *          {Boolean?true} whether to add an icon to the link.\n     * @param useShortName\n     *          {Boolean?false} whether to use the short name.\n     * @return {String} HTML fragment of the link\n     */\n    createItemLinkHtml(linkText, packageBaseClass, useIcon, useShortName) {\n      var classNode = null;\n      if (!useIcon) {\n        useIcon = true;\n      }\n\n      var className;\n      var itemName = null;\n      var label = \"\";\n      var style = \"\";\n\n      if (typeof linkText == \"string\") {\n        linkText = linkText.trim();\n\n        if (linkText.charAt(0) == '\"' || linkText.charAt(0) == \"<\") {\n          // This is a String or a link to a URL -> Just use it as it is\n          return linkText;\n        }\n\n        // This is a link to another class or method -> Create an item link\n        // Separate item name from label\n        var hit = this.ITEM_SPEC_REGEX.exec(linkText);\n\n        if (!hit) {\n          // Malformed item name\n          return linkText;\n        }\n        className = hit[2];\n        itemName = hit[3];\n        label = hit[6];\n\n        // Make the item name absolute\n        if (!className || className.length == 0) {\n          // This is a relative link to a method -> Add the current class\n          className = packageBaseClass.getClass\n            ? packageBaseClass.getClass().getFullName() + itemName\n            : packageBaseClass.getFullName();\n        } else if (packageBaseClass && className.indexOf(\".\") == -1) {\n          classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n\n          // classNode could be a native JS constructor (String, Boolean, ...)\n          if (\n            !classNode ||\n            !classNode.classname ||\n            classNode.getPackage().getName() !== \"\"\n          ) {\n            // The class name has no package -> Use the same package as the\n            // current class\n            if (packageBaseClass instanceof qxl.apiviewer.dao.Package) {\n              className = packageBaseClass.getFullName() + \".\" + className;\n            } else {\n              let fullName = packageBaseClass.getFullName();\n              let pos = fullName.lastIndexOf(\".\");\n              let baseClassname = fullName.substring(pos + 1);\n              if (baseClassname == className) {\n                className = fullName;\n                classNode = packageBaseClass;\n              } else {\n                className = fullName.substring(0, pos + 1) + className;\n              }\n            }\n          }\n        }\n\n        // Get the node info\n        if (!label || label.length == 0) {\n          // We have no label -> Use the item name as label\n          label = hit[1];\n        }\n\n        // Add the right icon\n        if (useIcon) {\n          if (!classNode) {\n            classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n          }\n\n          // If the class is not loaded, then itemNode is not available - the only side effect of which is that\n          //  the icon is not available.  However, this is acceptable because the only time the classes might\n          //  not be loaded will be if referenced from within comments and where the class is not a dependent\n          //  class, in which cases icons are not needed.\n          if (classNode && classNode.isLoaded && classNode.isLoaded()) {\n            var itemNode;\n\n            if (itemName) {\n              // The links points to a item of the class\n              var cleanItemName = itemName.substring(1);\n              var parenPos = cleanItemName.indexOf(\"(\");\n\n              if (parenPos != -1) {\n                cleanItemName = cleanItemName.substring(0, parenPos).trim();\n              }\n              itemNode = this.__getItemFromClassHierarchy(\n                cleanItemName,\n                classNode\n              );\n              if (\n                !itemNode &&\n                qxl.apiviewer.UiModel.getInstance().getShowIncluded()\n              ) {\n                if (qxl.apiviewer.UiModel.getInstance().getShowInherited()) {\n                  var classNodes = [classNode];\n                  if (classNode.getType() == \"interface\") {\n                    classNodes = classNode.getInterfaceHierarchy();\n                  } else {\n                    classNodes = classNode.getClassHierarchy();\n                  }\n                  for (var i = 0, l = classNodes.length; i < l; i++) {\n                    itemNode =\n                      classNodes[i].getItemByNameFromMixins(cleanItemName);\n                    if (itemNode) {\n                      break;\n                    }\n                  }\n                } else {\n                  itemNode = classNode.getItemByNameFromMixins(cleanItemName);\n                }\n              }\n            } else {\n              // The links points to the class\n              itemNode = classNode;\n            }\n\n            if (itemNode && !(itemNode instanceof qxl.apiviewer.dao.Package)) {\n              className = itemNode.getFullName\n                ? itemNode.getFullName()\n                : itemNode.name;\n            }\n          }\n        }\n      } else {\n        itemNode = linkText;\n\n        if (itemNode instanceof qxl.apiviewer.dao.Class) {\n          className = label = itemNode.getFullName();\n        } else if (itemNode instanceof qxl.apiviewer.dao.ClassItem) {\n          className = itemNode.getClass().getName();\n          itemName = label = itemNode.getFullName();\n        }\n      }\n\n      if (itemNode) {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(itemNode);\n        var iconCode = qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl);\n\n        if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n          if (iconCode.indexOf(\"overlay_\") !== -1) {\n            style = \"margin-left:18px;\";\n          }\n        }\n      }\n\n      // Create a real bookmarkable link\n      // NOTE: The onclick-handler must be added by HTML code. If it\n      // is added using the DOM element then the href is followed.\n      //      var fullItemName = className + (itemName ? itemName : \"\");\n      /* eslint-disable-next-line max-statements-per-line */\n      var fullItemName =\n        itemNode && itemNode.getFullName\n          ? itemNode.getFullName()\n          : classNode && classNode.getFullName\n          ? classNode.getFullName() + itemName\n          : className;\n      var protocol;\n      var host;\n      var pathname;\n\n      // Opera 10.5 loses the reference to \"window\"\n      // See http://bugzilla.qooxdoo.org/show_bug.cgi?id=3516 for details\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"opera\" &&\n        qx.core.Environment.get(\"engine.version\") > 9\n      ) {\n        protocol = location.protocol;\n        host = location.host;\n        pathname = location.pathname;\n      } else {\n        protocol = window.location.protocol;\n        host = window.location.host;\n        pathname = window.location.pathname;\n      }\n\n      var linkHtml = [\n        '<span style=\"white-space: nowrap;\">',\n        typeof iconCode != \"undefined\" ? iconCode : \"\",\n        '<a style=\"' + style + '\" href=\"' + protocol,\n        \"//\",\n        host,\n        pathname,\n        \"#\",\n        fullItemName,\n        '\" onclick=\"return false;\"',\n        '\" onmouseup=\"qxl.apiviewer.TabViewController.instance.onSelectItem(\\'',\n        fullItemName,\n        \"'); return false;\\\"\",\n        ' title=\"',\n        fullItemName,\n        '\">',\n        label,\n        \"</a></span>\",\n      ];\n\n      return linkHtml.join(\"\");\n    },\n\n    /**\n     * Creates the HTML showing the &#64;see attributes of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML showing the &#64;see attributes.\n     */\n    createSeeAlsoHtml(node) {\n      var see = node.getSee();\n      if (see.length > 0) {\n        var seeAlsoLinks = new qx.util.StringBuilder();\n\n        for (var i = 0; i < see.length; i++) {\n          if (seeAlsoLinks.length != 0) {\n            seeAlsoLinks.add(\", \");\n          }\n          var link = this.createItemLinkHtml(see[i], node);\n          if (link.indexOf(\"http\") === 0) {\n            link = \"<a target='_blank' href='\" + link + \"'>\" + link + \"</a>\";\n          }\n          seeAlsoLinks.add(link);\n        }\n\n        if (!seeAlsoLinks.isEmpty()) {\n          // We had @see attributes\n          var seeAlsoHtml = new qx.util.StringBuilder();\n          seeAlsoHtml.add(\n            '<div class=\"item-detail-headline\">',\n            \"See also:\",\n            \"</div>\",\n            '<div class=\"item-detail-text\">',\n            seeAlsoLinks,\n            \"</div>\"\n          );\n          return seeAlsoHtml.get();\n        }\n      }\n\n      // Nothing found\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing information about inheritance\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createInheritedFromHtml(node, currentClassDocNode) {\n      if (\n        node.getClass().getType() != \"mixin\" &&\n        node.getClass() != currentClassDocNode\n      ) {\n        let html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Inherited from:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            node.getClass().getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      let over = node.getOverriddenFrom();\n      if (over) {\n        let html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Defined in Mixin:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            over.getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is overridden\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @return {String} HTML fragment\n     */\n    createOverwriddenFromHtml(node) {\n      if (node.getOverriddenFrom()) {\n        var html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Overrides:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            node.getOverriddenFrom().getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is included from a mixin\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createIncludedFromHtml(node, currentClassDocNode) {\n      if (node.getClass() != currentClassDocNode) {\n        if (node.getClass().getType() == \"mixin\") {\n          var html = new qx.util.StringBuilder(\n            '<div class=\"item-detail-headline\">',\n            \"Included from mixin:\",\n            \"</div>\",\n            '<div class=\"item-detail-text\">',\n            qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n              node.getClass().getFullName() + \"#\" + node.getName()\n            ),\n            \"</div>\"\n          );\n          return html.get();\n        }\n      }\n      return \"\";\n    },\n\n    /**\n     * Gets a class item from baseClassNode. if it is not found there, the\n     * class' hierarchy is searched until the item is found.\n     *\n     * @param itemName\n     *          {String} the name of the item.\n     * @param baseClassNode\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {qxl.apiviewer.dao.ClassItem} the classItem\n     *\n     */\n    __getItemFromClassHierarchy(itemName, baseClassNode) {\n      var itemNode = baseClassNode.getItem(itemName);\n      if (itemNode) {\n        return itemNode;\n      }\n      var classNodes = baseClassNode.getClassHierarchy();\n      for (var i = 0, l = classNodes.length; i < l; i++) {\n        var currClassNode = classNodes[i];\n        itemNode = currClassNode.getItem(itemName);\n        if (itemNode) {\n          break;\n        }\n      }\n      return itemNode;\n    },\n\n    /**\n     * Creates the HTML showing the description of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class|qxl.apiviewer.dao.Package?null} the doc node of\n     *          the class to use for auto-adding packages.\n     * @param showDetails\n     *          {Boolean} whether to show details. If <code>false</code> only\n     *          the first sentence of the description will be shown.\n     * @return {String} the HTML showing the description.\n     */\n    createDescriptionHtml(node, packageBaseClass, showDetails) {\n      var desc = node.getDescription();\n\n      if (desc) {\n        if (!showDetails) {\n          desc = this.__extractFirstSentence(desc);\n        }\n        return (\n          '<div class=\"item-desc\">' +\n          this.resolveLinkAttributes(desc, packageBaseClass) +\n          \"</div>\"\n        );\n      }\n      return \"\";\n    },\n\n    /**\n     * Extracts the first sentence from a text.\n     *\n     * @param text\n     *          {String} the text.\n     * @return {String} the first sentence from the text.\n     */\n    __extractFirstSentence(text) {\n      var ret = text;\n\n      // Extract first block\n      var pos = ret.indexOf(\"</p>\");\n\n      if (pos != -1) {\n        ret = ret.substr(0, pos + 4);\n\n        var hit = this.SENTENCE_END_REGEX.exec(ret);\n        if (hit) {\n          ret = text.substring(0, hit.index + hit[0].length - 1) + \"</p>\";\n        }\n      }\n\n      return ret;\n    },\n\n    /**\n     * Returns whether the description of an item has details (has more than one\n     * sentence).\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @return {Boolean} whether the description of an item has details.\n     */\n    descriptionHasDetails(node) {\n      var desc = node.getDescription();\n      if (desc) {\n        return this.__extractFirstSentence(desc) != desc;\n      }\n      return false;\n    },\n\n    /**\n     * Creates the HTML showing the type of a doc node.\n     *\n     * @param typeNode\n     *          {qxl.apiviewer.dao.ClassItem} the doc node to show the type for.\n     * @param defaultType\n     *          {String} the type name to use if <code>typeNode</code> is\n     *          <code>null</code> or defines no type.\n     * @param useShortName\n     *          {Boolean?true} whether to use short class names (without\n     *          package).\n     * @return {String} the HTML showing the type.\n     */\n    createTypeHtml(typeNode, defaultType, useShortName) {\n      if (!useShortName) {\n        useShortName = true;\n      }\n\n      var types = [];\n      var typeDimensions;\n      var typeName;\n      var linkText;\n\n      if (typeNode) {\n        types = typeNode.getTypes();\n      }\n\n      var typeHtml = new qx.util.StringBuilder();\n      if (types.length == 0) {\n        typeHtml.add(defaultType);\n      } else {\n        if (types.length > 1) {\n          typeHtml.add(\"(\");\n        }\n\n        for (var j = 0; j < types.length; j++) {\n          if (j > 0) {\n            typeHtml.add(\" | \");\n          }\n\n          typeName = types[j].type;\n          typeDimensions = types[j].dimensions;\n\n          if (qxl.apiviewer.ui.ClassViewer.PRIMITIVES[typeName]) {\n            if (qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName]) {\n              typeHtml.add(\n                '<span style=\"white-space: nowrap;\"><a href=\"' +\n                  qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName] +\n                  '\" target=\"_blank\" title=\"' +\n                  typeName +\n                  '\">' +\n                  typeName +\n                  \"</a></span>\"\n              );\n            } else {\n              typeHtml.add(typeName);\n            }\n          } else {\n            linkText = typeName;\n\n            if (useShortName) {\n              var lastDot = typeName.lastIndexOf(\".\");\n\n              if (lastDot != -1) {\n                linkText += \" \" + typeName.substring(lastDot + 1);\n              }\n            }\n            typeHtml.add(\n              qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n                linkText,\n                typeNode.getClass(),\n                false,\n                true\n              )\n            );\n          }\n\n          if (typeDimensions) {\n            for (var i = 0; i < parseInt(typeDimensions); i++) {\n              typeHtml.add(\"[]\");\n            }\n          }\n        }\n\n        if (types.length > 1) {\n          typeHtml.add(\")\");\n        }\n      }\n\n      return typeHtml.get();\n    },\n\n    /**\n     * Creates the HTML showing the documentation errors of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param currentClassDocNode\n     *          {Map} the doc node of the currently displayed class\n     * @return {String} the HTML showing the documentation errors.\n     */\n    createErrorHtml(node, currentClassDocNode) {\n      var errors = node.getErrors();\n\n      if (errors.length > 0) {\n        var html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-error\">',\n          \"Documentation errors:\",\n          \"</div>\"\n        );\n\n        for (var i = 0; i < errors.length; i++) {\n          html.add(\n            '<div class=\"item-detail-text\">',\n            errors[i].attributes.msg,\n            \" <br/>\"\n          );\n\n          if (\n            errors[i].attributes.line ||\n            node.getClass() != currentClassDocNode\n          ) {\n            html.add(\"(\");\n\n            if (node.getClass() != currentClassDocNode) {\n              html.add(node.getClass().getFullName(), \"; \");\n            }\n\n            if (errors[i].attributes.line) {\n              html.add(\"Line: \", errors[i].attributes.line);\n              if (errors[i].attributes.column) {\n                html.add(\", Column:\", errors[i].attributes.column);\n              }\n            }\n            html.add(\")\");\n          }\n          html.add(\"</div>\");\n        }\n\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is deprecated\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param itemName\n     *          {String} type of the item, e.g. \"method\", \"property\",\n     *          \"constant\", ...\n     * @return {String} the HTML fragment.\n     */\n    createDeprecationHtml(node, itemName) {\n      if (!node.isDeprecated()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-error\">', \"Deprecated:\", \"</div>\");\n\n      html.add('<div class=\"item-detail-text\">');\n      var desc = node.getDeprecationText();\n      if (desc) {\n        html.add(desc);\n      } else {\n        html.add(\"This \", itemName, \" is deprecated!\");\n      }\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing the access protection for a class item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML fragment.\n     */\n    createAccessHtml(node) {\n      if (node.isPublic()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"Access:\", \"</div>\");\n      html.add('<div class=\"item-detail-text\">');\n      var access = [];\n      if (node.isPrivate()) {\n        access.push(\"private\");\n      }\n      if (node.isInternal()) {\n        access.push(\"internal\");\n      }\n      if (node.isProtected()) {\n        access.push(\"protected\");\n      }\n      html.add(access.join(\" \"));\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing interfaces requiring this node\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createInfoRequiredByHtml(node) {\n      var html = new qx.util.StringBuilder();\n      var requiredBy = node.getRequiredBy();\n      if (requiredBy.length > 0) {\n        html.add(\n          '<div class=\"item-detail-headline\">',\n          \"Required by:\",\n          \"</div>\"\n        );\n        for (var i = 0; i < requiredBy.length; i++) {\n          html.add(\n            '<div class=\"item-detail-text\">',\n            qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n              requiredBy[i].getFullName() + \"#\" + node.getName()\n            ),\n            \"</div>\"\n          );\n        }\n      }\n      return html.get();\n    },\n\n    /**\n     * Creates the link to the source file that definen an item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createSourceLinkHtml(node) {\n      if (!node.getLineNumber || !node.getLineNumber()) {\n        return \"\";\n      }\n\n      var sourceUri = qxl.apiviewer.ui.ClassViewer.getSourceUri(node);\n      if (!sourceUri) {\n        return \"\";\n      }\n\n      var title;\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        title = node.getFullName();\n      } else {\n        title = node.getClass().getFullName() + \"#\" + node.getName();\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"View Source:\", \"</div>\");\n      html.add(\n        '<div class=\"item-detail-text\">',\n        '<a href=\"' + sourceUri + '\" target=\"_blank\">' + title + \"</a>\",\n        \"</div>\"\n      );\n\n      return html.get();\n    },\n\n    /**\n     * Wraps a HTML fragment with a \"span\" element with CSS classes for the\n     * item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @param title\n     *          {String} original title\n     * @return {String} HMTL fragment\n     */\n    setTitleClass(node, title) {\n      var html = [\"<span class='\", \"\", \"'>\", title, \"</span>\"];\n      html[1] = this.getItemCssClasses(node);\n      return html.join(\"\");\n    },\n\n    /**\n     * Gets CSS classes for a class item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {String} CSS classes separated by \" \"\n     */\n    getItemCssClasses(node) {\n      var cssClasses = [];\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        if (node.isDeprecated()) {\n          cssClasses.push(\"item-deprecated\");\n        }\n        if (node.isPrivate()) {\n          cssClasses.push(\"item-private\");\n        }\n        if (node.isInternal()) {\n          cssClasses.push(\"item-internal\");\n        }\n        if (node.isProtected()) {\n          cssClasses.push(\"item-protected\");\n        }\n      }\n      return cssClasses.join(\" \");\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}