{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "labelText",
    "icon",
    "constructor",
    "call",
    "_labelText",
    "_icon",
    "qxl",
    "apiviewer",
    "ObjectRegistry",
    "register",
    "properties",
    "element",
    "check",
    "init",
    "nullable",
    "apply",
    "isOpen",
    "docNode",
    "async",
    "members",
    "getPanelTitle",
    "getPanelIcon",
    "canDisplayItem",
    "dao",
    "Error",
    "classname",
    "getItemTypeHtml",
    "node",
    "currentClassDocNode",
    "getItemTitleHtml",
    "getItemTextHtml",
    "showDetails",
    "getItemTooltip",
    "getItemHtml",
    "currentDocNode",
    "parentNode",
    "Package",
    "getPackage",
    "getClass",
    "html",
    "util",
    "StringBuilder",
    "inherited",
    "getType",
    "iconUrl",
    "TreeUtil",
    "getIconUrl",
    "add",
    "ui",
    "panels",
    "InfoPanel",
    "getItemCssClasses",
    "tooltipText",
    "tooltip",
    "ClassViewer",
    "createImageHtml",
    "typeHtml",
    "itemHasDetails",
    "ResourceManager",
    "getInstance",
    "toUri",
    "__encodeObject",
    "getName",
    "getFullName",
    "get",
    "__P_580_0",
    "object",
    "toHashCode",
    "getPanelHtml",
    "viewer",
    "uppercaseLabelText",
    "charAt",
    "toUpperCase",
    "substring",
    "getIsOpen",
    "_getPanelItems",
    "showInherited",
    "showIncluded",
    "daoClass",
    "result",
    "fromClassHash",
    "classes",
    "_canShowInherited",
    "getInterfaceHierarchy",
    "getClassHierarchy",
    "classIndex",
    "length",
    "currClassNode",
    "getPanelItemObjects",
    "forEach",
    "item",
    "name",
    "undefined",
    "push",
    "__filterItems",
    "__P_580_1",
    "nodeArr",
    "expandProperties",
    "showProtected",
    "showPrivate",
    "showInternal",
    "copyArr",
    "concat",
    "i",
    "isPropertyGenerated",
    "lang",
    "Array",
    "removeAt",
    "isPrivate",
    "isProtected",
    "isInternal",
    "_displayNodes",
    "nodes",
    "getBodyElement",
    "innerHTML",
    "_postProcessLinks",
    "AbstractViewer",
    "fixLinks",
    "highlightCode",
    "style",
    "display",
    "getElement",
    "update",
    "classViewer",
    "_this",
    "Promise",
    "resolve",
    "setDocNodeAsync",
    "then",
    "getShowInherited",
    "getShowIncluded",
    "getExpandProperties",
    "getShowProtected",
    "getShowPrivate",
    "getShowInternal",
    "sortItems",
    "_applyElement",
    "_titleElement",
    "firstChild",
    "_bodyElement",
    "lastChild",
    "getTitleElement",
    "getItemElement",
    "body",
    "elem",
    "getElementsByTagName",
    "elemArr",
    "childNodes",
    "getAttribute",
    "toggleShowItemDetails",
    "itemName",
    "fromClassName",
    "textDiv",
    "_showDetails",
    "fromClassNode",
    "getClassByName",
    "getDocNode",
    "arr",
    "tmp",
    "opencloseImgElem",
    "previousSibling",
    "src",
    "exc",
    "error",
    "el",
    "_processed",
    "q",
    "on",
    "e",
    "target",
    "getTarget",
    "mouseup",
    "removeAttribute",
    "setAttribute",
    "Function",
    "onClickValue",
    "click",
    "destruct",
    "statics",
    "ITEM_SPEC_REGEX",
    "SENTENCE_END_REGEX",
    "resolveLinkAttributes",
    "description",
    "packageBaseClass",
    "linkRegex",
    "hit",
    "lastPos",
    "exec",
    "index",
    "createItemLinkHtml",
    "linkText",
    "useIcon",
    "useShortName",
    "classNode",
    "className",
    "label",
    "trim",
    "indexOf",
    "fullName",
    "pos",
    "lastIndexOf",
    "baseClassname",
    "isLoaded",
    "itemNode",
    "cleanItemName",
    "parenPos",
    "__getItemFromClassHierarchy",
    "UiModel",
    "classNodes",
    "l",
    "getItemByNameFromMixins",
    "ClassItem",
    "iconCode",
    "Environment",
    "fullItemName",
    "protocol",
    "host",
    "pathname",
    "location",
    "window",
    "linkHtml",
    "join",
    "createSeeAlsoHtml",
    "see",
    "getSee",
    "seeAlsoLinks",
    "link",
    "isEmpty",
    "seeAlsoHtml",
    "createInheritedFromHtml",
    "over",
    "getOverriddenFrom",
    "createOverwriddenFromHtml",
    "createIncludedFromHtml",
    "__P_580_2",
    "baseClassNode",
    "getItem",
    "createDescriptionHtml",
    "desc",
    "getDescription",
    "__extractFirstSentence",
    "__P_580_3",
    "text",
    "ret",
    "substr",
    "descriptionHasDetails",
    "createTypeHtml",
    "typeNode",
    "defaultType",
    "types",
    "typeDimensions",
    "typeName",
    "getTypes",
    "j",
    "dimensions",
    "PRIMITIVES",
    "MDC_LINKS",
    "lastDot",
    "parseInt",
    "createErrorHtml",
    "errors",
    "getErrors",
    "attributes",
    "msg",
    "line",
    "column",
    "createDeprecationHtml",
    "isDeprecated",
    "getDeprecationText",
    "createAccessHtml",
    "isPublic",
    "access",
    "createInfoRequiredByHtml",
    "requiredBy",
    "getRequiredBy",
    "createSourceLinkHtml",
    "getLineNumber",
    "sourceUri",
    "getSourceUri",
    "title",
    "setTitleClass",
    "cssClasses"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/ui/panels/InfoPanel.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * John Spackman (johnspackman) of Zenesis Ltd (http://www.zenesis.com)\n     * Henner Kollmann (hkollmann)\n\n************************************************************************ */\n\n/**\n * @require(qx.module.event.GestureHandler)\n * @require(qx.module.Attribute)\n * @require(qx.module.event.Native)\n *\n * @ignore(location.*)\n */\nqx.Class.define(\"qxl.apiviewer.ui.panels.InfoPanel\", {\n  type: \"abstract\",\n\n  extend: qx.core.Object,\n\n  /**\n   * Creates an info panel. An info panel shows the information about one item\n   * type (e.g. for public methods).\n   * @param labelText\n   * {String} the label text describing the node type.\n   * @param icon\n   */\n  construct(labelText, icon) {\n    super();\n    this._labelText = labelText;\n    this._icon = icon;\n    qxl.apiviewer.ObjectRegistry.register(this);\n  },\n\n  properties: {\n    /** top level DOM node of the panel */\n    element: {\n      check: \"Element\",\n      init: null,\n      nullable: true,\n      apply: \"_applyElement\",\n    },\n\n    /** whether the info panel is open */\n    isOpen: {\n      check: \"Boolean\",\n      init: true,\n    },\n\n    docNode: {\n      nullable: true,\n      async: true,\n    },\n  },\n\n  members: {\n    _labelText: null,\n    _icon: null,\n\n    /**\n     * Returns the title of the panel\n     *\n     * @return {String}\n     */\n    getPanelTitle() {\n      return this._labelText;\n    },\n\n    /**\n     * Returns the icon for the panel\n     *\n     * @return {String}\n     */\n    getPanelIcon() {\n      return this._icon;\n    },\n\n    /**\n     * Whether the panel can display the given item node\n     * @param dao\n     * @return {Boolean} Whether the panel can display the given item node\n     */\n    canDisplayItem(dao) {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".canDisplayItem\"\n      );\n    },\n\n    /**\n     * Get the type HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTypeHtml(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the title HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTitleHtml(node, currentClassDocNode) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    /**\n     * Get the description text HTML string of an item.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @param showDetails\n     *          {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemTextHtml(node, currentClassDocNode, showDetails) {\n      throw new Error(\"Abstract method called!\");\n    },\n\n    getItemTooltip(node, currentClassDocNode) {\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing the information about a class item. The root\n     * HTML element must be a table row (&lt;tr&gt;).\n     * @abstract\n     * @param node\n     * {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentDocNode\n     * @param showDetails\n     * {Boolean} whether to show the details.\n     * @return {String} the HTML showing the information about the method.\n     */\n    getItemHtml(node, currentDocNode, showDetails) {\n      var parentNode;\n      if (\n        node instanceof qxl.apiviewer.dao.Class ||\n        node instanceof qxl.apiviewer.dao.Package\n      ) {\n        parentNode = node.getPackage();\n      } else {\n        parentNode = node.getClass();\n      }\n      var html = new qx.util.StringBuilder();\n\n      var inherited =\n        parentNode &&\n        parentNode != currentDocNode &&\n        parentNode.getType() == \"class\";\n      var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(node, inherited);\n\n      // Create the title row\n      html.add(\n        '<tr class=\"',\n        qxl.apiviewer.ui.panels.InfoPanel.getItemCssClasses(node),\n        '\">'\n      );\n      var tooltipText = this.getItemTooltip(node, currentDocNode);\n      var tooltip = tooltipText\n        ? 'title=\"' + tooltipText + '\" alt=\"' + tooltipText + '\"'\n        : \"\";\n      html.add(\n        '<td class=\"icon\" ',\n        tooltip,\n        \">\",\n        qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl),\n        \"</td>\"\n      );\n\n      var typeHtml = this.getItemTypeHtml(node, currentDocNode);\n      html.add(\n        '<td class=\"type\">',\n        typeHtml ? typeHtml + \"&nbsp;\" : \"&nbsp;\",\n        \"</td>\"\n      );\n\n      html.add('<td class=\"toggle\">');\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        // This node has details -> Show the detail button\n        html.add(\n          '<img src=\"',\n          qx.util.ResourceManager.getInstance().toUri(\n            \"qxl/apiviewer/image/open.gif\"\n          ),\n          '\" onclick=\"',\n          this.__encodeObject(this),\n          \".toggleShowItemDetails('\",\n          node.getName(),\n          \"'\",\n          parentNode != currentDocNode\n            ? \",'\" + parentNode.getFullName() + \"'\"\n            : \"\",\n          ')\"/>'\n        );\n      } else {\n        html.add(\"&#160;\");\n      }\n\n      html.add(\"</td>\");\n\n      html.add('<td class=\"text\">');\n\n      // Create headline\n      html.add(\"<h3\");\n\n      if (this.itemHasDetails(node, currentDocNode)) {\n        html.add(\n          ' onclick=\"',\n          this.__encodeObject(this),\n          \".toggleShowItemDetails('\",\n          node.getName(),\n          \"'\",\n          parentNode != currentDocNode\n            ? \",'\" + parentNode.getFullName() + \"'\"\n            : \"\",\n          ')\">'\n        );\n      } else {\n        html.add(\">\");\n      }\n\n      html.add(this.getItemTitleHtml(node, currentDocNode));\n\n      html.add(\"</h3>\");\n\n      // Create content area\n      html.add('<div _itemName=\"', node.getName(), '\">');\n      html.add(this.getItemTextHtml(node, currentDocNode, showDetails));\n      html.add(\"</div>\");\n\n      html.add(\"</td>\");\n      html.add(\"</tr>\");\n      return html.get();\n    },\n\n    /**\n     * Checks whether a class item has details. This method is abstract. Sub\n     * classes must override it.\n     *\n     * @abstract\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the doc node of the currently displayed\n     *          class\n     * @return {Boolean} whether the class item has details.\n     */\n    itemHasDetails(node, currentClassDocNode) {\n      return true;\n    },\n\n    __encodeObject(object) {\n      return (\n        \"qxl.apiviewer.ObjectRegistry.getObjectFromHashCode('\" +\n        object.toHashCode() +\n        \"')\"\n      );\n    },\n\n    /**\n     * Get the HTML fragment of the info panel\n     * @param viewer\n     * @return {String} HTML fragment of the info panel\n     */\n    getPanelHtml(viewer) {\n      var uppercaseLabelText =\n        this._labelText.charAt(0).toUpperCase() + this._labelText.substring(1);\n\n      var html = new qx.util.StringBuilder('<div class=\"info-panel\"><h2>');\n      html.add(\n        '<img class=\"openclose\" src=\"',\n        qx.util.ResourceManager.getInstance().toUri(\n          \"qxl/apiviewer/image/\" + (this.getIsOpen() ? \"close.gif\" : \"open.gif\")\n        ),\n        '\" onclick=\"',\n        this.__encodeObject(viewer),\n        \".togglePanelVisibility(\" + this.__encodeObject(this),\n        ')\"/> ',\n        '<span onclick=\"',\n        this.__encodeObject(viewer),\n        \".togglePanelVisibility(\",\n        this.__encodeObject(this),\n        ')\">',\n        uppercaseLabelText,\n        \"</span>\"\n      );\n\n      html.add(\"</h2><div></div></div>\");\n\n      return html.get();\n    },\n\n    /**\n     * Returns a list of all items to display in the panel\n     * @param showInherited {Boolean} whether to show inherited items\n     * @param showIncluded\n     * @param daoClass\n     * @return {qxl.apiviewer.dao.ClassItem[]} list of all items to display in the\n     * panel\n     */\n    _getPanelItems(showInherited, showIncluded, daoClass) {\n      if (!daoClass) {\n        return [];\n      }\n\n      var result = [];\n      var fromClassHash = {};\n      var classes;\n\n      // Get the classes to show\n      if (showInherited && this._canShowInherited()) {\n        if (daoClass.getType() == \"interface\") {\n          classes = daoClass.getInterfaceHierarchy();\n        } else {\n          classes = daoClass.getClassHierarchy();\n        }\n      } else {\n        classes = [daoClass];\n      }\n\n      for (var classIndex = 0; classIndex < classes.length; classIndex++) {\n        var currClassNode = classes[classIndex];\n        this.getPanelItemObjects(\n          currClassNode,\n          showInherited || showIncluded\n        ).forEach((item) => {\n          var name = item.getName();\n          if (fromClassHash[name] === undefined) {\n            result.push(item);\n            fromClassHash[name] = item;\n          }\n        });\n      }\n\n      return result;\n    },\n\n    _canShowInherited() {\n      return false;\n    },\n\n    getPanelItemObjects(daoClass, showInherited) {\n      throw new Error(\n        \"No implementation for \" + this.classname + \".getPanelItemObjects\"\n      );\n    },\n\n    /**\n     * Filter the item list to display only the desired items.\n     * @param nodeArr\n     * {qxl.apiviewer.dao.ClassItem[]} array of class items\n     * @param expandProperties\n     * @param showProtected\n     * {Boolean} whether to show protected items\n     * @param showPrivate\n     * {Boolean} whether to show private items\n     * @param showInternal\n     * {Boolean} whether to show internal items\n     * @return {qxl.apiviewer.dao.ClassItem[]} filtered list of items\n     */\n    __filterItems(\n      nodeArr,\n      expandProperties,\n      showProtected,\n      showPrivate,\n      showInternal\n    ) {\n      var copyArr = nodeArr.concat();\n      for (var i = nodeArr.length - 1; i >= 0; i--) {\n        var node = nodeArr[i];\n        if (node.isPropertyGenerated() && !expandProperties) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isPrivate() && !showPrivate) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isProtected() && !showProtected) {\n          qx.lang.Array.removeAt(copyArr, i);\n        } else if (node.isInternal() && !showInternal) {\n          qx.lang.Array.removeAt(copyArr, i);\n        }\n      }\n\n      return copyArr;\n    },\n\n    _displayNodes(nodes, currentClassDocNode) {\n      // Show the nodes\n      if (nodes && nodes.length > 0) {\n        var html = new qx.util.StringBuilder(\n          '<table cellspacing=\"0\" cellpadding=\"0\" class=\"info\" width=\"100%\">'\n        );\n\n        for (var i = 0; i < nodes.length; i++) {\n          html.add(this.getItemHtml(nodes[i], currentClassDocNode, false));\n        }\n\n        html.add(\"</table>\");\n\n        this.getBodyElement().innerHTML = html.get();\n        this._postProcessLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(this.getBodyElement());\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(this.getBodyElement());\n        this.getBodyElement().style.display = !this.getIsOpen() ? \"none\" : \"\";\n        this.getElement().style.display = \"\";\n      } else {\n        this.getElement().style.display = \"none\";\n      }\n    },\n\n    /**\n     * Updates an info panel.\n     *\n     * @param classViewer\n     *          {qxl.apiviewer.ui.ClassViewer} parent class viewer widget.\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the currently displayed class\n     * @return {qx.Promise}\n     */\n    update(classViewer, currentClassDocNode) {\n      if (!this.getElement()) {\n        return qx.Promise.resolve(true);\n      }\n\n      return this.setDocNodeAsync(currentClassDocNode).then(() => {\n        var showInherited = classViewer.getShowInherited();\n        var showIncluded = classViewer.getShowIncluded();\n        var nodeArr = this._getPanelItems(\n          showInherited,\n          showIncluded,\n          currentClassDocNode\n        );\n\n        if (nodeArr && nodeArr.length > 0) {\n          var expandProperties = classViewer.getExpandProperties();\n          var showProtected = classViewer.getShowProtected();\n          var showPrivate = classViewer.getShowPrivate();\n          var showInternal = classViewer.getShowInternal();\n\n          nodeArr = this.__filterItems(\n            nodeArr,\n            expandProperties,\n            showProtected,\n            showPrivate,\n            showInternal\n          );\n          classViewer.sortItems(nodeArr);\n        }\n\n        this._displayNodes(nodeArr, currentClassDocNode);\n      });\n    },\n\n    _applyElement(element) {\n      this._titleElement = element.firstChild;\n      this._bodyElement = element.lastChild;\n    },\n\n    /** DOM node of the title of the panel */\n    getTitleElement() {\n      return this._titleElement;\n    },\n\n    /** DOM node of the body of the panel */\n    getBodyElement() {\n      return this._bodyElement;\n    },\n\n    /**\n     * Gets the HTML element showing the details of an item.\n     *\n     * @param panel\n     *          {InfoPanel} the info panel of the item.\n     * @param name\n     *          {String} the item's name.\n     * @return {Element} the HTML element showing the details of the item.\n     * @ignore(getElementsByTagName)\n     */\n\n    getItemElement(name) {\n      var body = this.getBodyElement();\n      var elem = body.getElementsByTagName(\"TBODY\")[0];\n      if (!elem) {\n        return null;\n      }\n      var elemArr = elem.childNodes;\n\n      for (var i = 0; i < elemArr.length; i++) {\n        // ARRG, should be implemented in a more fault-tolerant way\n        // iterate over tr's, look inside the third \"td\" and there the second\n        // element\n        if (\n          elemArr[i].childNodes[3].childNodes[1].getAttribute(\"_itemName\") ==\n          name\n        ) {\n          return elemArr[i].childNodes[3].childNodes[1];\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Event handler. Called when the user clicked a button for showing/hiding\n     * the details of an item.\n     * @param itemName\n     * @param fromClassName\n     * {String} the name of the class the item the item was defined in.\n     */\n    toggleShowItemDetails(itemName, fromClassName) {\n      try {\n        var textDiv = this.getItemElement(itemName);\n\n        if (!textDiv) {\n          throw Error(\"Element for name '\" + itemName + \"' not found!\");\n        }\n\n        var showDetails = textDiv._showDetails ? !textDiv._showDetails : true;\n        textDiv._showDetails = showDetails;\n\n        var fromClassNode = fromClassName\n          ? qxl.apiviewer.dao.Class.getClassByName(fromClassName)\n          : this.getDocNode();\n        var node = null;\n        for (\n          var arr = this.getPanelItemObjects(fromClassNode, true), i = 0;\n          i < arr.length && !node;\n          i++\n        ) {\n          var tmp = arr[i];\n          if (tmp.getName() == itemName) {\n            node = tmp;\n          }\n        }\n        if (!node) {\n          return;\n        }\n\n        // Update the close/open image\n        var opencloseImgElem = textDiv.parentNode.previousSibling.firstChild;\n        opencloseImgElem.src = qx.util.ResourceManager.getInstance().toUri(\n          showDetails\n            ? \"qxl/apiviewer/image/close.gif\"\n            : \"qxl/apiviewer/image/open.gif\"\n        );\n\n        // Update content\n        textDiv.innerHTML = this.getItemTextHtml(\n          node,\n          this.getDocNode(),\n          showDetails\n        );\n        this._postProcessLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.fixLinks(textDiv);\n        qxl.apiviewer.ui.AbstractViewer.highlightCode(textDiv);\n      } catch (exc) {\n        this.error(\"Toggling item details failed\");\n        this.error(exc);\n      }\n    },\n\n    /**\n     * Convert mouseup and click listener attached to tap / pointerup listener.\n     *\n     * @param el\n     *          {Element} The element containing the links.\n     */\n    _postProcessLinks(el) {\n      if (el._processed) {\n        return;\n      }\n      q(el).on(\"pointerup\", function (e) {\n        var target = e.getTarget();\n        var mouseup = target.getAttribute(\"onmouseup\");\n        if (mouseup) {\n          target.removeAttribute(\"onmouseup\");\n          target.setAttribute(\"oldonmouseup\", mouseup);\n        } else {\n          mouseup = target.getAttribute(\"oldonmouseup\");\n        }\n\n        if (mouseup) {\n          Function(mouseup)();\n        }\n      });\n\n      q(el).on(\"tap\", function (e) {\n        var onClickValue =\n          \"event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;\";\n        var target = e.getTarget();\n        var click = target.getAttribute(\"onclick\");\n        if (click && click != onClickValue) {\n          target.removeAttribute(\"onclick\");\n          target.setAttribute(\"oldonclick\", click);\n          target.setAttribute(\"onclick\", onClickValue);\n        } else {\n          click = target.getAttribute(\"oldonclick\");\n        }\n\n        if (click) {\n          Function(click)();\n        }\n      });\n\n      el._processed = true;\n    },\n  },\n\n  /*\n   * ****************************************************************************\n   * DESTRUCTOR\n   * ****************************************************************************\n   */\n\n  destruct() {\n    this._titleElement = this._bodyElement = null;\n  },\n\n  statics: {\n    /**\n     * {regexp} The regexp for parsing a item name (e.g.\n     * \"mypackage.MyClass#MY_CONSTANT alternative text\").\n     */\n    ITEM_SPEC_REGEX: /^(([\\w\\.]+)?(#\\w+(\\([^\\)]*\\))?)?)(\\s+(.*))?$/,\n\n    /** {regexp} The regexp that finds the end of a sentence. */\n    SENTENCE_END_REGEX: /[^\\.].\\.(\\s|<)/,\n\n    /**\n     * Creates HTML that replaces all &#64;link-attributes with links.\n     *\n     * @param description\n     *          {String} the description.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use for\n     *          auto-adding packages.\n     * @return {String} HTML fragment\n     */\n    resolveLinkAttributes(description, packageBaseClass) {\n      var linkRegex = /\\{@link([^\\}]*)\\}/gm;\n\n      var html = new qx.util.StringBuilder();\n      var hit;\n      var lastPos = 0;\n\n      while ((hit = linkRegex.exec(description))) {\n        // Add the text before the link\n        html.add(\n          description.substring(lastPos, hit.index) +\n            this.createItemLinkHtml(hit[1], packageBaseClass)\n        );\n\n        lastPos = hit.index + hit[0].length;\n      }\n\n      // Add the text after the last hit\n      html.add(description.substring(lastPos, description.length));\n\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML for a link to an item.\n     *\n     * @param linkText\n     *          {String} the link text (e.g. \"mypackage.MyClass#myMethod alt\n     *          text\")\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class?null} the doc node of the class to use when\n     *          auto-adding the package to a class name having no package\n     *          specified. If null, no automatic package addition is done.\n     * @param useIcon\n     *          {Boolean?true} whether to add an icon to the link.\n     * @param useShortName\n     *          {Boolean?false} whether to use the short name.\n     * @return {String} HTML fragment of the link\n     */\n    createItemLinkHtml(linkText, packageBaseClass, useIcon, useShortName) {\n      var classNode = null;\n      if (!useIcon) {\n        useIcon = true;\n      }\n\n      var className;\n      var itemName = null;\n      var label = \"\";\n      var style = \"\";\n\n      if (typeof linkText == \"string\") {\n        linkText = linkText.trim();\n\n        if (linkText.charAt(0) == '\"' || linkText.charAt(0) == \"<\") {\n          // This is a String or a link to a URL -> Just use it as it is\n          return linkText;\n        }\n\n        // This is a link to another class or method -> Create an item link\n        // Separate item name from label\n        var hit = this.ITEM_SPEC_REGEX.exec(linkText);\n\n        if (!hit) {\n          // Malformed item name\n          return linkText;\n        }\n        className = hit[2];\n        itemName = hit[3];\n        label = hit[6];\n\n        // Make the item name absolute\n        if (!className || className.length == 0) {\n          // This is a relative link to a method -> Add the current class\n          className = packageBaseClass.getClass\n            ? packageBaseClass.getClass().getFullName() + itemName\n            : packageBaseClass.getFullName();\n        } else if (packageBaseClass && className.indexOf(\".\") == -1) {\n          classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n\n          // classNode could be a native JS constructor (String, Boolean, ...)\n          if (\n            !classNode ||\n            !classNode.classname ||\n            classNode.getPackage().getName() !== \"\"\n          ) {\n            // The class name has no package -> Use the same package as the\n            // current class\n            if (packageBaseClass instanceof qxl.apiviewer.dao.Package) {\n              className = packageBaseClass.getFullName() + \".\" + className;\n            } else {\n              let fullName = packageBaseClass.getFullName();\n              let pos = fullName.lastIndexOf(\".\");\n              let baseClassname = fullName.substring(pos + 1);\n              if (baseClassname == className) {\n                className = fullName;\n                classNode = packageBaseClass;\n              } else {\n                className = fullName.substring(0, pos + 1) + className;\n              }\n            }\n          }\n        }\n\n        // Get the node info\n        if (!label || label.length == 0) {\n          // We have no label -> Use the item name as label\n          label = hit[1];\n        }\n\n        // Add the right icon\n        if (useIcon) {\n          if (!classNode) {\n            classNode = qxl.apiviewer.dao.Class.getClassByName(className);\n          }\n\n          // If the class is not loaded, then itemNode is not available - the only side effect of which is that\n          //  the icon is not available.  However, this is acceptable because the only time the classes might\n          //  not be loaded will be if referenced from within comments and where the class is not a dependent\n          //  class, in which cases icons are not needed.\n          if (classNode && classNode.isLoaded && classNode.isLoaded()) {\n            var itemNode;\n\n            if (itemName) {\n              // The links points to a item of the class\n              var cleanItemName = itemName.substring(1);\n              var parenPos = cleanItemName.indexOf(\"(\");\n\n              if (parenPos != -1) {\n                cleanItemName = cleanItemName.substring(0, parenPos).trim();\n              }\n              itemNode = this.__getItemFromClassHierarchy(\n                cleanItemName,\n                classNode\n              );\n              if (\n                !itemNode &&\n                qxl.apiviewer.UiModel.getInstance().getShowIncluded()\n              ) {\n                if (qxl.apiviewer.UiModel.getInstance().getShowInherited()) {\n                  var classNodes = [classNode];\n                  if (classNode.getType() == \"interface\") {\n                    classNodes = classNode.getInterfaceHierarchy();\n                  } else {\n                    classNodes = classNode.getClassHierarchy();\n                  }\n                  for (var i = 0, l = classNodes.length; i < l; i++) {\n                    itemNode =\n                      classNodes[i].getItemByNameFromMixins(cleanItemName);\n                    if (itemNode) {\n                      break;\n                    }\n                  }\n                } else {\n                  itemNode = classNode.getItemByNameFromMixins(cleanItemName);\n                }\n              }\n            } else {\n              // The links points to the class\n              itemNode = classNode;\n            }\n\n            if (itemNode && !(itemNode instanceof qxl.apiviewer.dao.Package)) {\n              className = itemNode.getFullName\n                ? itemNode.getFullName()\n                : itemNode.name;\n            }\n          }\n        }\n      } else {\n        itemNode = linkText;\n\n        if (itemNode instanceof qxl.apiviewer.dao.Class) {\n          className = label = itemNode.getFullName();\n        } else if (itemNode instanceof qxl.apiviewer.dao.ClassItem) {\n          className = itemNode.getClass().getName();\n          itemName = label = itemNode.getFullName();\n        }\n      }\n\n      if (itemNode) {\n        var iconUrl = qxl.apiviewer.TreeUtil.getIconUrl(itemNode);\n        var iconCode = qxl.apiviewer.ui.ClassViewer.createImageHtml(iconUrl);\n\n        if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n          if (iconCode.indexOf(\"overlay_\") !== -1) {\n            style = \"margin-left:18px;\";\n          }\n        }\n      }\n\n      // Create a real bookmarkable link\n      // NOTE: The onclick-handler must be added by HTML code. If it\n      // is added using the DOM element then the href is followed.\n      //      var fullItemName = className + (itemName ? itemName : \"\");\n      /* eslint-disable-next-line max-statements-per-line */\n      var fullItemName =\n        itemNode && itemNode.getFullName\n          ? itemNode.getFullName()\n          : classNode && classNode.getFullName\n          ? classNode.getFullName() + itemName\n          : className;\n      var protocol;\n      var host;\n      var pathname;\n\n      // Opera 10.5 loses the reference to \"window\"\n      // See http://bugzilla.qooxdoo.org/show_bug.cgi?id=3516 for details\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"opera\" &&\n        qx.core.Environment.get(\"engine.version\") > 9\n      ) {\n        protocol = location.protocol;\n        host = location.host;\n        pathname = location.pathname;\n      } else {\n        protocol = window.location.protocol;\n        host = window.location.host;\n        pathname = window.location.pathname;\n      }\n\n      var linkHtml = [\n        '<span style=\"white-space: nowrap;\">',\n        typeof iconCode != \"undefined\" ? iconCode : \"\",\n        '<a style=\"' + style + '\" href=\"' + protocol,\n        \"//\",\n        host,\n        pathname,\n        \"#\",\n        fullItemName,\n        '\" onclick=\"return false;\"',\n        '\" onmouseup=\"qxl.apiviewer.TabViewController.instance.onSelectItem(\\'',\n        fullItemName,\n        \"'); return false;\\\"\",\n        ' title=\"',\n        fullItemName,\n        '\">',\n        label,\n        \"</a></span>\",\n      ];\n\n      return linkHtml.join(\"\");\n    },\n\n    /**\n     * Creates the HTML showing the &#64;see attributes of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML showing the &#64;see attributes.\n     */\n    createSeeAlsoHtml(node) {\n      var see = node.getSee();\n      if (see.length > 0) {\n        var seeAlsoLinks = new qx.util.StringBuilder();\n\n        for (var i = 0; i < see.length; i++) {\n          if (seeAlsoLinks.length != 0) {\n            seeAlsoLinks.add(\", \");\n          }\n          var link = this.createItemLinkHtml(see[i], node);\n          if (link.indexOf(\"http\") === 0) {\n            link = \"<a target='_blank' href='\" + link + \"'>\" + link + \"</a>\";\n          }\n          seeAlsoLinks.add(link);\n        }\n\n        if (!seeAlsoLinks.isEmpty()) {\n          // We had @see attributes\n          var seeAlsoHtml = new qx.util.StringBuilder();\n          seeAlsoHtml.add(\n            '<div class=\"item-detail-headline\">',\n            \"See also:\",\n            \"</div>\",\n            '<div class=\"item-detail-text\">',\n            seeAlsoLinks,\n            \"</div>\"\n          );\n          return seeAlsoHtml.get();\n        }\n      }\n\n      // Nothing found\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing information about inheritance\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createInheritedFromHtml(node, currentClassDocNode) {\n      if (\n        node.getClass().getType() != \"mixin\" &&\n        node.getClass() != currentClassDocNode\n      ) {\n        let html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Inherited from:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            node.getClass().getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      let over = node.getOverriddenFrom();\n      if (over) {\n        let html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Defined in Mixin:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            over.getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is overridden\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @return {String} HTML fragment\n     */\n    createOverwriddenFromHtml(node) {\n      if (node.getOverriddenFrom()) {\n        var html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-headline\">',\n          \"Overrides:\",\n          \"</div>\",\n          '<div class=\"item-detail-text\">',\n          qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n            node.getOverriddenFrom().getFullName() + \"#\" + node.getName()\n          ),\n          \"</div>\"\n        );\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is included from a mixin\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} item to get the the information from\n     * @param currentClassDocNode\n     *          {qxl.apiviewer.dao.Class} the current class shown in the class\n     *          viewer\n     * @return {String} HTML fragment\n     */\n    createIncludedFromHtml(node, currentClassDocNode) {\n      if (node.getClass() != currentClassDocNode) {\n        if (node.getClass().getType() == \"mixin\") {\n          var html = new qx.util.StringBuilder(\n            '<div class=\"item-detail-headline\">',\n            \"Included from mixin:\",\n            \"</div>\",\n            '<div class=\"item-detail-text\">',\n            qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n              node.getClass().getFullName() + \"#\" + node.getName()\n            ),\n            \"</div>\"\n          );\n          return html.get();\n        }\n      }\n      return \"\";\n    },\n\n    /**\n     * Gets a class item from baseClassNode. if it is not found there, the\n     * class' hierarchy is searched until the item is found.\n     *\n     * @param itemName\n     *          {String} the name of the item.\n     * @param baseClassNode\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {qxl.apiviewer.dao.ClassItem} the classItem\n     *\n     */\n    __getItemFromClassHierarchy(itemName, baseClassNode) {\n      var itemNode = baseClassNode.getItem(itemName);\n      if (itemNode) {\n        return itemNode;\n      }\n      var classNodes = baseClassNode.getClassHierarchy();\n      for (var i = 0, l = classNodes.length; i < l; i++) {\n        var currClassNode = classNodes[i];\n        itemNode = currClassNode.getItem(itemName);\n        if (itemNode) {\n          break;\n        }\n      }\n      return itemNode;\n    },\n\n    /**\n     * Creates the HTML showing the description of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param packageBaseClass\n     *          {qxl.apiviewer.dao.Class|qxl.apiviewer.dao.Package?null} the doc node of\n     *          the class to use for auto-adding packages.\n     * @param showDetails\n     *          {Boolean} whether to show details. If <code>false</code> only\n     *          the first sentence of the description will be shown.\n     * @return {String} the HTML showing the description.\n     */\n    createDescriptionHtml(node, packageBaseClass, showDetails) {\n      var desc = node.getDescription();\n\n      if (desc) {\n        if (!showDetails) {\n          desc = this.__extractFirstSentence(desc);\n        }\n        return (\n          '<div class=\"item-desc\">' +\n          this.resolveLinkAttributes(desc, packageBaseClass) +\n          \"</div>\"\n        );\n      }\n      return \"\";\n    },\n\n    /**\n     * Extracts the first sentence from a text.\n     *\n     * @param text\n     *          {String} the text.\n     * @return {String} the first sentence from the text.\n     */\n    __extractFirstSentence(text) {\n      var ret = text;\n\n      // Extract first block\n      var pos = ret.indexOf(\"</p>\");\n\n      if (pos != -1) {\n        ret = ret.substr(0, pos + 4);\n\n        var hit = this.SENTENCE_END_REGEX.exec(ret);\n        if (hit) {\n          ret = text.substring(0, hit.index + hit[0].length - 1) + \"</p>\";\n        }\n      }\n\n      return ret;\n    },\n\n    /**\n     * Returns whether the description of an item has details (has more than one\n     * sentence).\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @return {Boolean} whether the description of an item has details.\n     */\n    descriptionHasDetails(node) {\n      var desc = node.getDescription();\n      if (desc) {\n        return this.__extractFirstSentence(desc) != desc;\n      }\n      return false;\n    },\n\n    /**\n     * Creates the HTML showing the type of a doc node.\n     *\n     * @param typeNode\n     *          {qxl.apiviewer.dao.ClassItem} the doc node to show the type for.\n     * @param defaultType\n     *          {String} the type name to use if <code>typeNode</code> is\n     *          <code>null</code> or defines no type.\n     * @param useShortName\n     *          {Boolean?true} whether to use short class names (without\n     *          package).\n     * @return {String} the HTML showing the type.\n     */\n    createTypeHtml(typeNode, defaultType, useShortName) {\n      if (!useShortName) {\n        useShortName = true;\n      }\n\n      var types = [];\n      var typeDimensions;\n      var typeName;\n      var linkText;\n\n      if (typeNode) {\n        types = typeNode.getTypes();\n      }\n\n      var typeHtml = new qx.util.StringBuilder();\n      if (types.length == 0) {\n        typeHtml.add(defaultType);\n      } else {\n        if (types.length > 1) {\n          typeHtml.add(\"(\");\n        }\n\n        for (var j = 0; j < types.length; j++) {\n          if (j > 0) {\n            typeHtml.add(\" | \");\n          }\n\n          typeName = types[j].type;\n          typeDimensions = types[j].dimensions;\n\n          if (qxl.apiviewer.ui.ClassViewer.PRIMITIVES[typeName]) {\n            if (qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName]) {\n              typeHtml.add(\n                '<span style=\"white-space: nowrap;\"><a href=\"' +\n                  qxl.apiviewer.ui.ClassViewer.MDC_LINKS[typeName] +\n                  '\" target=\"_blank\" title=\"' +\n                  typeName +\n                  '\">' +\n                  typeName +\n                  \"</a></span>\"\n              );\n            } else {\n              typeHtml.add(typeName);\n            }\n          } else {\n            linkText = typeName;\n\n            if (useShortName) {\n              var lastDot = typeName.lastIndexOf(\".\");\n\n              if (lastDot != -1) {\n                linkText += \" \" + typeName.substring(lastDot + 1);\n              }\n            }\n            typeHtml.add(\n              qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n                linkText,\n                typeNode.getClass(),\n                false,\n                true\n              )\n            );\n          }\n\n          if (typeDimensions) {\n            for (var i = 0; i < parseInt(typeDimensions); i++) {\n              typeHtml.add(\"[]\");\n            }\n          }\n        }\n\n        if (types.length > 1) {\n          typeHtml.add(\")\");\n        }\n      }\n\n      return typeHtml.get();\n    },\n\n    /**\n     * Creates the HTML showing the documentation errors of an item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Node} the doc node of the item.\n     * @param currentClassDocNode\n     *          {Map} the doc node of the currently displayed class\n     * @return {String} the HTML showing the documentation errors.\n     */\n    createErrorHtml(node, currentClassDocNode) {\n      var errors = node.getErrors();\n\n      if (errors.length > 0) {\n        var html = new qx.util.StringBuilder(\n          '<div class=\"item-detail-error\">',\n          \"Documentation errors:\",\n          \"</div>\"\n        );\n\n        for (var i = 0; i < errors.length; i++) {\n          html.add(\n            '<div class=\"item-detail-text\">',\n            errors[i].attributes.msg,\n            \" <br/>\"\n          );\n\n          if (\n            errors[i].attributes.line ||\n            node.getClass() != currentClassDocNode\n          ) {\n            html.add(\"(\");\n\n            if (node.getClass() != currentClassDocNode) {\n              html.add(node.getClass().getFullName(), \"; \");\n            }\n\n            if (errors[i].attributes.line) {\n              html.add(\"Line: \", errors[i].attributes.line);\n              if (errors[i].attributes.column) {\n                html.add(\", Column:\", errors[i].attributes.column);\n              }\n            }\n            html.add(\")\");\n          }\n          html.add(\"</div>\");\n        }\n\n        return html.get();\n      }\n      return \"\";\n    },\n\n    /**\n     * Creates the HTML showing whether the item is deprecated\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @param itemName\n     *          {String} type of the item, e.g. \"method\", \"property\",\n     *          \"constant\", ...\n     * @return {String} the HTML fragment.\n     */\n    createDeprecationHtml(node, itemName) {\n      if (!node.isDeprecated()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-error\">', \"Deprecated:\", \"</div>\");\n\n      html.add('<div class=\"item-detail-text\">');\n      var desc = node.getDeprecationText();\n      if (desc) {\n        html.add(desc);\n      } else {\n        html.add(\"This \", itemName, \" is deprecated!\");\n      }\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing the access protection for a class item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML fragment.\n     */\n    createAccessHtml(node) {\n      if (node.isPublic()) {\n        return \"\";\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"Access:\", \"</div>\");\n      html.add('<div class=\"item-detail-text\">');\n      var access = [];\n      if (node.isPrivate()) {\n        access.push(\"private\");\n      }\n      if (node.isInternal()) {\n        access.push(\"internal\");\n      }\n      if (node.isProtected()) {\n        access.push(\"protected\");\n      }\n      html.add(access.join(\" \"));\n      html.add(\"</div>\");\n      return html.get();\n    },\n\n    /**\n     * Creates the HTML showing interfaces requiring this node\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createInfoRequiredByHtml(node) {\n      var html = new qx.util.StringBuilder();\n      var requiredBy = node.getRequiredBy();\n      if (requiredBy.length > 0) {\n        html.add(\n          '<div class=\"item-detail-headline\">',\n          \"Required by:\",\n          \"</div>\"\n        );\n        for (var i = 0; i < requiredBy.length; i++) {\n          html.add(\n            '<div class=\"item-detail-text\">',\n            qxl.apiviewer.ui.panels.InfoPanel.createItemLinkHtml(\n              requiredBy[i].getFullName() + \"#\" + node.getName()\n            ),\n            \"</div>\"\n          );\n        }\n      }\n      return html.get();\n    },\n\n    /**\n     * Creates the link to the source file that definen an item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.ClassItem} the doc node of the item.\n     * @return {String} the HTML.\n     */\n    createSourceLinkHtml(node) {\n      if (!node.getLineNumber || !node.getLineNumber()) {\n        return \"\";\n      }\n\n      var sourceUri = qxl.apiviewer.ui.ClassViewer.getSourceUri(node);\n      if (!sourceUri) {\n        return \"\";\n      }\n\n      var title;\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        title = node.getFullName();\n      } else {\n        title = node.getClass().getFullName() + \"#\" + node.getName();\n      }\n\n      var html = new qx.util.StringBuilder();\n      html.add('<div class=\"item-detail-headline\">', \"View Source:\", \"</div>\");\n      html.add(\n        '<div class=\"item-detail-text\">',\n        '<a href=\"' + sourceUri + '\" target=\"_blank\">' + title + \"</a>\",\n        \"</div>\"\n      );\n\n      return html.get();\n    },\n\n    /**\n     * Wraps a HTML fragment with a \"span\" element with CSS classes for the\n     * item.\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @param title\n     *          {String} original title\n     * @return {String} HMTL fragment\n     */\n    setTitleClass(node, title) {\n      var html = [\"<span class='\", \"\", \"'>\", title, \"</span>\"];\n      html[1] = this.getItemCssClasses(node);\n      return html.join(\"\");\n    },\n\n    /**\n     * Gets CSS classes for a class item\n     *\n     * @param node\n     *          {qxl.apiviewer.dao.Class} class doc node\n     * @return {String} CSS classes separated by \" \"\n     */\n    getItemCssClasses(node) {\n      var cssClasses = [];\n      if (node instanceof qxl.apiviewer.dao.Class) {\n        if (node.isDeprecated()) {\n          cssClasses.push(\"item-deprecated\");\n        }\n        if (node.isPrivate()) {\n          cssClasses.push(\"item-private\");\n        }\n        if (node.isInternal()) {\n          cssClasses.push(\"item-internal\");\n        }\n        if (node.isProtected()) {\n          cssClasses.push(\"item-protected\");\n        }\n      }\n      return cssClasses.join(\" \");\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}