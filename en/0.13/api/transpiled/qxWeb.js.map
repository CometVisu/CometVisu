{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "type",
    "BaseArray",
    "statics",
    "__init",
    "$$qx",
    "$init",
    "arg",
    "clazz",
    "length",
    "$widget",
    "qxWeb",
    "clean",
    "i",
    "isNode",
    "nodeType",
    "push",
    "isWindow",
    "history",
    "location",
    "document",
    "getAttribute",
    "getByName",
    "col",
    "lang",
    "Array",
    "cast",
    "call",
    "$attach",
    "module",
    "override",
    "name",
    "prototype",
    "undefined",
    "$attachStatic",
    "$attachAll",
    "staticsNamespace",
    "members",
    "indexOf",
    "destination",
    "toUpperCase",
    "$attachInit",
    "init",
    "config",
    "construct",
    "selector",
    "context",
    "isString",
    "bom",
    "Selector",
    "query",
    "filter",
    "Type",
    "isFunction",
    "constructor",
    "matches",
    "unique",
    "slice",
    "begin",
    "end",
    "splice",
    "index",
    "howMany",
    "varargs",
    "apply",
    "arguments",
    "map",
    "callback",
    "thisarg",
    "concat",
    "clone",
    "elem",
    "fromIndex",
    "isArray",
    "l",
    "debug",
    "logThis",
    "_forEachElement",
    "func",
    "ctx",
    "_forEachElementWrapped",
    "item",
    "idx",
    "arr",
    "defer",
    "window",
    "q"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qxWeb.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * The Core module's responsibility is to query the DOM for elements and offer\n * these elements as a collection. The Core module itself does not offer any methods to\n * work with the collection. These methods are added by the other included modules,\n * such as Manipulating or Attributes.\n *\n * Core also provides the plugin API which allows modules to attach either\n * static functions to the global <code>q</code> object or define methods on the\n * collection it returns.\n *\n * By default, the core module is assigned to a global module named <code>q</code>.\n * In case <code>q</code> is already defined, the name <code>qxWeb</code>\n * is used instead.\n *\n * For further details, take a look at the documentation in the\n * <a href='http://qooxdoo.org/5.0.2/pages/website.html' target='_blank'>user manual</a>.\n *\n * @ignore(q)\n *\n * @group (Core)\n *\n */\nqx.Bootstrap.define(\"qxWeb\", {\n  extend: qx.type.BaseArray,\n  statics: {\n    // internal storage for all initializers\n    __init: [],\n\n    // internal reference to the used qx namespace\n    $$qx: qx,\n\n    /**\n     * Internal helper to initialize collections.\n     *\n     * @param arg {var} An array of Elements which will\n     *   be initialized as {@link q}. All items in the array which are not\n     *   either a window object, a DOM element node or a DOM document node will\n     *   be ignored.\n     * @param clazz {Class} The class of the new collection.\n     * @return {q} A new initialized collection.\n     */\n    $init(arg, clazz) {\n      // restore widget instance\n      if (\n        arg.length &&\n        arg.length == 1 &&\n        arg[0] &&\n        arg[0].$widget instanceof qxWeb\n      ) {\n        return arg[0].$widget;\n      }\n\n      var clean = [];\n      for (var i = 0; i < arg.length; i++) {\n        // check for node or window object\n        var isNode = !!(\n          arg[i] &&\n          (arg[i].nodeType === 1 ||\n            arg[i].nodeType === 9 ||\n            arg[i].nodeType === 11)\n        );\n\n        if (isNode) {\n          clean.push(arg[i]);\n          continue;\n        }\n        var isWindow = !!(\n          arg[i] &&\n          arg[i].history &&\n          arg[i].location &&\n          arg[i].document\n        );\n\n        if (isWindow) {\n          clean.push(arg[i]);\n        }\n      }\n\n      if (\n        arg[0] &&\n        arg[0].getAttribute &&\n        arg[0].getAttribute(\"data-qx-class\") &&\n        clean.length < 2\n      ) {\n        clazz =\n          qx.Bootstrap.getByName(arg[0].getAttribute(\"data-qx-class\")) || clazz;\n      }\n\n      var col = qx.lang.Array.cast(clean, clazz);\n      for (var i = 0; i < qxWeb.__init.length; i++) {\n        qxWeb.__init[i].call(col);\n      }\n\n      return col;\n    },\n\n    /**\n     * This is an API for module development and can be used to attach new methods\n     * to {@link q}.\n     *\n     * @param module {Map} A map containing the methods to attach.\n     * @param override {Boolean?false} Force to override\n     */\n    $attach(module, override) {\n      for (var name in module) {\n        if (\n          qxWeb.prototype[name] != undefined &&\n          Array.prototype[name] == undefined &&\n          override !== true\n        ) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            throw new Error(\"Method '\" + name + \"' already available.\");\n          }\n        } else {\n          qxWeb.prototype[name] = module[name];\n        }\n      }\n    },\n\n    /**\n     * This is an API for module development and can be used to attach new methods\n     * to {@link q}.\n     *\n     * @param module {Map} A map containing the methods to attach.\n     * @param override {Boolean?false} Force to override\n     */\n    $attachStatic(module, override) {\n      for (var name in module) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qxWeb[name] != undefined && override !== true) {\n            throw new Error(\n              \"Method '\" + name + \"' already available as static method.\"\n            );\n          }\n        }\n        qxWeb[name] = module[name];\n      }\n    },\n\n    /**\n     * This is an API for module development and can be used to attach new methods\n     * to {@link q} during runtime according to the following conventions:\n     *\n     * Public members of the module are attached to the collection similar to\n     * <code>qxWeb.$attach</code>. Members beginning with '$' or '_' are ignored.\n     *\n     * Statics of the module are attached to {@link q} similar to\n     * <code>qxWeb.$attachStatic</code>. Statics beginning with '$' or '_', as well as constants\n     * (all upper case) and some qooxdoo-internal statics of the module are ignored.\n     *\n     *\n     * If more fine-grained control outside if these conventions is needed,\n     * simply use <code>qxWeb.$attach</code> or <code>qxWeb$attachStatic</code>.\n     *\n     * @param clazz {Object} the qooxdoo class definition calling this method.\n     * @param staticsNamespace {String?undefined} Specifies the namespace under which statics are attached to {@link q}.\n     */\n    $attachAll(clazz, staticsNamespace) {\n      // members\n      for (var name in clazz.members) {\n        if (name.indexOf(\"$\") !== 0 && name.indexOf(\"_\") !== 0) {\n          qxWeb.prototype[name] = clazz.members[name];\n        }\n      }\n\n      // statics\n      var destination;\n      if (staticsNamespace != null) {\n        qxWeb[staticsNamespace] = qxWeb[staticsNamespace] || {};\n        destination = qxWeb[staticsNamespace];\n      } else {\n        destination = qxWeb;\n      }\n\n      for (var name in clazz.statics) {\n        if (\n          name.indexOf(\"$\") !== 0 &&\n          name.indexOf(\"_\") !== 0 &&\n          name !== \"name\" &&\n          name !== \"basename\" &&\n          name !== \"classname\" &&\n          name !== \"toString\" &&\n          name !== name.toUpperCase()\n        ) {\n          destination[name] = clazz.statics[name];\n        }\n      }\n    },\n\n    /**\n     * This is an API for module development and can be used to attach new initialization\n     * methods to {@link q} which will be called when a new collection is\n     * created.\n     *\n     * @param init {Function} The initialization method for a module.\n     */\n    $attachInit(init) {\n      this.__init.push(init);\n    },\n\n    /**\n     * Define a new class using the qooxdoo class system.\n     *\n     * @param name {String?} Name of the class. If null, the class will not be\n     *   attached to a namespace.\n     * @param config {Map ? null} Class definition structure. The configuration map has the following keys:\n     *     <table>\n     *       <thead>\n     *         <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n     *       </thead>\n     *       <tr><td>extend</td><td>Class</td><td>The super class the current class inherits from.</td></tr>\n     *       <tr><td>construct</td><td>Function</td><td>The constructor of the class.</td></tr>\n     *       <tr><td>statics</td><td>Map</td><td>Map of static values / functions of the class.</td></tr>\n     *       <tr><td>members</td><td>Map</td><td>Map of instance members of the class.</td></tr>\n     *       <tr><td>defer</td><td>Function</td><td>Function that is called at the end of\n     *          processing the class declaration.</td></tr>\n     *     </table>\n     *\n     * <strong>Important hint:</strong> Please do not initialize reference types\n     * (<code>Object</code> or <code>Array</code>) directly inside the <strong>members</strong> section.\n     * Only list and initialize it with <code>null</code>. Initialize your reference type inside the\n     * <code>construct</code>. Check out one of the samples below to get the idea.\n     * @return {Function} The defined class.\n     */\n    define(name, config) {\n      if (config == undefined) {\n        config = name;\n        name = null;\n      }\n      return qx.Bootstrap.define.call(qx.Bootstrap, name, config);\n    }\n  },\n\n  /**\n   * Primary usage:\n   * Accepts a selector string and returns a collection of found items. The optional context\n   * element can be used to reduce the amount of found elements to children of the\n   * context element. If the context object is a collection, its first item is used.\n   *\n   * Secondary usage:\n   * Creates a collection from an existing DOM element, document node or window object\n   * (or an Array containing any such objects)\n   *\n   * <a href=\"http://sizzlejs.com/\" target=\"_blank\">Sizzle</a> is used as selector engine.\n   * Check out the <a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\">documentation</a>\n   * for more details.\n   *\n   * @param selector {String|Element|Document|Window|Array} Valid selector (CSS3 + extensions),\n   *   window object, DOM element/document or Array of DOM Elements.\n   * @param context {Element|q} Only the children of this element are considered.\n   * @return {q} A collection of DOM elements.\n   */\n  construct(selector, context) {\n    if (!selector && this instanceof qxWeb) {\n      return this;\n    }\n\n    if (!selector) {\n      selector = [];\n    } else if (qx.Bootstrap.isString(selector)) {\n      if (context instanceof qxWeb && context.length != 0) {\n        context = context[0];\n      }\n      if (context instanceof qxWeb) {\n        selector = [];\n      } else {\n        selector = qx.bom.Selector.query(selector, context);\n      }\n    } else if (\n      selector.nodeType === 1 ||\n      selector.nodeType === 9 ||\n      selector.nodeType === 11 ||\n      (selector.history && selector.location && selector.document)\n    ) {\n      selector = [selector];\n    }\n    return qxWeb.$init(selector, qxWeb);\n  },\n\n  members: {\n    /**\n     * Gets a new collection containing only those elements that passed the\n     * given filter. This can be either a selector expression or a filter\n     * function.\n     *\n     * @param selector {String|Function} Selector expression or filter function\n     * @return {q} New collection containing the elements that passed the filter\n     */\n    filter(selector) {\n      if (qx.lang.Type.isFunction(selector)) {\n        return qxWeb.$init(\n          Array.prototype.filter.call(this, selector),\n          this.constructor\n        );\n      }\n      return qxWeb.$init(\n        qx.bom.Selector.matches(selector, this),\n        this.constructor\n      );\n    },\n\n    /**\n     * Recreates a collection which is free of all duplicate elements from the original.\n     *\n     * @return {q} Returns a copy with no duplicates\n     */\n    unique() {\n      var unique = qx.lang.Array.unique(this);\n      return qxWeb.$init(unique, this.constructor);\n    },\n\n    /**\n     * Returns a copy of the collection within the given range.\n     *\n     * @param begin {Number} The index to begin.\n     * @param end {Number?} The index to end.\n     * @return {q} A new collection containing a slice of the original collection.\n     */\n    slice(begin, end) {\n      // Old IEs return an empty array if the second argument is undefined\n      // check 'end' explicit for \"undefined\" [BUG #7322]\n      if (end !== undefined) {\n        return qxWeb.$init(\n          Array.prototype.slice.call(this, begin, end),\n          this.constructor\n        );\n      }\n      return qxWeb.$init(\n        Array.prototype.slice.call(this, begin),\n        this.constructor\n      );\n    },\n\n    /**\n     * Removes the given number of items and returns the removed items as a new collection.\n     * This method can also add items. Take a look at the\n     * <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice' target='_blank'>documentation of MDN</a> for more details.\n     *\n     * @param index {Number} The index to begin.\n     * @param howMany {Number} the amount of items to remove.\n     * @param varargs {var} As many items as you want to add.\n     * @return {q} A new collection containing the removed items.\n     */\n    splice(index, howMany, varargs) {\n      return qxWeb.$init(\n        Array.prototype.splice.apply(this, arguments),\n        this.constructor\n      );\n    },\n\n    /**\n     * Returns a new collection containing the modified elements. For more details, check out the\n     * <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map' target='_blank'>MDN documentation</a>.\n     *\n     * @param callback {Function} Function which produces the new element.\n     * @param thisarg {var} Context of the callback.\n     * @return {q} New collection containing the elements that passed the filter\n     */\n    map(callback, thisarg) {\n      return qxWeb.$init(Array.prototype.map.apply(this, arguments), qxWeb);\n    },\n\n    /**\n     * Returns a copy of the collection including the given elements.\n     *\n     * @param varargs {var} As many items as you want to add.\n     * @return {q} A new collection containing all items.\n     */\n    concat(varargs) {\n      var clone = Array.prototype.slice.call(this, 0);\n      for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] instanceof qxWeb) {\n          clone = clone.concat(Array.prototype.slice.call(arguments[i], 0));\n        } else {\n          clone.push(arguments[i]);\n        }\n      }\n      return qxWeb.$init(clone, this.constructor);\n    },\n\n    /**\n     * Returns the index of the given element within the current\n     * collection or -1 if the element is not in the collection\n     * @param elem {Element|Element[]|qxWeb} Element or collection of elements\n     * @param fromIndex {Integer} The index to start the search at\n     * @return {Number} The element's index\n     */\n    indexOf(elem, fromIndex) {\n      if (!elem) {\n        return -1;\n      }\n\n      if (!fromIndex) {\n        fromIndex = 0;\n      }\n\n      if (typeof fromIndex !== \"number\") {\n        return -1;\n      }\n\n      if (fromIndex < 0) {\n        fromIndex = this.length + fromIndex;\n        if (fromIndex < 0) {\n          fromIndex = 0;\n        }\n      }\n\n      if (qx.lang.Type.isArray(elem)) {\n        elem = elem[0];\n      }\n\n      for (var i = fromIndex, l = this.length; i < l; i++) {\n        if (this[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    /**\n     * Calls the browser's native debugger to easily allow debugging within\n     * chained calls.\n     *\n     * Unlike the <a href=\"#.logThis\">logThis</a> method this implementation blocks the further processing.\n     *\n     * @return {q} The collection for chaining\n     * @ignore(debugger)\n     */\n    debug() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        /* eslint-disable-next-line no-debugger */\n        debugger;\n      }\n      return this;\n    },\n\n    /**\n     * Logs information about the current collection, its DOM elements and the\n     * length. Very useful during development to easily check the current state of\n     * your collection and avoid common pitfalls like an empty collection.\n     *\n     * Unlike the <a href=\"#.debug\">debug</a> method this implementation works non-blocking.\n     *\n     * @return {q} The collection for chaining\n     *\n     */\n    logThis() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // loop over the collection elements to make sure we get the current content\n        // of the collection and not the reference values later (they might change depending on\n        // manipulation of the collection)\n        var elements = [];\n        this.forEach(function (item) {\n          elements.push(item);\n        });\n\n        var length = this.length;\n\n        console.group(\"*** Collection infos ***\");\n        console.info(\"Length:\", length);\n        console.info(\"Elements:\", elements);\n        console.info(\"Instance:\", this);\n        console.groupEnd();\n      }\n\n      return this;\n    },\n\n    /**\n     * Calls a function for each DOM element  or document fragment in the\n     * collection. This is used for DOM manipulations which can't be\n     * applied to document nodes or window objects.\n     *\n     * @param func {Function} Callback function. Will be called with three arguments:\n     * The element, the element's index within the collection and the collection itself.\n     * @param ctx {Object} The context for the callback function (default: The collection)\n     * @return {q} The collection for chaining\n     */\n    _forEachElement(func, ctx) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] && (this[i].nodeType === 1 || this[i].nodeType === 11)) {\n          func.apply(ctx || this, [this[i], i, this]);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Calls a function for each DOM element node in the collection. Each node is wrapped\n     * in a collection before the function is called.\n     *\n     * @param func {Function} Callback function. Will be called with three arguments:\n     * The element wrappend in a collection, the element's index within the collection and\n     * the collection itself.\n     * @param ctx {Object} The context for the callback function (default: The collection)\n     * @return {q} The collection for chaining\n     */\n    _forEachElementWrapped(func, ctx) {\n      this._forEachElement(function (item, idx, arr) {\n        func.apply(this, [qxWeb(item), idx, arr]);\n      }, ctx);\n      return this;\n    }\n  },\n\n  /**\n   * @ignore(q)\n   */\n  defer(statics) {\n    if (window.q == undefined) {\n      window.q = statics;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}