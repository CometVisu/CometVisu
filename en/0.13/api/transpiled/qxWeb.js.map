{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "type",
    "BaseArray",
    "statics",
    "__init",
    "$$qx",
    "$init",
    "arg",
    "clazz",
    "length",
    "$widget",
    "qxWeb",
    "clean",
    "i",
    "isNode",
    "nodeType",
    "push",
    "isWindow",
    "history",
    "location",
    "document",
    "getAttribute",
    "getByName",
    "col",
    "lang",
    "Array",
    "cast",
    "call",
    "$attach",
    "module",
    "override",
    "name",
    "prototype",
    "undefined",
    "$attachStatic",
    "$attachAll",
    "staticsNamespace",
    "members",
    "indexOf",
    "destination",
    "toUpperCase",
    "$attachInit",
    "init",
    "config",
    "construct",
    "selector",
    "context",
    "isString",
    "bom",
    "Selector",
    "query",
    "filter",
    "Type",
    "isFunction",
    "constructor",
    "matches",
    "unique",
    "slice",
    "begin",
    "end",
    "splice",
    "index",
    "howMany",
    "varargs",
    "apply",
    "arguments",
    "map",
    "callback",
    "thisarg",
    "concat",
    "clone",
    "elem",
    "fromIndex",
    "isArray",
    "l",
    "debug",
    "logThis",
    "_forEachElement",
    "func",
    "ctx",
    "_forEachElementWrapped",
    "item",
    "idx",
    "arr",
    "defer",
    "window",
    "q"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qxWeb.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The Core module's responsibility is to query the DOM for elements and offer\r\n * these elements as a collection. The Core module itself does not offer any methods to\r\n * work with the collection. These methods are added by the other included modules,\r\n * such as Manipulating or Attributes.\r\n *\r\n * Core also provides the plugin API which allows modules to attach either\r\n * static functions to the global <code>q</code> object or define methods on the\r\n * collection it returns.\r\n *\r\n * By default, the core module is assigned to a global module named <code>q</code>.\r\n * In case <code>q</code> is already defined, the name <code>qxWeb</code>\r\n * is used instead.\r\n *\r\n * For further details, take a look at the documentation in the\r\n * <a href='http://qooxdoo.org/5.0.2/pages/website.html' target='_blank'>user manual</a>.\r\n *\r\n * @ignore(q)\r\n *\r\n * @group (Core)\r\n *\r\n */\r\nqx.Bootstrap.define(\"qxWeb\", {\r\n  extend: qx.type.BaseArray,\r\n  statics: {\r\n    // internal storage for all initializers\r\n    __init: [],\r\n\r\n    // internal reference to the used qx namespace\r\n    $$qx: qx,\r\n\r\n    /**\r\n     * Internal helper to initialize collections.\r\n     *\r\n     * @param arg {var} An array of Elements which will\r\n     *   be initialized as {@link q}. All items in the array which are not\r\n     *   either a window object, a DOM element node or a DOM document node will\r\n     *   be ignored.\r\n     * @param clazz {Class} The class of the new collection.\r\n     * @return {q} A new initialized collection.\r\n     */\r\n    $init(arg, clazz) {\r\n      // restore widget instance\r\n      if (\r\n        arg.length &&\r\n        arg.length == 1 &&\r\n        arg[0] &&\r\n        arg[0].$widget instanceof qxWeb\r\n      ) {\r\n        return arg[0].$widget;\r\n      }\r\n\r\n      var clean = [];\r\n      for (var i = 0; i < arg.length; i++) {\r\n        // check for node or window object\r\n        var isNode = !!(\r\n          arg[i] &&\r\n          (arg[i].nodeType === 1 ||\r\n            arg[i].nodeType === 9 ||\r\n            arg[i].nodeType === 11)\r\n        );\r\n\r\n        if (isNode) {\r\n          clean.push(arg[i]);\r\n          continue;\r\n        }\r\n        var isWindow = !!(\r\n          arg[i] &&\r\n          arg[i].history &&\r\n          arg[i].location &&\r\n          arg[i].document\r\n        );\r\n\r\n        if (isWindow) {\r\n          clean.push(arg[i]);\r\n        }\r\n      }\r\n\r\n      if (\r\n        arg[0] &&\r\n        arg[0].getAttribute &&\r\n        arg[0].getAttribute(\"data-qx-class\") &&\r\n        clean.length < 2\r\n      ) {\r\n        clazz =\r\n          qx.Bootstrap.getByName(arg[0].getAttribute(\"data-qx-class\")) || clazz;\r\n      }\r\n\r\n      var col = qx.lang.Array.cast(clean, clazz);\r\n      for (var i = 0; i < qxWeb.__init.length; i++) {\r\n        qxWeb.__init[i].call(col);\r\n      }\r\n\r\n      return col;\r\n    },\r\n\r\n    /**\r\n     * This is an API for module development and can be used to attach new methods\r\n     * to {@link q}.\r\n     *\r\n     * @param module {Map} A map containing the methods to attach.\r\n     * @param override {Boolean?false} Force to override\r\n     */\r\n    $attach(module, override) {\r\n      for (var name in module) {\r\n        if (\r\n          qxWeb.prototype[name] != undefined &&\r\n          Array.prototype[name] == undefined &&\r\n          override !== true\r\n        ) {\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            throw new Error(\"Method '\" + name + \"' already available.\");\r\n          }\r\n        } else {\r\n          qxWeb.prototype[name] = module[name];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This is an API for module development and can be used to attach new methods\r\n     * to {@link q}.\r\n     *\r\n     * @param module {Map} A map containing the methods to attach.\r\n     * @param override {Boolean?false} Force to override\r\n     */\r\n    $attachStatic(module, override) {\r\n      for (var name in module) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          if (qxWeb[name] != undefined && override !== true) {\r\n            throw new Error(\r\n              \"Method '\" + name + \"' already available as static method.\"\r\n            );\r\n          }\r\n        }\r\n        qxWeb[name] = module[name];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This is an API for module development and can be used to attach new methods\r\n     * to {@link q} during runtime according to the following conventions:\r\n     *\r\n     * Public members of the module are attached to the collection similar to\r\n     * <code>qxWeb.$attach</code>. Members beginning with '$' or '_' are ignored.\r\n     *\r\n     * Statics of the module are attached to {@link q} similar to\r\n     * <code>qxWeb.$attachStatic</code>. Statics beginning with '$' or '_', as well as constants\r\n     * (all upper case) and some qooxdoo-internal statics of the module are ignored.\r\n     *\r\n     *\r\n     * If more fine-grained control outside if these conventions is needed,\r\n     * simply use <code>qxWeb.$attach</code> or <code>qxWeb$attachStatic</code>.\r\n     *\r\n     * @param clazz {Object} the qooxdoo class definition calling this method.\r\n     * @param staticsNamespace {String?undefined} Specifies the namespace under which statics are attached to {@link q}.\r\n     */\r\n    $attachAll(clazz, staticsNamespace) {\r\n      // members\r\n      for (var name in clazz.members) {\r\n        if (name.indexOf(\"$\") !== 0 && name.indexOf(\"_\") !== 0) {\r\n          qxWeb.prototype[name] = clazz.members[name];\r\n        }\r\n      }\r\n\r\n      // statics\r\n      var destination;\r\n      if (staticsNamespace != null) {\r\n        qxWeb[staticsNamespace] = qxWeb[staticsNamespace] || {};\r\n        destination = qxWeb[staticsNamespace];\r\n      } else {\r\n        destination = qxWeb;\r\n      }\r\n\r\n      for (var name in clazz.statics) {\r\n        if (\r\n          name.indexOf(\"$\") !== 0 &&\r\n          name.indexOf(\"_\") !== 0 &&\r\n          name !== \"name\" &&\r\n          name !== \"basename\" &&\r\n          name !== \"classname\" &&\r\n          name !== \"toString\" &&\r\n          name !== name.toUpperCase()\r\n        ) {\r\n          destination[name] = clazz.statics[name];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * This is an API for module development and can be used to attach new initialization\r\n     * methods to {@link q} which will be called when a new collection is\r\n     * created.\r\n     *\r\n     * @param init {Function} The initialization method for a module.\r\n     */\r\n    $attachInit(init) {\r\n      this.__init.push(init);\r\n    },\r\n\r\n    /**\r\n     * Define a new class using the qooxdoo class system.\r\n     *\r\n     * @param name {String?} Name of the class. If null, the class will not be\r\n     *   attached to a namespace.\r\n     * @param config {Map ? null} Class definition structure. The configuration map has the following keys:\r\n     *     <table>\r\n     *       <thead>\r\n     *         <tr><th>Name</th><th>Type</th><th>Description</th></tr>\r\n     *       </thead>\r\n     *       <tr><td>extend</td><td>Class</td><td>The super class the current class inherits from.</td></tr>\r\n     *       <tr><td>construct</td><td>Function</td><td>The constructor of the class.</td></tr>\r\n     *       <tr><td>statics</td><td>Map</td><td>Map of static values / functions of the class.</td></tr>\r\n     *       <tr><td>members</td><td>Map</td><td>Map of instance members of the class.</td></tr>\r\n     *       <tr><td>defer</td><td>Function</td><td>Function that is called at the end of\r\n     *          processing the class declaration.</td></tr>\r\n     *     </table>\r\n     *\r\n     * <strong>Important hint:</strong> Please do not initialize reference types\r\n     * (<code>Object</code> or <code>Array</code>) directly inside the <strong>members</strong> section.\r\n     * Only list and initialize it with <code>null</code>. Initialize your reference type inside the\r\n     * <code>construct</code>. Check out one of the samples below to get the idea.\r\n     * @return {Function} The defined class.\r\n     */\r\n    define(name, config) {\r\n      if (config == undefined) {\r\n        config = name;\r\n        name = null;\r\n      }\r\n      return qx.Bootstrap.define.call(qx.Bootstrap, name, config);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Primary usage:\r\n   * Accepts a selector string and returns a collection of found items. The optional context\r\n   * element can be used to reduce the amount of found elements to children of the\r\n   * context element. If the context object is a collection, its first item is used.\r\n   *\r\n   * Secondary usage:\r\n   * Creates a collection from an existing DOM element, document node or window object\r\n   * (or an Array containing any such objects)\r\n   *\r\n   * <a href=\"http://sizzlejs.com/\" target=\"_blank\">Sizzle</a> is used as selector engine.\r\n   * Check out the <a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\">documentation</a>\r\n   * for more details.\r\n   *\r\n   * @param selector {String|Element|Document|Window|Array} Valid selector (CSS3 + extensions),\r\n   *   window object, DOM element/document or Array of DOM Elements.\r\n   * @param context {Element|q} Only the children of this element are considered.\r\n   * @return {q} A collection of DOM elements.\r\n   */\r\n  construct(selector, context) {\r\n    if (!selector && this instanceof qxWeb) {\r\n      return this;\r\n    }\r\n\r\n    if (!selector) {\r\n      selector = [];\r\n    } else if (qx.Bootstrap.isString(selector)) {\r\n      if (context instanceof qxWeb && context.length != 0) {\r\n        context = context[0];\r\n      }\r\n      if (context instanceof qxWeb) {\r\n        selector = [];\r\n      } else {\r\n        selector = qx.bom.Selector.query(selector, context);\r\n      }\r\n    } else if (\r\n      selector.nodeType === 1 ||\r\n      selector.nodeType === 9 ||\r\n      selector.nodeType === 11 ||\r\n      (selector.history && selector.location && selector.document)\r\n    ) {\r\n      selector = [selector];\r\n    }\r\n    return qxWeb.$init(selector, qxWeb);\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Gets a new collection containing only those elements that passed the\r\n     * given filter. This can be either a selector expression or a filter\r\n     * function.\r\n     *\r\n     * @param selector {String|Function} Selector expression or filter function\r\n     * @return {q} New collection containing the elements that passed the filter\r\n     */\r\n    filter(selector) {\r\n      if (qx.lang.Type.isFunction(selector)) {\r\n        return qxWeb.$init(\r\n          Array.prototype.filter.call(this, selector),\r\n          this.constructor\r\n        );\r\n      }\r\n      return qxWeb.$init(\r\n        qx.bom.Selector.matches(selector, this),\r\n        this.constructor\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Recreates a collection which is free of all duplicate elements from the original.\r\n     *\r\n     * @return {q} Returns a copy with no duplicates\r\n     */\r\n    unique() {\r\n      var unique = qx.lang.Array.unique(this);\r\n      return qxWeb.$init(unique, this.constructor);\r\n    },\r\n\r\n    /**\r\n     * Returns a copy of the collection within the given range.\r\n     *\r\n     * @param begin {Number} The index to begin.\r\n     * @param end {Number?} The index to end.\r\n     * @return {q} A new collection containing a slice of the original collection.\r\n     */\r\n    slice(begin, end) {\r\n      // Old IEs return an empty array if the second argument is undefined\r\n      // check 'end' explicit for \"undefined\" [BUG #7322]\r\n      if (end !== undefined) {\r\n        return qxWeb.$init(\r\n          Array.prototype.slice.call(this, begin, end),\r\n          this.constructor\r\n        );\r\n      }\r\n      return qxWeb.$init(\r\n        Array.prototype.slice.call(this, begin),\r\n        this.constructor\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Removes the given number of items and returns the removed items as a new collection.\r\n     * This method can also add items. Take a look at the\r\n     * <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice' target='_blank'>documentation of MDN</a> for more details.\r\n     *\r\n     * @param index {Number} The index to begin.\r\n     * @param howMany {Number} the amount of items to remove.\r\n     * @param varargs {var} As many items as you want to add.\r\n     * @return {q} A new collection containing the removed items.\r\n     */\r\n    splice(index, howMany, varargs) {\r\n      return qxWeb.$init(\r\n        Array.prototype.splice.apply(this, arguments),\r\n        this.constructor\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Returns a new collection containing the modified elements. For more details, check out the\r\n     * <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map' target='_blank'>MDN documentation</a>.\r\n     *\r\n     * @param callback {Function} Function which produces the new element.\r\n     * @param thisarg {var} Context of the callback.\r\n     * @return {q} New collection containing the elements that passed the filter\r\n     */\r\n    map(callback, thisarg) {\r\n      return qxWeb.$init(Array.prototype.map.apply(this, arguments), qxWeb);\r\n    },\r\n\r\n    /**\r\n     * Returns a copy of the collection including the given elements.\r\n     *\r\n     * @param varargs {var} As many items as you want to add.\r\n     * @return {q} A new collection containing all items.\r\n     */\r\n    concat(varargs) {\r\n      var clone = Array.prototype.slice.call(this, 0);\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        if (arguments[i] instanceof qxWeb) {\r\n          clone = clone.concat(Array.prototype.slice.call(arguments[i], 0));\r\n        } else {\r\n          clone.push(arguments[i]);\r\n        }\r\n      }\r\n      return qxWeb.$init(clone, this.constructor);\r\n    },\r\n\r\n    /**\r\n     * Returns the index of the given element within the current\r\n     * collection or -1 if the element is not in the collection\r\n     * @param elem {Element|Element[]|qxWeb} Element or collection of elements\r\n     * @param fromIndex {Integer} The index to start the search at\r\n     * @return {Number} The element's index\r\n     */\r\n    indexOf(elem, fromIndex) {\r\n      if (!elem) {\r\n        return -1;\r\n      }\r\n\r\n      if (!fromIndex) {\r\n        fromIndex = 0;\r\n      }\r\n\r\n      if (typeof fromIndex !== \"number\") {\r\n        return -1;\r\n      }\r\n\r\n      if (fromIndex < 0) {\r\n        fromIndex = this.length + fromIndex;\r\n        if (fromIndex < 0) {\r\n          fromIndex = 0;\r\n        }\r\n      }\r\n\r\n      if (qx.lang.Type.isArray(elem)) {\r\n        elem = elem[0];\r\n      }\r\n\r\n      for (var i = fromIndex, l = this.length; i < l; i++) {\r\n        if (this[i] === elem) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    /**\r\n     * Calls the browser's native debugger to easily allow debugging within\r\n     * chained calls.\r\n     *\r\n     * Unlike the <a href=\"#.logThis\">logThis</a> method this implementation blocks the further processing.\r\n     *\r\n     * @return {q} The collection for chaining\r\n     * @ignore(debugger)\r\n     */\r\n    debug() {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        /* eslint-disable-next-line no-debugger */\r\n        debugger;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Logs information about the current collection, its DOM elements and the\r\n     * length. Very useful during development to easily check the current state of\r\n     * your collection and avoid common pitfalls like an empty collection.\r\n     *\r\n     * Unlike the <a href=\"#.debug\">debug</a> method this implementation works non-blocking.\r\n     *\r\n     * @return {q} The collection for chaining\r\n     *\r\n     */\r\n    logThis() {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        // loop over the collection elements to make sure we get the current content\r\n        // of the collection and not the reference values later (they might change depending on\r\n        // manipulation of the collection)\r\n        var elements = [];\r\n        this.forEach(function (item) {\r\n          elements.push(item);\r\n        });\r\n\r\n        var length = this.length;\r\n\r\n        console.group(\"*** Collection infos ***\");\r\n        console.info(\"Length:\", length);\r\n        console.info(\"Elements:\", elements);\r\n        console.info(\"Instance:\", this);\r\n        console.groupEnd();\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Calls a function for each DOM element  or document fragment in the\r\n     * collection. This is used for DOM manipulations which can't be\r\n     * applied to document nodes or window objects.\r\n     *\r\n     * @param func {Function} Callback function. Will be called with three arguments:\r\n     * The element, the element's index within the collection and the collection itself.\r\n     * @param ctx {Object} The context for the callback function (default: The collection)\r\n     * @return {q} The collection for chaining\r\n     */\r\n    _forEachElement(func, ctx) {\r\n      for (var i = 0, l = this.length; i < l; i++) {\r\n        if (this[i] && (this[i].nodeType === 1 || this[i].nodeType === 11)) {\r\n          func.apply(ctx || this, [this[i], i, this]);\r\n        }\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Calls a function for each DOM element node in the collection. Each node is wrapped\r\n     * in a collection before the function is called.\r\n     *\r\n     * @param func {Function} Callback function. Will be called with three arguments:\r\n     * The element wrappend in a collection, the element's index within the collection and\r\n     * the collection itself.\r\n     * @param ctx {Object} The context for the callback function (default: The collection)\r\n     * @return {q} The collection for chaining\r\n     */\r\n    _forEachElementWrapped(func, ctx) {\r\n      this._forEachElement(function (item, idx, arr) {\r\n        func.apply(this, [qxWeb(item), idx, arr]);\r\n      }, ctx);\r\n      return this;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @ignore(q)\r\n   */\r\n  defer(statics) {\r\n    if (window.q == undefined) {\r\n      window.q = statics;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}