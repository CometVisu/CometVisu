{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "addListener",
    "_onPhaseChange",
    "statics",
    "PENDING",
    "members",
    "__sendTime",
    "getRequestHash",
    "cv",
    "ConfigCache",
    "hashCode",
    "report",
    "Record",
    "normalizeUrl",
    "_getConfiguredUrl",
    "getMethod",
    "JSON",
    "stringify",
    "getRequestData",
    "ev",
    "hash",
    "delay",
    "url",
    "getData",
    "Date",
    "now",
    "record",
    "XHR",
    "method",
    "headers",
    "_getAllRequestHeaders",
    "requestData",
    "utils",
    "MXhrHook",
    "push",
    "error",
    "getAllResponseHeaders",
    "trim",
    "split",
    "forEach",
    "entry",
    "parts",
    "getStatus",
    "status",
    "body",
    "getTransport",
    "responseText",
    "phase",
    "shift",
    "length"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/report/utils/MXhrHook.js"
  ],
  "sourcesContent": [
    "/* MXhrHook.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This mixin patches {qx.io.request.Xhr} to get noticed about every XHR request to record its response.\n */\nqx.Mixin.define('cv.report.utils.MXhrHook', {\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    this.addListener('changePhase', this._onPhaseChange, this);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    PENDING: {}\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __sendTime: null,\n\n    /**\n     * Calculate Hash code for current request\n     */\n    getRequestHash() {\n      return cv.ConfigCache.hashCode(\n        cv.report.Record.normalizeUrl(this._getConfiguredUrl()) +\n          this.getMethod() +\n          JSON.stringify(this.getRequestData())\n      );\n    },\n\n    _onPhaseChange(ev) {\n      const hash = this.getRequestHash();\n      let delay;\n      const url = cv.report.Record.normalizeUrl(this._getConfiguredUrl());\n\n      if (ev.getData() === 'opened') {\n        this.__sendTime = Date.now();\n        // calculate Hash value for request\n        cv.report.Record.record(cv.report.Record.XHR, 'request', {\n          url: url,\n          method: this.getMethod(),\n          headers: this._getAllRequestHeaders(),\n          requestData: this.getRequestData(),\n          hash: hash\n        });\n\n        if (!cv.report.utils.MXhrHook.PENDING[hash]) {\n          cv.report.utils.MXhrHook.PENDING[hash] = [];\n        }\n        cv.report.utils.MXhrHook.PENDING[hash].push(url);\n      } else if (ev.getData() === 'load') {\n        if (!this.__sendTime) {\n          this.error('response received without sendTime set. Not possible to calculate correct delay');\n        }\n        // response has been received (successful or not) -> log it\n        const headers = {};\n        this.getAllResponseHeaders()\n          .trim()\n          .split('\\r\\n')\n          .forEach(function (entry) {\n            const parts = entry.split(': ');\n            headers[parts[0]] = parts[1];\n          });\n        delay = Date.now() - this.__sendTime;\n\n        // log the trigger that triggers the server responses\n\n        // do not log 404 answers as the fake server sends them automatically\n        // end the logged ones break the replay for some reason\n        if (this.getStatus() !== 404) {\n          cv.report.Record.record(cv.report.Record.XHR, 'response', {\n            url: url,\n            method: this.getMethod(),\n            status: this.getStatus(),\n            delay: delay,\n            headers: headers,\n            body: this.getTransport().responseText,\n            hash: hash,\n            phase: 'load'\n          });\n        }\n        this.__sendTime = null;\n\n        // delete pending request\n        cv.report.utils.MXhrHook.PENDING[hash].shift();\n        if (cv.report.utils.MXhrHook.PENDING[hash].length === 0) {\n          delete cv.report.utils.MXhrHook.PENDING[hash];\n        }\n      } else if (ev.getData() === 'abort') {\n        delay = Date.now() - this.__sendTime;\n\n        // request aborted, maybe by watchdog\n        cv.report.Record.record(cv.report.Record.XHR, 'response', {\n          url: url,\n          delay: delay,\n          hash: hash,\n          phase: 'abort'\n        });\n\n        // delete pending request\n        cv.report.utils.MXhrHook.PENDING[hash].shift();\n        if (cv.report.utils.MXhrHook.PENDING[hash].length === 0) {\n          delete cv.report.utils.MXhrHook.PENDING[hash];\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}