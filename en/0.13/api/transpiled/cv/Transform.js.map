{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Transform.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "registry",
    "name",
    "encode",
    "i",
    "decode",
    "toString",
    "parseInt",
    "parseFloat",
    "addTransform",
    "prefix",
    "transforms",
    "Object",
    "entries",
    "transName",
    "transform",
    "link",
    "assign",
    "clip",
    "min",
    "value",
    "max",
    "scaling",
    "_value",
    "clipInt",
    "Math",
    "round",
    "encodeBusAndRaw",
    "address",
    "selector",
    "variantInfo",
    "basetrans",
    "split",
    "encoding",
    "cv",
    "Transform",
    "result",
    "lastPart",
    "v",
    "__getFirstElement",
    "firstPart",
    "remainingPart",
    "isFinite",
    "retval",
    "JSON",
    "stringify",
    "start",
    "bus",
    "raw",
    "constructor",
    "ignoreError",
    "undefined",
    "selectorOriginal",
    "parse",
    "Error",
    "locale",
    "Manager",
    "tr",
    "e",
    "message",
    "topic",
    "title",
    "severity",
    "unique",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "match",
    "substr",
    "length"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Transform.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This class defines some default transformations like <code>raw</code>, <code>int</code> and <code>float</code>.\n * New transformation can be added and used. For example an openHAB transformation for a switch item is added by\n * {@link cv.transforms.OpenHab} like this:\n *\n * <pre class=\"javascript\">\n *   cv.Transform.addTransform('OH', {\n *    'switch': {\n *      name: 'OH_Switch',\n *       encode: function (phy) {\n *         return phy == 1 ? 'ON' : 'OFF';\n *      },\n *\n *       decode: function (string) {\n *         if (cv.transforms.OpenHab.isUndefined(string)) return 0;\n *         return (string == \"ON\" || parseInt(string) > 0) ? 1 : 0;\n *       }\n *     }\n *   });\n * </pre>\n *\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.Transform', {\n  type: 'static',\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    registry: {\n      'raw': {\n        name: 'Only the RAW value',\n        encode: function (i) {\n          return i;\n        },\n        decode: function (i) {\n          return i;\n        }\n      },\n      'int': {\n        name: 'Cast to Int',\n        encode: function (i) {\n          return i.toString();\n        },\n        decode: function (i) {\n          return parseInt(i);\n        }\n      },\n      'float': {\n        name: 'Cast to Float',\n        encode: function (i) {\n          return i.toString();\n        },\n        decode: function (i) {\n          return parseFloat(i);\n        }\n      }\n    },\n\n    /* ***************************************************************************\n     * All functions below are only in this, i.e. the default, file.\n     * All further transforms will only have the above data structure.\n     ************************************************************************** */\n\n    /**\n     * Add transformation rules to the registry\n     * @param prefix {String} Transformation prefix (e.g. DPT for KNX transformations or OH for openHAB transformations)\n     * @param transforms {Object} map of transformations\n     */\n    addTransform: function (prefix, transforms) {\n      for (let [transName, transform] of Object.entries(transforms)) {\n        if (transform.link) {\n          this.registry[prefix + ':' + transName] = Object.assign({}, transforms[transform.link], transform);\n        } else {\n          this.registry[prefix + ':' + transName] = transform;\n        }\n      }\n    },\n\n    /**\n     * Enforce that value stays within range\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clip: function (min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return (_value > min ? (_value > max ? max : _value) : min) * scaling;\n    },\n\n    /**\n     * Enforce that value stays within range and is an integer\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clipInt: function (min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return Math.round((_value > min ? (_value > max ? max : _value) : min) * scaling);\n    },\n\n    /**\n     * transform JavaScript to bus value and raw value\n     *\n     * @param {{transform: string, selector: string?, ignoreError: string?, variantInfo: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} object with both encoded values\n     */\n    encodeBusAndRaw: function (address, value) {\n      const {transform} = address;\n      let {selector, variantInfo} = address;\n      let basetrans = transform.split('.')[0];\n      const encoding = transform in cv.Transform.registry\n        ? cv.Transform.registry[transform].encode(value, variantInfo)\n        : (basetrans in cv.Transform.registry\n          ? cv.Transform.registry[basetrans].encode(value, variantInfo)\n          : value);\n\n      if (typeof selector === 'string') {\n        let result = {};\n        let lastPart = 'start';\n        let v = result; // use the fact that `v` is now a reference and not a copy\n        while (selector !== '') {\n          const {firstPart, remainingPart} = this.__getFirstElement(selector);\n          if (isFinite(firstPart)) {\n            v[lastPart] = [];\n          } else {\n            v[lastPart] = {};\n          }\n          v = v[lastPart];\n          lastPart = firstPart;\n          selector = remainingPart;\n        }\n        v[lastPart] = encoding;\n        const retval = JSON.stringify(result.start);\n        return {bus: retval, raw: retval};\n      }\n      return (encoding.constructor === Object && 'bus' in encoding && 'raw' in encoding)\n        ? encoding\n        : {bus: encoding, raw: encoding};\n    },\n\n    /**\n     * transform JavaScript to bus value\n     *\n     * @param {{transform: string, selector: string?, ignoreError: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the encoded value\n     */\n    encode: function (address, value) {\n      return this.encodeBusAndRaw(address, value).bus;\n    },\n\n    /**\n     * transform bus to JavaScript value\n     * @param {{transform: string, selector: string?, ignoreError: string?, variantInfo: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the decoded value\n     */\n    decode: function (address, value) {\n      const {transform, ignoreError} = address;\n      let {selector, variantInfo} = address;\n      const basetrans = transform.split('.')[0];\n\n      if (typeof value === 'string' && selector !== undefined && selector !== null) {\n        // decode JSON\n        const selectorOriginal = selector;\n\n        try {\n          let v = JSON.parse(value);\n          while (selector !== '') {\n            const {firstPart, remainingPart} = this.__getFirstElement(selector);\n            if (typeof v === 'object' && firstPart in v) {\n              v = v[firstPart];\n            } else {\n              throw new Error(qx.locale.Manager.tr('Sub-selector \"%1\" does not fit to value %2', selector, JSON.stringify(v)));\n            }\n            if (selector === remainingPart) {\n              throw new Error(qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector));\n            }\n            selector = remainingPart;\n          }\n          value = v;\n        } catch (e) {\n          if (!ignoreError) {\n            const message = {\n              topic: 'cv.transform.decode',\n              title: qx.locale.Manager.tr('Transform decode error'),\n              severity: 'urgent',\n              unique: false,\n              deletable: true,\n              message: qx.locale.Manager.tr('decode: JSON.parse error: %1; selector: \"%2\"; value: %3', e, selectorOriginal, JSON.stringify(value))\n            };\n            cv.core.notifications.Router.dispatchMessage(message.topic, message);\n          }\n          return '-';\n        }\n      }\n      return transform in cv.Transform.registry\n        ? cv.Transform.registry[transform].decode(value, variantInfo)\n        : (basetrans in cv.Transform.registry\n          ? cv.Transform.registry[basetrans].decode(value, variantInfo)\n          : value);\n    },\n\n    /**\n     * Get the first element of the (JSON) selector\n     * @param {string} selector - the JSON (sub-)selector\n     * @returns {{firstPart: string, remainingPart: string}}\n     */\n    __getFirstElement: function (selector) {\n      if (selector[0] === '[') {\n        const [, firstPart, remainingPart] = selector.match(/^\\[([^\\]]*)]\\.?(.*)/);\n        if ((firstPart[0] === '\"' || firstPart[0] === '\\'') && firstPart[0] === firstPart.substr(-1)) {\n          return {firstPart: firstPart.substr(1, firstPart.length-2), remainingPart};\n        } else if (isFinite(firstPart)) {\n          return {firstPart, remainingPart};\n        }\n        throw qx.locale.Manager.tr('Sub-selector \"%1\" has bad first part \"%2\"', selector, firstPart);\n      } else {\n        const [, firstPart, remainingPart] = selector.match(/^([^.[]*)\\.?(.*)/);\n        if (firstPart.length > 0) {\n          return {firstPart, remainingPart};\n        }\n        throw qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector);\n      }\n    }\n  }\n});\n"
  ]
}