{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "registry",
    "raw",
    "name",
    "encode",
    "i",
    "decode",
    "toString",
    "parseInt",
    "parseFloat",
    "addTransform",
    "prefix",
    "transforms",
    "_i",
    "_Object$entries",
    "Object",
    "entries",
    "length",
    "_Object$entries$_i",
    "_slicedToArray",
    "transName",
    "transform",
    "link",
    "assign",
    "clip",
    "min",
    "value",
    "max",
    "scaling",
    "arguments",
    "undefined",
    "_value",
    "clipInt",
    "Math",
    "round",
    "encodeBusAndRaw",
    "address",
    "selector",
    "variantInfo",
    "basetrans",
    "split",
    "encoding",
    "cv",
    "Transform",
    "result",
    "lastPart",
    "v",
    "_this$__P_763_",
    "__getFirstElement",
    "firstPart",
    "remainingPart",
    "isFinite",
    "retval",
    "JSON",
    "stringify",
    "start",
    "bus",
    "constructor",
    "ignoreError",
    "selectorOriginal",
    "parse",
    "_this$__P_763_2",
    "_typeof",
    "Error",
    "locale",
    "Manager",
    "tr",
    "e",
    "message",
    "topic",
    "title",
    "severity",
    "unique",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "_selector$match",
    "match",
    "_selector$match2",
    "substr",
    "_selector$match3",
    "_selector$match4"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Transform.js"
  ],
  "sourcesContent": [
    "/* Transform.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This class defines some default transformations like <code>raw</code>, <code>int</code> and <code>float</code>.\n * New transformation can be added and used. For example an openHAB transformation for a switch item is added by\n * {@link cv.transforms.OpenHab} like this:\n *\n * <pre class=\"javascript\">\n *   cv.Transform.addTransform('OH', {\n *    'switch': {\n *      name: 'OH_Switch',\n *       encode: function (phy) {\n *         return phy == 1 ? 'ON' : 'OFF';\n *      },\n *\n *       decode: function (string) {\n *         if (cv.transforms.OpenHab.isUndefined(string)) return 0;\n *         return (string == \"ON\" || parseInt(string) > 0) ? 1 : 0;\n *       }\n *     }\n *   });\n * </pre>\n *\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.Transform', {\n  type: 'static',\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    registry: {\n      raw: {\n        name: 'Only the RAW value',\n        encode(i) {\n          return i;\n        },\n        decode(i) {\n          return i;\n        }\n      },\n\n      int: {\n        name: 'Cast to Int',\n        encode(i) {\n          return i.toString();\n        },\n        decode(i) {\n          return parseInt(i);\n        }\n      },\n\n      float: {\n        name: 'Cast to Float',\n        encode(i) {\n          return i.toString();\n        },\n        decode(i) {\n          return parseFloat(i);\n        }\n      }\n    },\n\n    /* ***************************************************************************\n     * All functions below are only in this, i.e. the default, file.\n     * All further transforms will only have the above data structure.\n     ************************************************************************** */\n\n    /**\n     * Add transformation rules to the registry\n     * @param prefix {String} Transformation prefix (e.g. DPT for KNX transformations or OH for openHAB transformations)\n     * @param transforms {Object} map of transformations\n     */\n    addTransform(prefix, transforms) {\n      for (let [transName, transform] of Object.entries(transforms)) {\n        if (transform.link) {\n          this.registry[prefix + ':' + transName] = Object.assign({}, transforms[transform.link], transform);\n        } else {\n          this.registry[prefix + ':' + transName] = transform;\n        }\n      }\n    },\n\n    /**\n     * Enforce that value stays within range\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clip(min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return (_value > min ? (_value > max ? max : _value) : min) * scaling;\n    },\n\n    /**\n     * Enforce that value stays within range and is an integer\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clipInt(min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return Math.round((_value > min ? (_value > max ? max : _value) : min) * scaling);\n    },\n\n    /**\n     * transform JavaScript to bus value and raw value\n     *\n     * @param {{transform: string, selector?: string, ignoreError?: string, variantInfo?: string}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} object with both encoded values\n     */\n    encodeBusAndRaw(address, value) {\n      const { transform } = address;\n      let { selector, variantInfo } = address;\n      let basetrans = transform.split('.')[0];\n      const encoding =\n        transform in cv.Transform.registry\n          ? cv.Transform.registry[transform].encode(value, variantInfo)\n          : basetrans in cv.Transform.registry\n          ? cv.Transform.registry[basetrans].encode(value, variantInfo)\n          : value;\n\n      if (typeof selector === 'string') {\n        let result = {};\n        let lastPart = 'start';\n        let v = result; // use the fact that `v` is now a reference and not a copy\n        while (selector !== '') {\n          const { firstPart, remainingPart } = this.__getFirstElement(selector);\n          if (isFinite(firstPart)) {\n            v[lastPart] = [];\n          } else {\n            v[lastPart] = {};\n          }\n          v = v[lastPart];\n          lastPart = firstPart;\n          selector = remainingPart;\n        }\n        v[lastPart] = encoding;\n        const retval = JSON.stringify(result.start);\n        return { bus: retval, raw: retval };\n      }\n      return encoding.constructor === Object && 'bus' in encoding && 'raw' in encoding\n        ? encoding\n        : { bus: encoding, raw: encoding };\n    },\n\n    /**\n     * transform JavaScript to bus value\n     *\n     * @param {{transform: string, selector?: string, ignoreError?: string}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the encoded value\n     */\n    encode(address, value) {\n      return this.encodeBusAndRaw(address, value).bus;\n    },\n\n    /**\n     * transform bus to JavaScript value\n     * @param {{transform: string, selector?: string, ignoreError?: string, variantInfo?: string}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the decoded value\n     */\n    decode(address, value) {\n      const { transform, ignoreError } = address;\n      let { selector, variantInfo } = address;\n      const basetrans = transform.split('.')[0];\n\n      if (typeof value === 'string' && selector !== undefined && selector !== null) {\n        // decode JSON\n        const selectorOriginal = selector;\n\n        try {\n          let v = JSON.parse(value);\n          while (selector !== '') {\n            const { firstPart, remainingPart } = this.__getFirstElement(selector);\n            if (typeof v === 'object' && firstPart in v) {\n              v = v[firstPart];\n            } else {\n              throw new Error(\n                qx.locale.Manager.tr('Sub-selector \"%1\" does not fit to value %2', selector, JSON.stringify(v))\n              );\n            }\n            if (selector === remainingPart) {\n              throw new Error(qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector));\n            }\n            selector = remainingPart;\n          }\n          value = v;\n        } catch (e) {\n          if (!ignoreError) {\n            const message = {\n              topic: 'cv.transform.decode',\n              title: qx.locale.Manager.tr('Transform decode error'),\n              severity: 'urgent',\n              unique: false,\n              deletable: true,\n              message: qx.locale.Manager.tr(\n                'decode: JSON.parse error: %1; selector: \"%2\"; value: %3',\n                e,\n                selectorOriginal,\n                JSON.stringify(value)\n              )\n            };\n\n            cv.core.notifications.Router.dispatchMessage(message.topic, message);\n          }\n          return '-';\n        }\n      }\n      return transform in cv.Transform.registry\n        ? cv.Transform.registry[transform].decode(value, variantInfo)\n        : basetrans in cv.Transform.registry\n        ? cv.Transform.registry[basetrans].decode(value, variantInfo)\n        : value;\n    },\n\n    /**\n     * Get the first element of the (JSON) selector\n     * @param {string} selector - the JSON (sub-)selector\n     * @returns {{firstPart: string, remainingPart: string}}\n     */\n    __getFirstElement(selector) {\n      if (selector[0] === '[') {\n        const [, firstPart, remainingPart] = selector.match(/^\\[([^\\]]*)]\\.?(.*)/);\n        if ((firstPart[0] === '\"' || firstPart[0] === '\\'') && firstPart[0] === firstPart.substr(-1)) {\n          return {\n            firstPart: firstPart.substr(1, firstPart.length - 2),\n            remainingPart\n          };\n        } else if (isFinite(firstPart)) {\n          return { firstPart, remainingPart };\n        }\n        throw qx.locale.Manager.tr('Sub-selector \"%1\" has bad first part \"%2\"', selector, firstPart);\n      } else {\n        const [, firstPart, remainingPart] = selector.match(/^([^.[]*)\\.?(.*)/);\n        if (firstPart.length > 0) {\n          return { firstPart, remainingPart };\n        }\n        throw qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}