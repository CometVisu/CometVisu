{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "registry",
    "raw",
    "name",
    "encode",
    "i",
    "decode",
    "toString",
    "parseInt",
    "parseFloat",
    "addTransform",
    "prefix",
    "transforms",
    "Object",
    "entries",
    "transName",
    "transform",
    "link",
    "assign",
    "clip",
    "min",
    "value",
    "max",
    "scaling",
    "_value",
    "clipInt",
    "Math",
    "round",
    "encodeBusAndRaw",
    "address",
    "selector",
    "variantInfo",
    "basetrans",
    "split",
    "encoding",
    "cv",
    "Transform",
    "result",
    "lastPart",
    "v",
    "__getFirstElement",
    "firstPart",
    "remainingPart",
    "isFinite",
    "retval",
    "JSON",
    "stringify",
    "start",
    "bus",
    "constructor",
    "ignoreError",
    "undefined",
    "selectorOriginal",
    "parse",
    "Error",
    "locale",
    "Manager",
    "tr",
    "e",
    "message",
    "topic",
    "title",
    "severity",
    "unique",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "match",
    "substr",
    "length"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Transform.js"
  ],
  "sourcesContent": [
    "/* Transform.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This class defines some default transformations like <code>raw</code>, <code>int</code> and <code>float</code>.\n * New transformation can be added and used. For example an openHAB transformation for a switch item is added by\n * {@link cv.transforms.OpenHab} like this:\n *\n * <pre class=\"javascript\">\n *   cv.Transform.addTransform('OH', {\n *    'switch': {\n *      name: 'OH_Switch',\n *       encode: function (phy) {\n *         return phy == 1 ? 'ON' : 'OFF';\n *      },\n *\n *       decode: function (string) {\n *         if (cv.transforms.OpenHab.isUndefined(string)) return 0;\n *         return (string == \"ON\" || parseInt(string) > 0) ? 1 : 0;\n *       }\n *     }\n *   });\n * </pre>\n *\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.Transform', {\n  type: 'static',\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    registry: {\n      raw: {\n        name: 'Only the RAW value',\n        encode(i) {\n          return i;\n        },\n        decode(i) {\n          return i;\n        }\n      },\n\n      int: {\n        name: 'Cast to Int',\n        encode(i) {\n          return i.toString();\n        },\n        decode(i) {\n          return parseInt(i);\n        }\n      },\n\n      float: {\n        name: 'Cast to Float',\n        encode(i) {\n          return i.toString();\n        },\n        decode(i) {\n          return parseFloat(i);\n        }\n      }\n    },\n\n    /* ***************************************************************************\n     * All functions below are only in this, i.e. the default, file.\n     * All further transforms will only have the above data structure.\n     ************************************************************************** */\n\n    /**\n     * Add transformation rules to the registry\n     * @param prefix {String} Transformation prefix (e.g. DPT for KNX transformations or OH for openHAB transformations)\n     * @param transforms {Object} map of transformations\n     */\n    addTransform(prefix, transforms) {\n      for (let [transName, transform] of Object.entries(transforms)) {\n        if (transform.link) {\n          this.registry[prefix + ':' + transName] = Object.assign({}, transforms[transform.link], transform);\n        } else {\n          this.registry[prefix + ':' + transName] = transform;\n        }\n      }\n    },\n\n    /**\n     * Enforce that value stays within range\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clip(min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return (_value > min ? (_value > max ? max : _value) : min) * scaling;\n    },\n\n    /**\n     * Enforce that value stays within range and is an integer\n     * When value is not a valid number, the min value is returned\n     * @param {number} min lower threshold\n     * @param {any} value value to clip\n     * @param {number} max upper threshold\n     * @param [scaling] {Number} scale the clipping result by that amount\n     * @return {number} the clipped value\n     */\n    clipInt(min, value, max, scaling = 1) {\n      const _value = +value; // enforce number\n      return Math.round((_value > min ? (_value > max ? max : _value) : min) * scaling);\n    },\n\n    /**\n     * transform JavaScript to bus value and raw value\n     *\n     * @param {{transform: string, selector: string?, ignoreError: string?, variantInfo: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} object with both encoded values\n     */\n    encodeBusAndRaw(address, value) {\n      const { transform } = address;\n      let { selector, variantInfo } = address;\n      let basetrans = transform.split('.')[0];\n      const encoding =\n        transform in cv.Transform.registry\n          ? cv.Transform.registry[transform].encode(value, variantInfo)\n          : basetrans in cv.Transform.registry\n          ? cv.Transform.registry[basetrans].encode(value, variantInfo)\n          : value;\n\n      if (typeof selector === 'string') {\n        let result = {};\n        let lastPart = 'start';\n        let v = result; // use the fact that `v` is now a reference and not a copy\n        while (selector !== '') {\n          const { firstPart, remainingPart } = this.__getFirstElement(selector);\n          if (isFinite(firstPart)) {\n            v[lastPart] = [];\n          } else {\n            v[lastPart] = {};\n          }\n          v = v[lastPart];\n          lastPart = firstPart;\n          selector = remainingPart;\n        }\n        v[lastPart] = encoding;\n        const retval = JSON.stringify(result.start);\n        return { bus: retval, raw: retval };\n      }\n      return encoding.constructor === Object && 'bus' in encoding && 'raw' in encoding\n        ? encoding\n        : { bus: encoding, raw: encoding };\n    },\n\n    /**\n     * transform JavaScript to bus value\n     *\n     * @param {{transform: string, selector: string?, ignoreError: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the encoded value\n     */\n    encode(address, value) {\n      return this.encodeBusAndRaw(address, value).bus;\n    },\n\n    /**\n     * transform bus to JavaScript value\n     * @param {{transform: string, selector: string?, ignoreError: string?, variantInfo: string?}} address - type of the transformation, as address object\n     * @param {*} value - value to transform\n     * @return {*} the decoded value\n     */\n    decode(address, value) {\n      const { transform, ignoreError } = address;\n      let { selector, variantInfo } = address;\n      const basetrans = transform.split('.')[0];\n\n      if (typeof value === 'string' && selector !== undefined && selector !== null) {\n        // decode JSON\n        const selectorOriginal = selector;\n\n        try {\n          let v = JSON.parse(value);\n          while (selector !== '') {\n            const { firstPart, remainingPart } = this.__getFirstElement(selector);\n            if (typeof v === 'object' && firstPart in v) {\n              v = v[firstPart];\n            } else {\n              throw new Error(\n                qx.locale.Manager.tr('Sub-selector \"%1\" does not fit to value %2', selector, JSON.stringify(v))\n              );\n            }\n            if (selector === remainingPart) {\n              throw new Error(qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector));\n            }\n            selector = remainingPart;\n          }\n          value = v;\n        } catch (e) {\n          if (!ignoreError) {\n            const message = {\n              topic: 'cv.transform.decode',\n              title: qx.locale.Manager.tr('Transform decode error'),\n              severity: 'urgent',\n              unique: false,\n              deletable: true,\n              message: qx.locale.Manager.tr(\n                'decode: JSON.parse error: %1; selector: \"%2\"; value: %3',\n                e,\n                selectorOriginal,\n                JSON.stringify(value)\n              )\n            };\n\n            cv.core.notifications.Router.dispatchMessage(message.topic, message);\n          }\n          return '-';\n        }\n      }\n      return transform in cv.Transform.registry\n        ? cv.Transform.registry[transform].decode(value, variantInfo)\n        : basetrans in cv.Transform.registry\n        ? cv.Transform.registry[basetrans].decode(value, variantInfo)\n        : value;\n    },\n\n    /**\n     * Get the first element of the (JSON) selector\n     * @param {string} selector - the JSON (sub-)selector\n     * @returns {{firstPart: string, remainingPart: string}}\n     */\n    __getFirstElement(selector) {\n      if (selector[0] === '[') {\n        const [, firstPart, remainingPart] = selector.match(/^\\[([^\\]]*)]\\.?(.*)/);\n        if ((firstPart[0] === '\"' || firstPart[0] === '\\'') && firstPart[0] === firstPart.substr(-1)) {\n          return {\n            firstPart: firstPart.substr(1, firstPart.length - 2),\n            remainingPart\n          };\n        } else if (isFinite(firstPart)) {\n          return { firstPart, remainingPart };\n        }\n        throw qx.locale.Manager.tr('Sub-selector \"%1\" has bad first part \"%2\"', selector, firstPart);\n      } else {\n        const [, firstPart, remainingPart] = selector.match(/^([^.[]*)\\.?(.*)/);\n        if (firstPart.length > 0) {\n          return { firstPart, remainingPart };\n        }\n        throw qx.locale.Manager.tr('Sub-selector error: \"%1\"', selector);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}