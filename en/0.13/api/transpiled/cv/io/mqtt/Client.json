{
  "className": "cv.io.mqtt.Client",
  "packageName": "cv.io.mqtt",
  "name": "Client",
  "superClass": "cv.io.AbstractClient",
  "interfaces": [
    "cv.io.IClient"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0,
        "index": 836
      },
      "end": {
        "line": 325,
        "column": 3,
        "index": 8783
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>MQTT client</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 1064
      },
      "end": {
        "line": 40,
        "column": 3,
        "index": 1339
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "connected": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1487
        },
        "end": {
          "line": 52,
          "column": 5,
          "index": 1579
        }
      },
      "name": "connected",
      "propertyType": "new",
      "event": "changeConnected",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "server": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1586
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1675
        }
      },
      "name": "server",
      "propertyType": "new",
      "event": "changedServer",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "_client": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1867
        },
        "end": {
          "line": 70,
          "column": 17,
          "index": 1880
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "{Paho.MQTT.Client}"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_type": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1886
        },
        "end": {
          "line": 71,
          "column": 15,
          "index": 1897
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getBackend": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1990
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2027
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current backend configuration</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getType": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2034
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2076
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{string} e.g. openhab, mqtt or knxd",
            "type": "string",
            "description": " e.g. openhab, mqtt or knxd"
          }
        ]
      }
    },
    "hasProvider": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2245
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2290
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns true, when the backend provides a special data provider for this kins of data</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getProviderUrl": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2388
        },
        "end": {
          "line": 101,
          "column": 5,
          "index": 2435
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>URL to the provided data</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getProviderConvertFunction": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2610
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 2669
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Mapping function the convert the data from the backend to a format the CometVisu data provider consumer can process.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getProviderData": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 2676
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 2743
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<variant>|null}",
            "type": "Promise<variant>|null",
            "description": ""
          }
        ]
      }
    },
    "setInitialAddresses": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3080
        },
        "end": {
          "line": 121,
          "column": 37,
          "index": 3113
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set a subset of addresses the client should request initially (e.g. the ones one the start page).\n This can be used to increase the init state loading speed by sending an initial request with a smaller\n subset of addresses to the backend and send the rest later.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "subscribe": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3349
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3451
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Subscribe to the addresses in the parameter. The second parameter\n (filter) is optional</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array?} addresses to subscribe to",
            "paramName": "addresses",
            "description": " addresses to subscribe to",
            "optional": true,
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "filters {Array?} Filters",
            "paramName": "filters",
            "description": " Filters",
            "optional": true,
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "login": {
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 3970
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 6015
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function starts the communication by a login and then runs the\n ongoing communication task</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "loginOnly {Boolean} if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "paramName": "loginOnly",
            "description": " if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "credentials {Map} map with \"username\" and \"password\" (optional)",
            "paramName": "credentials",
            "description": " map with \"username\" and \"password\" (optional)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} call this function when login is done",
            "paramName": "callback",
            "description": " call this function when login is done",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context for the callback (this)",
            "paramName": "context",
            "description": " context for the callback (this)",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "authorize": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 6136
        },
        "end": {
          "line": 230,
          "column": 21,
          "index": 6153
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Authorize a Request by adding the necessary headers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "req {qx.io.request.Xhr}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getResourcePath": {
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 6541
        },
        "end": {
          "line": 239,
          "column": 36,
          "index": 6573
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>return the relative path to a resource on the currently used backend</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, rrd)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, rrd)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map?} optional data needed to generate the resource path",
            "paramName": "params",
            "description": " optional data needed to generate the resource path",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} relative path to the resource, returns <code>null</code> when the backend does not provide that resource",
            "type": "String|null",
            "description": " relative path to the resource, returns <code>null</code> when the backend does not provide that resource"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "hasCustomChartsDataProcessor": {
      "location": {
        "start": {
          "line": 245,
          "column": 4,
          "index": 6682
        },
        "end": {
          "line": 245,
          "column": 37,
          "index": 6715
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This client provides an own processor for charts data</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "processChartsData": {
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 6882
        },
        "end": {
          "line": 251,
          "column": 30,
          "index": 6908
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>For custom backend charts data some processing might be done to convert it in a format the CometVisu can handle</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "write": {
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 7146
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 7553
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function sends a value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} address to send the value to",
            "paramName": "address",
            "description": " address to send the value to",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String} value to send",
            "paramName": "value",
            "description": " value to send",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Object} optional options, depending on backend",
            "paramName": "options",
            "description": " optional options, depending on backend",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getLastError": {
      "location": {
        "start": {
          "line": 279,
          "column": 4,
          "index": 7733
        },
        "end": {
          "line": 279,
          "column": 21,
          "index": 7750
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the last recorded error</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}",
            "type": "{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number",
            "description": "|*}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "restart": {
      "location": {
        "start": {
          "line": 285,
          "column": 4,
          "index": 7822
        },
        "end": {
          "line": 285,
          "column": 20,
          "index": 7838
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Restart the connection</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "full",
            "paramName": "full",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "update": {
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 8030
        },
        "end": {
          "line": 292,
          "column": 19,
          "index": 8045
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle the incoming state updates. This method is not implemented by the client itself.\n It is injected by the project using the client.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "record": {
      "location": {
        "start": {
          "line": 299,
          "column": 4,
          "index": 8232
        },
        "end": {
          "line": 299,
          "column": 25,
          "index": 8253
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Can be overridden to record client communication with backend</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of event to record",
            "paramName": "type",
            "description": " type of event to record",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Object} data to record",
            "paramName": "data",
            "description": " data to record",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "showError": {
      "location": {
        "start": {
          "line": 307,
          "column": 4,
          "index": 8480
        },
        "end": {
          "line": 307,
          "column": 37,
          "index": 8513
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Can be overridden to provide an error handler for client errors</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {Number} one of cv.io.Client.ERROR_CODES",
            "paramName": "type",
            "description": " one of cv.io.Client.ERROR_CODES",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "message {String} detailed error message",
            "paramName": "message",
            "description": " detailed error message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args",
            "paramName": "args",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "terminate": {
      "location": {
        "start": {
          "line": 309,
          "column": 4,
          "index": 8520
        },
        "end": {
          "line": 313,
          "column": 5,
          "index": 8614
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "destruct": {
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 8655
        },
        "end": {
          "line": 323,
          "column": 5,
          "index": 8775
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Destructor</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getServer": {
      "type": "function",
      "name": "getServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for server"
          }
        ]
      }
    },
    "setServer": {
      "type": "function",
      "name": "setServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for server"
          }
        ]
      }
    },
    "resetServer": {
      "type": "function",
      "name": "resetServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>server</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ]
      }
    },
    "getDataReceived": {
      "type": "function",
      "name": "getDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "isDataReceived": {
      "type": "function",
      "name": "isDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "setDataReceived": {
      "type": "function",
      "name": "setDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for dataReceived"
          }
        ]
      }
    },
    "resetDataReceived": {
      "type": "function",
      "name": "resetDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>dataReceived</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "events": {},
  "descendants": []
}