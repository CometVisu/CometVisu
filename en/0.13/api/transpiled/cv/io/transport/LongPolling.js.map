{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "client",
    "watchdog",
    "cv",
    "io",
    "Watchdog",
    "setClient",
    "members",
    "doRestart",
    "xhr",
    "lastIndex",
    "retryCounter",
    "retryServerErrorCounter",
    "sessionId",
    "running",
    "handleSession",
    "args",
    "connect",
    "json",
    "getResponse",
    "s",
    "prototype",
    "hasOwnProperty",
    "call",
    "error",
    "showError",
    "Client",
    "ERROR_CODES",
    "PROTOCOL_MISSING_VERSION",
    "version",
    "v",
    "split",
    "parseInt",
    "data",
    "successCallback",
    "initialAddresses",
    "length",
    "buildRequest",
    "handleReadStart",
    "handleRead",
    "__startReading",
    "start",
    "callback",
    "t",
    "options",
    "beforeSend",
    "bind",
    "listeners",
    "handleError",
    "doRequest",
    "getResourcePath",
    "Array",
    "slice",
    "arguments",
    "setDataReceived",
    "delay",
    "Math",
    "pow",
    "info",
    "isActive",
    "event",
    "Timer",
    "once",
    "ping",
    "PROTOCOL_INVALID_READ_RESPONSE_MISSING_I",
    "i",
    "d",
    "readResendHeaderValues",
    "update",
    "setConnected",
    "url",
    "getUrl",
    "shift",
    "getQueryString",
    "setUrl",
    "send",
    "diffAddresses",
    "addresses",
    "includes",
    "push",
    "removeListener",
    "addListener",
    "Environment",
    "select",
    "ev",
    "req",
    "getTarget",
    "indexOf",
    "getStatus",
    "backend",
    "maxRetries",
    "serverErrorHandled",
    "restart",
    "getReadyState",
    "getStatusText",
    "jquery",
    "str",
    "excptObj",
    "readyState",
    "status",
    "headerName",
    "resendHeaders",
    "undefined",
    "setRequestHeader",
    "headers",
    "getResponseHeader",
    "isConnectionRunning",
    "doFullReload",
    "abort",
    "hooks",
    "onClose",
    "stop",
    "transport",
    "LongPolling"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/client/source/class/cv/io/transport/LongPolling.js"
  ],
  "sourcesContent": [
    "/* LongPolling.js\n *\n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.io.transport.LongPolling', {\n  extend: qx.core.Object,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  /**\n   *\n   * @param client {cv.io.Client}\n   */\n  construct(client) {\n    this.client = client;\n    this.watchdog = new cv.io.Watchdog();\n    this.watchdog.setClient(client);\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    watchdog: null,\n    doRestart: false, // are we currently in a restart, e.g. due to the watchdog\n    xhr: null, // the ongoing AJAX request\n    lastIndex: -1, // index returned by the last request\n    retryCounter: 0, // count number of retries (reset with each valid response)\n    retryServerErrorCounter: 0, // count number of successive temporary server errors\n    sessionId: null,\n    client: null,\n    running: null,\n\n    /**\n     * This function gets called once the communication is established\n     * and this.client information is available.\n     *\n     * @param args {Array} arguments from the XHR response callback\n     * @param connect {Boolean} whether to start the connection or not\n     */\n    handleSession(args, connect) {\n      var json = this.client.getResponse(args);\n      this.sessionId = json.s;\n      if (!Object.prototype.hasOwnProperty.call(json, 'v')) {\n        this.error('CometVisu protocol error: missing protocol version');\n        this.client.showError(cv.io.Client.ERROR_CODES.PROTOCOL_MISSING_VERSION, json);\n      } else {\n        this.version = json.v.split('.', 3);\n\n        if (parseInt(this.version[0]) > 0 || parseInt(this.version[1]) > 1) {\n          this.error('ERROR CometVisu Client: too new protocol version (' + json.v + ') used!');\n        }\n        if (connect) {\n          this.connect();\n        }\n      }\n    },\n\n    connect() {\n      this.running = true;\n      // send first request\n\n      var data = [];\n      var successCallback = null;\n      if (this.client.initialAddresses.length) {\n        data = this.client.buildRequest(this.client.initialAddresses);\n        successCallback = this.handleReadStart;\n      } else {\n        // old behaviour -> start full query\n        data = this.client.buildRequest();\n        successCallback = this.handleRead;\n      }\n      this.__startReading(data, successCallback);\n      this.watchdog.start(5);\n    },\n\n    __startReading(data, callback) {\n      data = data || this.client.buildRequest();\n      callback = callback || this.handleRead;\n      data.t = 0;\n      var options = {\n        beforeSend: this.beforeSend.bind(this),\n        listeners: {\n          error: this.handleError\n        }\n      };\n\n      this.xhr = this.client.doRequest(this.client.getResourcePath('read'), data, callback, this, options);\n    },\n\n    /**\n     * This function gets called once the communication is established\n     * and this.client information is available\n     */\n    handleRead() {\n      var json = this.client.getResponse(Array.prototype.slice.call(arguments, 0));\n\n      if (this.doRestart || (!json && this.lastIndex === -1)) {\n        this.client.setDataReceived(false);\n        if (this.running) {\n          // retry initial request\n          var delay = 100 * Math.pow(this.retryCounter, 2);\n          this.retryCounter++;\n          if (this.doRestart) {\n            // planned restart, only inform user\n            this.info('restarting XHR read requests in ' + delay + ' ms as planned');\n          } else {\n            this.info('restarting XHR read requests in ' + delay + ' ms as forced to');\n          }\n          if (!this.watchdog.isActive()) {\n            // watchdog has been stopped in the abort function -> restart it\n            this.watchdog.start(5);\n          }\n          qx.event.Timer.once(\n            function () {\n              this.__startReading();\n              this.watchdog.ping(true);\n            },\n            this,\n            delay\n          );\n        }\n        return;\n      }\n\n      var data;\n      if (json && !this.doRestart) {\n        if (!Object.prototype.hasOwnProperty.call(json, 'i')) {\n          this.error('CometVisu protocol error: backend responded to a read request without an \"i\"-parameter');\n\n          this.client.showError(cv.io.Client.ERROR_CODES.PROTOCOL_INVALID_READ_RESPONSE_MISSING_I, json);\n\n          return;\n        }\n        this.lastIndex = json.i;\n        data = json.d;\n        this.readResendHeaderValues();\n        this.client.update(data);\n        this.retryCounter = 0;\n        this.client.setDataReceived(true);\n        this.client.setConnected(true);\n      }\n\n      this.retryServerErrorCounter = 0; // server has successfully responded\n      if (this.running) {\n        // keep the requests going\n        this.retryCounter++;\n        data = this.client.buildRequest();\n        data.i = this.lastIndex;\n        var url = this.xhr.getUrl().split('?').shift() + '?' + this.client.getQueryString(data);\n        this.xhr.setUrl(url);\n        this.xhr.send();\n        this.watchdog.ping();\n      }\n    },\n\n    handleReadStart() {\n      var json = this.client.getResponse(Array.prototype.slice.call(arguments, 0));\n\n      if (!json && this.lastIndex === -1) {\n        this.client.setDataReceived(false);\n        if (this.running) {\n          // retry initial request\n          this.xhr.send();\n          this.watchdog.ping();\n        }\n        return;\n      }\n      if (json && !this.doRestart) {\n        this.readResendHeaderValues();\n        this.client.update(json.d);\n        this.client.setDataReceived(true);\n        this.client.setConnected(true);\n      }\n      this.retryServerErrorCounter = 0; // server has successfully responded\n      if (this.running) {\n        // keep the requests going, but only\n        // request\n        // addresses-startPageAddresses\n        var diffAddresses = [];\n        for (var i = 0; i < this.client.addresses.length; i++) {\n          if (!this.client.initialAddresses.includes(this.client.addresses[i])) {\n            diffAddresses.push(this.client.addresses[i]);\n          }\n        }\n        var data = this.client.buildRequest(diffAddresses);\n        data.t = 0;\n        var url = this.xhr.getUrl().split('?').shift() + '?' + this.client.getQueryString(data);\n        this.xhr.setUrl(url);\n        this.xhr.removeListener('success', this.handleReadStart, this);\n        this.xhr.addListener('success', this.handleRead, this);\n        this.xhr.send();\n        this.watchdog.ping();\n      }\n    },\n\n    /**\n     * This function gets called on an error\n     *\n     *\n     * @param ev {Event}\n     */\n    handleError: qx.core.Environment.select('cv.xhr', {\n      qx(ev) {\n        var req = ev.getTarget();\n        // check for temporary server errors and retry a few times\n        if (\n          [408, 444, 499, 502, 503, 504].indexOf(req.getStatus()) >= 0 &&\n          this.retryServerErrorCounter < this.client.backend.maxRetries\n        ) {\n          this.info(\n            'Temporary connection problem (status: ' +\n              req.getStatus() +\n              ') - retry count: ' +\n              this.retryServerErrorCounter\n          );\n\n          this.retryServerErrorCounter++;\n          req.serverErrorHandled = true;\n          this.restart();\n          return;\n        }\n        // ignore error when connection is irrelevant\n        if (this.running && req.getReadyState() !== 4 && !this.doRestart && req.getStatus() !== 0) {\n          this.error('Error! Type: \"' + req.getResponse() + '\" readyState: ' + req.getStatusText());\n          this.client.setConnected(false);\n        }\n      },\n      jquery(xhr, str, excptObj) {\n        // ignore error when connection is irrelevant\n        if (this.running && xhr.readyState !== 4 && !this.doRestart && xhr.status !== 0) {\n          var readyState = 'UNKNOWN';\n          switch (xhr.readyState) {\n            case 0:\n              readyState = 'UNINITIALIZED';\n              break;\n            case 1:\n              readyState = 'LOADING';\n              break;\n            case 2:\n              readyState = 'LOADED';\n              break;\n            case 3:\n              readyState = 'INTERACTIVE';\n              break;\n            case 4:\n              readyState = 'COMPLETED';\n              break;\n          }\n\n          this.error('Error! Type: \"' + str + '\" ExceptionObject: \"' + excptObj + '\" readyState: ' + readyState);\n\n          this.client.setConnected(false);\n        }\n      }\n    }),\n\n    /**\n     * manipulates the header of the current ajax query before it is\n     * been send to the server\n     *\n     * @param xhr {Object} the native XHR object\n     *\n     */\n    beforeSend(xhr) {\n      for (var headerName in this.resendHeaders) {\n        if (this.resendHeaders[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.resendHeaders[headerName]);\n        }\n      }\n      for (headerName in this.headers) {\n        if (this.headers[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.headers[headerName]);\n        }\n      }\n    },\n\n    /**\n     * read the header values of a response and stores them to the\n     * resendHeaders array\n     */\n    readResendHeaderValues() {\n      for (var headerName in this.resendHeaders) {\n        this.resendHeaders[headerName] = this.xhr.getResponseHeader(headerName);\n      }\n    },\n\n    /**\n     * Check if the connection is still running.\n     */\n    isConnectionRunning() {\n      return true;\n    },\n\n    /**\n     * Restart the read request, e.g. when the watchdog kicks in\n     *\n     * @param doFullReload {Boolean} reload all data and not only restart connection\n     */\n    restart(doFullReload) {\n      if (doFullReload) {\n        this.lastIndex = -1; // reload all data\n      }\n      this.doRestart = true;\n      this.abort();\n      this.handleRead(); // restart\n      this.doRestart = false;\n    },\n    /**\n     * Abort the read request properly\n     *\n     */\n    abort() {\n      if (this.xhr && this.xhr.abort) {\n        this.xhr.abort();\n        this.xhr = null;\n\n        if (this.client.backend && this.client.backend.hooks.onClose) {\n          this.client.backend.hooks.onClose.bind(this);\n        }\n      }\n      this.watchdog.stop();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}