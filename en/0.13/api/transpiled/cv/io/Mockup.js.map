{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "Client",
    "CLIENTS",
    "push",
    "window",
    "_receive",
    "receive",
    "bind",
    "model",
    "data",
    "Model",
    "getInstance",
    "_widgetDataGet",
    "getWidgetData",
    "_getWidgetDataModel",
    "getWidgetDataModel",
    "writeHistory",
    "testMode",
    "__loadTestData",
    "addresses",
    "properties",
    "dataReceived",
    "check",
    "init",
    "server",
    "connected",
    "event",
    "members",
    "backendName",
    "__xhr",
    "__sequence",
    "__sequenceIndex",
    "__simulations",
    "getType",
    "r",
    "request",
    "Xhr",
    "addListener",
    "e",
    "Config",
    "initialDemoData",
    "getTarget",
    "getResponse",
    "__applyTestData",
    "send",
    "xhr",
    "now",
    "Date",
    "url",
    "startsWith",
    "forEach",
    "d",
    "body",
    "offset",
    "length",
    "entry",
    "responseData",
    "feed",
    "entries",
    "date",
    "setDate",
    "getDate",
    "publishedDate",
    "toUTCString",
    "setTime",
    "getTime",
    "that",
    "sinon",
    "FakeXMLHttpRequest",
    "prototype",
    "open",
    "method",
    "async",
    "username",
    "password",
    "responseText",
    "responseXML",
    "requestHeaders",
    "sendFlag",
    "useFilters",
    "xhrArgs",
    "arguments",
    "defake",
    "filters",
    "some",
    "filter",
    "call",
    "apply",
    "setRequestHeader",
    "readyStateChange",
    "OPENED",
    "dev",
    "FakeServer",
    "addFilter",
    "args",
    "indexOf",
    "test",
    "path",
    "split",
    "pop",
    "suffix",
    "location",
    "pathname",
    "getFakeServer",
    "respondWith",
    "parsed",
    "util",
    "Uri",
    "parseUri",
    "host",
    "report",
    "Record",
    "normalizeUrl",
    "substr",
    "log",
    "Logger",
    "error",
    "debug",
    "response",
    "shift",
    "readyState",
    "status",
    "respond",
    "headers",
    "JSON",
    "stringify",
    "fakeXhr",
    "workingXHR",
    "copyAttrs",
    "attr",
    "navigator",
    "userAgent",
    "stateChange",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "onreadystatechange",
    "target",
    "addEventListener",
    "eventListeners",
    "hasOwnProperty",
    "handler",
    "json",
    "client",
    "update",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "_registerSimulations",
    "simulations",
    "keys",
    "mainAddress",
    "simulation",
    "additionalAddresses",
    "addr",
    "_startSequence",
    "Timer",
    "once",
    "i",
    "delay",
    "_processSimulation",
    "address",
    "value",
    "start",
    "stop",
    "startValues",
    "stopValues",
    "type",
    "direction",
    "initValue",
    "getState",
    "targetAddress",
    "undefined",
    "timer",
    "interval",
    "stepSize",
    "newValue",
    "subscribe",
    "write",
    "REPLAYING",
    "ts",
    "lastWrite",
    "answer",
    "parseInt",
    "substring",
    "transformedValue",
    "restart",
    "getResourcePath",
    "name",
    "map",
    "src",
    "getLastError",
    "getBackend",
    "authorize",
    "req",
    "terminate",
    "record",
    "showError",
    "message",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "getProviderData",
    "Mockup"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/Mockup.js"
  ],
  "sourcesContent": [
    "/* Mockup.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Mockup simulating a backend + client for the Cometvisu protocol\n *\n * @author Tobias BrÃ¤utigam\n * @since 2016\n */\n/* istanbul ignore next */\nqx.Class.define('cv.io.Mockup', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    super();\n    cv.io.Client.CLIENTS.push(this);\n    // make some functions accessible for the protractor runner\n    window._receive = this.receive.bind(this);\n    const model = cv.data.Model.getInstance();\n    window._widgetDataGet = model.getWidgetData.bind(model);\n    window._getWidgetDataModel = model.getWidgetDataModel.bind(model);\n    window.writeHistory = [];\n\n    const testMode = qx.core.Environment.get('cv.testMode');\n    if (typeof testMode === 'string' && testMode !== 'true') {\n      this.__loadTestData();\n    }\n    this.addresses = [];\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    dataReceived: {\n      check: 'Boolean',\n      init: true\n    },\n\n    server: {\n      check: 'String',\n      init: 'Mockup'\n    },\n\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    backendName: 'mockup',\n    addresses: null,\n    __xhr: null,\n    __sequence: null,\n    __sequenceIndex: 0,\n    __simulations: null,\n\n    getType() {\n      return this.backendName;\n    },\n\n    __loadTestData() {\n      // load the demo data to fill the visu with some values\n      const r = new qx.io.request.Xhr(qx.core.Environment.get('cv.testMode'));\n      r.addListener('success', e => {\n        cv.Config.initialDemoData = e.getTarget().getResponse();\n        this.__applyTestData();\n      });\n      r.send();\n    },\n\n    __applyTestData() {\n      this.__xhr = cv.Config.initialDemoData.xhr;\n\n      // we need to adjust the timestamps of the chart data\n      const now = Date.now();\n      for (let url in this.__xhr) {\n        if (url.startsWith('rrd')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body;\n            const offset = now - data[data.length - 1][0];\n            data.forEach(entry => (entry[0] += offset));\n          });\n        } else if (url.startsWith('resource/plugin/rsslog.php')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body.responseData.feed.entries;\n            let date = new Date();\n            date.setDate(date.getDate() - 1);\n            data.forEach(entry => {\n              entry.publishedDate = date.toUTCString();\n              date.setTime(date.getTime() + 60 * 60 * 1000);\n            });\n          });\n        }\n      }\n\n      const that = this;\n\n      // override sinons filter handling to be able to manipulate the target URL from the filter\n      // eslint-disable-next-line consistent-return\n      sinon.FakeXMLHttpRequest.prototype.open = function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async == 'boolean' ? async : true;\n        this.username = username;\n        this.password = password;\n        this.responseText = null;\n        this.responseXML = null;\n        this.requestHeaders = {};\n        this.sendFlag = false;\n        if (sinon.FakeXMLHttpRequest.useFilters === true) {\n          let xhrArgs = arguments;\n          let defake = sinon.FakeXMLHttpRequest.filters.some(function (filter) {\n            return filter.call(this, xhrArgs);\n          });\n          if (defake) {\n            const xhr = that.defake(this, xhrArgs);\n            xhr.open.apply(xhr, xhrArgs);\n            xhr.setRequestHeader('Accept', 'text/*, image/*');\n            return;\n          }\n        }\n        this.readyStateChange(sinon.FakeXMLHttpRequest.OPENED);\n      };\n\n      // configure server\n      qx.dev.FakeServer.getInstance().addFilter(function (args) {\n        const method = args[0];\n        const url = args[1];\n        if (url.startsWith('https://sentry.io')) {\n          return true;\n        } else if (\n          method === 'GET' &&\n          (url.indexOf('resource/visu_config') >= 0 ||\n            url.indexOf('resource/demo/visu_config') >= 0 ||\n            url.indexOf('resource/hidden-schema.json') >= 0 ||\n            url.indexOf('resource/manager/') >= 0)\n        ) {\n          return true;\n        } else if (method === 'GET' && /rest\\/manager\\/index.php\\/fs\\?path=.+\\.[\\w]+$/.test(url)) {\n          // change url to avoid API access and do a real request\n          const path = url.split('=').pop();\n          const suffix = path.startsWith('demo/') ? '' : 'config/';\n          args[1] = window.location.pathname + 'resource/' + suffix + path;\n          return true;\n        }\n        return false;\n      }, this);\n      const server = qx.dev.FakeServer.getInstance().getFakeServer();\n      server.respondWith(\n        function (request) {\n          const parsed = qx.util.Uri.parseUri(request.url);\n          let url = request.url;\n          if (!parsed.host || parsed.host === window.location.host) {\n            url = cv.report.Record.normalizeUrl(request.url);\n            if (url.startsWith(window.location.pathname)) {\n              url = url.substr(window.location.pathname.length - 1);\n            }\n          }\n          if (!this.__xhr[url] || this.__xhr[url].length === 0) {\n            qx.log.Logger.error(this, '404: no logged responses for URI ' + url + ' found');\n          } else {\n            qx.log.Logger.debug(this, 'faking response for ' + url);\n            let response = '';\n            if (this.__xhr[url].length === 1) {\n              response = this.__xhr[url][0];\n            } else {\n              // multiple responses recorded use them as LIFO stack\n              response = this.__xhr[url].shift();\n            }\n\n            if (request.readyState === 4 && request.status === 404) {\n              // This is a hack, sometimes the request has a 404 status and send readystate\n              // the respond would fail if we do not override it here\n              request.readyState = 1;\n            }\n            request.respond(response.status, response.headers, JSON.stringify(response.body));\n          }\n        }.bind(this)\n      );\n    },\n\n    defake(fakeXhr, xhrArgs) {\n      // eslint-disable-next-line new-cap\n      const xhr = new sinon.xhr.workingXHR();\n      [\n        'open',\n        'setRequestHeader',\n        'send',\n        'abort',\n        'getResponseHeader',\n        'getAllResponseHeaders',\n        'addEventListener',\n        'overrideMimeType',\n        'removeEventListener'\n      ].forEach(function (method) {\n        fakeXhr[method] = function () {\n          return xhr[method].apply(xhr, arguments);\n        };\n      });\n\n      const copyAttrs = function (args) {\n        args.forEach(function (attr) {\n          try {\n            fakeXhr[attr] = xhr[attr];\n          } catch (e) {\n            if (!/MSIE 6/.test(navigator.userAgent)) {\n              throw e;\n            }\n          }\n        });\n      };\n\n      const stateChange = function () {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.HEADERS_RECEIVED) {\n          copyAttrs(['status', 'statusText']);\n        }\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.LOADING) {\n          copyAttrs(['responseText']);\n        }\n        if (xhr.readyState === sinon.FakeXMLHttpRequest.DONE) {\n          copyAttrs(['responseXML']);\n        }\n        if (fakeXhr.onreadystatechange) {\n          fakeXhr.onreadystatechange({ target: fakeXhr });\n        }\n      };\n      if (xhr.addEventListener) {\n        for (let event in fakeXhr.eventListeners) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (fakeXhr.eventListeners.hasOwnProperty(event)) {\n            fakeXhr.eventListeners[event].forEach(function (handler) {\n              xhr.addEventListener(event, handler);\n            });\n          }\n        }\n        xhr.addEventListener('readystatechange', stateChange);\n      } else {\n        xhr.onreadystatechange = stateChange;\n      }\n      return xhr;\n    },\n\n    /**\n     * This function gets called once the communication is established and session information is available\n     * @param json\n     */\n    receive(json) {\n      if (json) {\n        cv.io.Client.CLIENTS.forEach(function (client) {\n          client.update(json.d);\n        });\n      }\n    },\n\n    login(loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n        if (qx.core.Environment.get('cv.testMode')) {\n          if (cv.Config.initialDemoData) {\n            this.receive({\n              i: new Date().getTime(),\n              d: cv.Config.initialDemoData.states\n            });\n\n            if (cv.Config.initialDemoData.sequence) {\n              this.__sequence = cv.Config.initialDemoData.sequence;\n              this._startSequence();\n            }\n            if (cv.Config.initialDemoData.simulations) {\n              this._registerSimulations(cv.Config.initialDemoData.simulations);\n            }\n            cv.Config.initialDemoData = null;\n          }\n        }\n      }\n    },\n\n    _registerSimulations(simulations) {\n      this.__simulations = {};\n      Object.keys(simulations).forEach(function (mainAddress) {\n        const simulation = simulations[mainAddress];\n        this.__simulations[mainAddress] = simulation;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'additionalAddresses')) {\n          simulation.additionalAddresses.forEach(function (addr) {\n            this.__simulations[addr] = simulation;\n          }, this);\n        }\n      }, this);\n    },\n\n    _startSequence() {\n      if (this.__sequence.length <= this.__sequenceIndex) {\n        // start again\n        this.__sequenceIndex = 0;\n      }\n      qx.event.Timer.once(\n        function () {\n          this.receive({\n            i: new Date().getTime(),\n            d: this.__sequence[this.__sequenceIndex].data\n          });\n\n          this.__sequenceIndex++;\n          this._startSequence();\n        },\n        this,\n        this.__sequence[this.__sequenceIndex].delay\n      );\n    },\n\n    _processSimulation(address, value) {\n      const simulation = this.__simulations[address];\n      if (!simulation) {\n        return;\n      }\n      let start = false;\n      let stop = false;\n      if (Object.prototype.hasOwnProperty.call(simulation, 'startValues')) {\n        // try the more specific matches with address included\n        start = simulation.startValues.indexOf(address + '|' + value) >= 0;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'stopValues')) {\n          stop = simulation.stopValues.indexOf(address + '|' + value) >= 0;\n        }\n        if (!stop) {\n          // the more general ones\n          start = simulation.startValues.indexOf(value) >= 0;\n          stop = simulation.startValues.indexOf(value) >= 0;\n        }\n      }\n      if (start) {\n        // start simulation\n        if (simulation.type === 'shutter') {\n          simulation.direction = value === '0' ? 'up' : 'down';\n          let initValue = cv.data.Model.getInstance().getState(simulation.targetAddress);\n\n          if (initValue === undefined) {\n            initValue = 0;\n          }\n          simulation.value = initValue;\n\n          if (simulation.timer) {\n            simulation.timer.stop();\n          } else {\n            simulation.timer = new qx.event.Timer(simulation.interval || 100);\n            const stepSize = simulation.stepSize || 10;\n            simulation.timer.addListener('interval', () => {\n              let newValue = simulation.value;\n              if (simulation.direction === 'up') {\n                // drive up\n                newValue = simulation.value + stepSize;\n                if (newValue > 100) {\n                  simulation.timer.stop();\n                  return;\n                }\n              } else {\n                // drive down\n                newValue = simulation.value - stepSize;\n                if (newValue < 0) {\n                  simulation.timer.stop();\n                  return;\n                }\n              }\n              const update = {\n                i: new Date().getTime(),\n                d: {}\n              };\n\n              update.d[simulation.targetAddress] = newValue;\n              this.receive(update);\n              if (simulation.value !== newValue) {\n                simulation.value = newValue;\n              }\n            });\n          }\n          simulation.timer.start();\n        }\n      } else if (stop) {\n        // stop simulation\n        if (simulation.timer) {\n          simulation.timer.stop();\n        }\n      }\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter\n     * @param addresses\n     */\n    subscribe(addresses) {\n      this.addresses = addresses ? addresses : [];\n    },\n\n    /**\n     * This function sends a value\n     * @param address\n     * @param value\n     */\n    write(address, value) {\n      if (cv.report.Record.REPLAYING === true) {\n        // do nothing in replay mode\n        return;\n      }\n      const ts = new Date().getTime();\n      // store in window, to make it accessible for protractor\n      const lastWrite = {\n        address: address,\n        value: value,\n        ts: ts\n      };\n\n      if (this.__simulations && Object.prototype.hasOwnProperty.call(this.__simulations, address)) {\n        this._processSimulation(address, value);\n      } else {\n        // send update\n        const answer = {\n          i: ts,\n          d: {}\n        };\n\n        if (/\\d{1,2}\\/\\d{1,2}\\/\\d{1,2}/.test(address)) {\n          if (/^[\\da-fA-F]+$/.test(value)) {\n            if (value.length <= 2) {\n              value = '' + (parseInt(value, 16) & 63);\n            } else {\n              value = value.substring(2);\n            }\n            lastWrite.transformedValue = value;\n          }\n        }\n        answer.d[address] = value;\n        this.debug('sending value: ' + value + ' to address: ' + address);\n        this.receive(answer);\n      }\n      // store in window, to make it accessible for protractor\n      window.writeHistory.push(lastWrite);\n    },\n\n    restart() {},\n\n    stop() {},\n\n    getResourcePath(name, map) {\n      if (name === 'charts' && map && map.src) {\n        return name + '/' + map.src;\n      }\n      return name;\n    },\n\n    getLastError() {\n      return null;\n    },\n\n    getBackend() {\n      return {};\n    },\n\n    authorize(req) {},\n\n    terminate() {},\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n    getProviderConvertFunction(name, format) {\n      return null;\n    },\n    getProviderData : function (name, format) {\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}