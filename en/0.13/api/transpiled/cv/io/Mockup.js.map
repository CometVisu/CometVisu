{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "AbstractClient",
    "implement",
    "IClient",
    "construct",
    "Client",
    "CLIENTS",
    "push",
    "window",
    "_receive",
    "receive",
    "bind",
    "model",
    "data",
    "Model",
    "getInstance",
    "_widgetDataGet",
    "getWidgetData",
    "_getWidgetDataModel",
    "getWidgetDataModel",
    "writeHistory",
    "testMode",
    "setConnected",
    "__simulation",
    "Simulation",
    "addresses",
    "file",
    "_resources",
    "addListener",
    "ev",
    "getData",
    "properties",
    "server",
    "check",
    "init",
    "connected",
    "event",
    "members",
    "backendName",
    "__xhr",
    "getType",
    "json",
    "forEach",
    "client",
    "update",
    "d",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "isInitialized",
    "addListenerOnce",
    "debug",
    "call",
    "subscribe",
    "prepareTestData",
    "__decode",
    "address",
    "value",
    "test",
    "length",
    "parseInt",
    "substring",
    "write",
    "report",
    "Record",
    "REPLAYING",
    "ts",
    "Date",
    "getTime",
    "lastWrite",
    "onWrite",
    "answer",
    "i",
    "transformedValue",
    "restart",
    "stop",
    "getResourcePath",
    "name",
    "map",
    "Config",
    "src",
    "basePath",
    "Object",
    "prototype",
    "hasOwnProperty",
    "endsWith",
    "startsWith",
    "start",
    "end",
    "getLastError",
    "getBackend",
    "authorize",
    "req",
    "terminate",
    "record",
    "type",
    "showError",
    "message",
    "args",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "getProviderData",
    "Mockup"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/Mockup.js"
  ],
  "sourcesContent": [
    "/* Mockup.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Mockup simulating a backend + client for the Cometvisu protocol\n *\n * @author Tobias BrÃ¤utigam\n * @since 2016\n */\n/* istanbul ignore next */\nqx.Class.define('cv.io.Mockup', {\n  extend: cv.io.AbstractClient,\n  implement: cv.io.IClient,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    super();\n    cv.io.Client.CLIENTS.push(this);\n    // make some functions accessible for the protractor runner\n    window._receive = this.receive.bind(this);\n    const model = cv.data.Model.getInstance();\n    window._widgetDataGet = model.getWidgetData.bind(model);\n    window._getWidgetDataModel = model.getWidgetDataModel.bind(model);\n    window.writeHistory = [];\n\n    const testMode = qx.core.Environment.get('cv.testMode');\n    if (typeof testMode === 'string' && testMode !== 'true') {\n      this.setConnected(false);\n      this.__simulation = new cv.data.Simulation(testMode, this);\n    }\n    this.addresses = [];\n\n    let file = this._resources['simulation'];\n    if (file) {\n      this.setConnected(false);\n      this.__simulation = new cv.data.Simulation(file, this);\n    } else {\n      this.addListener('resourcePathAdded', ev => {\n        switch (ev.getData()) {\n          case 'simulation': {\n            const file = this._resources['simulation'];\n            if (file) {\n              this.setConnected(false);\n              this.__simulation = new cv.data.Simulation(file, this);\n            }\n            break;\n          }\n        }\n      });\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    server: {\n      check: 'String',\n      init: 'Mockup'\n    },\n\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    backendName: 'mockup',\n    addresses: null,\n    __xhr: null,\n    __simulation: null,\n\n    getType() {\n      return this.backendName;\n    },\n\n\n    /**\n     * This function gets called once the communication is established and session information is available\n     * @param json\n     */\n    receive(json) {\n      if (json) {\n        cv.io.Client.CLIENTS.forEach(function (client) {\n          client.update(json.d);\n        });\n      }\n    },\n\n    login(loginOnly, credentials, callback, context) {\n      if (callback) {\n        if (this.__simulation && !this.__simulation.isInitialized()) {\n          this.__simulation.addListenerOnce('changeInitialized', () => {\n            this.setConnected(true);\n            this.debug('(delayed) logged in to mockup client');\n            callback.call(context);\n          });\n        } else {\n          this.setConnected(true);\n          this.debug('logged in to mockup client');\n          callback.call(context);\n        }\n      }\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter\n     * @param addresses\n     */\n    subscribe(addresses) {\n      this.addresses = addresses ? addresses : [];\n      if (this.__simulation) {\n        this.__simulation.prepareTestData(this.addresses);\n      }\n    },\n\n    __decode(address, value) {\n      if (/\\d{1,2}\\/\\d{1,2}\\/\\d{1,2}/.test(address)) {\n        if (/^[\\da-fA-F]+$/.test(value)) {\n          if (value.length <= 2) {\n            value = '' + (parseInt(value, 16) & 63);\n          } else {\n            value = value.substring(2);\n          }\n        }\n      }\n      return value;\n    },\n\n    /**\n     * This function sends a value\n     * @param address\n     * @param value\n     */\n    write(address, value) {\n      if (cv.report.Record.REPLAYING === true) {\n        // do nothing in replay mode\n        return;\n      }\n      const ts = new Date().getTime();\n      // store in window, to make it accessible for protractor\n      const lastWrite = {\n        address: address,\n        value: value,\n        ts: ts\n      };\n\n      value = this.__decode(address, value);\n\n      if (!this.__simulation || !this.__simulation.onWrite(address, value)) {\n        // send update\n        const answer = {\n          i: ts,\n          d: {}\n        };\n        lastWrite.transformedValue = value;\n        answer.d[address] = value;\n        this.debug('sending value: ' + value + ' to address: ' + address);\n        this.receive(answer);\n      }\n      // store in window, to make it accessible for protractor\n      window.writeHistory.push(lastWrite);\n    },\n\n    restart() {},\n\n    stop() {},\n\n    getResourcePath(name, map) {\n      if (cv.Config.testMode) {\n        // fallback to old behaviour just for screenshot generation / testing\n        if (name === 'charts' && map && map.src) {\n          return name + '/' + map.src;\n        }\n        return name;\n      }\n      let basePath = '';\n      if (Object.prototype.hasOwnProperty.call(this._resources, name)) {\n        basePath = this._resources[name];\n        if (basePath && !basePath.endsWith('/')) {\n          basePath += '/';\n        }\n      }\n      if (name === 'charts' && map && map.src) {\n        if (map.src.startsWith('generator:')) {\n          // the generator also might need the start/end values\n          return basePath + map.src + '?start=' + map.start + '&end=' + map.end;\n        }\n        return basePath + map.src;\n      }\n      return basePath;\n    },\n\n    getLastError() {\n      return null;\n    },\n\n    getBackend() {\n      return {};\n    },\n\n    authorize(req) {},\n\n    terminate() {},\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n    getProviderConvertFunction(name, format) {\n      return null;\n    },\n    getProviderData : function (name, format) {\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}