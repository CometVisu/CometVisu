{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "AbstractClient",
    "implement",
    "IClient",
    "construct",
    "Client",
    "CLIENTS",
    "push",
    "window",
    "_receive",
    "receive",
    "bind",
    "model",
    "data",
    "Model",
    "getInstance",
    "_widgetDataGet",
    "getWidgetData",
    "_getWidgetDataModel",
    "getWidgetDataModel",
    "writeHistory",
    "testMode",
    "__loadTestData",
    "addresses",
    "file",
    "_resources",
    "addListener",
    "ev",
    "getData",
    "properties",
    "dataReceived",
    "check",
    "init",
    "server",
    "connected",
    "event",
    "members",
    "__simulating",
    "__encodeSimulatedStates",
    "backendName",
    "__xhr",
    "__sequence",
    "__sequenceIndex",
    "__simulations",
    "getType",
    "r",
    "request",
    "Xhr",
    "e",
    "Config",
    "initialDemoData",
    "getTarget",
    "getResponse",
    "__applyTestData",
    "send",
    "xhr",
    "now",
    "Date",
    "url",
    "startsWith",
    "forEach",
    "d",
    "body",
    "offset",
    "length",
    "entry",
    "responseData",
    "feed",
    "entries",
    "date",
    "setDate",
    "getDate",
    "publishedDate",
    "toUTCString",
    "setTime",
    "getTime",
    "that",
    "sinon",
    "dev",
    "unit",
    "Sinon",
    "getSinon",
    "sandbox",
    "FakeXMLHttpRequest",
    "prototype",
    "open",
    "method",
    "async",
    "username",
    "password",
    "responseText",
    "responseXML",
    "requestHeaders",
    "sendFlag",
    "useFilters",
    "xhrArgs",
    "arguments",
    "defake",
    "filters",
    "some",
    "filter",
    "call",
    "apply",
    "setRequestHeader",
    "readyStateChange",
    "OPENED",
    "FakeServer",
    "addFilter",
    "args",
    "indexOf",
    "getResourcePath",
    "test",
    "path",
    "split",
    "pop",
    "suffix",
    "location",
    "pathname",
    "getFakeServer",
    "respondWith",
    "parsed",
    "util",
    "Uri",
    "parseUri",
    "host",
    "report",
    "Record",
    "normalizeUrl",
    "substr",
    "log",
    "Logger",
    "error",
    "debug",
    "response",
    "shift",
    "readyState",
    "status",
    "respond",
    "headers",
    "JSON",
    "stringify",
    "__prepareTestData",
    "fakeXhr",
    "workingXHR",
    "copyAttrs",
    "attr",
    "navigator",
    "userAgent",
    "stateChange",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "onreadystatechange",
    "target",
    "addEventListener",
    "eventListeners",
    "hasOwnProperty",
    "handler",
    "json",
    "client",
    "update",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "_registerSimulations",
    "simulations",
    "Object",
    "keys",
    "mainAddress",
    "simulation",
    "additionalAddresses",
    "addr",
    "_startSequence",
    "Timer",
    "once",
    "i",
    "delay",
    "_processSimulation",
    "address",
    "value",
    "_addressConfigs",
    "Transform",
    "encodeBusAndRaw",
    "raw",
    "start",
    "stop",
    "startValues",
    "stopValues",
    "type",
    "direction",
    "initValue",
    "getState",
    "targetAddress",
    "undefined",
    "decode",
    "timer",
    "interval",
    "stepSize",
    "newValue",
    "sendValue",
    "subscribe",
    "encodeFirst",
    "widgetData",
    "id",
    "assign",
    "document",
    "querySelectorAll",
    "addressElement",
    "textContent",
    "trim",
    "transform",
    "getAttribute",
    "ga",
    "states",
    "sequence",
    "seq",
    "sim",
    "mapping",
    "valueArray",
    "map",
    "val",
    "startAddress",
    "startVal",
    "__decode",
    "parseInt",
    "substring",
    "write",
    "REPLAYING",
    "ts",
    "lastWrite",
    "answer",
    "transformedValue",
    "restart",
    "name",
    "src",
    "basePath",
    "endsWith",
    "getLastError",
    "getBackend",
    "authorize",
    "req",
    "terminate",
    "record",
    "showError",
    "message",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "getProviderData",
    "Mockup"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/Mockup.js"
  ],
  "sourcesContent": [
    "/* Mockup.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Mockup simulating a backend + client for the Cometvisu protocol\n *\n * @author Tobias BrÃ¤utigam\n * @since 2016\n */\n/* istanbul ignore next */\nqx.Class.define('cv.io.Mockup', {\n  extend: cv.io.AbstractClient,\n  implement: cv.io.IClient,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    super();\n    cv.io.Client.CLIENTS.push(this);\n    // make some functions accessible for the protractor runner\n    window._receive = this.receive.bind(this);\n    const model = cv.data.Model.getInstance();\n    window._widgetDataGet = model.getWidgetData.bind(model);\n    window._getWidgetDataModel = model.getWidgetDataModel.bind(model);\n    window.writeHistory = [];\n\n    const testMode = qx.core.Environment.get('cv.testMode');\n    if (typeof testMode === 'string' && testMode !== 'true') {\n      this.__loadTestData(testMode);\n    }\n    this.addresses = [];\n\n    let file = this._resources['simulation'];\n    if (file) {\n      this.__loadTestData(file);\n    } else {\n      this.addListener('resourcePathAdded', ev => {\n        switch (ev.getData()) {\n          case 'simulation': {\n            const file = this._resources['simulation'];\n            if (file) {\n              this.__loadTestData(file);\n            }\n            break;\n          }\n        }\n      });\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    dataReceived: {\n      check: 'Boolean',\n      init: true\n    },\n\n    server: {\n      check: 'String',\n      init: 'Mockup'\n    },\n\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __simulating: false,\n    __encodeSimulatedStates: false,\n    backendName: 'mockup',\n    addresses: null,\n    __xhr: null,\n    __sequence: null,\n    __sequenceIndex: 0,\n    __simulations: null,\n\n    getType() {\n      return this.backendName;\n    },\n\n    __loadTestData(file) {\n      // load the demo data to fill the visu with some values\n      const r = new qx.io.request.Xhr(file);\n      r.addListener('success', e => {\n        cv.Config.initialDemoData = e.getTarget().getResponse();\n        this.__simulating = true;\n        this.__applyTestData();\n      });\n      r.send();\n    },\n\n    __applyTestData() {\n      this.__xhr = cv.Config.initialDemoData.xhr;\n\n      // we need to adjust the timestamps of the chart data\n      const now = Date.now();\n      for (let url in this.__xhr) {\n        if (url.startsWith('rrd')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body;\n            const offset = now - data[data.length - 1][0];\n            data.forEach(entry => (entry[0] += offset));\n          });\n        } else if (url.startsWith('resource/plugin/rsslog.php')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body.responseData.feed.entries;\n            let date = new Date();\n            date.setDate(date.getDate() - 1);\n            data.forEach(entry => {\n              entry.publishedDate = date.toUTCString();\n              date.setTime(date.getTime() + 60 * 60 * 1000);\n            });\n          });\n        }\n      }\n\n      const that = this;\n      const sinon = qx.dev.unit.Sinon.getSinon();\n      sinon.sandbox = sinon;\n\n      // override sinons filter handling to be able to manipulate the target URL from the filter\n      // eslint-disable-next-line consistent-return\n      sinon.FakeXMLHttpRequest.prototype.open = function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async == 'boolean' ? async : true;\n        this.username = username;\n        this.password = password;\n        this.responseText = null;\n        this.responseXML = null;\n        this.requestHeaders = {};\n        this.sendFlag = false;\n        if (sinon.FakeXMLHttpRequest.useFilters === true) {\n          let xhrArgs = arguments;\n          let defake = sinon.FakeXMLHttpRequest.filters.some(function (filter) {\n            return filter.call(this, xhrArgs);\n          });\n          if (defake) {\n            const xhr = that.defake(this, xhrArgs);\n            xhr.open.apply(xhr, xhrArgs);\n            xhr.setRequestHeader('Accept', 'text/*, image/*');\n            return;\n          }\n        }\n        this.readyStateChange(sinon.FakeXMLHttpRequest.OPENED);\n      };\n\n      // configure server\n      qx.dev.FakeServer.getInstance().addFilter(args => {\n        const method = args[0];\n        const url = args[1];\n        if (url.startsWith('https://sentry.io')) {\n          return true;\n        } else if (\n          method === 'GET' &&\n          (url.indexOf('resource/visu_config') >= 0 ||\n            url.indexOf('resource/demo/visu_config') >= 0 ||\n            url.indexOf('resource/hidden-schema.json') >= 0 ||\n            url.indexOf('resource/manager/') >= 0) ||\n            url.startsWith(this.getResourcePath('charts'))\n        ) {\n          return true;\n        } else if (method === 'GET' && /rest\\/manager\\/index.php\\/fs\\?path=.+\\.[\\w]+$/.test(url)) {\n          // change url to avoid API access and do a real request\n          const path = url.split('=').pop();\n          const suffix = path.startsWith('demo/') ? '' : 'config/';\n          args[1] = window.location.pathname + 'resource/' + suffix + path;\n          return true;\n        }\n        return false;\n      });\n      const server = qx.dev.FakeServer.getInstance().getFakeServer();\n      server.respondWith(\n        function (request) {\n          const parsed = qx.util.Uri.parseUri(request.url);\n          let url = request.url;\n          if (!parsed.host || parsed.host === window.location.host) {\n            url = cv.report.Record.normalizeUrl(request.url);\n            if (url.startsWith(window.location.pathname)) {\n              url = url.substr(window.location.pathname.length - 1);\n            }\n          }\n          if (!this.__xhr[url] || this.__xhr[url].length === 0) {\n            qx.log.Logger.error(this, '404: no logged responses for URI ' + url + ' found');\n          } else {\n            qx.log.Logger.debug(this, 'faking response for ' + url);\n            let response = '';\n            if (this.__xhr[url].length === 1) {\n              response = this.__xhr[url][0];\n            } else {\n              // multiple responses recorded use them as LIFO stack\n              response = this.__xhr[url].shift();\n            }\n\n            if (request.readyState === 4 && request.status === 404) {\n              // This is a hack, sometimes the request has a 404 status and send readystate\n              // the response would fail if we do not override it here\n              request.readyState = 1;\n            }\n            request.respond(response.status, response.headers, JSON.stringify(response.body));\n          }\n        }.bind(this)\n      );\n      this.__prepareTestData();\n    },\n\n    defake(fakeXhr, xhrArgs) {\n      // eslint-disable-next-line new-cap\n      const xhr = new sinon.xhr.workingXHR();\n      [\n        'open',\n        'setRequestHeader',\n        'send',\n        'abort',\n        'getResponseHeader',\n        'getAllResponseHeaders',\n        'addEventListener',\n        'overrideMimeType',\n        'removeEventListener'\n      ].forEach(function (method) {\n        fakeXhr[method] = function () {\n          return xhr[method].apply(xhr, arguments);\n        };\n      });\n\n      const copyAttrs = function (args) {\n        args.forEach(function (attr) {\n          try {\n            fakeXhr[attr] = xhr[attr];\n          } catch (e) {\n            if (!/MSIE 6/.test(navigator.userAgent)) {\n              throw e;\n            }\n          }\n        });\n      };\n\n      const stateChange = function () {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.HEADERS_RECEIVED) {\n          copyAttrs(['status', 'statusText']);\n        }\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.LOADING) {\n          copyAttrs(['responseText']);\n        }\n        if (xhr.readyState === sinon.FakeXMLHttpRequest.DONE) {\n          copyAttrs(['responseXML']);\n        }\n        if (fakeXhr.onreadystatechange) {\n          fakeXhr.onreadystatechange({ target: fakeXhr });\n        }\n      };\n      if (xhr.addEventListener) {\n        for (let event in fakeXhr.eventListeners) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (fakeXhr.eventListeners.hasOwnProperty(event)) {\n            fakeXhr.eventListeners[event].forEach(function (handler) {\n              xhr.addEventListener(event, handler);\n            });\n          }\n        }\n        xhr.addEventListener('readystatechange', stateChange);\n      } else {\n        xhr.onreadystatechange = stateChange;\n      }\n      return xhr;\n    },\n\n    /**\n     * This function gets called once the communication is established and session information is available\n     * @param json\n     */\n    receive(json) {\n      if (json) {\n        cv.io.Client.CLIENTS.forEach(function (client) {\n          client.update(json.d);\n        });\n      }\n    },\n\n    login(loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n      }\n    },\n\n    _registerSimulations(simulations) {\n      this.__simulations = {};\n      Object.keys(simulations).forEach(function (mainAddress) {\n        const simulation = simulations[mainAddress];\n        this.__simulations[mainAddress] = simulation;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'additionalAddresses')) {\n          simulation.additionalAddresses.forEach(function (addr) {\n            this.__simulations[addr] = simulation;\n          }, this);\n        }\n      }, this);\n    },\n\n    _startSequence() {\n      if (this.__sequence.length <= this.__sequenceIndex) {\n        // start again\n        this.__sequenceIndex = 0;\n      }\n      qx.event.Timer.once(\n        function () {\n          this.receive({\n            i: new Date().getTime(),\n            d: this.__sequence[this.__sequenceIndex].data\n          });\n\n          this.__sequenceIndex++;\n          this._startSequence();\n        },\n        this,\n        this.__sequence[this.__sequenceIndex].delay\n      );\n    },\n\n    _processSimulation(address, value) {\n      const simulation = this.__simulations[address];\n      if (!simulation) {\n        return;\n      }\n      if (this.__encodeSimulatedStates && address in this._addressConfigs) {\n        value = cv.Transform.encodeBusAndRaw(this._addressConfigs[address], value).raw;\n      }\n      let start = false;\n      let stop = false;\n      if (Object.prototype.hasOwnProperty.call(simulation, 'startValues')) {\n        // try the more specific matches with address included\n        start = simulation.startValues.indexOf(address + '|' + value) >= 0;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'stopValues')) {\n          stop = simulation.stopValues.indexOf(address + '|' + value) >= 0;\n        }\n        if (!stop) {\n          // the more general ones\n          start = simulation.startValues.indexOf(value) >= 0;\n          stop = simulation.startValues.indexOf(value) >= 0;\n        }\n      }\n      if (start) {\n        // start simulation\n        if (simulation.type === 'shutter') {\n          simulation.direction = value === '00' ? 'up' : 'down';\n          let initValue = cv.data.Model.getInstance().getState(simulation.targetAddress);\n          if (initValue === undefined) {\n            initValue = 0;\n          } else if (this.__encodeSimulatedStates && simulation.targetAddress in this._addressConfigs) {\n            initValue = cv.Transform.decode(this._addressConfigs[simulation.targetAddress], initValue);\n          }\n          simulation.value = initValue;\n\n          if (simulation.timer) {\n            simulation.timer.stop();\n          } else {\n            simulation.timer = new qx.event.Timer(simulation.interval || 100);\n            const stepSize = simulation.stepSize || 10;\n            simulation.timer.addListener('interval', () => {\n              let newValue = simulation.value;\n              if (simulation.direction === 'up') {\n                // drive up\n                newValue = simulation.value + stepSize;\n                if (newValue > 100) {\n                  simulation.timer.stop();\n                  return;\n                }\n              } else {\n                // drive down\n                newValue = simulation.value - stepSize;\n                if (newValue < 0) {\n                  simulation.timer.stop();\n                  return;\n                }\n              }\n              const update = {\n                i: new Date().getTime(),\n                d: {}\n              };\n              let sendValue = newValue;\n              if (this.__encodeSimulatedStates && simulation.targetAddress in this._addressConfigs) {\n                sendValue = cv.Transform.encodeBusAndRaw(this._addressConfigs[simulation.targetAddress], newValue).raw;\n              }\n\n              update.d[simulation.targetAddress] = sendValue;\n              this.receive(update);\n              if (simulation.value !== newValue) {\n                simulation.value = newValue;\n              }\n            });\n          }\n          simulation.timer.start();\n        }\n      } else if (stop) {\n        // stop simulation\n        if (simulation.timer) {\n          simulation.timer.stop();\n        }\n      }\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter\n     * @param addresses\n     */\n    subscribe(addresses) {\n      this.addresses = addresses ? addresses : [];\n      this.__prepareTestData();\n    },\n\n    __prepareTestData() {\n      if (cv.Config.initialDemoData && this.addresses.length > 0) {\n        if (cv.Config.initialDemoData.encodeFirst) {\n          this.__encodeSimulatedStates = true;\n          // connect address data from widgets first\n          this._addressConfigs = {};\n          const widgetData = cv.data.Model.getInstance().getWidgetDataModel();\n          for (const id in widgetData) {\n            if (widgetData[id].address) {\n              this._addressConfigs = Object.assign(this._addressConfigs, widgetData[id].address);\n            }\n          }\n          // lookup cv-address elements (tile structure)\n          for (const addressElement of document.querySelectorAll('cv-address')) {\n            this._addressConfigs[addressElement.textContent.trim()] = {\n              transform: addressElement.getAttribute('transform')\n            };\n          }\n\n          for (let ga in cv.Config.initialDemoData.states) {\n            if (ga in this._addressConfigs) {\n              cv.Config.initialDemoData.states[ga] = cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], cv.Config.initialDemoData.states[ga]).raw;\n            }\n          }\n          for (const seq of cv.Config.initialDemoData.sequence) {\n            for (const ga in seq.data) {\n              if (ga in this._addressConfigs) {\n                seq.data[ga] = cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], seq.data[ga]).raw;\n              }\n            }\n          }\n          for (const ga in cv.Config.initialDemoData.simulations) {\n            if (ga in this._addressConfigs) {\n              // startValues\n              const sim = cv.Config.initialDemoData.simulations[ga];\n              const mapping = valueArray => valueArray.map(val => {\n                  if (val.indexOf('|') >= 0) {\n                    const [startAddress, startVal] = val.split('|');\n                    if (startAddress in this._addressConfigs) {\n                      return startAddress + '|' + cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], startVal).raw;\n                    }\n                    return val;\n                  } \n                    return cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], val).raw;\n                });\n              sim.startValues = mapping(sim.startValues);\n              sim.stopValues = mapping(sim.stopValues);\n            }\n          }\n        }\n        this.receive({\n          i: new Date().getTime(),\n          d: cv.Config.initialDemoData.states\n        });\n\n        if (cv.Config.initialDemoData.sequence) {\n          this.__sequence = cv.Config.initialDemoData.sequence;\n          this._startSequence();\n        }\n        if (cv.Config.initialDemoData.simulations) {\n          this._registerSimulations(cv.Config.initialDemoData.simulations);\n        }\n        cv.Config.initialDemoData = null;\n      }\n    },\n\n    __decode(address, value) {\n      if (/\\d{1,2}\\/\\d{1,2}\\/\\d{1,2}/.test(address)) {\n        if (/^[\\da-fA-F]+$/.test(value)) {\n          if (value.length <= 2) {\n            value = '' + (parseInt(value, 16) & 63);\n          } else {\n            value = value.substring(2);\n          }\n        }\n      }\n      return value;\n    },\n\n    /**\n     * This function sends a value\n     * @param address\n     * @param value\n     */\n    write(address, value) {\n      if (cv.report.Record.REPLAYING === true) {\n        // do nothing in replay mode\n        return;\n      }\n      const ts = new Date().getTime();\n      // store in window, to make it accessible for protractor\n      const lastWrite = {\n        address: address,\n        value: value,\n        ts: ts\n      };\n\n      value = this.__decode(address, value);\n\n      if (this.__simulations && Object.prototype.hasOwnProperty.call(this.__simulations, address)) {\n        this._processSimulation(address, value);\n      } else {\n        // send update\n        const answer = {\n          i: ts,\n          d: {}\n        };\n        lastWrite.transformedValue = value;\n        answer.d[address] = value;\n        this.debug('sending value: ' + value + ' to address: ' + address);\n        this.receive(answer);\n      }\n      // store in window, to make it accessible for protractor\n      window.writeHistory.push(lastWrite);\n    },\n\n    restart() {},\n\n    stop() {},\n\n    getResourcePath(name, map) {\n      if (cv.Config.testMode) {\n        // fallback to old behaviour just for screenshot generation / testing\n        if (name === 'charts' && map && map.src) {\n          return name + '/' + map.src;\n        }\n        return name;\n      }\n      let basePath = '';\n      if (Object.prototype.hasOwnProperty.call(this._resources, name)) {\n        basePath = this._resources[name];\n        if (basePath && !basePath.endsWith('/')) {\n          basePath += '/';\n        }\n      }\n      if (name === 'charts' && map && map.src) {\n        return basePath + map.src;\n      }\n      return basePath;\n    },\n\n    getLastError() {\n      return null;\n    },\n\n    getBackend() {\n      return {};\n    },\n\n    authorize(req) {},\n\n    terminate() {},\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n    getProviderConvertFunction(name, format) {\n      return null;\n    },\n    getProviderData : function (name, format) {\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}