{
  "className": "cv.io.Mockup",
  "packageName": "cv.io",
  "name": "Mockup",
  "superClass": "cv.io.AbstractClient",
  "interfaces": [
    "cv.io.IClient"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 961
      },
      "end": {
        "line": 621,
        "column": 3,
        "index": 20195
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Mockup simulating a backend + client for the Cometvisu protocol</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 2016</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2016"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1198
      },
      "end": {
        "line": 68,
        "column": 3,
        "index": 2194
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "dataReceived": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2356
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2418
        }
      },
      "name": "dataReceived",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "server": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2425
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2484
        }
      },
      "name": "server",
      "propertyType": "new",
      "init": "Mockup",
      "check": "String",
      "defaultValue": "Mockup"
    },
    "connected": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2491
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2582
        }
      },
      "name": "connected",
      "propertyType": "new",
      "event": "changeConnected",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__simulating": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2742
        },
        "end": {
          "line": 99,
          "column": 23,
          "index": 2761
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__encodeSimulatedStates": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2767
        },
        "end": {
          "line": 100,
          "column": 34,
          "index": 2797
        }
      },
      "type": "variable",
      "access": "private"
    },
    "backendName": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2803
        },
        "end": {
          "line": 101,
          "column": 25,
          "index": 2824
        }
      },
      "type": "variable",
      "access": "public"
    },
    "addresses": {
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2830
        },
        "end": {
          "line": 102,
          "column": 19,
          "index": 2845
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__xhr": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2851
        },
        "end": {
          "line": 103,
          "column": 15,
          "index": 2862
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequence": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2868
        },
        "end": {
          "line": 104,
          "column": 20,
          "index": 2884
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequenceIndex": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 2890
        },
        "end": {
          "line": 105,
          "column": 22,
          "index": 2908
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__simulations": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2914
        },
        "end": {
          "line": 106,
          "column": 23,
          "index": 2933
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getType": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2940
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2988
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{string} e.g. openhab, mqtt or knxd",
            "type": "string",
            "description": " e.g. openhab, mqtt or knxd"
          }
        ]
      }
    },
    "__loadTestData": {
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 2995
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 3325
        }
      },
      "type": "function",
      "access": "private"
    },
    "__applyTestData": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3332
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 7934
        }
      },
      "type": "function",
      "access": "private"
    },
    "defake": {
      "location": {
        "start": {
          "line": 238,
          "column": 4,
          "index": 7941
        },
        "end": {
          "line": 298,
          "column": 5,
          "index": 9813
        }
      },
      "type": "function",
      "access": "public"
    },
    "receive": {
      "location": {
        "start": {
          "line": 304,
          "column": 4,
          "index": 9963
        },
        "end": {
          "line": 310,
          "column": 5,
          "index": 10112
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function gets called once the communication is established and session information is available</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "login": {
      "location": {
        "start": {
          "line": 312,
          "column": 4,
          "index": 10119
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 10237
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "loginOnly {Boolean} if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "paramName": "loginOnly",
            "description": " if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "credentials {Map} map with \"username\" and \"password\" (optional)",
            "paramName": "credentials",
            "description": " map with \"username\" and \"password\" (optional)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} call this function when login is done",
            "paramName": "callback",
            "description": " call this function when login is done",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context for the callback (this)",
            "paramName": "context",
            "description": " context for the callback (this)",
            "type": "Object"
          }
        ]
      }
    },
    "_registerSimulations": {
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 10244
        },
        "end": {
          "line": 329,
          "column": 5,
          "index": 10738
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_startSequence": {
      "location": {
        "start": {
          "line": 331,
          "column": 4,
          "index": 10745
        },
        "end": {
          "line": 349,
          "column": 5,
          "index": 11231
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_processSimulation": {
      "location": {
        "start": {
          "line": 351,
          "column": 4,
          "index": 11238
        },
        "end": {
          "line": 431,
          "column": 5,
          "index": 14411
        }
      },
      "type": "function",
      "access": "protected"
    },
    "subscribe": {
      "location": {
        "start": {
          "line": 437,
          "column": 4,
          "index": 14509
        },
        "end": {
          "line": 440,
          "column": 5,
          "index": 14620
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Subscribe to the addresses in the parameter</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses",
            "paramName": "addresses",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "__prepareTestData": {
      "location": {
        "start": {
          "line": 442,
          "column": 4,
          "index": 14627
        },
        "end": {
          "line": 506,
          "column": 5,
          "index": 17469
        }
      },
      "type": "function",
      "access": "private"
    },
    "__decode": {
      "location": {
        "start": {
          "line": 508,
          "column": 4,
          "index": 17476
        },
        "end": {
          "line": 519,
          "column": 5,
          "index": 17803
        }
      },
      "type": "function",
      "access": "private"
    },
    "write": {
      "location": {
        "start": {
          "line": 526,
          "column": 4,
          "index": 17903
        },
        "end": {
          "line": 556,
          "column": 5,
          "index": 18844
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function sends a value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address",
            "paramName": "address",
            "type": ""
          },
          {
            "name": "@param",
            "body": "value",
            "paramName": "value",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "restart": {
      "location": {
        "start": {
          "line": 558,
          "column": 4,
          "index": 18851
        },
        "end": {
          "line": 558,
          "column": 16,
          "index": 18863
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "full",
            "paramName": "full",
            "type": ""
          }
        ]
      }
    },
    "stop": {
      "location": {
        "start": {
          "line": 560,
          "column": 4,
          "index": 18870
        },
        "end": {
          "line": 560,
          "column": 13,
          "index": 18879
        }
      },
      "type": "function",
      "access": "public"
    },
    "getResourcePath": {
      "location": {
        "start": {
          "line": 562,
          "column": 4,
          "index": 18886
        },
        "end": {
          "line": 581,
          "column": 5,
          "index": 19510
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, chart)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, chart)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map?} optional data needed to generate the resource path",
            "paramName": "params",
            "description": " optional data needed to generate the resource path",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} relative path to the resource, returns <code>null</code> when the backend does not provide that resource",
            "type": "String|null",
            "description": " relative path to the resource, returns <code>null</code> when the backend does not provide that resource"
          }
        ]
      }
    },
    "getLastError": {
      "location": {
        "start": {
          "line": 583,
          "column": 4,
          "index": 19517
        },
        "end": {
          "line": 585,
          "column": 5,
          "index": 19558
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}",
            "type": "{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number",
            "description": "|*}"
          }
        ]
      }
    },
    "getBackend": {
      "location": {
        "start": {
          "line": 587,
          "column": 4,
          "index": 19565
        },
        "end": {
          "line": 589,
          "column": 5,
          "index": 19602
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      }
    },
    "authorize": {
      "location": {
        "start": {
          "line": 591,
          "column": 4,
          "index": 19609
        },
        "end": {
          "line": 591,
          "column": 21,
          "index": 19626
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "req {qx.io.request.Xhr}"
          }
        ]
      }
    },
    "terminate": {
      "location": {
        "start": {
          "line": 593,
          "column": 4,
          "index": 19633
        },
        "end": {
          "line": 593,
          "column": 18,
          "index": 19647
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "update": {
      "location": {
        "start": {
          "line": 595,
          "column": 4,
          "index": 19654
        },
        "end": {
          "line": 595,
          "column": 19,
          "index": 19669
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      }
    },
    "record": {
      "location": {
        "start": {
          "line": 596,
          "column": 4,
          "index": 19675
        },
        "end": {
          "line": 596,
          "column": 25,
          "index": 19696
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of event to record",
            "paramName": "type",
            "description": " type of event to record",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Object} data to record",
            "paramName": "data",
            "description": " data to record",
            "type": "Object"
          }
        ]
      }
    },
    "showError": {
      "location": {
        "start": {
          "line": 597,
          "column": 4,
          "index": 19702
        },
        "end": {
          "line": 597,
          "column": 37,
          "index": 19735
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {Number} one of cv.io.Client.ERROR_CODES",
            "paramName": "type",
            "description": " one of cv.io.Client.ERROR_CODES",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "message {String} detailed error message",
            "paramName": "message",
            "description": " detailed error message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args",
            "paramName": "args",
            "type": ""
          }
        ]
      }
    },
    "setInitialAddresses": {
      "location": {
        "start": {
          "line": 600,
          "column": 4,
          "index": 19782
        },
        "end": {
          "line": 600,
          "column": 37,
          "index": 19815
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "hasCustomChartsDataProcessor": {
      "location": {
        "start": {
          "line": 602,
          "column": 4,
          "index": 19822
        },
        "end": {
          "line": 604,
          "column": 5,
          "index": 19880
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "processChartsData": {
      "location": {
        "start": {
          "line": 605,
          "column": 4,
          "index": 19886
        },
        "end": {
          "line": 607,
          "column": 5,
          "index": 19936
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      }
    },
    "hasProvider": {
      "location": {
        "start": {
          "line": 608,
          "column": 4,
          "index": 19942
        },
        "end": {
          "line": 610,
          "column": 5,
          "index": 19987
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "getProviderUrl": {
      "location": {
        "start": {
          "line": 611,
          "column": 4,
          "index": 19993
        },
        "end": {
          "line": 613,
          "column": 5,
          "index": 20040
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      }
    },
    "getProviderConvertFunction": {
      "location": {
        "start": {
          "line": 614,
          "column": 4,
          "index": 20046
        },
        "end": {
          "line": 616,
          "column": 5,
          "index": 20113
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ]
      }
    },
    "getProviderData": {
      "location": {
        "start": {
          "line": 617,
          "column": 4,
          "index": 20119
        },
        "end": {
          "line": 619,
          "column": 5,
          "index": 20187
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<variant>|null}",
            "type": "Promise<variant>|null",
            "description": ""
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getServer": {
      "type": "function",
      "name": "getServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for server"
          }
        ]
      }
    },
    "setServer": {
      "type": "function",
      "name": "setServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for server"
          }
        ]
      }
    },
    "resetServer": {
      "type": "function",
      "name": "resetServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>server</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDataReceived": {
      "type": "function",
      "name": "getDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "isDataReceived": {
      "type": "function",
      "name": "isDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "setDataReceived": {
      "type": "function",
      "name": "setDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for dataReceived"
          }
        ]
      }
    },
    "resetDataReceived": {
      "type": "function",
      "name": "resetDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>dataReceived</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ]
      }
    }
  },
  "events": {},
  "descendants": []
}