{
  "className": "cv.io.Mockup",
  "packageName": "cv.io",
  "name": "Mockup",
  "superClass": "qx.core.Object",
  "interfaces": [
    "cv.io.IClient"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 961
      },
      "end": {
        "line": 520,
        "column": 3,
        "index": 16061
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Mockup simulating a backend + client for the Cometvisu protocol</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 2016</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2016"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1192
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 1764
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "dataReceived": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1926
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1988
        }
      },
      "name": "dataReceived",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "server": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1995
        },
        "end": {
          "line": 67,
          "column": 5,
          "index": 2054
        }
      },
      "name": "server",
      "propertyType": "new",
      "init": "Mockup",
      "check": "String",
      "defaultValue": "Mockup"
    },
    "connected": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2061
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2152
        }
      },
      "name": "connected",
      "propertyType": "new",
      "event": "changeConnected",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "backendName": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2312
        },
        "end": {
          "line": 82,
          "column": 25,
          "index": 2333
        }
      },
      "type": "variable",
      "access": "public"
    },
    "addresses": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2339
        },
        "end": {
          "line": 83,
          "column": 19,
          "index": 2354
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__xhr": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2360
        },
        "end": {
          "line": 84,
          "column": 15,
          "index": 2371
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequence": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2377
        },
        "end": {
          "line": 85,
          "column": 20,
          "index": 2393
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequenceIndex": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2399
        },
        "end": {
          "line": 86,
          "column": 22,
          "index": 2417
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__simulations": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2423
        },
        "end": {
          "line": 87,
          "column": 23,
          "index": 2442
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getType": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2449
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2497
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{string} e.g. openhab, mqtt or knxd",
            "type": "string",
            "description": " e.g. openhab, mqtt or knxd"
          }
        ]
      }
    },
    "__loadTestData": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2504
        },
        "end": {
          "line": 101,
          "column": 5,
          "index": 2830
        }
      },
      "type": "function",
      "access": "private"
    },
    "__applyTestData": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2837
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 7279
        }
      },
      "type": "function",
      "access": "private"
    },
    "defake": {
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 7286
        },
        "end": {
          "line": 274,
          "column": 5,
          "index": 9158
        }
      },
      "type": "function",
      "access": "public"
    },
    "receive": {
      "location": {
        "start": {
          "line": 280,
          "column": 4,
          "index": 9308
        },
        "end": {
          "line": 286,
          "column": 5,
          "index": 9457
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function gets called once the communication is established and session information is available</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "login": {
      "location": {
        "start": {
          "line": 288,
          "column": 4,
          "index": 9464
        },
        "end": {
          "line": 309,
          "column": 5,
          "index": 10204
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "loginOnly {Boolean} if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "paramName": "loginOnly",
            "description": " if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "credentials {Map} map with \"username\" and \"password\" (optional)",
            "paramName": "credentials",
            "description": " map with \"username\" and \"password\" (optional)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} call this function when login is done",
            "paramName": "callback",
            "description": " call this function when login is done",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context for the callback (this)",
            "paramName": "context",
            "description": " context for the callback (this)",
            "type": "Object"
          }
        ]
      }
    },
    "_registerSimulations": {
      "location": {
        "start": {
          "line": 311,
          "column": 4,
          "index": 10211
        },
        "end": {
          "line": 322,
          "column": 5,
          "index": 10705
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_startSequence": {
      "location": {
        "start": {
          "line": 324,
          "column": 4,
          "index": 10712
        },
        "end": {
          "line": 342,
          "column": 5,
          "index": 11198
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_processSimulation": {
      "location": {
        "start": {
          "line": 344,
          "column": 4,
          "index": 11205
        },
        "end": {
          "line": 416,
          "column": 5,
          "index": 13717
        }
      },
      "type": "function",
      "access": "protected"
    },
    "subscribe": {
      "location": {
        "start": {
          "line": 422,
          "column": 4,
          "index": 13815
        },
        "end": {
          "line": 424,
          "column": 5,
          "index": 13894
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Subscribe to the addresses in the parameter</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses",
            "paramName": "addresses",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "write": {
      "location": {
        "start": {
          "line": 431,
          "column": 4,
          "index": 13994
        },
        "end": {
          "line": 469,
          "column": 5,
          "index": 15187
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function sends a value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address",
            "paramName": "address",
            "type": ""
          },
          {
            "name": "@param",
            "body": "value",
            "paramName": "value",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "restart": {
      "location": {
        "start": {
          "line": 471,
          "column": 4,
          "index": 15194
        },
        "end": {
          "line": 471,
          "column": 16,
          "index": 15206
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "full",
            "paramName": "full",
            "type": ""
          }
        ]
      }
    },
    "stop": {
      "location": {
        "start": {
          "line": 473,
          "column": 4,
          "index": 15213
        },
        "end": {
          "line": 473,
          "column": 13,
          "index": 15222
        }
      },
      "type": "function",
      "access": "public"
    },
    "getResourcePath": {
      "location": {
        "start": {
          "line": 475,
          "column": 4,
          "index": 15229
        },
        "end": {
          "line": 480,
          "column": 5,
          "index": 15376
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, rrd)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, rrd)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map?} optional data needed to generate the resource path",
            "paramName": "params",
            "description": " optional data needed to generate the resource path",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} relative path to the resource, returns <code>null</code> when the backend does not provide that resource",
            "type": "String|null",
            "description": " relative path to the resource, returns <code>null</code> when the backend does not provide that resource"
          }
        ]
      }
    },
    "getLastError": {
      "location": {
        "start": {
          "line": 482,
          "column": 4,
          "index": 15383
        },
        "end": {
          "line": 484,
          "column": 5,
          "index": 15424
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}",
            "type": "{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number",
            "description": "|*}"
          }
        ]
      }
    },
    "getBackend": {
      "location": {
        "start": {
          "line": 486,
          "column": 4,
          "index": 15431
        },
        "end": {
          "line": 488,
          "column": 5,
          "index": 15468
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      }
    },
    "authorize": {
      "location": {
        "start": {
          "line": 490,
          "column": 4,
          "index": 15475
        },
        "end": {
          "line": 490,
          "column": 21,
          "index": 15492
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "req {qx.io.request.Xhr}"
          }
        ]
      }
    },
    "terminate": {
      "location": {
        "start": {
          "line": 492,
          "column": 4,
          "index": 15499
        },
        "end": {
          "line": 492,
          "column": 18,
          "index": 15513
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "update": {
      "location": {
        "start": {
          "line": 494,
          "column": 4,
          "index": 15520
        },
        "end": {
          "line": 494,
          "column": 19,
          "index": 15535
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      }
    },
    "record": {
      "location": {
        "start": {
          "line": 495,
          "column": 4,
          "index": 15541
        },
        "end": {
          "line": 495,
          "column": 25,
          "index": 15562
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of event to record",
            "paramName": "type",
            "description": " type of event to record",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Object} data to record",
            "paramName": "data",
            "description": " data to record",
            "type": "Object"
          }
        ]
      }
    },
    "showError": {
      "location": {
        "start": {
          "line": 496,
          "column": 4,
          "index": 15568
        },
        "end": {
          "line": 496,
          "column": 37,
          "index": 15601
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {Number} one of cv.io.Client.ERROR_CODES",
            "paramName": "type",
            "description": " one of cv.io.Client.ERROR_CODES",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "message {String} detailed error message",
            "paramName": "message",
            "description": " detailed error message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args",
            "paramName": "args",
            "type": ""
          }
        ]
      }
    },
    "setInitialAddresses": {
      "location": {
        "start": {
          "line": 499,
          "column": 4,
          "index": 15648
        },
        "end": {
          "line": 499,
          "column": 37,
          "index": 15681
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "hasCustomChartsDataProcessor": {
      "location": {
        "start": {
          "line": 501,
          "column": 4,
          "index": 15688
        },
        "end": {
          "line": 503,
          "column": 5,
          "index": 15746
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "processChartsData": {
      "location": {
        "start": {
          "line": 504,
          "column": 4,
          "index": 15752
        },
        "end": {
          "line": 506,
          "column": 5,
          "index": 15802
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      }
    },
    "hasProvider": {
      "location": {
        "start": {
          "line": 507,
          "column": 4,
          "index": 15808
        },
        "end": {
          "line": 509,
          "column": 5,
          "index": 15853
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "getProviderUrl": {
      "location": {
        "start": {
          "line": 510,
          "column": 4,
          "index": 15859
        },
        "end": {
          "line": 512,
          "column": 5,
          "index": 15906
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      }
    },
    "getProviderConvertFunction": {
      "location": {
        "start": {
          "line": 513,
          "column": 4,
          "index": 15912
        },
        "end": {
          "line": 515,
          "column": 5,
          "index": 15979
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ]
      }
    },
    "getProviderData": {
      "location": {
        "start": {
          "line": 516,
          "column": 4,
          "index": 15985
        },
        "end": {
          "line": 518,
          "column": 5,
          "index": 16053
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<variant>|null}",
            "type": "Promise<variant>|null",
            "description": ""
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getServer": {
      "type": "function",
      "name": "getServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for server"
          }
        ]
      }
    },
    "setServer": {
      "type": "function",
      "name": "setServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for server"
          }
        ]
      }
    },
    "resetServer": {
      "type": "function",
      "name": "resetServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>server</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDataReceived": {
      "type": "function",
      "name": "getDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "isDataReceived": {
      "type": "function",
      "name": "isDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "setDataReceived": {
      "type": "function",
      "name": "setDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for dataReceived"
          }
        ]
      }
    },
    "resetDataReceived": {
      "type": "function",
      "name": "resetDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>dataReceived</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ]
      }
    }
  },
  "descendants": []
}