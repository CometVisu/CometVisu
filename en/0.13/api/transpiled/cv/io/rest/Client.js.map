{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/rest/Client.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "BASE_URL",
    "__configFile",
    "__dirClient",
    "__dpClient",
    "__callbacks",
    "getBaseUrl",
    "path",
    "engine",
    "cv",
    "TemplateEngine",
    "getInstance",
    "clientBackend",
    "visu",
    "getBackend",
    "resources",
    "rest",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "directory",
    "getConfigClient",
    "config",
    "get",
    "method",
    "url",
    "put",
    "post",
    "save",
    "io",
    "Resource",
    "setBaseUrl",
    "configureRequest",
    "req",
    "action",
    "setRequestHeader",
    "setAccept",
    "_enableSync",
    "getFsClient",
    "read",
    "update",
    "create",
    "move",
    "checkEnvironment",
    "params",
    "hash",
    "setUrl",
    "getUrl",
    "recursive",
    "parts",
    "split",
    "length",
    "pop",
    "mimetype",
    "ui",
    "manager",
    "tree",
    "FileSystem",
    "getMimetypeFromSuffix",
    "addListener",
    "_onSaveSuccess",
    "_onSaveError",
    "getDataProviderClient",
    "designs",
    "rrds",
    "addresses",
    "influxdbs",
    "influxdbfields",
    "influxdbtags",
    "client",
    "Object",
    "keys",
    "forEach",
    "callName",
    "args",
    "lang",
    "Array",
    "fromArguments",
    "arguments",
    "callback",
    "context",
    "Type",
    "isFunction",
    "apply",
    "bind",
    "ev",
    "getRequest",
    "id",
    "parseInt",
    "toHashCode",
    "prototype",
    "hasOwnProperty",
    "call",
    "getData",
    "data",
    "error",
    "message",
    "status",
    "getStatus",
    "statusText",
    "getStatusText",
    "log",
    "Logger",
    "getPhase",
    "qxl",
    "dialog",
    "Dialog",
    "locale",
    "Manager",
    "tr",
    "snackbar",
    "Controller",
    "info",
    "Client"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n *\n */\nqx.Class.define('cv.io.rest.Client', {\n  type: 'static',\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    BASE_URL: null,\n    __configFile: null,\n    __dirClient: null,\n    __dpClient: null,\n    __callbacks: {},\n\n    getBaseUrl: function () {\n      if (!this.BASE_URL) {\n        let path = '';\n        const engine = cv.TemplateEngine.getInstance();\n        const clientBackend = engine.visu && typeof engine.visu.getBackend === 'function' ? engine.visu.getBackend() : {};\n        if (clientBackend.resources && clientBackend.resources.rest) {\n          path = clientBackend.resources.rest;\n        } else {\n          path = qx.util.Uri.parseUri(window.location.href).directory + 'rest/manager/index.php';\n        }\n        this.BASE_URL = path;\n      }\n      return this.BASE_URL;\n    },\n\n    getConfigClient: function() {\n      if (!this.__configFile) {\n        const config = {\n          get: {\n            method: 'GET', url: '/config/hidden/{section}/{key}'\n          },\n          put: {\n            method: 'PUT', url: '/config/hidden/{section}/{key}'\n          },\n          post: {\n            method: 'POST', url: '/config/hidden/{section}/{key}'\n          },\n          'delete': {\n            method: 'DELETE', url: '/config/hidden/{section}/{key}'\n          },\n          save: {\n            method: 'PUT', url: '/config/hidden'\n          }\n        };\n        this.__configFile = new qx.io.rest.Resource(config);\n        this.__configFile.setBaseUrl(this.getBaseUrl());\n        this.__configFile.configureRequest(function (req, action) {\n          if (action === 'save') {\n            req.setRequestHeader('Content-Type', 'application/json');\n          }\n          req.setAccept('application/json');\n        });\n\n        this._enableSync(this.__configFile, config);\n      }\n      return this.__configFile;\n    },\n\n    getFsClient: function () {\n      if (!this.__dirClient) {\n        const config = {\n          read: {\n            method: 'GET', url: '/fs?path={path}'\n          },\n          update: {\n            method: 'PUT', url: '/fs?path={path}'\n          },\n          create: {\n            method: 'POST', url: '/fs?path={path}&type={type}'\n          },\n          'delete': {\n            method: 'DELETE', url: '/fs?path={path}&force={force}'\n          },\n          move: {\n            method: 'PUT', url: '/fs/move?src={src}&target={target}'\n          },\n          checkEnvironment: {\n            method: 'GET', url: '/fs/check'\n          }\n        };\n        this.__dirClient = new qx.io.rest.Resource(config);\n        this.__dirClient.setBaseUrl(this.getBaseUrl());\n        this.__dirClient.configureRequest(function (req, action, params) {\n          if (params.hash) {\n            req.setUrl(req.getUrl() + '&hash=' + params.hash);\n          }\n          if (params.recursive === true && action === 'read') {\n            req.setUrl(req.getUrl() + '&recursive=true');\n          }\n          if (action === 'update' || action === 'create') {\n            const parts = params.path.split('.');\n            if (parts.length > 1) {\n              const type = parts.pop();\n              const mimetype = cv.ui.manager.tree.FileSystem.getMimetypeFromSuffix(type);\n              req.setRequestHeader('Content-Type', mimetype || 'text/plain');\n            } else {\n              req.setRequestHeader('Content-Type', 'text/plain');\n            }\n            req.setAccept('application/json');\n          }\n        });\n\n\n        this._enableSync(this.__dirClient, config);\n\n        // general listeners\n        this.__dirClient.addListener('updateSuccess', this._onSaveSuccess, this);\n        this.__dirClient.addListener('createSuccess', this._onSaveSuccess, this);\n        this.__dirClient.addListener('updateError', this._onSaveError, this);\n        this.__dirClient.addListener('createError', this._onSaveError, this);\n      }\n      return this.__dirClient;\n    },\n\n    getDataProviderClient: function () {\n      if (!this.__dpClient) {\n        const config = {\n          designs: {\n            method: 'GET', url: '/data/designs'\n          },\n          rrds: {\n            method: 'GET', url: '/data/rrds'\n          },\n          addresses: {\n            method: 'GET', url: '/data/addresses'\n          },\n          influxdbs: {\n            method: 'GET', url: '/data/influxdbs?auth={auth}'\n          },\n          influxdbfields: {\n            method: 'GET', url: '/data/influxdbfields?auth={auth}&measurement={measurement}'\n          },\n          influxdbtags: {\n            method: 'GET', url: '/data/influxdbtags?auth={auth}&measurement={measurement}'\n          }\n        };\n        this.__dpClient = new qx.io.rest.Resource(config);\n        this.__dpClient.setBaseUrl(this.getBaseUrl());\n\n        this._enableSync(this.__dpClient, config);\n      }\n      return this.__dpClient;\n    },\n\n    _enableSync: function (client, config) {\n      // install the callback calls\n      Object.keys(config).forEach(function (callName) {\n        client[callName + 'Sync'] = function () {\n          const args = qx.lang.Array.fromArguments(arguments);\n          let callback;\n          let context = args.pop();\n          if (qx.lang.Type.isFunction(context)) {\n            callback = context;\n            context = this;\n          } else {\n            callback = args.pop();\n          }\n          this.__callbacks[client[callName].apply(client, args)] = callback.bind(context);\n        }.bind(this);\n      }, this);\n\n      // add the general listeners\n      client.addListener('success', function (ev) {\n        const req = ev.getRequest();\n        const id = parseInt(req.toHashCode(), 10);\n        if (Object.prototype.hasOwnProperty.call(this.__callbacks, id)) {\n          this.__callbacks[id](null, ev.getData());\n          delete this.__callbacks[id];\n        }\n      }, this);\n\n      client.addListener('error', function (ev) {\n        const req = ev.getRequest();\n        const id = parseInt(req.toHashCode(), 10);\n        if (Object.prototype.hasOwnProperty.call(this.__callbacks, id)) {\n          const data = ev.getData();\n          let error;\n          if (data && data.message) {\n            error = data.message;\n          } else {\n            error = {\n              status: ev.getRequest().getStatus(),\n              statusText: ev.getRequest().getStatusText()\n            };\n          }\n          qx.log.Logger.error(this, error);\n          this.__callbacks[id](error, null);\n          delete this.__callbacks[id];\n        }\n        if (req.getPhase() === 'load') {\n          // error during load phase => backend not reachable\n          qxl.dialog.Dialog.error(qx.locale.Manager.tr('Backend does not respond!'));\n        }\n      }, this);\n    },\n\n    _onSaveSuccess: function (ev) {\n      const req = ev.getRequest();\n      const id = parseInt(req.toHashCode(), 10);\n      // only handle this events, when there is no callback for it\n      if (!Object.prototype.hasOwnProperty.call(this.__callbacks, id)) {\n        cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been saved'));\n      }\n    },\n\n    _onSaveError: function (ev) {\n      const req = ev.getRequest();\n      const id = parseInt(req.toHashCode(), 10);\n      // only handle this events, when there is no callback for it\n      if (!Object.prototype.hasOwnProperty.call(this.__callbacks, id)) {\n        cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Error saving file'));\n      }\n    }\n  }\n});\n"
  ]
}