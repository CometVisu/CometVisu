{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "AbstractClient",
    "implement",
    "IClient",
    "construct",
    "constructor",
    "call",
    "addresses",
    "__persistedTargets",
    "theme",
    "event",
    "message",
    "Bus",
    "subscribe",
    "_onPageChange",
    "properties",
    "connected",
    "check",
    "init",
    "server",
    "nullable",
    "members",
    "backendName",
    "implementedAddresses",
    "ev",
    "page",
    "getData",
    "data",
    "getAttribute",
    "Model",
    "getInstance",
    "updateFrom",
    "getType",
    "receive",
    "json",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "filters",
    "core",
    "Environment",
    "get",
    "value",
    "name",
    "localStorage",
    "getItem",
    "func",
    "error",
    "write",
    "address",
    "options",
    "parts",
    "split",
    "target",
    "shift",
    "backend",
    "BackendConnections",
    "getClient",
    "restart",
    "warn",
    "url",
    "window",
    "location",
    "reload",
    "URL",
    "href",
    "searchParams",
    "set",
    "replace",
    "toString",
    "action",
    "Application",
    "structureController",
    "scrollToPage",
    "_applyTheme",
    "length",
    "rest",
    "Client",
    "getBaseUrl",
    "origin",
    "xhr",
    "request",
    "Xhr",
    "send",
    "onUpdate",
    "setItem",
    "document",
    "documentElement",
    "setAttribute",
    "stop",
    "getResourcePath",
    "params",
    "getLastError",
    "getBackend",
    "Map",
    "authorize",
    "req",
    "terminate",
    "update",
    "record",
    "type",
    "showError",
    "args",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderData",
    "format",
    "map",
    "label",
    "insertText",
    "kind",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Value",
    "Promise",
    "resolve",
    "getProviderConvertFunction",
    "System"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/System.js"
  ],
  "sourcesContent": [
    "/* System.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * A backend client to handle internal system states.\n * With this backend you get access to e.g. backend connection states, currently shown page in the UI and can\n * trigger some things like:\n * - Restart a backend connection\n * - navigate to another page\n * - reload the browser\n * - trigger HTTP requests\n */\nqx.Class.define('cv.io.System', {\n  extend: cv.io.AbstractClient,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.addresses = [];\n    this.__persistedTargets = {\n      theme: '_applyTheme'\n    };\n    qx.event.message.Bus.subscribe('cv.ui.structure.tile.currentPage', this._onPageChange, this);\n  },\n\n  /*\n  ***********************************************\n   PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    },\n\n    /**\n     * The server the client is currently speaking to\n     */\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    backendName: 'system',\n    addresses: null,\n    implementedAddresses: null,\n    __persistedTargets: null,\n\n    _onPageChange(ev) {\n      const page = ev.getData();\n      const data = {};\n      data['nav:current-page'] = page.getAttribute('id');\n      cv.data.Model.getInstance().updateFrom('system', data);\n    },\n\n    getType() {\n      return this.backendName;\n    },\n\n    receive(json) {},\n\n    login(loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n      }\n    },\n\n    subscribe(addresses, filters) {\n      this.addresses = addresses ? addresses : [];\n      if (qx.core.Environment.get('html.storage.local')) {\n        let value;\n        for (const name in this.__persistedTargets) {\n          value = localStorage.getItem('system:' + name);\n          if (value) {\n            const func = this[this.__persistedTargets[name]];\n            if (typeof func === 'function') {\n              func(value);\n            } else {\n              this.error(name + 'is no function');\n            }\n          }\n        }\n      }\n    },\n\n    write(address, value, options) {\n      if (address) {\n        const parts = address.split(':');\n        const target = parts.shift();\n        if (target === 'backend') {\n          const name = parts.shift();\n          const backend = name === 'system' ? this : cv.io.BackendConnections.getClient(name);\n          if (backend) {\n            switch (value) {\n              case 'restart':\n                backend.restart(true);\n                break;\n\n              default:\n                this.warn('unhandled backend action:', value);\n            }\n          }\n        } else if (target === 'browser') {\n          let url;\n          switch (value) {\n            case 'reload':\n              window.location.reload();\n              break;\n\n            case 'forced-reload':\n              url = new URL(window.location.href);\n              url.searchParams.set('forceReload', 'true');\n              window.location.replace(url.toString());\n              break;\n\n            default:\n              this.warn('unhandled browser action:', value);\n          }\n        } else if (target === 'nav') {\n          const action = parts.shift();\n          switch (action) {\n            case 'current-page':\n              cv.Application.structureController.scrollToPage(value);\n              break;\n          }\n        } else if (target === 'theme') {\n          this._applyTheme(value);\n        } else if (target === 'http' || target === 'https') {\n          // send HTTP request, ignore the answer\n          if (parts.length >= 2 && parts[0] === 'proxy') {\n            const url = new URL(cv.io.rest.Client.getBaseUrl() + '/proxy', window.location.origin);\n\n            url.searchParams.set('url', target + ':' + parts[1]);\n            address = url.toString();\n          }\n          const xhr = new qx.io.request.Xhr(address);\n          xhr.send();\n        } else if (target === 'state' || target === 'notification') {\n          // just write the value to the states to update Listeners\n          cv.data.Model.getInstance().onUpdate(address, value, 'system');\n        }\n\n        if (qx.core.Environment.get('html.storage.local') && target in this.__persistedTargets) {\n          localStorage.setItem('system:' + target, value);\n        }\n      }\n    },\n\n    _applyTheme(theme) {\n      document.documentElement.setAttribute('data-theme', theme);\n      cv.data.Model.getInstance().onUpdate('theme', theme, 'system');\n    },\n\n    restart() {},\n\n    stop() {},\n\n    getResourcePath(name, params) {\n      if (name === 'charts') {\n        return null;\n      }\n      return name;\n    },\n\n    getLastError() {\n      return null;\n    },\n\n    getBackend() {\n      return new Map();\n    },\n\n    authorize(req) {},\n\n    terminate() {},\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n\n    getProviderData(name, format) {\n      if (name === 'addresses') {\n        let data = null;\n        if (format === 'monaco') {\n          data = this.implementedAddresses.map(name => ({\n            label: name,\n            insertText: name,\n            kind: window.monaco.languages.CompletionItemKind.Value\n          }));\n        } else {\n          data = this.implementedAddresses.map(name => ({\n            label: name,\n            value: name\n          }));\n        }\n        return Promise.resolve(data);\n      }\n      return null;\n    },\n\n    getProviderConvertFunction(name, format) {\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}