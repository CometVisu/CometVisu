{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/System.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "addresses",
    "event",
    "message",
    "Bus",
    "subscribe",
    "_onPageChange",
    "properties",
    "connected",
    "check",
    "init",
    "server",
    "nullable",
    "members",
    "backendName",
    "ev",
    "page",
    "getData",
    "data",
    "getAttribute",
    "Model",
    "getInstance",
    "updateFrom",
    "getType",
    "receive",
    "json",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "call",
    "filters",
    "write",
    "address",
    "value",
    "options",
    "parts",
    "split",
    "target",
    "shift",
    "name",
    "backend",
    "BackendConnections",
    "getClient",
    "restart",
    "warn",
    "url",
    "window",
    "location",
    "reload",
    "URL",
    "href",
    "searchParams",
    "set",
    "replace",
    "toString",
    "action",
    "Application",
    "structureController",
    "scrollToPage",
    "theme",
    "document",
    "documentElement",
    "setAttribute",
    "model",
    "onUpdate",
    "length",
    "rest",
    "Client",
    "getBaseUrl",
    "origin",
    "xhr",
    "request",
    "Xhr",
    "send",
    "stop",
    "getResourcePath",
    "params",
    "getLastError",
    "getBackend",
    "Map",
    "authorize",
    "req",
    "terminate",
    "update",
    "record",
    "type",
    "showError",
    "args",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "System"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* System.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * A backend client to handle internal system states.\n * With this backend you get access to e.g. backend connection states, currently shown page in the UI and can\n * trigger some things like:\n * - Restart a backend connection\n * - navigate to another page\n * - reload the browser\n * - trigger HTTP requests\n */\nqx.Class.define('cv.io.System', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.addresses = [];\n    qx.event.message.Bus.subscribe('cv.ui.structure.tile.currentPage', this._onPageChange, this);\n  },\n  /*\n ***********************************************\n   PROPERTIES\n ***********************************************\n */\n  properties: {\n\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    },\n\n    /**\n     * The server the client is currently speaking to\n     */\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    backendName: 'system',\n    addresses: null,\n\n    _onPageChange(ev) {\n      const page = ev.getData();\n      const data = {};\n      data['nav:current-page'] = page.getAttribute('id');\n      cv.data.Model.getInstance().updateFrom('system', data);\n    },\n\n    getType() {\n      return this.backendName;\n    },\n\n    receive: function (json) {\n    },\n\n    login: function (loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n      }\n    },\n\n    subscribe: function (addresses, filters) {\n      this.addresses = addresses ? addresses : [];\n    },\n\n    write: function (address, value, options) {\n      if (address) {\n        const parts = address.split(':');\n        const target = parts.shift();\n        if (target === 'backend') {\n          const name = parts.shift();\n          const backend = name === 'system' ? this : cv.io.BackendConnections.getClient(name);\n          if (backend) {\n            switch (value) {\n              case 'restart':\n                backend.restart(true);\n                break;\n\n              default:\n                this.warn('unhandled backend action:', value);\n            }\n          }\n        } else if (target === 'browser') {\n          let url;\n          switch (value) {\n            case 'reload':\n              window.location.reload();\n              break;\n\n            case 'forced-reload':\n              url = new URL(window.location.href);\n              url.searchParams.set('forceReload', 'true');\n              window.location.replace(url.toString());\n              break;\n\n            default:\n              this.warn('unhandled browser action:', value);\n          }\n        } else if (target === 'nav') {\n          const action = parts.shift();\n          switch (action) {\n            case 'current-page':\n              cv.Application.structureController.scrollToPage(value);\n              break;\n          }\n        } else if (target === 'theme') {\n          const theme = value;\n          document.documentElement.setAttribute('data-theme', theme);\n          const model = cv.data.Model.getInstance();\n          model.onUpdate('theme', theme, 'system');\n        } else if (target === 'http' || target === 'https') {\n          // send HTTP request, ignore the answer\n          if (parts.length >= 2 && parts[0] === 'proxy') {\n            const url = new URL(cv.io.rest.Client.getBaseUrl() + '/proxy', window.location.origin);\n            url.searchParams.set('url', target + ':' + parts[1]);\n            address = url.toString();\n          }\n          const xhr = new qx.io.request.Xhr(address);\n          xhr.send();\n        } else if (target === 'state') {\n          // just write the value to the states to update Listeners\n          cv.data.Model.getInstance().onUpdate(address, value, 'system');\n        }\n      }\n    },\n\n    restart: function () {\n    },\n\n    stop: function () {\n    },\n\n    getResourcePath: function (name, params) {\n      if (name === 'charts') {\n        return null;\n      }\n      return name;\n    },\n\n    getLastError: function () {\n      return null;\n    },\n\n    getBackend: function () {\n      return new Map();\n    },\n\n    authorize: function (req) {\n    },\n\n    terminate: function () {\n    },\n\n    update: function (json) {\n    },\n    record: function (type, data) {\n    },\n    showError: function (type, message, args) {\n    },\n\n    // not used / needed in this client\n    setInitialAddresses: function (addresses) {\n    },\n\n    hasCustomChartsDataProcessor: function () {\n      return false;\n    },\n    processChartsData: function (data) {\n      return data;\n    },\n    hasProvider: function (name) {\n      return false;\n    },\n    getProviderUrl: function (name) {\n      return null;\n    },\n    getProviderConvertFunction: function (name, format) {\n      return null;\n    }\n  }\n});\n"
  ]
}