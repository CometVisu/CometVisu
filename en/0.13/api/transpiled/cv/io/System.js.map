{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "AbstractClient",
    "implement",
    "IClient",
    "construct",
    "addresses",
    "__persistedTargets",
    "theme",
    "event",
    "message",
    "Bus",
    "subscribe",
    "_onPageChange",
    "properties",
    "connected",
    "check",
    "init",
    "server",
    "nullable",
    "members",
    "backendName",
    "implementedAddresses",
    "ev",
    "page",
    "getData",
    "data",
    "getAttribute",
    "Model",
    "getInstance",
    "updateFrom",
    "getType",
    "receive",
    "json",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "call",
    "filters",
    "core",
    "Environment",
    "get",
    "value",
    "name",
    "localStorage",
    "getItem",
    "func",
    "error",
    "write",
    "address",
    "options",
    "parts",
    "split",
    "target",
    "shift",
    "backend",
    "BackendConnections",
    "getClient",
    "restart",
    "warn",
    "url",
    "window",
    "location",
    "reload",
    "URL",
    "href",
    "searchParams",
    "set",
    "replace",
    "toString",
    "action",
    "Application",
    "structureController",
    "scrollToPage",
    "_applyTheme",
    "length",
    "rest",
    "Client",
    "getBaseUrl",
    "origin",
    "xhr",
    "request",
    "Xhr",
    "send",
    "onUpdate",
    "setItem",
    "document",
    "documentElement",
    "setAttribute",
    "stop",
    "getResourcePath",
    "params",
    "getLastError",
    "getBackend",
    "Map",
    "authorize",
    "req",
    "terminate",
    "update",
    "record",
    "type",
    "showError",
    "args",
    "setInitialAddresses",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "hasProvider",
    "getProviderUrl",
    "getProviderData",
    "format",
    "map",
    "label",
    "insertText",
    "kind",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Value",
    "Promise",
    "resolve",
    "getProviderConvertFunction",
    "System"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/System.js"
  ],
  "sourcesContent": [
    "/* System.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * A backend client to handle internal system states.\n * With this backend you get access to e.g. backend connection states, currently shown page in the UI and can\n * trigger some things like:\n * - Restart a backend connection\n * - navigate to another page\n * - reload the browser\n * - trigger HTTP requests\n */\nqx.Class.define('cv.io.System', {\n  extend: cv.io.AbstractClient,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.addresses = [];\n    this.__persistedTargets = {\n      theme: '_applyTheme'\n    };\n    qx.event.message.Bus.subscribe('cv.ui.structure.tile.currentPage', this._onPageChange, this);\n  },\n\n  /*\n  ***********************************************\n   PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    connected: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeConnected'\n    },\n\n    /**\n     * The server the client is currently speaking to\n     */\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    backendName: 'system',\n    addresses: null,\n    implementedAddresses: null,\n    __persistedTargets: null,\n\n    _onPageChange(ev) {\n      const page = ev.getData();\n      const data = {};\n      data['nav:current-page'] = page.getAttribute('id');\n      cv.data.Model.getInstance().updateFrom('system', data);\n    },\n\n    getType() {\n      return this.backendName;\n    },\n\n    receive(json) {},\n\n    login(loginOnly, credentials, callback, context) {\n      if (callback) {\n        callback.call(context);\n      }\n    },\n\n    subscribe(addresses, filters) {\n      this.addresses = addresses ? addresses : [];\n      if (qx.core.Environment.get('html.storage.local')) {\n        let value;\n        for (const name in this.__persistedTargets) {\n          value = localStorage.getItem('system:' + name);\n          if (value) {\n            const func = this[this.__persistedTargets[name]];\n            if (typeof func === 'function') {\n              func(value);\n            } else {\n              this.error(name + 'is no function');\n            }\n          }\n        }\n      }\n    },\n\n    write(address, value, options) {\n      if (address) {\n        const parts = address.split(':');\n        const target = parts.shift();\n        if (target === 'backend') {\n          const name = parts.shift();\n          const backend = name === 'system' ? this : cv.io.BackendConnections.getClient(name);\n          if (backend) {\n            switch (value) {\n              case 'restart':\n                backend.restart(true);\n                break;\n\n              default:\n                this.warn('unhandled backend action:', value);\n            }\n          }\n        } else if (target === 'browser') {\n          let url;\n          switch (value) {\n            case 'reload':\n              window.location.reload();\n              break;\n\n            case 'forced-reload':\n              url = new URL(window.location.href);\n              url.searchParams.set('forceReload', 'true');\n              window.location.replace(url.toString());\n              break;\n\n            default:\n              this.warn('unhandled browser action:', value);\n          }\n        } else if (target === 'nav') {\n          const action = parts.shift();\n          switch (action) {\n            case 'current-page':\n              cv.Application.structureController.scrollToPage(value);\n              break;\n          }\n        } else if (target === 'theme') {\n          this._applyTheme(value);\n        } else if (target === 'http' || target === 'https') {\n          // send HTTP request, ignore the answer\n          if (parts.length >= 2 && parts[0] === 'proxy') {\n            const url = new URL(cv.io.rest.Client.getBaseUrl() + '/proxy', window.location.origin);\n\n            url.searchParams.set('url', target + ':' + parts[1]);\n            address = url.toString();\n          }\n          const xhr = new qx.io.request.Xhr(address);\n          xhr.send();\n        } else if (target === 'state' || target === 'notification') {\n          // just write the value to the states to update Listeners\n          cv.data.Model.getInstance().onUpdate(address, value, 'system');\n        }\n\n        if (qx.core.Environment.get('html.storage.local') && target in this.__persistedTargets) {\n          localStorage.setItem('system:' + target, value);\n        }\n      }\n    },\n\n    _applyTheme(theme) {\n      document.documentElement.setAttribute('data-theme', theme);\n      cv.data.Model.getInstance().onUpdate('theme', theme, 'system');\n    },\n\n    restart() {},\n\n    stop() {},\n\n    getResourcePath(name, params) {\n      if (name === 'charts') {\n        return null;\n      }\n      return name;\n    },\n\n    getLastError() {\n      return null;\n    },\n\n    getBackend() {\n      return new Map();\n    },\n\n    authorize(req) {},\n\n    terminate() {},\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n\n    getProviderData(name, format) {\n      if (name === 'addresses') {\n        let data = null;\n        if (format === 'monaco') {\n          data = this.implementedAddresses.map(name => ({\n            label: name,\n            insertText: name,\n            kind: window.monaco.languages.CompletionItemKind.Value\n          }));\n        } else {\n          data = this.implementedAddresses.map(name => ({\n            label: name,\n            value: name\n          }));\n        }\n        return Promise.resolve(data);\n      }\n      return null;\n    },\n\n    getProviderConvertFunction(name, format) {\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}