{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "AbstractClient",
    "implement",
    "IClient",
    "construct",
    "type",
    "backendUrl",
    "initialAddresses",
    "_type",
    "_backendUrl",
    "__groups",
    "__memberLookup",
    "properties",
    "connected",
    "check",
    "init",
    "event",
    "server",
    "nullable",
    "members",
    "__lastError",
    "__token",
    "__subscribedAddresses",
    "getBackend",
    "getType",
    "setInitialAddresses",
    "addresses",
    "getResourcePath",
    "name",
    "map",
    "src",
    "parts",
    "split",
    "item",
    "pop",
    "url",
    "params",
    "length",
    "push",
    "start",
    "endTime",
    "end",
    "__convertTimes",
    "Date",
    "startTime",
    "match",
    "exec",
    "amount",
    "parseInt",
    "interval",
    "setTime",
    "getTime",
    "test",
    "toISOString",
    "join",
    "time",
    "d",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "response",
    "data",
    "newRrd",
    "lastValue",
    "value",
    "j",
    "l",
    "parseFloat",
    "state",
    "error",
    "authorize",
    "req",
    "setRequestHeader",
    "createAuthorizedRequest",
    "method",
    "request",
    "Xhr",
    "__isActive",
    "toLowerCase",
    "subscribe",
    "filters",
    "setDataReceived",
    "addListener",
    "e",
    "getTarget",
    "res",
    "getResponse",
    "update",
    "model",
    "Model",
    "getInstance",
    "forEach",
    "entry",
    "Array",
    "isArray",
    "active",
    "obj",
    "stateDescription",
    "label",
    "addAddress",
    "getName",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "values",
    "options",
    "send",
    "running",
    "report",
    "Record",
    "REPLAYING",
    "things",
    "filter",
    "addr",
    "topic",
    "thingsReq",
    "includes",
    "UID",
    "statusInfo",
    "status",
    "eventSource",
    "EventSource",
    "addEventListener",
    "handleMessage",
    "bind",
    "handleError",
    "onerror",
    "setConnected",
    "onopen",
    "debug",
    "terminate",
    "close",
    "payload",
    "record",
    "JSON",
    "parse",
    "change",
    "groupNames",
    "groupName",
    "group",
    "keys",
    "memberName",
    "member",
    "write",
    "address",
    "setRequestData",
    "login",
    "loginOnly",
    "credentials",
    "callback",
    "context",
    "username",
    "btoa",
    "password",
    "setServer",
    "getResponseHeader",
    "getLastError",
    "restart",
    "fullRestart",
    "json",
    "showError",
    "message",
    "args",
    "getProviderData",
    "format",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "result",
    "insertText",
    "detail",
    "kind",
    "window",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Value",
    "element",
    "hints",
    "transform",
    "EnumMember",
    "openhab",
    "Rest"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/openhab/Rest.js"
  ],
  "sourcesContent": [
    "/* Rest.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * openHAB Rest client, that uses the native openHAB REST-API directly and does not\n * need the openHAB-cometvisu binding to be installed\n */\nqx.Class.define('cv.io.openhab.Rest', {\n  extend: cv.io.AbstractClient,\n  implement: cv.io.IClient,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(type, backendUrl) {\n    super();\n    this.initialAddresses = [];\n    this._type = type;\n    this._backendUrl = backendUrl || '/rest/';\n    this.__groups = {};\n    this.__memberLookup = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n\n    connected: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeConnected'\n    },\n\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastError: null,\n    _type: null,\n    _backendUrl: null,\n    __token: null,\n    __groups: null,\n    __memberLookup: null,\n    __subscribedAddresses: null,\n\n    getBackend() {\n      return {};\n    },\n\n    getType() {\n      return this._type;\n    },\n\n    // not used / needed in this client\n    setInitialAddresses(addresses) {},\n\n    getResourcePath(name, map) {\n      if (name === 'charts' && map && map.src) {\n        const parts = map.src.split(':');\n        const item = parts.pop();\n        let url = this._backendUrl + 'persistence/items/' + item;\n        const params = [];\n        if (parts.length > 0) {\n          params.push('serviceId=' + parts[0]);\n        }\n        if (map.start) {\n          let endTime = map.end ? this.__convertTimes(map.end) : new Date();\n          let startTime = new Date();\n          const match = /^end-([\\d]*)([\\w]+)$/.exec(map.start);\n          if (match) {\n            const amount = parseInt(match[1]) || 1;\n            let interval = 0;\n            switch (match[2]) {\n              case 'second':\n                interval = 1000;\n                break;\n              case 'minute':\n                interval = 60000;\n                break;\n              case 'hour':\n                interval = 60 * 60000;\n                break;\n              case 'day':\n                interval = 24 * 60 * 60000;\n                break;\n              case 'week':\n                interval = 7 * 24 * 60 * 60000;\n                break;\n              case 'month':\n                interval = 30 * 24 * 60 * 60000;\n                break;\n              case 'year':\n                interval = 365 * 24 * 60 * 60000;\n                break;\n            }\n\n            startTime.setTime(endTime.getTime() - amount * interval);\n          } else if (/^[\\d]+$/.test(map.start)) {\n            startTime.setTime(parseInt(map.start) * 1000);\n          }\n\n          params.push('starttime=' + startTime.toISOString().split('.')[0]+'Z');\n          params.push('endtime=' + endTime.toISOString().split('.')[0]+'Z');\n        }\n\n        url += '?' + params.join('&');\n        return url;\n      }\n      return null;\n    },\n\n    __convertTimes(time) {\n      if (time === 'now') {\n        return new Date();\n      } else if (/^[\\d]+$/.test(time)) {\n        let d = new Date();\n        d.setTime(parseInt(time) * 1000);\n        return d;\n      }\n      return null;\n    },\n\n    hasCustomChartsDataProcessor() {\n      return true;\n    },\n\n    processChartsData(response) {\n      if (response && response.data) {\n        const data = response.data;\n        const newRrd = [];\n        let lastValue;\n        let value;\n        for (let j = 0, l = data.length; j < l; j++) {\n          value = parseFloat(data[j].state);\n          if (value !== lastValue) {\n            newRrd.push([data[j].time, value]);\n          }\n          lastValue = value;\n        }\n        return newRrd;\n      }\n      this.error('invalid chart data response');\n      return [];\n    },\n\n    /**\n     * Auth basic authentication header to request\n     * @param req {qx.io.request.Xhr}\n     * @private\n     */\n    authorize(req) {\n      if (this.__token) {\n        req.setRequestHeader('Authorization', this.__token);\n      }\n    },\n\n    /**\n     * Creates an authorized request to the backend with a relative path\n     * @param url {String?} appended to the backends base path\n     * @param method {String?} HTTP method type (GET is the default)\n     * @return A XHR request {qx.io.request.Xhr}\n     */\n    createAuthorizedRequest(url, method) {\n      const req = new qx.io.request.Xhr(this._backendUrl + (url || ''), method);\n      this.authorize(req);\n      return req;\n    },\n\n    __isActive(type, state) {\n      switch (type.toLowerCase()) {\n        case 'decimal':\n        case 'percent':\n        case 'number':\n        case 'dimmer':\n          return parseInt(state) > 0;\n\n        case 'color':\n          return state !== '0,0,0';\n\n        case 'rollershutter':\n          return state === '0';\n\n        case 'contact':\n          return state === 'OPENED';\n\n        case 'onoff':\n        case 'switch':\n          return state === 'ON';\n\n        default:\n          return null;\n      }\n    },\n\n    subscribe(addresses, filters) {\n      // send first request to get all states once\n      const req = this.createAuthorizedRequest('items?fields=name,state,stateDescription,members,type,label&recursive=true');\n      this.setDataReceived(false);\n      req.addListener('success', e => {\n        const req = e.getTarget();\n\n        const res = req.getResponse();\n        const update = {};\n        const model = cv.data.Model.getInstance();\n        res.forEach(entry => {\n          if (entry.members && Array.isArray(entry.members)) {\n            // this is a group\n            let active = 0;\n            const map = {};\n            entry.members.forEach(obj => {\n              map[obj.name] = {\n                type: obj.type.toLowerCase(),\n                state: obj.state,\n                stateDescription: obj.stateDescription,\n                label: obj.label,\n                name: obj.name,\n                active: false\n              };\n              // register member addresses in model\n              model.addAddress(obj.name, null, this.getName());\n\n              if (this.__isActive(obj.type, obj.state)) {\n                active++;\n                map[obj.name].active = true;\n              }\n              if (!Object.prototype.hasOwnProperty.call(this.__memberLookup, obj.name)) {\n                this.__memberLookup[obj.name] = [entry.name];\n              } else {\n                this.__memberLookup[obj.name].push(entry.name);\n              }\n              return map;\n            });\n            this.__groups[entry.name] = {\n              members: map,\n              active: active\n            };\n\n            update['number:' + entry.name] = active;\n            update['members:' + entry.name] = Object.values(map);\n          }\n          update[entry.name] = entry.state;\n          if (entry.stateDescription && entry.stateDescription.options) {\n            update['options:' + entry.name] = entry.stateDescription.options;\n          }\n        }, this);\n        this.update(update);\n        this.__subscribedAddresses = addresses;\n        this.setDataReceived(true);\n      });\n      // Send request\n      req.send();\n\n      // create sse session\n      this.running = true;\n      if (!cv.report.Record.REPLAYING) {\n        const things = addresses.filter(addr => addr.split(':').length > 3);\n        let topic = 'openhab/items/*/statechanged';\n        if (things.length > 0) {\n          topic = 'openhab/*/*/*changed';\n          // request current states\n          const thingsReq = this.createAuthorizedRequest('things?summary=true');\n          thingsReq.addListener('success', e => {\n            const res = e.getTarget().getResponse();\n            const update = {};\n            res.forEach(entry => {\n              if (things.includes(entry.UID)) {\n                update[entry.UID] = entry.statusInfo.status;\n              }\n            });\n            this.update(update);\n          });\n          thingsReq.send();\n        }\n        if (!this.eventSource) {\n          this.eventSource = new EventSource(this._backendUrl + 'events?topics=' + topic);\n\n          // add default listeners\n          this.eventSource.addEventListener('message', this.handleMessage.bind(this), false);\n\n          this.eventSource.addEventListener('error', this.handleError.bind(this), false);\n\n          // add additional listeners\n          //Object.getOwnPropertyNames(this.__additionalTopics).forEach(this.__addRecordedEventListener, this);\n          this.eventSource.onerror = function () {\n            this.error('connection lost');\n            this.setConnected(false);\n          }.bind(this);\n          this.eventSource.onopen = function () {\n            this.debug('connection established');\n            this.setConnected(true);\n          }.bind(this);\n        }\n      }\n    },\n\n    terminate() {\n      this.debug('terminating connection');\n      if (this.eventSource) {\n        this.eventSource.close();\n        this.eventSource = null;\n        this.setConnected(false);\n      }\n    },\n\n    handleMessage(payload) {\n      if (payload.type === 'message') {\n        this.record('read', { type: payload.type, data: payload.data });\n        const data = JSON.parse(payload.data);\n        if (data.type === 'ItemStateChangedEvent' || data.type === 'GroupItemStateChangedEvent') {\n          //extract item name from topic\n          const update = {};\n          const item = data.topic.split('/')[2];\n          const change = JSON.parse(data.payload);\n          update[item] = change.value;\n          // check if this Item is part of any group\n          if (Object.prototype.hasOwnProperty.call(this.__memberLookup, item)) {\n            const groupNames = this.__memberLookup[item];\n            groupNames.forEach(groupName => {\n              const group = this.__groups[groupName];\n              let active = 0;\n              group.members[item].state = change.value;\n              Object.keys(group.members).forEach(memberName => {\n                const member = group.members[memberName];\n                if (this.__isActive(member.type, member.state)) {\n                  active++;\n                  member.active = true;\n                } else {\n                  member.active = false;\n                }\n              });\n              group.active = active;\n              update['number:' + groupName] = active;\n              update['members:' + groupName] = Object.values(group.members);\n            });\n          }\n          this.update(update);\n        } else if (data.type === 'ThingStatusInfoChangedEvent') {\n          //extract item name from topic\n          const update = {};\n          const item = data.topic.split('/')[2];\n          let change = JSON.parse(data.payload);\n          if (Array.isArray(change)) {\n            // [newState, oldState]\n            change = change[0];\n          }\n          update[item] = change.status;\n          this.update(update);\n        }\n      }\n    },\n\n    write(address, value) {\n      const req = this.createAuthorizedRequest('items/' + address, 'POST');\n      req.setRequestHeader('Content-Type', 'text/plain');\n      req.setRequestData('' + value);\n      req.send();\n    },\n\n    handleError(error) {\n      this.error(error);\n    },\n\n    login(loginOnly, credentials, callback, context) {\n      if (credentials && credentials.username) {\n        // just saving the credentials for later use as we are using basic authentication\n        this.__token = 'Basic ' + btoa(credentials.username + ':' + (credentials.password || ''));\n      }\n      this.setDataReceived(false);\n      // no login needed we just do a request to the if the backend is reachable\n      const req = this.createAuthorizedRequest();\n      req.addListener('success', e => {\n        const req = e.getTarget();\n        this.setServer(req.getResponseHeader('Server'));\n        if (callback) {\n          callback.call(context);\n        }\n      });\n      // Send request\n      req.send();\n    },\n\n    getLastError() {\n      return this.__lastError;\n    },\n    restart(fullRestart) {\n      if (fullRestart) {\n        // re-read all states\n        if (this.__subscribedAddresses) {\n          this.subscribe(this.__subscribedAddresses);\n        } else {\n          this.debug('no subscribed addresses, skip reading all states.');\n        }\n      }\n    },\n\n    update(json) {},\n    record(type, data) {},\n    showError(type, message, args) {},\n\n    getProviderData: function (name, format) {\n      return null;\n    },\n\n    hasProvider(name) {\n      return ['addresses', 'rrd'].includes(name);\n    },\n    getProviderUrl(name) {\n      switch (name) {\n        case 'addresses':\n          return this._backendUrl + 'items?fields=name,type,label';\n        case 'rrd':\n          return this._backendUrl + 'persistence/items';\n        default:\n          return null;\n      }\n    },\n    getProviderConvertFunction(name, format) {\n      switch (name) {\n        case 'addresses':\n          return function (result) {\n            let data;\n            if (format === 'monaco') {\n              return result.map(entry => ({\n                label: entry.name,\n                insertText: entry.name,\n                detail: entry.type,\n                kind: window.monaco.languages.CompletionItemKind.Value\n              }));\n            }\n            data = {};\n            result.forEach(element => {\n              const type = element.type ? element.type.split(':')[0] : '';\n              if (!Object.prototype.hasOwnProperty.call(data, type)) {\n                data[type] = [];\n              }\n              const entry = {\n                value: element.name,\n                label: element.label || ''\n              };\n\n              if (type) {\n                entry.hints = {\n                  transform: 'OH:' + type.toLowerCase()\n                };\n              }\n              data[type].push(entry);\n            });\n            return data;\n          };\n        case 'rrd':\n          return function (result) {\n            if (format === 'monaco') {\n              return result.map(element => ({\n                insertText: element,\n                label: element,\n                kind: window.monaco.languages.CompletionItemKind.EnumMember\n              }));\n            }\n            return result.map(element => ({\n              value: element,\n              label: element\n            }));\n          };\n        default:\n          return null;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}