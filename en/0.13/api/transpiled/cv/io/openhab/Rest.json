{
  "className": "cv.io.openhab.Rest",
  "packageName": "cv.io.openhab",
  "name": "Rest",
  "superClass": "qx.core.Object",
  "interfaces": [
    "cv.io.IClient"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 957
      },
      "end": {
        "line": 485,
        "column": 3,
        "index": 14817
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>openHAB Rest client, that uses the native openHAB REST-API directly and does not\n need the openHAB-cometvisu binding to be installed</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 1180
      },
      "end": {
        "line": 40,
        "column": 3,
        "index": 1382
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "connected": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1531
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1623
        }
      },
      "name": "connected",
      "propertyType": "new",
      "event": "changeConnected",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "server": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1630
        },
        "end": {
          "line": 59,
          "column": 5,
          "index": 1719
        }
      },
      "name": "server",
      "propertyType": "new",
      "event": "changedServer",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__lastError": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1865
        },
        "end": {
          "line": 68,
          "column": 21,
          "index": 1882
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_type": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1888
        },
        "end": {
          "line": 69,
          "column": 15,
          "index": 1899
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_backendUrl": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1905
        },
        "end": {
          "line": 70,
          "column": 21,
          "index": 1922
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__token": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1928
        },
        "end": {
          "line": 71,
          "column": 17,
          "index": 1941
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__groups": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1947
        },
        "end": {
          "line": 72,
          "column": 18,
          "index": 1961
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__memberLookup": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1967
        },
        "end": {
          "line": 73,
          "column": 24,
          "index": 1987
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__subscribedAddresses": {
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 1993
        },
        "end": {
          "line": 74,
          "column": 31,
          "index": 2020
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getBackend": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2027
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 2064
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      }
    },
    "getType": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2071
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2113
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{string} e.g. openhab, mqtt or knxd",
            "type": "string",
            "description": " e.g. openhab, mqtt or knxd"
          }
        ]
      }
    },
    "setInitialAddresses": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2160
        },
        "end": {
          "line": 85,
          "column": 37,
          "index": 2193
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getResourcePath": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2200
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 3797
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, rrd)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, rrd)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map?} optional data needed to generate the resource path",
            "paramName": "params",
            "description": " optional data needed to generate the resource path",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} relative path to the resource, returns <code>null</code> when the backend does not provide that resource",
            "type": "String|null",
            "description": " relative path to the resource, returns <code>null</code> when the backend does not provide that resource"
          }
        ]
      }
    },
    "__convertTimes": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3804
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 4043
        }
      },
      "type": "function",
      "access": "private"
    },
    "hasCustomChartsDataProcessor": {
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 4050
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 4107
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "processChartsData": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4114
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 4489
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var}"
          }
        ]
      }
    },
    "authorize": {
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 4617
        },
        "end": {
          "line": 176,
          "column": 5,
          "index": 4734
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Auth basic authentication header to request</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "req {qx.io.request.Xhr}"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "createAuthorizedRequest": {
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 5011
        },
        "end": {
          "line": 188,
          "column": 5,
          "index": 5181
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an authorized request to the backend with a relative path</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "url {String?} appended to the backends base path",
            "paramName": "url",
            "description": " appended to the backends base path",
            "optional": true,
            "type": "String"
          },
          {
            "name": "@param",
            "body": "method {String?} HTTP method type (GET is the default)",
            "paramName": "method",
            "description": " HTTP method type (GET is the default)",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "A XHR request {qx.io.request.Xhr}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__isActive": {
      "location": {
        "start": {
          "line": 190,
          "column": 4,
          "index": 5188
        },
        "end": {
          "line": 214,
          "column": 5,
          "index": 5699
        }
      },
      "type": "function",
      "access": "private"
    },
    "subscribe": {
      "location": {
        "start": {
          "line": 216,
          "column": 4,
          "index": 5706
        },
        "end": {
          "line": 311,
          "column": 5,
          "index": 9254
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array?} addresses to subscribe to",
            "paramName": "addresses",
            "description": " addresses to subscribe to",
            "optional": true,
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "filters {Array?} Filters",
            "paramName": "filters",
            "description": " Filters",
            "optional": true,
            "type": "Array"
          }
        ]
      }
    },
    "terminate": {
      "location": {
        "start": {
          "line": 313,
          "column": 4,
          "index": 9261
        },
        "end": {
          "line": 320,
          "column": 5,
          "index": 9463
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "handleMessage": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 9470
        },
        "end": {
          "line": 367,
          "column": 5,
          "index": 11374
        }
      },
      "type": "function",
      "access": "public"
    },
    "write": {
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 11381
        },
        "end": {
          "line": 374,
          "column": 5,
          "index": 11600
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "address {String} address to send the value to",
            "paramName": "address",
            "description": " address to send the value to",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String} value to send",
            "paramName": "value",
            "description": " value to send",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Object} optional options, depending on backend",
            "paramName": "options",
            "description": " optional options, depending on backend",
            "type": "Object"
          }
        ]
      }
    },
    "handleError": {
      "location": {
        "start": {
          "line": 376,
          "column": 4,
          "index": 11607
        },
        "end": {
          "line": 378,
          "column": 5,
          "index": 11658
        }
      },
      "type": "function",
      "access": "public"
    },
    "login": {
      "location": {
        "start": {
          "line": 380,
          "column": 4,
          "index": 11665
        },
        "end": {
          "line": 396,
          "column": 5,
          "index": 12348
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "loginOnly {Boolean} if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "paramName": "loginOnly",
            "description": " if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "credentials {Map} map with \"username\" and \"password\" (optional)",
            "paramName": "credentials",
            "description": " map with \"username\" and \"password\" (optional)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} call this function when login is done",
            "paramName": "callback",
            "description": " call this function when login is done",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context for the callback (this)",
            "paramName": "context",
            "description": " context for the callback (this)",
            "type": "Object"
          }
        ]
      }
    },
    "getLastError": {
      "location": {
        "start": {
          "line": 398,
          "column": 4,
          "index": 12355
        },
        "end": {
          "line": 400,
          "column": 5,
          "index": 12408
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}",
            "type": "{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number",
            "description": "|*}"
          }
        ]
      }
    },
    "restart": {
      "location": {
        "start": {
          "line": 401,
          "column": 4,
          "index": 12414
        },
        "end": {
          "line": 410,
          "column": 5,
          "index": 12703
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "full",
            "paramName": "full",
            "type": ""
          }
        ]
      }
    },
    "update": {
      "location": {
        "start": {
          "line": 412,
          "column": 4,
          "index": 12710
        },
        "end": {
          "line": 412,
          "column": 19,
          "index": 12725
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      }
    },
    "record": {
      "location": {
        "start": {
          "line": 413,
          "column": 4,
          "index": 12731
        },
        "end": {
          "line": 413,
          "column": 25,
          "index": 12752
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of event to record",
            "paramName": "type",
            "description": " type of event to record",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Object} data to record",
            "paramName": "data",
            "description": " data to record",
            "type": "Object"
          }
        ]
      }
    },
    "showError": {
      "location": {
        "start": {
          "line": 414,
          "column": 4,
          "index": 12758
        },
        "end": {
          "line": 414,
          "column": 37,
          "index": 12791
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "type {Number} one of cv.io.Client.ERROR_CODES",
            "paramName": "type",
            "description": " one of cv.io.Client.ERROR_CODES",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "message {String} detailed error message",
            "paramName": "message",
            "description": " detailed error message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args",
            "paramName": "args",
            "type": ""
          }
        ]
      }
    },
    "getProviderData": {
      "location": {
        "start": {
          "line": 416,
          "column": 4,
          "index": 12798
        },
        "end": {
          "line": 418,
          "column": 5,
          "index": 12865
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<variant>|null}",
            "type": "Promise<variant>|null",
            "description": ""
          }
        ]
      }
    },
    "hasProvider": {
      "location": {
        "start": {
          "line": 420,
          "column": 4,
          "index": 12872
        },
        "end": {
          "line": 422,
          "column": 5,
          "index": 12947
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "getProviderUrl": {
      "location": {
        "start": {
          "line": 423,
          "column": 4,
          "index": 12953
        },
        "end": {
          "line": 432,
          "column": 5,
          "index": 13222
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      }
    },
    "getProviderConvertFunction": {
      "location": {
        "start": {
          "line": 433,
          "column": 4,
          "index": 13228
        },
        "end": {
          "line": 483,
          "column": 5,
          "index": 14809
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getServer": {
      "type": "function",
      "name": "getServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for server"
          }
        ]
      }
    },
    "setServer": {
      "type": "function",
      "name": "setServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for server"
          }
        ]
      }
    },
    "resetServer": {
      "type": "function",
      "name": "resetServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>server</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}