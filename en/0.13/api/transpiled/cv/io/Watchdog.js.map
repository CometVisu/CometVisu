{
  "version": 3,
  "names": [
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "last",
    "Date",
    "now",
    "properties",
    "client",
    "check",
    "nullable",
    "init",
    "members",
    "hardLast",
    "__id",
    "aliveCheckFunction",
    "getClient",
    "getBackend",
    "maxConnectionAge",
    "getCurrentTransport",
    "isConnectionRunning",
    "restart",
    "maxDataAge",
    "start",
    "watchdogTimer",
    "stop",
    "setInterval",
    "bind",
    "clearInterval",
    "isActive",
    "ping",
    "fullReload",
    "arguments",
    "length",
    "undefined",
    "cv",
    "io",
    "Watchdog"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/client/source/class/cv/io/Watchdog.js"
  ],
  "sourcesContent": [
    "/* Watchdog.js\n *\n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n'use strict';\n\n/**\n * The Watchdog observes the backend communication and restarts the connection if\n * the client received to data from the backend within a defined timeout.\n */\nqx.Class.define('cv.io.Watchdog', {\n  extend: qx.core.Object,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    this.last = Date.now();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    client: {\n      check: 'cv.io.Client',\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    /**\n     * Time of the last successful watchdog update.\n     * @type {Date}\n     */\n    last: null,\n\n    /**\n     * Time of the last successful watchdog update when the data were loaded\n     * completely.\n     * @type {Date}\n     */\n    hardLast: null,\n\n    /**\n     * ID of the setInterval\n     * @type {number|null}\n     */\n    __id: null,\n\n    /**\n     * Check whether the watchdog was pinged recently enough.\n     * If not, restart the connection. When the last data reading is older than\n     * `maxDataAge` a reload is requested.\n     * This does not update the last ping.\n     */\n    aliveCheckFunction() {\n      const now = new Date();\n      if (\n        now - this.last > this.getClient().getBackend().maxConnectionAge ||\n        !this.getClient().getCurrentTransport().isConnectionRunning()\n      ) {\n        this.getClient()\n          .getCurrentTransport()\n          .restart(now - this.hardLast > this.getClient().getBackend().maxDataAge);\n\n        this.last = now;\n      }\n    },\n\n    /**\n     * Start the watchdog.\n     * @param watchdogTimer {number} The interval in seconds.\n     */\n    start(watchdogTimer) {\n      if (this.__id !== null) {\n        this.stop();\n      }\n      this.__id = setInterval(this.aliveCheckFunction.bind(this), watchdogTimer * 1000);\n    },\n\n    /**\n     * Stop the watchdog.\n     */\n    stop() {\n      if (this.__id !== null) {\n        clearInterval(this.__id);\n        this.__id = null;\n      }\n    },\n\n    /**\n     * Return whether the watchdog is running.\n     * @return {boolean}\n     */\n    isActive() {\n      return this.__id !== null;\n    },\n\n    /**\n     * Ping the watchdog to tell it that the function is still running.\n     * @param fullReload {boolean} Were all data read?\n     *   (Relevant for data aging)\n     */\n    ping(fullReload = false) {\n      this.last = new Date();\n      if (fullReload) {\n        this.hardLast = this.last;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}