{
  "className": "cv.io.Client",
  "packageName": "cv.io",
  "name": "Client",
  "superClass": "qx.core.Object",
  "interfaces": [
    "cv.io.IClient"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 33,
        "column": 0,
        "index": 1227
      },
      "end": {
        "line": 742,
        "column": 3,
        "index": 20952
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The JavaScript library that implements the CometVisu protocol.\n The Client handles all communication issues to supply the user\n of this object with reliable realtime data.\n It can be seen as the session layer (layer 5) according to the OSI\n model.</p><div class=\"authors\"><label>Authors:</label> Christan Mayer; Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 0.5.3 (initial contribution) 0.10.0+0.11.0 (major refactoring)</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Christan Mayer"
        },
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "0.5.3 (initial contribution) 0.10.0+0.11.0 (major refactoring)"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "$"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 46,
        "column": 2,
        "index": 1588
      },
      "end": {
        "line": 95,
        "column": 3,
        "index": 3007
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "backendName {String} name of the backend",
          "paramName": "backendName",
          "description": " name of the backend",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "backendLoginUrl {String} URL of the login resource",
          "paramName": "backendLoginUrl",
          "description": " URL of the login resource",
          "type": "String"
        }
      ]
    }
  },
  "statics": {
    "CLIENTS": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 3165
        },
        "end": {
          "line": 103,
          "column": 15,
          "index": 3176
        }
      },
      "type": "variable",
      "access": "public"
    },
    "TEST_MODE": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 3182
        },
        "end": {
          "line": 104,
          "column": 20,
          "index": 3198
        }
      },
      "type": "variable",
      "access": "public"
    },
    "ERROR_CODES": {
      "location": {
        "start": {
          "line": 105,
          "column": 4,
          "index": 3204
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3374
        }
      },
      "type": "variable",
      "access": "public"
    },
    "stopAll": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3429
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3526
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stop all running clients</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "backendNameAliases": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3571
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 3691
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "backends": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3856
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 4628
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    }
  },
  "properties": {
    "running": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4863
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 4951
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Is the communication running at the moment?</p>"
          }
        ]
      },
      "name": "running",
      "propertyType": "new",
      "event": "changeRunning",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "connected": {
      "location": {
        "start": {
          "line": 177,
          "column": 4,
          "index": 5033
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 5157
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Is the client connected to a backend at the moment?</p>"
          }
        ]
      },
      "name": "connected",
      "propertyType": "new",
      "event": "changeConnected",
      "apply": "_applyConnected",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "dataReceived": {
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 5282
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 5345
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>needed to be able to check if the incoming update is the initial answer or a successing update</p>"
          }
        ]
      },
      "name": "dataReceived",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "currentTransport": {
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5410
        },
        "end": {
          "line": 197,
          "column": 5,
          "index": 5452
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>the currently used transport layer</p>"
          }
        ]
      },
      "name": "currentTransport",
      "propertyType": "new"
    },
    "server": {
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5553
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 5642
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The server we are currently speaking to (read from the login response)</p>"
          }
        ]
      },
      "name": "server",
      "propertyType": "new",
      "event": "changedServer",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "name": {
      "location": {
        "start": {
          "line": 208,
          "column": 4,
          "index": 5649
        },
        "end": {
          "line": 211,
          "column": 5,
          "index": 5706
        }
      },
      "name": "name",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "backend": {
      "location": {
        "start": {
          "line": 220,
          "column": 4,
          "index": 5868
        },
        "end": {
          "line": 220,
          "column": 17,
          "index": 5881
        }
      },
      "type": "variable",
      "access": "public"
    },
    "backendName": {
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5887
        },
        "end": {
          "line": 221,
          "column": 21,
          "index": 5904
        }
      },
      "type": "variable",
      "access": "public"
    },
    "_type": {
      "location": {
        "start": {
          "line": 222,
          "column": 4,
          "index": 5910
        },
        "end": {
          "line": 222,
          "column": 15,
          "index": 5921
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "backendLoginUrl": {
      "location": {
        "start": {
          "line": 223,
          "column": 4,
          "index": 5927
        },
        "end": {
          "line": 223,
          "column": 25,
          "index": 5948
        }
      },
      "type": "variable",
      "access": "public"
    },
    "addresses": {
      "location": {
        "start": {
          "line": 224,
          "column": 4,
          "index": 5954
        },
        "end": {
          "line": 224,
          "column": 19,
          "index": 5969
        }
      },
      "type": "variable",
      "access": "public"
    },
    "initialAddresses": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 6003
        },
        "end": {
          "line": 225,
          "column": 26,
          "index": 6025
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "filters": {
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 6103
        },
        "end": {
          "line": 226,
          "column": 17,
          "index": 6116
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "user": {
      "location": {
        "start": {
          "line": 227,
          "column": 4,
          "index": 6148
        },
        "end": {
          "line": 227,
          "column": 14,
          "index": 6158
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "pass": {
      "location": {
        "start": {
          "line": 228,
          "column": 4,
          "index": 6184
        },
        "end": {
          "line": 228,
          "column": 14,
          "index": 6194
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "device": {
      "location": {
        "start": {
          "line": 229,
          "column": 4,
          "index": 6224
        },
        "end": {
          "line": 229,
          "column": 16,
          "index": 6236
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "session": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 6267
        },
        "end": {
          "line": 230,
          "column": 17,
          "index": 6280
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "loginSettings": {
      "location": {
        "start": {
          "line": 232,
          "column": 4,
          "index": 6309
        },
        "end": {
          "line": 232,
          "column": 23,
          "index": 6328
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "headers": {
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 6334
        },
        "end": {
          "line": 233,
          "column": 17,
          "index": 6347
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__lastError": {
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 6353
        },
        "end": {
          "line": 234,
          "column": 21,
          "index": 6370
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getType": {
      "location": {
        "start": {
          "line": 236,
          "column": 4,
          "index": 6377
        },
        "end": {
          "line": 238,
          "column": 5,
          "index": 6419
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{string} e.g. openhab, mqtt or knxd",
            "type": "string",
            "description": " e.g. openhab, mqtt or knxd"
          }
        ]
      }
    },
    "_applyConnected": {
      "location": {
        "start": {
          "line": 241,
          "column": 4,
          "index": 6448
        },
        "end": {
          "line": 245,
          "column": 5,
          "index": 6547
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "connected"
      ]
    },
    "setInitialAddresses": {
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 6554
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 6633
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array}"
          }
        ]
      }
    },
    "setBackend": {
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 6640
        },
        "end": {
          "line": 293,
          "column": 5,
          "index": 8196
        }
      },
      "type": "function",
      "access": "public"
    },
    "getBackend": {
      "location": {
        "start": {
          "line": 295,
          "column": 4,
          "index": 8203
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 8250
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      }
    },
    "beforeSend": {
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 8384
        },
        "end": {
          "line": 314,
          "column": 5,
          "index": 8795
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>manipulates the header of the current ajax query before it is been send to the server</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xhr",
            "paramName": "xhr",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getResourcePath": {
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 8802
        },
        "end": {
          "line": 320,
          "column": 5,
          "index": 8994
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, chart)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, chart)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "params {Map?} optional data needed to generate the resource path",
            "paramName": "params",
            "description": " optional data needed to generate the resource path",
            "optional": true,
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} relative path to the resource, returns <code>null</code> when the backend does not provide that resource",
            "type": "String|null",
            "description": " relative path to the resource, returns <code>null</code> when the backend does not provide that resource"
          }
        ]
      }
    },
    "setResourcePath": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 9001
        },
        "end": {
          "line": 324,
          "column": 5,
          "index": 9079
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String} Name of the resource (e.g. login, read, write, chart)",
            "paramName": "name",
            "description": " Name of the resource (e.g. login, read, write, chart)",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "path {String} relative path to the resource",
            "paramName": "path",
            "description": " relative path to the resource",
            "type": "String"
          }
        ]
      }
    },
    "hasCustomChartsDataProcessor": {
      "location": {
        "start": {
          "line": 326,
          "column": 4,
          "index": 9086
        },
        "end": {
          "line": 328,
          "column": 5,
          "index": 9144
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "processChartsData": {
      "location": {
        "start": {
          "line": 329,
          "column": 4,
          "index": 9150
        },
        "end": {
          "line": 331,
          "column": 5,
          "index": 9200
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var}"
          },
          {
            "name": "@param",
            "body": "config {{scaling: number, offset: number}}",
            "paramName": "config",
            "description": "}",
            "type": "{scaling: number, offset: number"
          }
        ]
      }
    },
    "subscribe": {
      "location": {
        "start": {
          "line": 341,
          "column": 4,
          "index": 9436
        },
        "end": {
          "line": 359,
          "column": 5,
          "index": 10055
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Subscribe to the addresses in the parameter. The second parameter\n (filter) is optional</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array?} addresses to subscribe to",
            "paramName": "addresses",
            "description": " addresses to subscribe to",
            "optional": true,
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "filters {Array?} Filters",
            "paramName": "filters",
            "description": " Filters",
            "optional": true,
            "type": "Array"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "addSubscription": {
      "location": {
        "start": {
          "line": 361,
          "column": 4,
          "index": 10062
        },
        "end": {
          "line": 368,
          "column": 5,
          "index": 10257
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "address {String}"
          }
        ]
      }
    },
    "login": {
      "location": {
        "start": {
          "line": 381,
          "column": 4,
          "index": 10755
        },
        "end": {
          "line": 409,
          "column": 5,
          "index": 11763
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function starts the communication by a login and then runs the\n ongoing communication task</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "loginOnly {Boolean} if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "paramName": "loginOnly",
            "description": " if true only login and backend configuration, no subscription\n                            to addresses (default: false)",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "credentials {Map?} not used in this client",
            "paramName": "credentials",
            "description": " not used in this client",
            "optional": true,
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} call this function when login is done",
            "paramName": "callback",
            "description": " call this function when login is done",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context for the callback (this)",
            "paramName": "context",
            "description": " context for the callback (this)",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "getResponse": {
      "location": {
        "start": {
          "line": 414,
          "column": 4,
          "index": 11871
        },
        "end": {
          "line": 437,
          "column": 6,
          "index": 12441
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the json response from the parameter received from the used XHR transport</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "getResponseHeader": {
      "location": {
        "start": {
          "line": 439,
          "column": 4,
          "index": 12448
        },
        "end": {
          "line": 449,
          "column": 6,
          "index": 12744
        }
      },
      "type": "variable",
      "access": "public"
    },
    "getQueryString": {
      "location": {
        "start": {
          "line": 451,
          "column": 4,
          "index": 12751
        },
        "end": {
          "line": 471,
          "column": 5,
          "index": 13451
        }
      },
      "type": "function",
      "access": "public"
    },
    "doRequest": {
      "location": {
        "start": {
          "line": 482,
          "column": 4,
          "index": 13836
        },
        "end": {
          "line": 545,
          "column": 6,
          "index": 15785
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an XHR request. The request type depends von the \"cv.xhr\" environment setting\n (currently \"qx\" and \"jquery\" are supported)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "url {String} URI",
            "paramName": "url",
            "description": " URI",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Map} request data",
            "paramName": "data",
            "description": " request data",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "callback {Function} success callback",
            "paramName": "callback",
            "description": " success callback",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context fot the callback",
            "paramName": "context",
            "description": " context fot the callback",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.io.request.Xhr|jQuery}",
            "type": "qx.io.request.Xhr|jQuery",
            "description": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "_onError": {
      "location": {
        "start": {
          "line": 551,
          "column": 4,
          "index": 15880
        },
        "end": {
          "line": 566,
          "column": 5,
          "index": 16305
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle errors from qooxdoos XHR request</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {Event}"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getLastError": {
      "location": {
        "start": {
          "line": 573,
          "column": 4,
          "index": 16485
        },
        "end": {
          "line": 575,
          "column": 5,
          "index": 16538
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the last recorded error</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}",
            "type": "{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number",
            "description": "|*}"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "handleLogin": {
      "location": {
        "start": {
          "line": 591,
          "column": 4,
          "index": 17052
        },
        "end": {
          "line": 614,
          "column": 5,
          "index": 17963
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles login response, applies backend configuration if send by\n backend and forwards to the configurated transport handleSession\n function\n Parameter vary dependent from the XHR type used\n qx (Qooxdoo):\n   ev {Event} the 'success' event from the XHR request\n jQuery:\n   data {Object} The JSON data returned from the server\n   textStatus {String} a string describing the status\n   request {Object} the jqXHR object</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 620,
          "column": 4,
          "index": 18042
        },
        "end": {
          "line": 626,
          "column": 5,
          "index": 18227
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function stops an ongoing connection</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "buildRequest": {
      "location": {
        "start": {
          "line": 634,
          "column": 4,
          "index": 18392
        },
        "end": {
          "line": 657,
          "column": 5,
          "index": 19033
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Build the URL part that contains the addresses and filters</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "addresses {Array}"
          },
          {
            "name": "@param",
            "body": "asString",
            "paramName": "asString",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "write": {
      "location": {
        "start": {
          "line": 665,
          "column": 4,
          "index": 19201
        },
        "end": {
          "line": 686,
          "column": 5,
          "index": 19738
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function sends a value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} address to send the value to",
            "paramName": "address",
            "description": " address to send the value to",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String} value to send",
            "paramName": "value",
            "description": " value to send",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "authorize": {
      "location": {
        "start": {
          "line": 689,
          "column": 4,
          "index": 19800
        },
        "end": {
          "line": 689,
          "column": 21,
          "index": 19817
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "restart": {
      "location": {
        "start": {
          "line": 695,
          "column": 4,
          "index": 19889
        },
        "end": {
          "line": 697,
          "column": 5,
          "index": 19958
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Restart the connection</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "full",
            "paramName": "full",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "terminate": {
      "location": {
        "start": {
          "line": 699,
          "column": 4,
          "index": 19965
        },
        "end": {
          "line": 701,
          "column": 5,
          "index": 20026
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "update": {
      "location": {
        "start": {
          "line": 703,
          "column": 4,
          "index": 20033
        },
        "end": {
          "line": 703,
          "column": 19,
          "index": 20048
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "json",
            "paramName": "json",
            "type": ""
          }
        ]
      }
    },
    "record": {
      "location": {
        "start": {
          "line": 710,
          "column": 4,
          "index": 20235
        },
        "end": {
          "line": 710,
          "column": 25,
          "index": 20256
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Can be overridden to record client communication with backend</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of event to record",
            "paramName": "type",
            "description": " type of event to record",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Object} data to record",
            "paramName": "data",
            "description": " data to record",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "showError": {
      "location": {
        "start": {
          "line": 718,
          "column": 4,
          "index": 20483
        },
        "end": {
          "line": 718,
          "column": 37,
          "index": 20516
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Can be overridden to provide an error handler for client errors</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {Number} one of cv.io.Client.ERROR_CODES",
            "paramName": "type",
            "description": " one of cv.io.Client.ERROR_CODES",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "message {String} detailed error message",
            "paramName": "message",
            "description": " detailed error message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "args",
            "paramName": "args",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ]
    },
    "hasProvider": {
      "location": {
        "start": {
          "line": 720,
          "column": 4,
          "index": 20523
        },
        "end": {
          "line": 722,
          "column": 5,
          "index": 20568
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      }
    },
    "getProviderUrl": {
      "location": {
        "start": {
          "line": 723,
          "column": 4,
          "index": 20574
        },
        "end": {
          "line": 725,
          "column": 5,
          "index": 20621
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      }
    },
    "getProviderConvertFunction": {
      "location": {
        "start": {
          "line": 726,
          "column": 4,
          "index": 20627
        },
        "end": {
          "line": 728,
          "column": 5,
          "index": 20694
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ]
      }
    },
    "getProviderData": {
      "location": {
        "start": {
          "line": 729,
          "column": 4,
          "index": 20700
        },
        "end": {
          "line": 731,
          "column": 5,
          "index": 20767
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.io.IClient",
      "appearsIn": [
        "cv.io.IClient"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "name {String}"
          },
          {
            "name": "@param",
            "body": "format {String} 'monaco' for texteditor and 'dp' for Tree editor",
            "paramName": "format",
            "description": " 'monaco' for texteditor and 'dp' for Tree editor",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<variant>|null}",
            "type": "Promise<variant>|null",
            "description": ""
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getServer": {
      "type": "function",
      "name": "getServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for server"
          }
        ]
      }
    },
    "setServer": {
      "type": "function",
      "name": "setServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>server</code>.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for server"
          }
        ]
      }
    },
    "resetServer": {
      "type": "function",
      "name": "resetServer",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>server</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #server}."
          }
        ]
      }
    },
    "getDataReceived": {
      "type": "function",
      "name": "getDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "isDataReceived": {
      "type": "function",
      "name": "isDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for dataReceived"
          }
        ]
      }
    },
    "setDataReceived": {
      "type": "function",
      "name": "setDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dataReceived</code>.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for dataReceived"
          }
        ]
      }
    },
    "resetDataReceived": {
      "type": "function",
      "name": "resetDataReceived",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>dataReceived</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #dataReceived}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getRunning": {
      "type": "function",
      "name": "getRunning",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>running</code>.\n\nFor further details take a look at the property definition: {@link #running}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for running"
          }
        ]
      }
    },
    "isRunning": {
      "type": "function",
      "name": "isRunning",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>running</code>.\n\nFor further details take a look at the property definition: {@link #running}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for running"
          }
        ]
      }
    },
    "setRunning": {
      "type": "function",
      "name": "setRunning",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>running</code>.\n\nFor further details take a look at the property definition: {@link #running}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for running"
          }
        ]
      }
    },
    "resetRunning": {
      "type": "function",
      "name": "resetRunning",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>running</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #running}."
          }
        ]
      }
    },
    "getCurrentTransport": {
      "type": "function",
      "name": "getCurrentTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>currentTransport</code>.\n\nFor further details take a look at the property definition: {@link #currentTransport}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for currentTransport"
          }
        ]
      }
    },
    "setCurrentTransport": {
      "type": "function",
      "name": "setCurrentTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>currentTransport</code>.\n\nFor further details take a look at the property definition: {@link #currentTransport}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for currentTransport"
          }
        ]
      }
    },
    "resetCurrentTransport": {
      "type": "function",
      "name": "resetCurrentTransport",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>currentTransport</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #currentTransport}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 739,
        "column": 2,
        "index": 20915
      },
      "end": {
        "line": 741,
        "column": 3,
        "index": 20948
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}