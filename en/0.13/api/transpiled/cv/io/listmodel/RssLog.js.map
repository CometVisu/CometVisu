{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "listmodel",
    "IListModel",
    "construct",
    "initModel",
    "data",
    "Array",
    "_initRequest",
    "statics",
    "REQUIRES",
    "properties",
    "model",
    "check",
    "deferredInit",
    "database",
    "nullable",
    "apply",
    "filter",
    "future",
    "limit",
    "init",
    "transform",
    "events",
    "finished",
    "members",
    "__request",
    "_parseInt",
    "value",
    "parseInt",
    "_applyRequestData",
    "old",
    "name",
    "getRequestData",
    "prototype",
    "hasOwnProperty",
    "call",
    "request",
    "Xhr",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "requestData",
    "getDatabase",
    "getFilter",
    "f",
    "getLimit",
    "getFuture",
    "j",
    "set",
    "accept",
    "method",
    "addListener",
    "__updateModel",
    "ev",
    "error",
    "getPath",
    "getTarget",
    "getResponse",
    "getUrl",
    "fireDataEvent",
    "response",
    "getResponseContentType",
    "getModel",
    "replace",
    "responseData",
    "feed",
    "entries",
    "refresh",
    "_sendWithPromise",
    "message",
    "Promise",
    "resolve",
    "reject",
    "addListenerOnce",
    "getData",
    "Error",
    "send",
    "defer",
    "clazz",
    "Registry",
    "register",
    "RssLog"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/listmodel/RssLog.js"
  ],
  "sourcesContent": [
    "/**\n * Data retrieval for RssLog database.\n */\nqx.Class.define('cv.io.listmodel.RssLog', {\n  extend: qx.core.Object,\n  implement: cv.io.listmodel.IListModel,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.initModel(new qx.data.Array());\n    this._initRequest();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    REQUIRES: ['php']\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    model: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    database: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    filter: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    future: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    limit: {\n      check: 'Number',\n      init: 0,\n      transform: '_parseInt',\n      apply: '_applyRequestData'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    finished: 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __request: null,\n\n    _parseInt(value) {\n      if (typeof value === 'string') {\n        return parseInt(value);\n      }\n      return value;\n    },\n\n    _applyRequestData(value, old, name) {\n      if (this.__request) {\n        const data = this.__request.getRequestData();\n        if (value) {\n          data[name] = value;\n        } else if (Object.prototype.hasOwnProperty.call(data, name)) {\n          delete data[name];\n        }\n      }\n    },\n\n    _initRequest() {\n      this.__request = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri('plugins/rsslog/rsslog.php'));\n      const requestData = {};\n      if (this.getDatabase()) {\n        requestData.database = this.getDatabase();\n      }\n      if (this.getFilter()) {\n        requestData.f = this.getFilter();\n      }\n      if (this.getLimit()) {\n        requestData.limit = this.getLimit();\n      }\n      if (this.getFuture()) {\n        requestData.future = this.getFuture();\n      }\n      requestData.j = 1;\n      this.__request.set({\n        accept: 'application/json',\n        requestData: requestData,\n        method: 'GET'\n      });\n\n      this.__request.addListener('success', this.__updateModel, this);\n      this.__request.addListener('error', ev => {\n        this.error(\n          'C: #rss_%s, Error: %s, Feed: %s',\n          this.getPath(),\n          ev.getTarget().getResponse(),\n          this.__request.getUrl()\n        );\n        this.fireDataEvent('finished', false);\n      });\n    },\n\n    __updateModel(ev) {\n      const response = ev.getTarget().getResponse();\n      if (typeof response === 'string') {\n        // no json -> error\n        this.error('Expected JSON, but got response MIME:', ev.getTarget().getResponseContentType());\n        this.error(response);\n        this.fireDataEvent('finished', false);\n      } else {\n        const model = this.getModel();\n        model.replace(response.responseData.feed.entries);\n        this.fireDataEvent('finished', true);\n      }\n    },\n\n    async refresh() {\n      if (this.__request) {\n        try {\n          await this._sendWithPromise();\n        } catch (e) {\n          this.error(e.message);\n        }\n      }\n    },\n\n    async _sendWithPromise() {\n      return new Promise((resolve, reject) => {\n        this.addListenerOnce('finished', ev => {\n          if (ev.getData()) {\n            resolve();\n          } else {\n            reject(new Error('request failed'));\n          }\n        });\n        this.__request.send();\n      });\n    }\n  },\n\n  defer(clazz) {\n    cv.io.listmodel.Registry.register(clazz);\n  }\n});\n"
  ],
  "mappings": "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"
}