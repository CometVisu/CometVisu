{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "listmodel",
    "IListModel",
    "construct",
    "initModel",
    "data",
    "Array",
    "_initRequest",
    "statics",
    "REQUIRES",
    "properties",
    "model",
    "check",
    "deferredInit",
    "database",
    "nullable",
    "apply",
    "filter",
    "future",
    "limit",
    "init",
    "transform",
    "events",
    "finished",
    "members",
    "__request",
    "_parseInt",
    "value",
    "parseInt",
    "_applyRequestData",
    "old",
    "name",
    "getRequestData",
    "prototype",
    "hasOwnProperty",
    "call",
    "request",
    "Xhr",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "requestData",
    "getDatabase",
    "getFilter",
    "f",
    "getLimit",
    "getFuture",
    "j",
    "set",
    "accept",
    "method",
    "addListener",
    "__updateModel",
    "ev",
    "error",
    "getPath",
    "getTarget",
    "getResponse",
    "getUrl",
    "fireDataEvent",
    "response",
    "getResponseContentType",
    "getModel",
    "replace",
    "responseData",
    "feed",
    "entries",
    "refresh",
    "_sendWithPromise",
    "message",
    "Promise",
    "resolve",
    "reject",
    "addListenerOnce",
    "getData",
    "Error",
    "send",
    "defer",
    "clazz",
    "Registry",
    "register",
    "RssLog"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/listmodel/RssLog.js"
  ],
  "sourcesContent": [
    "/**\n * Data retrieval for RssLog database.\n */\nqx.Class.define('cv.io.listmodel.RssLog', {\n  extend: qx.core.Object,\n  implement: cv.io.listmodel.IListModel,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.initModel(new qx.data.Array());\n    this._initRequest();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    REQUIRES: ['php']\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    model: {\n      check: 'qx.data.Array',\n      deferredInit: true\n    },\n\n    database: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    filter: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    future: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyRequestData'\n    },\n\n    limit: {\n      check: 'Number',\n      init: 0,\n      transform: '_parseInt',\n      apply: '_applyRequestData'\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    finished: 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __request: null,\n\n    _parseInt(value) {\n      if (typeof value === 'string') {\n        return parseInt(value);\n      }\n      return value;\n    },\n\n    _applyRequestData(value, old, name) {\n      if (this.__request) {\n        const data = this.__request.getRequestData();\n        if (value) {\n          data[name] = value;\n        } else if (Object.prototype.hasOwnProperty.call(data, name)) {\n          delete data[name];\n        }\n      }\n    },\n\n    _initRequest() {\n      this.__request = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri('plugins/rsslog/rsslog.php'));\n      const requestData = {};\n      if (this.getDatabase()) {\n        requestData.database = this.getDatabase();\n      }\n      if (this.getFilter()) {\n        requestData.f = this.getFilter();\n      }\n      if (this.getLimit()) {\n        requestData.limit = this.getLimit();\n      }\n      if (this.getFuture()) {\n        requestData.future = this.getFuture();\n      }\n      requestData.j = 1;\n      this.__request.set({\n        accept: 'application/json',\n        requestData: requestData,\n        method: 'GET'\n      });\n\n      this.__request.addListener('success', this.__updateModel, this);\n      this.__request.addListener('error', ev => {\n        this.error(\n          'C: #rss_%s, Error: %s, Feed: %s',\n          this.getPath(),\n          ev.getTarget().getResponse(),\n          this.__request.getUrl()\n        );\n        this.fireDataEvent('finished', false);\n      });\n    },\n\n    __updateModel(ev) {\n      const response = ev.getTarget().getResponse();\n      if (typeof response === 'string') {\n        // no json -> error\n        this.error('Expected JSON, but got response MIME:', ev.getTarget().getResponseContentType());\n        this.error(response);\n      } else {\n        const model = this.getModel();\n        model.replace(response.responseData.feed.entries);\n      }\n      this.fireDataEvent('finished', false);\n    },\n\n    async refresh() {\n      if (this.__request) {\n        try {\n          await this._sendWithPromise();\n        } catch (e) {\n          this.error(e.message);\n        }\n      }\n    },\n\n    async _sendWithPromise() {\n      return new Promise((resolve, reject) => {\n        this.addListenerOnce('finished', ev => {\n          if (ev.getData()) {\n            resolve();\n          } else {\n            reject(new Error('request failed'));\n          }\n        });\n        this.__request.send();\n      });\n    }\n  },\n\n  defer(clazz) {\n    cv.io.listmodel.Registry.register(clazz);\n  }\n});\n"
  ],
  "mappings": "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"
}