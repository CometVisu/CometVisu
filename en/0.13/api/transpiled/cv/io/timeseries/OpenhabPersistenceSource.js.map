{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "timeseries",
    "AbstractTimeSeriesSource",
    "members",
    "_backendUrl",
    "_baseRequestConfig",
    "_item",
    "getRequestConfig",
    "start",
    "end",
    "config",
    "url",
    "options",
    "proxy",
    "resourceConf",
    "getConfig",
    "client",
    "BackendConnections",
    "getClientByType",
    "getBackendUrl",
    "itemName",
    "name",
    "baseUrl",
    "params",
    "authority",
    "push",
    "slice",
    "timeRange",
    "getTimeRange",
    "toISOString",
    "split",
    "join",
    "processResponse",
    "response",
    "data",
    "newRrd",
    "lastValue",
    "value",
    "j",
    "l",
    "length",
    "parseFloat",
    "state",
    "time",
    "Array",
    "isArray",
    "error",
    "__convertTimes",
    "__P_558_0",
    "Date",
    "test",
    "d",
    "setTime",
    "parseInt",
    "OpenhabPersistenceSource"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/timeseries/OpenhabPersistenceSource.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n/**\n *\n */\nqx.Class.define('cv.io.timeseries.OpenhabPersistenceSource', {\n  extend: cv.io.timeseries.AbstractTimeSeriesSource,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _backendUrl: null,\n    _baseRequestConfig: null,\n    _item: null,\n\n    getRequestConfig(start, end) {\n      const config = {\n        url: '',\n        options: {},\n        proxy: false\n      };\n      const resourceConf = this.getConfig();\n      if (!resourceConf) {\n        return config;\n      }\n      if (!this._baseRequestConfig) {\n        if (!this._backendUrl) {\n          const client = cv.io.BackendConnections.getClientByType('openhab');\n          if (!client) {\n            // use the default\n            this._backendUrl = '/rest/';\n          } else {\n            this._backendUrl = client.getBackendUrl();\n          }\n        }\n        let itemName = resourceConf.name;\n        let baseUrl = this._backendUrl + 'persistence/items/' + itemName;\n        const params = [];\n        if (resourceConf.authority) {\n          params.push('serviceId=' + resourceConf.authority);\n        }\n        this._baseRequestConfig = {\n          baseUrl: baseUrl,\n          params: params\n        };\n      }\n      let url = this._baseRequestConfig.baseUrl;\n      let params = this._baseRequestConfig.params.slice();\n      const timeRange = this.getTimeRange(start, end);\n      if (timeRange.start) {\n        params.push('starttime=' + timeRange.start.toISOString().split('.')[0]+'Z');\n        params.push('endtime=' + timeRange.end.toISOString().split('.')[0]+'Z');\n      }\n\n      url += '?' + params.join('&');\n      config.url = url;\n      return config;\n    },\n\n    /**\n     * Converts response from openHAB persistence service\n     * @param response\n     * @returns {(number|number)[][]|*[]}\n     */\n    processResponse(response) {\n      if (response) {\n        if (response.data) {\n          const data = response.data;\n          const newRrd = [];\n          let lastValue;\n          let value;\n          for (let j = 0, l = data.length; j < l; j++) {\n            value = parseFloat(data[j].state);\n            if (value !== lastValue) {\n              newRrd.push([data[j].time, value]);\n            }\n            lastValue = value;\n          }\n          return newRrd;\n        } else if (Array.isArray(response)) {\n          return response;\n        }\n      }\n      this.error('invalid chart data response');\n      return [];\n    },\n\n    __convertTimes(time) {\n      if (time === 'now') {\n        return new Date();\n      } else if (/^[\\d]+$/.test(time)) {\n        let d = new Date();\n        d.setTime(parseInt(time) * 1000);\n        return d;\n      }\n      return null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}