{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "timeseries",
    "AbstractTimeSeriesSource",
    "members",
    "_backendUrl",
    "_baseRequestConfig",
    "_queryTemplate",
    "_isInline",
    "isInline",
    "_init",
    "resourceUrl",
    "getUrl",
    "parts",
    "pathname",
    "substring",
    "split",
    "bucket",
    "hostname",
    "options",
    "method",
    "searchParams",
    "org",
    "username",
    "measurement",
    "shift",
    "field",
    "queryParts",
    "concat",
    "additional",
    "allowedAg",
    "_iterator",
    "_createForOfIteratorHelper",
    "_step",
    "s",
    "n",
    "done",
    "_step$value",
    "_slicedToArray",
    "value",
    "key",
    "startsWith",
    "includes",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "aggregateWindow",
    "error",
    "err",
    "e",
    "f",
    "push",
    "join",
    "url",
    "toString",
    "proxy",
    "setQueryTemplate",
    "template",
    "_getAgWindowEveryForSeries",
    "series",
    "getRequestConfig",
    "start",
    "end",
    "config",
    "assign",
    "timeRange",
    "getTimeRange",
    "range",
    "toISOString",
    "encodeURIComponent",
    "requestData",
    "replace",
    "processResponse",
    "response",
    "lines",
    "trim",
    "fields",
    "res",
    "timeIndex",
    "indexOf",
    "valueIndex",
    "log",
    "Logger",
    "lineEntries",
    "date",
    "_iterator2",
    "_step2",
    "line",
    "parseFloat",
    "Date",
    "getTime",
    "FluxSource"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/timeseries/FluxSource.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n/**\n * Handle queries to an InfluxDB over the flux API\n */\nqx.Class.define('cv.io.timeseries.FluxSource', {\n  extend: cv.io.timeseries.AbstractTimeSeriesSource,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _backendUrl: null,\n    _baseRequestConfig: null,\n    _queryTemplate: null,\n    _isInline: null,\n\n    isInline() {\n      return this._isInline;\n    },\n\n    _init() {\n      const resourceUrl = this.getUrl();\n      if (resourceUrl) {\n        const parts = resourceUrl.pathname.substring(1).split('/');\n        const bucket = resourceUrl.hostname;\n        const options = {\n          method: 'POST',\n          'config-section': 'influx',\n          searchParams: {\n            org: resourceUrl.username\n          }\n        };\n        // for inline bucket the query template is defined in the config and is provided externally\n        if (bucket !== 'inline') {\n          const measurement = parts.shift();\n          const field = parts.shift() || 'value';\n          const queryParts = [\n            `from(bucket:\"${bucket}\")`,\n            '|> range($$RANGE$$)',\n            `|> filter(fn: (r) => r._measurement == \"${measurement}\" and r._field == \"${field}\")`\n          ];\n          const additional = {};\n          const allowedAg = ['fn', 'every', 'column', 'createEmpty', 'location', 'offset', 'period', 'timeDst', 'timeSrc'];\n          for (const [key, value] of resourceUrl.searchParams) {\n            if (key.startsWith('ag-')) {\n              if (allowedAg.includes(key.substring(3))) {\n                if (!Object.prototype.hasOwnProperty.call(additional, 'aggregateWindow')) {\n                  additional.aggregateWindow = {};\n                }\n                additional.aggregateWindow[key.substring(3)] = value;\n              } else {\n                this.error(`skipping invalid aggregationWindow parameter ${key.substring(3)}`);\n              }\n            }\n          }\n          if (Object.prototype.hasOwnProperty.call(additional, 'aggregateWindow')) {\n            if (Object.prototype.hasOwnProperty.call(additional.aggregateWindow, 'every')) {\n              let parts = [];\n              for (const key in additional.aggregateWindow) {\n                parts.push(`${key}: ${additional.aggregateWindow[key]}`);\n              }\n              // use default\n              if (!Object.prototype.hasOwnProperty.call(additional.aggregateWindow, 'fn')) {\n                parts.push('fn: mean');\n              }\n              queryParts.push(`|> aggregateWindow(${parts.join(', ')})`);\n            } else {\n              this.error('aggregateWindow is missing \"every\" and/or \"fn\" parameter -> skipped.');\n            }\n          }\n\n          this._queryTemplate = queryParts.join('\\n  ');\n        } else {\n          this._isInline = true;\n        }\n        this._baseRequestConfig = {\n          url: resourceUrl.toString(),\n          proxy: true,\n          options: options\n        };\n      } else {\n        this._baseRequestConfig = {\n          url: '',\n          proxy: false,\n          options: {}\n        };\n      }\n    },\n\n    setQueryTemplate(template) {\n      this._queryTemplate = template;\n    },\n\n    _getAgWindowEveryForSeries(series) {\n      switch (series) {\n        case 'hour':\n          return '1m';\n        case 'day':\n          return '1h';\n        case 'week':\n          return '6h';\n        case 'month':\n          return '1d';\n        case 'year':\n          return '1mo';\n        default:\n          return '1d';\n      }\n    },\n\n    getRequestConfig(start, end, series) {\n      const config = Object.assign({}, this._baseRequestConfig);\n      const timeRange = this.getTimeRange(start, end);\n      let range = 'start: -1d';\n      if (timeRange.start) {\n        range = `start: ${timeRange.start.toISOString().split('.')[0]+'Z'}, stop: ${timeRange.end.toISOString().split('.')[0]+'Z'}`;\n      }\n      // add time range to the resource url to make the request cache work\n      config.url += `&range=${encodeURIComponent(range)}`;\n      config.options.requestData = this._queryTemplate.replace('$$RANGE$$', range);\n      if (!config.options.requestData.includes('aggregateWindow')) {\n        // get aggregation from series\n        config.options.requestData += `\\n  |> aggregateWindow(every: ${this._getAgWindowEveryForSeries(series)}, fn: mean)`;\n      }\n      return config;\n    },\n\n    /**\n     * Converts response from openHAB persistence service\n     * @param response {String}\n     * @returns {(number|number)[][]|*[]}\n     */\n    processResponse(response) {\n      const lines = response.replace(/\\r/g, '').trim().split('\\n');\n      let fields = lines.shift().split(',');\n      const res = [];\n      const timeIndex = fields.indexOf('_time');\n      const valueIndex = fields.indexOf('_value');\n      if (timeIndex < 0 || valueIndex < 0) {\n        qx.log.Logger.error(this, 'missing _time or _value field in flux response: ' + fields.join(','));\n        return res;\n      }\n      let value;\n      let lineEntries;\n      let date;\n      for (let line of lines) {\n        lineEntries = line.split(',');\n        if (lineEntries[valueIndex]) {\n          value = parseFloat(lineEntries[valueIndex]);\n          date = new Date(lineEntries[timeIndex]);\n          res.push([date.getTime(), value]);\n        }\n      }\n      return res;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}