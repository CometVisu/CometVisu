{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "timeseries",
    "AbstractTimeSeriesSource",
    "members",
    "_backendUrl",
    "_baseRequestConfig",
    "_queryTemplate",
    "_timeFormat",
    "_defaultResolution",
    "_defaultFunc",
    "_init",
    "resourceConf",
    "getConfig",
    "util",
    "format",
    "DateFormat",
    "fileName",
    "name",
    "url",
    "concat",
    "proxy",
    "options",
    "key",
    "params",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "getRequestConfig",
    "start",
    "end",
    "series",
    "offset",
    "config",
    "assign",
    "rrdStart",
    "rrdEnd",
    "processResponse",
    "response",
    "RRDSource"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/timeseries/RRDSource.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n/**\n * Handle queries to an RRD\n */\nqx.Class.define('cv.io.timeseries.RRDSource', {\n  extend: cv.io.timeseries.AbstractTimeSeriesSource,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _backendUrl: null,\n    _baseRequestConfig: null,\n    _queryTemplate: null,\n    _timeFormat: null,\n    _defaultResolution: null,\n    _defaultFunc: null,\n\n    _init() {\n      const resourceConf = this.getConfig();\n      this._timeFormat = new qx.util.format.DateFormat('dd.MM.yyyy HH:mm');\n      this._defaultResolution = 300;\n      this._defaultFunc = 'AVERAGE';\n      if (resourceConf) {\n        let fileName = resourceConf.name;\n        this._baseRequestConfig = {\n          url: `/cgi-bin/rrdfetch?rrd=${fileName}.rrd`,\n          proxy: false,\n          options: {}\n        };\n        for (const key in resourceConf.params) {\n          this._baseRequestConfig.url += `&${key}=${resourceConf.params[key]}`;\n        }\n        if (!Object.prototype.hasOwnProperty.call(resourceConf.params, 'res')) {\n          this._baseRequestConfig.url += `&res=${this._defaultResolution}`;\n        }\n        if (!Object.prototype.hasOwnProperty.call(resourceConf.params, 'ds')) {\n          this._baseRequestConfig.url += `&ds=${this._defaultFunc}`;\n        }\n      } else {\n        this._baseRequestConfig = {\n          url: '',\n          proxy: false,\n          options: {}\n        };\n      }\n    },\n\n    getRequestConfig(start, end, series, offset) {\n      const config = Object.assign({}, this._baseRequestConfig);\n      let rrdStart = `now-${offset+1}${series}`;\n      let rrdEnd = 'now';\n      if (offset > 0) {\n        rrdEnd = `now-${offset}${series}`;\n      }\n      config.url += `&start=${rrdStart}&end=${rrdEnd}`;\n      return config;\n    },\n\n    processResponse(response) {\n      return response;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,4BAA4B,EAAE;IAC5CC,MAAM,EAAEC,EAAE,CAACC,EAAE,CAACC,UAAU,CAACC,wBAAwB;IAEjD;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,cAAc,EAAE,IAAI;MACpBC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,YAAY,EAAE,IAAI;MAElBC,KAAK,WAAAA,MAAA,EAAG;QACN,IAAMC,YAAY,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;QACrC,IAAI,CAACL,WAAW,GAAG,IAAIf,EAAE,CAACqB,IAAI,CAACC,MAAM,CAACC,UAAU,CAAC,kBAAkB,CAAC;QACpE,IAAI,CAACP,kBAAkB,GAAG,GAAG;QAC7B,IAAI,CAACC,YAAY,GAAG,SAAS;QAC7B,IAAIE,YAAY,EAAE;UAChB,IAAIK,QAAQ,GAAGL,YAAY,CAACM,IAAI;UAChC,IAAI,CAACZ,kBAAkB,GAAG;YACxBa,GAAG,2BAAAC,MAAA,CAA2BH,QAAQ,SAAM;YAC5CI,KAAK,EAAE,KAAK;YACZC,OAAO,EAAE,CAAC;UACZ,CAAC;UACD,KAAK,IAAMC,GAAG,IAAIX,YAAY,CAACY,MAAM,EAAE;YACrC,IAAI,CAAClB,kBAAkB,CAACa,GAAG,QAAAC,MAAA,CAAQG,GAAG,OAAAH,MAAA,CAAIR,YAAY,CAACY,MAAM,CAACD,GAAG,CAAC,CAAE;UACtE;UACA,IAAI,CAACE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChB,YAAY,CAACY,MAAM,EAAE,KAAK,CAAC,EAAE;YACrE,IAAI,CAAClB,kBAAkB,CAACa,GAAG,YAAAC,MAAA,CAAY,IAAI,CAACX,kBAAkB,CAAE;UAClE;UACA,IAAI,CAACgB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChB,YAAY,CAACY,MAAM,EAAE,IAAI,CAAC,EAAE;YACpE,IAAI,CAAClB,kBAAkB,CAACa,GAAG,WAAAC,MAAA,CAAW,IAAI,CAACV,YAAY,CAAE;UAC3D;QACF,CAAC,MAAM;UACL,IAAI,CAACJ,kBAAkB,GAAG;YACxBa,GAAG,EAAE,EAAE;YACPE,KAAK,EAAE,KAAK;YACZC,OAAO,EAAE,CAAC;UACZ,CAAC;QACH;MACF,CAAC;MAEDO,gBAAgB,WAAAA,iBAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAC3C,IAAMC,MAAM,GAAGT,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC7B,kBAAkB,CAAC;QACzD,IAAI8B,QAAQ,UAAAhB,MAAA,CAAUa,MAAM,GAAC,CAAC,EAAAb,MAAA,CAAGY,MAAM,CAAE;QACzC,IAAIK,MAAM,GAAG,KAAK;QAClB,IAAIJ,MAAM,GAAG,CAAC,EAAE;UACdI,MAAM,UAAAjB,MAAA,CAAUa,MAAM,EAAAb,MAAA,CAAGY,MAAM,CAAE;QACnC;QACAE,MAAM,CAACf,GAAG,cAAAC,MAAA,CAAcgB,QAAQ,WAAAhB,MAAA,CAAQiB,MAAM,CAAE;QAChD,OAAOH,MAAM;MACf,CAAC;MAEDI,eAAe,WAAAA,gBAACC,QAAQ,EAAE;QACxB,OAAOA,QAAQ;MACjB;IACF;EACF,CAAC,CAAC;EAlFFvC,EAAE,CAACC,EAAE,CAACC,UAAU,CAACsC,SAAS,CAAC5C,aAAa,GAAGA,aAAa;AAAC"
}