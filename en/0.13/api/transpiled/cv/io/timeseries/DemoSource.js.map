{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "io",
    "timeseries",
    "AbstractTimeSeriesSource",
    "members",
    "_client",
    "_src",
    "_init",
    "BackendConnections",
    "getClientByType",
    "getRawUrl",
    "split",
    "pop",
    "replace",
    "_baseRequestConfig",
    "url",
    "proxy",
    "options",
    "getRequestConfig",
    "start",
    "end",
    "config",
    "getResourcePath",
    "src",
    "processResponse",
    "response",
    "DemoSource"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/io/timeseries/DemoSource.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n/**\n * Only for demo configs, load chart data directly from a json file or s generator\n */\nqx.Class.define('cv.io.timeseries.DemoSource', {\n  extend: cv.io.timeseries.AbstractTimeSeriesSource,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _client: null,\n    _src: null,\n\n    _init() {\n      this._client = cv.io.BackendConnections.getClientByType('mockup');\n      this._src = this.getRawUrl().split('://').pop().replace('@', ':');\n      this._baseRequestConfig = {\n        url: '',\n        proxy: false,\n        options: {}\n      };\n    },\n\n    getRequestConfig(start, end) {\n      const config = this._baseRequestConfig;\n      config.url = this._client.getResourcePath('charts', {\n        src: this._src,\n        start: start,\n        end: end\n      });\n      return config;\n    },\n\n    processResponse(response) {\n      return response;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,MAAM,EAAEC,EAAE,CAACC,EAAE,CAACC,UAAU,CAACC,wBAAwB;IAEjD;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,IAAI;MAEVC,KAAK,WAAAA,MAAA,EAAG;QACN,IAAI,CAACF,OAAO,GAAGL,EAAE,CAACC,EAAE,CAACO,kBAAkB,CAACC,eAAe,CAAC,QAAQ,CAAC;QACjE,IAAI,CAACH,IAAI,GAAG,IAAI,CAACI,SAAS,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;QACjE,IAAI,CAACC,kBAAkB,GAAG;UACxBC,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,KAAK;UACZC,OAAO,EAAE,CAAC;QACZ,CAAC;MACH,CAAC;MAEDC,gBAAgB,WAAAA,iBAACC,KAAK,EAAEC,GAAG,EAAE;QAC3B,IAAMC,MAAM,GAAG,IAAI,CAACP,kBAAkB;QACtCO,MAAM,CAACN,GAAG,GAAG,IAAI,CAACV,OAAO,CAACiB,eAAe,CAAC,QAAQ,EAAE;UAClDC,GAAG,EAAE,IAAI,CAACjB,IAAI;UACda,KAAK,EAAEA,KAAK;UACZC,GAAG,EAAEA;QACP,CAAC,CAAC;QACF,OAAOC,MAAM;MACf,CAAC;MAEDG,eAAe,WAAAA,gBAACC,QAAQ,EAAE;QACxB,OAAOA,QAAQ;MACjB;IACF;EACF,CAAC,CAAC;EAzDFzB,EAAE,CAACC,EAAE,CAACC,UAAU,CAACwB,UAAU,CAAC9B,aAAa,GAAGA,aAAa;AAAC"
}