{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "backendName",
    "backendLoginUrl",
    "Client",
    "CLIENTS",
    "push",
    "backend",
    "loginSettings",
    "loggedIn",
    "callbackAfterLoggedIn",
    "context",
    "loginOnly",
    "backendNameAliases",
    "_type",
    "setBackend",
    "backends",
    "addresses",
    "initialAddresses",
    "filters",
    "user",
    "pass",
    "device",
    "headers",
    "statics",
    "TEST_MODE",
    "ERROR_CODES",
    "CONNECTION",
    "PROTOCOL_MISSING_VERSION",
    "PROTOCOL_INVALID_READ_RESPONSE",
    "PROTOCOL_INVALID_READ_RESPONSE_MISSING_I",
    "stopAll",
    "forEach",
    "client",
    "stop",
    "knxd",
    "oh",
    "oh2",
    "name",
    "baseURL",
    "transport",
    "resources",
    "login",
    "read",
    "write",
    "rrd",
    "maxConnectionAge",
    "maxDataAge",
    "maxRetries",
    "hooks",
    "openhab",
    "properties",
    "running",
    "check",
    "init",
    "event",
    "connected",
    "apply",
    "dataReceived",
    "currentTransport",
    "server",
    "nullable",
    "members",
    "session",
    "__lastError",
    "getType",
    "_applyConnected",
    "value",
    "setInitialAddresses",
    "newBackend",
    "assign",
    "transportFallback",
    "window",
    "EventSource",
    "undefined",
    "substr",
    "getCurrentTransport",
    "LongPolling",
    "dispose",
    "setCurrentTransport",
    "Sse",
    "util",
    "ResponseParser",
    "PARSER",
    "json",
    "parser",
    "Json",
    "parse",
    "getBackend",
    "beforeSend",
    "xhr",
    "headerName",
    "resendHeaders",
    "setRequestHeader",
    "getResourcePath",
    "map",
    "prototype",
    "hasOwnProperty",
    "call",
    "setResourcePath",
    "path",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "data",
    "subscribe",
    "startCommunication",
    "length",
    "connect",
    "credentials",
    "callback",
    "request",
    "u",
    "p",
    "d",
    "doRequest",
    "handleLogin",
    "getResponse",
    "Environment",
    "select",
    "jquery",
    "args",
    "$",
    "type",
    "ev",
    "getTarget",
    "getResponseHeader",
    "getQueryString",
    "prefix",
    "suffix",
    "getOwnPropertyNames",
    "key",
    "Array",
    "isArray",
    "join",
    "substring",
    "url",
    "options",
    "qs",
    "Uri",
    "appendParamsToUrl",
    "config",
    "dataType",
    "success",
    "listeners",
    "Jquery",
    "send",
    "ajaxRequest",
    "Xhr",
    "eventName",
    "qxEventName",
    "addListener",
    "set",
    "accept",
    "_onError",
    "req",
    "serverErrorHandled",
    "code",
    "getStatus",
    "text",
    "getStatusText",
    "response",
    "getUrl",
    "time",
    "Date",
    "now",
    "setConnected",
    "fireDataEvent",
    "getLastError",
    "slice",
    "arguments",
    "c",
    "s",
    "setServer",
    "setDataReceived",
    "handleSession",
    "setRunning",
    "abort",
    "buildRequest",
    "asString",
    "a",
    "f",
    "address",
    "ts",
    "getTime",
    "v",
    "authorize",
    "restart",
    "full",
    "terminate",
    "update",
    "record",
    "showError",
    "message",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "getProviderData",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/client/source/class/cv/io/Client.js"
  ],
  "sourcesContent": [
    "/* Client.js\n *\n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The JavaScript library that implements the CometVisu protocol.\n * The Client handles all communication issues to supply the user\n * of this object with reliable realtime data.\n * It can be seen as the session layer (layer 5) according to the OSI\n * model.\n *\n * @author Christan Mayer\n * @author Tobias Br√§utigam\n * @since 0.5.3 (initial contribution) 0.10.0+0.11.0 (major refactoring)\n *\n * @ignore($)\n */\nqx.Class.define('cv.io.Client', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  /**\n   * @param backendName {String} name of the backend\n   * @param backendLoginUrl {String} URL of the login resource\n   */\n  construct(backendName, backendLoginUrl) {\n    super();\n    cv.io.Client.CLIENTS.push(this);\n    this.backend = {};\n    this.loginSettings = {\n      loggedIn: false,\n      callbackAfterLoggedIn: null,\n      context: null,\n      loginOnly: false // login only for backend configuration, do not start address subscription\n    };\n\n    // init default settings\n    if (cv.io.Client.backendNameAliases[backendName]) {\n      backendName = cv.io.Client.backendNameAliases[backendName];\n    }\n    this.backendName = backendName;\n    switch (this.backendName) {\n      case 'default':\n        this._type = 'knxd';\n        break;\n\n      case 'openhab':\n        this._type = 'openhab';\n        break;\n    }\n\n    if (backendName && backendName !== 'default') {\n      if (typeof backendName === 'object') {\n        // override default settings\n        this.setBackend(backendName);\n      } else if (cv.io.Client.backends[backendName]) {\n        // merge backend settings into default backend\n        this.setBackend(cv.io.Client.backends[backendName]);\n      }\n    } else {\n      this.setBackend(cv.io.Client.backends['default']);\n    }\n\n    this.backendLoginUrl = backendLoginUrl;\n\n    this.addresses = [];\n    this.initialAddresses = [];\n    this.filters = [];\n    this.user = '';\n    this.pass = '';\n    this.device = '';\n    this.headers = {};\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    CLIENTS: [],\n    TEST_MODE: false,\n    ERROR_CODES: {\n      CONNECTION: 1,\n      PROTOCOL_MISSING_VERSION: 10,\n      PROTOCOL_INVALID_READ_RESPONSE: 50,\n      PROTOCOL_INVALID_READ_RESPONSE_MISSING_I: 51\n    },\n\n    /**\n     * Stop all running clients\n     */\n    stopAll() {\n      this.CLIENTS.forEach(function (client) {\n        client.stop();\n      });\n    },\n\n    // used for backwards compability\n    backendNameAliases: {\n      knxd: 'default',\n      'cgi-bin': 'default',\n      oh: 'openhab',\n      oh2: 'openhab'\n    },\n\n    // setup of the different known backends (openhab2 configures itself by sending the config\n    // with the login response so no defaults are defined here\n    backends: {\n      default: {\n        name: 'default',\n        baseURL: '/cgi-bin/',\n        transport: 'long-polling',\n        resources: {\n          login: 'l',\n          read: 'r',\n          write: 'w',\n          rrd: 'rrdfetch'\n        },\n\n        maxConnectionAge: 60 * 1000, // in milliseconds - restart if last read is older\n        maxDataAge: 3200 * 1000, // in milliseconds - reload all data when last successful\n        // read is older (should be faster than the index overflow at max data rate,\n        // i.e. 2^16 @ 20 tps for KNX TP)\n        maxRetries: 3, // amount of connection retries for temporary server failures\n        hooks: {}\n      },\n\n      openhab: {\n        name: 'openHAB',\n        baseURL: '/rest/cv/',\n        transport: 'sse'\n      }\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    /**\n     * Is the communication running at the moment?\n     */\n    running: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeRunning'\n    },\n\n    /**\n     * Is the client connected to a backend at the moment?\n     */\n    connected: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeConnected',\n      apply: '_applyConnected'\n    },\n\n    /**\n     * needed to be able to check if the incoming update is the initial answer or a successing update\n     */\n    dataReceived: {\n      check: 'Boolean',\n      init: false\n    },\n\n    /**\n     * the currently used transport layer\n     */\n    currentTransport: {\n      init: null\n    },\n\n    /**\n     * The server we are currently speaking to (read from the login response)\n     */\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    },\n\n    name: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    backend: null,\n    backendName: null,\n    _type: null,\n    backendLoginUrl: null,\n    addresses: null, // the subscribed addresses\n    initialAddresses: null, // the addresses which should be loaded before the subscribed addresses\n    filters: null, // the subscribed filters\n    user: null, // the current user\n    pass: null, // the current password\n    device: null, // the current device ID\n    session: null, // current session ID\n\n    loginSettings: null,\n    headers: null,\n    __lastError: null,\n\n    getType() {\n      return this._type;\n    },\n\n    // property apply\n    _applyConnected(value) {\n      if (value === true) {\n        this.__lastError = null;\n      }\n    },\n\n    setInitialAddresses(addresses) {\n      this.initialAddresses = addresses;\n    },\n\n    setBackend(newBackend) {\n      // override default settings\n      var backend = Object.assign({}, cv.io.Client.backends['default'], newBackend);\n\n      this.backend = backend;\n      if (backend.transport === 'sse' && backend.transportFallback) {\n        if (window.EventSource === undefined) {\n          // browser does not support EventSource object => use fallback\n          // transport + settings\n          Object.assign(backend, backend.transportFallback);\n        }\n      }\n      // add trailing slash to baseURL if not set\n      if (backend.baseURL && backend.baseURL.substr(-1) !== '/') {\n        backend.baseURL += '/';\n      }\n      var currentTransport = this.getCurrentTransport();\n      switch (backend.transport) {\n        case 'long-polling':\n          if (!(currentTransport instanceof cv.io.transport.LongPolling)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.LongPolling(this));\n          }\n          break;\n        case 'sse':\n          if (!(currentTransport instanceof cv.io.transport.Sse)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.Sse(this));\n          }\n          break;\n      }\n\n      if (this.backend.name === 'openHAB') {\n        // use the fallback parser\n        qx.util.ResponseParser.PARSER.json = cv.io.parser.Json.parse;\n      }\n    },\n\n    getBackend() {\n      return this.backend;\n    },\n\n    /**\n     * manipulates the header of the current ajax query before it is been send to the server\n     * @param xhr\n     */\n    beforeSend(xhr) {\n      for (var headerName in this.resendHeaders) {\n        if (this.resendHeaders[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.resendHeaders[headerName]);\n        }\n      }\n      for (headerName in this.headers) {\n        if (this.headers[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.headers[headerName]);\n        }\n      }\n    },\n\n    getResourcePath(name, map) {\n      return Object.prototype.hasOwnProperty.call(this.backend.resources, name)\n        ? this.backend.baseURL + this.backend.resources[name]\n        : null;\n    },\n\n    setResourcePath(name, path) {\n      this.backend.resources[name] = path;\n    },\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter. The second parameter\n     * (filter) is optional\n     *\n     * @param addresses {Array?} addresses to subscribe to\n     * @param filters {Array?} Filters\n     *\n     */\n    subscribe(addresses, filters) {\n      var startCommunication = !this.addresses.length; // start when\n      // addresses were\n      // empty\n      this.addresses = addresses ? addresses : [];\n      this.filters = filters ? filters : [];\n\n      if (!addresses.length) {\n        this.stop(); // stop when new addresses are empty\n      } else if (startCommunication) {\n        if (this.loginSettings.loginOnly === true) {\n          // connect to the backend\n          this.getCurrentTransport().connect();\n          this.loginSettings.loginOnly = false;\n        } else {\n          this.login(false);\n        }\n      }\n    },\n\n    /**\n     * This function starts the communication by a login and then runs the\n     * ongoing communication task\n     *\n     * @param loginOnly {Boolean} if true only login and backend configuration, no subscription\n     *                            to addresses (default: false)\n     * @param credentials {Map?} not used in this client\n     * @param callback {Function} call this function when login is done\n     * @param context {Object} context for the callback (this)\n     *\n     */\n    login(loginOnly, credentials, callback, context) {\n      if (!this.loginSettings.loggedIn) {\n        this.loginSettings.loginOnly = !!loginOnly;\n        this.loginSettings.callbackAfterLoggedIn = callback;\n        this.loginSettings.context = context;\n        var request = {};\n        if (this.user !== '') {\n          request.u = this.user;\n        }\n        if (this.pass !== '') {\n          request.p = this.pass;\n        }\n        if (this.device !== '') {\n          request.d = this.device;\n        }\n        this.doRequest(\n          this.backendLoginUrl ? this.backendLoginUrl : this.getResourcePath('login'),\n          request,\n          this.handleLogin,\n          this\n        );\n      } else if (typeof this.loginSettings.callbackAfterLoggedIn === 'function') {\n        // call callback immediately\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * Get the json response from the parameter received from the used XHR transport\n     */\n    getResponse: qx.core.Environment.select('cv.xhr', {\n      jquery(args) {\n        var data = args[0];\n        if (data && $.type(data) === 'string') {\n          data = cv.io.parser.Json.parse(data);\n        }\n        return data;\n      },\n\n      qx(args) {\n        var ev = args[0];\n        if (!ev) {\n          return null;\n        }\n        var json = ev.getTarget().getResponse();\n        if (!json) {\n          return null;\n        }\n        if (typeof json === 'string') {\n          json = cv.io.parser.Json.parse(json);\n        }\n        return json;\n      }\n    }),\n\n    getResponseHeader: qx.core.Environment.select('cv.xhr', {\n      jquery(args, name) {\n        return args[2].getResponseHeader(name);\n      },\n      qx(args, name) {\n        if (!args[0]) {\n          return null;\n        }\n        return args[0].getTarget().getResponseHeader(name);\n      }\n    }),\n\n    getQueryString(data) {\n      var prefix = '';\n      var suffix = '';\n      if (data) {\n        Object.getOwnPropertyNames(data).forEach(function (key) {\n          if (key === 'i' || key === 't') {\n            prefix += key + '=' + data[key] + '&';\n          } else if (Array.isArray(data[key])) {\n            suffix += key + '=' + data[key].join('&' + key + '=') + '&';\n          } else {\n            suffix += key + '=' + data[key] + '&';\n          }\n        });\n        if (suffix.length) {\n          suffix = suffix.substring(0, suffix.length - 1);\n        } else if (prefix.length) {\n          prefix = prefix.substring(0, prefix.length - 1);\n        }\n      }\n      return prefix + suffix;\n    },\n\n    /**\n     * Creates an XHR request. The request type depends von the \"cv.xhr\" environment setting\n     * (currently \"qx\" and \"jquery\" are supported)\n     * @param url {String} URI\n     * @param data {Map} request data\n     * @param callback {Function} success callback\n     * @param context {Object} context fot the callback\n     * @return {qx.io.request.Xhr|jQuery}\n     */\n    doRequest: qx.core.Environment.select('cv.xhr', {\n      jquery(url, data, callback, context, options) {\n        var qs = '';\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var config = {\n          url: url,\n          dataType: 'json',\n          context: context,\n          success: callback\n        };\n\n        if (options) {\n          if (options.listeners) {\n            config = $.extend(config, options.listeners);\n            delete options.listeners;\n          }\n        }\n        config = $.extend(config, options || {});\n        var request = new cv.io.request.Jquery(config);\n        request.send();\n        return request;\n      },\n      qx(url, data, callback, context, options) {\n        // append data to URL\n        var qs = '';\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var ajaxRequest = new qx.io.request.Xhr(url);\n        if (options) {\n          if (options.beforeSend) {\n            this.beforeSend(ajaxRequest);\n            delete options.beforeSend;\n          }\n          if (options.listeners) {\n            Object.getOwnPropertyNames(options.listeners).forEach(function (eventName) {\n              var qxEventName = eventName !== 'error' ? eventName : 'statusError';\n              ajaxRequest.addListener(qxEventName, options.listeners[eventName], context);\n            });\n            delete options.listeners;\n          }\n        }\n        ajaxRequest.set(\n          Object.assign(\n            {\n              accept: 'application/json'\n            },\n\n            options || {}\n          )\n        );\n\n        if (callback) {\n          ajaxRequest.addListener('success', callback, context);\n        }\n        ajaxRequest.addListener('statusError', this._onError, this);\n        ajaxRequest.send();\n        return ajaxRequest;\n      }\n    }),\n\n    /**\n     * Handle errors from qooxdoos XHR request\n     * @param ev {Event}\n     */\n    _onError(ev) {\n      var req = ev.getTarget();\n      if (req.serverErrorHandled) {\n        return; // ignore error when already handled\n      }\n      this.__lastError = {\n        code: req.getStatus(),\n        text: req.getStatusText(),\n        response: req.getResponse(),\n        url: req.getUrl(),\n        time: Date.now()\n      };\n\n      this.setConnected(false);\n      this.fireDataEvent('changeConnected', false);\n    },\n\n    /**\n     * Get the last recorded error\n     *\n     * @return {{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}\n     */\n    getLastError() {\n      return this.__lastError;\n    },\n\n    /**\n     * Handles login response, applies backend configuration if send by\n     * backend and forwards to the configurated transport handleSession\n     * function\n     *\n     * Parameter vary dependent from the XHR type used\n     * qx (Qooxdoo):\n     *   ev {Event} the 'success' event from the XHR request\n     *\n     * jQuery:\n     *   data {Object} The JSON data returned from the server\n     *   textStatus {String} a string describing the status\n     *   request {Object} the jqXHR object\n     */\n    handleLogin() {\n      var args = Array.prototype.slice.call(arguments, 0);\n      var json = this.getResponse(args);\n      // read backend configuration if send by backend\n      if (json.c) {\n        this.setBackend(Object.assign(this.getBackend(), json.c));\n      }\n      this.session = json.s || 'SESSION';\n      this.setServer(this.getResponseHeader(args, 'Server'));\n\n      this.setDataReceived(false);\n      if (this.loginSettings.loginOnly) {\n        this.getCurrentTransport().handleSession(args, false);\n      } else {\n        this.getCurrentTransport().handleSession(args, true);\n      }\n      this.loginSettings.loggedIn = true;\n      if (typeof this.loginSettings.callbackAfterLoggedIn === 'function') {\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * This function stops an ongoing connection\n     *\n     */\n    stop() {\n      this.setRunning(false);\n      if (this.getCurrentTransport().abort) {\n        this.getCurrentTransport().abort();\n      }\n      this.loginSettings.loggedIn = false;\n    },\n\n    /**\n     * Build the URL part that contains the addresses and filters\n     * @param addresses {Array}\n     * @param asString\n     * @return {Map}\n     */\n    buildRequest(addresses, asString) {\n      if (asString === true) {\n        // return as query string\n        var qs = 's=' + this.session;\n        addresses = addresses ? addresses : this.addresses;\n        qs += '&a=' + addresses.join('&a=');\n        if (this.filters.length) {\n          qs += '&f=' + this.filters.join('&f=');\n        }\n        return qs;\n      }\n      var data = {\n        s: this.session\n      };\n\n      addresses = addresses || this.addresses;\n      if (addresses && addresses.length) {\n        data.a = addresses;\n      }\n      if (this.filters.length) {\n        data.f = this.filters;\n      }\n      return data;\n    },\n\n    /**\n     * This function sends a value\n     * @param address {String} address to send the value to\n     * @param value {String} value to send\n     *\n     */\n    write(address, value) {\n      /**\n       * ts is a quirk to fix wrong caching on some Android-tablets/Webkit;\n       * could maybe selective based on UserAgent but isn't that costly on writes\n       */\n      var ts = new Date().getTime();\n      this.doRequest(\n        this.getResourcePath('write'),\n        {\n          s: this.session,\n          a: address,\n          v: value,\n          ts: ts\n        },\n\n        null,\n        null,\n        {\n          accept: 'application/json, text/javascript, */*; q=0.01'\n        }\n      );\n    },\n\n    // this client does not implement an authorization\n    authorize(req) {},\n\n    /**\n     * Restart the connection\n     * @param full\n     */\n    restart(full) {\n      this.getCurrentTransport().restart(full);\n    },\n\n    terminate() {\n      this.getCurrentTransport().abort();\n    },\n\n    update(json) {},\n\n    /**\n     * Can be overridden to record client communication with backend\n     * @param type {String} type of event to record\n     * @param data {Object} data to record\n     */\n    record(type, data) {},\n\n    /**\n     * Can be overridden to provide an error handler for client errors\n     * @param type {Number} one of cv.io.Client.ERROR_CODES\n     * @param message {String} detailed error message\n     * @param args\n     */\n    showError(type, message, args) {},\n\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n    getProviderConvertFunction(name, format) {\n      return null;\n    },\n    getProviderData: function (name, format) {\n      return null;\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this.stop();\n  }\n});\n"
  ],
  "mappings": "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"
}