{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "io",
    "IClient",
    "construct",
    "backendName",
    "backendLoginUrl",
    "Client",
    "CLIENTS",
    "push",
    "backend",
    "loginSettings",
    "loggedIn",
    "callbackAfterLoggedIn",
    "context",
    "loginOnly",
    "backendNameAliases",
    "setBackend",
    "backends",
    "addresses",
    "initialAddresses",
    "filters",
    "user",
    "pass",
    "device",
    "headers",
    "statics",
    "TEST_MODE",
    "ERROR_CODES",
    "CONNECTION",
    "PROTOCOL_MISSING_VERSION",
    "PROTOCOL_INVALID_READ_RESPONSE",
    "PROTOCOL_INVALID_READ_RESPONSE_MISSING_I",
    "stopAll",
    "forEach",
    "client",
    "stop",
    "knxd",
    "oh",
    "oh2",
    "name",
    "baseURL",
    "transport",
    "resources",
    "login",
    "read",
    "write",
    "rrd",
    "maxConnectionAge",
    "maxDataAge",
    "maxRetries",
    "hooks",
    "openhab",
    "properties",
    "running",
    "check",
    "init",
    "event",
    "connected",
    "apply",
    "dataReceived",
    "currentTransport",
    "server",
    "nullable",
    "members",
    "session",
    "__lastError",
    "getType",
    "_applyConnected",
    "value",
    "setInitialAddresses",
    "newBackend",
    "assign",
    "transportFallback",
    "window",
    "EventSource",
    "undefined",
    "substr",
    "getCurrentTransport",
    "LongPolling",
    "dispose",
    "setCurrentTransport",
    "Sse",
    "util",
    "ResponseParser",
    "PARSER",
    "json",
    "parser",
    "Json",
    "parse",
    "getBackend",
    "beforeSend",
    "xhr",
    "headerName",
    "resendHeaders",
    "setRequestHeader",
    "getResourcePath",
    "map",
    "prototype",
    "hasOwnProperty",
    "call",
    "setResourcePath",
    "path",
    "hasCustomChartsDataProcessor",
    "processChartsData",
    "data",
    "subscribe",
    "startCommunication",
    "length",
    "connect",
    "credentials",
    "callback",
    "request",
    "u",
    "p",
    "d",
    "doRequest",
    "handleLogin",
    "getResponse",
    "Environment",
    "select",
    "jquery",
    "args",
    "$",
    "type",
    "ev",
    "getTarget",
    "getResponseHeader",
    "getQueryString",
    "prefix",
    "suffix",
    "getOwnPropertyNames",
    "key",
    "Array",
    "isArray",
    "join",
    "substring",
    "url",
    "options",
    "qs",
    "Uri",
    "appendParamsToUrl",
    "config",
    "dataType",
    "success",
    "listeners",
    "Jquery",
    "send",
    "ajaxRequest",
    "Xhr",
    "eventName",
    "qxEventName",
    "addListener",
    "set",
    "accept",
    "_onError",
    "req",
    "serverErrorHandled",
    "code",
    "getStatus",
    "text",
    "getStatusText",
    "response",
    "getUrl",
    "time",
    "Date",
    "now",
    "setConnected",
    "fireDataEvent",
    "getLastError",
    "slice",
    "arguments",
    "c",
    "s",
    "setServer",
    "setDataReceived",
    "handleSession",
    "setRunning",
    "abort",
    "buildRequest",
    "asString",
    "a",
    "f",
    "address",
    "ts",
    "getTime",
    "v",
    "authorize",
    "restart",
    "full",
    "terminate",
    "update",
    "record",
    "showError",
    "message",
    "hasProvider",
    "getProviderUrl",
    "getProviderConvertFunction",
    "format",
    "getProviderData",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/client/source/class/cv/io/Client.js"
  ],
  "sourcesContent": [
    "/* Client.js\n *\n * copyright (c) 2010-2016, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The JavaScript library that implements the CometVisu protocol.\n * The Client handles all communication issues to supply the user\n * of this object with reliable realtime data.\n * It can be seen as the session layer (layer 5) according to the OSI\n * model.\n *\n * @author Christan Mayer\n * @author Tobias Br√§utigam\n * @since 0.5.3 (initial contribution) 0.10.0+0.11.0 (major refactoring)\n *\n * @ignore($)\n */\nqx.Class.define('cv.io.Client', {\n  extend: qx.core.Object,\n  implement: cv.io.IClient,\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  /**\n   * @param backendName {String} name of the backend\n   * @param backendLoginUrl {String} URL of the login resource\n   */\n  construct(backendName, backendLoginUrl) {\n    super();\n    cv.io.Client.CLIENTS.push(this);\n    this.backend = {};\n    this.loginSettings = {\n      loggedIn: false,\n      callbackAfterLoggedIn: null,\n      context: null,\n      loginOnly: false // login only for backend configuration, do not start address subscription\n    };\n\n    // init default settings\n    if (cv.io.Client.backendNameAliases[backendName]) {\n      backendName = cv.io.Client.backendNameAliases[backendName];\n    }\n    this.backendName = backendName;\n\n    if (backendName && backendName !== 'default') {\n      if (typeof backendName === 'object') {\n        // override default settings\n        this.setBackend(backendName);\n      } else if (cv.io.Client.backends[backendName]) {\n        // merge backend settings into default backend\n        this.setBackend(cv.io.Client.backends[backendName]);\n      }\n    } else {\n      this.setBackend(cv.io.Client.backends['default']);\n    }\n\n    this.backendLoginUrl = backendLoginUrl;\n\n    this.addresses = [];\n    this.initialAddresses = [];\n    this.filters = [];\n    this.user = '';\n    this.pass = '';\n    this.device = '';\n    this.headers = {};\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    CLIENTS: [],\n    TEST_MODE: false,\n    ERROR_CODES: {\n      CONNECTION: 1,\n      PROTOCOL_MISSING_VERSION: 10,\n      PROTOCOL_INVALID_READ_RESPONSE: 50,\n      PROTOCOL_INVALID_READ_RESPONSE_MISSING_I: 51\n    },\n\n    /**\n     * Stop all running clients\n     */\n    stopAll() {\n      this.CLIENTS.forEach(function (client) {\n        client.stop();\n      });\n    },\n\n    // used for backwards compability\n    backendNameAliases: {\n      knxd: 'default',\n      'cgi-bin': 'default',\n      oh: 'openhab',\n      oh2: 'openhab'\n    },\n\n    // setup of the different known backends (openhab2 configures itself by sending the config\n    // with the login response so no defaults are defined here\n    backends: {\n      default: {\n        name: 'default',\n        baseURL: '/cgi-bin/',\n        transport: 'long-polling',\n        resources: {\n          login: 'l',\n          read: 'r',\n          write: 'w',\n          rrd: 'rrdfetch'\n        },\n\n        maxConnectionAge: 60 * 1000, // in milliseconds - restart if last read is older\n        maxDataAge: 3200 * 1000, // in milliseconds - reload all data when last successful\n        // read is older (should be faster than the index overflow at max data rate,\n        // i.e. 2^16 @ 20 tps for KNX TP)\n        maxRetries: 3, // amount of connection retries for temporary server failures\n        hooks: {}\n      },\n\n      openhab: {\n        name: 'openHAB',\n        baseURL: '/rest/cv/',\n        transport: 'sse'\n      }\n    }\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    /**\n     * Is the communication running at the moment?\n     */\n    running: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeRunning'\n    },\n\n    /**\n     * Is the client connected to a backend at the moment?\n     */\n    connected: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeConnected',\n      apply: '_applyConnected'\n    },\n\n    /**\n     * needed to be able to check if the incoming update is the initial answer or a successing update\n     */\n    dataReceived: {\n      check: 'Boolean',\n      init: false\n    },\n\n    /**\n     * the currently used transport layer\n     */\n    currentTransport: {\n      init: null\n    },\n\n    /**\n     * The server we are currently speaking to (read from the login response)\n     */\n    server: {\n      check: 'String',\n      nullable: true,\n      event: 'changedServer'\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    backend: null,\n    backendName: null,\n    backendLoginUrl: null,\n    addresses: null, // the subscribed addresses\n    initialAddresses: null, // the addresses which should be loaded before the subscribed addresses\n    filters: null, // the subscribed filters\n    user: null, // the current user\n    pass: null, // the current password\n    device: null, // the current device ID\n    session: null, // current session ID\n\n    loginSettings: null,\n    headers: null,\n    __lastError: null,\n\n    getType() {\n      return this.backendName;\n    },\n\n    // property apply\n    _applyConnected(value) {\n      if (value === true) {\n        this.__lastError = null;\n      }\n    },\n\n    setInitialAddresses(addresses) {\n      this.initialAddresses = addresses;\n    },\n\n    setBackend(newBackend) {\n      // override default settings\n      var backend = Object.assign({}, cv.io.Client.backends['default'], newBackend);\n\n      this.backend = backend;\n      if (backend.transport === 'sse' && backend.transportFallback) {\n        if (window.EventSource === undefined) {\n          // browser does not support EventSource object => use fallback\n          // transport + settings\n          Object.assign(backend, backend.transportFallback);\n        }\n      }\n      // add trailing slash to baseURL if not set\n      if (backend.baseURL && backend.baseURL.substr(-1) !== '/') {\n        backend.baseURL += '/';\n      }\n      var currentTransport = this.getCurrentTransport();\n      switch (backend.transport) {\n        case 'long-polling':\n          if (!(currentTransport instanceof cv.io.transport.LongPolling)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.LongPolling(this));\n          }\n          break;\n        case 'sse':\n          if (!(currentTransport instanceof cv.io.transport.Sse)) {\n            // replace old transport\n            if (currentTransport) {\n              currentTransport.dispose();\n            }\n            this.setCurrentTransport(new cv.io.transport.Sse(this));\n          }\n          break;\n      }\n\n      if (this.backend.name === 'openHAB') {\n        // use the fallback parser\n        qx.util.ResponseParser.PARSER.json = cv.io.parser.Json.parse;\n      }\n    },\n\n    getBackend() {\n      return this.backend;\n    },\n\n    /**\n     * manipulates the header of the current ajax query before it is been send to the server\n     * @param xhr\n     */\n    beforeSend(xhr) {\n      for (var headerName in this.resendHeaders) {\n        if (this.resendHeaders[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.resendHeaders[headerName]);\n        }\n      }\n      for (headerName in this.headers) {\n        if (this.headers[headerName] !== undefined) {\n          xhr.setRequestHeader(headerName, this.headers[headerName]);\n        }\n      }\n    },\n\n    getResourcePath(name, map) {\n      return Object.prototype.hasOwnProperty.call(this.backend.resources, name)\n        ? this.backend.baseURL + this.backend.resources[name]\n        : null;\n    },\n\n    setResourcePath(name, path) {\n      this.backend.resources[name] = path;\n    },\n\n    hasCustomChartsDataProcessor() {\n      return false;\n    },\n    processChartsData(data) {\n      return data;\n    },\n\n    /**\n     * Subscribe to the addresses in the parameter. The second parameter\n     * (filter) is optional\n     *\n     * @param addresses {Array?} addresses to subscribe to\n     * @param filters {Array?} Filters\n     *\n     */\n    subscribe(addresses, filters) {\n      var startCommunication = !this.addresses.length; // start when\n      // addresses were\n      // empty\n      this.addresses = addresses ? addresses : [];\n      this.filters = filters ? filters : [];\n\n      if (!addresses.length) {\n        this.stop(); // stop when new addresses are empty\n      } else if (startCommunication) {\n        if (this.loginSettings.loginOnly === true) {\n          // connect to the backend\n          this.getCurrentTransport().connect();\n          this.loginSettings.loginOnly = false;\n        } else {\n          this.login(false);\n        }\n      }\n    },\n\n    /**\n     * This function starts the communication by a login and then runs the\n     * ongoing communication task\n     *\n     * @param loginOnly {Boolean} if true only login and backend configuration, no subscription\n     *                            to addresses (default: false)\n     * @param credentials {Map?} not used in this client\n     * @param callback {Function} call this function when login is done\n     * @param context {Object} context for the callback (this)\n     *\n     */\n    login(loginOnly, credentials, callback, context) {\n      if (!this.loginSettings.loggedIn) {\n        this.loginSettings.loginOnly = !!loginOnly;\n        this.loginSettings.callbackAfterLoggedIn = callback;\n        this.loginSettings.context = context;\n        var request = {};\n        if (this.user !== '') {\n          request.u = this.user;\n        }\n        if (this.pass !== '') {\n          request.p = this.pass;\n        }\n        if (this.device !== '') {\n          request.d = this.device;\n        }\n        this.doRequest(\n          this.backendLoginUrl ? this.backendLoginUrl : this.getResourcePath('login'),\n          request,\n          this.handleLogin,\n          this\n        );\n      } else if (typeof this.loginSettings.callbackAfterLoggedIn === 'function') {\n        // call callback immediately\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * Get the json response from the parameter received from the used XHR transport\n     */\n    getResponse: qx.core.Environment.select('cv.xhr', {\n      jquery(args) {\n        var data = args[0];\n        if (data && $.type(data) === 'string') {\n          data = cv.io.parser.Json.parse(data);\n        }\n        return data;\n      },\n\n      qx(args) {\n        var ev = args[0];\n        if (!ev) {\n          return null;\n        }\n        var json = ev.getTarget().getResponse();\n        if (!json) {\n          return null;\n        }\n        if (typeof json === 'string') {\n          json = cv.io.parser.Json.parse(json);\n        }\n        return json;\n      }\n    }),\n\n    getResponseHeader: qx.core.Environment.select('cv.xhr', {\n      jquery(args, name) {\n        return args[2].getResponseHeader(name);\n      },\n      qx(args, name) {\n        if (!args[0]) {\n          return null;\n        }\n        return args[0].getTarget().getResponseHeader(name);\n      }\n    }),\n\n    getQueryString(data) {\n      var prefix = '';\n      var suffix = '';\n      if (data) {\n        Object.getOwnPropertyNames(data).forEach(function (key) {\n          if (key === 'i' || key === 't') {\n            prefix += key + '=' + data[key] + '&';\n          } else if (Array.isArray(data[key])) {\n            suffix += key + '=' + data[key].join('&' + key + '=') + '&';\n          } else {\n            suffix += key + '=' + data[key] + '&';\n          }\n        });\n        if (suffix.length) {\n          suffix = suffix.substring(0, suffix.length - 1);\n        } else if (prefix.length) {\n          prefix = prefix.substring(0, prefix.length - 1);\n        }\n      }\n      return prefix + suffix;\n    },\n\n    /**\n     * Creates an XHR request. The request type depends von the \"cv.xhr\" environment setting\n     * (currently \"qx\" and \"jquery\" are supported)\n     * @param url {String} URI\n     * @param data {Map} request data\n     * @param callback {Function} success callback\n     * @param context {Object} context fot the callback\n     * @return {qx.io.request.Xhr|jQuery}\n     */\n    doRequest: qx.core.Environment.select('cv.xhr', {\n      jquery(url, data, callback, context, options) {\n        var qs = '';\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var config = {\n          url: url,\n          dataType: 'json',\n          context: context,\n          success: callback\n        };\n\n        if (options) {\n          if (options.listeners) {\n            config = $.extend(config, options.listeners);\n            delete options.listeners;\n          }\n        }\n        config = $.extend(config, options || {});\n        var request = new cv.io.request.Jquery(config);\n        request.send();\n        return request;\n      },\n      qx(url, data, callback, context, options) {\n        // append data to URL\n        var qs = '';\n        if (data) {\n          qs = this.getQueryString(data);\n          url = qx.util.Uri.appendParamsToUrl(url, qs);\n        }\n        var ajaxRequest = new qx.io.request.Xhr(url);\n        if (options) {\n          if (options.beforeSend) {\n            this.beforeSend(ajaxRequest);\n            delete options.beforeSend;\n          }\n          if (options.listeners) {\n            Object.getOwnPropertyNames(options.listeners).forEach(function (eventName) {\n              var qxEventName = eventName !== 'error' ? eventName : 'statusError';\n              ajaxRequest.addListener(qxEventName, options.listeners[eventName], context);\n            });\n            delete options.listeners;\n          }\n        }\n        ajaxRequest.set(\n          Object.assign(\n            {\n              accept: 'application/json'\n            },\n\n            options || {}\n          )\n        );\n\n        if (callback) {\n          ajaxRequest.addListener('success', callback, context);\n        }\n        ajaxRequest.addListener('statusError', this._onError, this);\n        ajaxRequest.send();\n        return ajaxRequest;\n      }\n    }),\n\n    /**\n     * Handle errors from qooxdoos XHR request\n     * @param ev {Event}\n     */\n    _onError(ev) {\n      var req = ev.getTarget();\n      if (req.serverErrorHandled) {\n        return; // ignore error when already handled\n      }\n      this.__lastError = {\n        code: req.getStatus(),\n        text: req.getStatusText(),\n        response: req.getResponse(),\n        url: req.getUrl(),\n        time: Date.now()\n      };\n\n      this.setConnected(false);\n      this.fireDataEvent('changeConnected', false);\n    },\n\n    /**\n     * Get the last recorded error\n     *\n     * @return {{code: (*|Integer), text: (*|String), response: (*|String|null), url: (*|String), time: number}|*}\n     */\n    getLastError() {\n      return this.__lastError;\n    },\n\n    /**\n     * Handles login response, applies backend configuration if send by\n     * backend and forwards to the configurated transport handleSession\n     * function\n     *\n     * Parameter vary dependent from the XHR type used\n     * qx (Qooxdoo):\n     *   ev {Event} the 'success' event from the XHR request\n     *\n     * jQuery:\n     *   data {Object} The JSON data returned from the server\n     *   textStatus {String} a string describing the status\n     *   request {Object} the jqXHR object\n     */\n    handleLogin() {\n      var args = Array.prototype.slice.call(arguments, 0);\n      var json = this.getResponse(args);\n      // read backend configuration if send by backend\n      if (json.c) {\n        this.setBackend(Object.assign(this.getBackend(), json.c));\n      }\n      this.session = json.s || 'SESSION';\n      this.setServer(this.getResponseHeader(args, 'Server'));\n\n      this.setDataReceived(false);\n      if (this.loginSettings.loginOnly) {\n        this.getCurrentTransport().handleSession(args, false);\n      } else {\n        this.getCurrentTransport().handleSession(args, true);\n      }\n      this.loginSettings.loggedIn = true;\n      if (typeof this.loginSettings.callbackAfterLoggedIn === 'function') {\n        this.loginSettings.callbackAfterLoggedIn.call(this.loginSettings.context);\n\n        this.loginSettings.callbackAfterLoggedIn = null;\n        this.loginSettings.context = null;\n      }\n    },\n\n    /**\n     * This function stops an ongoing connection\n     *\n     */\n    stop() {\n      this.setRunning(false);\n      if (this.getCurrentTransport().abort) {\n        this.getCurrentTransport().abort();\n      }\n      this.loginSettings.loggedIn = false;\n    },\n\n    /**\n     * Build the URL part that contains the addresses and filters\n     * @param addresses {Array}\n     * @param asString\n     * @return {Map}\n     */\n    buildRequest(addresses, asString) {\n      if (asString === true) {\n        // return as query string\n        var qs = 's=' + this.session;\n        addresses = addresses ? addresses : this.addresses;\n        qs += '&a=' + addresses.join('&a=');\n        if (this.filters.length) {\n          qs += '&f=' + this.filters.join('&f=');\n        }\n        return qs;\n      }\n      var data = {\n        s: this.session\n      };\n\n      addresses = addresses || this.addresses;\n      if (addresses && addresses.length) {\n        data.a = addresses;\n      }\n      if (this.filters.length) {\n        data.f = this.filters;\n      }\n      return data;\n    },\n\n    /**\n     * This function sends a value\n     * @param address {String} address to send the value to\n     * @param value {String} value to send\n     *\n     */\n    write(address, value) {\n      /**\n       * ts is a quirk to fix wrong caching on some Android-tablets/Webkit;\n       * could maybe selective based on UserAgent but isn't that costly on writes\n       */\n      var ts = new Date().getTime();\n      this.doRequest(\n        this.getResourcePath('write'),\n        {\n          s: this.session,\n          a: address,\n          v: value,\n          ts: ts\n        },\n\n        null,\n        null,\n        {\n          accept: 'application/json, text/javascript, */*; q=0.01'\n        }\n      );\n    },\n\n    // this client does not implement an authorization\n    authorize(req) {},\n\n    /**\n     * Restart the connection\n     * @param full\n     */\n    restart(full) {\n      this.getCurrentTransport().restart(full);\n    },\n\n    terminate() {\n      this.getCurrentTransport().abort();\n    },\n\n    update(json) {},\n\n    /**\n     * Can be overridden to record client communication with backend\n     * @param type {String} type of event to record\n     * @param data {Object} data to record\n     */\n    record(type, data) {},\n\n    /**\n     * Can be overridden to provide an error handler for client errors\n     * @param type {Number} one of cv.io.Client.ERROR_CODES\n     * @param message {String} detailed error message\n     * @param args\n     */\n    showError(type, message, args) {},\n\n    hasProvider(name) {\n      return false;\n    },\n    getProviderUrl(name) {\n      return null;\n    },\n    getProviderConvertFunction(name, format) {\n      return null;\n    },\n    getProviderData: function (name, format) {\n      return null;\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this.stop();\n  }\n});\n"
  ],
  "mappings": "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"
}