{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "displayFn",
    "context",
    "arguments",
    "length",
    "undefined",
    "window",
    "displayFnParameters",
    "constructor",
    "call",
    "setDisplayFn",
    "__displayFnContext",
    "__displayFnParameters",
    "destruct",
    "__animationFrame",
    "cancelAnimationFrame",
    "properties",
    "linearRateLimit",
    "check",
    "init",
    "expDampTimeConstant",
    "epsilon",
    "members",
    "__currentValue",
    "__targetValue",
    "setAnimationSpeed",
    "range",
    "setEpsilon",
    "setLinearRateLimit",
    "setExpDampTimeConstant",
    "setTo",
    "targetValue",
    "instant",
    "show",
    "now",
    "performance",
    "__animate",
    "__P_775_5",
    "thistime",
    "lasttime",
    "_this",
    "isNumber",
    "dt",
    "Math",
    "max",
    "maxLinearDelta",
    "getLinearRateLimit",
    "alpha",
    "min",
    "exp",
    "getExpDampTimeConstant",
    "nextValue",
    "blend",
    "delta",
    "notFinished",
    "abs",
    "sign",
    "getEpsilon",
    "copy",
    "getDisplayFn",
    "requestAnimationFrame",
    "time",
    "cv",
    "util",
    "LimitedRateUpdateAnimator"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/util/LimitedRateUpdateAnimator.js"
  ],
  "sourcesContent": [
    "/* LimitedRateUpdateAnimator.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * LimitedRateUpdateAnimator\n *\n * @author ChristianMayer\n * @since 2020\n */\n\n/**\n * Helper function to allow widgets animate a displayed property with a\n * limited speed of change to look smoother for the user.\n *\n * This class can either animate a number (e.g. used as a ratio) or a class\n * when it has these methods:\n * * value1.delta(value2)       - return a number that is proportional to the difference\n * * value1.blend(value2,ratio) - return a new value that is the ratio dependent blend\n * * value.copy()               - return a copy of the value\n */\nqx.Class.define('cv.util.LimitedRateUpdateAnimator', {\n  extend: qx.core.Object,\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n\n  /**\n   * Create a new animated display where an object will be smoothly transitioned\n   * from its current position to a new target position.\n   *\n   * @param displayFn {Function} Callback function that does the displaying\n   * @param context The context `this` of the callback function\n   * @param displayFnParameters Optional additional parameter that will be passed to the callback function\n   */\n  construct(displayFn, context = window, displayFnParameters = undefined) {\n    super();\n    this.setDisplayFn(displayFn);\n    this.__displayFnContext = context;\n    this.__displayFnParameters = displayFnParameters;\n  },\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    if (this.__animationFrame !== undefined) {\n      window.cancelAnimationFrame(this.__animationFrame);\n      this.__animationFrame = undefined;\n    }\n  },\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    linearRateLimit: {\n      // in ratio/second\n      check: 'Number',\n      init: 2\n    },\n\n    expDampTimeConstant: {\n      // time constant for exponential dampening\n      check: 'Number',\n      init: 0.01\n    },\n\n    epsilon: {\n      // a difference between current and target value smaller than the epsilon\n      // will be immediately closed\n      check: 'Number',\n      init: 0.001\n    },\n\n    displayFn: {\n      check: 'Function'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __animationFrame: undefined,\n    __displayFnContext: undefined,\n    __displayFnParameters: undefined,\n    __currentValue: undefined,\n    __targetValue: undefined,\n    /**\n     * Set animation speed by defining the (typical) maximal range.\n     * An animation of the full ``range`` will require about 0.5 to 1 second\n     * and have a linear as well as an exponential damped part at the end.\n     * The ``epsilon`` can also be stated explicitly or it will be derived\n     * from the ``range``.\n     * @param {Number} range (typical) maximal range for the animation\n     * @param {Number} [epsilon] end the animation when the remaining delta is smaller\n     */\n    setAnimationSpeed(range, epsilon) {\n      if (epsilon !== undefined) {\n        this.setEpsilon(epsilon);\n      } else {\n        this.setEpsilon(range / 1000);\n      }\n\n      this.setLinearRateLimit(2 * range);\n      // Note: as the exponential dampening is working on a ratio it doesn't\n      // need to be changed here and the default of 0.01 is fine:\n      this.setExpDampTimeConstant(0.01);\n    },\n    /**\n     * Set the value to a new value.\n     * @param {Number} targetValue the new value.\n     * @param {Boolean} instant skip animation when true\n     * @param {Boolean} show skip display update when false\n     */\n    setTo(targetValue, instant = false, show = true) {\n      let now = performance.now();\n\n      this.__targetValue = targetValue;\n      if (instant || this.__currentValue === undefined) {\n        this.__currentValue = targetValue;\n      }\n      if (this.__animationFrame === undefined && show) {\n        this.__animate(now, now - 10);\n      }\n    },\n\n    /**\n     * Internal implementation of the animation and value setting.\n     * @param {DOMHighResTimeStamp} thistime\n     * @param {DOMHighResTimeStamp} lasttime\n     * @private\n     */\n    __animate(thistime, lasttime) {\n      let isNumber = typeof this.__currentValue === 'number';\n      let dt = Math.max(0, (thistime - lasttime) / 1000); // in seconds - clamp negative dt\n      let maxLinearDelta = this.getLinearRateLimit() * dt;\n      let alpha = Math.max(0, Math.min(Math.exp(-dt / this.getExpDampTimeConstant()), 1));\n\n      let nextValue = isNumber\n        ? this.__targetValue * alpha + this.__currentValue * (1 - alpha)\n        : this.__currentValue.blend(this.__targetValue, alpha);\n      let delta = isNumber ? nextValue - this.__currentValue : this.__currentValue.delta(nextValue);\n      let notFinished = true;\n      if (Math.abs(delta) > maxLinearDelta) {\n        nextValue = isNumber\n          ? this.__currentValue + Math.sign(delta) * maxLinearDelta\n          : this.__currentValue.blend(this.__targetValue, (alpha * maxLinearDelta) / delta);\n      }\n      if (\n        (isNumber && Math.abs(nextValue - this.__targetValue) < this.getEpsilon()) ||\n        (!isNumber && nextValue.delta(this.__targetValue) < this.getEpsilon())\n      ) {\n        nextValue = this.__targetValue;\n        notFinished = false;\n      }\n      this.__currentValue = isNumber ? nextValue : nextValue.copy();\n\n      this.getDisplayFn().call(this.__displayFnContext, this.__currentValue, this.__displayFnParameters);\n\n      if (notFinished) {\n        this.__animationFrame = window.requestAnimationFrame(time => {\n          this.__animate(time, thistime);\n        });\n      } else {\n        this.__animationFrame = undefined;\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}