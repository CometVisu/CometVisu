{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "hexColorRegEx",
    "colorMapping",
    "white",
    "orange",
    "red",
    "green",
    "blue",
    "purple",
    "yellow",
    "grey",
    "black",
    "iconCache",
    "iconCacheMap",
    "iconDelay",
    "iconDelayFn",
    "tmpCanvas",
    "tmpCtx",
    "preloadedKUFicons",
    "iconDelayed",
    "icon",
    "colors",
    "color",
    "cv",
    "util",
    "IconTools",
    "push",
    "setInterval",
    "length",
    "fillRecoloredIcon",
    "shift",
    "clearInterval",
    "createCanvas",
    "iconId",
    "styling",
    "classes",
    "fillCanvas",
    "canvas",
    "imageData",
    "width",
    "height",
    "getContext",
    "putImageData",
    "innerRecolorLoop",
    "navigator",
    "userAgent",
    "toLowerCase",
    "indexOf",
    "parseFloat",
    "slice",
    "r",
    "g",
    "b",
    "data",
    "i",
    "a",
    "doRecolorNonTransparent",
    "thisIcon",
    "thisIconColors",
    "drawImage",
    "getImageData",
    "undefined",
    "test",
    "log",
    "Logger",
    "error",
    "parseInt",
    "substr",
    "recolorNonTransparent",
    "url",
    "loadHandler",
    "toFill",
    "thisFillColor",
    "pop",
    "asText",
    "Image",
    "onload",
    "src",
    "id",
    "c",
    "complete",
    "newCanvas",
    "template",
    "document",
    "createElement",
    "innerHTML",
    "newElement",
    "content",
    "firstChild",
    "parameters",
    "Array",
    "prototype",
    "filter",
    "call",
    "classList",
    "name",
    "cacheEntry",
    "coloredIcon",
    "svgKUF",
    "iconID",
    "iconPath",
    "Application",
    "getRelativeResourcePath",
    "ScriptLoader",
    "includeStylesheet",
    "forceRemote",
    "style",
    "setAttribute",
    "add",
    "defer",
    "self"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/util/IconTools.js"
  ],
  "sourcesContent": [
    "/* IconTools.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2015\n */\nqx.Class.define('cv.util.IconTools', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // \"global\" functions (=> state less)\n    /**\n     * RegEx to determine a valid CSS style color like #rrggbb\n     * @type {RegExp}\n     */\n    hexColorRegEx: /#[0-9a-fA-F]{6}/,\n    /**\n     * as a convenience, definition of a few colors\n     * @type {Object<string, string>}\n     */\n    colorMapping: {\n      white: '#ffffff',\n      orange: '#ff8000',\n      red: '#ff4444',\n      green: '#44ff44',\n      blue: '#4444ff',\n      purple: '#ff44ff',\n      yellow: '#ffff00',\n      grey: '#777777',\n      black: '#000000'\n    },\n\n    /**\n     * @typedef iconCacheEntryHash\n     * @type {Object}\n     * @property {HTMLImageElement} icon - the original Image() of the icon\n     * @property {number} id - the unique ID for this icon\n     * @property {Object.<string, ImageData>} colors - cache all the transformed ImageDatas\n     * @property {string[]} toFill - all the icon colors to fill once the image was loaded\n     */\n\n    /**\n     * the Image() of all knows (i.e. used) icons\n     * @type {Object.<string, iconCacheEntryHash>}\n     */\n    iconCache: {},\n    /**\n     * mapping of ID to Cache entry (URL)\n     */\n    iconCacheMap: [],\n    /**\n     * array of all icons to fill where the Image is not ready yet\n     * @type {Array.<Array<(HTMLCanvasElement|SVGElement), Object.<string, ImageData>, string>>}\n     */\n    iconDelay: [],\n    /**\n     * handler for delay function\n     * @type {Function}\n     */\n    iconDelayFn: null,\n\n    tmpCanvas: null,\n    tmpCtx: null,\n    /**\n     * Were the KNX User Forum icons already preloaded?\n     * Only done when the config is using them\n     * @type {boolean}\n     */\n    preloadedKUFicons: false,\n\n    /**\n     *\n     * @param {(HTMLCanvasElement|SVGElement)} icon\n     * @param {Object.<string, ImageData>} colors\n     * @param {string} color\n     */\n    iconDelayed(icon, colors, color) {\n      cv.util.IconTools.iconDelay.push([icon, colors, color]);\n      if (!cv.util.IconTools.iconDelayFn) {\n        cv.util.IconTools.iconDelayFn = setInterval(function () {\n          while (cv.util.IconTools.iconDelay.length) {\n            // it should be enough to test only the first element - the other\n            // elements will be covered anyway...\n            if (cv.util.IconTools.iconDelay[0][2] in cv.util.IconTools.iconDelay[0][1]) {\n              cv.util.IconTools.fillRecoloredIcon(cv.util.IconTools.iconDelay.shift()[0]);\n            } else {\n              break;\n            }\n          }\n\n          if (cv.util.IconTools.iconDelay.length === 0) {\n            clearInterval(cv.util.IconTools.iconDelayFn);\n            cv.util.IconTools.iconDelayFn = 0;\n          }\n        }, 10);\n      }\n    },\n    /**\n     * Create the HTML for the canvas element and return it.\n     * @param {string} iconId\n     * @param {string?} styling\n     * @param {string?} classes\n     * @returns {string}\n     */\n    createCanvas(iconId, styling = '', classes = '') {\n      return '<canvas class=\"' + iconId + ' ' + classes + '\" ' + styling + '/>';\n    },\n    /**\n     * Fill the canvas with the ImageData. Also resize the\n     * canvas at the same time.\n     * @param {HTMLCanvasElement} canvas\n     * @param {ImageData} imageData\n     */\n    fillCanvas(canvas, imageData) {\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      canvas.getContext('2d').putImageData(imageData, 0, 0);\n    },\n    /**\n     * Two versions of a recoloring function to work around an Android bug:\n     * http://stackoverflow.com/questions/14969496/html5-canvas-pixel-manipulation-problems-on-mobile-devices-when-setting-the-alph\n     * https://code.google.com/p/android/issues/detail?id=17565\n     * @param {number} r\n     * @param {number} g\n     * @param {number} b\n     * @param {number[]} data\n     * @param {number} length\n     */\n    innerRecolorLoop:\n      navigator.userAgent.toLowerCase().indexOf('android') > -1 &&\n      parseFloat(navigator.userAgent.slice(navigator.userAgent.toLowerCase().indexOf('android') + 8)) < 4.4\n        ? function (r, g, b, data, length) {\n            // for Android version < 4.4\n            for (let i = 0; i < length; i += 4) {\n              const a = data[i + 3];\n              if (a > 127) {\n                data[i] = r;\n                data[i + 1] = g;\n                data[i + 2] = b;\n                data[i + 3] = 255;\n              } else {\n                // brute force it...\n                data[i] = 0;\n                data[i + 1] = 0;\n                data[i + 2] = 0;\n                data[i + 3] = 0;\n              }\n            }\n          }\n        : function (r, g, b, data, length) {\n            // the normal version\n            for (let i = 0; i < length; i += 4) {\n              if (data[i + 3] !== 0) {\n                data[i] = r;\n                data[i + 1] = g;\n                data[i + 2] = b;\n              }\n            }\n          },\n    /**\n     * Do the recoloring based on `thisIcon` and store it in the\n     * hash `thisIconColors`.\n     * @param {string} color - color in the CSS style #rrggbb\n     * @param {HTMLImageElement} thisIcon\n     * @param {Object.<string, iconCacheEntryHash>} thisIconColors\n     */\n    doRecolorNonTransparent(color, thisIcon, thisIconColors) {\n      if (thisIconColors[color]) {\n        return; // done, already recolored\n      }\n      const width = (cv.util.IconTools.tmpCanvas.width = thisIcon.width);\n      const height = (cv.util.IconTools.tmpCanvas.height = thisIcon.height);\n      if (width === 0 || height === 0) {\n        return; // most likely: the image didn't exist - anyway nothing to do here\n      }\n      cv.util.IconTools.tmpCtx.drawImage(thisIcon, 0, 0);\n\n      const imageData = cv.util.IconTools.tmpCtx.getImageData(0, 0, width, height);\n\n      if (color !== undefined) {\n        if (!cv.util.IconTools.hexColorRegEx.test(color)) {\n          qx.log.Logger.error(\n            this,\n            'Error! \"' + color + '\" is not a valid color for icon recoloring! It must have a shape like \"#rrggbb\".'\n          );\n        }\n        const r = parseInt(color.substr(1, 2), 16);\n        const g = parseInt(color.substr(3, 2), 16);\n        const b = parseInt(color.substr(5, 2), 16);\n        cv.util.IconTools.innerRecolorLoop(r, g, b, imageData.data, width * height * 4);\n      }\n      thisIconColors[color] = imageData;\n    },\n\n    /**\n     * Function to call for each icon that should be dynamically recolored.\n     * This will be called for each known URL, so only remember the string but\n     * don't load the image yet as it might not be needed.\n     * @param {string} url\n     * @returns {recolorCallback} a function that will append the recolored image to\n     * the jQuery element passed to that function\n     */\n    recolorNonTransparent(url) {\n      const loadHandler = function () {\n        const toFill = cv.util.IconTools.iconCache[url].toFill;\n        const thisIcon = cv.util.IconTools.iconCache[url].icon;\n        const thisIconColors = cv.util.IconTools.iconCache[url].colors;\n        let thisFillColor;\n        while ((thisFillColor = toFill.pop())) {\n          // eslint-disable-line no-cond-assign\n          cv.util.IconTools.doRecolorNonTransparent(thisFillColor, thisIcon, thisIconColors);\n        }\n      };\n\n      /**\n       * @callback recolorCallback\n       * will be called for each color that is actually used\n       * => load image for all colors\n       * => transform image\n       * @param {string} color - color in CSS style, i.e. #rrggbb\n       * @param {string} styling\n       * @param {string} classes\n       * @param {boolean?} asText\n       */\n      return function (color, styling, classes, asText) {\n        if (undefined === cv.util.IconTools.iconCache[url]) {\n          const thisIcon = new Image();\n          thisIcon.onload = loadHandler;\n          thisIcon.src = url;\n\n          cv.util.IconTools.iconCache[url] = {\n            icon: thisIcon, // the original Image() of the icon\n            id: cv.util.IconTools.iconCacheMap.length, // the unique ID for this icon\n            colors: {}, // cache all the transformed ImageDatas\n            toFill: [] // all the icon colors to fill once the image was loaded\n          };\n          cv.util.IconTools.iconCacheMap.push(url);\n        }\n\n        if (!color) {\n          color = '#ffffff';\n        }\n        if (color in cv.util.IconTools.colorMapping) {\n          color = cv.util.IconTools.colorMapping[color];\n        }\n        const c = 'icon' + cv.util.IconTools.iconCache[url].id + '_' + color.substr(1, 6);\n        cv.util.IconTools.iconCache[url].toFill.push(color);\n\n        // when already available - fill it now. Otherwise the onLoad will do it.\n        if (cv.util.IconTools.iconCache[url].icon.complete) {\n          loadHandler();\n        }\n        const newCanvas = cv.util.IconTools.createCanvas(c, styling, classes);\n        if (asText) {\n          return newCanvas;\n        }\n        let template = document.createElement('template');\n        template.innerHTML = newCanvas;\n        const newElement = template.content.firstChild;\n        if (cv.util.IconTools.iconCache[url].icon.complete) {\n          cv.util.IconTools.fillCanvas(newElement, cv.util.IconTools.iconCache[url].colors[color]);\n        } else {\n          cv.util.IconTools.iconDelayed(newElement, cv.util.IconTools.iconCache[url].colors, color);\n        }\n        return newElement;\n      };\n    },\n\n    /**\n     * This function must be called to fill a specific icon that was created.\n     * Is will be colored based on it's class name.\n     * @param {(HTMLCanvasElement|SVGElement)} icon\n     */\n    fillRecoloredIcon(icon) {\n      const parameters = Array.prototype.filter.call(icon.classList, name => name !== 'icon');\n\n      if (parameters.length === 2) {\n        const cacheEntry = cv.util.IconTools.iconCache[cv.util.IconTools.iconCacheMap[parameters[0]]];\n\n        const coloredIcon = cacheEntry.colors['#' + parameters[1]];\n\n        if (undefined === coloredIcon) {\n          cv.util.IconTools.iconDelayed(icon, cacheEntry.colors, '#' + parameters[1]);\n        } else {\n          cv.util.IconTools.fillCanvas(icon, coloredIcon);\n        }\n      }\n    },\n\n    /**\n     * @param {string} iconID\n     * @returns {recolorCallback}\n     */\n    svgKUF(iconID) {\n      if (!this.preloadedKUFicons) {\n        this.preloadedKUFicons = true;\n        const iconPath = cv.Application.getRelativeResourcePath() + 'icons/fonts/knx-uf-iconset.css';\n        cv.util.ScriptLoader.includeStylesheet(iconPath);\n      }\n      /**\n       * @param {string} color - color in CSS style, i.e. #rrggbb\n       * @param {string} styling\n       * @param {string} classes\n       * @param {boolean?} asText\n       * @param {boolean?} forceRemote - force to load the icon remotely, e.g. as it could be that it's not inside the\n       *          DOM; this is relevant only for special cases when the normal DOM might not be ready\n       */\n      return function (color, styling, classes, asText, forceRemote = false) {\n        // use relative path here, otherwise it won't work in replay mode\n\n        if (color in cv.util.IconTools.colorMapping) {\n          color = cv.util.IconTools.colorMapping[color];\n        }\n\n        let style = styling || '';\n        if (color) {\n          style += 'color:' + color + ';';\n        }\n        if (asText) {\n          if (style) {\n            style = ' style=\"' + style + '\"';\n          }\n          return '<i' + style + ' class=\"knxuf-' + iconID + ' ' + classes + '\"></i>';\n        }\n        let icon = document.createElement('i');\n        if (classes) {\n          icon.setAttribute('class', classes);\n        }\n        icon.classList.add('knxuf-' + iconID);\n        if (style) {\n          icon.setAttribute('style', style);\n        }\n        return icon;\n      };\n    }\n  },\n\n  defer() {\n    const canvas = document.createElement('canvas');\n    this.defer.self.tmpCanvas = canvas;\n    this.defer.self.tmpCtx = canvas.getContext('2d');\n  }\n});\n"
  ],
  "mappings": "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"
}