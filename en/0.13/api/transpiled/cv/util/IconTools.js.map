{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "hexColorRegEx",
    "colorMapping",
    "white",
    "orange",
    "red",
    "green",
    "blue",
    "purple",
    "yellow",
    "grey",
    "black",
    "iconCache",
    "iconCacheMap",
    "iconDelay",
    "iconDelayFn",
    "tmpCanvas",
    "tmpCtx",
    "preloadedKUFicons",
    "iconDelayed",
    "icon",
    "colors",
    "color",
    "cv",
    "util",
    "IconTools",
    "push",
    "setInterval",
    "length",
    "fillRecoloredIcon",
    "shift",
    "clearInterval",
    "createCanvas",
    "iconId",
    "styling",
    "arguments",
    "undefined",
    "classes",
    "fillCanvas",
    "canvas",
    "imageData",
    "width",
    "height",
    "getContext",
    "putImageData",
    "innerRecolorLoop",
    "navigator",
    "userAgent",
    "toLowerCase",
    "indexOf",
    "parseFloat",
    "slice",
    "r",
    "g",
    "b",
    "data",
    "i",
    "a",
    "doRecolorNonTransparent",
    "thisIcon",
    "thisIconColors",
    "drawImage",
    "getImageData",
    "test",
    "log",
    "Logger",
    "error",
    "parseInt",
    "substr",
    "recolorNonTransparent",
    "url",
    "loadHandler",
    "toFill",
    "thisFillColor",
    "pop",
    "asText",
    "Image",
    "onload",
    "src",
    "id",
    "c",
    "complete",
    "newCanvas",
    "template",
    "document",
    "createElement",
    "innerHTML",
    "newElement",
    "content",
    "firstChild",
    "parameters",
    "Array",
    "prototype",
    "filter",
    "call",
    "classList",
    "name",
    "cacheEntry",
    "coloredIcon",
    "svgKUF",
    "iconID",
    "iconPath",
    "Application",
    "getRelativeResourcePath",
    "ScriptLoader",
    "includeStylesheet",
    "forceRemote",
    "style",
    "setAttribute",
    "add",
    "defer",
    "self"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/util/IconTools.js"
  ],
  "sourcesContent": [
    "/* IconTools.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2015\n */\nqx.Class.define('cv.util.IconTools', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // \"global\" functions (=> state less)\n    /**\n     * RegEx to determine a valid CSS style color like #rrggbb\n     * @type {RegExp}\n     */\n    hexColorRegEx: /#[0-9a-fA-F]{6}/,\n    /**\n     * as a convenience, definition of a few colors\n     * @type {Object<string, string>}\n     */\n    colorMapping: {\n      white: '#ffffff',\n      orange: '#ff8000',\n      red: '#ff4444',\n      green: '#44ff44',\n      blue: '#4444ff',\n      purple: '#ff44ff',\n      yellow: '#ffff00',\n      grey: '#777777',\n      black: '#000000'\n    },\n\n    /**\n     * @typedef iconCacheEntryHash\n     * @type {Object}\n     * @property {HTMLImageElement} icon - the original Image() of the icon\n     * @property {number} id - the unique ID for this icon\n     * @property {Object.<string, ImageData>} colors - cache all the transformed ImageDatas\n     * @property {string[]} toFill - all the icon colors to fill once the image was loaded\n     */\n\n    /**\n     * the Image() of all knows (i.e. used) icons\n     * @type {Object.<string, iconCacheEntryHash>}\n     */\n    iconCache: {},\n    /**\n     * mapping of ID to Cache entry (URL)\n     */\n    iconCacheMap: [],\n    /**\n     * array of all icons to fill where the Image is not ready yet\n     * @type {Array.<Array<(HTMLCanvasElement|SVGElement), Object.<string, ImageData>, string>>}\n     */\n    iconDelay: [],\n    /**\n     * handler for delay function\n     * @type {Function}\n     */\n    iconDelayFn: null,\n\n    tmpCanvas: null,\n    tmpCtx: null,\n    /**\n     * Were the KNX User Forum icons already preloaded?\n     * Only done when the config is using them\n     * @type {boolean}\n     */\n    preloadedKUFicons: false,\n\n    /**\n     *\n     * @param {(HTMLCanvasElement|SVGElement)} icon\n     * @param {Object.<string, ImageData>} colors\n     * @param {string} color\n     */\n    iconDelayed(icon, colors, color) {\n      cv.util.IconTools.iconDelay.push([icon, colors, color]);\n      if (!cv.util.IconTools.iconDelayFn) {\n        cv.util.IconTools.iconDelayFn = setInterval(function () {\n          while (cv.util.IconTools.iconDelay.length) {\n            // it should be enough to test only the first element - the other\n            // elements will be covered anyway...\n            if (cv.util.IconTools.iconDelay[0][2] in cv.util.IconTools.iconDelay[0][1]) {\n              cv.util.IconTools.fillRecoloredIcon(cv.util.IconTools.iconDelay.shift()[0]);\n            } else {\n              break;\n            }\n          }\n\n          if (cv.util.IconTools.iconDelay.length === 0) {\n            clearInterval(cv.util.IconTools.iconDelayFn);\n            cv.util.IconTools.iconDelayFn = 0;\n          }\n        }, 10);\n      }\n    },\n    /**\n     * Create the HTML for the canvas element and return it.\n     * @param {string} iconId\n     * @param {string?} styling\n     * @param {string?} classes\n     * @returns {string}\n     */\n    createCanvas(iconId, styling = '', classes = '') {\n      return '<canvas class=\"' + iconId + ' ' + classes + '\" ' + styling + '/>';\n    },\n    /**\n     * Fill the canvas with the ImageData. Also resize the\n     * canvas at the same time.\n     * @param {HTMLCanvasElement} canvas\n     * @param {ImageData} imageData\n     */\n    fillCanvas(canvas, imageData) {\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      canvas.getContext('2d').putImageData(imageData, 0, 0);\n    },\n    /**\n     * Two versions of a recoloring function to work around an Android bug:\n     * http://stackoverflow.com/questions/14969496/html5-canvas-pixel-manipulation-problems-on-mobile-devices-when-setting-the-alph\n     * https://code.google.com/p/android/issues/detail?id=17565\n     * @param {number} r\n     * @param {number} g\n     * @param {number} b\n     * @param {number[]} data\n     * @param {number} length\n     */\n    innerRecolorLoop:\n      navigator.userAgent.toLowerCase().indexOf('android') > -1 &&\n      parseFloat(navigator.userAgent.slice(navigator.userAgent.toLowerCase().indexOf('android') + 8)) < 4.4\n        ? function (r, g, b, data, length) {\n            // for Android version < 4.4\n            for (let i = 0; i < length; i += 4) {\n              const a = data[i + 3];\n              if (a > 127) {\n                data[i] = r;\n                data[i + 1] = g;\n                data[i + 2] = b;\n                data[i + 3] = 255;\n              } else {\n                // brute force it...\n                data[i] = 0;\n                data[i + 1] = 0;\n                data[i + 2] = 0;\n                data[i + 3] = 0;\n              }\n            }\n          }\n        : function (r, g, b, data, length) {\n            // the normal version\n            for (let i = 0; i < length; i += 4) {\n              if (data[i + 3] !== 0) {\n                data[i] = r;\n                data[i + 1] = g;\n                data[i + 2] = b;\n              }\n            }\n          },\n    /**\n     * Do the recoloring based on `thisIcon` and store it in the\n     * hash `thisIconColors`.\n     * @param {string} color - color in the CSS style #rrggbb\n     * @param {HTMLImageElement} thisIcon\n     * @param {Object.<string, iconCacheEntryHash>} thisIconColors\n     */\n    doRecolorNonTransparent(color, thisIcon, thisIconColors) {\n      if (thisIconColors[color]) {\n        return; // done, already recolored\n      }\n      const width = (cv.util.IconTools.tmpCanvas.width = thisIcon.width);\n      const height = (cv.util.IconTools.tmpCanvas.height = thisIcon.height);\n      if (width === 0 || height === 0) {\n        return; // most likely: the image didn't exist - anyway nothing to do here\n      }\n      cv.util.IconTools.tmpCtx.drawImage(thisIcon, 0, 0);\n\n      const imageData = cv.util.IconTools.tmpCtx.getImageData(0, 0, width, height);\n\n      if (color !== undefined) {\n        if (!cv.util.IconTools.hexColorRegEx.test(color)) {\n          qx.log.Logger.error(\n            this,\n            'Error! \"' + color + '\" is not a valid color for icon recoloring! It must have a shape like \"#rrggbb\".'\n          );\n        }\n        const r = parseInt(color.substr(1, 2), 16);\n        const g = parseInt(color.substr(3, 2), 16);\n        const b = parseInt(color.substr(5, 2), 16);\n        cv.util.IconTools.innerRecolorLoop(r, g, b, imageData.data, width * height * 4);\n      }\n      thisIconColors[color] = imageData;\n    },\n\n    /**\n     * Function to call for each icon that should be dynamically recolored.\n     * This will be called for each known URL, so only remember the string but\n     * don't load the image yet as it might not be needed.\n     * @param {string} url\n     * @returns {recolorCallback} a function that will append the recolored image to\n     * the jQuery element passed to that function\n     */\n    recolorNonTransparent(url) {\n      const loadHandler = function () {\n        const toFill = cv.util.IconTools.iconCache[url].toFill;\n        const thisIcon = cv.util.IconTools.iconCache[url].icon;\n        const thisIconColors = cv.util.IconTools.iconCache[url].colors;\n        let thisFillColor;\n        while ((thisFillColor = toFill.pop())) {\n          // eslint-disable-line no-cond-assign\n          cv.util.IconTools.doRecolorNonTransparent(thisFillColor, thisIcon, thisIconColors);\n        }\n      };\n\n      /**\n       * @callback recolorCallback\n       * will be called for each color that is actually used\n       * => load image for all colors\n       * => transform image\n       * @param {string} color - color in CSS style, i.e. #rrggbb\n       * @param {string} styling\n       * @param {string} classes\n       * @param {boolean?} asText\n       */\n      return function (color, styling, classes, asText) {\n        if (undefined === cv.util.IconTools.iconCache[url]) {\n          const thisIcon = new Image();\n          thisIcon.onload = loadHandler;\n          thisIcon.src = url;\n\n          cv.util.IconTools.iconCache[url] = {\n            icon: thisIcon, // the original Image() of the icon\n            id: cv.util.IconTools.iconCacheMap.length, // the unique ID for this icon\n            colors: {}, // cache all the transformed ImageDatas\n            toFill: [] // all the icon colors to fill once the image was loaded\n          };\n          cv.util.IconTools.iconCacheMap.push(url);\n        }\n\n        if (!color) {\n          color = '#ffffff';\n        }\n        if (color in cv.util.IconTools.colorMapping) {\n          color = cv.util.IconTools.colorMapping[color];\n        }\n        const c = 'icon' + cv.util.IconTools.iconCache[url].id + '_' + color.substr(1, 6);\n        cv.util.IconTools.iconCache[url].toFill.push(color);\n\n        // when already available - fill it now. Otherwise the onLoad will do it.\n        if (cv.util.IconTools.iconCache[url].icon.complete) {\n          loadHandler();\n        }\n        const newCanvas = cv.util.IconTools.createCanvas(c, styling, classes);\n        if (asText) {\n          return newCanvas;\n        }\n        let template = document.createElement('template');\n        template.innerHTML = newCanvas;\n        const newElement = template.content.firstChild;\n        if (cv.util.IconTools.iconCache[url].icon.complete) {\n          cv.util.IconTools.fillCanvas(newElement, cv.util.IconTools.iconCache[url].colors[color]);\n        } else {\n          cv.util.IconTools.iconDelayed(newElement, cv.util.IconTools.iconCache[url].colors, color);\n        }\n        return newElement;\n      };\n    },\n\n    /**\n     * This function must be called to fill a specific icon that was created.\n     * Is will be colored based on it's class name.\n     * @param {(HTMLCanvasElement|SVGElement)} icon\n     */\n    fillRecoloredIcon(icon) {\n      const parameters = Array.prototype.filter.call(icon.classList, name => name !== 'icon');\n\n      if (parameters.length === 2) {\n        const cacheEntry = cv.util.IconTools.iconCache[cv.util.IconTools.iconCacheMap[parameters[0]]];\n\n        const coloredIcon = cacheEntry.colors['#' + parameters[1]];\n\n        if (undefined === coloredIcon) {\n          cv.util.IconTools.iconDelayed(icon, cacheEntry.colors, '#' + parameters[1]);\n        } else {\n          cv.util.IconTools.fillCanvas(icon, coloredIcon);\n        }\n      }\n    },\n\n    /**\n     * @param {string} iconID\n     * @returns {recolorCallback}\n     */\n    svgKUF(iconID) {\n      if (!this.preloadedKUFicons) {\n        this.preloadedKUFicons = true;\n        const iconPath = cv.Application.getRelativeResourcePath() + 'icons/fonts/knx-uf-iconset.css';\n        cv.util.ScriptLoader.includeStylesheet(iconPath);\n      }\n      /**\n       * @param {string} color - color in CSS style, i.e. #rrggbb\n       * @param {string} styling\n       * @param {string} classes\n       * @param {boolean?} asText\n       * @param {boolean?} forceRemote - force to load the icon remotely, e.g. as it could be that it's not inside the\n       *          DOM; this is relevant only for special cases when the normal DOM might not be ready\n       */\n      return function (color, styling, classes, asText, forceRemote = false) {\n        // use relative path here, otherwise it won't work in replay mode\n\n        if (color in cv.util.IconTools.colorMapping) {\n          color = cv.util.IconTools.colorMapping[color];\n        }\n\n        let style = styling || '';\n        if (color) {\n          style += 'color:' + color + ';';\n        }\n        if (asText) {\n          if (style) {\n            style = ' style=\"' + style + '\"';\n          }\n          return '<i' + style + ' class=\"knxuf-' + iconID + ' ' + classes + '\"></i>';\n        }\n        let icon = document.createElement('i');\n        if (classes) {\n          icon.setAttribute('class', classes);\n        }\n        icon.classList.add('knxuf-' + iconID);\n        if (style) {\n          icon.setAttribute('style', style);\n        }\n        return icon;\n      };\n    }\n  },\n\n  defer() {\n    const canvas = document.createElement('canvas');\n    this.defer.self.tmpCanvas = canvas;\n    this.defer.self.tmpCtx = canvas.getContext('2d');\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,IAAI,EAAE,QAAQ;IAEd;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACP;MACA;AACJ;AACA;AACA;MACIC,aAAa,EAAE,iBAAiB;MAChC;AACJ;AACA;AACA;MACIC,YAAY,EAAE;QACZC,KAAK,EAAE,SAAS;QAChBC,MAAM,EAAE,SAAS;QACjBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE,SAAS;QACjBC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;MACIC,SAAS,EAAE,CAAC,CAAC;MACb;AACJ;AACA;MACIC,YAAY,EAAE,EAAE;MAChB;AACJ;AACA;AACA;MACIC,SAAS,EAAE,EAAE;MACb;AACJ;AACA;AACA;MACIC,WAAW,EAAE,IAAI;MAEjBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZ;AACJ;AACA;AACA;AACA;MACIC,iBAAiB,EAAE,KAAK;MAExB;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAE;QAC/BC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAACY,IAAI,CAAC,CAACN,IAAI,EAAEC,MAAM,EAAEC,KAAK,CAAC,CAAC;QACvD,IAAI,CAACC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACV,WAAW,EAAE;UAClCQ,EAAE,CAACC,IAAI,CAACC,SAAS,CAACV,WAAW,GAAGY,WAAW,CAAC,YAAY;YACtD,OAAOJ,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAACc,MAAM,EAAE;cACzC;cACA;cACA,IAAIL,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIS,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1ES,EAAE,CAACC,IAAI,CAACC,SAAS,CAACI,iBAAiB,CAACN,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7E,CAAC,MAAM;gBACL;cACF;YACF;YAEA,IAAIP,EAAE,CAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAACc,MAAM,KAAK,CAAC,EAAE;cAC5CG,aAAa,CAACR,EAAE,CAACC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC;cAC5CQ,EAAE,CAACC,IAAI,CAACC,SAAS,CAACV,WAAW,GAAG,CAAC;YACnC;UACF,CAAC,EAAE,EAAE,CAAC;QACR;MACF,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;MACIiB,YAAY,WAAAA,aAACC,MAAM,EAA8B;QAAA,IAA5BC,OAAO,GAAAC,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;QAAA,IAAEE,OAAO,GAAAF,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;QAC7C,OAAO,iBAAiB,GAAGF,MAAM,GAAG,GAAG,GAAGI,OAAO,GAAG,IAAI,GAAGH,OAAO,GAAG,IAAI;MAC3E,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;MACII,UAAU,WAAAA,WAACC,MAAM,EAAEC,SAAS,EAAE;QAC5BD,MAAM,CAACE,KAAK,GAAGD,SAAS,CAACC,KAAK;QAC9BF,MAAM,CAACG,MAAM,GAAGF,SAAS,CAACE,MAAM;QAChCH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC,CAACC,YAAY,CAACJ,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MACvD,CAAC;MACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIK,gBAAgB,EACdC,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IACzDC,UAAU,CAACJ,SAAS,CAACC,SAAS,CAACI,KAAK,CAACL,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GACjG,UAAUG,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,IAAI,EAAE3B,MAAM,EAAE;QAC/B;QACA,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5B,MAAM,EAAE4B,CAAC,IAAI,CAAC,EAAE;UAClC,IAAMC,CAAC,GAAGF,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC;UACrB,IAAIC,CAAC,GAAG,GAAG,EAAE;YACXF,IAAI,CAACC,CAAC,CAAC,GAAGJ,CAAC;YACXG,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGH,CAAC;YACfE,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGF,CAAC;YACfC,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;UACnB,CAAC,MAAM;YACL;YACAD,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC;YACXD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;YACfD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;YACfD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACjB;QACF;MACF,CAAC,GACD,UAAUJ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,IAAI,EAAE3B,MAAM,EAAE;QAC/B;QACA,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5B,MAAM,EAAE4B,CAAC,IAAI,CAAC,EAAE;UAClC,IAAID,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;YACrBD,IAAI,CAACC,CAAC,CAAC,GAAGJ,CAAC;YACXG,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGH,CAAC;YACfE,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGF,CAAC;UACjB;QACF;MACF,CAAC;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,uBAAuB,WAAAA,wBAACpC,KAAK,EAAEqC,QAAQ,EAAEC,cAAc,EAAE;QACvD,IAAIA,cAAc,CAACtC,KAAK,CAAC,EAAE;UACzB,OAAO,CAAC;QACV;QACA,IAAMmB,KAAK,GAAIlB,EAAE,CAACC,IAAI,CAACC,SAAS,CAACT,SAAS,CAACyB,KAAK,GAAGkB,QAAQ,CAAClB,KAAM;QAClE,IAAMC,MAAM,GAAInB,EAAE,CAACC,IAAI,CAACC,SAAS,CAACT,SAAS,CAAC0B,MAAM,GAAGiB,QAAQ,CAACjB,MAAO;QACrE,IAAID,KAAK,KAAK,CAAC,IAAIC,MAAM,KAAK,CAAC,EAAE;UAC/B,OAAO,CAAC;QACV;QACAnB,EAAE,CAACC,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC4C,SAAS,CAACF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QAElD,IAAMnB,SAAS,GAAGjB,EAAE,CAACC,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC6C,YAAY,CAAC,CAAC,EAAE,CAAC,EAAErB,KAAK,EAAEC,MAAM,CAAC;QAE5E,IAAIpB,KAAK,KAAKc,SAAS,EAAE;UACvB,IAAI,CAACb,EAAE,CAACC,IAAI,CAACC,SAAS,CAACxB,aAAa,CAAC8D,IAAI,CAACzC,KAAK,CAAC,EAAE;YAChD7B,EAAE,CAACuE,GAAG,CAACC,MAAM,CAACC,KAAK,CACjB,IAAI,EACJ,UAAU,GAAG5C,KAAK,GAAG,kFACvB,CAAC;UACH;UACA,IAAM8B,CAAC,GAAGe,QAAQ,CAAC7C,KAAK,CAAC8C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;UAC1C,IAAMf,CAAC,GAAGc,QAAQ,CAAC7C,KAAK,CAAC8C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;UAC1C,IAAMd,CAAC,GAAGa,QAAQ,CAAC7C,KAAK,CAAC8C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;UAC1C7C,EAAE,CAACC,IAAI,CAACC,SAAS,CAACoB,gBAAgB,CAACO,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEd,SAAS,CAACe,IAAI,EAAEd,KAAK,GAAGC,MAAM,GAAG,CAAC,CAAC;QACjF;QACAkB,cAAc,CAACtC,KAAK,CAAC,GAAGkB,SAAS;MACnC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI6B,qBAAqB,WAAAA,sBAACC,GAAG,EAAE;QACzB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAe;UAC9B,IAAMC,MAAM,GAAGjD,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACE,MAAM;UACtD,IAAMb,QAAQ,GAAGpC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAAClD,IAAI;UACtD,IAAMwC,cAAc,GAAGrC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACjD,MAAM;UAC9D,IAAIoD,aAAa;UACjB,OAAQA,aAAa,GAAGD,MAAM,CAACE,GAAG,CAAC,CAAC,EAAG;YACrC;YACAnD,EAAE,CAACC,IAAI,CAACC,SAAS,CAACiC,uBAAuB,CAACe,aAAa,EAAEd,QAAQ,EAAEC,cAAc,CAAC;UACpF;QACF,CAAC;;QAED;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACM,OAAO,UAAUtC,KAAK,EAAEY,OAAO,EAAEG,OAAO,EAAEsC,MAAM,EAAE;UAChD,IAAIvC,SAAS,KAAKb,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,EAAE;YAClD,IAAMX,QAAQ,GAAG,IAAIiB,KAAK,CAAC,CAAC;YAC5BjB,QAAQ,CAACkB,MAAM,GAAGN,WAAW;YAC7BZ,QAAQ,CAACmB,GAAG,GAAGR,GAAG;YAElB/C,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,GAAG;cACjClD,IAAI,EAAEuC,QAAQ;cAAE;cAChBoB,EAAE,EAAExD,EAAE,CAACC,IAAI,CAACC,SAAS,CAACZ,YAAY,CAACe,MAAM;cAAE;cAC3CP,MAAM,EAAE,CAAC,CAAC;cAAE;cACZmD,MAAM,EAAE,EAAE,CAAC;YACb,CAAC;YACDjD,EAAE,CAACC,IAAI,CAACC,SAAS,CAACZ,YAAY,CAACa,IAAI,CAAC4C,GAAG,CAAC;UAC1C;UAEA,IAAI,CAAChD,KAAK,EAAE;YACVA,KAAK,GAAG,SAAS;UACnB;UACA,IAAIA,KAAK,IAAIC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACvB,YAAY,EAAE;YAC3CoB,KAAK,GAAGC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACvB,YAAY,CAACoB,KAAK,CAAC;UAC/C;UACA,IAAM0D,CAAC,GAAG,MAAM,GAAGzD,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACS,EAAE,GAAG,GAAG,GAAGzD,KAAK,CAAC8C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;UACjF7C,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACE,MAAM,CAAC9C,IAAI,CAACJ,KAAK,CAAC;;UAEnD;UACA,IAAIC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAAClD,IAAI,CAAC6D,QAAQ,EAAE;YAClDV,WAAW,CAAC,CAAC;UACf;UACA,IAAMW,SAAS,GAAG3D,EAAE,CAACC,IAAI,CAACC,SAAS,CAACO,YAAY,CAACgD,CAAC,EAAE9C,OAAO,EAAEG,OAAO,CAAC;UACrE,IAAIsC,MAAM,EAAE;YACV,OAAOO,SAAS;UAClB;UACA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;UACjDF,QAAQ,CAACG,SAAS,GAAGJ,SAAS;UAC9B,IAAMK,UAAU,GAAGJ,QAAQ,CAACK,OAAO,CAACC,UAAU;UAC9C,IAAIlE,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAAClD,IAAI,CAAC6D,QAAQ,EAAE;YAClD1D,EAAE,CAACC,IAAI,CAACC,SAAS,CAACa,UAAU,CAACiD,UAAU,EAAEhE,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACjD,MAAM,CAACC,KAAK,CAAC,CAAC;UAC1F,CAAC,MAAM;YACLC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACN,WAAW,CAACoE,UAAU,EAAEhE,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAAC0D,GAAG,CAAC,CAACjD,MAAM,EAAEC,KAAK,CAAC;UAC3F;UACA,OAAOiE,UAAU;QACnB,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI1D,iBAAiB,WAAAA,kBAACT,IAAI,EAAE;QACtB,IAAMsE,UAAU,GAAGC,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAAC1E,IAAI,CAAC2E,SAAS,EAAE,UAAAC,IAAI;UAAA,OAAIA,IAAI,KAAK,MAAM;QAAA,EAAC;QAEvF,IAAIN,UAAU,CAAC9D,MAAM,KAAK,CAAC,EAAE;UAC3B,IAAMqE,UAAU,GAAG1E,EAAE,CAACC,IAAI,CAACC,SAAS,CAACb,SAAS,CAACW,EAAE,CAACC,IAAI,CAACC,SAAS,CAACZ,YAAY,CAAC6E,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;UAE7F,IAAMQ,WAAW,GAAGD,UAAU,CAAC5E,MAAM,CAAC,GAAG,GAAGqE,UAAU,CAAC,CAAC,CAAC,CAAC;UAE1D,IAAItD,SAAS,KAAK8D,WAAW,EAAE;YAC7B3E,EAAE,CAACC,IAAI,CAACC,SAAS,CAACN,WAAW,CAACC,IAAI,EAAE6E,UAAU,CAAC5E,MAAM,EAAE,GAAG,GAAGqE,UAAU,CAAC,CAAC,CAAC,CAAC;UAC7E,CAAC,MAAM;YACLnE,EAAE,CAACC,IAAI,CAACC,SAAS,CAACa,UAAU,CAAClB,IAAI,EAAE8E,WAAW,CAAC;UACjD;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,MAAM,EAAE;QACb,IAAI,CAAC,IAAI,CAAClF,iBAAiB,EAAE;UAC3B,IAAI,CAACA,iBAAiB,GAAG,IAAI;UAC7B,IAAMmF,QAAQ,GAAG9E,EAAE,CAAC+E,WAAW,CAACC,uBAAuB,CAAC,CAAC,GAAG,gCAAgC;UAC5FhF,EAAE,CAACC,IAAI,CAACgF,YAAY,CAACC,iBAAiB,CAACJ,QAAQ,CAAC;QAClD;QACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;QACM,OAAO,UAAU/E,KAAK,EAAEY,OAAO,EAAEG,OAAO,EAAEsC,MAAM,EAAuB;UAAA,IAArB+B,WAAW,GAAAvE,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;UACnE;;UAEA,IAAIb,KAAK,IAAIC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACvB,YAAY,EAAE;YAC3CoB,KAAK,GAAGC,EAAE,CAACC,IAAI,CAACC,SAAS,CAACvB,YAAY,CAACoB,KAAK,CAAC;UAC/C;UAEA,IAAIqF,KAAK,GAAGzE,OAAO,IAAI,EAAE;UACzB,IAAIZ,KAAK,EAAE;YACTqF,KAAK,IAAI,QAAQ,GAAGrF,KAAK,GAAG,GAAG;UACjC;UACA,IAAIqD,MAAM,EAAE;YACV,IAAIgC,KAAK,EAAE;cACTA,KAAK,GAAG,UAAU,GAAGA,KAAK,GAAG,GAAG;YAClC;YACA,OAAO,IAAI,GAAGA,KAAK,GAAG,gBAAgB,GAAGP,MAAM,GAAG,GAAG,GAAG/D,OAAO,GAAG,QAAQ;UAC5E;UACA,IAAIjB,IAAI,GAAGgE,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;UACtC,IAAIhD,OAAO,EAAE;YACXjB,IAAI,CAACwF,YAAY,CAAC,OAAO,EAAEvE,OAAO,CAAC;UACrC;UACAjB,IAAI,CAAC2E,SAAS,CAACc,GAAG,CAAC,QAAQ,GAAGT,MAAM,CAAC;UACrC,IAAIO,KAAK,EAAE;YACTvF,IAAI,CAACwF,YAAY,CAAC,OAAO,EAAED,KAAK,CAAC;UACnC;UACA,OAAOvF,IAAI;QACb,CAAC;MACH;IACF,CAAC;IAED0F,KAAK,WAAAA,MAAA,EAAG;MACN,IAAMvE,MAAM,GAAG6C,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,IAAI,CAACyB,KAAK,CAACC,IAAI,CAAC/F,SAAS,GAAGuB,MAAM;MAClC,IAAI,CAACuE,KAAK,CAACC,IAAI,CAAC9F,MAAM,GAAGsB,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IAClD;EACF,CAAC,CAAC;EA5WFpB,EAAE,CAACC,IAAI,CAACC,SAAS,CAAC7B,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}