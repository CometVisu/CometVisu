{
  "className": "cv.util.LimitedRateUpdateAnimator",
  "packageName": "cv.util",
  "name": "LimitedRateUpdateAnimator",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 37,
        "column": 0,
        "index": 1398
      },
      "end": {
        "line": 192,
        "column": 3,
        "index": 6690
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Helper function to allow widgets animate a displayed property with a\n limited speed of change to look smoother for the user.\n This class can either animate a number (e.g. used as a ratio) or a class\n when it has these methods:</p>\n<ul>\n<li>value1.delta(value2)       - return a number that is proportional to the difference</li>\n<li>value1.blend(value2,ratio) - return a new value that is the ratio dependent blend</li>\n<li>value.copy()               - return a copy of the value</li>\n</ul><div class=\"authors\"><label>Author:</label> ChristianMayer</div><div class=\"since\"><label>Since:</label> 2020</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "ChristianMayer"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2020"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 53,
        "column": 2,
        "index": 2024
      },
      "end": {
        "line": 58,
        "column": 3,
        "index": 2241
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Create a new animated display where an object will be smoothly transitioned\n from its current position to a new target position.</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "displayFn {Function} Callback function that does the displaying",
          "paramName": "displayFn",
          "description": " Callback function that does the displaying",
          "type": "cv.util.Function"
        },
        {
          "name": "@param",
          "body": "context The context <code>this</code> of the callback function"
        },
        {
          "name": "@param",
          "body": "displayFnParameters Optional additional parameter that will be passed to the callback function"
        }
      ]
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 64,
        "column": 2,
        "index": 2384
      },
      "end": {
        "line": 69,
        "column": 3,
        "index": 2552
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "linearRateLimit": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 2713
        },
        "end": {
          "line": 80,
          "column": 5,
          "index": 2799
        }
      },
      "name": "linearRateLimit",
      "propertyType": "new",
      "init": 2,
      "check": "Number",
      "defaultValue": 2
    },
    "expDampTimeConstant": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2806
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2923
        }
      },
      "name": "expDampTimeConstant",
      "propertyType": "new",
      "init": 0.01,
      "check": "Number",
      "defaultValue": 0.01
    },
    "epsilon": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2930
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 3103
        }
      },
      "name": "epsilon",
      "propertyType": "new",
      "init": 0.001,
      "check": "Number",
      "defaultValue": 0.001
    },
    "displayFn": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 3110
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 3152
        }
      },
      "name": "displayFn",
      "propertyType": "new",
      "check": "Function"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__animationFrame": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 3312
        },
        "end": {
          "line": 106,
          "column": 31,
          "index": 3339
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__displayFnContext": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 3345
        },
        "end": {
          "line": 107,
          "column": 33,
          "index": 3374
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__displayFnParameters": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 3380
        },
        "end": {
          "line": 108,
          "column": 36,
          "index": 3412
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__currentValue": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 3418
        },
        "end": {
          "line": 109,
          "column": 29,
          "index": 3443
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__targetValue": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 3449
        },
        "end": {
          "line": 110,
          "column": 28,
          "index": 3473
        }
      },
      "type": "variable",
      "access": "private"
    },
    "setAnimationSpeed": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3975
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 4374
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set animation speed by defining the (typical) maximal range.\n An animation of the full <code></code>range<code></code> will require about 0.5 to 1 second\n and have a linear as well as an exponential damped part at the end.\n The <code></code>epsilon<code></code> can also be stated explicitly or it will be derived\n from the <code></code>range<code></code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{Number} range (typical) maximal range for the animation",
            "paramName": "range",
            "description": "(typical) maximal range for the animation",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "{Number} [epsilon] end the animation when the remaining delta is smaller",
            "paramName": "[epsilon]",
            "description": "end the animation when the remaining delta is smaller",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setTo": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 4600
        },
        "end": {
          "line": 148,
          "column": 5,
          "index": 4945
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the value to a new value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{Number} targetValue the new value.",
            "paramName": "targetValue",
            "description": "the new value.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "{Boolean} instant skip animation when true",
            "paramName": "instant",
            "description": "skip animation when true",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "{Boolean} show skip display update when false",
            "paramName": "show",
            "description": "skip display update when false",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__animate": {
      "location": {
        "start": {
          "line": 156,
          "column": 4,
          "index": 5141
        },
        "end": {
          "line": 190,
          "column": 5,
          "index": 6682
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal implementation of the animation and value setting.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{DOMHighResTimeStamp} thistime"
          },
          {
            "name": "@param",
            "body": "{DOMHighResTimeStamp} lasttime"
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getLinearRateLimit": {
      "type": "function",
      "name": "getLinearRateLimit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>linearRateLimit</code>.\n\nFor further details take a look at the property definition: {@link #linearRateLimit}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for linearRateLimit"
          }
        ]
      }
    },
    "setLinearRateLimit": {
      "type": "function",
      "name": "setLinearRateLimit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>linearRateLimit</code>.\n\nFor further details take a look at the property definition: {@link #linearRateLimit}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for linearRateLimit"
          }
        ]
      }
    },
    "resetLinearRateLimit": {
      "type": "function",
      "name": "resetLinearRateLimit",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>linearRateLimit</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #linearRateLimit}."
          }
        ]
      }
    },
    "getExpDampTimeConstant": {
      "type": "function",
      "name": "getExpDampTimeConstant",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>expDampTimeConstant</code>.\n\nFor further details take a look at the property definition: {@link #expDampTimeConstant}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for expDampTimeConstant"
          }
        ]
      }
    },
    "setExpDampTimeConstant": {
      "type": "function",
      "name": "setExpDampTimeConstant",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>expDampTimeConstant</code>.\n\nFor further details take a look at the property definition: {@link #expDampTimeConstant}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for expDampTimeConstant"
          }
        ]
      }
    },
    "resetExpDampTimeConstant": {
      "type": "function",
      "name": "resetExpDampTimeConstant",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>expDampTimeConstant</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #expDampTimeConstant}."
          }
        ]
      }
    },
    "getEpsilon": {
      "type": "function",
      "name": "getEpsilon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>epsilon</code>.\n\nFor further details take a look at the property definition: {@link #epsilon}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for epsilon"
          }
        ]
      }
    },
    "setEpsilon": {
      "type": "function",
      "name": "setEpsilon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>epsilon</code>.\n\nFor further details take a look at the property definition: {@link #epsilon}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for epsilon"
          }
        ]
      }
    },
    "resetEpsilon": {
      "type": "function",
      "name": "resetEpsilon",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>epsilon</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #epsilon}."
          }
        ]
      }
    },
    "getDisplayFn": {
      "type": "function",
      "name": "getDisplayFn",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>displayFn</code>.\n\nFor further details take a look at the property definition: {@link #displayFn}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for displayFn"
          }
        ]
      }
    },
    "setDisplayFn": {
      "type": "function",
      "name": "setDisplayFn",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>displayFn</code>.\n\nFor further details take a look at the property definition: {@link #displayFn}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for displayFn"
          }
        ]
      }
    },
    "resetDisplayFn": {
      "type": "function",
      "name": "resetDisplayFn",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>displayFn</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #displayFn}."
          }
        ]
      }
    }
  },
  "descendants": []
}