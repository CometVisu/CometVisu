{
  "className": "cv.util.IconTools",
  "packageName": "cv.util",
  "name": "IconTools",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 866
      },
      "end": {
        "line": 365,
        "column": 3,
        "index": 12961
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<div class=\"authors\"><label>Author:</label> Christian Mayer</div><div class=\"since\"><label>Since:</label> 2015</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Christian Mayer"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2015"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": true,
  "isSingleton": false,
  "statics": {
    "hexColorRegEx": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 1220
        },
        "end": {
          "line": 38,
          "column": 36,
          "index": 1252
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>RegEx to determine a valid CSS style color like #rrggbb</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{RegExp}"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "colorMapping": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1364
        },
        "end": {
          "line": 53,
          "column": 5,
          "index": 1599
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>as a convenience, definition of a few colors</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object<string, string>}"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "iconCache": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 2115
        },
        "end": {
          "line": 68,
          "column": 17,
          "index": 2128
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          },
          {
            "name": "@description",
            "body": "<p>the Image() of all knows (i.e. used) icons</p>"
          }
        ],
        "@typedef": [
          {
            "name": "@typedef",
            "body": "iconCacheEntryHash"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object}"
          },
          {
            "name": "@type",
            "body": "{Object.<string, iconCacheEntryHash>}"
          }
        ],
        "@property": [
          {
            "name": "@property",
            "body": "{HTMLImageElement} icon - the original Image() of the icon"
          },
          {
            "name": "@property",
            "body": "{number} id - the unique ID for this icon"
          },
          {
            "name": "@property",
            "body": "{Object.<string, ImageData>} colors - cache all the transformed ImageDatas"
          },
          {
            "name": "@property",
            "body": "{string[]} toFill - all the icon colors to fill once the image was loaded"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "iconCacheMap": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 2192
        },
        "end": {
          "line": 72,
          "column": 20,
          "index": 2208
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>mapping of ID to Cache entry (URL)</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "iconDelay": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2394
        },
        "end": {
          "line": 77,
          "column": 17,
          "index": 2407
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>array of all icons to fill where the Image is not ready yet</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array.<Array<(HTMLCanvasElement|SVGElement), Object.<string, ImageData>, string>>}"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "iconDelayFn": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2487
        },
        "end": {
          "line": 82,
          "column": 21,
          "index": 2504
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>handler for delay function</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function}"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "tmpCanvas": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2511
        },
        "end": {
          "line": 84,
          "column": 19,
          "index": 2526
        }
      },
      "type": "variable",
      "access": "public"
    },
    "tmpCtx": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2532
        },
        "end": {
          "line": 85,
          "column": 16,
          "index": 2544
        }
      },
      "type": "variable",
      "access": "public"
    },
    "preloadedKUFicons": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2692
        },
        "end": {
          "line": 91,
          "column": 28,
          "index": 2716
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Were the KNX User Forum icons already preloaded?\n Only done when the config is using them</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{boolean}"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "iconDelayed": {
      "location": {
        "start": {
          "line": 99,
          "column": 4,
          "index": 2877
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 3722
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{(HTMLCanvasElement|SVGElement)} icon"
          },
          {
            "name": "@param",
            "body": "{Object.<string, ImageData>} colors"
          },
          {
            "name": "@param",
            "body": "{string} color"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createCanvas": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3924
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 4061
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create the HTML for the canvas element and return it.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} iconId"
          },
          {
            "name": "@param",
            "body": "{string?} styling"
          },
          {
            "name": "@param",
            "body": "{string?} classes"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "fillCanvas": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4251
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 4427
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fill the canvas with the ImageData. Also resize the\n canvas at the same time.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{HTMLCanvasElement} canvas"
          },
          {
            "name": "@param",
            "body": "{ImageData} imageData"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "innerRecolorLoop": {
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 4856
        },
        "end": {
          "line": 181,
          "column": 11,
          "index": 5915
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Two versions of a recoloring function to work around an Android bug:\n http://stackoverflow.com/questions/14969496/html5-canvas-pixel-manipulation-problems-on-mobile-devices-when-setting-the-alph\n https://code.google.com/p/android/issues/detail?id=17565</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{number} r"
          },
          {
            "name": "@param",
            "body": "{number} g"
          },
          {
            "name": "@param",
            "body": "{number} b"
          },
          {
            "name": "@param",
            "body": "{number[]} data"
          },
          {
            "name": "@param",
            "body": "{number} length"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "doRecolorNonTransparent": {
      "location": {
        "start": {
          "line": 189,
          "column": 4,
          "index": 6203
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 7355
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Do the recoloring based on <code>thisIcon</code> and store it in the\n hash <code>thisIconColors</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} color - color in the CSS style #rrggbb",
            "paramName": "color",
            "description": "- color in the CSS style #rrggbb",
            "type": "string"
          },
          {
            "name": "@param",
            "body": "{HTMLImageElement} thisIcon"
          },
          {
            "name": "@param",
            "body": "{Object.<string, iconCacheEntryHash>} thisIconColors"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "recolorNonTransparent": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 7754
        },
        "end": {
          "line": 289,
          "column": 5,
          "index": 10398
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Function to call for each icon that should be dynamically recolored.\n This will be called for each known URL, so only remember the string but\n don't load the image yet as it might not be needed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} url"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{recolorCallback} a function that will append the recolored image to\n the jQuery element passed to that function",
            "type": "recolorCallback",
            "description": " a function that will append the recolored image to\n the jQuery element passed to that function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "fillRecoloredIcon": {
      "location": {
        "start": {
          "line": 296,
          "column": 4,
          "index": 10603
        },
        "end": {
          "line": 310,
          "column": 5,
          "index": 11162
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This function must be called to fill a specific icon that was created.\n Is will be colored based on it's class name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{(HTMLCanvasElement|SVGElement)} icon"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "svgKUF": {
      "location": {
        "start": {
          "line": 316,
          "column": 4,
          "index": 11249
        },
        "end": {
          "line": 357,
          "column": 5,
          "index": 12788
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{string} iconID"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{recolorCallback}",
            "type": "recolorCallback",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 360,
        "column": 2,
        "index": 12797
      },
      "end": {
        "line": 364,
        "column": 3,
        "index": 12957
      }
    }
  },
  "descendants": []
}