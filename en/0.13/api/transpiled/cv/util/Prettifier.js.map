{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/util/Prettifier.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "xml",
    "_prettifyNode",
    "documentElement",
    "node",
    "level",
    "noFormat",
    "tabs",
    "Array",
    "fill",
    "join",
    "newLine",
    "nodeType",
    "Node",
    "TEXT_NODE",
    "textContent",
    "trim",
    "String",
    "escape",
    "COMMENT_NODE",
    "CDATA_SECTION_NODE",
    "tagName",
    "firstChild",
    "output",
    "attr",
    "prefix",
    "namespaces",
    "attributesOutput",
    "i",
    "attributes",
    "length",
    "namespaceURI",
    "nsIndex",
    "indexOf",
    "push",
    "name",
    "value",
    "forEach",
    "ns",
    "index",
    "childNodes",
    "hasTextChild",
    "prototype",
    "some",
    "call",
    "child",
    "cv",
    "util",
    "Prettifier"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Prettifier.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.util.Prettifier', {\n  type: 'static',\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n\n    /**\n     * Dumps an XML file with formatted content\n     * @param xml {XMLDocument}\n     * @returns {string}\n     */\n    xml(xml) {\n      return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + this._prettifyNode(xml.documentElement, 0);\n    },\n\n    _prettifyNode: function (node, level, noFormat) {\n      let tabs = Array(level).fill('  ').join('');\n      let newLine = '\\n';\n      if (node.nodeType === Node.TEXT_NODE) {\n        if (node.textContent.trim()) {\n          return (noFormat ? '' : tabs) + qx.xml.String.escape(node.textContent) + (noFormat ? '' : newLine);\n        }\n        return '';\n      }\n      if (node.nodeType === Node.COMMENT_NODE) {\n        return (noFormat ? '' : tabs) + `<!--${node.textContent}--> ${(noFormat ? '' : newLine)}`;\n      } else if (node.nodeType === Node.CDATA_SECTION_NODE) {\n        return (noFormat ? '' : tabs) + `<![CDATA[${node.textContent}]]> ${(noFormat ? '' : newLine)}`;\n      }\n      if (!node.tagName) {\n        return this._prettifyNode(node.firstChild, level);\n      }\n      let output = (noFormat ? '' : tabs) + `<${node.tagName}`; // >\\n\n      let attr;\n      let prefix;\n      const namespaces = [];\n      let attributesOutput = '';\n      for (let i = 0; i < node.attributes.length; i++) {\n        attr = node.attributes[i];\n        prefix = '';\n        if (attr.namespaceURI) {\n          let nsIndex = namespaces.indexOf(attr.namespaceURI);\n          if (!attr.prefix) {\n            if (nsIndex < 0) {\n              namespaces.push(attr.namespaceURI);\n              nsIndex = namespaces.length - 1;\n            }\n            prefix = `ns${nsIndex + 1}:`;\n          }\n        }\n        attributesOutput += ` ${prefix}${attr.name}=\"${attr.value}\"`;\n      }\n      namespaces.forEach((ns, index) => {\n        output += ` xmlns:ns${index+1}=\"${ns}\"`;\n      });\n      output += attributesOutput;\n      if (node.childNodes.length === 0) {\n        return output + ' />' + (!noFormat ? newLine : '');\n      }\n      output += '>';\n\n      let hasTextChild = Array.prototype.some.call(node.childNodes, child => child.nodeType === Node.TEXT_NODE && child.textContent.trim());\n      if (!noFormat && !hasTextChild) {\n        output += newLine;\n      }\n      for (let i = 0; i < node.childNodes.length; i++) {\n        output += this._prettifyNode(node.childNodes[i], level + 1, hasTextChild);\n      }\n      return output + (hasTextChild || noFormat ? '' : tabs) + `</${node.tagName}>` + (!noFormat ? newLine : '');\n    }\n  }\n});\n"
  ]
}