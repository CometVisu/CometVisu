{
  "className": "cv.data.Model",
  "packageName": "cv.data",
  "name": "Model",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 371,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Internal Model which holds all relevant data like addresses and widgetData\n and the states. Widget can add themselves as listeners to updates of certain addresses.</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 0.11.0 (2017)</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "0.11.0 (2017)"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 37,
        "column": 13
      },
      "end": {
        "line": 42,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "statics": {
    "READ": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 11
        }
      },
      "type": "variable",
      "access": "public"
    },
    "WRITE": {
      "location": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 12
        }
      },
      "type": "variable",
      "access": "public"
    },
    "isReadAddress": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "isWriteAddress": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    }
  },
  "properties": {
    "defaultBackendName": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "name": "defaultBackendName",
      "propertyType": "new",
      "init": "main",
      "check": "String",
      "defaultValue": "main"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__states": {
      "location": {
        "start": {
          "line": 80,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__stateListeners": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__addressList": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__widgetData": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getStateListener": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "backendName {String?} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onUpdate": {
      "location": {
        "start": {
          "line": 103,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the state of a single address</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "state {variant} new state",
            "paramName": "state",
            "description": " new state",
            "type": "variant"
          },
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setState": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 135,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Changes a state without notifying the listeners about that change.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "state {variant} new state",
            "paramName": "state",
            "description": " new state",
            "type": "variant"
          },
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "update": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle incoming data from backend</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "data {Map} Key/value map of address/state",
            "paramName": "data",
            "description": " Key/value map of address/state",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "updateFrom": {
      "location": {
        "start": {
          "line": 150,
          "column": 4
        },
        "end": {
          "line": 164,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>handles incoming data from a specific backend.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "data {Map} Key/value map of address/state",
            "paramName": "data",
            "description": " Key/value map of address/state",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getState": {
      "location": {
        "start": {
          "line": 173,
          "column": 4
        },
        "end": {
          "line": 178,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the current state of an address.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{variant}",
            "type": "variant",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addUpdateListener": {
      "location": {
        "start": {
          "line": 188,
          "column": 4
        },
        "end": {
          "line": 200,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a listener to an address, that gets called when an update for that address has been received.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "callback {Function} called on updates",
            "paramName": "callback",
            "description": " called on updates",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context of the callback",
            "paramName": "context",
            "description": " context of the callback",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeUpdateListener": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 232,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove an address listener</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "callback {Function} called on updates",
            "paramName": "callback",
            "description": " called on updates",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "context {Object} context of the callback",
            "paramName": "context",
            "description": " context of the callback",
            "type": "Object"
          },
          {
            "name": "@param",
            "body": "backendName {String} name of the backend",
            "paramName": "backendName",
            "description": " name of the backend",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addAddress": {
      "location": {
        "start": {
          "line": 240,
          "column": 4
        },
        "end": {
          "line": 253,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add an Address -&gt; Path mapping to the addressList</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} KNX-GA or openHAB item name",
            "paramName": "address",
            "description": " KNX-GA or openHAB item name",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "id {String} path to the widget",
            "paramName": "id",
            "description": " path to the widget",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "backendName {String?} optional backend name for this address",
            "paramName": "backendName",
            "description": " optional backend name for this address",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAddresses": {
      "location": {
        "start": {
          "line": 260,
          "column": 4
        },
        "end": {
          "line": 265,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the addresses as Array.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "backendName {String?} optional backend name for this address",
            "paramName": "backendName",
            "description": " optional backend name for this address",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array<String>} list of addresses",
            "type": "Array<String>",
            "description": " list of addresses"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setAddressList": {
      "location": {
        "start": {
          "line": 272,
          "column": 4
        },
        "end": {
          "line": 274,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for address list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Map} Address -> path mapping",
            "paramName": "value",
            "description": " Address -> path mapping",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "backendName {String?} optional backend name for this address",
            "paramName": "backendName",
            "description": " optional backend name for this address",
            "optional": true,
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAddressList": {
      "location": {
        "start": {
          "line": 281,
          "column": 4
        },
        "end": {
          "line": 283,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for the address list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "backendName {String?} optional backend name for this address",
            "paramName": "backendName",
            "description": " optional backend name for this address",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Address -> path mapping",
            "type": "Map",
            "description": " Address -> path mapping"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetAddressList": {
      "location": {
        "start": {
          "line": 290,
          "column": 4
        },
        "end": {
          "line": 292,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears the current address list.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "backendName {String?} optional backend name for this address",
            "paramName": "backendName",
            "description": " optional backend name for this address",
            "optional": true,
            "type": "String"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getWidgetData": {
      "location": {
        "start": {
          "line": 299,
          "column": 4
        },
        "end": {
          "line": 301,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return (reference to) widgetData object by path.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} widget path",
            "paramName": "path",
            "description": " widget path",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} widget data map",
            "type": "Map",
            "description": " widget data map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getWidgetDataByElement": {
      "location": {
        "start": {
          "line": 309,
          "column": 4
        },
        "end": {
          "line": 317,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return (reference to) widget data by element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {Element} DOM-Element to retrieve the widgetData for",
            "paramName": "element",
            "description": " DOM-Element to retrieve the widgetData for",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} widget data Map",
            "type": "Map",
            "description": " widget data Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setWidgetData": {
      "location": {
        "start": {
          "line": 326,
          "column": 4
        },
        "end": {
          "line": 333,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Merge obj in the widgetData.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} widget path to store the data",
            "paramName": "path",
            "description": " widget path to store the data",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "obj {Map} data to store",
            "paramName": "obj",
            "description": " data to store",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} updated widget data map",
            "type": "Map",
            "description": " updated widget data map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setWidgetDataModel": {
      "location": {
        "start": {
          "line": 339,
          "column": 4
        },
        "end": {
          "line": 341,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Setter for widget data model</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Map} path -> widget data map",
            "paramName": "value",
            "description": " path -> widget data map",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getWidgetDataModel": {
      "location": {
        "start": {
          "line": 347,
          "column": 4
        },
        "end": {
          "line": 349,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Getter for widget data model</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} path -> widget data map",
            "type": "Map",
            "description": " path -> widget data map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetWidgetDataModel": {
      "location": {
        "start": {
          "line": 355,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clear the widget data model.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clear": {
      "location": {
        "start": {
          "line": 363,
          "column": 4
        },
        "end": {
          "line": 368,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clear the model, internal method for testing purposes</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDefaultBackendName": {
      "type": "function",
      "name": "getDefaultBackendName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultBackendName</code>.\n\nFor further details take a look at the property definition: {@link #defaultBackendName}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultBackendName"
          }
        ]
      }
    },
    "setDefaultBackendName": {
      "type": "function",
      "name": "setDefaultBackendName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultBackendName</code>.\n\nFor further details take a look at the property definition: {@link #defaultBackendName}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultBackendName"
          }
        ]
      }
    },
    "resetDefaultBackendName": {
      "type": "function",
      "name": "resetDefaultBackendName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultBackendName</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultBackendName}."
          }
        ]
      }
    }
  },
  "descendants": []
}