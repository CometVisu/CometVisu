{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/data/Model.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__states",
    "__stateListeners",
    "__addressList",
    "__widgetData",
    "statics",
    "READ",
    "WRITE",
    "isReadAddress",
    "address",
    "mode",
    "cv",
    "data",
    "Model",
    "isWriteAddress",
    "properties",
    "defaultBackendName",
    "check",
    "init",
    "members",
    "getStateListener",
    "backendName",
    "getDefaultBackendName",
    "prototype",
    "hasOwnProperty",
    "call",
    "onUpdate",
    "state",
    "initial",
    "changed",
    "forEach",
    "listener",
    "setState",
    "update",
    "updateFrom",
    "addressList",
    "getOwnPropertyNames",
    "warn",
    "getState",
    "undefined",
    "addUpdateListener",
    "callback",
    "context",
    "push",
    "removeUpdateListener",
    "removeIndex",
    "some",
    "entry",
    "i",
    "splice",
    "length",
    "addAddress",
    "id",
    "list",
    "getAddresses",
    "keys",
    "setAddressList",
    "value",
    "getAddressList",
    "resetAddressList",
    "getWidgetData",
    "path",
    "getWidgetDataByElement",
    "element",
    "parent",
    "parentNode",
    "getAttribute",
    "setWidgetData",
    "obj",
    "attrname",
    "setWidgetDataModel",
    "getWidgetDataModel",
    "resetWidgetDataModel",
    "clear"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Model.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Internal Model which holds all relevant data like addresses and widgetData\n * and the states. Widget can add themselves as listeners to updates of certain addresses.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0 (2017)\n */\nqx.Class.define('cv.data.Model', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function() {\n    this.__states = {};\n    this.__stateListeners = {};\n    this.__addressList = {};\n    this.__widgetData = {};\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    READ: 1,\n    WRITE: 2,\n\n    isReadAddress: function(address) {\n      return !!(address.mode & cv.data.Model.READ);\n    },\n\n    isWriteAddress: function(address) {\n      return !!(address.mode & cv.data.Model.WRITE);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    defaultBackendName: {\n      check: 'String',\n      init: 'main'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __states : null,\n    __stateListeners: null,\n    __addressList : null,\n    __widgetData: null,\n\n    /**\n     * @param backendName {String?} name of the backend\n     * @return {Map}\n     */\n    getStateListener: function (backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) ? this.__stateListeners : {};\n    },\n\n    /**\n     * Updates the state of a single address\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    onUpdate: function(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      const initial = !Object.prototype.hasOwnProperty.call(this.__states[backendName], address);\n      const changed = initial || this.__states[backendName][address] !== state;\n      this.__states[backendName][address] = state;\n      // notify listeners\n      if (Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) && this.__stateListeners[backendName][address]) {\n        this.__stateListeners[backendName][address].forEach(function(listener) {\n          listener[0].call(listener[1], address, state, initial, changed);\n        }, this);\n      }\n    },\n\n    /**\n     * Changes a state without notifying the listeners about that change.\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    setState(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      this.__states[backendName][address] = state;\n    },\n\n    /**\n     * Handle incoming data from backend\n     * @param data {Map} Key/value map of address/state\n     */\n    update: function(data) {\n      this.updateFrom(this.getDefaultBackendName(), data);\n    },\n\n    /**\n     * handles incoming data from a specific backend.\n     * @param backendName {String} name of the backend\n     * @param data {Map} Key/value map of address/state\n     */\n    updateFrom (backendName, data) {\n      if (!data) {\n        return;\n      }\n      const addressList = this.__addressList[backendName];\n      if (addressList) {\n        Object.getOwnPropertyNames(data).forEach(function (address) {\n          if (Object.prototype.hasOwnProperty.call(addressList, address)) {\n            this.onUpdate(address, data[address], backendName);\n          }\n        }, this);\n      } else {\n        this.warn('no addresses registered for backend \"'+backendName+'\", skipping update');\n      }\n    },\n\n    /**\n     * Get the current state of an address.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param backendName {String} name of the backend\n     * @return {variant}\n     */\n    getState: function(address, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__states, backendName) ? this.__states[backendName][address] : undefined;\n    },\n\n    /**\n     * Add a listener to an address, that gets called when an update for that address has been received.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    addUpdateListener: function(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        this.__stateListeners[backendName] = {};\n      }\n\n      if (!this.__stateListeners[backendName][address]) {\n        this.__stateListeners[backendName][address] = [];\n      }\n      this.__stateListeners[backendName][address].push([callback, context]);\n    },\n\n    /**\n     * Remove an address listener\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    removeUpdateListener: function(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        if (this.__stateListeners[backendName][address]) {\n          let removeIndex = -1;\n          this.__stateListeners[backendName][address].some(function (entry, i) {\n            if (entry[0] === callback && entry[1] === context) {\n              removeIndex = i;\n              return true;\n            }\n            return false;\n          });\n          if (removeIndex >= 0) {\n            this.__stateListeners[backendName][address].splice(removeIndex, 1);\n            if (this.__stateListeners[backendName][address].length === 0) {\n              delete this.__stateListeners[backendName][address];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Add an Address -> Path mapping to the addressList\n     * @param address {String} KNX-GA or openHAB item name\n     * @param id {String} path to the widget\n     * @param backendName {String?} optional backend name for this address\n     */\n    addAddress: function (address, id, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__addressList, backendName)) {\n        this.__addressList[backendName] = {};\n      }\n      const list = this.__addressList[backendName];\n      if (address in list) {\n        list[address].push(id);\n      } else {\n        list[address] = [id];\n      }\n    },\n\n    /**\n     * Get the addresses as Array.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Array<String>} list of addresses\n     */\n    getAddresses: function (backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__addressList, backendName) ? Object.keys(this.__addressList[backendName]) : [];\n    },\n\n    /**\n     * Setter for address list.\n     * @param value {Map} Address -> path mapping\n     * @param backendName {String?} optional backend name for this address\n     */\n    setAddressList: function(value, backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = value;\n    },\n\n    /**\n     * Getter for the address list.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Map} Address -> path mapping\n     */\n    getAddressList: function(backendName) {\n      return this.__addressList[backendName || this.getDefaultBackendName()];\n    },\n\n    /**\n     * Clears the current address list.\n     * @param backendName {String?} optional backend name for this address\n     * @internal\n     */\n    resetAddressList: function(backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = {};\n    },\n\n    /**\n     * Return (reference to) widgetData object by path.\n     * @param path {String} widget path\n     * @return {Map} widget data map\n     */\n    getWidgetData: function (path) {\n      return this.__widgetData[path] || (this.__widgetData[path] = {});\n    },\n\n\n    /**\n     * Return (reference to) widget data by element\n     * @param element {Element} DOM-Element to retrieve the widgetData for\n     * @return {Map} widget data Map\n     */\n    getWidgetDataByElement: function (element) {\n      const parent = element.parentNode;\n      let path = parent.getAttribute('id');\n\n      if (path === undefined) {\n        path = parent.parentNode.getAttribute('id');\n      }\n      return this.getWidgetData(path);\n    },\n\n    /**\n     * Merge obj in the widgetData.\n     *\n     * @param path {String} widget path to store the data\n     * @param obj {Map} data to store\n     * @return {Map} updated widget data map\n     */\n    setWidgetData: function (path, obj) {\n      const data = this.getWidgetData(path);\n\n      Object.getOwnPropertyNames(obj).forEach(function(attrname) {\n        data[attrname] = obj[attrname];\n      }, this);\n      return data;\n    },\n\n    /**\n     * Setter for widget data model\n     * @param value {Map} path -> widget data map\n     */\n    setWidgetDataModel: function(value) {\n      this.__widgetData = value;\n    },\n\n    /**\n     * Getter for widget data model\n     * @return {Map} path -> widget data map\n     */\n    getWidgetDataModel: function() {\n      return this.__widgetData;\n    },\n\n    /**\n     * Clear the widget data model.\n     * @internal\n     */\n    resetWidgetDataModel: function() {\n      this.__widgetData = {};\n    },\n\n    /**\n     * Clear the model, internal method for testing purposes\n     * @internal\n     */\n    clear: function() {\n      this.__addressList = {};\n      this.__widgetData = {};\n      this.__states = {};\n      this.__stateListeners = {};\n    }\n  }\n\n});\n"
  ]
}