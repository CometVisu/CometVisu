{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__states",
    "__stateListeners",
    "__addressList",
    "__widgetData",
    "statics",
    "READ",
    "WRITE",
    "isReadAddress",
    "address",
    "mode",
    "cv",
    "data",
    "Model",
    "isWriteAddress",
    "properties",
    "defaultBackendName",
    "check",
    "init",
    "members",
    "getStateListener",
    "backendName",
    "getDefaultBackendName",
    "prototype",
    "hasOwnProperty",
    "call",
    "onUpdate",
    "state",
    "initial",
    "changed",
    "forEach",
    "listener",
    "setState",
    "update",
    "updateFrom",
    "addressList",
    "getOwnPropertyNames",
    "warn",
    "getState",
    "undefined",
    "addUpdateListener",
    "callback",
    "context",
    "push",
    "removeUpdateListener",
    "removeIndex",
    "some",
    "entry",
    "i",
    "splice",
    "length",
    "addAddress",
    "id",
    "list",
    "includes",
    "getAddresses",
    "keys",
    "setAddressList",
    "value",
    "getAddressList",
    "resetAddressList",
    "getWidgetData",
    "path",
    "getWidgetDataByElement",
    "element",
    "parent",
    "parentNode",
    "getAttribute",
    "setWidgetData",
    "obj",
    "attrname",
    "setWidgetDataModel",
    "getWidgetDataModel",
    "resetWidgetDataModel",
    "clear"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/data/Model.js"
  ],
  "sourcesContent": [
    "/* Model.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Internal Model which holds all relevant data like addresses and widgetData\n * and the states. Widget can add themselves as listeners to updates of certain addresses.\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.11.0 (2017)\n */\nqx.Class.define('cv.data.Model', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    this.__states = {};\n    this.__stateListeners = {};\n    this.__addressList = {};\n    this.__widgetData = {};\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    READ: 1,\n    WRITE: 2,\n\n    isReadAddress(address) {\n      return !!(address.mode & cv.data.Model.READ);\n    },\n\n    isWriteAddress(address) {\n      return !!(address.mode & cv.data.Model.WRITE);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    defaultBackendName: {\n      check: 'String',\n      init: 'main'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __states: null,\n    __stateListeners: null,\n    __addressList: null,\n    __widgetData: null,\n\n    /**\n     * @param backendName {String?} name of the backend\n     * @return {Map}\n     */\n    getStateListener(backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) ? this.__stateListeners : {};\n    },\n\n    /**\n     * Updates the state of a single address\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    onUpdate(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      const initial = !Object.prototype.hasOwnProperty.call(this.__states[backendName], address);\n\n      const changed = initial || this.__states[backendName][address] !== state;\n      this.__states[backendName][address] = state;\n      // notify listeners\n      if (\n        Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) &&\n        this.__stateListeners[backendName][address]\n      ) {\n        this.__stateListeners[backendName][address].forEach(function (listener) {\n          listener[0].call(listener[1], address, state, initial, changed);\n        }, this);\n      }\n    },\n\n    /**\n     * Changes a state without notifying the listeners about that change.\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    setState(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      this.__states[backendName][address] = state;\n    },\n\n    /**\n     * Handle incoming data from backend\n     * @param data {Map} Key/value map of address/state\n     */\n    update(data) {\n      this.updateFrom(this.getDefaultBackendName(), data);\n    },\n\n    /**\n     * handles incoming data from a specific backend.\n     * @param backendName {String} name of the backend\n     * @param data {Map} Key/value map of address/state\n     */\n    updateFrom(backendName, data) {\n      if (!data) {\n        return;\n      }\n      const addressList = this.__addressList[backendName];\n      if (addressList) {\n        Object.getOwnPropertyNames(data).forEach(function (address) {\n          if (Object.prototype.hasOwnProperty.call(addressList, address)) {\n            this.onUpdate(address, data[address], backendName);\n          }\n        }, this);\n      } else {\n        this.warn('no addresses registered for backend \"' + backendName + '\", skipping update');\n      }\n    },\n\n    /**\n     * Get the current state of an address.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param backendName {String} name of the backend\n     * @return {variant}\n     */\n    getState(address, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__states, backendName)\n        ? this.__states[backendName][address]\n        : undefined;\n    },\n\n    /**\n     * Add a listener to an address, that gets called when an update for that address has been received.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    addUpdateListener(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        this.__stateListeners[backendName] = {};\n      }\n\n      if (!this.__stateListeners[backendName][address]) {\n        this.__stateListeners[backendName][address] = [];\n      }\n      this.__stateListeners[backendName][address].push([callback, context]);\n    },\n\n    /**\n     * Remove an address listener\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    removeUpdateListener(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        if (this.__stateListeners[backendName][address]) {\n          let removeIndex = -1;\n          this.__stateListeners[backendName][address].some(function (entry, i) {\n            if (entry[0] === callback && entry[1] === context) {\n              removeIndex = i;\n              return true;\n            }\n            return false;\n          });\n          if (removeIndex >= 0) {\n            this.__stateListeners[backendName][address].splice(removeIndex, 1);\n            if (this.__stateListeners[backendName][address].length === 0) {\n              delete this.__stateListeners[backendName][address];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Add an Address -> Path mapping to the addressList\n     * @param address {String} KNX-GA or openHAB item name\n     * @param id {String} path to the widget\n     * @param backendName {String?} optional backend name for this address\n     */\n    addAddress(address, id, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__addressList, backendName)) {\n        this.__addressList[backendName] = {};\n      }\n      const list = this.__addressList[backendName];\n      if (address in list) {\n        if (!list[address].includes(id)) {\n          list[address].push(id);\n        }\n      } else {\n        list[address] = [id];\n      }\n    },\n\n    /**\n     * Get the addresses as Array.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Array<String>} list of addresses\n     */\n    getAddresses(backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__addressList, backendName)\n        ? Object.keys(this.__addressList[backendName])\n        : [];\n    },\n\n    /**\n     * Setter for address list.\n     * @param value {Map} Address -> path mapping\n     * @param backendName {String?} optional backend name for this address\n     */\n    setAddressList(value, backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = value;\n    },\n\n    /**\n     * Getter for the address list.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Map} Address -> path mapping\n     */\n    getAddressList(backendName) {\n      return this.__addressList[backendName || this.getDefaultBackendName()];\n    },\n\n    /**\n     * Clears the current address list.\n     * @param backendName {String?} optional backend name for this address\n     * @internal\n     */\n    resetAddressList(backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = {};\n    },\n\n    /**\n     * Return (reference to) widgetData object by path.\n     * @param path {String} widget path\n     * @return {Map} widget data map\n     */\n    getWidgetData(path) {\n      return this.__widgetData[path] || (this.__widgetData[path] = {});\n    },\n\n    /**\n     * Return (reference to) widget data by element\n     * @param element {Element} DOM-Element to retrieve the widgetData for\n     * @return {Map} widget data Map\n     */\n    getWidgetDataByElement(element) {\n      const parent = element.parentNode;\n      let path = parent.getAttribute('id');\n\n      if (path === undefined) {\n        path = parent.parentNode.getAttribute('id');\n      }\n      return this.getWidgetData(path);\n    },\n\n    /**\n     * Merge obj in the widgetData.\n     *\n     * @param path {String} widget path to store the data\n     * @param obj {Map} data to store\n     * @return {Map} updated widget data map\n     */\n    setWidgetData(path, obj) {\n      const data = this.getWidgetData(path);\n\n      Object.getOwnPropertyNames(obj).forEach(function (attrname) {\n        data[attrname] = obj[attrname];\n      }, this);\n      return data;\n    },\n\n    /**\n     * Setter for widget data model\n     * @param value {Map} path -> widget data map\n     */\n    setWidgetDataModel(value) {\n      this.__widgetData = value;\n    },\n\n    /**\n     * Getter for widget data model\n     * @return {Map} path -> widget data map\n     */\n    getWidgetDataModel() {\n      return this.__widgetData;\n    },\n\n    /**\n     * Clear the widget data model.\n     * @internal\n     */\n    resetWidgetDataModel() {\n      this.__widgetData = {};\n    },\n\n    /**\n     * Clear the model, internal method for testing purposes\n     * @internal\n     */\n    clear() {\n      this.__addressList = {};\n      this.__widgetData = {};\n      this.__states = {};\n      this.__stateListeners = {};\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}