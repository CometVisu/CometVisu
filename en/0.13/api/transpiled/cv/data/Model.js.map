{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__states",
    "__stateListeners",
    "__addressList",
    "__widgetData",
    "statics",
    "READ",
    "WRITE",
    "isReadAddress",
    "address",
    "mode",
    "cv",
    "data",
    "Model",
    "isWriteAddress",
    "properties",
    "defaultBackendName",
    "check",
    "init",
    "members",
    "getStateListener",
    "backendName",
    "getDefaultBackendName",
    "prototype",
    "hasOwnProperty",
    "call",
    "onUpdate",
    "state",
    "initial",
    "changed",
    "forEach",
    "listener",
    "setState",
    "update",
    "updateFrom",
    "addressList",
    "getOwnPropertyNames",
    "warn",
    "getState",
    "undefined",
    "addUpdateListener",
    "callback",
    "context",
    "push",
    "backend",
    "io",
    "BackendConnections",
    "getClient",
    "isConnected",
    "addSubscription",
    "removeUpdateListener",
    "removeIndex",
    "some",
    "entry",
    "i",
    "splice",
    "length",
    "addAddress",
    "id",
    "list",
    "includes",
    "getAddresses",
    "keys",
    "setAddressList",
    "value",
    "getAddressList",
    "resetAddressList",
    "getWidgetData",
    "path",
    "getWidgetDataByElement",
    "element",
    "parent",
    "parentNode",
    "getAttribute",
    "setWidgetData",
    "obj",
    "attrname",
    "setWidgetDataModel",
    "getWidgetDataModel",
    "resetWidgetDataModel",
    "clear"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/data/Model.js"
  ],
  "sourcesContent": [
    "/* Model.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Internal Model which holds all relevant data like addresses and widgetData\n * and the states. Widget can add themselves as listeners to updates of certain addresses.\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.11.0 (2017)\n */\nqx.Class.define('cv.data.Model', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct() {\n    this.__states = {};\n    this.__stateListeners = {};\n    this.__addressList = {};\n    this.__widgetData = {};\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    READ: 1,\n    WRITE: 2,\n\n    isReadAddress(address) {\n      return !!(address.mode & cv.data.Model.READ);\n    },\n\n    isWriteAddress(address) {\n      return !!(address.mode & cv.data.Model.WRITE);\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    defaultBackendName: {\n      check: 'String',\n      init: 'main'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __states: null,\n    __stateListeners: null,\n    __addressList: null,\n    __widgetData: null,\n\n    /**\n     * @param backendName {String?} name of the backend\n     * @return {Map}\n     */\n    getStateListener(backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) ? this.__stateListeners : {};\n    },\n\n    /**\n     * Updates the state of a single address\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    onUpdate(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      const initial = !Object.prototype.hasOwnProperty.call(this.__states[backendName], address);\n\n      const changed = initial || this.__states[backendName][address] !== state;\n      this.__states[backendName][address] = state;\n      // notify listeners\n      if (\n        Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName) &&\n        this.__stateListeners[backendName][address]\n      ) {\n        this.__stateListeners[backendName][address].forEach(function (listener) {\n          listener[0].call(listener[1], address, state, initial, changed);\n        }, this);\n      }\n    },\n\n    /**\n     * Changes a state without notifying the listeners about that change.\n     * @param address {String} KNX-GA or openHAB item name\n     * @param state {variant} new state\n     * @param backendName {String} name of the backend\n     */\n    setState(address, state, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__states, backendName)) {\n        this.__states[backendName] = {};\n      }\n      this.__states[backendName][address] = state;\n    },\n\n    /**\n     * Handle incoming data from backend\n     * @param data {Map} Key/value map of address/state\n     */\n    update(data) {\n      this.updateFrom(this.getDefaultBackendName(), data);\n    },\n\n    /**\n     * handles incoming data from a specific backend.\n     * @param backendName {String} name of the backend\n     * @param data {Map} Key/value map of address/state\n     */\n    updateFrom(backendName, data) {\n      if (!data) {\n        return;\n      }\n      const addressList = this.__addressList[backendName];\n      if (addressList) {\n        Object.getOwnPropertyNames(data).forEach(function (address) {\n          if (Object.prototype.hasOwnProperty.call(addressList, address)) {\n            this.onUpdate(address, data[address], backendName);\n          }\n        }, this);\n      } else {\n        this.warn('no addresses registered for backend \"' + backendName + '\", skipping update');\n      }\n    },\n\n    /**\n     * Get the current state of an address.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param backendName {String} name of the backend\n     * @return {variant}\n     */\n    getState(address, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__states, backendName)\n        ? this.__states[backendName][address]\n        : undefined;\n    },\n\n    /**\n     * Add a listener to an address, that gets called when an update for that address has been received.\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    addUpdateListener(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        this.__stateListeners[backendName] = {};\n      }\n\n      if (!this.__stateListeners[backendName][address]) {\n        this.__stateListeners[backendName][address] = [];\n      }\n      this.__stateListeners[backendName][address].push([callback, context]);\n\n      const backend = cv.io.BackendConnections.getClient(backendName);\n      if (backend && backend.isConnected()) {\n        backend.addSubscription(address);\n      }\n    },\n\n    /**\n     * Remove an address listener\n     *\n     * @param address {String} KNX-GA or openHAB item name\n     * @param callback {Function} called on updates\n     * @param context {Object} context of the callback\n     * @param backendName {String} name of the backend\n     */\n    removeUpdateListener(address, callback, context, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (Object.prototype.hasOwnProperty.call(this.__stateListeners, backendName)) {\n        if (this.__stateListeners[backendName][address]) {\n          let removeIndex = -1;\n          this.__stateListeners[backendName][address].some(function (entry, i) {\n            if (entry[0] === callback && entry[1] === context) {\n              removeIndex = i;\n              return true;\n            }\n            return false;\n          });\n          if (removeIndex >= 0) {\n            this.__stateListeners[backendName][address].splice(removeIndex, 1);\n            if (this.__stateListeners[backendName][address].length === 0) {\n              delete this.__stateListeners[backendName][address];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Add an Address -> Path mapping to the addressList\n     * @param address {String} KNX-GA or openHAB item name\n     * @param id {String} path to the widget\n     * @param backendName {String?} optional backend name for this address\n     */\n    addAddress(address, id, backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      if (!Object.prototype.hasOwnProperty.call(this.__addressList, backendName)) {\n        this.__addressList[backendName] = {};\n      }\n      const list = this.__addressList[backendName];\n      if (address in list) {\n        if (!list[address].includes(id)) {\n          list[address].push(id);\n        }\n      } else {\n        list[address] = [id];\n      }\n    },\n\n    /**\n     * Get the addresses as Array.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Array<String>} list of addresses\n     */\n    getAddresses(backendName) {\n      if (!backendName) {\n        backendName = this.getDefaultBackendName();\n      }\n      return Object.prototype.hasOwnProperty.call(this.__addressList, backendName)\n        ? Object.keys(this.__addressList[backendName])\n        : [];\n    },\n\n    /**\n     * Setter for address list.\n     * @param value {Map} Address -> path mapping\n     * @param backendName {String?} optional backend name for this address\n     */\n    setAddressList(value, backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = value;\n    },\n\n    /**\n     * Getter for the address list.\n     * @param backendName {String?} optional backend name for this address\n     * @return {Map} Address -> path mapping\n     */\n    getAddressList(backendName) {\n      return this.__addressList[backendName || this.getDefaultBackendName()];\n    },\n\n    /**\n     * Clears the current address list.\n     * @param backendName {String?} optional backend name for this address\n     * @internal\n     */\n    resetAddressList(backendName) {\n      this.__addressList[backendName || this.getDefaultBackendName()] = {};\n    },\n\n    /**\n     * Return (reference to) widgetData object by path.\n     * @param path {String} widget path\n     * @return {Map} widget data map\n     */\n    getWidgetData(path) {\n      return this.__widgetData[path] || (this.__widgetData[path] = {});\n    },\n\n    /**\n     * Return (reference to) widget data by element\n     * @param element {Element} DOM-Element to retrieve the widgetData for\n     * @return {Map} widget data Map\n     */\n    getWidgetDataByElement(element) {\n      const parent = element.parentNode;\n      let path = parent.getAttribute('id');\n\n      if (path === undefined) {\n        path = parent.parentNode.getAttribute('id');\n      }\n      return this.getWidgetData(path);\n    },\n\n    /**\n     * Merge obj in the widgetData.\n     *\n     * @param path {String} widget path to store the data\n     * @param obj {Map} data to store\n     * @return {Map} updated widget data map\n     */\n    setWidgetData(path, obj) {\n      const data = this.getWidgetData(path);\n\n      Object.getOwnPropertyNames(obj).forEach(function (attrname) {\n        data[attrname] = obj[attrname];\n      }, this);\n      return data;\n    },\n\n    /**\n     * Setter for widget data model\n     * @param value {Map} path -> widget data map\n     */\n    setWidgetDataModel(value) {\n      this.__widgetData = value;\n    },\n\n    /**\n     * Getter for widget data model\n     * @return {Map} path -> widget data map\n     */\n    getWidgetDataModel() {\n      return this.__widgetData;\n    },\n\n    /**\n     * Clear the widget data model.\n     * @internal\n     */\n    resetWidgetDataModel() {\n      this.__widgetData = {};\n    },\n\n    /**\n     * Clear the model, internal method for testing purposes\n     * @internal\n     */\n    clear() {\n      this.__addressList = {};\n      this.__widgetData = {};\n      this.__states = {};\n      this.__stateListeners = {};\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}