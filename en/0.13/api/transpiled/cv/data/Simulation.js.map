{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "configFile",
    "client",
    "constructor",
    "call",
    "_client",
    "Init",
    "getApplication",
    "setServerHasPhpSupport",
    "init",
    "properties",
    "initialized",
    "check",
    "event",
    "members",
    "__simulations",
    "__encodeSimulatedStates",
    "__sequence",
    "__sequenceIndex",
    "_addressConfigs",
    "_this",
    "r",
    "io",
    "request",
    "Xhr",
    "addListener",
    "e",
    "cv",
    "Config",
    "initialDemoData",
    "getTarget",
    "getResponse",
    "__applyTestData",
    "setInitialized",
    "debug",
    "error",
    "send",
    "__P_558_4",
    "_this2",
    "__xhr",
    "xhr",
    "now",
    "Date",
    "url",
    "startsWith",
    "forEach",
    "d",
    "data",
    "body",
    "offset",
    "length",
    "entry",
    "responseData",
    "feed",
    "entries",
    "date",
    "setDate",
    "getDate",
    "publishedDate",
    "toUTCString",
    "setTime",
    "getTime",
    "that",
    "sinon",
    "dev",
    "unit",
    "Sinon",
    "getSinon",
    "sandbox",
    "FakeXMLHttpRequest",
    "prototype",
    "open",
    "method",
    "async",
    "username",
    "password",
    "responseText",
    "responseXML",
    "requestHeaders",
    "sendFlag",
    "useFilters",
    "xhrArgs",
    "arguments",
    "defake",
    "filters",
    "some",
    "filter",
    "deFake",
    "apply",
    "setRequestHeader",
    "readyStateChange",
    "OPENED",
    "FakeServer",
    "getInstance",
    "addFilter",
    "args",
    "indexOf",
    "getResourcePath",
    "test",
    "path",
    "split",
    "pop",
    "suffix",
    "window",
    "location",
    "pathname",
    "server",
    "getFakeServer",
    "respondWith",
    "parsed",
    "util",
    "Uri",
    "parseUri",
    "generatorName",
    "respond",
    "JSON",
    "stringify",
    "generate",
    "queryKey",
    "host",
    "report",
    "Record",
    "normalizeUrl",
    "substr",
    "log",
    "Logger",
    "response",
    "shift",
    "readyState",
    "status",
    "headers",
    "bind",
    "onWrite",
    "address",
    "value",
    "hasOwnProperty",
    "_processSimulation",
    "_registerSimulations",
    "simulations",
    "keys",
    "mainAddress",
    "simulation",
    "additionalAddresses",
    "addr",
    "_registerGenerators",
    "generators",
    "_this3",
    "__generators",
    "_loop",
    "gen",
    "name",
    "interval",
    "setInterval",
    "targetValue",
    "Math",
    "random",
    "deviation",
    "Transform",
    "encodeBusAndRaw",
    "raw",
    "receive",
    "i",
    "options",
    "generator",
    "end",
    "start",
    "resolution",
    "dynamicResolution",
    "series",
    "parseInt",
    "match",
    "exec",
    "val",
    "push",
    "_startSequence",
    "Timer",
    "once",
    "delay",
    "_this4",
    "stop",
    "startValues",
    "stopValues",
    "type",
    "direction",
    "initValue",
    "Model",
    "getState",
    "targetAddress",
    "undefined",
    "decode",
    "timer",
    "stepSize",
    "newValue",
    "update",
    "sendValue",
    "prepareTestData",
    "addresses",
    "_this5",
    "encodeFirst",
    "widgetData",
    "getWidgetDataModel",
    "id",
    "assign",
    "_iterator",
    "_createForOfIteratorHelper",
    "document",
    "querySelectorAll",
    "_step",
    "s",
    "n",
    "done",
    "addressElement",
    "textContent",
    "trim",
    "transform",
    "getAttribute",
    "err",
    "f",
    "ga",
    "states",
    "_iterator2",
    "sequence",
    "_step2",
    "seq",
    "_loop2",
    "_ga",
    "sim",
    "mapping",
    "valueArray",
    "map",
    "_val$split",
    "_val$split2",
    "_slicedToArray",
    "startAddress",
    "startVal",
    "fakeXhr",
    "workingXHR",
    "responseType",
    "copyAttrs",
    "attr",
    "navigator",
    "userAgent",
    "stateChangeStart",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "stateChangeEnd",
    "onreadystatechange",
    "target",
    "currentTarget",
    "stateChange",
    "addEventListener",
    "_loop3",
    "eventListeners",
    "handler",
    "listener",
    "capture",
    "destruct",
    "Simulation"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/data/Simulation.js"
  ],
  "sourcesContent": [
    "/**\n * Handles all status update simulation used together with the cv.io.Mockup backend e.g. in the demo configs\n */\nqx.Class.define('cv.data.Simulation', {\n  extend: qx.core.Object,\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(configFile, client) {\n    super();\n    this._client = client;\n    // override PHP support check, because the responses are faked\n    qx.core.Init.getApplication().setServerHasPhpSupport(true);\n    this.init(configFile);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    initialized: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeInitialized'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * @var {cv.io.Mockup}\n     */\n    _client: null,\n    __simulations: null,\n    __encodeSimulatedStates: false,\n    __sequence: null,\n    __sequenceIndex: 0,\n    _addressConfigs: null,\n\n    init(configFile) {\n      // load the demo data to fill the visu with some values\n      const r = new qx.io.request.Xhr(configFile);\n      r.addListener('success', e => {\n        cv.Config.initialDemoData = e.getTarget().getResponse();\n        this.__applyTestData();\n        this.setInitialized(true);\n        this.debug('simulator data has been loaded');\n      });\n      r.addListener('fail', () => {\n        this.error('failed parsing demo data');\n      });\n      r.send();\n    },\n\n    __applyTestData() {\n      this.__xhr = cv.Config.initialDemoData.xhr;\n\n      // we need to adjust the timestamps of the chart data\n      const now = Date.now();\n      for (let url in this.__xhr) {\n        if (url.startsWith('rrd')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body;\n            const offset = now - data[data.length - 1][0];\n            data.forEach(entry => (entry[0] += offset));\n          });\n        } else if (url.startsWith('resource/plugin/rsslog.php')) {\n          this.__xhr[url].forEach(d => {\n            const data = d.body.responseData.feed.entries;\n            let date = new Date();\n            date.setDate(date.getDate() - 1);\n            data.forEach(entry => {\n              entry.publishedDate = date.toUTCString();\n              date.setTime(date.getTime() + 60 * 60 * 1000);\n            });\n          });\n        }\n      }\n\n      const that = this;\n      const sinon = qx.dev.unit.Sinon.getSinon();\n      sinon.sandbox = sinon;\n\n      // override sinons filter handling to be able to manipulate the target URL from the filter\n      // eslint-disable-next-line consistent-return\n      sinon.FakeXMLHttpRequest.prototype.open = function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async == 'boolean' ? async : true;\n        this.username = username;\n        this.password = password;\n        this.responseText = null;\n        this.responseXML = null;\n        this.requestHeaders = {};\n        this.sendFlag = false;\n        if (sinon.FakeXMLHttpRequest.useFilters === true) {\n          let xhrArgs = arguments;\n          let defake = sinon.FakeXMLHttpRequest.filters.some(function (filter) {\n            return filter.call(this, xhrArgs);\n          });\n          if (defake) {\n            const xhr = that.deFake(this, xhrArgs);\n            xhr.open.apply(xhr, xhrArgs);\n            xhr.setRequestHeader('Accept', 'text/*, image/*');\n            return;\n          }\n        }\n        this.readyStateChange(sinon.FakeXMLHttpRequest.OPENED);\n      };\n\n      // configure server\n      qx.dev.FakeServer.getInstance().addFilter(args => {\n        const method = args[0];\n        const url = args[1];\n        if (url.startsWith('https://sentry.io')) {\n          return true;\n        } else if (\n          method === 'GET' &&\n          (url.indexOf('resource/visu_config') >= 0 ||\n            url.indexOf('resource/demo/visu_config') >= 0 ||\n            url.indexOf('resource/hidden-schema.json') >= 0 ||\n            url.indexOf('resource/manager/') >= 0) ||\n          (url.startsWith(this._client.getResourcePath('charts')) && !url.startsWith(this._client.getResourcePath('charts') + 'generator:'))\n        ) {\n          return true;\n        } else if (method === 'GET' && /rest\\/manager\\/index.php\\/fs\\?path=.+\\.[\\w]+$/.test(url)) {\n          // change url to avoid API access and do a real request\n          const path = url.split('=').pop();\n          const suffix = path.startsWith('demo/') ? '' : 'config/';\n          args[1] = window.location.pathname + 'resource/' + suffix + path;\n          return true;\n        }\n        return false;\n      });\n      const server = qx.dev.FakeServer.getInstance().getFakeServer();\n      server.respondWith(\n        function (request) {\n          const parsed = qx.util.Uri.parseUri(request.url);\n          let url = request.url;\n          if (url.startsWith(this._client.getResourcePath('charts') + 'generator:')) {\n            const generatorName = parsed.path.split('generator:').pop();\n            request.respond(200, {'Content-type': 'application/json'}, JSON.stringify(this.generate(generatorName, parsed.queryKey)));\n            return;\n          }\n          if (!parsed.host || parsed.host === window.location.host) {\n            url = cv.report.Record.normalizeUrl(request.url);\n            if (url.startsWith(window.location.pathname)) {\n              url = url.substr(window.location.pathname.length - 1);\n            }\n          }\n          if (!this.__xhr[url] || this.__xhr[url].length === 0) {\n            qx.log.Logger.error(this, '404: no logged responses for URI ' + url + ' found');\n          } else {\n            qx.log.Logger.debug(this, 'faking response for ' + url);\n            let response = '';\n            if (this.__xhr[url].length === 1) {\n              response = this.__xhr[url][0];\n            } else {\n              // multiple responses recorded use them as LIFO stack\n              response = this.__xhr[url].shift();\n            }\n\n            if (request.readyState === 4 && request.status === 404) {\n              // This is a hack, sometimes the request has a 404 status and send readystate\n              // the response would fail if we do not override it here\n              request.readyState = 1;\n            }\n            let body = response.body;\n            if (response.headers && response.headers['Content-type'] === 'application/json') {\n              body = JSON.stringify(response.body);\n            }\n            request.respond(response.status, response.headers, body);\n          }\n        }.bind(this)\n      );\n    },\n\n    onWrite(address, value) {\n      if (this.__simulations && Object.prototype.hasOwnProperty.call(this.__simulations, address)) {\n        this._processSimulation(address, value);\n        return true;\n      }\n      return false;\n    },\n\n    _registerSimulations(simulations) {\n      this.__simulations = {};\n      Object.keys(simulations).forEach(function (mainAddress) {\n        const simulation = simulations[mainAddress];\n        this.__simulations[mainAddress] = simulation;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'additionalAddresses')) {\n          simulation.additionalAddresses.forEach(function (addr) {\n            this.__simulations[addr] = simulation;\n          }, this);\n        }\n      }, this);\n    },\n\n    _registerGenerators(generators) {\n      this.__generators = generators;\n      for (const name in this.__generators) {\n        const gen = this.__generators[name];\n        gen.interval = setInterval(() => {\n          const data = {};\n          let value = gen.targetValue + (Math.random() - 0.5) * gen.deviation * 2;\n          if (this.__encodeSimulatedStates && this._addressConfigs[gen.address]) {\n            value = cv.Transform.encodeBusAndRaw(this._addressConfigs[gen.address], value).raw;\n          }\n          data[gen.address] = value;\n          this._client.receive({\n            i: new Date().getTime(),\n            d: data\n          });\n        }, gen.interval);\n      }\n    },\n\n    generate(name, options) {\n      const generator = this.__generators ? this.__generators[name] : null;\n      const data = [];\n      if (generator) {\n        if (options) {\n          let end = Date.now();\n          let start = Date.now();\n          let resolution = 60 * 1000;\n          const dynamicResolution = !Object.prototype.hasOwnProperty.call(generator, 'resolution');\n          if (dynamicResolution) {\n            switch (options.series) {\n              case 'hour':\n                // every minute\n                resolution = 60 * 1000;\n                break;\n\n              case 'day':\n                // every hour\n                resolution = 60 * 60 * 1000;\n                break;\n\n              case 'week':\n                // every 6hs\n                resolution = 6 * 60 * 60 * 1000;\n                break;\n              case 'month':\n                // daily\n                resolution = 24 * 60 * 60 * 1000;\n                break;\n              case 'year':\n                // monthly\n                resolution = 30 * 24 * 60 * 60 * 1000;\n                break;\n            }\n          } else {\n            resolution = generator.resolution;\n          }\n          if (options.start) {\n            if (/^\\d{10}$/.test(options.start)) {\n              // timestamp without millis\n              start = new Date(parseInt(options.start) * 1000).getTime();\n              end = new Date(parseInt(options.end) * 1000).getTime();\n            } else if (/^\\d{13}$/.test(options.start)) {\n              // timestamp with millis\n              start = new Date(parseInt(options.start)).getTime();\n              end = new Date(parseInt(options.end)).getTime();\n            } else {\n              const match = /end-(\\d+)(hour|day|week|month|year)/.exec(options.start);\n              if (match) {\n                let interval = 0;\n                switch (match[2]) {\n                  case 'hour':\n                    interval = 60 * 60 * 1000;\n                    break;\n                  case 'day':\n                    interval = 24 * 60 * 60 * 1000;\n                    break;\n                  case 'week':\n                    interval = 6 + 24 * 60 * 60 * 1000;\n                    break;\n                  case 'month':\n                    // this is not really precise, but good enough to fake some data\n                    interval = 30 * 24 * 60 * 60 * 1000;\n                    break;\n                  case 'year':\n                    interval = 365 * 24 * 60 * 60 * 1000;\n                    break;\n                }\n                start -= parseInt(match[1]) * interval;\n              }\n            }\n          }\n          let val = 0;\n          for (let i = start; i <= end; i += resolution) {\n            val = generator.targetValue + (Math.random() - 0.5) * generator.deviation * 2;\n            data.push([i, val]);\n          }\n        } else {\n          // generate only a single value\n          return generator.targetValue + (Math.random() - 0.5) * generator.deviation * 2;\n        }\n      }\n      return data;\n    },\n\n    _startSequence() {\n      if (this.__sequence.length <= this.__sequenceIndex) {\n        // start again\n        this.__sequenceIndex = 0;\n      }\n      qx.event.Timer.once(\n        function () {\n          this._client.receive({\n            i: new Date().getTime(),\n            d: this.__sequence[this.__sequenceIndex].data\n          });\n\n          this.__sequenceIndex++;\n          this._startSequence();\n        },\n        this,\n        this.__sequence[this.__sequenceIndex].delay\n      );\n    },\n\n    _processSimulation(address, value) {\n      const simulation = this.__simulations[address];\n      if (!simulation) {\n        return;\n      }\n      if (this.__encodeSimulatedStates && address in this._addressConfigs) {\n        value = cv.Transform.encodeBusAndRaw(this._addressConfigs[address], value).raw;\n      }\n      let start = false;\n      let stop = false;\n      if (Object.prototype.hasOwnProperty.call(simulation, 'startValues')) {\n        // try the more specific matches with address included\n        start = simulation.startValues.indexOf(address + '|' + value) >= 0;\n        if (Object.prototype.hasOwnProperty.call(simulation, 'stopValues')) {\n          stop = simulation.stopValues.indexOf(address + '|' + value) >= 0;\n        }\n        if (!stop) {\n          // the more general ones\n          start = simulation.startValues.indexOf(value) >= 0;\n          stop = simulation.startValues.indexOf(value) >= 0;\n        }\n      }\n      if (start) {\n        // start simulation\n        if (simulation.type === 'shutter') {\n          simulation.direction = value === '00' ? 'up' : 'down';\n          let initValue = cv.data.Model.getInstance().getState(simulation.targetAddress);\n          if (initValue === undefined) {\n            initValue = 0;\n          } else if (this.__encodeSimulatedStates && simulation.targetAddress in this._addressConfigs) {\n            initValue = cv.Transform.decode(this._addressConfigs[simulation.targetAddress], initValue);\n          }\n          simulation.value = initValue;\n\n          if (simulation.timer) {\n            simulation.timer.stop();\n          } else {\n            simulation.timer = new qx.event.Timer(simulation.interval || 100);\n            const stepSize = simulation.stepSize || 10;\n            simulation.timer.addListener('interval', () => {\n              let newValue = simulation.value;\n              if (simulation.direction === 'up') {\n                // drive up\n                newValue = simulation.value + stepSize;\n                if (newValue > 100) {\n                  simulation.timer.stop();\n                  return;\n                }\n              } else {\n                // drive down\n                newValue = simulation.value - stepSize;\n                if (newValue < 0) {\n                  simulation.timer.stop();\n                  return;\n                }\n              }\n              const update = {\n                i: new Date().getTime(),\n                d: {}\n              };\n              let sendValue = newValue;\n              if (this.__encodeSimulatedStates && simulation.targetAddress in this._addressConfigs) {\n                sendValue = cv.Transform.encodeBusAndRaw(this._addressConfigs[simulation.targetAddress], newValue).raw;\n              }\n\n              update.d[simulation.targetAddress] = sendValue;\n              this.receive(update);\n              if (simulation.value !== newValue) {\n                simulation.value = newValue;\n              }\n            });\n          }\n          simulation.timer.start();\n        }\n      } else if (stop) {\n        // stop simulation\n        if (simulation.timer) {\n          simulation.timer.stop();\n        }\n      }\n    },\n\n\n    prepareTestData(addresses) {\n      if (cv.Config.initialDemoData && addresses.length > 0) {\n        if (cv.Config.initialDemoData.encodeFirst) {\n          this.__encodeSimulatedStates = true;\n          // connect address data from widgets first\n          this._addressConfigs = {};\n          const widgetData = cv.data.Model.getInstance().getWidgetDataModel();\n          for (const id in widgetData) {\n            if (widgetData[id].address) {\n              this._addressConfigs = Object.assign(this._addressConfigs, widgetData[id].address);\n            }\n          }\n          // lookup cv-address elements (tile structure)\n          for (const addressElement of document.querySelectorAll('cv-address')) {\n            this._addressConfigs[addressElement.textContent.trim()] = {\n              transform: addressElement.getAttribute('transform')\n            };\n          }\n\n          for (let ga in cv.Config.initialDemoData.states) {\n            if (ga in this._addressConfigs) {\n              cv.Config.initialDemoData.states[ga] = cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], cv.Config.initialDemoData.states[ga]).raw;\n            }\n          }\n          for (const seq of cv.Config.initialDemoData.sequence) {\n            for (const ga in seq.data) {\n              if (ga in this._addressConfigs) {\n                seq.data[ga] = cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], seq.data[ga]).raw;\n              }\n            }\n          }\n          for (const ga in cv.Config.initialDemoData.simulations) {\n            if (ga in this._addressConfigs) {\n              // startValues\n              const sim = cv.Config.initialDemoData.simulations[ga];\n              const mapping = valueArray => valueArray.map(val => {\n                if (val.indexOf('|') >= 0) {\n                  const [startAddress, startVal] = val.split('|');\n                  if (startAddress in this._addressConfigs) {\n                    return startAddress + '|' + cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], startVal).raw;\n                  }\n                  return val;\n                }\n                return cv.Transform.encodeBusAndRaw(this._addressConfigs[ga], val).raw;\n              });\n              sim.startValues = mapping(sim.startValues);\n              sim.stopValues = mapping(sim.stopValues);\n            }\n          }\n        }\n        this._client.receive({\n          i: new Date().getTime(),\n          d: cv.Config.initialDemoData.states\n        });\n\n        if (cv.Config.initialDemoData.sequence) {\n          this.__sequence = cv.Config.initialDemoData.sequence;\n          this._startSequence();\n        }\n        if (cv.Config.initialDemoData.simulations) {\n          this._registerSimulations(cv.Config.initialDemoData.simulations);\n        }\n        if (cv.Config.initialDemoData.generators) {\n          this._registerGenerators(cv.Config.initialDemoData.generators);\n        }\n        cv.Config.initialDemoData = null;\n      }\n    },\n\n    deFake(fakeXhr, xhrArgs) {\n      // eslint-disable-next-line new-cap\n      const xhr = new sinon.xhr.workingXHR();\n      [\n        'open',\n        'setRequestHeader',\n        'abort',\n        'getResponseHeader',\n        'getAllResponseHeaders',\n        'addEventListener',\n        'overrideMimeType',\n        'removeEventListener'\n      ].forEach(function (method) {\n        fakeXhr[method] = function () {\n          return xhr[method].apply(xhr, arguments);\n        };\n      });\n      fakeXhr.send = function() {\n        // Ref: https://xhr.spec.whatwg.org/#the-responsetype-attribute\n        if (xhr.responseType !== fakeXhr.responseType) {\n          xhr.responseType = fakeXhr.responseType;\n        }\n        return xhr.send.apply(xhr, arguments);\n      };\n\n      const copyAttrs = function (args) {\n        args.forEach(function (attr) {\n          try {\n            fakeXhr[attr] = xhr[attr];\n          } catch (e) {\n            if (!/MSIE 6/.test(navigator.userAgent)) {\n              throw e;\n            }\n          }\n        });\n      };\n\n      const stateChangeStart = function () {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.HEADERS_RECEIVED) {\n          copyAttrs(['status', 'statusText']);\n        }\n        if (xhr.readyState >= sinon.FakeXMLHttpRequest.LOADING) {\n          copyAttrs(['responseText']);\n        }\n        if (xhr.readyState === sinon.FakeXMLHttpRequest.DONE &&\n          (xhr.responseType === '' || xhr.responseType === 'document')) {\n          copyAttrs(['responseXML']);\n        }\n      };\n      const stateChangeEnd = function() {\n        if (fakeXhr.onreadystatechange) {\n          // eslint-disable-next-line no-useless-call\n          fakeXhr.onreadystatechange.call(fakeXhr, {\n            target: fakeXhr,\n            currentTarget: fakeXhr\n          });\n        }\n      };\n\n      const stateChange = function stateChange() {\n        stateChangeStart();\n        stateChangeEnd();\n      };\n      if (xhr.addEventListener) {\n        xhr.addEventListener('readystatechange', stateChangeStart);\n\n        for (let event in fakeXhr.eventListeners) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (fakeXhr.eventListeners.hasOwnProperty(event)) {\n            fakeXhr.eventListeners[event].forEach(function (handler) {\n              xhr.addEventListener(event, handler.listener, {\n                capture: handler.capture,\n                once: handler.once\n              });\n            });\n          }\n        }\n        xhr.addEventListener('readystatechange', stateChangeEnd);\n      } else {\n        xhr.onreadystatechange = stateChange;\n      }\n      return xhr;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__simulations = null;\n    this._addressConfigs = null;\n    this.__sequence = null;\n    this._client = null;\n  }\n});\n"
  ],
  "mappings": "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"
}