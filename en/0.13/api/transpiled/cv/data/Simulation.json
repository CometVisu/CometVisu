{
  "className": "cv.data.Simulation",
  "packageName": "cv.data",
  "name": "Simulation",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 4,
        "column": 0,
        "index": 117
      },
      "end": {
        "line": 580,
        "column": 3,
        "index": 20871
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Handles all status update simulation used together with the cv.io.Mockup backend e.g. in the demo configs</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 11,
        "column": 2,
        "index": 311
      },
      "end": {
        "line": 17,
        "column": 3,
        "index": 544
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "initialized": {
      "location": {
        "start": {
          "line": 25,
          "column": 4,
          "index": 692
        },
        "end": {
          "line": 29,
          "column": 5,
          "index": 788
        }
      },
      "name": "initialized",
      "propertyType": "new",
      "event": "changeInitialized",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "_client": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 977
        },
        "end": {
          "line": 41,
          "column": 17,
          "index": 990
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@var": [
          {
            "name": "@var",
            "body": "{cv.io.Mockup}"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__simulations": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 996
        },
        "end": {
          "line": 42,
          "column": 23,
          "index": 1015
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__encodeSimulatedStates": {
      "location": {
        "start": {
          "line": 43,
          "column": 4,
          "index": 1021
        },
        "end": {
          "line": 43,
          "column": 34,
          "index": 1051
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequence": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1057
        },
        "end": {
          "line": 44,
          "column": 20,
          "index": 1073
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sequenceIndex": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1079
        },
        "end": {
          "line": 45,
          "column": 22,
          "index": 1097
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_addressConfigs": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1103
        },
        "end": {
          "line": 46,
          "column": 25,
          "index": 1124
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "init": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1131
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 1612
        }
      },
      "type": "function",
      "access": "public"
    },
    "__applyTestData": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1619
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 6772
        }
      },
      "type": "function",
      "access": "private"
    },
    "onWrite": {
      "location": {
        "start": {
          "line": 186,
          "column": 4,
          "index": 6779
        },
        "end": {
          "line": 192,
          "column": 5,
          "index": 7009
        }
      },
      "type": "function",
      "access": "public"
    },
    "_registerSimulations": {
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 7016
        },
        "end": {
          "line": 205,
          "column": 5,
          "index": 7510
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_registerGenerators": {
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 7517
        },
        "end": {
          "line": 224,
          "column": 5,
          "index": 8204
        }
      },
      "type": "function",
      "access": "protected"
    },
    "generate": {
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 8211
        },
        "end": {
          "line": 309,
          "column": 5,
          "index": 11253
        }
      },
      "type": "function",
      "access": "public"
    },
    "_startSequence": {
      "location": {
        "start": {
          "line": 311,
          "column": 4,
          "index": 11260
        },
        "end": {
          "line": 329,
          "column": 5,
          "index": 11754
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_processSimulation": {
      "location": {
        "start": {
          "line": 331,
          "column": 4,
          "index": 11761
        },
        "end": {
          "line": 411,
          "column": 5,
          "index": 14934
        }
      },
      "type": "function",
      "access": "protected"
    },
    "prepareTestData": {
      "location": {
        "start": {
          "line": 414,
          "column": 4,
          "index": 14942
        },
        "end": {
          "line": 481,
          "column": 5,
          "index": 17909
        }
      },
      "type": "function",
      "access": "public"
    },
    "deFake": {
      "location": {
        "start": {
          "line": 483,
          "column": 4,
          "index": 17916
        },
        "end": {
          "line": 566,
          "column": 5,
          "index": 20600
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getInitialized": {
      "type": "function",
      "name": "getInitialized",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>initialized</code>.\n\nFor further details take a look at the property definition: {@link #initialized}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for initialized"
          }
        ]
      }
    },
    "isInitialized": {
      "type": "function",
      "name": "isInitialized",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>initialized</code>.\n\nFor further details take a look at the property definition: {@link #initialized}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for initialized"
          }
        ]
      }
    },
    "setInitialized": {
      "type": "function",
      "name": "setInitialized",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>initialized</code>.\n\nFor further details take a look at the property definition: {@link #initialized}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for initialized"
          }
        ]
      }
    },
    "resetInitialized": {
      "type": "function",
      "name": "resetInitialized",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>initialized</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #initialized}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 574,
        "column": 2,
        "index": 20734
      },
      "end": {
        "line": 579,
        "column": 3,
        "index": 20867
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}