{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "number",
    "name",
    "lname",
    "de",
    "en",
    "example",
    "unit",
    "encode",
    "phy",
    "parseFloat",
    "decode",
    "str",
    "string",
    "toString",
    "unixtime",
    "Math",
    "round",
    "getTime",
    "Date",
    "timestring",
    "toTimeString",
    "split",
    "date",
    "setHours",
    "parseInt",
    "substr",
    "datetime",
    "toISOString",
    "color_xy",
    "x",
    "get",
    "y",
    "value",
    "JSON",
    "parse",
    "Map",
    "color_xyY",
    "Y",
    "color_hsv",
    "join",
    "color_h_s_v",
    "h",
    "s",
    "v",
    "color_hsl",
    "color_h_s_l",
    "l",
    "color_rgb",
    "color_r_g_b",
    "r",
    "g",
    "b",
    "color_rgbw",
    "color_r_g_b_w",
    "w",
    "color_rgb_hex",
    "clipInt",
    "padStart",
    "color_rgbw_hex",
    "transforms",
    "Mqtt"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Mqtt.js"
  ],
  "sourcesContent": [
    "/* Mqtt.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Transformations for the MQTT backend\n *\n * @author Christian Mayer\n * @since 2021\n */\nqx.Class.define('cv.transforms.Mqtt', {\n  type: 'static',\n\n  /**\n   * This class defines the default transforms: encode: transform JavaScript to\n   * bus value decode: transform bus to JavaScript value\n   */\n  defer() {\n    cv.Transform.addTransform('MQTT', {\n      number: {\n        name: 'MQTT_Number',\n        lname: {\n          de: 'Zahl',\n          en: 'number'\n        },\n\n        example: '42',\n        unit: '-',\n        encode(phy) {\n          return parseFloat(phy);\n        },\n        decode(str) {\n          return parseFloat(str);\n        }\n      },\n\n      string: {\n        name: 'MQTT_String',\n        lname: {\n          de: 'Zeichenkette',\n          en: 'string'\n        },\n\n        example: '\"abc\"',\n        unit: '-',\n        encode(phy) {\n          return phy.toString();\n        },\n        decode(str) {\n          return str.toString();\n        }\n      },\n\n      unixtime: {\n        name: 'MQTT_unixtime',\n        lname: {\n          de: 'UNIX Zeitstempel',\n          en: 'UNIX timestamp'\n        },\n\n        example: '1641054600',\n        unit: '-',\n        encode(phy) {\n          return Math.round(phy.getTime() / 1000);\n        },\n        decode(str) {\n          return new Date(parseFloat(str) * 1000);\n        }\n      },\n\n      timestring: {\n        name: 'MQTT_timestring',\n        lname: {\n          de: 'Uhrzeit-String',\n          en: 'time string'\n        },\n\n        example: '\"16:30:00\"',\n        unit: '-',\n        encode(phy) {\n          return phy.toTimeString().split(' ')[0];\n        },\n        decode(str) {\n          const date = new Date(); // assume today\n          str += '00000000'; // make sure string is long enough\n          date.setHours(parseInt(str.substr(0, 2)), parseInt(str.substr(3, 2)), parseInt(str.substr(6, 2)), 0);\n\n          return date;\n        }\n      },\n\n      datetime: {\n        name: 'MQTT_datetime',\n        lname: {\n          de: 'ISO 8601 Zeit-String',\n          en: 'ISO 8601 time string'\n        },\n\n        example: '\"2022-01-01T16:30:00.000Z\"',\n        unit: '-',\n        encode(phy) {\n          return phy.toISOString();\n        },\n        decode(str) {\n          return new Date(str);\n        }\n      },\n\n      color_xy: {\n        name: 'MQTT_color_xy',\n        lname: {\n          de: 'xy-Farbe',\n          en: 'xy color'\n        },\n\n        example: '{\"x\":0.123,\"y\":0.123}',\n        unit: '-',\n        encode(phy) {\n          return {\n            x: phy.get('x'),\n            y: phy.get('y')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['x', parseFloat(value.x)],\n            ['y', parseFloat(value.y)],\n            ['cValid', true]\n          ]);\n        }\n      },\n\n      color_xyY: {\n        name: 'MQTT_color_xyY',\n        lname: {\n          de: 'xyY-Farbe',\n          en: 'xyY color'\n        },\n\n        example: '{\"x\":0.123,\"y\":0.123,\"Y\":100}',\n        unit: '-',\n        encode(phy) {\n          return {\n            x: phy.get('x'),\n            y: phy.get('y'),\n            Y: phy.get('Y')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['x', parseFloat(value.x)],\n            ['y', parseFloat(value.y)],\n            ['Y', parseFloat(value.Y)],\n            ['cValid', true],\n            ['YValid', true]\n          ]);\n        }\n      },\n\n      color_hsv: {\n        name: 'MQTT_color_hsv',\n        lname: {\n          de: 'HSV-Farbe als Zeichenkette',\n          en: 'HSV color as string'\n        },\n\n        example: '\"360,100,100\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '';\n          }\n          return [phy.get('h'), phy.get('s'), phy.get('v')].join(',');\n        },\n        decode(str) {\n          const value = str.split(',');\n          return new Map([\n            ['h', parseFloat(value[0])],\n            ['s', parseFloat(value[1])],\n            ['v', parseFloat(value[2])]\n          ]);\n        }\n      },\n\n      color_h_s_v: {\n        name: 'MQTT_color_h_s_v',\n        lname: {\n          de: 'HSV-Farbe',\n          en: 'HSV color'\n        },\n\n        example: '{\"h\":360,\"s\":100,\"v\":100}',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return {};\n          }\n          return {\n            h: phy.get('h'),\n            s: phy.get('s'),\n            v: phy.get('v')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['h', parseFloat(value.h)],\n            ['s', parseFloat(value.s)],\n            ['v', parseFloat(value.v)]\n          ]);\n        }\n      },\n\n      color_hsl: {\n        name: 'MQTT_color_hsl',\n        lname: {\n          de: 'HSL-Farbe als Zeichenkette',\n          en: 'HSL color as string'\n        },\n\n        example: '\"360,100,100\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '';\n          }\n          return [phy.get('h'), phy.get('s'), phy.get('v')].join(',');\n        },\n        decode(str) {\n          const value = str.split(',');\n          return new Map([\n            ['h', parseFloat(value[0])],\n            ['s', parseFloat(value[1])],\n            ['v', parseFloat(value[2])]\n          ]);\n        }\n      },\n\n      color_h_s_l: {\n        name: 'MQTT_color_h_s_l',\n        lname: {\n          de: 'HSL-Farbe',\n          en: 'HSL color'\n        },\n\n        example: '{\"h\":360,\"s\":100,\"l\":100}',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '{}';\n          }\n          return {\n            h: phy.get('h'),\n            s: phy.get('s'),\n            l: phy.get('v')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['h', parseFloat(value.h)],\n            ['s', parseFloat(value.s)],\n            ['v', parseFloat(value.l)]\n          ]);\n        }\n      },\n\n      color_rgb: {\n        name: 'MQTT_color_rgb',\n        lname: {\n          de: 'RGB-Farbe als Zeichenkette',\n          en: 'RGB color as string'\n        },\n\n        example: '\"100,100,100\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '';\n          }\n          return [phy.get('r'), phy.get('g'), phy.get('b')].join(',');\n        },\n        decode(str) {\n          const value = str.split(',');\n          return new Map([\n            ['r', parseFloat(value[0])],\n            ['g', parseFloat(value[1])],\n            ['b', parseFloat(value[2])]\n          ]);\n        }\n      },\n\n      color_r_g_b: {\n        name: 'MQTT_color_r_g_b',\n        lname: {\n          de: 'RGB-Farbe',\n          en: 'RGB color'\n        },\n\n        example: '{\"r\":100,\"g\":100,\"b\":100}',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '{}';\n          }\n          return {\n            r: phy.get('r'),\n            g: phy.get('g'),\n            b: phy.get('b')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['r', parseFloat(value.r)],\n            ['g', parseFloat(value.g)],\n            ['b', parseFloat(value.b)]\n          ]);\n        }\n      },\n\n      color_rgbw: {\n        name: 'MQTT_color_rgbw',\n        lname: {\n          de: 'RGBW-Farbe als Zeichenkette',\n          en: 'RGBW color as string'\n        },\n\n        example: '\"100,100,100,100\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '';\n          }\n          return [phy.get('r'), phy.get('g'), phy.get('b'), phy.get('w')].join(',');\n        },\n        decode(str) {\n          const value = str.split(',');\n          return new Map([\n            ['r', parseFloat(value[0])],\n            ['g', parseFloat(value[1])],\n            ['b', parseFloat(value[2])],\n            ['w', parseFloat(value[3])]\n          ]);\n        }\n      },\n\n      color_r_g_b_w: {\n        name: 'MQTT_color_r_g_b_w',\n        lname: {\n          de: 'RGBW-Farbe',\n          en: 'RGBW color'\n        },\n\n        example: '{\"r\":100,\"g\":100,\"b\":100,\"w\":100}',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '{}';\n          }\n          return {\n            r: phy.get('r'),\n            g: phy.get('g'),\n            b: phy.get('b'),\n            w: phy.get('w')\n          };\n        },\n        decode(str) {\n          const value = typeof str === 'string' ? JSON.parse(str) : str;\n          return new Map([\n            ['r', parseFloat(value.r)],\n            ['g', parseFloat(value.g)],\n            ['b', parseFloat(value.b)],\n            ['w', parseFloat(value.w)]\n          ]);\n        }\n      },\n\n      color_rgb_hex: {\n        name: 'MQTT_color_rgb_hex',\n        lname: {\n          de: 'RGB-Farbe',\n          en: 'RGB color'\n        },\n\n        example: '\"#11FF88\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '#000000';\n          }\n          return [\n            '#',\n            cv.Transform.clipInt(0, phy.get('r'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy.get('g'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy.get('b'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n        },\n        decode(str) {\n          str += '00000000'; // make sure string is long enough\n          return new Map([\n            ['r', (parseInt(str.substr(1, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(str.substr(3, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(str.substr(5, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      color_rgbw_hex: {\n        name: 'MQTT_color_rgbw_hex',\n        lname: {\n          de: 'RGBW-Farbe',\n          en: 'RGBW color'\n        },\n\n        example: '\"#11FF88AA\"',\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return '#00000000';\n          }\n          return [\n            '#',\n            cv.Transform.clipInt(0, phy.get('r'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy.get('g'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy.get('b'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy.get('w'), 255, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n        },\n        decode(str) {\n          str += '00000000000'; // make sure string is long enough\n          return new Map([\n            ['r', (parseInt(str.substr(1, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(str.substr(3, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(str.substr(5, 2), 16) * 100) / 255.0],\n            ['w', (parseInt(str.substr(7, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      }\n    });\n  }\n});\n"
  ],
  "mappings": "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"
}