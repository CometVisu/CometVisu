{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/OpenHab.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "isUndefined",
    "value",
    "undefined",
    "indexOf",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "encode",
    "phy",
    "decode",
    "string",
    "transforms",
    "OpenHab",
    "parseInt",
    "str",
    "parseFloat",
    "applyInTestMode",
    "Date",
    "toLocaleDateString",
    "parse",
    "toLocaleTimeString",
    "date",
    "parts",
    "split",
    "setHours",
    "setMinutes",
    "setSeconds",
    "Map",
    "has",
    "hsv",
    "get",
    "join",
    "rgb",
    "util",
    "ColorUtil",
    "rgbToHsb",
    "hsbString",
    "variant",
    "hsbToRgb",
    "map",
    "val"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* OpenHab.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Transformations for the openHAB backend\n *\n * @author Tobias BrÃ¤utigam\n * @since 2012\n */\nqx.Class.define('cv.transforms.OpenHab', {\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    isUndefined: function (value) {\n      return ['NaN', 'Uninitialized', 'NULL', 'UNDEF', undefined, null].indexOf(value) >= 0;\n    }\n  },\n\n\n  /**\n   * This class defines the default transforms: encode: transform JavaScript to\n   * bus value decode: transform bus to JavaScript value\n   */\n  defer: function () {\n    cv.Transform.addTransform('OH', {\n      'switch': {\n        name: 'OH_Switch',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          return phy == 1 ? 'ON' : 'OFF'; // jshint ignore:line\n        },\n        decode: function (string) {\n          if (cv.transforms.OpenHab.isUndefined(string)) {\n            return 0;\n          }\n          return (string === 'ON' || parseInt(string) > 0) ? 1 : 0;\n        }\n      },\n      'playPause': {\n        name: 'OH_PlayPause',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          return phy == 1 ? 'PLAY' : 'PAUSE'; // jshint ignore:line\n        },\n        decode: function (string) {\n          if (cv.transforms.OpenHab.isUndefined(string)) {\n            return 0;\n          }\n          return (string === 'PLAY' || parseInt(string) > 0) ? 1 : 0;\n        }\n      },\n      'contact': {\n        name: 'OH_Contact',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          return phy == 1 ? 'OPEN' : 'CLOSED'; // jshint ignore:line\n        },\n        decode: function (string) {\n          if (cv.transforms.OpenHab.isUndefined(string)) {\n            return 0;\n          }\n          return string === 'OPEN' ? 1 : 0;\n        }\n      },\n      'rollershutter': {\n        name: 'OH_RollerShutter',\n        encode: function (phy) {\n          // using == comparisons to make sure that e.g. 1 equals \"1\"\n          // noinspection EqualityComparisonWithCoercionJS\n          if (phy == -1) {\n            return 'STOP';\n          }\n          // noinspection EqualityComparisonWithCoercionJS\n          if (phy == 1 || phy == 100) {\n            return 'DOWN';\n          }\n          // noinspection EqualityComparisonWithCoercionJS\n          if (phy == 0) { // eslint-disable-line no-lonely-if\n            return 'UP';\n          }\n          return phy;\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return undefined;\n          } else if (str === 'UP' || str === '0') {\n            return 0;\n          } else if (str === 'DOWN' || str === '100') {\n            return 100;\n          } else if (str === 'STOP') {\n            return -1;\n          }\n          return str;\n        }\n      },\n      'dimmer': {\n        name: 'OH_Dimmer',\n        encode: function (phy) {\n          return parseInt(phy);\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return 0;\n          } else if (str === 'ON') {\n            return 100;\n          } else if (str === 'OFF') {\n            return 0;\n          }\n          return parseInt(str);\n        }\n      },\n      'number': {\n        name: 'OH_Number',\n        encode: function (phy) {\n          return parseFloat(phy);\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return 0;\n          }\n          return parseFloat(str);\n        }\n      },\n      'string': {\n        name: 'OH_String',\n        encode: function (phy) {\n          return phy;\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return '';\n          }\n          return str;\n        }\n      },\n      'datetime': {\n        name: 'OH_DateTime',\n        applyInTestMode: true,\n        encode: function (phy) {\n          if (phy instanceof Date) {\n            return phy.toLocaleDateString();\n          }\n          return phy;\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return '-';\n          }\n          return new Date(Date.parse(str));\n        }\n      },\n      'time': {\n        name: 'OH_Time',\n        applyInTestMode: true,\n        encode: function (phy) {\n          if (phy instanceof Date) {\n            return phy.toLocaleTimeString();\n          }\n          return phy;\n        },\n        decode: function (str) {\n          if (cv.transforms.OpenHab.isUndefined(str)) {\n            return '-';\n          }\n          const date = new Date();\n          const parts = str.split(':');\n          date.setHours(parseInt(parts[0]));\n          date.setMinutes(parseInt(parts[1]));\n          date.setSeconds(parseInt(parts[2]));\n          return date;\n        }\n      },\n      'color': {\n        name: 'OH_Color',\n        encode: function (phy) {\n          if (!(phy instanceof Map)) {\n            return '0, 0, 0';\n          }\n          if (phy.has('h') && phy.has('s') && phy.has('v')) {\n            let hsv = [\n              phy.get('h') || 0,\n              phy.get('s') || 0,\n              phy.get('v') || 0\n            ];\n            return hsv.join(', ');\n          } else if (phy.has('r') && phy.has('g') && phy.has('b')) {\n            let rgb = [\n              phy.get('r') || 0,\n              phy.get('g') || 0,\n              phy.get('b') || 0\n            ];\n            return qx.util.ColorUtil.rgbToHsb(rgb).join(', ');\n          }\n          return '0, 0, 0';\n        },\n        decode: function (hsbString, variant) {\n          if (cv.transforms.OpenHab.isUndefined(hsbString)) {\n            return variant === 'rgb'\n              ? new Map([['r', 0], ['g', 0], ['b', 0]])\n              : new Map([['h', 0], ['s', 0], ['v', 0]]);\n          }\n          // decode HSV/HSB to RGB\n          if (variant === 'rgb') {\n            // decode HSV/HSB to RGB\n            let rgb = qx.util.ColorUtil.hsbToRgb(hsbString.split(','));\n            return new Map([['r', rgb[0]], ['g', rgb[1]], ['b', rgb[2]]]);\n          }\n          let hsv = hsbString.split(',').map(parseFloat);\n          return new Map([['h', hsv[0]], ['s', hsv[1]], ['v', hsv[2]]]);\n        }\n      },\n      'thing-status': {\n        name: 'OH_Thing',\n        encode: function (val) {\n          return val ? 'ONLINE' : 'OFFLINE';\n        },\n        decode: function (val) {\n          return val === 'ONLINE';\n        }\n      }\n    });\n  }\n});\n"
  ]
}