{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "lname",
    "de",
    "en",
    "range",
    "min",
    "max",
    "unit",
    "encode",
    "phy",
    "bus",
    "raw",
    "decode",
    "hex",
    "parseInt",
    "link",
    "val",
    "clipInt",
    "toString",
    "toUpperCase",
    "up",
    "stepCode",
    "Math",
    "floor",
    "log2",
    "abs",
    "pow",
    "charCodeAt",
    "padStart",
    "String",
    "fromCharCode",
    "undefined",
    "isNaN",
    "sign",
    "mant",
    "round",
    "exp",
    "NaN",
    "bin1",
    "substr",
    "bin2",
    "getDay",
    "getHours",
    "getMinutes",
    "getSeconds",
    "date",
    "Date",
    "setHours",
    "setMinutes",
    "setSeconds",
    "day",
    "dayShift",
    "setDate",
    "getDate",
    "year",
    "i",
    "c",
    "chars",
    "length",
    "period",
    "get",
    "percent",
    "join",
    "Map",
    "r",
    "g",
    "b",
    "h",
    "s",
    "v",
    "isFinite",
    "cValid",
    "has",
    "Number",
    "YValid",
    "x",
    "y",
    "Y",
    "valid",
    "rValid",
    "gValid",
    "bValid",
    "wValid",
    "w",
    "transforms",
    "Knx"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Knx.js"
  ],
  "sourcesContent": [
    "/* Knx.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.transforms.Knx', {\n  type: 'static',\n\n  defer() {\n    cv.Transform.addTransform('DPT', {\n      /**\n       * This class defines the default transforms:\n       *   encode: transform JavaScript to bus value\n       *   decode: transform bus to JavaScript value\n       */\n      1: {\n        name: '1 bit',\n        lname: {\n          de: '1 Bit',\n          en: '1 bit'\n        },\n\n        range: {\n          min: 0,\n          max: 1\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = +phy; // cast to number\n          return {\n            bus: phy ? '81' : '80',\n            raw: phy ? '01' : '00'\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      1.001: {\n        link: '1',\n        name: 'DPT_Switch',\n        lname: {\n          de: 'Aus-An-Schalter',\n          en: 'off on switch'\n        }\n      },\n\n      1.002: {\n        link: '1',\n        name: 'DPT_Bool',\n        lname: {\n          de: 'Boolscher-Wert',\n          en: 'boolean value'\n        }\n      },\n\n      1.003: {\n        link: '1',\n        name: 'DPT_Enable',\n        lname: {\n          de: 'Disable / Enable',\n          en: 'disable / enable'\n        }\n      },\n\n      1.008: {\n        link: '1',\n        name: 'DPT_UpDown',\n        lname: {\n          de: 'Hoch-Runter-Schalter',\n          en: 'up down switch'\n        }\n      },\n\n      1.009: {\n        link: '1',\n        name: 'DPT_OpenClose',\n        lname: {\n          de: 'Auf-Zu-Schalter',\n          en: 'open close switch'\n        }\n      },\n\n      2: {\n        link: '1',\n        name: '2 bit',\n        lname: {\n          de: '2 Bit',\n          en: '2 bit'\n        },\n\n        range: {\n          min: 0,\n          max: 3\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 3).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      3: {\n        name: '4 bit',\n        lname: {\n          de: '4 Bit',\n          en: '4 bit'\n        },\n\n        range: {\n          min: -100,\n          max: 100\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = +phy; // enforce number\n          if (phy < -100 || (phy > -1 && phy <= 0)) {\n            return { bus: '80', raw: '00' }; // down: stop\n          }\n\n          if (phy > 100 || (phy > 0 && phy < 1)) {\n            return { bus: '88', raw: '08' }; // up: stop\n          }\n\n          const up = phy > 0;\n          const stepCode = 7 - Math.floor(Math.log2(Math.abs(phy)));\n          const val = (stepCode | (up * 0b1000)).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          const up = (val & 0b1000) > 0;\n          return ((up * 2 - 1) * 100) / 2 ** ((val & 0b111) - 1);\n        }\n      },\n\n      3.007: {\n        link: '3',\n        name: 'DPT_Control_Dimming',\n        lname: {\n          de: 'Dimmen',\n          en: 'dimming'\n        }\n      },\n\n      3.008: {\n        link: '3',\n        name: 'DPT_Control_Blinds',\n        lname: {\n          de: 'Beschattungssteuerung',\n          en: 'blind control'\n        }\n      },\n\n      4: {\n        name: 'char',\n        lname: {\n          de: 'Zeichen',\n          en: 'char'\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = ('' + phy).charCodeAt(0).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        }\n      },\n\n      4.001: {\n        name: 'DPT_Char_ASCII',\n        link: '4'\n      },\n\n      5: {\n        name: '8 bit unsigned',\n        lname: {\n          de: '8 Bit vorzeichenloser Integer',\n          en: '8 bit unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 255\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 255).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      5.001: {\n        name: 'DPT_Scaling',\n        lname: {\n          de: 'Prozentwert',\n          en: 'percentage'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 100, 255 / 100)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return (parseInt(hex, 16) * 100) / 255.0;\n        }\n      },\n\n      5.003: {\n        name: 'DPT_Angle',\n        lname: {\n          de: 'Winkel',\n          en: 'angle'\n        },\n\n        range: {\n          min: 0.0,\n          max: 360.0\n        },\n\n        unit: '°',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 360, 255 / 360)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return (parseInt(hex, 16) * 360) / 255.0;\n        }\n      },\n\n      5.004: {\n        link: '5',\n        name: 'DPT_Percent_U8',\n        lname: {\n          de: 'Prozentwert',\n          en: 'percentage'\n        },\n\n        unit: '%'\n      },\n\n      '5.010': {\n        link: '5',\n        name: 'DPT_Value_1_Ucount',\n        lname: {\n          de: 'Zähler',\n          en: 'counter'\n        },\n\n        unit: '-'\n      },\n\n      6: {\n        name: '8 bit signed',\n        lname: {\n          de: '8 Bit vorzeichenbehafteter Integer',\n          en: '8 bit signed integer'\n        },\n\n        range: {\n          min: -128,\n          max: 127\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = cv.Transform.clipInt(-128, phy, 127);\n          let val = phy < 0 ? phy + 256 : phy;\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 127 ? val - 256 : val;\n        }\n      },\n\n      6.001: {\n        link: '6',\n        name: 'DPT_Percent_V8',\n        lname: {\n          de: 'Prozentwert mit Vorzeichen',\n          en: 'percentage with sign'\n        },\n\n        unit: '%'\n      },\n\n      '6.010': {\n        link: '6',\n        name: 'DPT_Value_1_Count',\n        lname: {\n          de: 'Zähler mit Vorzeichen',\n          en: 'counter with sign'\n        }\n      },\n\n      7: {\n        name: '2 byte unsigned',\n        lname: {\n          de: '2 Byte vorzeichenloser Integer',\n          en: '2 byte unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 0xffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffff).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      7.001: {\n        link: '7',\n        name: 'DPT_Value_2_Ucount'\n      },\n\n      '7.600': {\n        link: '7',\n        name: 'DPT_Absolute_Colour_Temperature',\n        unit: 'K'\n      },\n\n      8: {\n        name: '2 byte signed',\n        lname: {\n          de: '2 Byte vorzeichenbehafteter Integer',\n          en: '2 byte signed integer'\n        },\n\n        range: {\n          min: -0x8000,\n          max: 0x7fff\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = cv.Transform.clipInt(-0x8000, phy, 0x7fff);\n          val = val < 0 ? val + 65536 : val;\n          val = val.toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 32767 ? val - 65536 : val;\n        }\n      },\n\n      8.001: {\n        link: '8',\n        name: 'DPT_Value_2_Count'\n      },\n\n      9: {\n        name: '2 byte float',\n        lname: {\n          de: '2 Byte Gleitkommazahl',\n          en: '2 byte float value'\n        },\n\n        range: {\n          min: -671088.64,\n          max: 670433.28\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (undefined === phy || isNaN(phy)) {\n            return '7fff';\n          }\n          const sign = +phy < 0 ? 0x8000 : 0;\n          let mant = Math.round(+phy * 100.0);\n          let exp = 0;\n          while (Math.abs(mant) > 2047) {\n            mant >>= 1;\n            exp++;\n          }\n          const val = (sign | (exp << 11) | (mant & 0x07ff)).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          if (parseInt(hex, 16) === 0x7fff) {\n            return NaN;\n          }\n          const bin1 = parseInt(hex.substr(0, 2), 16);\n          const bin2 = parseInt(hex.substr(2, 2), 16);\n          const sign = parseInt(bin1 & 0x80);\n          const exp = parseInt(bin1 & 0x78) >> 3;\n          let mant = parseInt(((bin1 & 0x7) << 8) | bin2);\n          if (sign !== 0) {\n            mant = -(~(mant - 1) & 0x7ff);\n          }\n          return (1 << exp) * 0.01 * mant;\n        }\n      },\n\n      9.001: {\n        link: '9',\n        name: 'DPT_Value_Temp',\n        lname: {\n          de: 'Temperatur',\n          en: 'temperature'\n        },\n\n        unit: '°C'\n      },\n\n      9.004: {\n        link: '9',\n        name: 'DPT_Value_Lux',\n        lname: {\n          de: 'Beleuchtungsstärke',\n          en: 'illuminance'\n        },\n\n        unit: 'Lux'\n      },\n\n      9.007: {\n        link: '9',\n        name: 'DPT_Value_Humidity',\n        lname: {\n          de: 'Luftfeuchtigkeit',\n          en: 'humidity'\n        },\n\n        unit: '%'\n      },\n\n      9.008: {\n        link: '9',\n        name: 'DPT_Value_AirQuality',\n        lname: {\n          de: 'Luftqualität',\n          en: 'air quality'\n        },\n\n        unit: 'ppm'\n      },\n\n      '9.020': {\n        link: '9',\n        name: 'DPT_Value_Volt',\n        lname: {\n          de: 'Spannung',\n          en: 'voltage'\n        },\n\n        unit: 'mV'\n      },\n\n      9.021: {\n        link: '9',\n        name: 'DPT_Value_Curr',\n        lname: {\n          de: 'Strom',\n          en: 'current'\n        },\n\n        unit: 'mA'\n      },\n\n      10.001: {\n        name: 'DPT_TimeOfDay',\n        lname: {\n          de: 'Zeit',\n          en: 'time'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = ((phy.getDay() << 5) + phy.getHours()).toString(16).padStart(2, '0');\n          val += phy.getMinutes().toString(16).padStart(2, '0');\n          val += phy.getSeconds().toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const date = new Date(); // assume today\n          date.setHours(parseInt(hex.substr(0, 2), 16) & 0x1f);\n          date.setMinutes(parseInt(hex.substr(2, 2), 16));\n          date.setSeconds(parseInt(hex.substr(4, 2), 16));\n          // as KNX thinks the day of the week belongs to the time, but JavaScript\n          // doesn't, tweak the date till it fits...\n          const day = (parseInt(hex.substr(0, 2), 16) & 0xe0) >> 5;\n          if (day > 0) {\n            const dayShift = (day - date.getDay()) % 7;\n            date.setDate(date.getDate() + dayShift);\n          }\n          return date;\n        }\n      },\n\n      11.001: {\n        name: 'DPT_Date',\n        lname: {\n          de: 'Datum',\n          en: 'date'\n        },\n\n        unit: '-',\n        encode() {\n          // FIXME\n        },\n        decode(hex) {\n          const year = parseInt(hex.substr(4, 2), 16) & 0x7f;\n          return new Date(\n            year < 90 ? year + 2000 : year + 1900, //1990 - 2089\n            (parseInt(hex.substr(2, 2), 16) & 0x0f) - 1,\n            parseInt(hex.substr(0, 2), 16) & 0x1f\n          );\n        }\n      },\n\n      12: {\n        name: '4 byte unsigned',\n        lname: {\n          de: '4 Byte vorzeichenloser Integer',\n          en: '4 byte unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 0xffffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffffff).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      12.001: {\n        link: '12',\n        name: 'DPT_Value_4_Ucount'\n      },\n\n      13: {\n        name: '4 byte signed',\n        lname: {\n          de: '4 Byte vorzeichenbehafteter Integer',\n          en: '4 byte signed integer'\n        },\n\n        range: {\n          min: -0x80000000,\n          max: 0x7fffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = cv.Transform.clipInt(-0x80000000, phy, 0x7fffffff);\n          val = val < 0 ? val + 4294967296 : val;\n          val = Math.round(val).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 2147483647 ? val - 4294967296 : val;\n        }\n      },\n\n      13.001: {\n        link: '13',\n        name: 'DPT_Value_4_Count'\n      },\n\n      14: {\n        name: '4 byte float',\n        lname: {\n          de: '4 Byte Gleitkommazahl IEEE 754 (nur Dekodieren)',\n          en: '4 byte float IEEE 754 (only decode)'\n        },\n\n        unit: '-',\n        encode() {\n          //FIXME: unimplemented (jspack?)\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          const sign = val & 0x80000000 ? -1 : 1;\n          const exp = ((val & 0x7f800000) >> 23) - 127;\n          const mant = (val & 0x007fffff) | 0x00800000;\n          return sign * Math.pow(2, exp) * (mant / (1 << 23));\n        }\n      },\n\n      14.001: {\n        link: '14',\n        name: 'DPT_Value_Acceleration_Angular'\n      },\n\n      16: {\n        name: 'DPT_String_ASCII',\n        lname: {\n          de: '14 Byte Text ASCII',\n          en: '14 byte text ASCII'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = '';\n          phy += ''; // force datatype String\n          for (let i = 0; i < 14; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? (c < 16 ? '0' : '') + c.toString(16) : '00';\n          }\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < 28; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n\n      '16.000': {\n        link: '16'\n      },\n\n      16.001: {\n        link: '16',\n        name: 'DPT_String_8859_1',\n        lname: {\n          de: '14 Byte Text ISO-8859-1',\n          en: '14 byte text ISO-8859-1'\n        }\n      },\n\n      17: {\n        link: '18',\n        name: 'DPT_SceneNumber',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1,\n          max: 64\n        },\n\n        unit: '-'\n      },\n\n      17.001: {\n        link: '18'\n      },\n\n      18: {\n        name: 'DPT_SceneControl',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1,\n          max: 64 + 128\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 128)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n\n      18.001: {\n        link: '18'\n      },\n\n      20.102: {\n        name: 'DPT_HVACMode',\n        lname: {\n          de: 'KONNEX Betriebsart',\n          en: 'HVAC mode'\n        },\n\n        range: {\n          enum: ['auto', 'comfort', 'standby', 'economy', 'building_protection']\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val;\n          switch (phy) {\n            case 1:\n            case 'comfort':\n              val = 1;\n              break;\n            case 2:\n            case 'standby':\n              val = 2;\n              break;\n            case 3:\n            case 'economy':\n              val = 3;\n              break;\n            case 4:\n            case 'building_protection':\n              val = 4;\n              break;\n            default:\n              // actually \"case 0:\" / \"auto\"\n              val = 0;\n          }\n\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          switch (parseInt(hex, 16)) {\n            case 1:\n              return 'comfort';\n            case 2:\n              return 'standby';\n            case 3:\n              return 'economy';\n            case 4:\n              return 'building_protection';\n            default:\n              // actually \"case 0:\"\n              return 'auto';\n          }\n        }\n      },\n\n      /* DPT24.001 is probably not fully correct as it can also hold\n       multiple strings sep. by \\x00 as array according to 3.7.2 DPT v1.07\n       but there is no other reference, even not in ETS4\n       so this gives basic support for now, there is also missing a max-length\n       check in encode.\n       In wiregate DPT24.001 has the same basic support with PL38\n       */\n      24.001: {\n        name: 'DPT_VarString_8859_1',\n        lname: {\n          de: 'Variabler String ISO-8859-1',\n          en: 'variable String ISO-8859-1'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = '';\n          for (let i = 0; i < phy.length; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? (c < 16 ? '0' : '') + c.toString(16) : '00';\n          }\n          /* terminating \\x00 */\n          val += '00';\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < hex.length; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n\n      26: {\n        name: 'DPT_SceneInfo',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1.0,\n          max: 64.0 + 64\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 64)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n\n      26.001: {\n        link: '26'\n      },\n\n      225: {\n        name: '3 byte unsigned',\n        lname: {\n          de: '3 Byte vorzeichenloser Integer',\n          en: '3 byte unsigned integer'\n        },\n\n        range: {\n          min: 0x0,\n          max: 0xffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffff).toString(16).padStart(6, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      225.001: {\n        name: 'DPT_ScalingSpeed',\n        lname: {\n          de: 'Skalierungsgeschwindigkeit',\n          en: 'scaling speed'\n        },\n\n        unit: '-',\n        encode(phy) {\n          const period = phy.get('period') || 0;\n          const percent = phy.get('percent') || 0;\n          const val = [\n            cv.Transform.clipInt(0, period, 0xffff).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, percent, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['period', parseInt(hex.substr(0, 4), 16)],\n            ['percent', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      232: {\n        name: '3xDPT_Scaling',\n        lname: {\n          de: 'Drei Prozentwerte',\n          en: 'three percentages'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          let val = [\n            cv.Transform.clipInt(0, phy[0], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[1], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[2], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return [\n            (parseInt(hex.substr(0, 2), 16) * 100) / 255.0,\n            (parseInt(hex.substr(2, 2), 16) * 100) / 255.0,\n            (parseInt(hex.substr(4, 2), 16) * 100) / 255.0\n          ];\n        }\n      },\n\n      '232.600': {\n        name: 'DPT_Colour_RGB',\n        lname: {\n          de: 'RGB-Farbe',\n          en: 'rgb color'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['r', (parseInt(hex.substr(0, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      '232.600HSV': {\n        name: 'DPT_Colour_HSV_inofficial',\n        lname: {\n          de: 'HSV-Farbe (inoffiziell)',\n          en: 'hsv color (inofficial)'\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const h = phy.get('h') || 0;\n          const s = phy.get('s') || 0;\n          const v = phy.get('v') || 0;\n          const val = [\n            cv.Transform.clipInt(0, h, 360, 255 / 360)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, s, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, v, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['h', (parseInt(hex.substr(0, 2), 16) * 360) / 255.0],\n            ['s', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['v', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      '242.600': {\n        name: 'DPT_Colour_xyY',\n        lname: {\n          de: 'xyY-Farbe',\n          en: 'xyY color'\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            if (!isFinite(phy)) {\n              return { bus: '80000000000000', raw: '000000000000' };\n            }\n            phy = new Map([['Y', +phy]]);\n          }\n\n          const cValid =\n            phy.has('x') &&\n            phy.has('y') &&\n            (phy.has('cValid') ? phy.get('cValid') : Number.isFinite(phy.get('x')) && Number.isFinite(phy.get('y')));\n          const YValid = phy.has('Y') && (phy.has('YValid') ? phy.get('YValid') : Number.isFinite(phy.get('Y')));\n          const x = phy.get('x') || 0;\n          const y = phy.get('y') || 0;\n          const Y = phy.get('Y') || 0;\n          const val = [\n            cv.Transform.clipInt(0, x, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, y, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, Y, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            (cValid * 2 + YValid * 1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['x', parseInt(hex.substr(0, 4), 16) / 65535.0],\n            ['y', parseInt(hex.substr(4, 4), 16) / 65535.0],\n            ['Y', (parseInt(hex.substr(8, 2), 16) * 100) / 255.0],\n            ['cValid', (valid & 2) > 0],\n            ['YValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n\n      '251.600': {\n        name: 'DPT_Colour_RGBW',\n        lname: {\n          de: 'RGBW-Farbe',\n          en: 'rgbw color'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          const rValid =\n            phy.has('r') && Number.isFinite(phy.get('r')) && (phy.has('rValid') ? phy.get('rValid') : true);\n          const gValid =\n            phy.has('g') && Number.isFinite(phy.get('g')) && (phy.has('gValid') ? phy.get('gValid') : true);\n          const bValid =\n            phy.has('b') && Number.isFinite(phy.get('b')) && (phy.has('bValid') ? phy.get('bValid') : true);\n          const wValid =\n            phy.has('w') && Number.isFinite(phy.get('w')) && (phy.has('wValid') ? phy.get('wValid') : true);\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const w = phy.get('w') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, w, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            '00',\n            (rValid * 8 + gValid * 4 + bValid * 2 + wValid * 1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['r', (parseInt(hex.substr(0, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0],\n            ['w', (parseInt(hex.substr(6, 2), 16) * 100) / 255.0],\n            ['rValid', (valid & 8) > 0],\n            ['gValid', (valid & 4) > 0],\n            ['bValid', (valid & 2) > 0],\n            ['wValid', (valid & 1) > 0]\n          ]);\n        }\n      }\n    });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,IAAI,EAAE,QAAQ;IAEdC,KAAK,WAAAA,MAAA,EAAG;MACNC,EAAE,CAACC,SAAS,CAACC,YAAY,CAAC,KAAK,EAAE;QAC/B;AACN;AACA;AACA;AACA;QACM,CAAC,EAAE;UACDC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;YACLC,EAAE,EAAE,OAAO;YACXC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACVA,GAAG,GAAG,CAACA,GAAG,CAAC,CAAC;YACZ,OAAO;cACLC,GAAG,EAAED,GAAG,GAAG,IAAI,GAAG,IAAI;cACtBE,GAAG,EAAEF,GAAG,GAAG,IAAI,GAAG;YACpB,CAAC;UACH,CAAC;UACDG,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,KAAK,EAAE;UACLE,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,YAAY;UAClBC,KAAK,EAAE;YACLC,EAAE,EAAE,iBAAiB;YACrBC,EAAE,EAAE;UACN;QACF,CAAC;QAED,KAAK,EAAE;UACLY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,UAAU;UAChBC,KAAK,EAAE;YACLC,EAAE,EAAE,gBAAgB;YACpBC,EAAE,EAAE;UACN;QACF,CAAC;QAED,KAAK,EAAE;UACLY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,YAAY;UAClBC,KAAK,EAAE;YACLC,EAAE,EAAE,kBAAkB;YACtBC,EAAE,EAAE;UACN;QACF,CAAC;QAED,KAAK,EAAE;UACLY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,YAAY;UAClBC,KAAK,EAAE;YACLC,EAAE,EAAE,sBAAsB;YAC1BC,EAAE,EAAE;UACN;QACF,CAAC;QAED,KAAK,EAAE;UACLY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,iBAAiB;YACrBC,EAAE,EAAE;UACN;QACF,CAAC;QAED,CAAC,EAAE;UACDY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;YACLC,EAAE,EAAE,OAAO;YACXC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,CAAC,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC;YACxD,OAAO;cACLR,GAAG,EAAE,GAAG,GAAGM,GAAG;cACdL,GAAG,EAAE,GAAG,GAAGK,GAAG,CAACG,WAAW,CAAC;YAC7B,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,CAAC,EAAE;UACDb,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE;YACLC,EAAE,EAAE,OAAO;YACXC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC,GAAG;YACTC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACVA,GAAG,GAAG,CAACA,GAAG,CAAC,CAAC;YACZ,IAAIA,GAAG,GAAG,CAAC,GAAG,IAAKA,GAAG,GAAG,CAAC,CAAC,IAAIA,GAAG,IAAI,CAAE,EAAE;cACxC,OAAO;gBAAEC,GAAG,EAAE,IAAI;gBAAEC,GAAG,EAAE;cAAK,CAAC,CAAC,CAAC;YACnC;;YAEA,IAAIF,GAAG,GAAG,GAAG,IAAKA,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAE,EAAE;cACrC,OAAO;gBAAEC,GAAG,EAAE,IAAI;gBAAEC,GAAG,EAAE;cAAK,CAAC,CAAC,CAAC;YACnC;;YAEA,IAAMS,EAAE,GAAGX,GAAG,GAAG,CAAC;YAClB,IAAMY,QAAQ,GAAG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,IAAI,CAACF,IAAI,CAACG,GAAG,CAAChB,GAAG,CAAC,CAAC,CAAC;YACzD,IAAMO,GAAG,GAAG,CAACK,QAAQ,GAAID,EAAE,GAAG,CAAO,EAAEF,QAAQ,CAAC,EAAE,CAAC;YACnD,OAAO;cACLR,GAAG,EAAE,GAAG,GAAGM,GAAG;cACdL,GAAG,EAAE,GAAG,GAAGK,GAAG,CAACG,WAAW,CAAC;YAC7B,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMG,GAAG,GAAGF,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;YAC7B,IAAMO,EAAE,GAAG,CAACJ,GAAG,GAAG,CAAM,IAAI,CAAC;YAC7B,OAAQ,CAACI,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAAE,IAAA,CAAAI,GAAA,CAAI,CAAC,EAAK,CAACV,GAAG,GAAG,CAAK,IAAI,CAAC,CAAC;UACxD;QACF,CAAC;QAED,KAAK,EAAE;UACLD,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,qBAAqB;UAC3BC,KAAK,EAAE;YACLC,EAAE,EAAE,QAAQ;YACZC,EAAE,EAAE;UACN;QACF,CAAC;QAED,KAAK,EAAE;UACLY,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,oBAAoB;UAC1BC,KAAK,EAAE;YACLC,EAAE,EAAE,uBAAuB;YAC3BC,EAAE,EAAE;UACN;QACF,CAAC;QAED,CAAC,EAAE;UACDH,IAAI,EAAE,MAAM;UACZC,KAAK,EAAE;YACLC,EAAE,EAAE,SAAS;YACbC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAG,CAAC,EAAE,GAAGP,GAAG,EAAEkB,UAAU,CAAC,CAAC,CAAC,CAACT,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAClE,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOgB,MAAM,CAACC,YAAY,CAAChB,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,CAAC;UAC/C;QACF,CAAC;QAED,KAAK,EAAE;UACLb,IAAI,EAAE,gBAAgB;UACtBe,IAAI,EAAE;QACR,CAAC;QAED,CAAC,EAAE;UACDf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,+BAA+B;YACnCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,GAAG,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAC3E,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,KAAK,EAAE;UACLb,IAAI,EAAE,aAAa;UACnBC,KAAK,EAAE;YACLC,EAAE,EAAE,aAAa;YACjBC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,GAAG,MAAW,CAAC,CACrDS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACnB,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAQC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK;UAC1C;QACF,CAAC;QAED,KAAK,EAAE;UACLb,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE;YACLC,EAAE,EAAE,QAAQ;YACZC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,GAAG,oBAAW,CAAC,CACrDS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACnB,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAQC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK;UAC1C;QACF,CAAC;QAED,KAAK,EAAE;UACLE,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,aAAa;YACjBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,OAAO,EAAE;UACPQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,oBAAoB;UAC1BC,KAAK,EAAE;YACLC,EAAE,EAAE,QAAQ;YACZC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,CAAC,EAAE;UACDP,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE;YACLC,EAAE,EAAE,oCAAoC;YACxCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC,GAAG;YACTC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACVA,GAAG,GAAGZ,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,GAAG,EAAER,GAAG,EAAE,GAAG,CAAC;YAC1C,IAAIO,GAAG,GAAGP,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAG,GAAG,GAAGA,GAAG;YACnCO,GAAG,GAAGA,GAAG,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACvC,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMG,GAAG,GAAGF,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;YAC7B,OAAOG,GAAG,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGA,GAAG;UACpC;QACF,CAAC;QAED,KAAK,EAAE;UACLD,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,4BAA4B;YAChCC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,OAAO,EAAE;UACPQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,mBAAmB;UACzBC,KAAK,EAAE;YACLC,EAAE,EAAE,uBAAuB;YAC3BC,EAAE,EAAE;UACN;QACF,CAAC;QAED,CAAC,EAAE;UACDH,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE;YACLC,EAAE,EAAE,gCAAgC;YACpCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,MAAM,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAC9E,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,KAAK,EAAE;UACLE,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE;QACR,CAAC;QAED,OAAO,EAAE;UACPe,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,iCAAiC;UACvCO,IAAI,EAAE;QACR,CAAC;QAED,CAAC,EAAE;UACDP,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,qCAAqC;YACzCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC,MAAM;YACZC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,MAAM,EAAER,GAAG,EAAE,MAAM,CAAC;YACpDO,GAAG,GAAGA,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAG,KAAK,GAAGA,GAAG;YACjCA,GAAG,GAAGA,GAAG,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACvC,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMG,GAAG,GAAGF,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;YAC7B,OAAOG,GAAG,GAAG,KAAK,GAAGA,GAAG,GAAG,KAAK,GAAGA,GAAG;UACxC;QACF,CAAC;QAED,KAAK,EAAE;UACLD,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE;QACR,CAAC;QAED,CAAC,EAAE;UACDA,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE;YACLC,EAAE,EAAE,uBAAuB;YAC3BC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC,SAAS;YACfC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIsB,SAAS,KAAKtB,GAAG,IAAIuB,KAAK,CAACvB,GAAG,CAAC,EAAE;cACnC,OAAO,MAAM;YACf;YACA,IAAMwB,IAAI,GAAG,CAACxB,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC;YAClC,IAAIyB,IAAI,GAAGZ,IAAI,CAACa,KAAK,CAAC,CAAC1B,GAAG,GAAG,KAAK,CAAC;YACnC,IAAI2B,GAAG,GAAG,CAAC;YACX,OAAOd,IAAI,CAACG,GAAG,CAACS,IAAI,CAAC,GAAG,IAAI,EAAE;cAC5BA,IAAI,KAAK,CAAC;cACVE,GAAG,EAAE;YACP;YACA,IAAMpB,GAAG,GAAG,CAACiB,IAAI,GAAIG,GAAG,IAAI,EAAG,GAAIF,IAAI,GAAG,MAAO,EAAEhB,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAChF,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,KAAK,MAAM,EAAE;cAChC,OAAOwB,GAAG;YACZ;YACA,IAAMC,IAAI,GAAGxB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAMC,IAAI,GAAG1B,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAMN,IAAI,GAAGnB,QAAQ,CAACwB,IAAI,GAAG,IAAI,CAAC;YAClC,IAAMF,GAAG,GAAGtB,QAAQ,CAACwB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtC,IAAIJ,IAAI,GAAGpB,QAAQ,CAAE,CAACwB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAIE,IAAI,CAAC;YAC/C,IAAIP,IAAI,KAAK,CAAC,EAAE;cACdC,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;YAC/B;YACA,OAAO,CAAC,CAAC,IAAIE,GAAG,IAAI,IAAI,GAAGF,IAAI;UACjC;QACF,CAAC;QAED,KAAK,EAAE;UACLnB,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,YAAY;YAChBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,KAAK,EAAE;UACLQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,oBAAoB;YACxBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,KAAK,EAAE;UACLQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,oBAAoB;UAC1BC,KAAK,EAAE;YACLC,EAAE,EAAE,kBAAkB;YACtBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,KAAK,EAAE;UACLQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,sBAAsB;UAC5BC,KAAK,EAAE;YACLC,EAAE,EAAE,cAAc;YAClBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,OAAO,EAAE;UACPQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,UAAU;YACdC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,KAAK,EAAE;UACLQ,IAAI,EAAE,GAAG;UACTf,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,OAAO;YACXC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE;QACR,CAAC;QAED,MAAM,EAAE;UACNP,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,MAAM;YACVC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAG,CAAC,CAACP,GAAG,CAACgC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIhC,GAAG,CAACiC,QAAQ,CAAC,CAAC,EAAExB,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAC9EZ,GAAG,IAAIP,GAAG,CAACkC,UAAU,CAAC,CAAC,CAACzB,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACrDZ,GAAG,IAAIP,GAAG,CAACmC,UAAU,CAAC,CAAC,CAAC1B,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACrD,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMgC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzBD,IAAI,CAACE,QAAQ,CAACjC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;YACpDM,IAAI,CAACG,UAAU,CAAClC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/CM,IAAI,CAACI,UAAU,CAACnC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C;YACA;YACA,IAAMW,GAAG,GAAG,CAACpC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC;YACxD,IAAIW,GAAG,GAAG,CAAC,EAAE;cACX,IAAMC,QAAQ,GAAG,CAACD,GAAG,GAAGL,IAAI,CAACJ,MAAM,CAAC,CAAC,IAAI,CAAC;cAC1CI,IAAI,CAACO,OAAO,CAACP,IAAI,CAACQ,OAAO,CAAC,CAAC,GAAGF,QAAQ,CAAC;YACzC;YACA,OAAON,IAAI;UACb;QACF,CAAC;QAED,MAAM,EAAE;UACN7C,IAAI,EAAE,UAAU;UAChBC,KAAK,EAAE;YACLC,EAAE,EAAE,OAAO;YACXC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAAA,EAAG;YACP;UAAA,CACD;UACDI,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMyC,IAAI,GAAGxC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;YAClD,OAAO,IAAIO,IAAI,CACbQ,IAAI,GAAG,EAAE,GAAGA,IAAI,GAAG,IAAI,GAAGA,IAAI,GAAG,IAAI;YAAE;YACvC,CAACxC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,EAC3CzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IACnC,CAAC;UACH;QACF,CAAC;QAED,EAAE,EAAE;UACFvC,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE;YACLC,EAAE,EAAE,gCAAgC;YACpCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,UAAU,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAClF,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,MAAM,EAAE;UACNE,IAAI,EAAE,IAAI;UACVf,IAAI,EAAE;QACR,CAAC;QAED,EAAE,EAAE;UACFA,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,qCAAqC;YACzCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC,UAAU;YAChBC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,UAAU,EAAER,GAAG,EAAE,UAAU,CAAC;YAC5DO,GAAG,GAAGA,GAAG,GAAG,CAAC,GAAGA,GAAG,GAAG,UAAU,GAAGA,GAAG;YACtCA,GAAG,GAAGM,IAAI,CAACa,KAAK,CAACnB,GAAG,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACnD,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMG,GAAG,GAAGF,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;YAC7B,OAAOG,GAAG,GAAG,UAAU,GAAGA,GAAG,GAAG,UAAU,GAAGA,GAAG;UAClD;QACF,CAAC;QAED,MAAM,EAAE;UACND,IAAI,EAAE,IAAI;UACVf,IAAI,EAAE;QACR,CAAC;QAED,EAAE,EAAE;UACFA,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE;YACLC,EAAE,EAAE,iDAAiD;YACrDC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAAA,EAAG;YACP;UAAA,CACD;UACDI,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMG,GAAG,GAAGF,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;YAC7B,IAAMoB,IAAI,GAAGjB,GAAG,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;YACtC,IAAMoB,GAAG,GAAG,CAAC,CAACpB,GAAG,GAAG,UAAU,KAAK,EAAE,IAAI,GAAG;YAC5C,IAAMkB,IAAI,GAAIlB,GAAG,GAAG,UAAU,GAAI,UAAU;YAC5C,OAAOiB,IAAI,GAAGX,IAAI,CAACI,GAAG,CAAC,CAAC,EAAEU,GAAG,CAAC,IAAIF,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;UACrD;QACF,CAAC;QAED,MAAM,EAAE;UACNnB,IAAI,EAAE,IAAI;UACVf,IAAI,EAAE;QACR,CAAC;QAED,EAAE,EAAE;UACFA,IAAI,EAAE,kBAAkB;UACxBC,KAAK,EAAE;YACLC,EAAE,EAAE,oBAAoB;YACxBC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAG,EAAE;YACZP,GAAG,IAAI,EAAE,CAAC,CAAC;YACX,KAAK,IAAI8C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;cAC3B,IAAMC,CAAC,GAAG/C,GAAG,CAACkB,UAAU,CAAC4B,CAAC,CAAC;cAC3BvC,GAAG,IAAIwC,CAAC,GAAG,CAACA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,CAAC,CAACtC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI;YACxD;YACA,OAAO;cACLR,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIG,GAAG,GAAG,EAAE;YACZ,IAAIyC,KAAK;YACT,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;cAC9BE,KAAK,GAAG3C,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAACgB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;cACtC,IAAIE,KAAK,GAAG,CAAC,EAAE;gBACbzC,GAAG,IAAIa,MAAM,CAACC,YAAY,CAAC2B,KAAK,CAAC;cACnC;YACF;YACA,OAAOzC,GAAG;UACZ;QACF,CAAC;QAED,QAAQ,EAAE;UACRD,IAAI,EAAE;QACR,CAAC;QAED,MAAM,EAAE;UACNA,IAAI,EAAE,IAAI;UACVf,IAAI,EAAE,mBAAmB;UACzBC,KAAK,EAAE;YACLC,EAAE,EAAE,yBAAyB;YAC7BC,EAAE,EAAE;UACN;QACF,CAAC;QAED,EAAE,EAAE;UACFY,IAAI,EAAE,IAAI;UACVf,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE;YACLE,EAAE,EAAE,cAAc;YAClBD,EAAE,EAAE;UACN,CAAC;UAEDE,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE;QACR,CAAC;QAED,MAAM,EAAE;UACNQ,IAAI,EAAE;QACR,CAAC;QAED,EAAE,EAAE;UACFf,IAAI,EAAE,kBAAkB;UACxBC,KAAK,EAAE;YACLE,EAAE,EAAE,cAAc;YAClBD,EAAE,EAAE;UACN,CAAC;UAEDE,KAAK,EAAE;YACLC,GAAG,EAAE,CAAC;YACNC,GAAG;UACL,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,GAAG,CAAC,KAAU,CAAC,CACnDS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACnB,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC;UAC9B;QACF,CAAC;QAED,MAAM,EAAE;UACNE,IAAI,EAAE;QACR,CAAC;QAED,MAAM,EAAE;UACNf,IAAI,EAAE,cAAc;UACpBC,KAAK,EAAE;YACLC,EAAE,EAAE,oBAAoB;YACxBC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACL,QAAM,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,qBAAqB;UACvE,CAAC;UAEDG,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG;YACP,QAAQP,GAAG;cACT,KAAK,CAAC;cACN,KAAK,SAAS;gBACZO,GAAG,GAAG,CAAC;gBACP;cACF,KAAK,CAAC;cACN,KAAK,SAAS;gBACZA,GAAG,GAAG,CAAC;gBACP;cACF,KAAK,CAAC;cACN,KAAK,SAAS;gBACZA,GAAG,GAAG,CAAC;gBACP;cACF,KAAK,CAAC;cACN,KAAK,qBAAqB;gBACxBA,GAAG,GAAG,CAAC;gBACP;cACF;gBACE;gBACAA,GAAG,GAAG,CAAC;YACX;YAEAA,GAAG,GAAGA,GAAG,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACvC,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,QAAQC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;cACvB,KAAK,CAAC;gBACJ,OAAO,SAAS;cAClB,KAAK,CAAC;gBACJ,OAAO,SAAS;cAClB,KAAK,CAAC;gBACJ,OAAO,SAAS;cAClB,KAAK,CAAC;gBACJ,OAAO,qBAAqB;cAC9B;gBACE;gBACA,OAAO,MAAM;YACjB;UACF;QACF,CAAC;QAED;AACN;AACA;AACA;AACA;AACA;AACA;QACM,MAAM,EAAE;UACNb,IAAI,EAAE,sBAAsB;UAC5BC,KAAK,EAAE;YACLC,EAAE,EAAE,6BAA6B;YACjCC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAG,EAAE;YACZ,KAAK,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9C,GAAG,CAACiD,MAAM,EAAEH,CAAC,EAAE,EAAE;cACnC,IAAMC,CAAC,GAAG/C,GAAG,CAACkB,UAAU,CAAC4B,CAAC,CAAC;cAC3BvC,GAAG,IAAIwC,CAAC,GAAG,CAACA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,CAAC,CAACtC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI;YACxD;YACA;YACAF,GAAG,IAAI,IAAI;YACX,OAAO;cACLN,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIG,GAAG,GAAG,EAAE;YACZ,IAAIyC,KAAK;YACT,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,GAAG,CAAC6C,MAAM,EAAEH,CAAC,IAAI,CAAC,EAAE;cACtCE,KAAK,GAAG3C,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAACgB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;cACtC,IAAIE,KAAK,GAAG,CAAC,EAAE;gBACbzC,GAAG,IAAIa,MAAM,CAACC,YAAY,CAAC2B,KAAK,CAAC;cACnC;YACF;YACA,OAAOzC,GAAG;UACZ;QACF,CAAC;QAED,EAAE,EAAE;UACFhB,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLE,EAAE,EAAE,cAAc;YAClBD,EAAE,EAAE;UACN,CAAC;UAEDE,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG;UACL,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,GAAG,CAAC,KAAS,CAAC,CAClDS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACnB,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC;UAC9B;QACF,CAAC;QAED,MAAM,EAAE;UACNE,IAAI,EAAE;QACR,CAAC;QAED,GAAG,EAAE;UACHf,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE;YACLC,EAAE,EAAE,gCAAgC;YACpCC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMO,GAAG,GAAGnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,EAAE,QAAQ,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YAChF,OAAO;cACLlB,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;UAC1B;QACF,CAAC;QAED,OAAO,EAAE;UACPb,IAAI,EAAE,kBAAkB;UACxBC,KAAK,EAAE;YACLC,EAAE,EAAE,4BAA4B;YAChCC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAMkD,MAAM,GAAGlD,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrC,IAAMC,OAAO,GAAGpD,GAAG,CAACmD,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;YACvC,IAAM5C,GAAG,GAAG,CACVnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE0C,MAAM,EAAE,MAAM,CAAC,CAACzC,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACrE/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE4C,OAAO,EAAE,GAAG,MAAW,CAAC,CAC7C3C,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACpB,CAACkC,IAAI,CAAC,EAAE,CAAC;YACV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAO,IAAIkD,GAAG,CAAC,CACb,CAAC,QAAQ,EAAEjD,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAC1C,CAAC,SAAS,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,CAC5D,CAAC;UACJ;QACF,CAAC;QAED,GAAG,EAAE;UACHvC,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;YACLC,EAAE,EAAE,mBAAmB;YACvBC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIO,GAAG,GAAG,CACRnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,MAAW,CAAC,CAC5CS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,MAAW,CAAC,CAC5CS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAER,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,MAAW,CAAC,CAC5CS,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACpB,CAACkC,IAAI,CAAC,EAAE,CAAC;YACV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAO,CACJC,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,EAC7CzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,EAC7CzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAC/C;UACH;QACF,CAAC;QAED,SAAS,EAAE;UACTvC,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,WAAW;YACfC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAI,EAAEA,GAAG,YAAYsD,GAAG,CAAC,EAAE;cACzB,OAAO;gBAAErD,GAAG,EAAE,UAAU;gBAAEC,GAAG,EAAE;cAAS,CAAC;YAC3C;YAEA,IAAMqD,CAAC,GAAGvD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMK,CAAC,GAAGxD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMM,CAAC,GAAGzD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAM5C,GAAG,GAAG,CACVnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE+C,CAAC,EAAE,GAAG,MAAW,CAAC,CACvC9C,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEgD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvC/C,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEiD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvChD,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACpB,CAACkC,IAAI,CAAC,EAAE,CAAC;YACV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAO,IAAIkD,GAAG,CAAC,CACb,CAAC,GAAG,EAAGjD,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,CACtD,CAAC;UACJ;QACF,CAAC;QAED,YAAY,EAAE;UACZvC,IAAI,EAAE,2BAA2B;UACjCC,KAAK,EAAE;YACLC,EAAE,EAAE,yBAAyB;YAC7BC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAI,EAAEA,GAAG,YAAYsD,GAAG,CAAC,EAAE;cACzB,OAAO;gBAAErD,GAAG,EAAE,UAAU;gBAAEC,GAAG,EAAE;cAAS,CAAC;YAC3C;YAEA,IAAMwD,CAAC,GAAG1D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMQ,CAAC,GAAG3D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMS,CAAC,GAAG5D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAM5C,GAAG,GAAG,CACVnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEkD,CAAC,EAAE,GAAG,oBAAW,CAAC,CACvCjD,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEmD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvClD,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEoD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvCnD,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACpB,CAACkC,IAAI,CAAC,EAAE,CAAC;YACV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,OAAO,IAAIkD,GAAG,CAAC,CACb,CAAC,GAAG,EAAGjD,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,CACtD,CAAC;UACJ;QACF,CAAC;QAED,SAAS,EAAE;UACTvC,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE;YACLC,EAAE,EAAE,WAAW;YACfC,EAAE,EAAE;UACN,CAAC;UAEDI,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAI,EAAEA,GAAG,YAAYsD,GAAG,CAAC,EAAE;cACzB,IAAI,CAACO,QAAQ,CAAC7D,GAAG,CAAC,EAAE;gBAClB,OAAO;kBAAEC,GAAG,EAAE,gBAAgB;kBAAEC,GAAG,EAAE;gBAAe,CAAC;cACvD;cACAF,GAAG,GAAG,IAAIsD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAACtD,GAAG,CAAC,CAAC,CAAC;YAC9B;YAEA,IAAM8D,MAAM,GACV9D,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,IACZ/D,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,KACX/D,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAGa,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIa,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1G,IAAMc,MAAM,GAAGjE,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,KAAK/D,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAGa,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACtG,IAAMe,CAAC,GAAGlE,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMgB,CAAC,GAAGnE,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMiB,CAAC,GAAGpE,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAM5C,GAAG,GAAG,CACVnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE0D,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAACzD,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAClE/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE2D,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC1D,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAClE/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE4D,CAAC,EAAE,GAAG,MAAW,CAAC,CACvC3D,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB,CAAC2C,MAAM,GAAG,CAAC,GAAGG,MAAM,GAAG,CAAC,EAAExD,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACxD,CAACkC,IAAI,CAAC,EAAE,CAAC;YAEV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIiE,KAAK,GAAGhE,QAAQ,CAACD,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,OAAO,IAAIkD,GAAG,CAAC,CACb,CAAC,GAAG,EAAEjD,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC,EAC/C,CAAC,GAAG,EAAEzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC,EAC/C,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,QAAQ,EAAE,CAACuC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC3B,CAAC,QAAQ,EAAE,CAACA,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAC5B,CAAC;UACJ;QACF,CAAC;QAED,SAAS,EAAE;UACT9E,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE;YACLC,EAAE,EAAE,YAAY;YAChBC,EAAE,EAAE;UACN,CAAC;UAEDC,KAAK,EAAE;YACLC,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE;UACP,CAAC;UAEDC,IAAI,EAAE,GAAG;UACTC,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAI,EAAEA,GAAG,YAAYsD,GAAG,CAAC,EAAE;cACzB,OAAO;gBAAErD,GAAG,EAAE,gBAAgB;gBAAEC,GAAG,EAAE;cAAe,CAAC;YACvD;YAEA,IAAMoE,MAAM,GACVtE,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,IAAIC,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,KAAKnD,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YACjG,IAAMoB,MAAM,GACVvE,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,IAAIC,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,KAAKnD,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YACjG,IAAMqB,MAAM,GACVxE,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,IAAIC,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,KAAKnD,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YACjG,IAAMsB,MAAM,GACVzE,GAAG,CAAC+D,GAAG,CAAC,GAAG,CAAC,IAAIC,MAAM,CAACH,QAAQ,CAAC7D,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,CAAC,KAAKnD,GAAG,CAAC+D,GAAG,CAAC,QAAQ,CAAC,GAAG/D,GAAG,CAACmD,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YACjG,IAAMI,CAAC,GAAGvD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMK,CAAC,GAAGxD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMM,CAAC,GAAGzD,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAMuB,CAAC,GAAG1E,GAAG,CAACmD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAM5C,GAAG,GAAG,CACVnB,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAE+C,CAAC,EAAE,GAAG,MAAW,CAAC,CACvC9C,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEgD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvC/C,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEiD,CAAC,EAAE,GAAG,MAAW,CAAC,CACvChD,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB/B,EAAE,CAACC,SAAS,CAACmB,OAAO,CAAC,CAAC,EAAEkE,CAAC,EAAE,GAAG,MAAW,CAAC,CACvCjE,QAAQ,CAAC,EAAE,CAAC,CACZU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACnB,IAAI,EACJ,CAACmD,MAAM,GAAG,CAAC,GAAGC,MAAM,GAAG,CAAC,GAAGC,MAAM,GAAG,CAAC,GAAGC,MAAM,GAAG,CAAC,EAAEhE,QAAQ,CAAC,EAAE,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAClF,CAACkC,IAAI,CAAC,EAAE,CAAC;YAEV,OAAO;cACLpD,GAAG,EAAE,IAAI,GAAGM,GAAG;cACfL,GAAG,EAAEK,GAAG,CAACG,WAAW,CAAC;YACvB,CAAC;UACH,CAAC;UACDP,MAAM,WAAAA,OAACC,GAAG,EAAE;YACV,IAAIiE,KAAK,GAAGhE,QAAQ,CAACD,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,OAAO,IAAIkD,GAAG,CAAC,CACb,CAAC,GAAG,EAAGjD,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,GAAG,EAAGzB,QAAQ,CAACD,GAAG,CAAC0B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI,KAAK,CAAC,EACrD,CAAC,QAAQ,EAAE,CAACuC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC3B,CAAC,QAAQ,EAAE,CAACA,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC3B,CAAC,QAAQ,EAAE,CAACA,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC3B,CAAC,QAAQ,EAAE,CAACA,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAC5B,CAAC;UACJ;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAzrCFjF,EAAE,CAACuF,UAAU,CAACC,GAAG,CAAC7F,aAAa,GAAGA,aAAa;AAAC"
}