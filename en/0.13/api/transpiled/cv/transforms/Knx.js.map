{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "defer",
    "cv",
    "Transform",
    "addTransform",
    "name",
    "lname",
    "de",
    "en",
    "range",
    "min",
    "max",
    "unit",
    "encode",
    "phy",
    "bus",
    "raw",
    "decode",
    "hex",
    "parseInt",
    "link",
    "val",
    "clipInt",
    "toString",
    "toUpperCase",
    "up",
    "stepCode",
    "Math",
    "floor",
    "log2",
    "abs",
    "charCodeAt",
    "padStart",
    "String",
    "fromCharCode",
    "undefined",
    "isNaN",
    "sign",
    "mant",
    "round",
    "exp",
    "NaN",
    "bin1",
    "substr",
    "bin2",
    "getDay",
    "getHours",
    "getMinutes",
    "getSeconds",
    "date",
    "Date",
    "setHours",
    "setMinutes",
    "setSeconds",
    "day",
    "dayShift",
    "setDate",
    "getDate",
    "year",
    "pow",
    "i",
    "c",
    "chars",
    "length",
    "period",
    "get",
    "percent",
    "join",
    "Map",
    "r",
    "g",
    "b",
    "h",
    "s",
    "v",
    "isFinite",
    "cValid",
    "has",
    "Number",
    "YValid",
    "x",
    "y",
    "Y",
    "valid",
    "rValid",
    "gValid",
    "bValid",
    "wValid",
    "w",
    "transforms",
    "Knx"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/transforms/Knx.js"
  ],
  "sourcesContent": [
    "/* Knx.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2010\n */\nqx.Class.define('cv.transforms.Knx', {\n  type: 'static',\n\n  defer() {\n    cv.Transform.addTransform('DPT', {\n      /**\n       * This class defines the default transforms:\n       *   encode: transform JavaScript to bus value\n       *   decode: transform bus to JavaScript value\n       */\n      1: {\n        name: '1 bit',\n        lname: {\n          de: '1 Bit',\n          en: '1 bit'\n        },\n\n        range: {\n          min: 0,\n          max: 1\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = +phy; // cast to number\n          return {\n            bus: phy ? '81' : '80',\n            raw: phy ? '01' : '00'\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      1.001: {\n        link: '1',\n        name: 'DPT_Switch',\n        lname: {\n          de: 'Aus-An-Schalter',\n          en: 'off on switch'\n        }\n      },\n\n      1.002: {\n        link: '1',\n        name: 'DPT_Bool',\n        lname: {\n          de: 'Boolscher-Wert',\n          en: 'boolean value'\n        }\n      },\n\n      1.003: {\n        link: '1',\n        name: 'DPT_Enable',\n        lname: {\n          de: 'Disable / Enable',\n          en: 'disable / enable'\n        }\n      },\n\n      1.008: {\n        link: '1',\n        name: 'DPT_UpDown',\n        lname: {\n          de: 'Hoch-Runter-Schalter',\n          en: 'up down switch'\n        }\n      },\n\n      1.009: {\n        link: '1',\n        name: 'DPT_OpenClose',\n        lname: {\n          de: 'Auf-Zu-Schalter',\n          en: 'open close switch'\n        }\n      },\n\n      2: {\n        link: '1',\n        name: '2 bit',\n        lname: {\n          de: '2 Bit',\n          en: '2 bit'\n        },\n\n        range: {\n          min: 0,\n          max: 3\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 3).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      3: {\n        name: '4 bit',\n        lname: {\n          de: '4 Bit',\n          en: '4 bit'\n        },\n\n        range: {\n          min: -100,\n          max: 100\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = +phy; // enforce number\n          if (phy < -100 || (phy > -1 && phy <= 0)) {\n            return { bus: '80', raw: '00' }; // down: stop\n          }\n\n          if (phy > 100 || (phy > 0 && phy < 1)) {\n            return { bus: '88', raw: '08' }; // up: stop\n          }\n\n          const up = phy > 0;\n          const stepCode = 7 - Math.floor(Math.log2(Math.abs(phy)));\n          const val = (stepCode | (up * 0b1000)).toString(16);\n          return {\n            bus: '8' + val,\n            raw: '0' + val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          const up = (val & 0b1000) > 0;\n          return ((up * 2 - 1) * 100) / 2 ** ((val & 0b111) - 1);\n        }\n      },\n\n      3.007: {\n        link: '3',\n        name: 'DPT_Control_Dimming',\n        lname: {\n          de: 'Dimmen',\n          en: 'dimming'\n        }\n      },\n\n      3.008: {\n        link: '3',\n        name: 'DPT_Control_Blinds',\n        lname: {\n          de: 'Beschattungssteuerung',\n          en: 'blind control'\n        }\n      },\n\n      4: {\n        name: 'char',\n        lname: {\n          de: 'Zeichen',\n          en: 'char'\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = ('' + phy).charCodeAt(0).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        }\n      },\n\n      4.001: {\n        name: 'DPT_Char_ASCII',\n        link: '4'\n      },\n\n      5: {\n        name: '8 bit unsigned',\n        lname: {\n          de: '8 Bit vorzeichenloser Integer',\n          en: '8 bit unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 255\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 255).toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      5.001: {\n        name: 'DPT_Scaling',\n        lname: {\n          de: 'Prozentwert',\n          en: 'percentage'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 100, 255 / 100)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return (parseInt(hex, 16) * 100) / 255.0;\n        }\n      },\n\n      5.003: {\n        name: 'DPT_Angle',\n        lname: {\n          de: 'Winkel',\n          en: 'angle'\n        },\n\n        range: {\n          min: 0.0,\n          max: 360.0\n        },\n\n        unit: '°',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 360, 255 / 360)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return (parseInt(hex, 16) * 360) / 255.0;\n        }\n      },\n\n      5.004: {\n        link: '5',\n        name: 'DPT_Percent_U8',\n        lname: {\n          de: 'Prozentwert',\n          en: 'percentage'\n        },\n\n        unit: '%'\n      },\n\n      '5.010': {\n        link: '5',\n        name: 'DPT_Value_1_Ucount',\n        lname: {\n          de: 'Zähler',\n          en: 'counter'\n        },\n\n        unit: '-'\n      },\n\n      6: {\n        name: '8 bit signed',\n        lname: {\n          de: '8 Bit vorzeichenbehafteter Integer',\n          en: '8 bit signed integer'\n        },\n\n        range: {\n          min: -128,\n          max: 127\n        },\n\n        unit: '-',\n        encode(phy) {\n          phy = cv.Transform.clipInt(-128, phy, 127);\n          let val = phy < 0 ? phy + 256 : phy;\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 127 ? val - 256 : val;\n        }\n      },\n\n      6.001: {\n        link: '6',\n        name: 'DPT_Percent_V8',\n        lname: {\n          de: 'Prozentwert mit Vorzeichen',\n          en: 'percentage with sign'\n        },\n\n        unit: '%'\n      },\n\n      '6.010': {\n        link: '6',\n        name: 'DPT_Value_1_Count',\n        lname: {\n          de: 'Zähler mit Vorzeichen',\n          en: 'counter with sign'\n        }\n      },\n\n      7: {\n        name: '2 byte unsigned',\n        lname: {\n          de: '2 Byte vorzeichenloser Integer',\n          en: '2 byte unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 0xffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffff).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      7.001: {\n        link: '7',\n        name: 'DPT_Value_2_Ucount'\n      },\n\n      '7.600': {\n        link: '7',\n        name: 'DPT_Absolute_Colour_Temperature',\n        unit: 'K'\n      },\n\n      8: {\n        name: '2 byte signed',\n        lname: {\n          de: '2 Byte vorzeichenbehafteter Integer',\n          en: '2 byte signed integer'\n        },\n\n        range: {\n          min: -0x8000,\n          max: 0x7fff\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = cv.Transform.clipInt(-0x8000, phy, 0x7fff);\n          val = val < 0 ? val + 65536 : val;\n          val = val.toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 32767 ? val - 65536 : val;\n        }\n      },\n\n      8.001: {\n        link: '8',\n        name: 'DPT_Value_2_Count'\n      },\n\n      9: {\n        name: '2 byte float',\n        lname: {\n          de: '2 Byte Gleitkommazahl',\n          en: '2 byte float value'\n        },\n\n        range: {\n          min: -671088.64,\n          max: 670433.28\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (undefined === phy || isNaN(phy)) {\n            return '7fff';\n          }\n          const sign = +phy < 0 ? 0x8000 : 0;\n          let mant = Math.round(+phy * 100.0);\n          let exp = 0;\n          while (Math.abs(mant) > 2047) {\n            mant >>= 1;\n            exp++;\n          }\n          const val = (sign | (exp << 11) | (mant & 0x07ff)).toString(16).padStart(4, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          if (parseInt(hex, 16) === 0x7fff) {\n            return NaN;\n          }\n          const bin1 = parseInt(hex.substr(0, 2), 16);\n          const bin2 = parseInt(hex.substr(2, 2), 16);\n          const sign = parseInt(bin1 & 0x80);\n          const exp = parseInt(bin1 & 0x78) >> 3;\n          let mant = parseInt(((bin1 & 0x7) << 8) | bin2);\n          if (sign !== 0) {\n            mant = -(~(mant - 1) & 0x7ff);\n          }\n          return (1 << exp) * 0.01 * mant;\n        }\n      },\n\n      9.001: {\n        link: '9',\n        name: 'DPT_Value_Temp',\n        lname: {\n          de: 'Temperatur',\n          en: 'temperature'\n        },\n\n        unit: '°C'\n      },\n\n      9.004: {\n        link: '9',\n        name: 'DPT_Value_Lux',\n        lname: {\n          de: 'Beleuchtungsstärke',\n          en: 'illuminance'\n        },\n\n        unit: 'Lux'\n      },\n\n      9.007: {\n        link: '9',\n        name: 'DPT_Value_Humidity',\n        lname: {\n          de: 'Luftfeuchtigkeit',\n          en: 'humidity'\n        },\n\n        unit: '%'\n      },\n\n      9.008: {\n        link: '9',\n        name: 'DPT_Value_AirQuality',\n        lname: {\n          de: 'Luftqualität',\n          en: 'air quality'\n        },\n\n        unit: 'ppm'\n      },\n\n      '9.020': {\n        link: '9',\n        name: 'DPT_Value_Volt',\n        lname: {\n          de: 'Spannung',\n          en: 'voltage'\n        },\n\n        unit: 'mV'\n      },\n\n      9.021: {\n        link: '9',\n        name: 'DPT_Value_Curr',\n        lname: {\n          de: 'Strom',\n          en: 'current'\n        },\n\n        unit: 'mA'\n      },\n\n      10.001: {\n        name: 'DPT_TimeOfDay',\n        lname: {\n          de: 'Zeit',\n          en: 'time'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = ((phy.getDay() << 5) + phy.getHours()).toString(16).padStart(2, '0');\n          val += phy.getMinutes().toString(16).padStart(2, '0');\n          val += phy.getSeconds().toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const date = new Date(); // assume today\n          date.setHours(parseInt(hex.substr(0, 2), 16) & 0x1f);\n          date.setMinutes(parseInt(hex.substr(2, 2), 16));\n          date.setSeconds(parseInt(hex.substr(4, 2), 16));\n          // as KNX thinks the day of the week belongs to the time, but JavaScript\n          // doesn't, tweak the date till it fits...\n          const day = (parseInt(hex.substr(0, 2), 16) & 0xe0) >> 5;\n          if (day > 0) {\n            const dayShift = (day - date.getDay()) % 7;\n            date.setDate(date.getDate() + dayShift);\n          }\n          return date;\n        }\n      },\n\n      11.001: {\n        name: 'DPT_Date',\n        lname: {\n          de: 'Datum',\n          en: 'date'\n        },\n\n        unit: '-',\n        encode() {\n          // FIXME\n        },\n        decode(hex) {\n          const year = parseInt(hex.substr(4, 2), 16) & 0x7f;\n          return new Date(\n            year < 90 ? year + 2000 : year + 1900, //1990 - 2089\n            (parseInt(hex.substr(2, 2), 16) & 0x0f) - 1,\n            parseInt(hex.substr(0, 2), 16) & 0x1f\n          );\n        }\n      },\n\n      12: {\n        name: '4 byte unsigned',\n        lname: {\n          de: '4 Byte vorzeichenloser Integer',\n          en: '4 byte unsigned integer'\n        },\n\n        range: {\n          min: 0,\n          max: 0xffffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffffff).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      12.001: {\n        link: '12',\n        name: 'DPT_Value_4_Ucount'\n      },\n\n      13: {\n        name: '4 byte signed',\n        lname: {\n          de: '4 Byte vorzeichenbehafteter Integer',\n          en: '4 byte signed integer'\n        },\n\n        range: {\n          min: -0x80000000,\n          max: 0x7fffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = cv.Transform.clipInt(-0x80000000, phy, 0x7fffffff);\n          val = val < 0 ? val + 4294967296 : val;\n          val = Math.round(val).toString(16).padStart(8, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          return val > 2147483647 ? val - 4294967296 : val;\n        }\n      },\n\n      13.001: {\n        link: '13',\n        name: 'DPT_Value_4_Count'\n      },\n\n      14: {\n        name: '4 byte float',\n        lname: {\n          de: '4 Byte Gleitkommazahl IEEE 754 (nur Dekodieren)',\n          en: '4 byte float IEEE 754 (only decode)'\n        },\n\n        unit: '-',\n        encode() {\n          //FIXME: unimplemented (jspack?)\n        },\n        decode(hex) {\n          const val = parseInt(hex, 16);\n          const sign = val & 0x80000000 ? -1 : 1;\n          const exp = ((val & 0x7f800000) >> 23) - 127;\n          const mant = (val & 0x007fffff) | 0x00800000;\n          return sign * Math.pow(2, exp) * (mant / (1 << 23));\n        }\n      },\n\n      14.001: {\n        link: '14',\n        name: 'DPT_Value_Acceleration_Angular'\n      },\n\n      16: {\n        name: 'DPT_String_ASCII',\n        lname: {\n          de: '14 Byte Text ASCII',\n          en: '14 byte text ASCII'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = '';\n          phy += ''; // force datatype String\n          for (let i = 0; i < 14; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? (c < 16 ? '0' : '') + c.toString(16) : '00';\n          }\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < 28; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n\n      '16.000': {\n        link: '16'\n      },\n\n      16.001: {\n        link: '16',\n        name: 'DPT_String_8859_1',\n        lname: {\n          de: '14 Byte Text ISO-8859-1',\n          en: '14 byte text ISO-8859-1'\n        }\n      },\n\n      17: {\n        link: '18',\n        name: 'DPT_SceneNumber',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1,\n          max: 64\n        },\n\n        unit: '-'\n      },\n\n      17.001: {\n        link: '18'\n      },\n\n      18: {\n        name: 'DPT_SceneControl',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1,\n          max: 64 + 128\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 128)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n\n      18.001: {\n        link: '18'\n      },\n\n      20.102: {\n        name: 'DPT_HVACMode',\n        lname: {\n          de: 'KONNEX Betriebsart',\n          en: 'HVAC mode'\n        },\n\n        range: {\n          enum: ['auto', 'comfort', 'standby', 'economy', 'building_protection']\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val;\n          switch (phy) {\n            case 1:\n            case 'comfort':\n              val = 1;\n              break;\n            case 2:\n            case 'standby':\n              val = 2;\n              break;\n            case 3:\n            case 'economy':\n              val = 3;\n              break;\n            case 4:\n            case 'building_protection':\n              val = 4;\n              break;\n            default:\n              // actually \"case 0:\" / \"auto\"\n              val = 0;\n          }\n\n          val = val.toString(16).padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          switch (parseInt(hex, 16)) {\n            case 1:\n              return 'comfort';\n            case 2:\n              return 'standby';\n            case 3:\n              return 'economy';\n            case 4:\n              return 'building_protection';\n            default:\n              // actually \"case 0:\"\n              return 'auto';\n          }\n        }\n      },\n\n      /* DPT24.001 is probably not fully correct as it can also hold\n       multiple strings sep. by \\x00 as array according to 3.7.2 DPT v1.07\n       but there is no other reference, even not in ETS4\n       so this gives basic support for now, there is also missing a max-length\n       check in encode.\n       In wiregate DPT24.001 has the same basic support with PL38\n       */\n      24.001: {\n        name: 'DPT_VarString_8859_1',\n        lname: {\n          de: 'Variabler String ISO-8859-1',\n          en: 'variable String ISO-8859-1'\n        },\n\n        unit: '-',\n        encode(phy) {\n          let val = '';\n          for (let i = 0; i < phy.length; i++) {\n            const c = phy.charCodeAt(i);\n            val += c ? (c < 16 ? '0' : '') + c.toString(16) : '00';\n          }\n          /* terminating \\x00 */\n          val += '00';\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let val = '';\n          let chars;\n          for (let i = 0; i < hex.length; i += 2) {\n            chars = parseInt(hex.substr(i, 2), 16);\n            if (chars > 0) {\n              val += String.fromCharCode(chars);\n            }\n          }\n          return val;\n        }\n      },\n\n      26: {\n        name: 'DPT_SceneInfo',\n        lname: {\n          en: 'Scene Number',\n          de: 'Szenen Nummer'\n        },\n\n        range: {\n          min: 1.0,\n          max: 64.0 + 64\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy - 1, 63 + 64)\n            .toString(16)\n            .padStart(2, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16) + 1;\n        }\n      },\n\n      26.001: {\n        link: '26'\n      },\n\n      225: {\n        name: '3 byte unsigned',\n        lname: {\n          de: '3 Byte vorzeichenloser Integer',\n          en: '3 byte unsigned integer'\n        },\n\n        range: {\n          min: 0x0,\n          max: 0xffffff\n        },\n\n        unit: '-',\n        encode(phy) {\n          const val = cv.Transform.clipInt(0, phy, 0xffffff).toString(16).padStart(6, '0');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return parseInt(hex, 16);\n        }\n      },\n\n      225.001: {\n        name: 'DPT_ScalingSpeed',\n        lname: {\n          de: 'Skalierungsgeschwindigkeit',\n          en: 'scaling speed'\n        },\n\n        unit: '-',\n        encode(phy) {\n          const period = phy.get('period') || 0;\n          const percent = phy.get('percent') || 0;\n          const val = [\n            cv.Transform.clipInt(0, period, 0xffff).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, percent, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['period', parseInt(hex.substr(0, 4), 16)],\n            ['percent', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      232: {\n        name: '3xDPT_Scaling',\n        lname: {\n          de: 'Drei Prozentwerte',\n          en: 'three percentages'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          let val = [\n            cv.Transform.clipInt(0, phy[0], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[1], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, phy[2], 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return [\n            (parseInt(hex.substr(0, 2), 16) * 100) / 255.0,\n            (parseInt(hex.substr(2, 2), 16) * 100) / 255.0,\n            (parseInt(hex.substr(4, 2), 16) * 100) / 255.0\n          ];\n        }\n      },\n\n      '232.600': {\n        name: 'DPT_Colour_RGB',\n        lname: {\n          de: 'RGB-Farbe',\n          en: 'rgb color'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['r', (parseInt(hex.substr(0, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      '232.600HSV': {\n        name: 'DPT_Colour_HSV_inofficial',\n        lname: {\n          de: 'HSV-Farbe (inoffiziell)',\n          en: 'hsv color (inofficial)'\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000', raw: '000000' };\n          }\n\n          const h = phy.get('h') || 0;\n          const s = phy.get('s') || 0;\n          const v = phy.get('v') || 0;\n          const val = [\n            cv.Transform.clipInt(0, h, 360, 255 / 360)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, s, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, v, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0')\n          ].join('');\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          return new Map([\n            ['h', (parseInt(hex.substr(0, 2), 16) * 360) / 255.0],\n            ['s', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['v', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0]\n          ]);\n        }\n      },\n\n      '242.600': {\n        name: 'DPT_Colour_xyY',\n        lname: {\n          de: 'xyY-Farbe',\n          en: 'xyY color'\n        },\n\n        unit: '-',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            if (!isFinite(phy)) {\n              return { bus: '80000000000000', raw: '000000000000' };\n            }\n            phy = new Map([['Y', +phy]]);\n          }\n\n          const cValid =\n            phy.has('x') &&\n            phy.has('y') &&\n            (phy.has('cValid') ? phy.get('cValid') : Number.isFinite(phy.get('x')) && Number.isFinite(phy.get('y')));\n          const YValid = phy.has('Y') && (phy.has('YValid') ? phy.get('YValid') : Number.isFinite(phy.get('Y')));\n          const x = phy.get('x') || 0;\n          const y = phy.get('y') || 0;\n          const Y = phy.get('Y') || 0;\n          const val = [\n            cv.Transform.clipInt(0, x, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, y, 1, 65535).toString(16).padStart(4, '0'),\n            cv.Transform.clipInt(0, Y, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            (cValid * 2 + YValid * 1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['x', parseInt(hex.substr(0, 4), 16) / 65535.0],\n            ['y', parseInt(hex.substr(4, 4), 16) / 65535.0],\n            ['Y', (parseInt(hex.substr(8, 2), 16) * 100) / 255.0],\n            ['cValid', (valid & 2) > 0],\n            ['YValid', (valid & 1) > 0]\n          ]);\n        }\n      },\n\n      '251.600': {\n        name: 'DPT_Colour_RGBW',\n        lname: {\n          de: 'RGBW-Farbe',\n          en: 'rgbw color'\n        },\n\n        range: {\n          min: 0.0,\n          max: 100.0\n        },\n\n        unit: '%',\n        encode(phy) {\n          if (!(phy instanceof Map)) {\n            return { bus: '80000000000000', raw: '000000000000' };\n          }\n\n          const rValid =\n            phy.has('r') && Number.isFinite(phy.get('r')) && (phy.has('rValid') ? phy.get('rValid') : true);\n          const gValid =\n            phy.has('g') && Number.isFinite(phy.get('g')) && (phy.has('gValid') ? phy.get('gValid') : true);\n          const bValid =\n            phy.has('b') && Number.isFinite(phy.get('b')) && (phy.has('bValid') ? phy.get('bValid') : true);\n          const wValid =\n            phy.has('w') && Number.isFinite(phy.get('w')) && (phy.has('wValid') ? phy.get('wValid') : true);\n          const r = phy.get('r') || 0;\n          const g = phy.get('g') || 0;\n          const b = phy.get('b') || 0;\n          const w = phy.get('w') || 0;\n          const val = [\n            cv.Transform.clipInt(0, r, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, g, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, b, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            cv.Transform.clipInt(0, w, 100, 255 / 100)\n              .toString(16)\n              .padStart(2, '0'),\n            '00',\n            (rValid * 8 + gValid * 4 + bValid * 2 + wValid * 1).toString(16).padStart(2, '0')\n          ].join('');\n\n          return {\n            bus: '80' + val,\n            raw: val.toUpperCase()\n          };\n        },\n        decode(hex) {\n          let valid = parseInt(hex[11], 16);\n          return new Map([\n            ['r', (parseInt(hex.substr(0, 2), 16) * 100) / 255.0],\n            ['g', (parseInt(hex.substr(2, 2), 16) * 100) / 255.0],\n            ['b', (parseInt(hex.substr(4, 2), 16) * 100) / 255.0],\n            ['w', (parseInt(hex.substr(6, 2), 16) * 100) / 255.0],\n            ['rValid', (valid & 8) > 0],\n            ['gValid', (valid & 4) > 0],\n            ['bValid', (valid & 2) > 0],\n            ['wValid', (valid & 1) > 0]\n          ]);\n        }\n      }\n    });\n  }\n});\n"
  ],
  "mappings": "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"
}