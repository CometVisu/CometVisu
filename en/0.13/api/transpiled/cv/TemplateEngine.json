{
  "className": "cv.TemplateEngine",
  "packageName": "cv",
  "name": "TemplateEngine",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 470,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 28,
        "column": 13
      },
      "end": {
        "line": 49,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "partsLoaded": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the loading state of the parts</p>"
          }
        ]
      },
      "name": "partsLoaded",
      "propertyType": "new",
      "event": "changePartsLoaded",
      "apply": "_applyLoaded",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "scriptsLoaded": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the loading state of the scripts</p>"
          }
        ]
      },
      "name": "scriptsLoaded",
      "propertyType": "new",
      "apply": "_applyLoaded",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "ready": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Shows the initialization state of the TemplateEngine. It gets true when all\n external stuff (parts, scripts, etc.) has been loaded.</p>"
          }
        ]
      },
      "name": "ready",
      "propertyType": "new",
      "event": "changeReady",
      "apply": "_applyReady",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "currentPage": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "name": "currentPage",
      "propertyType": "new",
      "event": "changeCurrentPage",
      "nullable": true,
      "allowNull": true,
      "check": "cv.ui.structure.IPage"
    },
    "domFinished": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 5
        }
      },
      "name": "domFinished",
      "propertyType": "new",
      "event": "changeDomFinished",
      "apply": "_applyDomFinished",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "commands": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 99,
          "column": 5
        }
      },
      "name": "commands",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "qx.ui.command.Group"
    },
    "highlightedWidget": {
      "location": {
        "start": {
          "line": 102,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 5
        }
      },
      "jsdoc": {},
      "name": "highlightedWidget",
      "propertyType": "new",
      "apply": "_applyHighlightedWidget",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "configSource": {
      "location": {
        "start": {
          "line": 108,
          "column": 4
        },
        "end": {
          "line": 112,
          "column": 5
        }
      },
      "name": "configSource",
      "propertyType": "new",
      "apply": "_applyConfigSource",
      "nullable": true,
      "allowNull": true,
      "check": "XMLDocument"
    },
    "configHash": {
      "location": {
        "start": {
          "line": 114,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "name": "configHash",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Number"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "defaults": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 19
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Structure where a design can set a default value that a widget or plugin\n can use.\n This is especially important for design relevant information like colors\n that can not be set though CSS.\n Usage: this.defaults.plugin.foo = {bar: 'baz'};</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "pluginsToLoadCount": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 136,
          "column": 26
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__partQueue": {
      "location": {
        "start": {
          "line": 138,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_domFinishedQueue": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 27
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "lazyPlugins": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 21
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "public"
    },
    "_applyConfigSource": {
      "location": {
        "start": {
          "line": 144,
          "column": 4
        },
        "end": {
          "line": 150,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "configSource"
      ]
    },
    "loadParts": {
      "location": {
        "start": {
          "line": 157,
          "column": 4
        },
        "end": {
          "line": 215,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Load parts (e.g. plugins, structure)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parts {String[]|String} parts to load",
            "paramName": "parts",
            "description": " parts to load",
            "type": [
              {
                "type": "String",
                "dimensions": 2
              },
              "String"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyReady": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 222,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "ready"
      ]
    },
    "_applyLoaded": {
      "location": {
        "start": {
          "line": 225,
          "column": 4
        },
        "end": {
          "line": 230,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "partsLoaded",
        "scriptsLoaded"
      ]
    },
    "_applyDomFinished": {
      "location": {
        "start": {
          "line": 233,
          "column": 4
        },
        "end": {
          "line": 245,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "domFinished"
      ]
    },
    "executeWhenDomFinished": {
      "location": {
        "start": {
          "line": 252,
          "column": 4
        },
        "end": {
          "line": 259,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a callback to a queue which is executed after DOM has been rendered</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function}"
          },
          {
            "name": "@param",
            "body": "context {Object}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "parse": {
      "location": {
        "start": {
          "line": 264,
          "column": 4
        },
        "end": {
          "line": 330,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Read basic settings and detect and load the structure for this config to do the rest.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setupUI": {
      "location": {
        "start": {
          "line": 335,
          "column": 4
        },
        "end": {
          "line": 345,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Main setup to get everything running and show the initial UI page.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startScreensaver": {
      "location": {
        "start": {
          "line": 350,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Start the screensaver if a screensave time is set</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyHighlightedWidget": {
      "location": {
        "start": {
          "line": 359,
          "column": 4
        },
        "end": {
          "line": 372,
          "column": 5
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "highlightedWidget"
      ]
    },
    "selectDesign": {
      "location": {
        "start": {
          "line": 374,
          "column": 4
        },
        "end": {
          "line": 459,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getPartsLoaded": {
      "type": "function",
      "name": "getPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for partsLoaded"
          }
        ]
      }
    },
    "isPartsLoaded": {
      "type": "function",
      "name": "isPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for partsLoaded"
          }
        ]
      }
    },
    "setPartsLoaded": {
      "type": "function",
      "name": "setPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>partsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for partsLoaded"
          }
        ]
      }
    },
    "resetPartsLoaded": {
      "type": "function",
      "name": "resetPartsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>partsLoaded</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #partsLoaded}."
          }
        ]
      }
    },
    "getScriptsLoaded": {
      "type": "function",
      "name": "getScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for scriptsLoaded"
          }
        ]
      }
    },
    "isScriptsLoaded": {
      "type": "function",
      "name": "isScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for scriptsLoaded"
          }
        ]
      }
    },
    "setScriptsLoaded": {
      "type": "function",
      "name": "setScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>scriptsLoaded</code>.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for scriptsLoaded"
          }
        ]
      }
    },
    "resetScriptsLoaded": {
      "type": "function",
      "name": "resetScriptsLoaded",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>scriptsLoaded</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #scriptsLoaded}."
          }
        ]
      }
    },
    "getReady": {
      "type": "function",
      "name": "getReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for ready"
          }
        ]
      }
    },
    "isReady": {
      "type": "function",
      "name": "isReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for ready"
          }
        ]
      }
    },
    "setReady": {
      "type": "function",
      "name": "setReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>ready</code>.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for ready"
          }
        ]
      }
    },
    "resetReady": {
      "type": "function",
      "name": "resetReady",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>ready</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #ready}."
          }
        ]
      }
    },
    "getCurrentPage": {
      "type": "function",
      "name": "getCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>currentPage</code>.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "cv.ui.structure.IPage",
            "desc": "Returns the value for currentPage"
          }
        ]
      }
    },
    "setCurrentPage": {
      "type": "function",
      "name": "setCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>currentPage</code>.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "cv.ui.structure.IPage",
            "paramName": "value",
            "desc": "Value for currentPage"
          }
        ]
      }
    },
    "resetCurrentPage": {
      "type": "function",
      "name": "resetCurrentPage",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>currentPage</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #currentPage}."
          }
        ]
      }
    },
    "getDomFinished": {
      "type": "function",
      "name": "getDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for domFinished"
          }
        ]
      }
    },
    "isDomFinished": {
      "type": "function",
      "name": "isDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for domFinished"
          }
        ]
      }
    },
    "setDomFinished": {
      "type": "function",
      "name": "setDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>domFinished</code>.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for domFinished"
          }
        ]
      }
    },
    "resetDomFinished": {
      "type": "function",
      "name": "resetDomFinished",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>domFinished</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #domFinished}."
          }
        ]
      }
    },
    "getCommands": {
      "type": "function",
      "name": "getCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>commands</code>.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.command.Group",
            "desc": "Returns the value for commands"
          }
        ]
      }
    },
    "setCommands": {
      "type": "function",
      "name": "setCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>commands</code>.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.command.Group",
            "paramName": "value",
            "desc": "Value for commands"
          }
        ]
      }
    },
    "resetCommands": {
      "type": "function",
      "name": "resetCommands",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>commands</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #commands}."
          }
        ]
      }
    },
    "getHighlightedWidget": {
      "type": "function",
      "name": "getHighlightedWidget",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>highlightedWidget</code>.\n\nFor further details take a look at the property definition: {@link #highlightedWidget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for highlightedWidget"
          }
        ]
      }
    },
    "setHighlightedWidget": {
      "type": "function",
      "name": "setHighlightedWidget",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>highlightedWidget</code>.\n\nFor further details take a look at the property definition: {@link #highlightedWidget}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for highlightedWidget"
          }
        ]
      }
    },
    "resetHighlightedWidget": {
      "type": "function",
      "name": "resetHighlightedWidget",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>highlightedWidget</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #highlightedWidget}."
          }
        ]
      }
    },
    "getConfigSource": {
      "type": "function",
      "name": "getConfigSource",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>configSource</code>.\n\nFor further details take a look at the property definition: {@link #configSource}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "XMLDocument",
            "desc": "Returns the value for configSource"
          }
        ]
      }
    },
    "setConfigSource": {
      "type": "function",
      "name": "setConfigSource",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>configSource</code>.\n\nFor further details take a look at the property definition: {@link #configSource}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "XMLDocument",
            "paramName": "value",
            "desc": "Value for configSource"
          }
        ]
      }
    },
    "resetConfigSource": {
      "type": "function",
      "name": "resetConfigSource",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>configSource</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #configSource}."
          }
        ]
      }
    },
    "getConfigHash": {
      "type": "function",
      "name": "getConfigHash",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>configHash</code>.\n\nFor further details take a look at the property definition: {@link #configHash}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for configHash"
          }
        ]
      }
    },
    "setConfigHash": {
      "type": "function",
      "name": "setConfigHash",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>configHash</code>.\n\nFor further details take a look at the property definition: {@link #configHash}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for configHash"
          }
        ]
      }
    },
    "resetConfigHash": {
      "type": "function",
      "name": "resetConfigHash",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>configHash</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #configHash}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 467,
        "column": 12
      },
      "end": {
        "line": 469,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}