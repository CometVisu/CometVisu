{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "construct",
    "_this",
    "lazyPlugins",
    "__partQueue",
    "data",
    "Array",
    "_domFinishedQueue",
    "addListener",
    "ev",
    "setPartsLoaded",
    "getData",
    "__clients",
    "defaults",
    "widget",
    "plugin",
    "group",
    "ui",
    "command",
    "Group",
    "setCommands",
    "app",
    "Init",
    "getApplication",
    "manager",
    "getCommandManager",
    "add",
    "setActive",
    "properties",
    "partsLoaded",
    "check",
    "init",
    "event",
    "scriptsLoaded",
    "ready",
    "currentPage",
    "nullable",
    "domFinished",
    "commands",
    "highlightedWidget",
    "configSource",
    "configHash",
    "members",
    "pluginsToLoadCount",
    "_applyConfigSource",
    "xml",
    "cv",
    "Config",
    "enableCache",
    "setConfigHash",
    "ConfigCache",
    "toHash",
    "resetConfigHash",
    "loadParts",
    "parts",
    "isArray",
    "loadLazyParts",
    "filter",
    "part",
    "indexOf",
    "p",
    "includes",
    "append",
    "waitingFor",
    "io",
    "PartLoader",
    "require",
    "states",
    "idx",
    "remove",
    "debug",
    "startsWith",
    "loadedStructure",
    "substring",
    "setStructureLoaded",
    "timer",
    "setTimeout",
    "getLength",
    "clearTimeout",
    "_applyReady",
    "setupUI",
    "_applyLoaded",
    "old",
    "isPartsLoaded",
    "isScriptsLoaded",
    "setReady",
    "_applyDomFinished",
    "document",
    "body",
    "style",
    "visibility",
    "message",
    "Bus",
    "dispatchByName",
    "callback",
    "shift",
    "BackendConnections",
    "initSystemBackend",
    "executeWhenDomFinished",
    "isDomFinished",
    "parse",
    "_this2",
    "_callee",
    "settings",
    "rootNode",
    "predefinedDesign",
    "design",
    "baseUri",
    "loader",
    "_callee$",
    "_context",
    "configSettings",
    "getConfigSource",
    "documentElement",
    "getAttribute",
    "t0",
    "tagName",
    "toLowerCase",
    "clientDesign",
    "selectDesign",
    "scriptsToLoad",
    "stylesToLoad",
    "getDesign",
    "uri",
    "media",
    "concat",
    "maxMobileScreenWidth",
    "util",
    "ScriptLoader",
    "getInstance",
    "addListenerOnce",
    "alternativeStyles",
    "addStyles",
    "addScripts",
    "generateManifest",
    "getStructure",
    "Application",
    "structureController",
    "parseBackendSettings",
    "testMode",
    "initBackendClients",
    "parseSettings",
    "preParse",
    "color",
    "getComputedStyle",
    "getPropertyValue",
    "baseUrl",
    "window",
    "location",
    "pathname",
    "endsWith",
    "split",
    "join",
    "origin",
    "startUrl",
    "search",
    "manifest",
    "assign",
    "defaultManifest",
    "start_url",
    "scope",
    "theme_color",
    "background_color",
    "_iterator",
    "_createForOfIteratorHelper",
    "icons",
    "_step",
    "s",
    "n",
    "icon",
    "src",
    "e",
    "f",
    "stringManifest",
    "JSON",
    "stringify",
    "blob",
    "Blob",
    "manifestURL",
    "URL",
    "createObjectURL",
    "querySelector",
    "setAttribute",
    "themeColorElement",
    "createElement",
    "appendChild",
    "createUI",
    "resetConfigSource",
    "startScreensaver",
    "screensave_time",
    "screensave",
    "Timer",
    "doScreenSave",
    "start",
    "Registration",
    "restart",
    "_applyHighlightedWidget",
    "oldElement",
    "classList",
    "element",
    "querySelectorAll",
    "elem",
    "display",
    "div",
    "dom",
    "Element",
    "id",
    "entries",
    "background",
    "width",
    "margin",
    "padding",
    "key_value",
    "innerHTML",
    "store",
    "Json",
    "ResourceManager",
    "toUri",
    "html",
    "getModel",
    "myDiv",
    "cursor",
    "borderBottom",
    "position",
    "tDiv",
    "height",
    "zIndex",
    "pos",
    "getBoundingClientRect",
    "left",
    "top",
    "href",
    "hash",
    "destruct",
    "_disposeObjects",
    "TemplateEngine"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/TemplateEngine.js"
  ],
  "sourcesContent": [
    "/* TemplateEngine.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.TemplateEngine', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  construct() {\n    // this.base(arguments);\n    this.lazyPlugins = ['plugin-openhab'];\n\n    this.__partQueue = new qx.data.Array();\n    this._domFinishedQueue = [];\n    this.__partQueue.addListener('changeLength', ev => {\n      this.setPartsLoaded(ev.getData() === 0);\n    });\n    this.__clients = {};\n\n    this.defaults = { widget: {}, plugin: {} };\n    const group = new qx.ui.command.Group();\n    this.setCommands(group);\n    const app = qx.core.Init.getApplication();\n    if (app) {\n      // application is not available in tests\n      const manager = app.getCommandManager();\n      manager.add(group);\n      manager.setActive(group);\n    }\n  },\n\n  properties: {\n    /**\n     * Shows the loading state of the parts\n     */\n    partsLoaded: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyLoaded',\n      event: 'changePartsLoaded'\n    },\n\n    /**\n     * Shows the loading state of the scripts\n     */\n    scriptsLoaded: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyLoaded'\n    },\n\n    /**\n     * Shows the initialization state of the TemplateEngine. It gets true when all\n     * external stuff (parts, scripts, etc.) has been loaded.\n     */\n    ready: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeReady',\n      apply: '_applyReady'\n    },\n\n    currentPage: {\n      check: 'cv.ui.structure.IPage',\n      nullable: true,\n      event: 'changeCurrentPage'\n    },\n\n    domFinished: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyDomFinished',\n      event: 'changeDomFinished'\n    },\n\n    commands: {\n      check: 'qx.ui.command.Group',\n      nullable: true\n    },\n\n    // highlight a widget\n    highlightedWidget: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyHighlightedWidget'\n    },\n\n    configSource: {\n      check: 'XMLDocument',\n      nullable: true,\n      apply: '_applyConfigSource'\n    },\n\n    configHash: {\n      check: 'Number',\n      nullable: true\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    /**\n     * Structure where a design can set a default value that a widget or plugin\n     * can use.\n     * This is especially important for design relevant information like colors\n     * that can not be set though CSS.\n     *\n     * Usage: this.defaults.plugin.foo = {bar: 'baz'};\n     */\n    defaults: null,\n\n    pluginsToLoadCount: 0,\n\n    __partQueue: null,\n    _domFinishedQueue: null,\n\n    // plugins that do not need to be loaded to proceed with the initial setup\n    lazyPlugins: null,\n\n    _applyConfigSource(xml) {\n      if (cv.Config.enableCache && xml) {\n        this.setConfigHash(cv.ConfigCache.toHash(xml));\n      } else {\n        this.resetConfigHash();\n      }\n    },\n\n    /**\n     * Load parts (e.g. plugins, structure)\n     *\n     * @param parts {String[]|String} parts to load\n     */\n    loadParts(parts) {\n      if (!Array.isArray(parts)) {\n        parts = [parts];\n      }\n      const loadLazyParts = this.lazyPlugins.filter(function (part) {\n        return parts.indexOf(part) >= 0;\n      });\n      if (loadLazyParts.length) {\n        parts = parts.filter(function (p) {\n          return !loadLazyParts.includes(p);\n        });\n      }\n      this.__partQueue.append(parts);\n      const waitingFor = new qx.data.Array(parts);\n      qx.io.PartLoader.require(\n        parts,\n        function (states) {\n          parts.forEach(function (part, idx) {\n            if (states[idx] === 'complete') {\n              this.__partQueue.remove(part);\n              this.debug('successfully loaded part ' + part);\n              if (part.startsWith('structure-')) {\n                if (!cv.Config.loadedStructure) {\n                  cv.Config.loadedStructure = part.substring(10);\n                }\n                qx.core.Init.getApplication().setStructureLoaded(true);\n              }\n              this.__partQueue.remove(part);\n              waitingFor.remove(part);\n            } else {\n              this.error('error loading part ' + part);\n            }\n          }, this);\n        },\n        this\n      );\n\n      // load the lazy plugins no one needs to wait for\n      qx.io.PartLoader.require(\n        loadLazyParts,\n        function (states) {\n          loadLazyParts.forEach(function (part, idx) {\n            if (states[idx] === 'complete') {\n              this.debug('successfully loaded lazy part ' + part);\n              waitingFor.remove(part);\n            } else {\n              this.error('error loading lazy part ' + part);\n            }\n          }, this);\n        },\n        this\n      );\n\n      return new Promise((resolve, reject) => {\n        const timer = setTimeout(reject, 2000);\n        if (waitingFor.getLength() === 0) {\n          resolve();\n          clearTimeout(timer);\n        } else {\n          waitingFor.addListener('changeLength', ev => {\n            if (ev.getData() === 0) {\n              resolve();\n              clearTimeout(timer);\n            }\n          });\n        }\n      });\n    },\n\n    // property apply\n    _applyReady(value) {\n      if (value === true) {\n        this.setupUI();\n      }\n    },\n\n    // property apply\n    _applyLoaded(value, old, name) {\n      this.debug(name + ' is ' + value + ' now');\n      if (this.isPartsLoaded() && this.isScriptsLoaded()) {\n        this.setReady(true);\n      }\n    },\n\n    // property apply\n    _applyDomFinished(value) {\n      if (value) {\n        document.body.style.visibility = '';\n        qx.event.message.Bus.dispatchByName('setup.dom.finished');\n        // flush the queue\n        this._domFinishedQueue.forEach(function (entry) {\n          const callback = entry.shift();\n          const context = entry.shift();\n          callback.apply(context, entry);\n        }, this);\n        this._domFinishedQueue = [];\n        cv.io.BackendConnections.initSystemBackend();\n      }\n    },\n\n    /**\n     * Adds a callback to a queue which is executed after DOM has been rendered\n     * @param callback {Function}\n     * @param context {Object}\n     */\n    executeWhenDomFinished(callback, context) {\n      if (!this.isDomFinished()) {\n        // queue callback\n        this._domFinishedQueue.push(Array.prototype.slice.call(arguments));\n      } else {\n        callback.apply(context, Array.prototype.slice.call(arguments, 2));\n      }\n    },\n\n    /**\n     * Read basic settings and detect and load the structure for this config to do the rest.\n     */\n    async parse() {\n      /*\n       * First, we try to get a design by url. Secondly, we try to get a predefined\n       */\n      // read predefined design in config\n      const settings = cv.Config.configSettings;\n      // all config files must have a root with some attributes to be able to detect at least the design\n      // if not provides via URL, because the design is needed to detect the structure that can load the config\n      const rootNode = this.getConfigSource().documentElement;\n\n      const xml = this.getConfigSource();\n\n      let predefinedDesign = rootNode.getAttribute('design');\n      if (!predefinedDesign) {\n        switch (rootNode.tagName.toLowerCase()) {\n          case 'config':\n            predefinedDesign = 'tile';\n            break;\n\n          case 'pages':\n            predefinedDesign = 'pure';\n            break;\n        }\n      }\n      // design by url\n      // design by config file\n      if (!cv.Config.clientDesign && !settings.clientDesign) {\n        if (predefinedDesign) {\n          settings.clientDesign = predefinedDesign;\n        } else {\n          // selection dialog\n          this.selectDesign();\n        }\n      }\n\n      settings.scriptsToLoad = [];\n      settings.stylesToLoad = [];\n      const design = cv.Config.getDesign();\n      if (design) {\n        let baseUri = 'designs/' + design;\n        settings.stylesToLoad.push(baseUri + '/basic.css');\n        settings.stylesToLoad.push({\n          uri: baseUri + '/mobile.css',\n          media: `screen and (max-width:${cv.Config.maxMobileScreenWidth}px)`\n        });\n\n        settings.stylesToLoad.push(baseUri + '/custom.css');\n        settings.scriptsToLoad.push('designs/' + design + '/design_setup.js');\n\n        const loader = cv.util.ScriptLoader.getInstance();\n        loader.addListenerOnce('designError', ev => {\n          if (ev.getData() === design) {\n            this.error(\n              'Failed to load \"' + design + '\" design! Falling back to simplified \"' + cv.Config.loadedStructure + '\"'\n            );\n\n            baseUri = 'designs/' + cv.Config.loadedStructure;\n            const alternativeStyles = [baseUri + '/basic.css'];\n            alternativeStyles.push({\n              uri: baseUri + '/mobile.css',\n              media: `screen and (max-width:${cv.Config.maxMobileScreenWidth}px)`\n            });\n\n            alternativeStyles.push(baseUri + '/custom.css');\n            cv.util.ScriptLoader.getInstance().addStyles(alternativeStyles);\n            cv.util.ScriptLoader.getInstance().addScripts(baseUri + '/design_setup.js');\n          }\n        });\n        loader.addListenerOnce('stylesLoaded', this.generateManifest, this);\n      }\n      // load structure-part\n      await this.loadParts([cv.Config.getStructure()]);\n      if (cv.Application.structureController.parseBackendSettings(xml) || cv.Config.testMode) {\n        cv.io.BackendConnections.initBackendClients();\n      }\n      cv.Application.structureController.parseSettings(xml);\n      await cv.Application.structureController.preParse(xml);\n    },\n\n    generateManifest() {\n      const color = getComputedStyle(document.body).getPropertyValue('background-color');\n      let baseUrl = window.location.pathname;\n      if (baseUrl.endsWith('/index.html')) {\n        const parts = baseUrl.split('/');\n        parts.pop();\n        baseUrl = parts.join('/') + '/';\n      }\n      baseUrl = window.location.origin + baseUrl;\n\n      const startUrl = window.location.origin + window.location.pathname + window.location.search;\n      const manifest = Object.assign(cv.Config.defaultManifest, {\n        start_url: startUrl,\n        scope: startUrl,\n        theme_color: color,\n        background_color: color\n      });\n      for (const icon of manifest.icons) {\n        icon.src = baseUrl + icon.src;\n      }\n      const stringManifest = JSON.stringify(manifest);\n      const blob = new Blob([stringManifest], { type: 'application/json' });\n      const manifestURL = URL.createObjectURL(blob);\n      document.querySelector('#app-manifest').setAttribute('href', manifestURL);\n      let themeColorElement = document.querySelector('#app-theme-color');\n      if (!themeColorElement) {\n        themeColorElement = document.createElement('meta');\n        themeColorElement.setAttribute('id', 'app-theme-color');\n        themeColorElement.setAttribute('name', 'theme-color');\n        document.querySelector('html > head').appendChild(themeColorElement);\n      }\n      document.querySelector('#app-theme-color').setAttribute('content', color);\n    },\n\n    /**\n     * Main setup to get everything running and show the initial UI page.\n     */\n    setupUI() {\n      // and now setup the UI\n      this.debug('setup');\n      cv.Application.structureController.createUI(this.getConfigSource());\n      this.resetConfigSource(); // not needed anymore - free the space\n      this.startScreensaver();\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.showResults(50);\n      }\n    },\n\n    /**\n     * Start the screensaver if a screensave time is set\n     */\n    startScreensaver() {\n      if (typeof cv.Config.configSettings.screensave_time === 'number') {\n        this.screensave = new qx.event.Timer(cv.Config.configSettings.screensave_time * 1000);\n\n        this.screensave.addListener(\n          'interval',\n          cv.Application.structureController.doScreenSave,\n          cv.Application.structureController\n        );\n\n        this.screensave.start();\n        qx.event.Registration.addListener(window, 'useraction', this.screensave.restart, this.screensave);\n      }\n    },\n\n    _applyHighlightedWidget(value, old) {\n      if (old) {\n        const oldElement = document.querySelector(old);\n        if (oldElement) {\n          oldElement.classList.remove('highlightedWidget');\n        }\n      }\n      if (value) {\n        const element = document.querySelector(value);\n        if (element) {\n          element.classList.add('highlightedWidget');\n        }\n      }\n    },\n\n    selectDesign() {\n      const body = document.querySelector('body');\n\n      document.querySelectorAll('body > *').forEach(function (elem) {\n        elem.style.display = 'none';\n      }, this);\n      body.style['background-color'] = 'black';\n\n      const div = qx.dom.Element.create('div', { id: 'designSelector' });\n      Object.entries({\n        background: '#808080',\n        width: '400px',\n        color: 'white',\n        margin: 'auto',\n        padding: '0.5em'\n      }).forEach(function (key_value) {\n        body.style[key_value[0]] = key_value[1];\n      });\n      div.innerHTML = 'Loading ...';\n\n      body.appendChild(div);\n\n      const store = new qx.data.store.Json(qx.util.ResourceManager.getInstance().toUri('designs/get_designs.php'));\n\n      store.addListener('loaded', function () {\n        let html = '<h1>Please select design</h1>';\n        html +=\n          '<p>The Location/URL will change after you have chosen your design. Please bookmark the new URL if you do not want to select the design every time.</p>';\n\n        div.innerHTML = html;\n\n        store.getModel().forEach(function (element) {\n          const myDiv = qx.dom.Element.create('div', {\n            cursor: 'pointer',\n            padding: '0.5em 1em',\n            borderBottom: '1px solid black',\n            margin: 'auto',\n            width: '262px',\n            position: 'relative'\n          });\n\n          myDiv.innerHTML = '<div style=\"font-weight: bold; margin: 1em 0 .5em;\">Design: ' + element + '</div>';\n          myDiv.innerHTML +=\n            '<iframe src=\"' +\n            qx.util.ResourceManager.getInstance().toUri('designs/design_preview.html') +\n            '?design=' +\n            element +\n            '\" width=\"160\" height=\"90\" border=\"0\" scrolling=\"auto\" frameborder=\"0\" style=\"z-index: 1;\"></iframe>';\n          myDiv.innerHTML +=\n            '<img width=\"60\" height=\"30\" src=\"' +\n            qx.util.ResourceManager.getInstance().toUri('demo/media/arrow.png') +\n            '\" alt=\"select\" border=\"0\" style=\"margin: 60px 10px 10px 30px;\"/>';\n\n          div.appendChild(myDiv);\n\n          const tDiv = qx.dom.Element.create('div', {\n            background: 'transparent',\n            position: 'absolute',\n            height: '90px',\n            width: '160px',\n            zIndex: 2\n          });\n\n          const pos = document.querySelector('iframe').getBoundingClientRect();\n          Object.entries({\n            left: pos.left + 'px',\n            top: pos.top + 'px'\n          }).forEach(function (key_value) {\n            tDiv.style[key_value[0]] = key_value[1];\n          });\n          myDiv.appendChild(tDiv);\n\n          qx.event.Registration.addListener(\n            myDiv,\n            'pointerover',\n            function () {\n              myDiv.style.background = '#bbbbbb';\n            },\n            this\n          );\n\n          qx.event.Registration.addListener(\n            myDiv,\n            'pointerout',\n            function () {\n              myDiv.style.background = 'transparent';\n            },\n            this\n          );\n\n          qx.event.Registration.addListener(myDiv, 'tap', function () {\n            let href = document.location.href;\n            if (document.location.hash) {\n              href = href.split('#')[0];\n            }\n            if (document.location.search === '') {\n              document.location.href = href + '?design=' + element;\n            } else {\n              document.location.href = href + '&design=' + element;\n            }\n          });\n        });\n      });\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._disposeObjects('__activeChangedTimer');\n  }\n});\n"
  ],
  "mappings": "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"
}