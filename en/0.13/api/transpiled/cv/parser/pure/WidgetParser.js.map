{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/WidgetParser.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "__handlers",
    "lookupM",
    "lookupS",
    "model",
    "cv",
    "data",
    "Model",
    "getInstance",
    "__templates",
    "getTemplates",
    "addTemplate",
    "name",
    "templateData",
    "addHandler",
    "tagName",
    "handler",
    "toLowerCase",
    "getHandler",
    "unknown",
    "renderTemplates",
    "rootPage",
    "querySelectorAll",
    "forEach",
    "elem",
    "templateName",
    "getAttribute",
    "variables",
    "Array",
    "prototype",
    "call",
    "children",
    "variable",
    "innerHTML",
    "Object",
    "hasOwnProperty",
    "renderedString",
    "bom",
    "Template",
    "render",
    "replace",
    "trim",
    "helperNode",
    "ownerDocument",
    "createElement",
    "substring",
    "length",
    "replacement",
    "firstElementChild",
    "next",
    "nextElementSibling",
    "parent",
    "parentNode",
    "replaceChild",
    "insertBefore",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "tag",
    "nodeName",
    "parser",
    "result",
    "log",
    "Logger",
    "debug",
    "parseBasicElement",
    "element",
    "setWidgetData",
    "pure",
    "WidgetParser",
    "getElementType",
    "parseElement",
    "mappings",
    "createDefaultWidget",
    "key",
    "map",
    "value",
    "undefined",
    "transform",
    "target",
    "parseStyling",
    "__getAttributeToPropertyMappings",
    "getAttributeToPropertyMappings",
    "getDefaultClasses",
    "widgetType",
    "layout",
    "parseLayout",
    "from",
    "filter",
    "m",
    "matches",
    "style",
    "keys",
    "extractLayout",
    "classes",
    "setWidgetLayout",
    "split",
    "className",
    "label",
    "parseLabel",
    "querySelector",
    "bindClickToWidget",
    "Config",
    "configSettings",
    "prop",
    "responsive",
    "find",
    "endsWith",
    "defaultValues",
    "ret_val",
    "__extractLayoutAttribute",
    "property",
    "x",
    "y",
    "width",
    "height",
    "extractLayout3d",
    "z",
    "floor",
    "floorFilter",
    "roomFilter",
    "labelClass",
    "Application",
    "structureController",
    "elementData",
    "getWidgetData",
    "rowspan",
    "colspan",
    "Element",
    "getAttributeNS",
    "colspanM",
    "colspanS",
    "parseFloat",
    "document",
    "dataset",
    "Math",
    "rowspanClass",
    "ui",
    "structure",
    "Manager",
    "parseFormat",
    "format",
    "parseAddress",
    "makeAddressListFn",
    "address",
    "makeAddressList",
    "id",
    "skipAdding",
    "src",
    "textContent",
    "addressInfo",
    "formatPos",
    "mode",
    "selector",
    "ignoreError",
    "qos",
    "retain",
    "error",
    "outerHTML",
    "backendName",
    "hasAttribute",
    "variantInfo",
    "addAddress",
    "parseRefresh",
    "doCacheControl",
    "refresh",
    "parseInt",
    "cachecontrol",
    "styling",
    "parseChildren",
    "getStoragePath",
    "childs",
    "child",
    "indexOf",
    "idx",
    "childData",
    "isArray",
    "i",
    "l",
    "push"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* WidgetParser.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n//noinspection JSUnusedGlobalSymbols\nqx.Class.define('cv.parser.pure.WidgetParser', {\n  type: 'static',\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    __handlers: {},\n    lookupM : [ 0, 2, 4, 6, 6, 6, 6, 12, 12, 12, 12, 12, 12 ],\n    lookupS : [ 0, 3, 6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 ],\n    model: cv.data.Model.getInstance(),\n    __templates: {},\n\n    getTemplates: function () {\n      return this.__templates;\n    },\n\n    addTemplate: function(name, templateData) {\n      this.__templates[name] = templateData;\n    },\n\n    addHandler: function (tagName, handler) {\n      this.__handlers[tagName.toLowerCase()] = handler;\n    },\n\n    getHandler: function (tagName) {\n      return this.__handlers[tagName.toLowerCase()] || this.__handlers.unknown;\n    },\n\n    /**\n     * Renders templates into the config file, if they are used\n     * @param rootPage\n     */\n    renderTemplates: function (rootPage) {\n      rootPage.querySelectorAll('template').forEach(function (elem) {\n        const templateName = elem.getAttribute('name');\n        const variables = {};\n        Array.prototype.forEach.call(elem.children, function (variable) {\n          variables[variable.getAttribute('name')] = variable.innerHTML;\n        });\n\n        if (Object.prototype.hasOwnProperty.call(this.__templates, templateName)) {\n          const renderedString = qx.bom.Template.render(this.__templates[templateName], variables).replace('\\n', '').trim();\n          const helperNode = elem.ownerDocument.createElement('template');\n          helperNode.innerHTML = renderedString.substring(6, renderedString.length - 7).trim();\n          // replace existing element with the rendered templates child\n          const replacement = helperNode.firstElementChild;\n          const next = elem.nextElementSibling;\n          const parent = elem.parentNode;\n          parent.replaceChild(replacement, elem);\n          while (helperNode.children.length > 0) {\n            // append the rest\n            parent.insertBefore(helperNode.children[0], next);\n          }\n        }\n      }, this);\n    },\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} widget data\n     */\n    parse: function (xml, path, flavour, pageType) {\n      let tag = xml.nodeName.toLowerCase();\n      if (tag === 'custom') {\n        // use the child of the custom element\n        xml = xml.children[0];\n        tag = xml.nodeName.toLowerCase();\n      }\n      const parser = this.getHandler(tag);\n      let result = null;\n      if (parser) {\n        result = parser.parse(xml, path, flavour, pageType);\n      } else {\n        qx.log.Logger.debug(this, 'no parse handler registered for type: '+ tag.toLowerCase());\n      }\n      return result;\n    },\n\n    parseBasicElement: function (element, path, flavour, pageType) {\n      return this.model.setWidgetData(path, {\n        'path': path,\n        '$$type': cv.parser.pure.WidgetParser.getElementType(element),\n        'pageType': pageType\n      });\n    },\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     * @param handler {Class} Handler class that parses this element\n     * @param element {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @param mappings\n     * @return {Map} HTML code\n     */\n    parseElement: function (handler, element, path, flavour, pageType, mappings) {\n      // and fill in widget specific data\n      const data = this.createDefaultWidget(handler, this.getElementType(element), element, path, flavour, pageType);\n      if (mappings) {\n        for (let key in mappings) {\n          if (Object.prototype.hasOwnProperty.call(mappings, key)) {\n            const map = mappings[key];\n            let value = element.getAttribute(key);\n            if (map['default'] !== undefined && (value === undefined || value === null)) {\n              value = map['default'];\n            }\n            if (map.transform) {\n              value = map.transform(value);\n            }\n            data[map.target || key] = value;\n          }\n        }\n      }\n      this.parseStyling(element, path);\n      return data;\n    },\n\n    /**\n     * Get the mappings needed for parsing from the handler\n     *\n     * @param handler {Class} parser handler\n     * @return {Map} parser configuration: describes how Attributes are mapped to properties\n     */\n    __getAttributeToPropertyMappings: function(handler) {\n      return handler && handler.getAttributeToPropertyMappings ? handler.getAttributeToPropertyMappings() : {};\n    },\n\n    getElementType: function(element) {\n      let type = element.nodeName.toLowerCase();\n      if (type === 'img') {\n        // workaround for unittests (<image> gets replaced by <img>\n        type = 'image';\n      }\n      return type;\n    },\n\n    getDefaultClasses: function(type) {\n      return 'widget clearfix ' + type.toLowerCase();\n    },\n\n    /**\n     * Create a default widget to be filled by the creator afterwards.\n     * Note: the receiver of the returned string must add an </div> closing element!\n     *\n     * @param handler {cv.parser.pure.widgets} the parser that can parse this element\n     * @param widgetType {String} of the widget type\n     * @param element   {Object} the XML element\n     * @param path       {String} of the path ID\n     * @param flavour   {String} Flavour\n     * @param pageType  {String} one of text, 2d and 3d\n     * @return {Map} parsed widget data\n     */\n    createDefaultWidget: function(handler, widgetType, element, path, flavour, pageType) {\n      if (handler.createDefaultWidget) {\n        return handler.createDefaultWidget(widgetType, element, path, flavour, pageType);\n      }\n\n      const layout = this.parseLayout(Array.from(element.children).filter(function (m) {\n        return m.matches('layout');\n      })[0]);\n      const style = Object.keys(layout).length === 0 ? '' : 'style=\"' + this.extractLayout(layout, pageType) + '\"';\n      let classes = handler.getDefaultClasses ? handler.getDefaultClasses(widgetType) : this.getDefaultClasses(widgetType);\n      // the group widgets align attribute is just targeting the group header and is handled by the widget itself, so we skip it here\n      if (element.getAttribute('align') && widgetType !== 'group') {\n        classes+=' '+element.getAttribute('align');\n      }\n      classes += ' ' + this.setWidgetLayout(element, path);\n      if (element.getAttribute('flavour')) {\n        flavour = element.getAttribute('flavour');\n      }// sub design choice\n      if (flavour) {\n        classes += ' flavour_' + flavour;\n      }\n      if (element.getAttribute('class')) {\n        element.getAttribute('class').split(' ').forEach(className => {\n          classes += ' custom_' + className;  \n        });\n      }\n      const label = (widgetType === 'text') ? this.parseLabel(element.querySelector('label'), flavour, '') : this.parseLabel(element.querySelector('label'), flavour);\n\n      let bindClickToWidget = cv.Config.configSettings.bindClickToWidget;\n      if (element.getAttribute('bind_click_to_widget')) {\n        bindClickToWidget = element.getAttribute('bind_click_to_widget') === 'true';\n      }\n\n      const data = {\n        'path': path,\n        '$$type': widgetType.toLowerCase(),\n        'pageType': pageType\n      };\n      data.bindClickToWidget = bindClickToWidget;\n      ['mapping', 'align', 'align'].forEach(function(prop) {\n        data[prop] = element.getAttribute(prop) || null;\n      }, this);\n\n      data.layout = layout || null;\n      data.label = label || '';\n      data.classes = classes || '';\n      data.style = style || '';\n      data.responsive = !!Object.keys(layout).find(function (prop) {\n        return prop.endsWith('-m') || prop.endsWith('-s');\n      });\n\n      return this.model.setWidgetData(path, data);\n    },\n\n    /**\n     * Parse config file layout element and convert it to an object\n     *\n     * @param layout {Element} XML config element &lt;layout&gt;\n     * @param defaultValues {Map} default layout values\n     * @return {Map}\n     */\n    parseLayout: function(layout, defaultValues) {\n      const ret_val = {};\n\n      if (!layout) {\n        return ret_val;\n      }\n\n      if (undefined === defaultValues) {\n        defaultValues = {};\n      }\n      ['x', 'y', 'width', 'height', 'scale', 'rowspan', 'colspan'].forEach(function (prop) {\n        this.__extractLayoutAttribute(ret_val, prop, layout, defaultValues);\n        this.__extractLayoutAttribute(ret_val, prop + '-m', layout, defaultValues);\n        this.__extractLayoutAttribute(ret_val, prop + '-s', layout, defaultValues);\n      }, this);\n      return ret_val;\n    },\n\n    __extractLayoutAttribute: function (ret_val, property, layout, defaultValues) {\n      if (layout.getAttribute(property)) {\n        ret_val[property] = layout.getAttribute(property);\n      } else if (defaultValues[property]) {\n        ret_val[property] = defaultValues[property];\n      }\n    },\n\n    extractLayout: function(layout, pageType) {\n      let ret_val = (pageType === '2d') ? 'position:absolute;' : '';\n      if (layout.x) {\n        ret_val += 'left:' + layout.x + ';';\n      }\n      if (layout.y) {\n        ret_val += 'top:' + layout.y + ';';\n      }\n      if (layout.width) {\n        ret_val += 'width:' + layout.width + ';';\n      }\n      if (layout.height) {\n        ret_val += 'height:' + layout.height + ';';\n      }\n\n      return ret_val;\n    },\n\n    extractLayout3d: function(layout) {\n      const ret_val = {};\n      if (layout.getAttribute('x')) {\n        ret_val.x = layout.getAttribute('x');\n      }\n      if (layout.getAttribute('y')) {\n        ret_val.y = layout.getAttribute('y');\n      }\n      if (layout.getAttribute('z')) {\n        ret_val.z = layout.getAttribute('z');\n      }\n      if (layout.getAttribute('floor')) {\n        ret_val.floor = layout.getAttribute('floor');\n      }\n      if (layout.getAttribute('floorFilter')) {\n        ret_val.floorFilter = layout.getAttribute('floorFilter');\n      }\n      if (layout.getAttribute('roomFilter')) {\n        ret_val.roomFilter = layout.getAttribute('roomFilter');\n      }\n      return ret_val;\n    },\n\n    parseLabel: function(label, flavour, labelClass, style) {\n      return cv.Application.structureController.parseLabel(label, flavour, labelClass, style);\n    },\n\n    /**\n     * this function implements all widget layouts that are identical (JNK)\n     * implemented: rowspan, colspan\n     *\n     * @param element {Element} XML-Element from the config file for this widget\n     * @param path {String}\n     * @return {String} rowspan class or empty string\n     */\n    setWidgetLayout: function(element, path) {\n      const elementData = this.model.getWidgetData(path);\n      const layout = Array.from(element.children).filter(function (m) {\n        return m.matches('layout');\n      })[0];\n      let ret_val = '';\n      let rowspan = null;\n\n      if (layout) {\n        elementData.colspan = qx.xml.Element.getAttributeNS(layout, '', 'colspan');\n        elementData.colspanM = qx.xml.Element.getAttributeNS(layout, '', 'colspan-m');\n        elementData.colspanS = qx.xml.Element.getAttributeNS(layout, '', 'colspan-s');\n        rowspan = qx.xml.Element.getAttributeNS(layout, '', 'rowspan');\n      }\n      elementData.colspan = parseFloat(elementData.colspan || document.querySelector('head').dataset['colspanDefault'] || 6);\n      elementData.colspanM = parseFloat(elementData.colspanM || cv.parser.pure.WidgetParser.lookupM[Math.floor(elementData.colspan)] || elementData.colspan);\n      elementData.colspanS = parseFloat(elementData.colspanS || cv.parser.pure.WidgetParser.lookupS[Math.floor(elementData.colspan)] || elementData.colspan);\n\n      if (rowspan) {\n        elementData.rowspanClass = cv.ui.structure.pure.layout.Manager.rowspanClass(parseFloat(rowspan || 1));\n        ret_val = 'innerrowspan';\n      }\n      return ret_val;\n    },\n\n    /**\n     * Parse the format setting\n     * @param xml {Element} XML-Element from config\n     * @param path {String} path to the widget\n     */\n    parseFormat: function (xml, path) {\n      const data = this.model.getWidgetData(path);\n      const value = xml.getAttribute('format');\n      if (value) {\n        data.format = value;\n      }\n    },\n\n    /**\n     * Parses the address element\n     * @param xml {Element} address XML-Element from config\n     * @param path {String} path to the widget\n     * @param makeAddressListFn {Function?} callback for parsing address variants\n     */\n    parseAddress: function (xml, path, makeAddressListFn) {\n      if (xml.nodeName.toLowerCase() !== 'page') {\n        const data = this.model.getWidgetData(path);\n        data.address = cv.parser.pure.WidgetParser.makeAddressList(xml, path, makeAddressListFn);\n      }\n    },\n\n    /**\n     * this function extracts all addresses with attributes (JNK)\n     *                       elements. The first is a boolean that determins if\n     *                       the visu should listen for that address. The second\n     *                       is added as it is to the returned object.\n     *\n     * @param element {Element} address XML-Element from the config file\n     * @param id {String} id / path to the widget\n     * @param makeAddressListFn {Function?} callback for parsing address variants\n     * @param skipAdding {Boolean?} do not add address to model if true\n     * @return {Object} address\n     */\n    makeAddressList: function (element, id, makeAddressListFn, skipAdding) {\n      let address = {};\n      element.querySelectorAll('address').forEach(function (elem) {\n        let src = elem.textContent;\n        let transform = elem.getAttribute('transform');\n        let addressInfo = {};\n        let formatPos = +(elem.getAttribute('format-pos') || 1) | 0; // force integer\n        let mode = 1 | 2; // Bit 0 = read, Bit 1 = write  => 1|2 = 3 = readwrite\n\n        addressInfo.selector = elem.getAttribute('selector');\n        addressInfo.ignoreError = elem.getAttribute('ignore-error') === 'true';\n        addressInfo.qos = (elem.getAttribute('qos') || 0) | 0; // force integer\n        addressInfo.retain = elem.getAttribute('retain') === 'true';\n\n        if ((!src) || (!transform)) { // fix broken address-entries in config\n          qx.log.Logger.error(this, 'Either address or transform is missing in address element %1', element.outerHTML);\n          return;\n        }\n        switch (elem.getAttribute('mode')) {\n          case 'disable':\n            mode = 0;\n            break;\n          case 'read':\n            mode = 1;\n            break;\n          case 'write':\n            mode = 2;\n            break;\n          case 'readwrite':\n            mode = 1 | 2;\n            break;\n        }\n        let backendName;\n        if (elem.hasAttribute('backend')) {\n          backendName = elem.getAttribute('backend');\n        }\n        let variantInfo = makeAddressListFn ? makeAddressListFn(src, transform, mode, elem.getAttribute('variant')) : [true, undefined];\n        if (!skipAdding && (mode & 1) && variantInfo[0]) { // add only addresses when reading from them\n          this.model.addAddress(src, id, backendName);\n        }\n        if (address[src]) {\n          // we already have an entry for this address, merge the modes if the other attribute values are equal\n          if (address[src].transform === transform && address[src].variantInfo === variantInfo[1] && address[src].formatPos === formatPos) {\n            mode |= address[src].mode;\n          } else {\n            qx.log.Logger.error(this, 'multiple address entries with different configuration:', address[src], [transform, mode, variantInfo[1], formatPos], 'they are only allowed to differ in mode');\n          }\n        }\n        addressInfo.transform = transform;\n        addressInfo.mode = mode;\n        addressInfo.variantInfo = variantInfo[1];\n        addressInfo.formatPos = formatPos;\n        address[src] = addressInfo;\n      }, this);\n      return address;\n    },\n\n    parseRefresh: function (xml, path, doCacheControl) {\n      const data = this.model.getWidgetData(path);\n      data.refresh = xml.getAttribute('refresh') ? parseInt(xml.getAttribute('refresh')) * 1000 : 0;\n      if (doCacheControl) {\n        data.cachecontrol = (function(x) {\n          switch (x) {\n            case 'full':\n            case 'force':\n            case 'weak':\n            case 'none':\n              return x;\n              \n            case 'false':\n              return 'none';\n              \n            case 'true':\n            default:\n              return 'full';\n          }\n        })(xml.getAttribute('cachecontrol'));\n      }\n    },\n\n    parseStyling: function (xml, path) {\n      const data = this.model.getWidgetData(path);\n      data.styling = xml.getAttribute('styling');\n    },\n\n    // this might have been called from the cv.parser.pure.WidgetParser with the including class as context\n    parseChildren: function (xml, path, flavour, pageType) {\n      const data = this.model.getWidgetData(this.getStoragePath(xml, path));\n\n      if (!data.children) {\n        data.children = [];\n      }\n      const childs = Array.from(xml.children).filter(function (child) {\n        return ['layout', 'label', 'address'].indexOf(child.nodeName.toLowerCase()) === -1;\n      }, this);\n      childs.forEach(function (child, idx) {\n        const childData = cv.parser.pure.WidgetParser.parse(child, path + '_' + idx, flavour, pageType);\n        if (childData) {\n          if (Array.isArray(childData)) {\n            let i = 0;\n            const l = childData.length;\n            for (; i < l; i++) {\n              data.children.push(childData[i].path);\n            }\n          } else if (childData.path) {\n            data.children.push(childData.path);\n          }\n        }\n      }, this);\n      return data;\n    },\n\n    /**\n     * Returns the path where the widget data is stored, usually this is the same path, but there are\n     * exceptions for pages which are handled here\n     *\n     * @param xml {Element} widgets XML config element\n     * @param path {String} internal widget path e.g. id_0_2\n     */\n    getStoragePath: function (xml, path) {\n      if (xml.length === 1) {\n        xml = xml[0];\n      }\n      switch (xml.nodeName.toLowerCase()) {\n        case 'page':\n          return path + '_';\n        default:\n          return path;\n      }\n    }\n  }\n});\n"
  ]
}