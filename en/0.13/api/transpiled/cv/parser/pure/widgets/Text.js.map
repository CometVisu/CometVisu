{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "defer",
    "addHandler",
    "widgets",
    "Text"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/Text.js"
  ],
  "sourcesContent": [
    "/* Text.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.parser.pure.widgets.Text', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      return cv.parser.pure.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('text', statics);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,IAAI,EAAE,QAAQ;IAEd;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAAK,WAAAA,MAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;QAClC,OAAOC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACC,YAAY,CAAC,IAAI,EAAER,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MACrF;IACF,CAAC;IAEDM,KAAK,WAAAA,MAACX,OAAO,EAAE;MACb;MACAM,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACG,UAAU,CAAC,MAAM,EAAEZ,OAAO,CAAC;IACzD;EACF,CAAC,CAAC;EAjDFM,EAAE,CAACC,MAAM,CAACC,IAAI,CAACK,OAAO,CAACC,IAAI,CAAClB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}