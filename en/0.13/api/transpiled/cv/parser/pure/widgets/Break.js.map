{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "defer",
    "addHandler",
    "widgets",
    "Break"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/Break.js"
  ],
  "sourcesContent": [
    "/* Break.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Parse &lt;break;gt; config elements\n */\nqx.Class.define('cv.parser.pure.widgets.Break', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      return cv.parser.pure.WidgetParser.parseElement(this, xml, path, flavour, pageType);\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('break', statics);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAAgD;IAC9CC,IAAI,EAAE,QADwC;;IAG9C;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAVO,iBAUDC,GAVC,EAUIC,IAVJ,EAUUC,OAVV,EAUmBC,QAVnB,EAU6B;QAClC,OAAOC,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BC,YAA5B,CAAyC,IAAzC,EAA+CR,GAA/C,EAAoDC,IAApD,EAA0DC,OAA1D,EAAmEC,QAAnE,CAAP;MACD;IAZM,CARqC;IAuB9CM,KAvB8C,iBAuBxCX,OAvBwC,EAuB/B;MACb;MACAM,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BG,UAA5B,CAAuC,OAAvC,EAAgDZ,OAAhD;IACD;EA1B6C,CAAhD;EAtBAM,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeK,OAAf,CAAuBC,KAAvB,CAA6BlB,aAA7B,GAA6CA,aAA7C"
}