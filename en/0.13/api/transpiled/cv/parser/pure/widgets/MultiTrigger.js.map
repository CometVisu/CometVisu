{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "buttonRegex",
    "buttonConfig",
    "i",
    "attributes",
    "length",
    "attrib",
    "match",
    "exec",
    "name",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "value",
    "buttons",
    "querySelectorAll",
    "textContent",
    "hasAttribute",
    "label",
    "getAttribute",
    "buttonConfiguration",
    "showstatus",
    "transform",
    "elementsPerLine",
    "parseInt",
    "src",
    "mode",
    "variant",
    "defer",
    "addHandler",
    "widgets",
    "MultiTrigger"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/MultiTrigger.js"
  ],
  "sourcesContent": [
    "/* MultiTrigger.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.parser.pure.widgets.MultiTrigger', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n\n      const buttonRegex = /^button([\\d]+)(label|value)$/;\n      const buttonConfig = {};\n      for (var i = 0; i < xml.attributes.length; i++) {\n        const attrib = xml.attributes[i];\n        const match = buttonRegex.exec(attrib.name);\n        if (match) {\n          if (!Object.prototype.hasOwnProperty.call(buttonConfig, match[1])) {\n            buttonConfig[match[1]] = {};\n          }\n          buttonConfig[match[1]][match[2]] = attrib.value;\n        }\n      }\n\n      // parse buttons\n      const buttons = xml.querySelectorAll('buttons > button');\n      for (i = 0; i < buttons.length; i++) {\n        buttonConfig[i + 1] = {\n          value: buttons[i].textContent\n        };\n\n        if (buttons[i].hasAttribute('label')) {\n          buttonConfig[i + 1].label = buttons[i].getAttribute('label');\n        }\n      }\n      data.buttonConfiguration = buttonConfig;\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        showstatus: {\n          transform(value) {\n            return value === 'true';\n          }\n        },\n\n        elementsPerLine: {\n          transform: parseInt,\n          default: 2\n        }\n      };\n    },\n\n    makeAddressListFn(src, transform, mode, variant) {\n      return [true, variant];\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('multitrigger', statics);\n  }\n});\n"
  ],
  "mappings": "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"
}