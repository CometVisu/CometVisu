{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "buttonRegex",
    "buttonConfig",
    "i",
    "attributes",
    "length",
    "attrib",
    "match",
    "exec",
    "name",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "value",
    "buttons",
    "querySelectorAll",
    "textContent",
    "hasAttribute",
    "label",
    "getAttribute",
    "buttonConfiguration",
    "showstatus",
    "transform",
    "elementsPerLine",
    "parseInt",
    "src",
    "mode",
    "variant",
    "defer",
    "addHandler",
    "widgets",
    "MultiTrigger"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/MultiTrigger.js"
  ],
  "sourcesContent": [
    "/* MultiTrigger.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.parser.pure.widgets.MultiTrigger', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n\n      const buttonRegex = /^button([\\d]+)(label|value)$/;\n      const buttonConfig = {};\n      for (var i = 0; i < xml.attributes.length; i++) {\n        const attrib = xml.attributes[i];\n        const match = buttonRegex.exec(attrib.name);\n        if (match) {\n          if (!Object.prototype.hasOwnProperty.call(buttonConfig, match[1])) {\n            buttonConfig[match[1]] = {};\n          }\n          buttonConfig[match[1]][match[2]] = attrib.value;\n        }\n      }\n\n      // parse buttons\n      const buttons = xml.querySelectorAll('buttons > button');\n      for (i = 0; i < buttons.length; i++) {\n        buttonConfig[i + 1] = {\n          value: buttons[i].textContent\n        };\n\n        if (buttons[i].hasAttribute('label')) {\n          buttonConfig[i + 1].label = buttons[i].getAttribute('label');\n        }\n      }\n      data.buttonConfiguration = buttonConfig;\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        showstatus: {\n          transform(value) {\n            return value === 'true';\n          }\n        },\n\n        elementsPerLine: {\n          transform: parseInt,\n          default: 2\n        }\n      };\n    },\n\n    makeAddressListFn(src, transform, mode, variant) {\n      return [true, variant];\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('multitrigger', statics);\n  }\n});\n"
  ],
  "mappings": "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"
}