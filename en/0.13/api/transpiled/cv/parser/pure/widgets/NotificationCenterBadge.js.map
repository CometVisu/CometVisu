{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "target",
    "transform",
    "value",
    "defer",
    "addHandler",
    "widgets",
    "NotificationCenterBadge"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/NotificationCenterBadge.js"
  ],
  "sourcesContent": [
    "/* NotificationCenterBadge.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows the current number of messages in {@link cv.ui.NotificationCenter} and opens it on click.\n *\n * @author Tobias Br√§utigam\n * @since 0.11.0\n */\nqx.Class.define('cv.parser.pure.widgets.NotificationCenterBadge', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      return cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        'hide-when-empty': {\n          target: 'hideWhenEmpty',\n          transform(value) {\n            return value === 'true';\n          }\n        }\n      };\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('notificationcenterbadge', statics);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gDAAhB,EAAkE;IAChEC,IAAI,EAAE,QAD0D;;IAGhE;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAVO,iBAUDC,GAVC,EAUIC,IAVJ,EAUUC,OAVV,EAUmBC,QAVnB,EAU6B;QAClC,OAAOC,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BC,YAA5B,CACL,IADK,EAELR,GAFK,EAGLC,IAHK,EAILC,OAJK,EAKLC,QALK,EAML,KAAKM,8BAAL,EANK,CAAP;MAQD,CAnBM;MAqBPA,8BArBO,4CAqB0B;QAC/B,OAAO;UACL,mBAAmB;YACjBC,MAAM,EAAE,eADS;YAEjBC,SAFiB,qBAEPC,KAFO,EAEA;cACf,OAAOA,KAAK,KAAK,MAAjB;YACD;UAJgB;QADd,CAAP;MAQD;IA9BM,CARuD;IAyChEC,KAzCgE,iBAyC1Df,OAzC0D,EAyCjD;MACb;MACAM,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BO,UAA5B,CAAuC,yBAAvC,EAAkEhB,OAAlE;IACD;EA5C+D,CAAlE;EAzBAM,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeS,OAAf,CAAuBC,uBAAvB,CAA+CtB,aAA/C,GAA+DA,aAA/D"
}