{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/PushButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "target",
    "src",
    "transform",
    "mode",
    "variant",
    "defer",
    "addHandler",
    "widgets",
    "PushButton"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;AACnDC,IAAAA,IAAI,EAAE,QAD6C;;AAGnD;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,KAAK,EAAE,eAAUC,GAAV,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwC;AAC7C,YAAMC,IAAI,GAAGC,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BC,YAA5B,CAAyC,IAAzC,EAA+CT,GAA/C,EAAoDC,IAApD,EAA0DC,OAA1D,EAAmEC,QAAnE,EAA6E,KAAKO,8BAAL,EAA7E,CAAb;AACAL,QAAAA,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BG,WAA5B,CAAwCX,GAAxC,EAA6CC,IAA7C;AACAI,QAAAA,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BI,YAA5B,CAAyCZ,GAAzC,EAA8CC,IAA9C,EAAoD,KAAKY,iBAAzD;AACA,eAAOT,IAAP;AACD,OAfM;AAiBPM,MAAAA,8BAA8B,EAAE,0CAAY;AAC1C,eAAO;AACL,uBAAa;AAACI,YAAAA,MAAM,EAAE,WAAT;AAAsB,uBAAW;AAAjC,WADR;AAEL,qBAAW;AAAC,uBAAW;AAAZ;AAFN,SAAP;AAID,OAtBM;AAwBPD,MAAAA,iBAAiB,EAAE,2BAAUE,GAAV,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AAC1D,eAAO,CAAC,IAAD,EAAOA,OAAP,CAAP;AACD;AA1BM,KAR0C;AAqCnDC,IAAAA,KAAK,EAAE,eAAUrB,OAAV,EAAmB;AACxB;AACAO,MAAAA,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAeC,YAAf,CAA4BY,UAA5B,CAAuC,YAAvC,EAAqDtB,OAArD;AACD;AAxCkD,GAArD;AAvBAO,EAAAA,EAAE,CAACC,MAAH,CAAUC,IAAV,CAAec,OAAf,CAAuBC,UAAvB,CAAkC5B,aAAlC,GAAkDA,aAAlD",
  "sourcesContent": [
    "/* PushButton.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n *\n */\nqx.Class.define('cv.parser.pure.widgets.PushButton', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function () {\n      return {\n        'downValue': {target: 'downValue', 'default': '1'},\n        'upValue': {'default': '0'}\n      };\n    },\n\n    makeAddressListFn: function (src, transform, mode, variant) {\n      return [true, variant];\n    }\n  },\n\n  defer: function (statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('pushbutton', statics);\n  }\n});\n"
  ]
}