{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "cv",
    "parser",
    "pure",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "parseAttributes",
    "baseColors",
    "r",
    "x",
    "y",
    "Y",
    "g",
    "b",
    "w",
    "r_x",
    "getAttribute",
    "r_y",
    "r_wavelength",
    "r_strength",
    "r_curve",
    "r_scale",
    "g_x",
    "g_y",
    "g_wavelength",
    "g_strength",
    "g_curve",
    "g_scale",
    "b_x",
    "b_y",
    "b_wavelength",
    "b_strength",
    "b_curve",
    "b_scale",
    "w_x",
    "w_y",
    "w_strength",
    "w_curve",
    "w_scale",
    "xy",
    "util",
    "Color",
    "wavelength2xy",
    "parseFloat",
    "scale",
    "curve",
    "split",
    "map",
    "src",
    "transform",
    "mode",
    "variant",
    "Set",
    "has",
    "controls",
    "send_on_finish",
    "target",
    "value",
    "defer",
    "addHandler",
    "widgets",
    "ColorChooser"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/parser/pure/widgets/ColorChooser.js"
  ],
  "sourcesContent": [
    "/* ColorChooser.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Widget to be able to select a color.\n */\nqx.Class.define('cv.parser.pure.widgets.ColorChooser', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     */\n    parse(xml, path, flavour, pageType) {\n      let data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseFormat(xml, path);\n      cv.parser.pure.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n\n      this.parseAttributes(xml, data);\n\n      return data;\n    },\n\n    parseAttributes(xml, data) {\n      data.baseColors = {\n        // default to sRGB color space with D65 white point\n        r: { x: 0.64, y: 0.33, Y: 0.2126 },\n        g: { x: 0.3, y: 0.6, Y: 0.7152 },\n        b: { x: 0.15, y: 0.06, Y: 0.0722 },\n        w: { x: 0.3127, y: 0.329, Y: 1 }\n      };\n\n      let r_x = xml.getAttribute('r_x');\n      let r_y = xml.getAttribute('r_y');\n      let r_wavelength = xml.getAttribute('r_wavelength');\n      let r_strength = xml.getAttribute('r_strength');\n      let r_curve = xml.getAttribute('r_curve');\n      let r_scale = xml.getAttribute('r_scale');\n      let g_x = xml.getAttribute('g_x');\n      let g_y = xml.getAttribute('g_y');\n      let g_wavelength = xml.getAttribute('g_wavelength');\n      let g_strength = xml.getAttribute('g_strength');\n      let g_curve = xml.getAttribute('g_curve');\n      let g_scale = xml.getAttribute('g_scale');\n      let b_x = xml.getAttribute('b_x');\n      let b_y = xml.getAttribute('b_y');\n      let b_wavelength = xml.getAttribute('b_wavelength');\n      let b_strength = xml.getAttribute('b_strength');\n      let b_curve = xml.getAttribute('b_curve');\n      let b_scale = xml.getAttribute('b_scale');\n      let w_x = xml.getAttribute('w_x');\n      let w_y = xml.getAttribute('w_y');\n      let w_strength = xml.getAttribute('w_strength');\n      let w_curve = xml.getAttribute('w_curve');\n      let w_scale = xml.getAttribute('w_scale');\n\n      if (r_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(r_wavelength));\n        data.baseColors.r.x = xy.x;\n        data.baseColors.r.y = xy.y;\n      }\n      if (r_x) {\n        data.baseColors.r.x = parseFloat(r_x);\n      }\n      if (r_y) {\n        data.baseColors.r.y = parseFloat(r_y);\n      }\n      if (r_strength) {\n        data.baseColors.r.Y = parseFloat(r_strength);\n      }\n      data.baseColors.r.scale = r_scale ? parseFloat(r_scale) : 100;\n      switch (r_curve) {\n        case 'exponential':\n          data.baseColors.r.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.r.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.r.curve = [1];\n          break;\n\n        default:\n          data.baseColors.r.curve = r_curve.split(';').map(x => parseFloat(x));\n      }\n\n      if (g_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(g_wavelength));\n        data.baseColors.g.x = xy.x;\n        data.baseColors.g.y = xy.y;\n      }\n      if (g_x) {\n        data.baseColors.g.x = parseFloat(g_x);\n      }\n      if (g_y) {\n        data.baseColors.g.y = parseFloat(g_y);\n      }\n      if (g_strength) {\n        data.baseColors.g.Y = parseFloat(g_strength);\n      }\n      data.baseColors.g.scale = g_scale ? parseFloat(g_scale) : 100;\n      switch (g_curve) {\n        case 'exponential':\n          data.baseColors.g.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.g.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.g.curve = [1];\n          break;\n\n        default:\n          data.baseColors.g.curve = g_curve.split(';').map(x => parseFloat(x));\n      }\n\n      if (b_wavelength) {\n        let xy = cv.util.Color.wavelength2xy(parseFloat(b_wavelength));\n        data.baseColors.b.x = xy.x;\n        data.baseColors.b.y = xy.y;\n      }\n      if (b_x) {\n        data.baseColors.b.x = parseFloat(b_x);\n      }\n      if (b_y) {\n        data.baseColors.b.y = parseFloat(b_y);\n      }\n      if (b_strength) {\n        data.baseColors.b.Y = parseFloat(b_strength);\n      }\n      data.baseColors.b.scale = b_scale ? parseFloat(b_scale) : 100;\n      switch (b_curve) {\n        case 'exponential':\n          data.baseColors.b.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.b.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.b.curve = [1];\n          break;\n\n        default:\n          data.baseColors.b.curve = b_curve.split(';').map(x => parseFloat(x));\n      }\n\n      if (w_x) {\n        data.baseColors.w.x = parseFloat(w_x);\n      }\n      if (w_y) {\n        data.baseColors.w.y = parseFloat(w_y);\n      }\n      if (w_strength) {\n        data.baseColors.w.Y = parseFloat(w_strength);\n      }\n      data.baseColors.w.scale = w_scale ? parseFloat(w_scale) : 100;\n      switch (w_curve) {\n        case 'exponential':\n          data.baseColors.w.curve = 'exp';\n          break;\n\n        case 'logarithmic':\n          data.baseColors.w.curve = 'log';\n          break;\n\n        case 'linear':\n        case null:\n          data.baseColors.w.curve = [1];\n          break;\n\n        default:\n          data.baseColors.w.curve = w_curve.split(';').map(x => parseFloat(x));\n      }\n    },\n\n    makeAddressListFn(src, transform, mode, variant) {\n      return [true, new Set(['r', 'g', 'b']).has(variant) ? 'RGB-' + variant : variant];\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        controls: { default: 'triangle' },\n        send_on_finish: {\n          target: 'sendOnFinish',\n          default: false,\n          transform(value) {\n            return value === 'true';\n          }\n        }\n      };\n    }\n  },\n\n  defer(statics) {\n    // register the parser\n    cv.parser.pure.WidgetParser.addHandler('colorchooser', statics);\n  }\n});\n"
  ],
  "mappings": "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"
}