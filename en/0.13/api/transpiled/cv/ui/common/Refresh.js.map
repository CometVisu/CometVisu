{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/Refresh.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "cv",
    "TemplateEngine",
    "getInstance",
    "isDomFinished",
    "setupRefreshAction",
    "event",
    "message",
    "Bus",
    "subscribe",
    "addListener",
    "_maintainTimerState",
    "properties",
    "refresh",
    "check",
    "init",
    "cachecontrol",
    "restartOnVisible",
    "apply",
    "members",
    "_timer",
    "__timerId",
    "__setup",
    "__lastRun",
    "__restartTimer",
    "__restartOnVisible",
    "_applyRestartOnVisible",
    "value",
    "debug",
    "getPath",
    "stop",
    "dispose",
    "isRestartOnVisible",
    "isVisible",
    "delta",
    "getRefresh",
    "Date",
    "now",
    "start",
    "fireEvent",
    "Timer",
    "once",
    "isEnabled",
    "_setupRefreshAction",
    "element",
    "getDomElement",
    "target",
    "querySelector",
    "src",
    "getAttribute",
    "indexOf",
    "nodeName",
    "getCachecontrol",
    "refreshAction",
    "setRestartOnVisible",
    "_refreshAction",
    "parenthost",
    "window",
    "location",
    "protocol",
    "host",
    "setAttribute",
    "util",
    "Uri",
    "appendParamsToUrl",
    "getTime",
    "ui",
    "common",
    "Refresh",
    "__forceImgReload",
    "destruct",
    "_disposeObjects",
    "statics",
    "fetch",
    "cache",
    "mode",
    "then",
    "document",
    "body",
    "querySelectorAll",
    "forEach",
    "img"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Refresh.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * @ignore(fetch)\n */\nqx.Mixin.define('cv.ui.common.Refresh', {\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function () {\n    if (cv.TemplateEngine.getInstance().isDomFinished()) {\n      this.setupRefreshAction();\n    } else {\n      qx.event.message.Bus.subscribe('setup.dom.finished', function () {\n        this.setupRefreshAction();\n      }, this);\n    }\n\n    this.addListener('changeVisible', this._maintainTimerState, this);\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    refresh: {\n      check: 'Number',\n      init: 0\n    },\n    cachecontrol: {\n      check: 'String',\n      init: 'full'\n    },\n    restartOnVisible: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyRestartOnVisible'\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    _timer: null,\n    __timerId: null,\n    __setup: false,\n    __lastRun: null,\n    __restartTimer: null,\n    __restartOnVisible: false,\n\n    _applyRestartOnVisible: function (value) {\n      if (value) {\n        this._maintainTimerState();\n      }\n    },\n\n    /**\n     * Stop the while invisible\n     */\n    _maintainTimerState: function () {\n      if (this.__restartTimer) {\n        this.debug('aborting restart timer ' + this.getPath());\n        this.__restartTimer.stop();\n        this.__restartTimer.dispose();\n        this.__restartTimer = null;\n      }\n      if (!this.isRestartOnVisible()) {\n        return;\n      }\n      if (this._timer) {\n        if (this.isVisible()) {\n          const delta = this.getRefresh() - (Date.now() - this.__lastRun);\n          if (delta <= 0) {\n            // run immediately\n            this.debug('immediate refresh because refresh time has been reached ' + this.getPath());\n            this._timer.start();\n            this._timer.fireEvent('interval');\n          } else {\n            this.debug('starting refresh ' + this.getPath() + ' in ' + delta + 'ms');\n            // start when interval is finished\n            this.__restartTimer = qx.event.Timer.once(function () {\n              this._timer.start();\n              this._timer.fireEvent('interval');\n              this.__restartTimer = null;\n            }, this, delta);\n          }\n        } else if (this._timer.isEnabled()) {\n          this.debug('stop refreshing ' + this.getPath());\n          this._timer.stop();\n        }\n      }\n    },\n\n    setupRefreshAction: function () {\n      if (this.getRefresh() && this.getRefresh() > 0) {\n        if (this.__setup === true) {\n          return;\n        }\n        this.__setup = true;\n        if (this._setupRefreshAction) {\n          // overridden by inheriting class\n          this._setupRefreshAction();\n          if (this._timer) {\n            // listen to foreign timer to get the last execution time;\n            this._timer.addListener('interval', function () {\n              this.__lastRun = Date.now();\n            }, this);\n          }\n        } else if (!this._timer || !this._timer.isEnabled()) {\n          const element = this.getDomElement();\n          const target = element.querySelector('img') || element.querySelector('iframe');\n          let src = target.getAttribute('src');\n          if (src.indexOf('?') < 0 && ((target.nodeName === 'IMG' && this.getCachecontrol() === 'full') || target.nodeName !== 'IMG')) {\n            src += '?';\n          }\n          this._timer = new qx.event.Timer(this.getRefresh());\n          this._timer.addListener('interval', function () {\n            this.refreshAction(target, src);\n          }, this);\n          this._timer.start();\n        }\n        if (this._timer && this._timer.isEnabled()) {\n          this.__lastRun = Date.now();\n          this.setRestartOnVisible(true);\n        }\n      }\n    },\n\n    refreshAction: function (target, src) {\n      this.__lastRun = Date.now();\n      if (this._refreshAction) {\n        this._refreshAction();\n      } else {\n        /*\n         * Special treatment for (external) iframes: we need to clear it and reload\n         * it in another thread as otherwise stays blank for some targets/sites and\n         * src = src doesnt work anyway on external This creates though some\n         * \"flickering\" so we avoid to use it on images, internal iframes and others\n         */\n        const parenthost = window.location.protocol + '//' + window.location.host;\n        if (target.nodeName === 'IFRAME' && src.indexOf(parenthost) !== 0) {\n          target.setAttribute('src', '');\n          qx.event.Timer.once(function () {\n            target.setAttribute('src', src);\n          }, this, 0);\n        } else {\n          let cachecontrol = this.getCachecontrol();\n\n          // force is only implied for images\n          if (target.nodeName !== 'IMG' && cachecontrol === 'force') {\n            cachecontrol = 'full';\n          }\n          \n          switch (cachecontrol) {\n            case 'full':\n              target.setAttribute('src', qx.util.Uri.appendParamsToUrl(src, ''+new Date().getTime()));\n              break;\n              \n            case 'weak':\n              target.setAttribute('src', src + '#' + new Date().getTime());\n              break;\n              \n            case 'force':\n              cv.ui.common.Refresh.__forceImgReload(src);\n              \n            // not needed as those are NOP:\n            // case 'none':\n            // default:\n          }\n        }\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    if (this._timer) {\n      this._timer.stop();\n      this._disposeObjects('_timer');\n    }\n  },\n  \n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    // based on https://stackoverflow.com/questions/1077041/refresh-image-with-a-new-one-at-the-same-url\n    __forceImgReload: function(src) {\n      window.fetch(src, { cache: 'reload', mode: 'no-cors' })\n        .then(() => document.body.querySelectorAll(`img[src='${src}']`)\n        .forEach(img => img.src = src));\n    }\n  }\n});\n"
  ]
}