{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "cv",
    "TemplateEngine",
    "getInstance",
    "isDomFinished",
    "setupRefreshAction",
    "event",
    "message",
    "Bus",
    "subscribe",
    "addListener",
    "_maintainTimerState",
    "properties",
    "refresh",
    "check",
    "init",
    "cachecontrol",
    "restartOnVisible",
    "apply",
    "members",
    "_timer",
    "__timerId",
    "__setup",
    "__lastRun",
    "__restartTimer",
    "__restartOnVisible",
    "_applyRestartOnVisible",
    "value",
    "debug",
    "getPath",
    "stop",
    "dispose",
    "isRestartOnVisible",
    "isVisible",
    "delta",
    "getRefresh",
    "Date",
    "now",
    "start",
    "fireEvent",
    "Timer",
    "once",
    "isEnabled",
    "_setupRefreshAction",
    "element",
    "getDomElement",
    "target",
    "querySelector",
    "src",
    "getAttribute",
    "indexOf",
    "nodeName",
    "getCachecontrol",
    "refreshAction",
    "setRestartOnVisible",
    "_refreshAction",
    "parenthost",
    "window",
    "location",
    "protocol",
    "host",
    "setAttribute",
    "util",
    "Uri",
    "appendParamsToUrl",
    "getTime",
    "ui",
    "common",
    "Refresh",
    "__forceImgReload",
    "destruct",
    "_disposeObjects",
    "statics",
    "fetch",
    "cache",
    "mode",
    "then",
    "document",
    "body",
    "querySelectorAll",
    "forEach",
    "img"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/Refresh.js"
  ],
  "sourcesContent": [
    "/* Refresh.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @ignore(fetch)\n */\nqx.Mixin.define('cv.ui.common.Refresh', {\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct() {\n    if (cv.TemplateEngine.getInstance().isDomFinished()) {\n      this.setupRefreshAction();\n    } else {\n      qx.event.message.Bus.subscribe(\n        'setup.dom.finished',\n        function () {\n          this.setupRefreshAction();\n        },\n        this\n      );\n    }\n\n    this.addListener('changeVisible', this._maintainTimerState, this);\n  },\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    refresh: {\n      check: 'Number',\n      init: 0\n    },\n\n    cachecontrol: {\n      check: 'String',\n      init: 'full'\n    },\n\n    restartOnVisible: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyRestartOnVisible'\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    _timer: null,\n    __timerId: null,\n    __setup: false,\n    __lastRun: null,\n    __restartTimer: null,\n    __restartOnVisible: false,\n\n    _applyRestartOnVisible(value) {\n      if (value) {\n        this._maintainTimerState();\n      }\n    },\n\n    /**\n     * Stop the while invisible\n     */\n    _maintainTimerState() {\n      if (this.__restartTimer) {\n        this.debug('aborting restart timer ' + this.getPath());\n        this.__restartTimer.stop();\n        this.__restartTimer.dispose();\n        this.__restartTimer = null;\n      }\n      if (!this.isRestartOnVisible()) {\n        return;\n      }\n      if (this._timer) {\n        if (this.isVisible()) {\n          const delta = this.getRefresh() - (Date.now() - this.__lastRun);\n          if (delta <= 0) {\n            // run immediately\n            this.debug('immediate refresh because refresh time has been reached ' + this.getPath());\n\n            this._timer.start();\n            this._timer.fireEvent('interval');\n          } else {\n            this.debug('starting refresh ' + this.getPath() + ' in ' + delta + 'ms');\n\n            // start when interval is finished\n            this.__restartTimer = qx.event.Timer.once(\n              function () {\n                this._timer.start();\n                this._timer.fireEvent('interval');\n                this.__restartTimer = null;\n              },\n              this,\n              delta\n            );\n          }\n        } else if (this._timer.isEnabled()) {\n          this.debug('stop refreshing ' + this.getPath());\n          this._timer.stop();\n        }\n      }\n    },\n\n    setupRefreshAction() {\n      if (this.getRefresh() && this.getRefresh() > 0) {\n        if (this.__setup === true) {\n          return;\n        }\n        this.__setup = true;\n        if (this._setupRefreshAction) {\n          // overridden by inheriting class\n          this._setupRefreshAction();\n          if (this._timer) {\n            // listen to foreign timer to get the last execution time;\n            this._timer.addListener('interval', () => {\n              this.__lastRun = Date.now();\n            });\n          }\n        } else if (!this._timer || !this._timer.isEnabled()) {\n          const element = this.getDomElement();\n          const target = element.querySelector('img') || element.querySelector('iframe');\n          let src = target.getAttribute('src');\n          if (\n            src.indexOf('?') < 0 &&\n            ((target.nodeName === 'IMG' && this.getCachecontrol() === 'full') || target.nodeName !== 'IMG')\n          ) {\n            src += '?';\n          }\n          this._timer = new qx.event.Timer(this.getRefresh());\n          this._timer.addListener('interval', () => {\n            this.refreshAction(target, src);\n          });\n          this._timer.start();\n        }\n        if (this._timer && this._timer.isEnabled()) {\n          this.__lastRun = Date.now();\n          this.setRestartOnVisible(true);\n        }\n      }\n    },\n\n    refreshAction(target, src) {\n      this.__lastRun = Date.now();\n      if (this._refreshAction) {\n        this._refreshAction();\n      } else {\n        /*\n         * Special treatment for (external) iframes: we need to clear it and reload\n         * it in another thread as otherwise stays blank for some targets/sites and\n         * src = src doesnt work anyway on external This creates though some\n         * \"flickering\" so we avoid to use it on images, internal iframes and others\n         */\n        const parenthost = window.location.protocol + '//' + window.location.host;\n        if (target.nodeName === 'IFRAME' && src.indexOf(parenthost) !== 0) {\n          target.setAttribute('src', '');\n          qx.event.Timer.once(\n            function () {\n              target.setAttribute('src', src);\n            },\n            this,\n            0\n          );\n        } else {\n          let cachecontrol = this.getCachecontrol();\n\n          // force is only implied for images\n          if (target.nodeName !== 'IMG' && cachecontrol === 'force') {\n            cachecontrol = 'full';\n          }\n\n          switch (cachecontrol) {\n            case 'full':\n              target.setAttribute('src', qx.util.Uri.appendParamsToUrl(src, '' + new Date().getTime()));\n\n              break;\n\n            case 'weak':\n              target.setAttribute('src', src + '#' + new Date().getTime());\n              break;\n\n            case 'force':\n              cv.ui.common.Refresh.__forceImgReload(src);\n\n            // not needed as those are NOP:\n            // case 'none':\n            // default:\n          }\n        }\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    if (this._timer) {\n      this._timer.stop();\n      this._disposeObjects('_timer');\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    // based on https://stackoverflow.com/questions/1077041/refresh-image-with-a-new-one-at-the-same-url\n    __forceImgReload(src) {\n      window\n        .fetch(src, { cache: 'reload', mode: 'no-cors' })\n        .then(() => document.body.querySelectorAll(`img[src='${src}']`).forEach(img => (img.src = src)));\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}