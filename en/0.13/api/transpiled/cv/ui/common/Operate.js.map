{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "action",
    "event",
    "_skipNextEvent",
    "getType",
    "_action",
    "getActionValue",
    "sendToBackend",
    "getBubbles",
    "stopPropagation",
    "downaction",
    "_downaction",
    "value",
    "filter",
    "currentBusValues",
    "encodedValues",
    "getAddress",
    "list",
    "id",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "address",
    "cv",
    "data",
    "Model",
    "isWriteAddress",
    "encoding",
    "transform",
    "encodedValue",
    "Transform",
    "encodeBusAndRaw",
    "raw",
    "io",
    "BackendConnections",
    "getClient",
    "backendType",
    "write",
    "bus",
    "e",
    "ignoreError",
    "message",
    "topic",
    "title",
    "locale",
    "Manager",
    "tr",
    "severity",
    "unique",
    "deletable",
    "selector",
    "JSON",
    "stringify",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "ui",
    "common",
    "Operate"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/Operate.js"
  ],
  "sourcesContent": [
    "/* Operate.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Provides methods for widgets that can be controlled by the user.\n * Usually this operation includes sending values to the backend.\n */\nqx.Mixin.define('cv.ui.common.Operate', {\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    /**\n     * Action performed when the widget got clicked, sends data to the backend\n     *\n     * @param event {Event} tap event\n     */\n    action(event) {\n      if (event && this._skipNextEvent === event.getType()) {\n        this._skipNextEvent = null;\n        return;\n      }\n      if (this._action) {\n        this._action(event);\n      } else if (this.getActionValue) {\n        this.sendToBackend(this.getActionValue(event));\n      }\n      if (event && event.getBubbles()) {\n        event.stopPropagation();\n      }\n    },\n\n    /**\n     * Handles pointerdown events\n     * @param event {Event} pointerdown event\n     */\n    downaction(event) {\n      if (this._downaction) {\n        this._downaction(event);\n      }\n      if (event.getBubbles()) {\n        event.stopPropagation();\n      }\n    },\n\n    /**\n     * Send the given value to all writeable addresses known to this widget\n     *\n     * @param value {var} value to send\n     * @param filter {Function} optional filter function for addresses\n     * @param currentBusValues {Object} optional: the (assumed) last encoded values\n     *          that were sent on the bus. When the encoding of the new value\n     *          to send is equal to the currentBusValues a transmission will\n     *          be suppressed. The object is a hash with the encoding as a key\n     *          for the encoded value\n     * @return the object/hash of encoded values that were sent last time\n     */\n    sendToBackend(value, filter, currentBusValues) {\n      const encodedValues = {};\n      if (this.getAddress) {\n        const list = this.getAddress();\n        for (let id in list) {\n          if (Object.prototype.hasOwnProperty.call(list, id)) {\n            const address = list[id];\n            if (cv.data.Model.isWriteAddress(address) && (!filter || filter(address))) {\n              try {\n                const encoding = address.transform;\n                const encodedValue = cv.Transform.encodeBusAndRaw(address, value);\n\n                if (!currentBusValues || encodedValue.raw !== currentBusValues[encoding]) {\n                  cv.io.BackendConnections.getClient(address.backendType).write(id, encodedValue.bus, address);\n                }\n                encodedValues[encoding] = encodedValue.raw;\n              } catch (e) {\n                if (!address.ignoreError) {\n                  const message = {\n                    topic: 'cv.transform.encode',\n                    title: qx.locale.Manager.tr('Transform encode error'),\n                    severity: 'urgent',\n                    unique: false,\n                    deletable: true,\n                    message: qx.locale.Manager.tr(\n                      'Encode error: %1; selector: \"%2\"; value: %3',\n                      e,\n                      address.selector,\n                      JSON.stringify(value)\n                    )\n                  };\n\n                  cv.core.notifications.Router.dispatchMessage(message.topic, message);\n                }\n              }\n            }\n          }\n        }\n      }\n      return encodedValues;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACtC;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,KAAK,EAAE;QACZ,IAAIA,KAAK,IAAI,IAAI,CAACC,cAAc,KAAKD,KAAK,CAACE,OAAO,CAAC,CAAC,EAAE;UACpD,IAAI,CAACD,cAAc,GAAG,IAAI;UAC1B;QACF;QACA,IAAI,IAAI,CAACE,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACH,KAAK,CAAC;QACrB,CAAC,MAAM,IAAI,IAAI,CAACI,cAAc,EAAE;UAC9B,IAAI,CAACC,aAAa,CAAC,IAAI,CAACD,cAAc,CAACJ,KAAK,CAAC,CAAC;QAChD;QACA,IAAIA,KAAK,IAAIA,KAAK,CAACM,UAAU,CAAC,CAAC,EAAE;UAC/BN,KAAK,CAACO,eAAe,CAAC,CAAC;QACzB;MACF,CAAC;MAED;AACJ;AACA;AACA;MACIC,UAAU,WAAAA,WAACR,KAAK,EAAE;QAChB,IAAI,IAAI,CAACS,WAAW,EAAE;UACpB,IAAI,CAACA,WAAW,CAACT,KAAK,CAAC;QACzB;QACA,IAAIA,KAAK,CAACM,UAAU,CAAC,CAAC,EAAE;UACtBN,KAAK,CAACO,eAAe,CAAC,CAAC;QACzB;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIF,aAAa,WAAAA,cAACK,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,EAAE;QAC7C,IAAMC,aAAa,GAAG,CAAC,CAAC;QACxB,IAAI,IAAI,CAACC,UAAU,EAAE;UACnB,IAAMC,IAAI,GAAG,IAAI,CAACD,UAAU,CAAC,CAAC;UAC9B,KAAK,IAAIE,EAAE,IAAID,IAAI,EAAE;YACnB,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,IAAI,EAAEC,EAAE,CAAC,EAAE;cAClD,IAAMK,OAAO,GAAGN,IAAI,CAACC,EAAE,CAAC;cACxB,IAAIM,EAAE,CAACC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACJ,OAAO,CAAC,KAAK,CAACV,MAAM,IAAIA,MAAM,CAACU,OAAO,CAAC,CAAC,EAAE;gBACzE,IAAI;kBACF,IAAMK,QAAQ,GAAGL,OAAO,CAACM,SAAS;kBAClC,IAAMC,YAAY,GAAGN,EAAE,CAACO,SAAS,CAACC,eAAe,CAACT,OAAO,EAAEX,KAAK,CAAC;kBAEjE,IAAI,CAACE,gBAAgB,IAAIgB,YAAY,CAACG,GAAG,KAAKnB,gBAAgB,CAACc,QAAQ,CAAC,EAAE;oBACxEJ,EAAE,CAACU,EAAE,CAACC,kBAAkB,CAACC,SAAS,CAACb,OAAO,CAACc,WAAW,CAAC,CAACC,KAAK,CAACpB,EAAE,EAAEY,YAAY,CAACS,GAAG,EAAEhB,OAAO,CAAC;kBAC9F;kBACAR,aAAa,CAACa,QAAQ,CAAC,GAAGE,YAAY,CAACG,GAAG;gBAC5C,CAAC,CAAC,OAAOO,CAAC,EAAE;kBACV,IAAI,CAACjB,OAAO,CAACkB,WAAW,EAAE;oBACxB,IAAMC,OAAO,GAAG;sBACdC,KAAK,EAAE,qBAAqB;sBAC5BC,KAAK,EAAElD,EAAE,CAACmD,MAAM,CAACC,OAAO,CAACC,EAAE,CAAC,wBAAwB,CAAC;sBACrDC,QAAQ,EAAE,QAAQ;sBAClBC,MAAM,EAAE,KAAK;sBACbC,SAAS,EAAE,IAAI;sBACfR,OAAO,EAAEhD,EAAE,CAACmD,MAAM,CAACC,OAAO,CAACC,EAAE,CAC3B,6CAA6C,EAC7CP,CAAC,EACDjB,OAAO,CAAC4B,QAAQ,EAChBC,IAAI,CAACC,SAAS,CAACzC,KAAK,CACtB;oBACF,CAAC;oBAEDY,EAAE,CAAC8B,IAAI,CAACC,aAAa,CAACC,MAAM,CAACC,eAAe,CAACf,OAAO,CAACC,KAAK,EAAED,OAAO,CAAC;kBACtE;gBACF;cACF;YACF;UACF;QACF;QACA,OAAO3B,aAAa;MACtB;IACF;EACF,CAAC,CAAC;EArHFS,EAAE,CAACkC,EAAE,CAACC,MAAM,CAACC,OAAO,CAAC/D,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}