{
  "className": "cv.ui.common.HasChildren",
  "packageName": "cv.ui.common",
  "name": "HasChildren",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 980
      },
      "end": {
        "line": 129,
        "column": 3,
        "index": 4113
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Mixin for all widgets that can have other widgets as children, this mixin includes the static parsing part\n and the methods for the widget instance.</p>"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 30,
        "column": 2,
        "index": 1168
      },
      "end": {
        "line": 47,
        "column": 3,
        "index": 1824
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "children": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 2032
        },
        "end": {
          "line": 61,
          "column": 5,
          "index": 2086
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array with child paths</p>"
          }
        ]
      },
      "name": "children",
      "propertyType": "new",
      "init": [],
      "check": "Array",
      "defaultValue": []
    },
    "childWidgets": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 2148
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 2206
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Array with child widget objects</p>"
          }
        ]
      },
      "name": "childWidgets",
      "propertyType": "new",
      "init": [],
      "check": "Array",
      "defaultValue": []
    }
  },
  "members": {
    "getChildrenDomString": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2616
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 3562
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the HTML code for the children if this widget</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{boolean=} noWidgetContainer if false: do not surround the childrens with a div-element with class 'widget_container'",
            "paramName": "noWidgetContainer",
            "description": "if false: do not surround the childrens with a div-element with class 'widget_container'",
            "type": "boolean="
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string} HTML code",
            "type": "string",
            "description": " HTML code"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildrenDom": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3680
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 4105
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create a collection of html elements of the children</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{DocumentFragment}",
            "type": "DocumentFragment",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildren": {
      "type": "function",
      "name": "getChildren",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>children</code>.\n\nFor further details take a look at the property definition: {@link #children}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for children"
          }
        ]
      }
    },
    "setChildren": {
      "type": "function",
      "name": "setChildren",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>children</code>.\n\nFor further details take a look at the property definition: {@link #children}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for children"
          }
        ]
      }
    },
    "resetChildren": {
      "type": "function",
      "name": "resetChildren",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>children</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #children}."
          }
        ]
      }
    },
    "getChildWidgets": {
      "type": "function",
      "name": "getChildWidgets",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>childWidgets</code>.\n\nFor further details take a look at the property definition: {@link #childWidgets}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for childWidgets"
          }
        ]
      }
    },
    "setChildWidgets": {
      "type": "function",
      "name": "setChildWidgets",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>childWidgets</code>.\n\nFor further details take a look at the property definition: {@link #childWidgets}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for childWidgets"
          }
        ]
      }
    },
    "resetChildWidgets": {
      "type": "function",
      "name": "resetChildWidgets",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>childWidgets</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #childWidgets}."
          }
        ]
      }
    }
  },
  "descendants": []
}