{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/HasChildren.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "props",
    "children",
    "model",
    "cv",
    "data",
    "Model",
    "getInstance",
    "Config",
    "lazyLoading",
    "treePath",
    "indexOf",
    "path",
    "forEach",
    "getWidgetData",
    "widget",
    "ui",
    "structure",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "push",
    "setParentWidget",
    "setChildWidgets",
    "properties",
    "check",
    "init",
    "childWidgets",
    "members",
    "getChildrenDomString",
    "noWidgetContainer",
    "container",
    "getChildWidgets",
    "subelement",
    "getDomString",
    "undefined",
    "getRowspanClass",
    "getContainerClass",
    "get$$type",
    "getPath",
    "common",
    "HasChildren"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* HasChildren.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Mixin for all widgets that can have other widgets as children, this mixin includes the static parsing part\n * and the methods for the widget instance.\n */\nqx.Mixin.define('cv.ui.common.HasChildren', {\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    const children = [];\n    // create children\n    const model = cv.data.Model.getInstance();\n    if (cv.Config.lazyLoading === false || cv.Config.treePath.indexOf(props.path) >= 0) {\n      // this.debug(props.$$type+\" INIT [\"+props.path+\"] with \"+props.children.length+\" children\");\n      props.children.forEach(function (path) {\n        const data = model.getWidgetData(path);\n        const widget = cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n        if (widget) {\n          children.push(widget);\n          widget.setParentWidget(this);\n        }\n      }, this);\n      this.setChildWidgets(children);\n    }\n  },\n\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    /**\n     * Array with child paths\n     */\n    children: {\n      check: 'Array',\n      init: []\n    },\n\n    /**\n     * Array with child widget objects\n     */\n    childWidgets: {\n      check: 'Array',\n      init: []\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    /**\n     * Creates the HTML code for the children if this widget\n     *\n     * @param noWidgetContainer {Boolean} if false: do not surround the childrens with a div-element with class 'widget_container'\n     * @return {String} HTML code\n     */\n    getChildrenDomString: function (noWidgetContainer) {\n      let container = '';\n\n      this.getChildWidgets().forEach(function (widget) {\n        const subelement = widget.getDomString();\n        if (undefined === subelement) {\n          return;\n        }\n        if (noWidgetContainer === true) {\n          container += subelement;\n        } else {\n          container += '<div class=\"widget_container' +\n            (widget.getRowspanClass ? ' '+widget.getRowspanClass() : '') +\n            (widget.getContainerClass && widget.getContainerClass() ? ' '+widget.getContainerClass() : '') +\n            (widget.get$$type() === 'break' ? ' break_container' : '') + // special case for break widget\n            '\" id=\"' + widget.getPath() + '\" data-type=\"' + widget.get$$type() + '\">' + subelement + '</div>';\n        }\n      }, this);\n      return container;\n    }\n  }\n});\n"
  ]
}