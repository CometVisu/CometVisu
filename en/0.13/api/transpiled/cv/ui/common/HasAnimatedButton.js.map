{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/common/HasAnimatedButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "addListenerOnce",
    "__initListeners",
    "members",
    "__olid",
    "__ilid",
    "__downTarget",
    "actors",
    "__getActors",
    "isBindClickToWidget",
    "getInteractionElement",
    "forEach",
    "actor",
    "event",
    "Registration",
    "addListener",
    "buttonPressed",
    "getActor",
    "getActors",
    "a",
    "indexOf",
    "push",
    "getCurrentTarget",
    "document",
    "buttonReleased",
    "buttons",
    "__updateButtons",
    "pressed",
    "button",
    "classList",
    "add",
    "remove",
    "removeListener",
    "removeListenerById",
    "destruct",
    "cv",
    "ui",
    "common",
    "HasAnimatedButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* HasAnimatedButton.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\nqx.Mixin.define('cv.ui.common.HasAnimatedButton', {\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct: function() {\n    this.addListenerOnce('domReady', this.__initListeners, this);\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __olid: null,\n    __ilid: null,\n    __downTarget: null,\n\n    __initListeners: function() {\n      let actors = this.__getActors();\n      if (this.isBindClickToWidget()) {\n        actors = [this.getInteractionElement()];\n      }\n      actors.forEach(function(actor) {\n        qx.event.Registration.addListener(actor, 'pointerdown', this.buttonPressed, this);\n      }, this);\n    },\n\n    __getActors : function() {\n      const actors = [this.getActor()];\n      if (this.getActors) {\n        this.getActors().forEach(function(a) {\n          if (actors.indexOf(a) === -1) {\n            actors.push(a);\n          }\n        });\n      }\n      return actors;\n    },\n\n    /**\n     * Create an action handling that shows a button press animation.\n     * When the action is not set, it will be searched for - so that widgets\n     * with bind_click_to_widget will also work.\n     *\n     * @param event {Event} pointerdown event\n     */\n    buttonPressed: function(event) {\n      const actor = event.getCurrentTarget();\n      this.__downTarget = actor;\n      qx.event.Registration.addListener(document, 'pointerup', this.buttonReleased, this);\n      const buttons = this.isBindClickToWidget() ? this.__getActors() : [actor];\n      this.__updateButtons(buttons, true);\n      this.__olid = qx.event.Registration.addListener(actor, 'pointerout', function() {\n        this.__updateButtons(buttons, false);\n      }, this);\n      this.__ilid = qx.event.Registration.addListener(actor, 'pointerover', function() {\n        this.__updateButtons(buttons, true);\n      }, this);\n    },\n\n    __updateButtons: function(buttons, pressed) {\n      if (pressed) {\n        buttons.forEach(function(button) {\n          if (button) {\n            button.classList.add('switchPressed');\n            button.classList.remove('switchUnpressed');\n          }\n        });\n      } else {\n        buttons.forEach(function(button) {\n          if (button) {\n            button.classList.add('switchUnpressed');\n            button.classList.remove('switchPressed');\n          }\n        });\n      }\n    },\n\n    /**\n     * Create an action handling that shows a button unpress animation.\n     * When the action is not set, it will be searched for - so that widgets\n     * with bind_click_to_widget will also work.\n     *\n     * @param event {Event} pointerup event\n     */\n    buttonReleased: function(event) {\n      qx.event.Registration.removeListener(document, 'pointerup', this.buttonReleased, this);\n      const actor = this.__downTarget;\n      const buttons = this.isBindClickToWidget() ? this.__getActors() : [actor];\n      this.__updateButtons(buttons, false);\n      if (this.__olid) {\n        qx.event.Registration.removeListenerById(actor, this.__olid);\n      }\n      if (this.__ilid) {\n        qx.event.Registration.removeListenerById(actor, this.__ilid);\n      }\n      this.__olid = null;\n      this.__ilid = null;\n      this.__downTarget = null;\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    qx.event.Registration.addListener(document, 'pointerup', this.buttonReleased, this);\n  }\n});\n"
  ]
}