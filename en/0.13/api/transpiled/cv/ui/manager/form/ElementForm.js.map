{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "Form",
    "properties",
    "labelColumnWidth",
    "refine",
    "init",
    "useBlocker",
    "blockerOpacity",
    "blockerColor",
    "members",
    "__mappedKeys",
    "__hints",
    "_rootListenerId",
    "_applyFormData",
    "formData",
    "old",
    "map",
    "inverse",
    "firstWidget",
    "_formController",
    "getModel",
    "removeAllBindings",
    "dispose",
    "e",
    "_form",
    "getValidationManager",
    "_formContainer",
    "removeAll",
    "modelData",
    "Object",
    "getOwnPropertyNames",
    "key",
    "i",
    "mappedKey",
    "replaceAll",
    "match",
    "p1",
    "toUpperCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "substr",
    "length",
    "value",
    "undefined",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "ui",
    "form",
    "core",
    "Environment",
    "get",
    "setQxObjectId",
    "addOwnedQxObject",
    "controller",
    "_onFormReady",
    "atom",
    "fieldData",
    "formElement",
    "elementModel",
    "elementModelReady",
    "type",
    "toLowerCase",
    "addGroupHeader",
    "TextArea",
    "setMinimalLineHeight",
    "lines",
    "autoSize",
    "setAutoSize",
    "setMinHeight",
    "setHeight",
    "setLiveUpdate",
    "TextField",
    "maxLength",
    "setMaxLength",
    "cv",
    "manager",
    "SourceCodeField",
    "language",
    "DateField",
    "dateFormat",
    "setDateFormat",
    "PasswordField",
    "getContentElement",
    "setAttribute",
    "ComboBox",
    "parseComboOptions",
    "options",
    "Array",
    "isArray",
    "forEach",
    "item",
    "listItem",
    "ListItem",
    "label",
    "icon",
    "add",
    "keys",
    "groupName",
    "groupItem",
    "set",
    "anonymous",
    "appearance",
    "Promise",
    "setPlaceholder",
    "tr",
    "then",
    "placeholder",
    "err",
    "error",
    "VirtualComboBox",
    "iconPath",
    "labelPath",
    "validation",
    "getChildControl",
    "selection",
    "getSelection",
    "addListener",
    "ev",
    "selected",
    "getItem",
    "Option",
    "getHints",
    "parseVComboOptions",
    "push",
    "hints",
    "groupModel",
    "setType",
    "setDelegate",
    "createItem",
    "bindItem",
    "index",
    "bindProperty",
    "converter",
    "SelectBox",
    "setLabel",
    "addState",
    "resetLabel",
    "removeState",
    "List",
    "VirtualSelectBox",
    "bindDefaultProperties",
    "iconOptions",
    "trim",
    "RadioGroup",
    "orientation",
    "setUserData",
    "radioButton",
    "RadioButton",
    "CheckBox",
    "setTriState",
    "Spinner",
    "min",
    "setMinimum",
    "max",
    "setMaximum",
    "step",
    "setSingleStep",
    "fractionsDigits",
    "fd",
    "nf",
    "util",
    "format",
    "NumberFormat",
    "setMinimumFractionDigits",
    "setMaximumFractionDigits",
    "setNumberFormat",
    "reverseOptions",
    "bidirectional",
    "handled",
    "validate",
    "bind",
    "option",
    "some",
    "getValue",
    "addTarget",
    "selectables",
    "getSelectables",
    "selectable",
    "sValue",
    "getUserData",
    "validator",
    "required",
    "setRequired",
    "Validate",
    "charAt",
    "regExp",
    "RegExp",
    "errorMessage",
    "AsyncValidator",
    "lang",
    "Type",
    "isString",
    "proxy",
    "method",
    "replace",
    "eval",
    "warn",
    "message",
    "invalidMessage",
    "validationFunc",
    "validatorObj",
    "__asyncInProgress",
    "valid",
    "setValid",
    "locale",
    "Manager",
    "width",
    "setWidth",
    "enabled",
    "setEnabled",
    "help",
    "isObject",
    "events",
    "func",
    "isFunction",
    "Error",
    "view",
    "ElementFormRenderer",
    "getLayout",
    "setColumnFlex",
    "setColumnMaxWidth",
    "getLabelColumnWidth",
    "spacingX",
    "setAllowGrowX",
    "scroll",
    "container",
    "Scroll",
    "setMaxHeight",
    "bom",
    "Document",
    "getHeight",
    "Init",
    "getApplication",
    "getRoot",
    "event",
    "Timer",
    "once",
    "focus",
    "_handleOk",
    "hide",
    "getCallback",
    "Serializer",
    "toNativeObject",
    "mappedNames",
    "name",
    "getContext",
    "resetCallback",
    "destruct",
    "removeListenerById",
    "ElementForm"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/form/ElementForm.js"
  ],
  "sourcesContent": [
    "/* ElementForm.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.ui.manager.form.ElementForm', {\n  extend: qxl.dialog.Form,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    labelColumnWidth: {\n      refine: true,\n      init: 300\n    },\n\n    useBlocker: {\n      refine: true,\n      init: true\n    },\n\n    blockerOpacity: {\n      refine: true,\n      init: 0.9\n    },\n\n    blockerColor: {\n      refine: true,\n      init: '#585858'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __mappedKeys: null,\n    __hints: null,\n    _rootListenerId: null,\n\n    _applyFormData(formData, old) {\n      this.__mappedKeys = {\n        map: {},\n        inverse: {}\n      };\n\n      let firstWidget;\n      if (this._formController) {\n        try {\n          this.getModel().removeAllBindings();\n          this._formController.dispose();\n        } catch (e) {}\n      }\n      if (this._form) {\n        try {\n          this._form.getValidationManager().removeAllBindings();\n          this._form.dispose();\n        } catch (e) {}\n      }\n      this._formContainer.removeAll();\n      if (!formData) {\n        return;\n      }\n      if (this.getModel()) {\n        this.getModel().removeAllBindings();\n        this.getModel().dispose();\n      }\n      let modelData = {};\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        let i = 0;\n        let mappedKey = key.replaceAll(/[-_\\.#]+([a-z])/g, (match, p1) => p1.toUpperCase()) + i++;\n        while (Object.prototype.hasOwnProperty.call(modelData, mappedKey)) {\n          mappedKey = mappedKey.substr(0, mappedKey.length - 1) + i++;\n        }\n        if (mappedKey !== key) {\n          this.__mappedKeys.map[mappedKey] = key;\n          this.__mappedKeys.inverse[key] = mappedKey;\n        }\n        modelData[mappedKey] = formData[key].value !== undefined ? formData[key].value : null;\n      }\n      let model = qx.data.marshal.Json.createModel(modelData);\n      this.setModel(model);\n      // form\n      this._form = new qx.ui.form.Form();\n      if (qx.core.Environment.get('module.objectid') === true) {\n        this._form.setQxObjectId('form');\n        this.addOwnedQxObject(this._form);\n      }\n      this._formController = new qx.data.controller.Object(model);\n      this._onFormReady(this._form);\n      let i = 0;\n      let atom;\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        const mappedKey = this.__mappedKeys.inverse[key];\n        let fieldData = formData[key];\n        let formElement = null;\n        let elementModel = null;\n        let elementModelReady = null;\n        switch (fieldData.type.toLowerCase()) {\n          case 'groupheader':\n            this._form.addGroupHeader(fieldData.value);\n            break;\n          case 'textarea':\n            formElement = new qx.ui.form.TextArea();\n            formElement.setMinimalLineHeight(fieldData.lines);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case 'textfield':\n            formElement = new qx.ui.form.TextField();\n            if (fieldData.maxLength) {\n              formElement.setMaxLength(fieldData.maxLength);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case 'sourceeditor':\n            formElement = new cv.ui.manager.form.SourceCodeField('', fieldData.language);\n\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            break;\n          case 'datefield':\n          case 'date':\n            formElement = new qx.ui.form.DateField();\n            if (fieldData.dateFormat) {\n              formElement.setDateFormat(fieldData.dateFormat);\n            }\n            break;\n          case 'passwordfield':\n          case 'password':\n            formElement = new qx.ui.form.PasswordField();\n            formElement.getContentElement().setAttribute('autocomplete', 'password');\n            break;\n          case 'combobox': {\n            formElement = new qx.ui.form.ComboBox();\n            const parseComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(function (item) {\n                  let listItem = new qx.ui.form.ListItem(item.label, item.icon);\n                  formElement.add(listItem);\n                });\n              } else if (typeof options === 'object') {\n                // grouped options\n                Object.keys(options).forEach(groupName => {\n                  let groupItem = new qx.ui.form.ListItem(groupName);\n                  groupItem.set({\n                    anonymous: true,\n                    appearance: 'optiongroup'\n                  });\n\n                  formElement.add(groupItem);\n                  options[groupName].forEach(function (item) {\n                    let listItem = new qx.ui.form.ListItem(item.label, item.icon, item.value);\n\n                    formElement.add(listItem);\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              elementModelReady = fieldData.options\n                .then(options => {\n                  formElement.setPlaceholder(fieldData.placeholder);\n                  parseComboOptions(options);\n                  return true;\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  formElement.setPlaceholder(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n                }, this);\n            } else {\n              parseComboOptions(fieldData.options);\n            }\n            break;\n          }\n          case 'virtualcombobox': {\n            formElement = new qx.ui.form.VirtualComboBox();\n            formElement.set({\n              iconPath: 'icon',\n              labelPath: 'value'\n            });\n\n            if (fieldData.validation) {\n              formElement.getChildControl('textfield').setLiveUpdate(true);\n            }\n            const selection = formElement.getChildControl('dropdown').getSelection();\n            selection.addListener('change', ev => {\n              const selected = selection.getItem(0);\n              if (selected && selected instanceof cv.ui.manager.form.Option) {\n                this.__hints = selected.getHints();\n              } else {\n                this.__hints = null;\n              }\n            });\n            elementModel = new qx.data.Array();\n            const parseVComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(item => {\n                  elementModel.push(\n                    new cv.ui.manager.form.Option(\n                      item.label + (item.value ? ` (${item.value})` : ''),\n                      item.icon,\n                      item.value,\n                      item.hints\n                    )\n                  );\n                });\n              } else if (typeof options === 'object') {\n                Object.keys(options).forEach(groupName => {\n                  const groupModel = new cv.ui.manager.form.Option(groupName);\n                  groupModel.setType('group');\n                  elementModel.push(groupModel);\n                  options[groupName].forEach(function (item) {\n                    elementModel.push(\n                      new cv.ui.manager.form.Option(\n                        item.label + (item.value ? ` (${item.value})` : ''),\n                        item.icon,\n                        item.value,\n                        item.hints\n                      )\n                    );\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              fieldData.options\n                .then(options => {\n                  formElement.setPlaceholder(fieldData.placeholder);\n                  parseVComboOptions(options);\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  formElement.setPlaceholder(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n                }, this);\n            } else {\n              parseVComboOptions(fieldData.options);\n            }\n\n            formElement.setDelegate({\n              createItem() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem(controller, item, index) {\n                controller.bindProperty('icon', 'icon', null, item, index);\n                controller.bindProperty('label', 'label', null, item, index);\n                controller.bindProperty(\n                  'type',\n                  'appearance',\n                  {\n                    converter(value) {\n                      switch (value) {\n                        case 'state':\n                          return 'state-option';\n                        case 'error':\n                          return 'error-option';\n                        case 'group':\n                          return 'optiongroup';\n                        default:\n                          return 'listitem';\n                      }\n                    }\n                  },\n\n                  item,\n                  index\n                );\n\n                controller.bindProperty(\n                  'type',\n                  'anonymous',\n                  {\n                    converter(value) {\n                      return value === 'group';\n                    }\n                  },\n\n                  item,\n                  index\n                );\n              }\n            });\n\n            formElement.setModel(elementModel);\n            break;\n          }\n\n          case 'selectbox': {\n            formElement = new qx.ui.form.SelectBox();\n            if (fieldData.options instanceof Promise) {\n              atom = formElement.getChildControl('atom');\n              atom.setLabel(this.tr('Loading...'));\n              atom.addState('loading');\n              elementModelReady = fieldData.options\n                .then(options => {\n                  const atom = formElement.getChildControl('atom');\n                  atom.resetLabel();\n                  atom.removeState('loading');\n                  // eslint-disable-next-line no-new\n                  new qx.data.controller.List(qx.data.marshal.Json.createModel(options), formElement, 'label');\n\n                  return true;\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  const atom = formElement.getChildControl('atom');\n                  atom.setLabel(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n\n                  atom.removeState('loading');\n                  atom.addState('error');\n                }, this);\n            } else {\n              // eslint-disable-next-line no-new\n              new qx.data.controller.List(qx.data.marshal.Json.createModel(fieldData.options), formElement, 'label');\n            }\n            break;\n          }\n\n          case 'virtualselectbox':\n            formElement = new cv.ui.manager.form.VirtualSelectBox();\n            elementModel = new qx.data.Array();\n            if (fieldData.options) {\n              if (fieldData.options instanceof Promise) {\n                atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr('Loading...'));\n                atom.addState('loading');\n                elementModelReady = fieldData.options\n                  .then(options => {\n                    const atom = formElement.getChildControl('atom');\n                    atom.resetLabel();\n                    atom.removeState('loading');\n                    options.forEach(item => {\n                      elementModel.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                    });\n                    return true;\n                  })\n                  .catch(err => {\n                    this.error(err);\n                    const atom = formElement.getChildControl('atom');\n                    atom.setLabel(\n                      this.tr('Possible values could no be retrieved, please check browser console for error details')\n                    );\n\n                    atom.removeState('loading');\n                    atom.addState('error');\n                  }, this);\n              } else {\n                fieldData.options.forEach(item => {\n                  elementModel.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                });\n              }\n            }\n            formElement.setDelegate({\n              createItem() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem(controller, item, index) {\n                controller.bindDefaultProperties(item, index);\n                controller.bindProperty('value', 'model', null, item, index);\n              }\n            });\n\n            formElement.set({\n              labelPath: 'label',\n              iconPath: 'icon',\n              iconOptions: {\n                converter(value) {\n                  if (typeof value === 'function') {\n                    return value().trim();\n                  }\n                  return value;\n                }\n              },\n\n              model: elementModel\n            });\n\n            break;\n          case 'radiogroup':\n            formElement = new qx.ui.form.RadioGroup();\n            if (fieldData.orientation) {\n              formElement.setUserData('orientation', fieldData.orientation);\n            }\n            fieldData.options.forEach(function (item) {\n              let radioButton = new qx.ui.form.RadioButton(item.label);\n              radioButton.setUserData('value', item.value !== undefined ? item.value : item.label);\n\n              formElement.add(radioButton);\n            }, this);\n            break;\n          case 'label':\n            formElement = new qx.ui.form.TextField(); // dummy\n            formElement.setUserData('excluded', true);\n            break;\n          case 'checkbox':\n            formElement = new cv.ui.manager.form.CheckBox();\n            formElement.setTriState(true);\n            break;\n          case 'spinner':\n            formElement = new qx.ui.form.Spinner();\n            if (fieldData.min) {\n              formElement.setMinimum(fieldData.min);\n            }\n            if (fieldData.max) {\n              formElement.setMaximum(fieldData.max);\n            }\n            if (fieldData.step) {\n              formElement.setSingleStep(fieldData.step);\n            }\n            if (fieldData.fractionsDigits) {\n              let fd = fieldData.fractionsDigits;\n              let nf = new qx.util.format.NumberFormat();\n              if (fd.min) {\n                nf.setMinimumFractionDigits(fd.min);\n              }\n              if (fd.max) {\n                nf.setMaximumFractionDigits(fd.max);\n              }\n              formElement.setNumberFormat(nf);\n            }\n            break;\n          default:\n            this.error('Invalid form field type:' + fieldData.type);\n        }\n\n        formElement.setUserData('key', key);\n        formElement.setUserData('mappedKey', mappedKey);\n        if (i === 0) {\n          firstWidget = formElement;\n        }\n        i++;\n        if (typeof fieldData.type == 'string') {\n          let options = null;\n          let reverseOptions = null;\n          let bidirectional = true;\n          let handled = false;\n          switch (fieldData.type.toLowerCase()) {\n            case 'textarea':\n            case 'textfield':\n            case 'passwordfield':\n            case 'combobox':\n            case 'virtualcombobox':\n            case 'datefield':\n            case 'spinner':\n            case 'sourceeditor':\n              reverseOptions = {\n                converter: function (value) {\n                  // just validate when the value has changed\n                  this.getValidationManager().validate();\n                  return value;\n                }.bind(this._form)\n              };\n\n              break;\n            case 'virtualselectbox':\n              options = {\n                converter: function (value) {\n                  if (typeof value === 'string') {\n                    let option;\n                    this.getModel().some(item => {\n                      if (item.getValue() === value) {\n                        option = item;\n                        return true;\n                      }\n                      return false;\n                    });\n                    return option;\n                  }\n                  return value;\n                }.bind(formElement)\n              };\n\n              reverseOptions = {\n                converter: function (option) {\n                  this.getValidationManager().validate();\n                  return option ? option.getValue() : null;\n                }.bind(this._form)\n              };\n\n              break;\n            case 'checkbox':\n              break;\n            case 'selectbox':\n              // for some strange timing reason this only works, when addTarget is called here\n              this._formController.addTarget(\n                formElement,\n                'selection',\n                mappedKey,\n                true,\n                {\n                  converter: function (value) {\n                    let selected = null;\n                    let selectables = this.getSelectables();\n                    selectables.some(function (selectable) {\n                      if (selectable.getModel().getValue() === value) {\n                        selected = selectable;\n                        return true;\n                      }\n                      return false;\n                    }, this);\n                    if (!selected) {\n                      return [selectables[0]];\n                    }\n                    return [selected];\n                  }.bind(formElement)\n                },\n\n                {\n                  converter(selection) {\n                    return selection[0].getModel().getValue();\n                  }\n                }\n              );\n\n              handled = true;\n              break;\n            case 'radiogroup':\n              options = {\n                converter: function (value) {\n                  let selectables = this.getSelectables();\n                  let selection = [];\n                  if (value) {\n                    selectables.forEach(function (selectable) {\n                      let sValue = selectable.getUserData('value');\n                      if (sValue === value) {\n                        selection = [selectable];\n                      }\n                    }, this);\n                  }\n                  return selection;\n                }.bind(formElement)\n              };\n\n              reverseOptions = {\n                converter(selection) {\n                  return selection[0].getUserData('value');\n                }\n              };\n\n              break;\n          }\n\n          if (!handled) {\n            if (elementModelReady) {\n              // do not add the binding before the model is there\n              elementModelReady.then(() => {\n                this._formController.addTarget(formElement, 'value', mappedKey, bidirectional, options, reverseOptions);\n              });\n            } else {\n              this._formController.addTarget(formElement, 'value', mappedKey, bidirectional, options, reverseOptions);\n            }\n          }\n        }\n        /**\n         * Validation\n         */\n        let validator = null;\n        if (formElement && fieldData.validation) {\n          // required field\n          if (fieldData.validation.required) {\n            formElement.setRequired(true);\n          }\n          // sync validation\n          if (fieldData.validation.validator) {\n            validator = fieldData.validation.validator;\n            if (typeof validator == 'string') {\n              if (qx.util.Validate[validator]) {\n                validator = qx.util.Validate[validator]();\n              } else if (validator.charAt(0) === '/') {\n                validator = qx.util.Validate.regExp(\n                  new RegExp(validator.substr(1, validator.length - 2)),\n                  fieldData.validation.errorMessage\n                );\n              } else {\n                this.error('Invalid string validator.');\n              }\n            } else if (\n              !(validator instanceof qx.ui.form.validation.AsyncValidator) &&\n              typeof validator !== 'function'\n            ) {\n              this.error('Invalid validator.');\n            }\n          }\n          // async validation\n          if (qx.lang.Type.isString(fieldData.validation.proxy) && qx.lang.Type.isString(fieldData.validation.method)) {\n            /**\n             * fieldData.validation.proxy\n             * the name of a global variable (or path) to a function that acts as the proxy of\n             * the 'send' or 'execute' function of a preconfigured JsonRpc client. The function\n             * receives the following parameters: service method (string), parameters (array)\n             * and callback (function). It proxies the parameters to the given JsonRpc method and\n             * calls the callback with the result (true if valid, false if not) received from the\n             * server. The JsonRpc service name is preconfigured by the server and cannot be\n             * changed by the client.\n             */\n            // clean\n            let proxy = fieldData.validation.proxy.replace(/;\\n/g, '');\n            try {\n              // eslint-disable-next-line no-eval\n              eval('proxy = ' + proxy + ';');\n            } catch (e) {\n              this.warn('Invalid proxy name');\n            }\n            if (typeof proxy == 'function') {\n              let method = fieldData.validation.method;\n              let message = fieldData.validation.invalidMessage;\n              let validationFunc = function (validatorObj, value) {\n                if (!validatorObj.__asyncInProgress) {\n                  validatorObj.__asyncInProgress = true;\n                  proxy(method, [value], function (valid) {\n                    validatorObj.setValid(valid, message || qx.locale.Manager.tr('Value is invalid'));\n\n                    validatorObj.__asyncInProgress = false;\n                  });\n                }\n              };\n              validator = new qx.ui.form.validation.AsyncValidator(validationFunc);\n            }\n          }\n        }\n\n        /**\n         * other widget properties @todo: allow to set all properties\n         */\n        if (fieldData.width !== undefined) {\n          formElement.setWidth(fieldData.width);\n        }\n        if (fieldData.placeholder !== undefined) {\n          formElement.setPlaceholder(fieldData.placeholder);\n        }\n        if (fieldData.enabled !== undefined) {\n          formElement.setEnabled(fieldData.enabled);\n        }\n        if (fieldData.help !== undefined) {\n          formElement.setUserData('help', fieldData.help);\n        }\n\n        /**\n         * Events\n         */\n        if (qx.lang.Type.isObject(fieldData.events)) {\n          for (let type in fieldData.events) {\n            try {\n              // eslint-disable-next-line no-eval\n              let func = eval('(' + fieldData.events[type] + ')'); // eval is evil, I know.\n              if (!qx.lang.Type.isFunction(func)) {\n                throw new Error();\n              }\n              formElement.addListener(type, func, formElement);\n            } catch (e) {\n              this.warn('Invalid \\'' + type + '\\' event handler for form element \\'' + key + '\\'.');\n            }\n          }\n        }\n\n        // Putting it all together\n        let label = fieldData.label;\n        this._form.add(formElement, label, validator);\n        // Add the form elements as objects owned by the form widget\n        if (qx.core.Environment.get('module.objectid') === true) {\n          formElement.setQxObjectId(key);\n          this._form.addOwnedQxObject(formElement);\n        }\n      }\n\n      let view = new cv.ui.manager.form.ElementFormRenderer(this._form);\n      view.getLayout().setColumnFlex(0, 0);\n      view.getLayout().setColumnMaxWidth(0, this.getLabelColumnWidth());\n      view.getLayout().setColumnFlex(1, 1);\n      view.getLayout().set({\n        spacingX: 8\n      });\n\n      view.setAllowGrowX(true);\n      const scroll = new qx.ui.container.Scroll(view);\n      scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      this._rootListenerId = qx.core.Init.getApplication()\n        .getRoot()\n        .addListener('resize', function () {\n          scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n        });\n\n      view.bind('width', scroll, 'width');\n      view.bind('height', scroll, 'height');\n      this._formContainer.add(scroll);\n      this._form.getValidationManager().validate();\n      if (firstWidget) {\n        qx.event.Timer.once(\n          () => {\n            firstWidget.focus();\n          },\n          this,\n          200\n        );\n      }\n    },\n\n    _handleOk() {\n      this.hide();\n      if (this.getCallback()) {\n        const data = qx.util.Serializer.toNativeObject(this.getModel());\n        const mappedNames = Object.keys(this.__mappedKeys.map);\n        mappedNames.forEach(mappedKey => {\n          if (Object.prototype.hasOwnProperty.call(data, mappedKey)) {\n            data[this.__mappedKeys.map[mappedKey]] = data[mappedKey];\n            delete data[mappedKey];\n          }\n        });\n        if (this.__hints) {\n          Object.keys(this.__hints).forEach(name => (data[name] = this.__hints[name]));\n        }\n        this.getCallback().call(this.getContext(), data);\n      }\n      this.resetCallback();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    if (this._rootListenerId) {\n      qx.core.Init.getApplication().getRoot().removeListenerById(this._rootListenerId);\n      this._rootListenerId = null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}