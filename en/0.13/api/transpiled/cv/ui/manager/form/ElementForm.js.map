{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/form/ElementForm.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "Form",
    "properties",
    "labelColumnWidth",
    "refine",
    "init",
    "useBlocker",
    "blockerOpacity",
    "blockerColor",
    "members",
    "__mappedKeys",
    "__hints",
    "_rootListenerId",
    "_applyFormData",
    "formData",
    "old",
    "map",
    "inverse",
    "firstWidget",
    "_formController",
    "getModel",
    "removeAllBindings",
    "dispose",
    "e",
    "_form",
    "getValidationManager",
    "_formContainer",
    "removeAll",
    "modelData",
    "Object",
    "getOwnPropertyNames",
    "key",
    "i",
    "mappedKey",
    "replaceAll",
    "match",
    "p1",
    "toUpperCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "substr",
    "length",
    "value",
    "undefined",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "ui",
    "form",
    "core",
    "Environment",
    "get",
    "setQxObjectId",
    "addOwnedQxObject",
    "controller",
    "_onFormReady",
    "atom",
    "fieldData",
    "formElement",
    "type",
    "toLowerCase",
    "addGroupHeader",
    "TextArea",
    "setMinimalLineHeight",
    "lines",
    "autoSize",
    "setAutoSize",
    "setMinHeight",
    "setHeight",
    "setLiveUpdate",
    "TextField",
    "maxLength",
    "setMaxLength",
    "cv",
    "manager",
    "SourceCodeField",
    "language",
    "DateField",
    "dateFormat",
    "setDateFormat",
    "PasswordField",
    "getContentElement",
    "setAttribute",
    "ComboBox",
    "parseComboOptions",
    "options",
    "Array",
    "isArray",
    "forEach",
    "item",
    "listItem",
    "ListItem",
    "label",
    "icon",
    "add",
    "keys",
    "groupName",
    "groupItem",
    "set",
    "anonymous",
    "appearance",
    "Promise",
    "setPlaceholder",
    "tr",
    "then",
    "placeholder",
    "err",
    "error",
    "VirtualComboBox",
    "iconPath",
    "labelPath",
    "validation",
    "getChildControl",
    "selection",
    "getSelection",
    "addListener",
    "ev",
    "selected",
    "getItem",
    "Option",
    "getHints",
    "parseVComboOptions",
    "push",
    "hints",
    "groupModel",
    "setType",
    "setDelegate",
    "createItem",
    "bindItem",
    "index",
    "bindProperty",
    "converter",
    "SelectBox",
    "setLabel",
    "addState",
    "resetLabel",
    "removeState",
    "List",
    "VirtualSelectBox",
    "bindDefaultProperties",
    "iconOptions",
    "trim",
    "RadioGroup",
    "orientation",
    "setUserData",
    "radioButton",
    "RadioButton",
    "CheckBox",
    "setTriState",
    "Spinner",
    "min",
    "setMinimum",
    "max",
    "setMaximum",
    "step",
    "setSingleStep",
    "fractionsDigits",
    "fd",
    "nf",
    "util",
    "format",
    "NumberFormat",
    "setMinimumFractionDigits",
    "setMaximumFractionDigits",
    "setNumberFormat",
    "addTarget",
    "validate",
    "bind",
    "option",
    "some",
    "getValue",
    "lang",
    "Function",
    "selectables",
    "getSelectables",
    "selectable",
    "sValue",
    "getUserData",
    "validator",
    "required",
    "setRequired",
    "Validate",
    "charAt",
    "regExp",
    "RegExp",
    "errorMessage",
    "AsyncValidator",
    "Type",
    "isString",
    "proxy",
    "method",
    "replace",
    "eval",
    "warn",
    "message",
    "invalidMessage",
    "validationFunc",
    "validatorObj",
    "__asyncInProgress",
    "valid",
    "setValid",
    "locale",
    "Manager",
    "width",
    "setWidth",
    "enabled",
    "setEnabled",
    "help",
    "isObject",
    "events",
    "func",
    "isFunction",
    "Error",
    "view",
    "ElementFormRenderer",
    "getLayout",
    "setColumnFlex",
    "setColumnMaxWidth",
    "getLabelColumnWidth",
    "spacingX",
    "setAllowGrowX",
    "scroll",
    "container",
    "Scroll",
    "setMaxHeight",
    "bom",
    "Document",
    "getHeight",
    "Init",
    "getApplication",
    "getRoot",
    "event",
    "Timer",
    "once",
    "focus",
    "_handleOk",
    "hide",
    "getCallback",
    "Serializer",
    "toNativeObject",
    "mappedNames",
    "name",
    "getContext",
    "resetCallback",
    "destruct",
    "removeListenerById",
    "ElementForm"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n *\n */\nqx.Class.define('cv.ui.manager.form.ElementForm', {\n  extend: qxl.dialog.Form,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    labelColumnWidth: {\n      refine: true,\n      init: 300\n    },\n\n    useBlocker: {\n      refine: true,\n      init: true\n    },\n\n    blockerOpacity: {\n      refine: true,\n      init: 0.9\n    },\n\n    blockerColor: {\n      refine: true,\n      init: '#585858'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __mappedKeys: null,\n    __hints: null,\n    _rootListenerId: null,\n\n    _applyFormData: function (formData, old) {\n      this.__mappedKeys = {\n        map: {},\n        inverse: {}\n      };\n      let firstWidget;\n      if (this._formController) {\n        try {\n          this.getModel().removeAllBindings();\n          this._formController.dispose();\n        } catch (e) {\n        }\n      }\n      if (this._form) {\n        try {\n          this._form.getValidationManager().removeAllBindings();\n          this._form.dispose();\n        } catch (e) {\n        }\n      }\n      this._formContainer.removeAll();\n      if (!formData) {\n        return;\n      }\n      if (this.getModel()) {\n        this.getModel().removeAllBindings();\n        this.getModel().dispose();\n      }\n      let modelData = {};\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        let i = 0;\n        let mappedKey = key.replaceAll(/[-_\\.#]+([a-z])/g, (match, p1) => p1.toUpperCase()) + i++;\n        while (Object.prototype.hasOwnProperty.call(modelData, mappedKey)) {\n          mappedKey = mappedKey.substr(0, mappedKey.length - 1) + i++;\n        }\n        if (mappedKey !== key) {\n          this.__mappedKeys.map[mappedKey] = key;\n          this.__mappedKeys.inverse[key] = mappedKey;\n        }\n        modelData[mappedKey] = formData[key].value !== undefined\n          ? formData[key].value\n          : null;\n      }\n      let model = qx.data.marshal.Json.createModel(modelData);\n      this.setModel(model);\n      // form\n      this._form = new qx.ui.form.Form();\n      if (qx.core.Environment.get('module.objectid') === true) {\n        this._form.setQxObjectId('form');\n        this.addOwnedQxObject(this._form);\n      }\n      this._formController = new qx.data.controller.Object(this.getModel());\n      this._onFormReady(this._form);\n      let i = 0;\n      let atom;\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        const mappedKey = this.__mappedKeys.inverse[key];\n        let fieldData = formData[key];\n        let formElement = null;\n        switch (fieldData.type.toLowerCase()) {\n          case 'groupheader':\n            this._form.addGroupHeader(fieldData.value);\n            break;\n          case 'textarea':\n            formElement = new qx.ui.form.TextArea();\n            formElement.setMinimalLineHeight(fieldData.lines);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case 'textfield':\n            formElement = new qx.ui.form.TextField();\n            if (fieldData.maxLength) {\n formElement.setMaxLength(fieldData.maxLength); \n}\n            formElement.setLiveUpdate(true);\n            break;\n          case 'sourceeditor':\n            formElement = new cv.ui.manager.form.SourceCodeField('', fieldData.language);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            break;\n          case 'datefield':\n          case 'date':\n            formElement = new qx.ui.form.DateField();\n            if (fieldData.dateFormat) {\n              formElement.setDateFormat(fieldData.dateFormat);\n            }\n            break;\n          case 'passwordfield':\n          case 'password':\n            formElement = new qx.ui.form.PasswordField();\n            formElement.getContentElement().setAttribute('autocomplete', 'password');\n            break;\n          case 'combobox': {\n            formElement = new qx.ui.form.ComboBox();\n            const parseComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(function (item) {\n                  let listItem = new qx.ui.form.ListItem(item.label, item.icon);\n                  formElement.add(listItem);\n                });\n              } else if (typeof options === 'object') {\n                // grouped options\n                Object.keys(options).forEach(groupName => {\n                  let groupItem = new qx.ui.form.ListItem(groupName);\n                  groupItem.set({\n                    anonymous: true,\n                    appearance: 'optiongroup'\n                  });\n                  formElement.add(groupItem);\n                  options[groupName].forEach(function (item) {\n                    let listItem = new qx.ui.form.ListItem(item.label, item.icon, item.value);\n                    formElement.add(listItem);\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              fieldData.options.then(options => {\n                formElement.setPlaceholder(fieldData.placeholder);\n                parseComboOptions(options);\n              }, this).catch(err => {\n                this.error(err);\n                formElement.setPlaceholder(this.tr('Possible values could no be retrieved, please check browser console for error details'));\n              }, this);\n            } else {\n              parseComboOptions(fieldData.options);\n            }\n            break;\n          }\n          case 'virtualcombobox': {\n            formElement = new qx.ui.form.VirtualComboBox();\n            formElement.set({\n              iconPath: 'icon',\n              labelPath: 'value'\n            });\n            if (fieldData.validation) {\n              formElement.getChildControl('textfield').setLiveUpdate(true);\n            }\n            const selection = formElement.getChildControl('dropdown').getSelection();\n            selection.addListener('change', function (ev) {\n              const selected = selection.getItem(0);\n              if (selected && selected instanceof cv.ui.manager.form.Option) {\n                this.__hints = selected.getHints();\n              } else {\n                this.__hints = null;\n              }\n            }, this);\n            model = new qx.data.Array();\n            const parseVComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(item => {\n                  model.push(new cv.ui.manager.form.Option(item.label + (item.value ? ` (${item.value})` : ''), item.icon, item.value, item.hints));\n                });\n              } else if (typeof options === 'object') {\n                Object.keys(options).forEach(groupName => {\n                  const groupModel = new cv.ui.manager.form.Option(groupName);\n                  groupModel.setType('group');\n                  model.push(groupModel);\n                  options[groupName].forEach(function (item) {\n                    model.push(new cv.ui.manager.form.Option(item.label + (item.value ? ` (${item.value})` : ''), item.icon, item.value, item.hints));\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              fieldData.options.then(options => {\n                formElement.setPlaceholder(fieldData.placeholder);\n                parseVComboOptions(options);\n              }, this).catch(err => {\n                this.error(err);\n                formElement.setPlaceholder(this.tr('Possible values could no be retrieved, please check browser console for error details'));\n              }, this);\n            } else {\n              parseVComboOptions(fieldData.options);\n            }\n\n            formElement.setDelegate({\n              createItem: function () {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem: function (controller, item, index) {\n                controller.bindProperty('icon', 'icon', null, item, index);\n                controller.bindProperty('label', 'label', null, item, index);\n                controller.bindProperty('type', 'appearance', {\n                  converter: function (value) {\n                    switch (value) {\n                      case 'state':\n                        return 'state-option';\n                      case 'error':\n                        return 'error-option';\n                      case 'group':\n                        return 'optiongroup';\n                      default:\n                        return 'listitem';\n                    }\n                  }\n                }, item, index);\n                controller.bindProperty('type', 'anonymous', {\n                  converter: function (value) {\n                    return value === 'group';\n                  }\n                }, item, index);\n              }\n            });\n            formElement.setModel(model);\n            break;\n          }\n\n          case 'selectbox': {\n            formElement = new qx.ui.form.SelectBox();\n            if (fieldData.options instanceof Promise) {\n              atom = formElement.getChildControl('atom');\n              atom.setLabel(this.tr('Loading...'));\n              atom.addState('loading');\n              fieldData.options.then(options => {\n                const atom = formElement.getChildControl('atom');\n                atom.resetLabel();\n                atom.removeState('loading');\n                model = qx.data.marshal.Json.createModel(options);\n                // eslint-disable-next-line no-new\n                new qx.data.controller.List(model, formElement, 'label');\n              }, this).catch(err => {\n                this.error(err);\n                const atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr('Possible values could no be retrieved, please check browser console for error details'));\n                atom.removeState('loading');\n                atom.addState('error');\n              }, this);\n            } else {\n              model = qx.data.marshal.Json.createModel(fieldData.options);\n              // eslint-disable-next-line no-new\n              new qx.data.controller.List(model, formElement, 'label');\n            }\n            break;\n          }\n\n          case 'virtualselectbox':\n            formElement = new cv.ui.manager.form.VirtualSelectBox();\n            model = new qx.data.Array();\n            if (fieldData.options) {\n              if (fieldData.options instanceof Promise) {\n                atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr('Loading...'));\n                atom.addState('loading');\n                fieldData.options.then(options => {\n                  const atom = formElement.getChildControl('atom');\n                  atom.resetLabel();\n                  atom.removeState('loading');\n                  options.forEach(item => {\n                    model.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                  });\n                }).catch(err => {\n                  this.error(err);\n                  const atom = formElement.getChildControl('atom');\n                  atom.setLabel(this.tr('Possible values could no be retrieved, please check browser console for error details'));\n                  atom.removeState('loading');\n                  atom.addState('error');\n                }, this);\n              } else {\n                fieldData.options.forEach(item => {\n                  model.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                });\n              }\n            }\n            formElement.setDelegate({\n              createItem: function() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem:  function (controller, item, index) {\n                controller.bindDefaultProperties(item, index);\n                controller.bindProperty('value', 'model', null, item, index);\n              }\n            });\n            formElement.set({\n              labelPath: 'label',\n              iconPath: 'icon',\n              iconOptions: {\n                converter: function (value) {\n                  if (typeof value === 'function') {\n                    return value().trim();\n                  }\n                  return value;\n                }\n              },\n              model: model\n            });\n            break;\n          case 'radiogroup':\n            formElement = new qx.ui.form.RadioGroup();\n            if (fieldData.orientation) {\n              formElement.setUserData('orientation', fieldData.orientation);\n            }\n            fieldData.options.forEach(function (item) {\n              let radioButton = new qx.ui.form.RadioButton(item.label);\n              radioButton.setUserData(\n                'value',\n                item.value !== undefined ? item.value : item.label\n              );\n              formElement.add(radioButton);\n            }, this);\n            break;\n          case 'label':\n            formElement = new qx.ui.form.TextField(); // dummy\n            formElement.setUserData('excluded', true);\n            break;\n          case 'checkbox':\n            formElement = new cv.ui.manager.form.CheckBox();\n            formElement.setTriState(true);\n            break;\n          case 'spinner':\n            formElement = new qx.ui.form.Spinner();\n            if (fieldData.min) {\n              formElement.setMinimum(fieldData.min);\n            }\n            if (fieldData.max) {\n              formElement.setMaximum(fieldData.max);\n            }\n            if (fieldData.step) {\n              formElement.setSingleStep(fieldData.step);\n            }\n            if (fieldData.fractionsDigits) {\n              let fd = fieldData.fractionsDigits;\n              let nf = new qx.util.format.NumberFormat();\n              if (fd.min) {\n                nf.setMinimumFractionDigits(fd.min);\n              }\n              if (fd.max) {\n                nf.setMaximumFractionDigits(fd.max);\n              }\n              formElement.setNumberFormat(nf);\n            }\n            break;\n          default:\n            this.error('Invalid form field type:' + fieldData.type);\n        }\n        formElement.setUserData('key', key);\n        formElement.setUserData('mappedKey', mappedKey);\n        if (i === 0) {\n          firstWidget = formElement;\n        }\n        i++;\n        if (typeof fieldData.type == 'string') {\n          switch (fieldData.type.toLowerCase()) {\n            case 'textarea':\n            case 'textfield':\n            case 'passwordfield':\n            case 'combobox':\n            case 'virtualcombobox':\n            case 'datefield':\n            case 'spinner':\n            case 'sourceeditor':\n              this._formController.addTarget(formElement, 'value', mappedKey, true, null, {\n                converter: function (value) {\n                  this.getValidationManager().validate();\n                  return value;\n                }.bind(this._form)\n              });\n              break;\n            case 'virtualselectbox':\n              this._formController.addTarget(formElement, 'value', mappedKey, true, {\n                converter: function (value) {\n                  if (typeof value === 'string') {\n                    let option;\n                    this.getModel().some(item => {\n                      if (item.getValue() === value) {\n                        option = item;\n                        return true;\n                      }\n                      return false;\n                    });\n                    return option;\n                  }\n                  return value;\n                }.bind(formElement)\n              }, {\n                converter: function (option) {\n                  this.getValidationManager().validate();\n                  return option ? option.getValue() : null;\n                }.bind(this._form)\n              });\n              break;\n            case 'checkbox':\n              this._formController.addTarget(formElement, 'value', mappedKey, true, null);\n              break;\n            case 'selectbox':\n              this._formController.addTarget(formElement, 'selection', mappedKey, true, {\n                converter: qx.lang.Function.bind(function (value) {\n                  let selected = null;\n                  let selectables = this.getSelectables();\n                  selectables.forEach(function (selectable) {\n                    if (selectable.getModel().getValue() === value) {\n                      selected = selectable;\n                    }\n                  }, this);\n                  if (!selected) {\n                    return [selectables[0]];\n                  }\n                  return [selected];\n                }, formElement)\n              }, {\n                converter: qx.lang.Function.bind(function (selection) {\n                  return selection[0].getModel().getValue();\n                }, formElement)\n              });\n              break;\n            case 'radiogroup':\n              this._formController.addTarget(formElement, 'selection', mappedKey, true, {\n                converter: qx.lang.Function.bind(function (value) {\n                  let selectables = this.getSelectables();\n                  let selection = [];\n                  if (value) {\n                    selectables.forEach(function (selectable) {\n                      let sValue = selectable.getUserData('value');\n                      if (sValue === value) {\n                        selection = [selectable];\n                      }\n                    }, this);\n                  }\n                  return selection;\n                }, formElement)\n              }, {\n                converter: function (selection) {\n                  return selection[0].getUserData('value');\n                }\n              });\n              break;\n          }\n        }\n        /**\n         * Validation\n         */\n        let validator = null;\n        if (formElement && fieldData.validation) {\n          // required field\n          if (fieldData.validation.required) {\n            formElement.setRequired(true);\n          }\n          // sync validation\n          if (fieldData.validation.validator) {\n            validator = fieldData.validation.validator;\n            if (typeof validator == 'string') {\n              if (qx.util.Validate[validator]) {\n                validator = qx.util.Validate[validator]();\n              } else if (validator.charAt(0) === '/') {\n                validator = qx.util.Validate.regExp(\n                  new RegExp(validator.substr(1, validator.length - 2)),\n                  fieldData.validation.errorMessage\n                );\n              } else {\n                this.error('Invalid string validator.');\n              }\n            } else if (!(validator instanceof qx.ui.form.validation.AsyncValidator) && typeof validator !== 'function') {\n              this.error('Invalid validator.');\n            }\n          }\n          // async validation\n          if (qx.lang.Type.isString(fieldData.validation.proxy) &&\n            qx.lang.Type.isString(fieldData.validation.method)\n          ) {\n            /**\n             * fieldData.validation.proxy\n             * the name of a global variable (or path) to a function that acts as the proxy of\n             * the 'send' or 'execute' function of a preconfigured JsonRpc client. The function\n             * receives the following parameters: service method (string), parameters (array)\n             * and callback (function). It proxies the parameters to the given JsonRpc method and\n             * calls the callback with the result (true if valid, false if not) received from the\n             * server. The JsonRpc service name is preconfigured by the server and cannot be\n             * changed by the client.\n             */\n              // clean\n            let proxy = fieldData.validation.proxy.replace(/;\\n/g, '');\n            try {\n              // eslint-disable-next-line no-eval\n              eval('proxy = ' + proxy + ';');\n            } catch (e) {\n              this.warn('Invalid proxy name');\n            }\n            if (typeof proxy == 'function') {\n              let method = fieldData.validation.method;\n              let message = fieldData.validation.invalidMessage;\n              let validationFunc = function (validatorObj, value) {\n                if (!validatorObj.__asyncInProgress) {\n                  validatorObj.__asyncInProgress = true;\n                  proxy(method, [value], function (valid) {\n                    validatorObj.setValid(valid, message || qx.locale.Manager.tr('Value is invalid'));\n                    validatorObj.__asyncInProgress = false;\n                  });\n                }\n              };\n              validator = new qx.ui.form.validation.AsyncValidator(validationFunc);\n            }\n          }\n        }\n\n        /**\n         * other widget properties @todo: allow to set all properties\n         */\n        if (fieldData.width !== undefined) {\n          formElement.setWidth(fieldData.width);\n        }\n        if (fieldData.placeholder !== undefined) {\n          formElement.setPlaceholder(fieldData.placeholder);\n        }\n        if (fieldData.enabled !== undefined) {\n          formElement.setEnabled(fieldData.enabled);\n        }\n        if (fieldData.help !== undefined) {\n          formElement.setUserData('help', fieldData.help);\n        }\n\n        /**\n         * Events\n         */\n        if (qx.lang.Type.isObject(fieldData.events)) {\n          for (let type in fieldData.events) {\n            try {\n              // eslint-disable-next-line no-eval\n              let func = eval('(' + fieldData.events[type] + ')'); // eval is evil, I know.\n              if (!qx.lang.Type.isFunction(func)) {\n                throw new Error();\n              }\n              formElement.addListener(type, func, formElement);\n            } catch (e) {\n              this.warn('Invalid \\'' + type + '\\' event handler for form element \\'' + key + '\\'.');\n            }\n          }\n        }\n\n        // Putting it all together\n        let label = fieldData.label;\n        this._form.add(formElement, label, validator);\n        // Add the form elements as objects owned by the form widget\n        if (qx.core.Environment.get('module.objectid') === true) {\n          formElement.setQxObjectId(key);\n          this._form.addOwnedQxObject(formElement);\n        }\n      }\n\n\n      let view = new cv.ui.manager.form.ElementFormRenderer(this._form);\n      view.getLayout().setColumnFlex(0, 0);\n      view.getLayout().setColumnMaxWidth(0, this.getLabelColumnWidth());\n      view.getLayout().setColumnFlex(1, 1);\n      view.getLayout().set({\n        spacingX: 8\n      });\n      view.setAllowGrowX(true);\n      const scroll = new qx.ui.container.Scroll(view);\n      scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      this._rootListenerId = qx.core.Init.getApplication().getRoot().addListener('resize', function () {\n        scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      });\n\n      view.bind('width', scroll, 'width');\n      view.bind('height', scroll, 'height');\n      this._formContainer.add(scroll);\n      this._form.getValidationManager().validate();\n      if (firstWidget) {\n        qx.event.Timer.once(() => {\n          firstWidget.focus();\n        }, this, 200);\n      }\n    },\n\n    _handleOk: function () {\n      this.hide();\n      if (this.getCallback()) {\n        const data = qx.util.Serializer.toNativeObject(this.getModel());\n        const mappedNames = Object.keys(this.__mappedKeys.map);\n        mappedNames.forEach(mappedKey => {\n          if (Object.prototype.hasOwnProperty.call(data, mappedKey)) {\n            data[this.__mappedKeys.map[mappedKey]] = data[mappedKey];\n            delete data[mappedKey];\n          }\n        });\n        if (this.__hints) {\n          Object.keys(this.__hints).forEach(name => data[name] = this.__hints[name]);\n        }\n        this.getCallback().call(\n          this.getContext(),\n          data\n        );\n      }\n      this.resetCallback();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    if (this._rootListenerId) {\n      qx.core.Init.getApplication().getRoot().removeListenerById(this._rootListenerId);\n      this._rootListenerId = null;\n    }\n  }\n});\n"
  ]
}