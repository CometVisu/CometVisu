{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "qxl",
    "dialog",
    "Form",
    "properties",
    "labelColumnWidth",
    "refine",
    "init",
    "useBlocker",
    "blockerOpacity",
    "blockerColor",
    "members",
    "__mappedKeys",
    "__hints",
    "_rootListenerId",
    "_applyFormData",
    "formData",
    "old",
    "map",
    "inverse",
    "firstWidget",
    "_formController",
    "getModel",
    "removeAllBindings",
    "dispose",
    "e",
    "_form",
    "getValidationManager",
    "_formContainer",
    "removeAll",
    "modelData",
    "Object",
    "getOwnPropertyNames",
    "key",
    "i",
    "mappedKey",
    "replaceAll",
    "match",
    "p1",
    "toUpperCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "substr",
    "length",
    "value",
    "undefined",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "setModel",
    "ui",
    "form",
    "core",
    "Environment",
    "get",
    "setQxObjectId",
    "addOwnedQxObject",
    "controller",
    "_onFormReady",
    "atom",
    "fieldData",
    "formElement",
    "elementModel",
    "elementModelReady",
    "type",
    "toLowerCase",
    "addGroupHeader",
    "TextArea",
    "setMinimalLineHeight",
    "lines",
    "autoSize",
    "setAutoSize",
    "setMinHeight",
    "setHeight",
    "setLiveUpdate",
    "TextField",
    "maxLength",
    "setMaxLength",
    "cv",
    "manager",
    "SourceCodeField",
    "language",
    "DateField",
    "dateFormat",
    "setDateFormat",
    "PasswordField",
    "getContentElement",
    "setAttribute",
    "ComboBox",
    "parseComboOptions",
    "options",
    "Array",
    "isArray",
    "forEach",
    "item",
    "listItem",
    "ListItem",
    "label",
    "icon",
    "add",
    "keys",
    "groupName",
    "groupItem",
    "set",
    "anonymous",
    "appearance",
    "Promise",
    "setPlaceholder",
    "tr",
    "then",
    "placeholder",
    "err",
    "error",
    "VirtualComboBox",
    "iconPath",
    "labelPath",
    "validation",
    "getChildControl",
    "selection",
    "getSelection",
    "addListener",
    "ev",
    "selected",
    "getItem",
    "Option",
    "getHints",
    "parseVComboOptions",
    "push",
    "hints",
    "groupModel",
    "setType",
    "setDelegate",
    "createItem",
    "bindItem",
    "index",
    "bindProperty",
    "converter",
    "SelectBox",
    "setLabel",
    "addState",
    "resetLabel",
    "removeState",
    "List",
    "VirtualSelectBox",
    "bindDefaultProperties",
    "iconOptions",
    "trim",
    "RadioGroup",
    "orientation",
    "setUserData",
    "radioButton",
    "RadioButton",
    "CheckBox",
    "setTriState",
    "Spinner",
    "min",
    "setMinimum",
    "max",
    "setMaximum",
    "step",
    "setSingleStep",
    "fractionsDigits",
    "fd",
    "nf",
    "util",
    "format",
    "NumberFormat",
    "setMinimumFractionDigits",
    "setMaximumFractionDigits",
    "setNumberFormat",
    "reverseOptions",
    "bidirectional",
    "handled",
    "validate",
    "bind",
    "option",
    "some",
    "getValue",
    "addTarget",
    "selectables",
    "getSelectables",
    "selectable",
    "sValue",
    "getUserData",
    "validator",
    "required",
    "setRequired",
    "Validate",
    "charAt",
    "regExp",
    "RegExp",
    "errorMessage",
    "AsyncValidator",
    "lang",
    "Type",
    "isString",
    "proxy",
    "method",
    "replace",
    "eval",
    "warn",
    "message",
    "invalidMessage",
    "validationFunc",
    "validatorObj",
    "__asyncInProgress",
    "valid",
    "setValid",
    "locale",
    "Manager",
    "width",
    "setWidth",
    "enabled",
    "setEnabled",
    "help",
    "isObject",
    "events",
    "func",
    "isFunction",
    "Error",
    "view",
    "ElementFormRenderer",
    "getLayout",
    "setColumnFlex",
    "setColumnMaxWidth",
    "getLabelColumnWidth",
    "spacingX",
    "setAllowGrowX",
    "scroll",
    "container",
    "Scroll",
    "setMaxHeight",
    "bom",
    "Document",
    "getHeight",
    "Init",
    "getApplication",
    "getRoot",
    "event",
    "Timer",
    "once",
    "focus",
    "_handleOk",
    "hide",
    "getCallback",
    "Serializer",
    "toNativeObject",
    "mappedNames",
    "name",
    "getContext",
    "resetCallback",
    "destruct",
    "removeListenerById",
    "ElementForm"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/form/ElementForm.js"
  ],
  "sourcesContent": [
    "/* ElementForm.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.ui.manager.form.ElementForm', {\n  extend: qxl.dialog.Form,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    labelColumnWidth: {\n      refine: true,\n      init: 300\n    },\n\n    useBlocker: {\n      refine: true,\n      init: true\n    },\n\n    blockerOpacity: {\n      refine: true,\n      init: 0.9\n    },\n\n    blockerColor: {\n      refine: true,\n      init: '#585858'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __mappedKeys: null,\n    __hints: null,\n    _rootListenerId: null,\n\n    _applyFormData(formData, old) {\n      this.__mappedKeys = {\n        map: {},\n        inverse: {}\n      };\n\n      let firstWidget;\n      if (this._formController) {\n        try {\n          this.getModel().removeAllBindings();\n          this._formController.dispose();\n        } catch (e) {}\n      }\n      if (this._form) {\n        try {\n          this._form.getValidationManager().removeAllBindings();\n          this._form.dispose();\n        } catch (e) {}\n      }\n      this._formContainer.removeAll();\n      if (!formData) {\n        return;\n      }\n      if (this.getModel()) {\n        this.getModel().removeAllBindings();\n        this.getModel().dispose();\n      }\n      let modelData = {};\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        let i = 0;\n        let mappedKey = key.replaceAll(/[-_\\.#]+([a-z])/g, (match, p1) => p1.toUpperCase()) + i++;\n        while (Object.prototype.hasOwnProperty.call(modelData, mappedKey)) {\n          mappedKey = mappedKey.substr(0, mappedKey.length - 1) + i++;\n        }\n        if (mappedKey !== key) {\n          this.__mappedKeys.map[mappedKey] = key;\n          this.__mappedKeys.inverse[key] = mappedKey;\n        }\n        modelData[mappedKey] = formData[key].value !== undefined ? formData[key].value : null;\n      }\n      let model = qx.data.marshal.Json.createModel(modelData);\n      this.setModel(model);\n      // form\n      this._form = new qx.ui.form.Form();\n      if (qx.core.Environment.get('module.objectid') === true) {\n        this._form.setQxObjectId('form');\n        this.addOwnedQxObject(this._form);\n      }\n      this._formController = new qx.data.controller.Object(model);\n      this._onFormReady(this._form);\n      let i = 0;\n      let atom;\n      for (let key of Object.getOwnPropertyNames(formData)) {\n        const mappedKey = this.__mappedKeys.inverse[key];\n        let fieldData = formData[key];\n        let formElement = null;\n        let elementModel = null;\n        let elementModelReady = null;\n        switch (fieldData.type.toLowerCase()) {\n          case 'groupheader':\n            this._form.addGroupHeader(fieldData.value);\n            break;\n          case 'textarea':\n            formElement = new qx.ui.form.TextArea();\n            formElement.setMinimalLineHeight(fieldData.lines);\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case 'textfield':\n            formElement = new qx.ui.form.TextField();\n            if (fieldData.maxLength) {\n              formElement.setMaxLength(fieldData.maxLength);\n            }\n            formElement.setLiveUpdate(true);\n            break;\n          case 'sourceeditor':\n            formElement = new cv.ui.manager.form.SourceCodeField('', fieldData.language);\n\n            if (fieldData.autoSize === true) {\n              formElement.setAutoSize(true);\n              formElement.setMinHeight(fieldData.lines * 16);\n            } else {\n              formElement.setHeight(fieldData.lines * 16);\n            }\n            break;\n          case 'datefield':\n          case 'date':\n            formElement = new qx.ui.form.DateField();\n            if (fieldData.dateFormat) {\n              formElement.setDateFormat(fieldData.dateFormat);\n            }\n            break;\n          case 'passwordfield':\n          case 'password':\n            formElement = new qx.ui.form.PasswordField();\n            formElement.getContentElement().setAttribute('autocomplete', 'password');\n            break;\n          case 'combobox': {\n            formElement = new qx.ui.form.ComboBox();\n            const parseComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(function (item) {\n                  let listItem = new qx.ui.form.ListItem(item.label, item.icon);\n                  formElement.add(listItem);\n                });\n              } else if (typeof options === 'object') {\n                // grouped options\n                Object.keys(options).forEach(groupName => {\n                  let groupItem = new qx.ui.form.ListItem(groupName);\n                  groupItem.set({\n                    anonymous: true,\n                    appearance: 'optiongroup'\n                  });\n\n                  formElement.add(groupItem);\n                  options[groupName].forEach(function (item) {\n                    let listItem = new qx.ui.form.ListItem(item.label, item.icon, item.value);\n\n                    formElement.add(listItem);\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              elementModelReady = fieldData.options\n                .then(options => {\n                  formElement.setPlaceholder(fieldData.placeholder);\n                  parseComboOptions(options);\n                  return true;\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  formElement.setPlaceholder(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n                }, this);\n            } else {\n              parseComboOptions(fieldData.options);\n            }\n            break;\n          }\n          case 'virtualcombobox': {\n            formElement = new qx.ui.form.VirtualComboBox();\n            formElement.set({\n              iconPath: 'icon',\n              labelPath: 'value'\n            });\n\n            if (fieldData.validation) {\n              formElement.getChildControl('textfield').setLiveUpdate(true);\n            }\n            const selection = formElement.getChildControl('dropdown').getSelection();\n            selection.addListener('change', ev => {\n              const selected = selection.getItem(0);\n              if (selected && selected instanceof cv.ui.manager.form.Option) {\n                this.__hints = selected.getHints();\n              } else {\n                this.__hints = null;\n              }\n            });\n            elementModel = new qx.data.Array();\n            const parseVComboOptions = function (options) {\n              if (Array.isArray(options)) {\n                options.forEach(item => {\n                  elementModel.push(\n                    new cv.ui.manager.form.Option(\n                      item.label + (item.value ? ` (${item.value})` : ''),\n                      item.icon,\n                      item.value,\n                      item.hints\n                    )\n                  );\n                });\n              } else if (typeof options === 'object') {\n                Object.keys(options).forEach(groupName => {\n                  const groupModel = new cv.ui.manager.form.Option(groupName);\n                  groupModel.setType('group');\n                  elementModel.push(groupModel);\n                  options[groupName].forEach(function (item) {\n                    elementModel.push(\n                      new cv.ui.manager.form.Option(\n                        item.label + (item.value ? ` (${item.value})` : ''),\n                        item.icon,\n                        item.value,\n                        item.hints\n                      )\n                    );\n                  });\n                });\n              }\n            };\n            if (fieldData.options instanceof Promise) {\n              formElement.setPlaceholder(this.tr('Loading...'));\n              fieldData.options\n                .then(options => {\n                  formElement.setPlaceholder(fieldData.placeholder);\n                  parseVComboOptions(options);\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  formElement.setPlaceholder(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n                }, this);\n            } else {\n              parseVComboOptions(fieldData.options);\n            }\n\n            formElement.setDelegate({\n              createItem() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem(controller, item, index) {\n                controller.bindProperty('icon', 'icon', null, item, index);\n                controller.bindProperty('label', 'label', null, item, index);\n                controller.bindProperty(\n                  'type',\n                  'appearance',\n                  {\n                    converter(value) {\n                      switch (value) {\n                        case 'state':\n                          return 'state-option';\n                        case 'error':\n                          return 'error-option';\n                        case 'group':\n                          return 'optiongroup';\n                        default:\n                          return 'listitem';\n                      }\n                    }\n                  },\n\n                  item,\n                  index\n                );\n\n                controller.bindProperty(\n                  'type',\n                  'anonymous',\n                  {\n                    converter(value) {\n                      return value === 'group';\n                    }\n                  },\n\n                  item,\n                  index\n                );\n              }\n            });\n\n            formElement.setModel(elementModel);\n            break;\n          }\n\n          case 'selectbox': {\n            formElement = new qx.ui.form.SelectBox();\n            if (fieldData.options instanceof Promise) {\n              atom = formElement.getChildControl('atom');\n              atom.setLabel(this.tr('Loading...'));\n              atom.addState('loading');\n              elementModelReady = fieldData.options\n                .then(options => {\n                  const atom = formElement.getChildControl('atom');\n                  atom.resetLabel();\n                  atom.removeState('loading');\n                  // eslint-disable-next-line no-new\n                  new qx.data.controller.List(qx.data.marshal.Json.createModel(options), formElement, 'label');\n\n                  return true;\n                }, this)\n                .catch(err => {\n                  this.error(err);\n                  const atom = formElement.getChildControl('atom');\n                  atom.setLabel(\n                    this.tr('Possible values could no be retrieved, please check browser console for error details')\n                  );\n\n                  atom.removeState('loading');\n                  atom.addState('error');\n                }, this);\n            } else {\n              // eslint-disable-next-line no-new\n              new qx.data.controller.List(qx.data.marshal.Json.createModel(fieldData.options), formElement, 'label');\n            }\n            break;\n          }\n\n          case 'virtualselectbox':\n            formElement = new cv.ui.manager.form.VirtualSelectBox();\n            elementModel = new qx.data.Array();\n            if (fieldData.options) {\n              if (fieldData.options instanceof Promise) {\n                atom = formElement.getChildControl('atom');\n                atom.setLabel(this.tr('Loading...'));\n                atom.addState('loading');\n                elementModelReady = fieldData.options\n                  .then(options => {\n                    const atom = formElement.getChildControl('atom');\n                    atom.resetLabel();\n                    atom.removeState('loading');\n                    options.forEach(item => {\n                      elementModel.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                    });\n                    return true;\n                  })\n                  .catch(err => {\n                    this.error(err);\n                    const atom = formElement.getChildControl('atom');\n                    atom.setLabel(\n                      this.tr('Possible values could no be retrieved, please check browser console for error details')\n                    );\n\n                    atom.removeState('loading');\n                    atom.addState('error');\n                  }, this);\n              } else {\n                fieldData.options.forEach(item => {\n                  elementModel.push(new cv.ui.manager.form.Option(item.label, item.icon, item.value));\n                });\n              }\n            }\n            formElement.setDelegate({\n              createItem() {\n                return new cv.ui.manager.form.ListItem();\n              },\n              bindItem(controller, item, index) {\n                controller.bindDefaultProperties(item, index);\n                controller.bindProperty('value', 'model', null, item, index);\n              }\n            });\n\n            formElement.set({\n              labelPath: 'label',\n              iconPath: 'icon',\n              iconOptions: {\n                converter(value) {\n                  if (typeof value === 'function') {\n                    return value().trim();\n                  }\n                  return value;\n                }\n              },\n\n              model: elementModel\n            });\n\n            break;\n          case 'radiogroup':\n            formElement = new qx.ui.form.RadioGroup();\n            if (fieldData.orientation) {\n              formElement.setUserData('orientation', fieldData.orientation);\n            }\n            fieldData.options.forEach(function (item) {\n              let radioButton = new qx.ui.form.RadioButton(item.label);\n              radioButton.setUserData('value', item.value !== undefined ? item.value : item.label);\n\n              formElement.add(radioButton);\n            }, this);\n            break;\n          case 'label':\n            formElement = new qx.ui.form.TextField(); // dummy\n            formElement.setUserData('excluded', true);\n            break;\n          case 'checkbox':\n            formElement = new cv.ui.manager.form.CheckBox();\n            formElement.setTriState(true);\n            break;\n          case 'spinner':\n            formElement = new qx.ui.form.Spinner();\n            if (fieldData.min) {\n              formElement.setMinimum(fieldData.min);\n            }\n            if (fieldData.max) {\n              formElement.setMaximum(fieldData.max);\n            }\n            if (fieldData.step) {\n              formElement.setSingleStep(fieldData.step);\n            }\n            if (fieldData.fractionsDigits) {\n              let fd = fieldData.fractionsDigits;\n              let nf = new qx.util.format.NumberFormat();\n              if (fd.min) {\n                nf.setMinimumFractionDigits(fd.min);\n              }\n              if (fd.max) {\n                nf.setMaximumFractionDigits(fd.max);\n              }\n              formElement.setNumberFormat(nf);\n            }\n            break;\n          default:\n            this.error('Invalid form field type:' + fieldData.type);\n        }\n\n        formElement.setUserData('key', key);\n        formElement.setUserData('mappedKey', mappedKey);\n        if (i === 0) {\n          firstWidget = formElement;\n        }\n        i++;\n        if (typeof fieldData.type == 'string') {\n          let options = null;\n          let reverseOptions = null;\n          let bidirectional = true;\n          let handled = false;\n          switch (fieldData.type.toLowerCase()) {\n            case 'textarea':\n            case 'textfield':\n            case 'passwordfield':\n            case 'combobox':\n            case 'virtualcombobox':\n            case 'datefield':\n            case 'spinner':\n            case 'sourceeditor':\n              reverseOptions = {\n                converter: function (value) {\n                  // just validate when the value has changed\n                  this.getValidationManager().validate();\n                  return value;\n                }.bind(this._form)\n              };\n\n              break;\n            case 'virtualselectbox':\n              options = {\n                converter: function (value) {\n                  if (typeof value === 'string') {\n                    let option;\n                    this.getModel().some(item => {\n                      if (item.getValue() === value) {\n                        option = item;\n                        return true;\n                      }\n                      return false;\n                    });\n                    return option;\n                  }\n                  return value;\n                }.bind(formElement)\n              };\n\n              reverseOptions = {\n                converter: function (option) {\n                  this.getValidationManager().validate();\n                  return option ? option.getValue() : null;\n                }.bind(this._form)\n              };\n\n              break;\n            case 'checkbox':\n              break;\n            case 'selectbox':\n              // for some strange timing reason this only works, when addTarget is called here\n              this._formController.addTarget(\n                formElement,\n                'selection',\n                mappedKey,\n                true,\n                {\n                  converter: function (value) {\n                    let selected = null;\n                    let selectables = this.getSelectables();\n                    selectables.some(function (selectable) {\n                      if (selectable.getModel().getValue() === value) {\n                        selected = selectable;\n                        return true;\n                      }\n                      return false;\n                    }, this);\n                    if (!selected) {\n                      return [selectables[0]];\n                    }\n                    return [selected];\n                  }.bind(formElement)\n                },\n\n                {\n                  converter(selection) {\n                    return selection[0].getModel().getValue();\n                  }\n                }\n              );\n\n              handled = true;\n              break;\n            case 'radiogroup':\n              options = {\n                converter: function (value) {\n                  let selectables = this.getSelectables();\n                  let selection = [];\n                  if (value) {\n                    selectables.forEach(function (selectable) {\n                      let sValue = selectable.getUserData('value');\n                      if (sValue === value) {\n                        selection = [selectable];\n                      }\n                    }, this);\n                  }\n                  return selection;\n                }.bind(formElement)\n              };\n\n              reverseOptions = {\n                converter(selection) {\n                  return selection[0].getUserData('value');\n                }\n              };\n\n              break;\n          }\n\n          if (!handled) {\n            if (elementModelReady) {\n              // do not add the binding before the model is there\n              elementModelReady.then(() => {\n                this._formController.addTarget(formElement, 'value', mappedKey, bidirectional, options, reverseOptions);\n              });\n            } else {\n              this._formController.addTarget(formElement, 'value', mappedKey, bidirectional, options, reverseOptions);\n            }\n          }\n        }\n        /**\n         * Validation\n         */\n        let validator = null;\n        if (formElement && fieldData.validation) {\n          // required field\n          if (fieldData.validation.required) {\n            formElement.setRequired(true);\n          }\n          // sync validation\n          if (fieldData.validation.validator) {\n            validator = fieldData.validation.validator;\n            if (typeof validator == 'string') {\n              if (qx.util.Validate[validator]) {\n                validator = qx.util.Validate[validator]();\n              } else if (validator.charAt(0) === '/') {\n                validator = qx.util.Validate.regExp(\n                  new RegExp(validator.substr(1, validator.length - 2)),\n                  fieldData.validation.errorMessage\n                );\n              } else {\n                this.error('Invalid string validator.');\n              }\n            } else if (\n              !(validator instanceof qx.ui.form.validation.AsyncValidator) &&\n              typeof validator !== 'function'\n            ) {\n              this.error('Invalid validator.');\n            }\n          }\n          // async validation\n          if (qx.lang.Type.isString(fieldData.validation.proxy) && qx.lang.Type.isString(fieldData.validation.method)) {\n            /**\n             * fieldData.validation.proxy\n             * the name of a global variable (or path) to a function that acts as the proxy of\n             * the 'send' or 'execute' function of a preconfigured JsonRpc client. The function\n             * receives the following parameters: service method (string), parameters (array)\n             * and callback (function). It proxies the parameters to the given JsonRpc method and\n             * calls the callback with the result (true if valid, false if not) received from the\n             * server. The JsonRpc service name is preconfigured by the server and cannot be\n             * changed by the client.\n             */\n            // clean\n            let proxy = fieldData.validation.proxy.replace(/;\\n/g, '');\n            try {\n              // eslint-disable-next-line no-eval\n              eval('proxy = ' + proxy + ';');\n            } catch (e) {\n              this.warn('Invalid proxy name');\n            }\n            if (typeof proxy == 'function') {\n              let method = fieldData.validation.method;\n              let message = fieldData.validation.invalidMessage;\n              let validationFunc = function (validatorObj, value) {\n                if (!validatorObj.__asyncInProgress) {\n                  validatorObj.__asyncInProgress = true;\n                  proxy(method, [value], function (valid) {\n                    validatorObj.setValid(valid, message || qx.locale.Manager.tr('Value is invalid'));\n\n                    validatorObj.__asyncInProgress = false;\n                  });\n                }\n              };\n              validator = new qx.ui.form.validation.AsyncValidator(validationFunc);\n            }\n          }\n        }\n\n        /**\n         * other widget properties @todo: allow to set all properties\n         */\n        if (fieldData.width !== undefined) {\n          formElement.setWidth(fieldData.width);\n        }\n        if (fieldData.placeholder !== undefined) {\n          formElement.setPlaceholder(fieldData.placeholder);\n        }\n        if (fieldData.enabled !== undefined) {\n          formElement.setEnabled(fieldData.enabled);\n        }\n        if (fieldData.help !== undefined) {\n          formElement.setUserData('help', fieldData.help);\n        }\n\n        /**\n         * Events\n         */\n        if (qx.lang.Type.isObject(fieldData.events)) {\n          for (let type in fieldData.events) {\n            try {\n              // eslint-disable-next-line no-eval\n              let func = eval('(' + fieldData.events[type] + ')'); // eval is evil, I know.\n              if (!qx.lang.Type.isFunction(func)) {\n                throw new Error();\n              }\n              formElement.addListener(type, func, formElement);\n            } catch (e) {\n              this.warn('Invalid \\'' + type + '\\' event handler for form element \\'' + key + '\\'.');\n            }\n          }\n        }\n\n        // Putting it all together\n        let label = fieldData.label;\n        this._form.add(formElement, label, validator);\n        // Add the form elements as objects owned by the form widget\n        if (qx.core.Environment.get('module.objectid') === true) {\n          formElement.setQxObjectId(key);\n          this._form.addOwnedQxObject(formElement);\n        }\n      }\n\n      let view = new cv.ui.manager.form.ElementFormRenderer(this._form);\n      view.getLayout().setColumnFlex(0, 0);\n      view.getLayout().setColumnMaxWidth(0, this.getLabelColumnWidth());\n      view.getLayout().setColumnFlex(1, 1);\n      view.getLayout().set({\n        spacingX: 8\n      });\n\n      view.setAllowGrowX(true);\n      const scroll = new qx.ui.container.Scroll(view);\n      scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n      this._rootListenerId = qx.core.Init.getApplication()\n        .getRoot()\n        .addListener('resize', function () {\n          scroll.setMaxHeight(qx.bom.Document.getHeight() - 132);\n        });\n\n      view.bind('width', scroll, 'width');\n      view.bind('height', scroll, 'height');\n      this._formContainer.add(scroll);\n      this._form.getValidationManager().validate();\n      if (firstWidget) {\n        qx.event.Timer.once(\n          () => {\n            firstWidget.focus();\n          },\n          this,\n          200\n        );\n      }\n    },\n\n    _handleOk() {\n      this.hide();\n      if (this.getCallback()) {\n        const data = qx.util.Serializer.toNativeObject(this.getModel());\n        const mappedNames = Object.keys(this.__mappedKeys.map);\n        mappedNames.forEach(mappedKey => {\n          if (Object.prototype.hasOwnProperty.call(data, mappedKey)) {\n            data[this.__mappedKeys.map[mappedKey]] = data[mappedKey];\n            delete data[mappedKey];\n          }\n        });\n        if (this.__hints) {\n          Object.keys(this.__hints).forEach(name => (data[name] = this.__hints[name]));\n        }\n        this.getCallback().call(this.getContext(), data);\n      }\n      this.resetCallback();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    if (this._rootListenerId) {\n      qx.core.Init.getApplication().getRoot().removeListenerById(this._rootListenerId);\n      this._rootListenerId = null;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}