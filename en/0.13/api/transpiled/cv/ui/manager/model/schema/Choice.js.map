{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "Base",
    "construct",
    "node",
    "constructor",
    "call",
    "parse",
    "properties",
    "type",
    "refine",
    "init",
    "members",
    "_this",
    "Choice",
    "superclass",
    "prototype",
    "getNode",
    "getSchema",
    "subElements",
    "Array",
    "from",
    "querySelectorAll",
    "forEach",
    "elem",
    "subElement",
    "Element",
    "setSortable",
    "_allowedElements",
    "getName",
    "getCommentNodeSchemaElement",
    "grouping",
    "_subGroupings",
    "push",
    "Sequence",
    "Group",
    "getRequiredElements",
    "getRegex",
    "separator",
    "nocapture",
    "_regexCache",
    "regexString",
    "elementRegexes",
    "_i",
    "_Object$values",
    "Object",
    "values",
    "length",
    "element",
    "join",
    "bounds",
    "getBounds",
    "min",
    "undefined",
    "max",
    "Number",
    "POSITIVE_INFINITY",
    "getBoundsForElementName",
    "childName",
    "isElementAllowed",
    "getAllowedElementsSorting",
    "sortnumber",
    "namesWithSorting",
    "keys",
    "name",
    "item",
    "mySortnumber",
    "getType",
    "subSortedElements",
    "assign",
    "i"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/Choice.js"
  ],
  "sourcesContent": [
    "/* Choice.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * a single choice.\n * may be recursive\n */\nqx.Class.define('cv.ui.manager.model.schema.Choice', {\n  extend: cv.ui.manager.model.schema.Base,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schema) {\n    super(node, schema);\n    this.parse();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    type: {\n      refine: true,\n      init: 'choice'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * parse a list of elements in this group.\n     * Group is allowed (all|choice|sequence)? as per the definition.\n     * We do all of those (except for 'all')\n     */\n    parse() {\n      super.parse();\n      const node = this.getNode();\n      const schema = this.getSchema();\n      const subElements = Array.from(node.querySelectorAll(':scope > element'));\n      subElements.forEach(elem => {\n        const subElement = new cv.ui.manager.model.schema.Element(elem, schema);\n        subElement.setSortable(true);\n        this._allowedElements[subElement.getName()] = subElement;\n      });\n      this._allowedElements['#comment'] = this.getSchema().getCommentNodeSchemaElement();\n\n      // choices\n      Array.from(node.querySelectorAll(':scope > choice')).forEach(grouping => {\n        this._subGroupings.push(new cv.ui.manager.model.schema.Choice(grouping, schema));\n      });\n\n      // sequences\n      Array.from(node.querySelectorAll(':scope > sequence')).forEach(grouping => {\n        this._subGroupings.push(new cv.ui.manager.model.schema.Sequence(grouping, schema));\n      });\n\n      // groups\n      Array.from(node.querySelectorAll(':scope > group')).forEach(grouping => {\n        this._subGroupings.push(new cv.ui.manager.model.schema.Group(grouping, schema));\n      });\n    },\n\n    // overridden\n    getRequiredElements() {\n      // a choice has no defined required elements\n      // if you want required elements, use sequence or all\n      return [];\n    },\n\n    /**\n     * get a regex (string) describing this choice\n     *\n     * @param   separator   string  the string used to separate different elements, e.g. ';'\n     * @param   nocapture   bool    when set to true non capturing groups are used\n     * @return  string  regex\n     */\n    getRegex(separator, nocapture) {\n      if (this._regexCache !== null) {\n        // use the cache if primed\n        return this._regexCache;\n      }\n\n      let regexString = '(';\n\n      // create list of allowed elements\n      if (nocapture) {\n        regexString += '?:';\n      }\n\n      const elementRegexes = [];\n      for (const element of Object.values(this._allowedElements)) {\n        elementRegexes.push(element.getRegex(separator, nocapture));\n      }\n\n      // also collect the regex for each and every grouping we might have\n      this._subGroupings.forEach(grouping => {\n        elementRegexes.push(grouping.getRegex(separator, nocapture));\n      });\n\n      regexString += elementRegexes.join('|');\n\n      regexString += ')';\n\n      // append bounds to regex\n      regexString += '{';\n      const bounds = this.getBounds();\n      regexString += bounds.min === undefined ? 1 : bounds.min;\n      regexString += ',';\n      if (bounds.max !== Number.POSITIVE_INFINITY) {\n        regexString += bounds.max === undefined ? 1 : bounds.max;\n      }\n      regexString += '}';\n\n      // fill the cache\n      this._regexCache = regexString;\n\n      // thats about it.\n      return regexString;\n    },\n\n    getBoundsForElementName(childName) {\n      // as we are a choice, we can define the number of occurences for children of ANY level\n      if (this.isElementAllowed(childName) === true) {\n        return this.getBounds();\n      }\n\n      return undefined;\n    },\n\n    /**\n     * get the sorting of the allowed elements.\n     * For a choice, all elements have the same sorting, so they will all have the\n     * same sortnumber\n     *\n     * Warning: this only works if any element can have only ONE position in the parent.\n     *\n     * @param   sortnumber  integer the sortnumber of a parent (only used when recursive)\n     * @return  object              list of allowed elements, with their sort-number as value\n     */\n    getAllowedElementsSorting(sortnumber) {\n      const namesWithSorting = {};\n\n      // all elements allowed directly\n      Object.keys(this._allowedElements).forEach(function (name) {\n        const item = this._allowedElements[name];\n        let mySortnumber = 'x'; // for a choice, sortnumber is always the same\n        if (sortnumber !== undefined) {\n          mySortnumber = sortnumber + '.' + mySortnumber;\n        }\n\n        if (item.getType() === 'element') {\n          namesWithSorting[item.getName()] = mySortnumber;\n        } else {\n          // go recursive\n          const subSortedElements = item.getAllowedElementsSorting(mySortnumber);\n          Object.assign(namesWithSorting, subSortedElements);\n        }\n      }, this);\n\n      // all elements allowed by subGroupings\n      this._subGroupings.forEach(function (item, i) {\n        let mySortnumber = 'x'; // for a choice, sortnumber is always the same\n        if (sortnumber !== undefined) {\n          mySortnumber = sortnumber + '.' + mySortnumber;\n        }\n\n        if (item.getType() === 'element') {\n          namesWithSorting[item.getName()] = mySortnumber;\n        } else {\n          // go recursive\n          const subSortedElements = item.getAllowedElementsSorting(mySortnumber);\n          Object.assign(namesWithSorting, subSortedElements);\n        }\n      }, this);\n      return namesWithSorting;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}