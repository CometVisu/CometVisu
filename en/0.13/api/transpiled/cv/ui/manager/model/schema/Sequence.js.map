{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "Base",
    "construct",
    "node",
    "constructor",
    "call",
    "parse",
    "properties",
    "type",
    "refine",
    "init",
    "elementsHaveOrder",
    "members",
    "_this",
    "Sequence",
    "superclass",
    "prototype",
    "getSchema",
    "subNodes",
    "Array",
    "from",
    "getNode",
    "children",
    "forEach",
    "subNode",
    "subObject",
    "nodeName",
    "Element",
    "setSortable",
    "_allowedElements",
    "getName",
    "Choice",
    "_subGroupings",
    "push",
    "Group",
    "Any",
    "_sortedContent",
    "getCommentNodeSchemaElement",
    "getRegex",
    "separator",
    "nocapture",
    "_regexCache",
    "regexString",
    "elementRegexes",
    "element",
    "join",
    "bounds",
    "getBounds",
    "min",
    "undefined",
    "max",
    "Number",
    "POSITIVE_INFINITY",
    "getBoundsForElementName",
    "childName",
    "elementBounds",
    "sequenceBounds",
    "resultBounds",
    "Object",
    "hasOwnProperty",
    "isNaN",
    "childBounds",
    "tmpBounds",
    "i",
    "length",
    "getAllowedElementsSorting",
    "sortNumber",
    "namesWithSorting",
    "item",
    "mySortNumber",
    "getType",
    "subSortedElements",
    "assign"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/Sequence.js"
  ],
  "sourcesContent": [
    "/* Sequence.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * a single sequence.\n * may be recursive\n */\nqx.Class.define('cv.ui.manager.model.schema.Sequence', {\n  extend: cv.ui.manager.model.schema.Base,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schema) {\n    super(node, schema);\n    this.parse();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    type: {\n      refine: true,\n      init: 'sequence'\n    },\n\n    elementsHaveOrder: {\n      refine: true,\n      init: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * parse a list of elements in this group.\n     * Group is allowed (all|choice|sequence)? as per the definition.\n     * We do all of those (except for 'all')\n     */\n    parse() {\n      super.parse();\n      const schema = this.getSchema();\n\n      // for a sequence, we need to keep the order of the elements\n      // so we have to use a 'mixed' approach in reading them\n      const subNodes = Array.from(this.getNode().children);\n\n      subNodes.forEach(subNode => {\n        let subObject;\n\n        switch (subNode.nodeName) {\n          case 'xsd:element':\n          case 'element':\n            subObject = new cv.ui.manager.model.schema.Element(subNode, schema);\n            // sequences' children are non-sortable\n            subObject.setSortable(false);\n            this._allowedElements[subObject.getName()] = subObject;\n            break;\n          case 'xsd:choice':\n          case 'choice':\n            subObject = new cv.ui.manager.model.schema.Choice(subNode, schema);\n            this._subGroupings.push(subObject);\n            break;\n          case 'xsd:sequence':\n          case 'sequence':\n            subObject = new cv.ui.manager.model.schema.Sequence(subNode, schema);\n\n            this._subGroupings.push(subObject);\n            break;\n          case 'xsd:group':\n          case 'group':\n            subObject = new cv.ui.manager.model.schema.Group(subNode, schema);\n            this._subGroupings.push(subObject);\n            break;\n          case 'xsd:any':\n          case 'any':\n            subObject = new cv.ui.manager.model.schema.Any(subNode, schema);\n            this._subGroupings.push(subObject);\n            break;\n        }\n\n        this._sortedContent.push(subObject);\n      });\n      this._allowedElements['#comment'] = this.getSchema().getCommentNodeSchemaElement();\n    },\n\n    /**\n     * get a regex (string) describing this choice\n     *\n     * @param   separator   string  the string used to separate different elements, e.g. ';'\n     * @param   nocapture   bool    when set to true non capturing groups are used\n     * @return  string  regex\n     */\n    getRegex(separator, nocapture) {\n      if (this._regexCache !== null) {\n        // use the cache if primed\n        return this._regexCache;\n      }\n\n      let regexString = '(';\n\n      // create list of allowed elements\n      if (nocapture) {\n        regexString += '?:';\n      }\n\n      const elementRegexes = [];\n\n      // this goes over ALL elements AND sub-groupings\n      this._sortedContent.forEach(element => {\n        elementRegexes.push(element.getRegex(separator, nocapture));\n      });\n\n      regexString += elementRegexes.join('');\n\n      regexString += ')';\n\n      // append bounds to regex\n      regexString += '{';\n      const bounds = this.getBounds();\n      regexString += bounds.min === undefined ? 1 : bounds.min;\n      regexString += ',';\n      if (bounds.max !== Number.POSITIVE_INFINITY) {\n        regexString += bounds.max === undefined ? 1 : bounds.max;\n      }\n      regexString += '}';\n\n      // fill the cache\n      this._regexCache = regexString;\n\n      // thats about it.\n      return regexString;\n    },\n\n    getBoundsForElementName(childName) {\n      // we are a sequence-element; there is actually a lot of sayings ...\n      if (typeof this._allowedElements[childName] !== 'undefined') {\n        const elementBounds = this._allowedElements[childName].getBounds();\n        const sequenceBounds = this.getBounds();\n\n        const resultBounds = {\n          min: 1,\n          max: 1\n        };\n\n        // if it is bounded, we must duplicate element and sequence bounds\n        // (an element may appear as often as the number of sequences times the number of elements\n        // in each sequence - roughly)\n        if (Object.prototype.hasOwnProperty.call(elementBounds, 'min')) {\n          resultBounds.min = elementBounds.min;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(sequenceBounds, 'min') && !isNaN(sequenceBounds.min)) {\n          resultBounds.min *= sequenceBounds.min;\n        }\n\n        if (elementBounds.max === Number.POSITIVE_INFINITY || sequenceBounds.max === Number.POSITIVE_INFINITY) {\n          resultBounds.max = Number.POSITIVE_INFINITY;\n        } else {\n          if (Object.prototype.hasOwnProperty.call(elementBounds, 'max')) {\n            resultBounds.max = elementBounds.max;\n          }\n\n          if (Object.prototype.hasOwnProperty.call(sequenceBounds, 'max') && !isNaN(sequenceBounds.max)) {\n            resultBounds.max *= sequenceBounds.max;\n          }\n        }\n\n        return resultBounds;\n      }\n\n      let childBounds;\n\n      let tmpBounds;\n\n      for (let i = 0; i < this._subGroupings.length; ++i) {\n        tmpBounds = this._subGroupings[i].getBoundsForElementName(childName);\n\n        if (undefined !== tmpBounds) {\n          // once we find the first set of bounds, we return that\n          childBounds = tmpBounds;\n          break;\n        }\n      }\n\n      return childBounds;\n    },\n\n    /**\n     * get the sorting of the allowed elements\n     *\n     * Warning: this only works if any element can have only ONE position in the parent.\n     * @param sortNumber  integer the sortNumber of a parent (only used when recursive)\n     * @return object     list of allowed elements, with their sort-number as value\n     */\n    getAllowedElementsSorting(sortNumber) {\n      const namesWithSorting = {};\n\n      this._sortedContent.forEach((item, i) => {\n        let mySortNumber = i;\n        if (sortNumber !== undefined) {\n          mySortNumber = sortNumber + '.' + i;\n        }\n\n        if (item.getType() === 'element') {\n          namesWithSorting[item.getName()] = mySortNumber;\n        } else {\n          // go recursive\n          const subSortedElements = item.getAllowedElementsSorting(mySortNumber);\n          Object.assign(namesWithSorting, subSortedElements);\n        }\n      });\n\n      return namesWithSorting;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}