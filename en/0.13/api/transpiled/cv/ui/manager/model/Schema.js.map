{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/Schema.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "filename",
    "match",
    "Error",
    "__filename",
    "setStructure",
    "endsWith",
    "__allowedRootElements",
    "__referencedNodeCache",
    "__typeNodeCache",
    "_cacheXSD",
    "statics",
    "__CACHE",
    "getInstance",
    "schemaFile",
    "prototype",
    "hasOwnProperty",
    "call",
    "cv",
    "ui",
    "manager",
    "model",
    "Schema",
    "util",
    "ResourceManager",
    "toUri",
    "properties",
    "loaded",
    "check",
    "init",
    "event",
    "structure",
    "apply",
    "members",
    "__xsd",
    "__textNodeSchemaElement",
    "__commentNodeSchemaElement",
    "_widgetNames",
    "__rootElementName",
    "__pageParentElementName",
    "__pageElementName",
    "_applyStructure",
    "onLoaded",
    "callback",
    "context",
    "isLoaded",
    "addListenerOnce",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "e",
    "req",
    "getTarget",
    "xml",
    "getResponse",
    "Document",
    "fromString",
    "_parseXSD",
    "send",
    "querySelectorAll",
    "forEach",
    "element",
    "name",
    "getAttribute",
    "schema",
    "Element",
    "setLoaded",
    "getElementNode",
    "getReferencedNode",
    "type",
    "refName",
    "noFallback",
    "fallbackType",
    "selector",
    "ref",
    "querySelector",
    "hasAttribute",
    "getTypeNode",
    "typeNode",
    "getTextNodeSchemaElement",
    "tmpXML",
    "createElement",
    "setAttribute",
    "getCommentNodeSchemaElement",
    "getSchemaDOM",
    "getWidgetNames",
    "root",
    "pageParent",
    "getSchemaElementForElementName",
    "page",
    "keys",
    "getAllowedElements",
    "filter",
    "startsWith",
    "isRoot",
    "isPage",
    "destruct",
    "_disposeObjects",
    "_disposeMap"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EAA8C;AAC5CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD4B;;AAG5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAAUC,QAAV,EAAoB;AAC7B;;AACA,UAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACC,KAAT,CAAe,QAAf,CAAlB,EAA4C;AAC1C,cAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;AACD;;AACD,WAAKC,UAAL,GAAkBH,QAAlB;AACA,WAAKI,YAAL,CAAkBJ,QAAQ,CAACK,QAAT,CAAkB,sBAAlB,IAA4C,MAA5C,GAAqD,MAAvE;AACA,WAAKC,QAAL,GAA6B,EAA7B;AACA,WAAKC,QAAL,GAA6B,EAA7B;AACA,WAAKC,QAAL,GAAuB,EAAvB;;AACA,WAAKC,SAAL;AACD,KAnB2C;;AAqB5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAO,EAAE,EADF;AAGPC,MAAAA,WAAW,EAAE,qBAAUC,UAAV,EAAsB;AACjC,YAAI,CAACf,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKL,QAA1C,EAAmDE,UAAnD,CAAL,EAAqE;AACnE,eAAKF,QAAL,CAAaE,UAAb,IAA2B,IAAII,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,MAAxB,CAA+B/B,EAAE,CAACgC,IAAH,CAAQC,eAAR,CAAwBX,WAAxB,GAAsCY,KAAtC,CAA4CX,UAA5C,CAA/B,CAA3B;AACD;;AACD,eAAO,KAAKF,QAAL,CAAaE,UAAb,CAAP;AACD;AARM,KA1BmC;;AAqC5C;AACF;AACA;AACA;AACA;AACEY,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,SADD;AAENC,QAAAA,IAAI,EAAE,KAFA;AAGNC,QAAAA,KAAK,EAAE;AAHD,OADE;AAOVC,MAAAA,SAAS,EAAE;AACTH,QAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,CADE;AAETI,QAAAA,KAAK,EAAE;AAFE;AAPD,KA1CgC;;AAuD5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACP7B,MAAAA,UAAU,EAAE,IADL;;AAEP;AACJ;AACA;AACA;AACI8B,MAAAA,QAAK,EAAE,IANA;;AAQP;AACJ;AACA;AACA;AACI3B,MAAAA,QAAqB,EAAE,IAZhB;;AAcP;AACJ;AACA;AACA;AACIC,MAAAA,QAAqB,EAAE,IAlBhB;;AAoBP;AACJ;AACA;AACA;AACIC,MAAAA,QAAe,EAAE,IAxBV;;AA0BP;AACJ;AACA;AACA;AACI0B,MAAAA,QAAuB,EAAE,IA9BlB;;AAgCP;AACJ;AACA;AACA;AACIC,MAAAA,QAA0B,EAAE,IApCrB;;AAsCP;AACJ;AACA;AACIC,MAAAA,YAAY,EAAE,IAzCP;;AA2CP;AACJ;AACA;AACIC,MAAAA,QAAiB,EAAE,IA9CZ;;AAgDP;AACJ;AACA;AACIC,MAAAA,QAAuB,EAAE,IAnDlB;;AAqDP;AACJ;AACA;AACIC,MAAAA,QAAiB,EAAE,IAxDZ;AA0DPC,MAAAA,eA1DO,2BA0DSV,SA1DT,EA0DoB;AACzB,YAAIA,SAAS,KAAK,MAAlB,EAA0B;AACxB,eAAKO,QAAL,GAAyB,QAAzB;AACA,eAAKC,QAAL,GAA+B,MAA/B;AACA,eAAKC,QAAL,GAAyB,SAAzB;AACD,SAJD,MAIO;AACL,eAAKF,QAAL,GAAyB,OAAzB;AACA,eAAKE,QAAL,GAAyB,MAAzB;AACD;AACF,OAnEM;AAqEPE,MAAAA,QAAQ,EAAE,kBAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACrC,YAAI,KAAKC,QAAL,EAAJ,EAAqB;AACnBF,UAAAA,QAAQ,CAAC1B,IAAT,CAAc2B,OAAd;AACD,SAFD,MAEO;AACL,eAAKE,eAAL,CAAqB,cAArB,EAAqCH,QAArC,EAA+CC,OAA/C;AACD;AACF,OA3EM;;AA6EP;AACJ;AACA;AACIlC,MAAAA,SAAS,EAAE,qBAAY;AACrB,YAAMqC,WAAW,GAAG,IAAIxD,EAAE,CAACyD,EAAH,CAAMC,OAAN,CAAcC,GAAlB,CAAsB,KAAK9C,UAA3B,CAApB;AACA2C,QAAAA,WAAW,CAACI,GAAZ,CAAgB;AACdC,UAAAA,MAAM,EAAE;AADM,SAAhB;AAGAL,QAAAA,WAAW,CAACD,eAAZ,CAA4B,SAA5B,EAAuC,UAAUO,CAAV,EAAa;AAClD,cAAMC,GAAG,GAAGD,CAAC,CAACE,SAAF,EAAZ,CADkD,CAElD;;AACA,cAAIC,GAAG,GAAGF,GAAG,CAACG,WAAJ,EAAV;;AACA,cAAID,GAAG,IAAK,OAAOA,GAAP,KAAe,QAA3B,EAAsC;AACpCA,YAAAA,GAAG,GAAGjE,EAAE,CAACiE,GAAH,CAAOE,QAAP,CAAgBC,UAAhB,CAA2BH,GAA3B,CAAN;AACD;;AACD,eAAKtB,QAAL,GAAasB,GAAb,CAPkD,CASlD;;AACA,eAAKI,SAAL;AACD,SAXD,EAWG,IAXH;AAYAb,QAAAA,WAAW,CAACc,IAAZ;AACD,OAlGM;;AAoGP;AACJ;AACA;AACID,MAAAA,SAAS,EAAE,qBAAY;AAAA;;AACrB;AACA,aAAK1B,QAAL,CAAW4B,gBAAX,CAA4B,kBAA5B,EAAgDC,OAAhD,CAAwD,UAAAC,OAAO,EAAI;AACjE,cAAMC,IAAI,GAAGD,OAAO,CAACE,YAAR,CAAqB,MAArB,CAAb;AACA,UAAA,KAAI,CAAC3D,QAAL,CAA2B0D,IAA3B,IAAmC,IAAI/C,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoB8C,MAApB,CAA2BC,OAA/B,CAAuCJ,OAAvC,EAAgD,KAAhD,CAAnC;AACD,SAHD;;AAIA,aAAKK,SAAL,CAAe,IAAf;AACD,OA9GM;AAgHPC,MAAAA,cAAc,EAAE,wBAAUL,IAAV,EAAgB;AAC9B,YAAIlE,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKV,QAA1C,EAAiE0D,IAAjE,CAAJ,EAA4E;AAC1E,iBAAO,KAAK1D,QAAL,CAA2B0D,IAA3B,CAAP;AACD;;AACD,cAAM,IAAI9D,KAAJ,CAAU,+CAA+C8D,IAA/C,GAAsD,4BAAhE,CAAN;AACD,OArHM;;AAuHP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIM,MAAAA,iBAAiB,EAAE,2BAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqC;AACtD,YAAI3E,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKT,QAA1C,EAAiEgE,IAAjE,KAA0EzE,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKT,QAAL,CAA2BgE,IAA3B,CAArC,EAAuEC,OAAvE,CAA9E,EAA+J;AAC7J,iBAAO,KAAKjE,QAAL,CAA2BgE,IAA3B,EAAiCC,OAAjC,CAAP;AACD;;AACD,YAAME,YAAY,GAAGH,IAAI,KAAK,YAAT,GAAwB,aAAxB,GAAwC,YAA7D;;AACA,YAAI,CAACE,UAAL,EAAiB;AACf,cAAI3E,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKT,QAA1C,EAAiEmE,YAAjE,KAAkF5E,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKT,QAAL,CAA2BmE,YAA3B,CAArC,EAA+EF,OAA/E,CAAtF,EAA+K;AAC7K,mBAAO,KAAKjE,QAAL,CAA2BmE,YAA3B,EAAyCF,OAAzC,CAAP;AACD;AACF;;AAED,YAAMG,QAAQ,GAAG,cAAcJ,IAAd,GAAqB,SAArB,GAAiCC,OAAjC,GAA2C,IAA5D;;AACA,YAAII,GAAG,GAAG,KAAK3C,QAAL,CAAW4C,aAAX,CAAyBF,QAAzB,CAAV;;AACA,YAAI,CAACC,GAAD,IAAQ,CAACH,UAAb,EAAyB;AACvB,cAAI;AACFG,YAAAA,GAAG,GAAG,KAAKN,iBAAL,CAAuBI,YAAvB,EAAqCF,OAArC,EAA8C,IAA9C,CAAN;AACD,WAFD,CAEE,OAAOpB,CAAP,EAAU,CAAE;AACf;;AACD,YAAI,CAACwB,GAAL,EAAU;AACR,gBAAM,IAAI1E,KAAJ,CAAU,iDAAiDqE,IAAjD,GAAwD,IAAxD,GAA+DC,OAA/D,GAAyE,oBAAnF,CAAN;AACD;;AAED,YAAII,GAAG,CAACE,YAAJ,CAAiB,KAAjB,CAAJ,EAA6B;AAC3B;AACAF,UAAAA,GAAG,GAAG,KAAKN,iBAAL,CAAuBC,IAAvB,EAA6BK,GAAG,CAACX,YAAJ,CAAiB,KAAjB,CAA7B,CAAN;AACD;;AAED,YAAI,CAACnE,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKT,QAA1C,EAAiEgE,IAAjE,CAAL,EAA6E;AAC3E,eAAKhE,QAAL,CAA2BgE,IAA3B,IAAmC,EAAnC;AACD,SA7BqD,CA+BtD;;;AACA,aAAKhE,QAAL,CAA2BgE,IAA3B,EAAiCC,OAAjC,IAA4CI,GAA5C;AAEA,eAAOA,GAAP;AACD,OApKM;;AAuKP;AACJ;AACA;AACA;AACA;AACA;AACIG,MAAAA,WAAW,EAAE,qBAAUR,IAAV,EAAgBP,IAAhB,EAAsB;AACjC,YAAIlE,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKR,QAA1C,EAA2D+D,IAA3D,KAAoEzE,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKR,QAAL,CAAqB+D,IAArB,CAArC,EAAiEP,IAAjE,CAAxE,EAAgJ;AAC9I,iBAAO,KAAKxD,QAAL,CAAqB+D,IAArB,EAA2BP,IAA3B,CAAP;AACD;;AACD,YAAIgB,QAAQ,GAAG,KAAK/C,QAAL,CAAW4C,aAAX,CAAyBN,IAAI,GAAG,aAAP,GAAuBP,IAAvB,GAA8B,IAAvD,CAAf;;AAEA,YAAI,CAACgB,QAAL,EAAe;AACb,gBAAM,IAAI9E,KAAJ,CAAU,uCAAuCqE,IAAvC,GAA8C,QAA9C,GAAyDP,IAAzD,GAAgE,oBAA1E,CAAN;AACD;;AAED,YAAI,OAAO,KAAKxD,QAAL,CAAqB+D,IAArB,CAAP,IAAqC,WAAzC,EAAsD;AACpD,eAAK/D,QAAL,CAAqB+D,IAArB,IAA6B,EAA7B;AACD,SAZgC,CAcjC;;;AACA,aAAK/D,QAAL,CAAqB+D,IAArB,EAA2BP,IAA3B,IAAmCgB,QAAnC;AAEA,eAAOA,QAAP;AACD,OA/LM;;AAiMP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,wBAAwB,EAAE,oCAAY;AACpC,YAAI,KAAK/C,QAAL,KAAiC,IAArC,EAA2C;AACzC;AACA,cAAMgD,MAAM,GAAG,KAAKjD,QAAL,CAAWkD,aAAX,CAAyB,SAAzB,CAAf;;AACAD,UAAAA,MAAM,CAACE,YAAP,CAAoB,MAApB,EAA4B,OAA5B;AACAF,UAAAA,MAAM,CAACE,YAAP,CAAoB,MAApB,EAA4B,YAA5B;AACA,eAAKlD,QAAL,GAA+B,IAAIjB,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoB8C,MAApB,CAA2BC,OAA/B,CAAuCe,MAAvC,EAA+C,IAA/C,CAA/B;AACD;;AAED,eAAO,KAAKhD,QAAZ;AACD,OAhNM;;AAkNP;AACJ;AACA;AACA;AACA;AACImD,MAAAA,2BAA2B,EAAE,uCAAY;AACvC,YAAI,KAAKlD,QAAL,KAAoC,IAAxC,EAA8C;AAC5C;AACA,cAAM+C,MAAM,GAAG,KAAKjD,QAAL,CAAWkD,aAAX,CAAyB,SAAzB,CAAf;;AACAD,UAAAA,MAAM,CAACE,YAAP,CAAoB,MAApB,EAA4B,UAA5B;AACAF,UAAAA,MAAM,CAACE,YAAP,CAAoB,MAApB,EAA4B,YAA5B;AACAF,UAAAA,MAAM,CAACE,YAAP,CAAoB,WAApB,EAAiC,GAAjC;AACAF,UAAAA,MAAM,CAACE,YAAP,CAAoB,WAApB,EAAiC,WAAjC;AACA,eAAKjD,QAAL,GAAkC,IAAIlB,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoB8C,MAApB,CAA2BC,OAA/B,CAAuCe,MAAvC,EAA+C,IAA/C,CAAlC;AACD;;AAED,eAAO,KAAK/C,QAAZ;AACD,OAnOM;;AAqOP;AACJ;AACA;AACA;AACA;AACImD,MAAAA,YAAY,EAAE,wBAAY;AACxB,eAAO,KAAKrD,QAAZ;AACD,OA5OM;;AA8OP;AACJ;AACA;AACA;AACIsD,MAAAA,cAAc,EAAE,0BAAY;AAC1B,YAAI,CAAC,KAAKnD,YAAV,EAAwB;AACtB,cAAMoD,IAAI,GAAG,KAAKnB,cAAL,CAAoB,KAAKhC,QAAzB,CAAb;AACA,cAAIoD,UAAU,GAAGD,IAAjB;;AACA,cAAI,KAAKlD,QAAT,EAAkC;AAChCmD,YAAAA,UAAU,GAAGD,IAAI,CAACE,8BAAL,CAAoC,KAAKpD,QAAzC,CAAb;AACD;;AACD,cAAMqD,IAAI,GAAGF,UAAU,CAACC,8BAAX,CAA0C,KAAKnD,QAA/C,CAAb;AACA,eAAKH,YAAL,GAAoBtC,MAAM,CAAC8F,IAAP,CAAYD,IAAI,CAACE,kBAAL,EAAZ,EAAuCC,MAAvC,CAA8C,UAAA9B,IAAI;AAAA,mBAAI,CAACA,IAAI,CAAC+B,UAAL,CAAgB,GAAhB,CAAD,IAAyB/B,IAAI,KAAK,QAAtC;AAAA,WAAlD,CAApB;AACD;;AACD,eAAO,KAAK5B,YAAZ;AACD,OA7PM;AA+PP4D,MAAAA,MA/PO,kBA+PAhC,IA/PA,EA+PM;AACX,eAAOA,IAAI,KAAK,KAAK3B,QAArB;AACD,OAjQM;AAmQP4D,MAAAA,MAnQO,kBAmQAjC,IAnQA,EAmQM;AACX,eAAOA,IAAI,GAAG,KAAKzB,QAAnB;AACD;AArQM,KA5DmC;;AAoU5C;AACF;AACA;AACA;AACA;AACE2D,IAAAA,QAAQ,EAAE,oBAAY;AACpB,WAAKjE,QAAL,GAAa,IAAb;;AACA,WAAKkE,eAAL,CAAqB,UAArB,EAAmD,UAAnD;;AACA,WAAKC,WAAL,CAAiB,UAAjB;;AACA,WAAK7F,QAAL,GAA6B,IAA7B;AACA,WAAKC,QAAL,GAAuB,IAAvB;AACA,WAAK4B,YAAL,GAAoB,IAApB;AACD;AAhV2C,GAA9C;AAvBAnB,EAAAA,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,MAApB,CAA2B5B,aAA3B,GAA2CA,aAA3C",
  "sourcesContent": [
    "/* Schema.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n *\n */\nqx.Class.define('cv.ui.manager.model.Schema', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (filename) {\n    this.base(arguments);\n    if (!filename || !filename.match(/\\.xsd$/)) {\n      throw new Error('no, empty or invalid filename given, can not instantiate without one');\n    }\n    this.__filename = filename;\n    this.setStructure(filename.endsWith('visu_config_tile.xsd') ? 'tile' : 'pure');\n    this.__allowedRootElements = {};\n    this.__referencedNodeCache = {};\n    this.__typeNodeCache = {};\n    this._cacheXSD();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    __CACHE: {},\n\n    getInstance: function (schemaFile) {\n      if (!Object.prototype.hasOwnProperty.call(this.__CACHE, schemaFile)) {\n        this.__CACHE[schemaFile] = new cv.ui.manager.model.Schema(qx.util.ResourceManager.getInstance().toUri(schemaFile));\n      }\n      return this.__CACHE[schemaFile];\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    loaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeLoaded'\n    },\n\n    structure: {\n      check: ['pure', 'tile'],\n      apply: '_applyStructure'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __filename: null,\n    /**\n     * object of the schema/xsd\n     * @var object\n     */\n    __xsd: null,\n\n    /**\n     * object of allowed root-level elements\n     * @var object\n     */\n    __allowedRootElements: null,\n\n    /**\n     * cache for referenced nods\n     * @var object\n     */\n    __referencedNodeCache: null,\n\n    /**\n     * cache for getTypeNode\n     * @var object\n     */\n    __typeNodeCache: null,\n\n    /**\n     * cache for #text-SchemaElement\n     * @var object\n     */\n    __textNodeSchemaElement: null,\n\n    /**\n     * cache for #comment-SchemaElement\n     * @var object\n     */\n    __commentNodeSchemaElement: null,\n\n    /**\n     * @var {Array<String>}\n     */\n    _widgetNames: null,\n\n    /**\n     * @var {String}\n     */\n    __rootElementName: null,\n\n    /**\n     * @var {String}\n     */\n    __pageParentElementName: null,\n\n    /**\n     * @var {String}\n     */\n    __pageElementName: null,\n\n    _applyStructure(structure) {\n      if (structure === 'tile') {\n        this.__rootElementName = 'config';\n        this.__pageParentElementName = 'main';\n        this.__pageElementName = 'cv-page';\n      } else {\n        this.__rootElementName = 'pages';\n        this.__pageElementName = 'page';\n      }\n    },\n\n    onLoaded: function (callback, context) {\n      if (this.isLoaded()) {\n        callback.call(context);\n      } else {\n        this.addListenerOnce('changeLoaded', callback, context);\n      }\n    },\n\n    /**\n     * load and cache the xsd from the server\n     */\n    _cacheXSD: function () {\n      const ajaxRequest = new qx.io.request.Xhr(this.__filename);\n      ajaxRequest.set({\n        accept: 'application/xml'\n      });\n      ajaxRequest.addListenerOnce('success', function (e) {\n        const req = e.getTarget();\n        // Response parsed according to the server's response content type\n        let xml = req.getResponse();\n        if (xml && (typeof xml === 'string')) {\n          xml = qx.xml.Document.fromString(xml);\n        }\n        this.__xsd = xml;\n\n        // parse the data, to have at least a list of root-level-elements\n        this._parseXSD();\n      }, this);\n      ajaxRequest.send();\n    },\n\n    /**\n     * parse the schema once\n     */\n    _parseXSD: function () {\n      // make a list of root-level elements\n      this.__xsd.querySelectorAll('schema > element').forEach(element => {\n        const name = element.getAttribute('name');\n        this.__allowedRootElements[name] = new cv.ui.manager.model.schema.Element(element, this);\n      });\n      this.setLoaded(true);\n    },\n\n    getElementNode: function (name) {\n      if (Object.prototype.hasOwnProperty.call(this.__allowedRootElements, name)) {\n        return this.__allowedRootElements[name];\n      }\n      throw new Error('schema/xsd appears to be invalid, element ' + name + ' not allowed on root level');\n    },\n\n    /**\n     * dive into the schema and find the element that is being pulled in by a ref.\n     * Do so recursively.\n     * referenced nodes can be top-level-nodes only!\n     *\n     * @param   type       string  Type of the node (e.g. element, attributeGroup, ...)\n     * @param   refName    string  Name as per the ref-attribute\n     * @param   noFallback boolean Don't look up other types as fallback, if the requested type is not found\n     * @return  object          jQuery-object of the ref'ed element\n     */\n    getReferencedNode: function (type, refName, noFallback) {\n      if (Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type) && Object.prototype.hasOwnProperty.call(this.__referencedNodeCache[type], refName)) {\n        return this.__referencedNodeCache[type][refName];\n      }\n      const fallbackType = type === 'simpleType' ? 'complexType' : 'simpleType';\n      if (!noFallback) {\n        if (Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, fallbackType) && Object.prototype.hasOwnProperty.call(this.__referencedNodeCache[fallbackType], refName)) {\n          return this.__referencedNodeCache[fallbackType][refName];\n        }\n      }\n\n      const selector = 'schema > ' + type + '[name=\"' + refName + '\"]';\n      let ref = this.__xsd.querySelector(selector);\n      if (!ref && !noFallback) {\n        try {\n          ref = this.getReferencedNode(fallbackType, refName, true);\n        } catch (e) {}\n      }\n      if (!ref) {\n        throw new Error('schema/xsd appears to be invalid, reference ' + type + ' \"' + refName + '\" can not be found');\n      }\n\n      if (ref.hasAttribute('ref')) {\n        // do it recursively, if necessary\n        ref = this.getReferencedNode(type, ref.getAttribute('ref'));\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type)) {\n        this.__referencedNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__referencedNodeCache[type][refName] = ref;\n\n      return ref;\n    },\n\n\n    /**\n     * get the definition of a type, be it complex or simple\n     *\n     * @param   type    string  Type of type to find (either simple or complex)\n     * @param   name    string  Name of the type to find\n     */\n    getTypeNode: function (type, name) {\n      if (Object.prototype.hasOwnProperty.call(this.__typeNodeCache, type) && Object.prototype.hasOwnProperty.call(this.__typeNodeCache[type], name)) {\n        return this.__typeNodeCache[type][name];\n      }\n      let typeNode = this.__xsd.querySelector(type + 'Type[name=\"' + name + '\"]');\n\n      if (!typeNode) {\n        throw new Error('schema/xsd appears to be invalid, ' + type + 'Type \"' + name + '\" can not be found');\n      }\n\n      if (typeof this.__typeNodeCache[type] == 'undefined') {\n        this.__typeNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__typeNodeCache[type][name] = typeNode;\n\n      return typeNode;\n    },\n\n    /**\n     * get a SchemaElement for a #text-node\n     *\n     * @return  object  SchemaElement for #text-node\n     */\n    getTextNodeSchemaElement: function () {\n      if (this.__textNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#text');\n        tmpXML.setAttribute('type', 'xsd:string');\n        this.__textNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__textNodeSchemaElement;\n    },\n\n    /**\n     * get a SchemaElement for a #comment-node\n     *\n     * @return  object  SchemaElement for #comment-node\n     */\n    getCommentNodeSchemaElement: function () {\n      if (this.__commentNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#comment');\n        tmpXML.setAttribute('type', 'xsd:string');\n        tmpXML.setAttribute('minOccurs', '0');\n        tmpXML.setAttribute('maxOccurs', 'unbounded');\n        this.__commentNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__commentNodeSchemaElement;\n    },\n\n    /**\n     * get the DOM for this Schema\n     *\n     * @return  object  DOM\n     */\n    getSchemaDOM: function () {\n      return this.__xsd;\n    },\n\n    /**\n     * A CometVisu-Schema specific helper function that returns an array of all widget names.\n     * @returns {Array<String>}\n     */\n    getWidgetNames: function () {\n      if (!this._widgetNames) {\n        const root = this.getElementNode(this.__rootElementName);\n        let pageParent = root;\n        if (this.__pageParentElementName) {\n          pageParent = root.getSchemaElementForElementName(this.__pageParentElementName);\n        }\n        const page = pageParent.getSchemaElementForElementName(this.__pageElementName);\n        this._widgetNames = Object.keys(page.getAllowedElements()).filter(name => !name.startsWith('#') && name !== 'layout');\n      }\n      return this._widgetNames;\n    },\n\n    isRoot(name) {\n      return name === this.__rootElementName;\n    },\n\n    isPage(name) {\n      return name = this.__pageElementName;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__xsd = null;\n    this._disposeObjects('__commentNodeSchemaElement', '__textNodeSchemaElement');\n    this._disposeMap('__allowedRootElements');\n    this.__referencedNodeCache = null;\n    this.__typeNodeCache = null;\n    this._widgetNames = null;\n  }\n});\n\n"
  ]
}