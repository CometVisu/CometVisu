{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "construct",
    "filename",
    "match",
    "__filename",
    "setStructure",
    "endsWith",
    "__allowedRootElements",
    "__referencedNodeCache",
    "__typeNodeCache",
    "_cacheXSD",
    "statics",
    "__CACHE",
    "getInstance",
    "schemaFile",
    "_this",
    "_callee",
    "schema",
    "_callee$",
    "_context",
    "cv",
    "ui",
    "manager",
    "model",
    "Schema",
    "util",
    "ResourceManager",
    "toUri",
    "isLoaded",
    "timer",
    "setTimeout",
    "addListenerOnce",
    "clearTimeout",
    "properties",
    "loaded",
    "check",
    "init",
    "event",
    "structure",
    "members",
    "__xsd",
    "__textNodeSchemaElement",
    "__commentNodeSchemaElement",
    "_widgetNames",
    "__rootElementName",
    "__pageParentElementName",
    "__pageElementName",
    "_applyStructure",
    "onLoaded",
    "callback",
    "_this2",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "_ref",
    "_callee2",
    "e",
    "req",
    "xml",
    "includeXml",
    "_iterator",
    "_step",
    "include",
    "target",
    "_iterator2",
    "_step2",
    "includedChild",
    "_callee2$",
    "_context2",
    "getTarget",
    "getResponse",
    "Document",
    "fromString",
    "_createForOfIteratorHelper",
    "querySelectorAll",
    "s",
    "n",
    "loadXml",
    "getAttribute",
    "parentElement",
    "remove",
    "appendChild",
    "f",
    "t0",
    "_parseXSD",
    "_x",
    "send",
    "file",
    "_callee3",
    "_callee3$",
    "_context3",
    "getStatusText",
    "_this3",
    "element",
    "Element",
    "setLoaded",
    "getElementNode",
    "getReferencedNode",
    "refName",
    "noFallback",
    "fallbackType",
    "selector",
    "ref",
    "querySelector",
    "hasAttribute",
    "getTypeNode",
    "typeNode",
    "getTextNodeSchemaElement",
    "tmpXML",
    "createElement",
    "setAttribute",
    "getCommentNodeSchemaElement",
    "getSchemaDOM",
    "getWidgetNames",
    "root",
    "pageParent",
    "getSchemaElementForElementName",
    "page",
    "getAllowedElements",
    "filter",
    "startsWith",
    "isRoot",
    "isPage",
    "destruct",
    "_disposeObjects",
    "_disposeMap"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/Schema.js"
  ],
  "sourcesContent": [
    "/* Schema.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.ui.manager.model.Schema', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(filename) {\n    super();\n    if (!filename || !filename.match(/\\.xsd$/)) {\n      throw new Error('no, empty or invalid filename given, can not instantiate without one');\n    }\n    this.__filename = filename;\n    this.setStructure(filename.endsWith('visu_config_tile.xsd') ? 'tile' : 'pure');\n\n    this.__allowedRootElements = {};\n    this.__referencedNodeCache = {};\n    this.__typeNodeCache = {};\n    this._cacheXSD();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    __CACHE: {},\n\n    async getInstance(schemaFile) {\n      if (!Object.prototype.hasOwnProperty.call(this.__CACHE, schemaFile)) {\n        const schema = this.__CACHE[schemaFile] = new cv.ui.manager.model.Schema(\n          qx.util.ResourceManager.getInstance().toUri(schemaFile)\n        );\n        if (!schema.isLoaded()) {\n          return new Promise((resolve, reject) => {\n            const timer = setTimeout(() => {\n              reject(new Error('timeout loading schema file'));\n            }, 5000);\n            schema.addListenerOnce('changeLoaded', () => {\n              clearTimeout(timer);\n              resolve(schema);\n            });\n          });\n        }\n      }\n      return this.__CACHE[schemaFile];\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    loaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeLoaded'\n    },\n\n    structure: {\n      check: ['pure', 'tile'],\n      apply: '_applyStructure'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __filename: null,\n    /**\n     * object of the schema/xsd\n     * @var object\n     */\n    __xsd: null,\n\n    /**\n     * object of allowed root-level elements\n     * @var object\n     */\n    __allowedRootElements: null,\n\n    /**\n     * cache for referenced nods\n     * @var object\n     */\n    __referencedNodeCache: null,\n\n    /**\n     * cache for getTypeNode\n     * @var object\n     */\n    __typeNodeCache: null,\n\n    /**\n     * cache for #text-SchemaElement\n     * @var object\n     */\n    __textNodeSchemaElement: null,\n\n    /**\n     * cache for #comment-SchemaElement\n     * @var object\n     */\n    __commentNodeSchemaElement: null,\n\n    /**\n     * @var {Array<String>}\n     */\n    _widgetNames: null,\n\n    /**\n     * @var {String}\n     */\n    __rootElementName: null,\n\n    /**\n     * @var {String}\n     */\n    __pageParentElementName: null,\n\n    /**\n     * @var {String}\n     */\n    __pageElementName: null,\n\n    _applyStructure(structure) {\n      if (structure === 'tile') {\n        this.__rootElementName = 'config';\n        this.__pageParentElementName = 'main';\n        this.__pageElementName = 'cv-page';\n      } else {\n        this.__rootElementName = 'pages';\n        this.__pageElementName = 'page';\n      }\n    },\n\n    onLoaded(callback, context) {\n      if (this.isLoaded()) {\n        callback.call(context);\n      } else {\n        this.addListenerOnce('changeLoaded', callback, context);\n      }\n    },\n\n    /**\n     * load and cache the xsd from the server\n     */\n    _cacheXSD() {\n      const ajaxRequest = new qx.io.request.Xhr(this.__filename);\n      ajaxRequest.set({\n        accept: 'application/xml'\n      });\n\n      ajaxRequest.addListenerOnce('success', async e => {\n        const req = e.getTarget();\n        // Response parsed according to the server's response content type\n        let xml = req.getResponse();\n        if (xml && typeof xml === 'string') {\n          xml = qx.xml.Document.fromString(xml);\n        }\n        // embed all includes\n        let includeXml;\n        for (let include of xml.querySelectorAll('schema include')) {\n          includeXml = await this.loadXml('resource/' + include.getAttribute('schemaLocation'));\n          const target = include.parentElement;\n          include.remove();\n          for (let includedChild of includeXml.querySelectorAll('schema > *')) {\n            target.appendChild(includedChild);\n          }\n        }\n        this.__xsd = xml;\n\n        // parse the data, to have at least a list of root-level-elements\n        this._parseXSD();\n      });\n      ajaxRequest.send();\n    },\n\n    async loadXml(file) {\n      return new Promise((resolve, reject) => {\n        const ajaxRequest = new qx.io.request.Xhr(file);\n        ajaxRequest.set({\n          accept: 'application/xml'\n        });\n        ajaxRequest.addListenerOnce('success', e => {\n          const req = e.getTarget();\n          // Response parsed according to the server's response content type\n          let xml = req.getResponse();\n          if (xml && typeof xml === 'string') {\n            xml = qx.xml.Document.fromString(xml);\n          }\n          resolve(xml);\n        });\n        ajaxRequest.addListenerOnce('statusError', e => {\n          const req = e.getTarget();\n          reject(new Error(req.getStatusText()));\n        });\n        ajaxRequest.send();\n      });\n    },\n\n    /**\n     * parse the schema once\n     */\n    _parseXSD() {\n      // make a list of root-level elements\n      this.__xsd.querySelectorAll('schema > element').forEach(element => {\n        const name = element.getAttribute('name');\n        this.__allowedRootElements[name] = new cv.ui.manager.model.schema.Element(element, this);\n      });\n      this.setLoaded(true);\n    },\n\n    getElementNode(name) {\n      if (Object.prototype.hasOwnProperty.call(this.__allowedRootElements, name)) {\n        return this.__allowedRootElements[name];\n      }\n      throw new Error('schema/xsd appears to be invalid, element ' + name + ' not allowed on root level');\n    },\n\n    /**\n     * dive into the schema and find the element that is being pulled in by a ref.\n     * Do so recursively.\n     * referenced nodes can be top-level-nodes only!\n     *\n     * @param   type       string  Type of the node (e.g. element, attributeGroup, ...)\n     * @param   refName    string  Name as per the ref-attribute\n     * @param   noFallback boolean Don't look up other types as fallback, if the requested type is not found\n     * @return  object          jQuery-object of the ref'ed element\n     */\n    getReferencedNode(type, refName, noFallback) {\n      if (\n        Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type) &&\n        Object.prototype.hasOwnProperty.call(this.__referencedNodeCache[type], refName)\n      ) {\n        return this.__referencedNodeCache[type][refName];\n      }\n      const fallbackType = type === 'simpleType' ? 'complexType' : 'simpleType';\n      if (!noFallback) {\n        if (\n          Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, fallbackType) &&\n          Object.prototype.hasOwnProperty.call(this.__referencedNodeCache[fallbackType], refName)\n        ) {\n          return this.__referencedNodeCache[fallbackType][refName];\n        }\n      }\n\n      const selector = 'schema > ' + type + '[name=\"' + refName + '\"]';\n      let ref = this.__xsd.querySelector(selector);\n      if (!ref && !noFallback) {\n        try {\n          ref = this.getReferencedNode(fallbackType, refName, true);\n        } catch (e) {}\n      }\n      if (!ref) {\n        throw new Error('schema/xsd appears to be invalid, reference ' + type + ' \"' + refName + '\" can not be found');\n      }\n\n      if (ref.hasAttribute('ref')) {\n        // do it recursively, if necessary\n        ref = this.getReferencedNode(type, ref.getAttribute('ref'));\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(this.__referencedNodeCache, type)) {\n        this.__referencedNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__referencedNodeCache[type][refName] = ref;\n\n      return ref;\n    },\n\n    /**\n     * get the definition of a type, be it complex or simple\n     *\n     * @param   type    string  Type of type to find (either simple or complex)\n     * @param   name    string  Name of the type to find\n     */\n    getTypeNode(type, name) {\n      if (\n        Object.prototype.hasOwnProperty.call(this.__typeNodeCache, type) &&\n        Object.prototype.hasOwnProperty.call(this.__typeNodeCache[type], name)\n      ) {\n        return this.__typeNodeCache[type][name];\n      }\n      let typeNode = this.__xsd.querySelector(type + 'Type[name=\"' + name + '\"]');\n\n      if (!typeNode) {\n        throw new Error('schema/xsd appears to be invalid, ' + type + 'Type \"' + name + '\" can not be found');\n      }\n\n      if (typeof this.__typeNodeCache[type] == 'undefined') {\n        this.__typeNodeCache[type] = {};\n      }\n\n      // fill the cache\n      this.__typeNodeCache[type][name] = typeNode;\n\n      return typeNode;\n    },\n\n    /**\n     * get a SchemaElement for a #text-node\n     *\n     * @return  object  SchemaElement for #text-node\n     */\n    getTextNodeSchemaElement() {\n      if (this.__textNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#text');\n        tmpXML.setAttribute('type', 'xsd:string');\n        this.__textNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__textNodeSchemaElement;\n    },\n\n    /**\n     * get a SchemaElement for a #comment-node\n     *\n     * @return  object  SchemaElement for #comment-node\n     */\n    getCommentNodeSchemaElement() {\n      if (this.__commentNodeSchemaElement === null) {\n        // text-content is always a simple string\n        const tmpXML = this.__xsd.createElement('element');\n        tmpXML.setAttribute('name', '#comment');\n        tmpXML.setAttribute('type', 'xsd:string');\n        tmpXML.setAttribute('minOccurs', '0');\n        tmpXML.setAttribute('maxOccurs', 'unbounded');\n        this.__commentNodeSchemaElement = new cv.ui.manager.model.schema.Element(tmpXML, this);\n      }\n\n      return this.__commentNodeSchemaElement;\n    },\n\n    /**\n     * get the DOM for this Schema\n     *\n     * @return  object  DOM\n     */\n    getSchemaDOM() {\n      return this.__xsd;\n    },\n\n    /**\n     * A CometVisu-Schema specific helper function that returns an array of all widget names.\n     * @returns {Array<String>}\n     */\n    getWidgetNames() {\n      if (!this._widgetNames) {\n        const root = this.getElementNode(this.__rootElementName);\n        let pageParent = root;\n        if (this.__pageParentElementName) {\n          pageParent = root.getSchemaElementForElementName(this.__pageParentElementName);\n        }\n        const page = pageParent.getSchemaElementForElementName(this.__pageElementName);\n\n        this._widgetNames = Object.keys(page.getAllowedElements()).filter(\n          name => !name.startsWith('#') && name !== 'layout'\n        );\n      }\n      return this._widgetNames;\n    },\n\n    isRoot(name) {\n      return name === this.__rootElementName;\n    },\n\n    isPage(name) {\n      return (name = this.__pageElementName);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__xsd = null;\n    this._disposeObjects('__commentNodeSchemaElement', '__textNodeSchemaElement');\n\n    this._disposeMap('__allowedRootElements');\n    this.__referencedNodeCache = null;\n    this.__typeNodeCache = null;\n    this._widgetNames = null;\n  }\n});\n"
  ],
  "mappings": "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"
}