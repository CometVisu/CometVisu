{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "Base",
    "include",
    "MAnnotation",
    "construct",
    "node",
    "constructor",
    "call",
    "parse",
    "statics",
    "getAttributeName",
    "e",
    "hasAttribute",
    "getAttribute",
    "refName",
    "ref",
    "getReferencedNode",
    "Error",
    "properties",
    "type",
    "refine",
    "init",
    "name",
    "check",
    "optional",
    "defaultValue",
    "nullable",
    "members",
    "_type",
    "getNode",
    "getSchema",
    "SimpleType",
    "setName",
    "Attribute",
    "setDefaultValue",
    "setOptional",
    "isValueValid",
    "value",
    "undefined",
    "isOptional",
    "getTypeString",
    "description",
    "getBaseType",
    "match",
    "replace",
    "tr",
    "getEnumeration",
    "destruct",
    "__appInfoCache",
    "__documentationCache"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/Attribute.js"
  ],
  "sourcesContent": [
    "/* Attribute.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * a single attribute from the schema.\n */\nqx.Class.define('cv.ui.manager.model.schema.Attribute', {\n  extend: cv.ui.manager.model.schema.Base,\n  include: cv.ui.manager.model.schema.MAnnotation,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schema) {\n    super(node, schema);\n    this.parse();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Get the name of a schema-node\n     * @param e object  element to find the name of\n     * @param schema\n     * @return  string          name of the element\n     * @throws  if the name can not be found\n     */\n    getAttributeName(e, schema) {\n      if (e.hasAttribute('name')) {\n        return e.getAttribute('name');\n      }\n\n      if (e.hasAttribute('ref')) {\n        // it's a ref, seek other element!\n        const refName = e.getAttribute('ref');\n        const ref = schema.getReferencedNode('attribute', refName);\n\n        if (!ref) {\n          throw new Error('schema/xsd appears to be invalid, can not find element ' + refName);\n        }\n\n        return ref.getAttribute('name');\n      }\n\n      return 'unknown';\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    type: {\n      refine: true,\n      init: 'attribute'\n    },\n\n    name: {\n      check: 'String',\n      init: ''\n    },\n\n    optional: {\n      check: 'Boolean',\n      init: false\n    },\n\n    defaultValue: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _type: null,\n\n    parse() {\n      const node = this.getNode();\n      const schema = this.getSchema();\n      /**\n       * we have our own type\n       * @var object  SchemaSimpleType of the attribute, for validating purposes\n       */\n      this._type = new cv.ui.manager.model.schema.SimpleType(node, schema);\n      this.setName(cv.ui.manager.model.schema.Attribute.getAttributeName(node, schema));\n\n      if (node.hasAttribute('default')) {\n        this.setDefaultValue(node.getAttribute('default'));\n      }\n      this.setOptional(node.getAttribute('use') !== 'required');\n    },\n\n    /**\n     * check if a given value is valid for this attribute\n     *\n     * @param   value   mixed   the value to check\n     * @return  boolean         if the value is valid\n     */\n    isValueValid(value) {\n      if (value === null || value === undefined) {\n        value = '';\n      } else {\n        value = '' + value;\n      }\n      if (value === '') {\n        // empty values are valid if this node is optional!\n        return this.isOptional();\n      }\n      return this._type.isValueValid(value);\n    },\n\n    /**\n     * get a simple string telling us, what type of content is allowed\n     *\n     * @return  string  description of allowed values, almost user-readable :)\n     */\n    getTypeString() {\n      const description = this._type.getBaseType();\n\n      if (description.match(/xsd\\:/)) {\n        return description.replace(/xsd\\:/, '');\n      }\n\n      return this.tr('complex type, please see documentation');\n    },\n\n    /**\n     * get the list of values that are valid for this attribute, if it is an enumeration\n     *\n     * @return  array   list of string of valid values\n     */\n    getEnumeration() {\n      return this._type.getEnumeration();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__appInfoCache = null;\n    this.__documentationCache = null;\n  }\n});\n"
  ],
  "mappings": "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"
}