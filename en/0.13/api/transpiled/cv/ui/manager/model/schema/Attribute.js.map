{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/Attribute.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "Base",
    "include",
    "MAnnotation",
    "construct",
    "node",
    "parse",
    "statics",
    "getAttributeName",
    "e",
    "hasAttribute",
    "getAttribute",
    "refName",
    "ref",
    "getReferencedNode",
    "Error",
    "properties",
    "type",
    "refine",
    "init",
    "name",
    "check",
    "optional",
    "defaultValue",
    "nullable",
    "members",
    "_type",
    "getNode",
    "getSchema",
    "SimpleType",
    "setName",
    "Attribute",
    "setDefaultValue",
    "setOptional",
    "isValueValid",
    "value",
    "undefined",
    "isOptional",
    "getTypeString",
    "description",
    "getBaseType",
    "match",
    "replace",
    "tr",
    "getEnumeration",
    "destruct",
    "__appInfoCache",
    "__documentationCache"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * a single attribute from the schema.\n */\nqx.Class.define('cv.ui.manager.model.schema.Attribute', {\n  extend: cv.ui.manager.model.schema.Base,\n  include: cv.ui.manager.model.schema.MAnnotation,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (node, schema) {\n    this.base(arguments, node, schema);\n    this.parse();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Get the name of a schema-node\n     * @param e object  element to find the name of\n     * @param schema\n     * @return  string          name of the element\n     * @throws  if the name can not be found\n     */\n    getAttributeName: function(e, schema) {\n      if (e.hasAttribute('name')) {\n        return e.getAttribute('name');\n      }\n\n      if (e.hasAttribute('ref')) {\n        // it's a ref, seek other element!\n        const refName = e.getAttribute('ref');\n        const ref = schema.getReferencedNode('attribute', refName);\n\n        if (!ref) {\n          throw new Error('schema/xsd appears to be invalid, can not find element ' + refName);\n        }\n\n        return ref.getAttribute('name');\n      }\n\n      return 'unknown';\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    type: {\n      refine: true,\n      init: 'attribute'\n    },\n    name: {\n      check: 'String',\n      init: ''\n    },\n    optional: {\n      check: 'Boolean',\n      init: false\n    },\n    defaultValue: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _type: null,\n\n    parse: function () {\n      const node = this.getNode();\n      const schema = this.getSchema();\n      /**\n       * we have our own type\n       * @var object  SchemaSimpleType of the attribute, for validating purposes\n       */\n      this._type = new cv.ui.manager.model.schema.SimpleType(node, schema);\n      this.setName(cv.ui.manager.model.schema.Attribute.getAttributeName(node, schema));\n      if (node.hasAttribute('default')) {\n        this.setDefaultValue(node.getAttribute('default'));\n      }\n      this.setOptional(node.getAttribute('use') !== 'required');\n    },\n\n    /**\n     * check if a given value is valid for this attribute\n     *\n     * @param   value   mixed   the value to check\n     * @return  boolean         if the value is valid\n     */\n    isValueValid: function (value) {\n      if (value === null || value === undefined) {\n        value = '';\n      } else {\n        value = '' + value;\n      }\n      if (value === '') {\n        // empty values are valid if this node is optional!\n        return this.isOptional();\n      }\n      return this._type.isValueValid(value);\n    },\n\n    /**\n     * get a simple string telling us, what type of content is allowed\n     *\n     * @return  string  description of allowed values, almost user-readable :)\n     */\n    getTypeString: function () {\n      const description = this._type.getBaseType();\n\n      if (description.match(/xsd\\:/)) {\n        return description.replace(/xsd\\:/, '');\n      }\n\n      return this.tr('complex type, please see documentation');\n    },\n\n    /**\n     * get the list of values that are valid for this attribute, if it is an enumeration\n     *\n     * @return  array   list of string of valid values\n     */\n    getEnumeration: function () {\n      return this._type.getEnumeration();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__appInfoCache = null;\n    this.__documentationCache = null;\n  }\n});\n"
  ]
}