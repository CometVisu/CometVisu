{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__linkRegex",
    "RegExp",
    "__language",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "members",
    "__appInfoCache",
    "__documentationCache",
    "__getTextNodesByXPath",
    "node",
    "xpath",
    "texts",
    "doc",
    "ownerDocument",
    "nsResolver",
    "createNSResolver",
    "documentElement",
    "iterator",
    "evaluate",
    "XPathResult",
    "UNORDERED_NODE_ITERATOR_TYPE",
    "thisNode",
    "iterateNext",
    "push",
    "textContent",
    "replaceAll",
    "e",
    "error",
    "getAppinfo",
    "getNode",
    "appInfo",
    "type",
    "getType",
    "querySelectorAll",
    "length",
    "apply",
    "_toConsumableArray",
    "_type",
    "hasAttribute",
    "refName",
    "getAttribute",
    "ref",
    "getSchema",
    "getReferencedNode",
    "getDocumentation",
    "_this",
    "lang",
    "selector",
    "documentation",
    "_documentation",
    "_documentation2",
    "map",
    "entry",
    "createDocumentationWebLinks",
    "text",
    "language",
    "replace",
    "match",
    "contents",
    "reference",
    "label",
    "key",
    "link",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "DocumentationMapping",
    "MAP",
    "_base",
    "destruct",
    "MAnnotation"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/MAnnotation.js"
  ],
  "sourcesContent": [
    "/* MAnnotation.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Code the extract data from annotations (e.g. appinfo, documentation) in Element/Attribute\n */\nqx.Mixin.define('cv.ui.manager.model.schema.MAnnotation', {\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    this.__linkRegex = new RegExp(':ref:[`\\'](.+?)[`\\']', 'g');\n    this.__language = qx.locale.Manager.getInstance().getLanguage() === 'de' ? 'de' : 'en';\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * cache for getAppinfo\n     * @var array\n     */\n    __appInfoCache: null,\n    __linkRegex: null,\n    __language: null,\n\n    /**\n     * cache for getDocumentation\n     * @var array\n     */\n    __documentationCache: null,\n\n    __getTextNodesByXPath(node, xpath) {\n      const texts = [];\n      const doc = node.ownerDocument;\n      const nsResolver = doc.createNSResolver(doc.documentElement);\n      let iterator = doc.evaluate(xpath, node, nsResolver, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n\n      try {\n        let thisNode = iterator.iterateNext();\n\n        while (thisNode) {\n          texts.push(thisNode.textContent.replaceAll(/``([^`]+)``/g, '<code>$1</code>'));\n\n          thisNode = iterator.iterateNext();\n        }\n      } catch (e) {\n        this.error('Error: Document tree modified during iteration ' + e);\n      }\n      return texts;\n    },\n\n    /**\n     * get the appinfo information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getAppinfo() {\n      if (this.__appInfoCache !== null) {\n        return this.__appInfoCache;\n      }\n      const node = this.getNode();\n      const appInfo = this.__getTextNodesByXPath(node, 'xsd:annotation/xsd:appinfo');\n\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          appInfo.push(...this.__getTextNodesByXPath(this._type, 'xsd:annotation/xsd:appinfo'));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          appInfo.push(...this.__getTextNodesByXPath(ref, 'xsd:annotation/xsd:appinfo'));\n        }\n      }\n\n      // fill the cache\n      this.__appInfoCache = appInfo;\n\n      return appInfo;\n    },\n\n    /**\n     * get the documentation information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getDocumentation() {\n      if (this.__documentationCache !== null) {\n        return this.__documentationCache;\n      }\n      const node = this.getNode();\n\n      const lang = qx.locale.Manager.getInstance().getLanguage();\n      const selector = 'xsd:annotation/xsd:documentation[@xml:lang=\\'' + lang + '\\']';\n\n      // any appinfo this element itself might carry\n      let documentation = this.__getTextNodesByXPath(node, selector);\n\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          documentation.push(...this.__getTextNodesByXPath(this._type, selector));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          documentation.push(...this.__getTextNodesByXPath(ref, selector));\n\n          documentation = documentation.map(entry => this.createDocumentationWebLinks(entry));\n        }\n      }\n      this.__documentationCache = documentation;\n\n      return documentation;\n    },\n\n    /**\n     * Transform documentation text to link to the online documentation when it\n     * contains a reference.\n     * @param text\n     * @return string The transformed input string.\n     */\n    createDocumentationWebLinks(text) {\n      const language = this.__language;\n      return text.replace(this.__linkRegex, function (match, contents) {\n        const reference = contents.match(/^(.*?) *<([^<]*)>$/);\n        const label = reference ? reference[1] : contents;\n        const key = reference ? reference[2] : contents;\n        const link = cv.ui.manager.model.schema.DocumentationMapping.MAP[key];\n        if (link) {\n          return (\n            '<a class=\"doclink\" target=\"_blank\" href=\"' +\n            cv.ui.manager.model.schema.DocumentationMapping.MAP._base +\n            language +\n            link +\n            '\">' +\n            label +\n            '</a>'\n          );\n        }\n        return label;\n      });\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__appInfoCache = null;\n    this.__documentationCache = null;\n    this.__linkRegex = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}