{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__linkRegex",
    "RegExp",
    "__language",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "members",
    "__appInfoCache",
    "__documentationCache",
    "__getTextNodesByXPath",
    "node",
    "xpath",
    "texts",
    "doc",
    "ownerDocument",
    "nsResolver",
    "createNSResolver",
    "documentElement",
    "iterator",
    "evaluate",
    "XPathResult",
    "UNORDERED_NODE_ITERATOR_TYPE",
    "thisNode",
    "iterateNext",
    "push",
    "textContent",
    "replaceAll",
    "e",
    "error",
    "getAppinfo",
    "getNode",
    "appInfo",
    "type",
    "getType",
    "querySelectorAll",
    "length",
    "_type",
    "hasAttribute",
    "refName",
    "getAttribute",
    "ref",
    "getSchema",
    "getReferencedNode",
    "getDocumentation",
    "lang",
    "selector",
    "documentation",
    "map",
    "entry",
    "createDocumentationWebLinks",
    "text",
    "language",
    "replace",
    "match",
    "contents",
    "reference",
    "label",
    "key",
    "link",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "DocumentationMapping",
    "MAP",
    "_base",
    "destruct",
    "MAnnotation"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/MAnnotation.js"
  ],
  "sourcesContent": [
    "/* MAnnotation.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Code the extract data from annotations (e.g. appinfo, documentation) in Element/Attribute\n */\nqx.Mixin.define('cv.ui.manager.model.schema.MAnnotation', {\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    this.__linkRegex = new RegExp(':ref:[`\\'](.+?)[`\\']', 'g');\n    this.__language = qx.locale.Manager.getInstance().getLanguage() === 'de' ? 'de' : 'en';\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * cache for getAppinfo\n     * @var array\n     */\n    __appInfoCache: null,\n    __linkRegex: null,\n    __language: null,\n\n    /**\n     * cache for getDocumentation\n     * @var array\n     */\n    __documentationCache: null,\n\n    __getTextNodesByXPath(node, xpath) {\n      const texts = [];\n      const doc = node.ownerDocument;\n      const nsResolver = doc.createNSResolver(doc.documentElement);\n      let iterator = doc.evaluate(xpath, node, nsResolver, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n\n      try {\n        let thisNode = iterator.iterateNext();\n\n        while (thisNode) {\n          texts.push(thisNode.textContent.replaceAll(/``([^`]+)``/g, '<code>$1</code>'));\n\n          thisNode = iterator.iterateNext();\n        }\n      } catch (e) {\n        this.error('Error: Document tree modified during iteration ' + e);\n      }\n      return texts;\n    },\n\n    /**\n     * get the appinfo information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getAppinfo() {\n      if (this.__appInfoCache !== null) {\n        return this.__appInfoCache;\n      }\n      const node = this.getNode();\n      const appInfo = this.__getTextNodesByXPath(node, 'xsd:annotation/xsd:appinfo');\n\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          appInfo.push(...this.__getTextNodesByXPath(this._type, 'xsd:annotation/xsd:appinfo'));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          appInfo.push(...this.__getTextNodesByXPath(ref, 'xsd:annotation/xsd:appinfo'));\n        }\n      }\n\n      // fill the cache\n      this.__appInfoCache = appInfo;\n\n      return appInfo;\n    },\n\n    /**\n     * get the documentation information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getDocumentation() {\n      if (this.__documentationCache !== null) {\n        return this.__documentationCache;\n      }\n      const node = this.getNode();\n\n      const lang = qx.locale.Manager.getInstance().getLanguage();\n      const selector = 'xsd:annotation/xsd:documentation[@xml:lang=\\'' + lang + '\\']';\n\n      // any appinfo this element itself might carry\n      let documentation = this.__getTextNodesByXPath(node, selector);\n\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          documentation.push(...this.__getTextNodesByXPath(this._type, selector));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          documentation.push(...this.__getTextNodesByXPath(ref, selector));\n\n          documentation = documentation.map(entry => this.createDocumentationWebLinks(entry));\n        }\n      }\n      this.__documentationCache = documentation;\n\n      return documentation;\n    },\n\n    /**\n     * Transform documentation text to link to the online documentation when it\n     * contains a reference.\n     * @param text\n     * @return string The transformed input string.\n     */\n    createDocumentationWebLinks(text) {\n      const language = this.__language;\n      return text.replace(this.__linkRegex, function (match, contents) {\n        const reference = contents.match(/^(.*?) *<([^<]*)>$/);\n        const label = reference ? reference[1] : contents;\n        const key = reference ? reference[2] : contents;\n        const link = cv.ui.manager.model.schema.DocumentationMapping.MAP[key];\n        if (link) {\n          return (\n            '<a class=\"doclink\" target=\"_blank\" href=\"' +\n            cv.ui.manager.model.schema.DocumentationMapping.MAP._base +\n            language +\n            link +\n            '\">' +\n            label +\n            '</a>'\n          );\n        }\n        return label;\n      });\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__appInfoCache = null;\n    this.__documentationCache = null;\n    this.__linkRegex = null;\n  }\n});\n"
  ],
  "mappings": "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"
}