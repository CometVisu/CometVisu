{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/MAnnotation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__linkRegex",
    "RegExp",
    "__language",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "members",
    "__appInfoCache",
    "__documentationCache",
    "__getTextNodesByXPath",
    "node",
    "xpath",
    "texts",
    "doc",
    "ownerDocument",
    "nsResolver",
    "createNSResolver",
    "documentElement",
    "iterator",
    "evaluate",
    "XPathResult",
    "UNORDERED_NODE_ITERATOR_TYPE",
    "thisNode",
    "iterateNext",
    "push",
    "textContent",
    "replaceAll",
    "e",
    "error",
    "getAppinfo",
    "getNode",
    "appInfo",
    "type",
    "getType",
    "querySelectorAll",
    "length",
    "_type",
    "hasAttribute",
    "refName",
    "getAttribute",
    "ref",
    "getSchema",
    "getReferencedNode",
    "getDocumentation",
    "lang",
    "selector",
    "documentation",
    "map",
    "entry",
    "createDocumentationWebLinks",
    "text",
    "language",
    "replace",
    "match",
    "contents",
    "reference",
    "label",
    "key",
    "link",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "DocumentationMapping",
    "MAP",
    "_base",
    "destruct",
    "MAnnotation"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* MAnnotation.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Code the extract data from annotations (e.g. appinfo, documentation) in Element/Attribute\n */\nqx.Mixin.define('cv.ui.manager.model.schema.MAnnotation', {\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.__linkRegex = new RegExp(':ref:[`\\'](.+?)[`\\']', 'g');\n    this.__language = qx.locale.Manager.getInstance().getLanguage() === 'de' ? 'de' : 'en';\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * cache for getAppinfo\n     * @var array\n     */\n    __appInfoCache: null,\n    __linkRegex: null,\n    __language: null,\n\n    /**\n     * cache for getDocumentation\n     * @var array\n     */\n    __documentationCache: null,\n\n    __getTextNodesByXPath: function (node, xpath) {\n      const texts = [];\n      const doc = node.ownerDocument;\n      const nsResolver = doc.createNSResolver(doc.documentElement);\n      let iterator = doc.evaluate(xpath, node, nsResolver, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n      try {\n        let thisNode = iterator.iterateNext();\n\n        while (thisNode) {\n          texts.push(thisNode.textContent.replaceAll(/``([^`]+)``/g, '<code>$1</code>'));\n          thisNode = iterator.iterateNext();\n        }\n      } catch (e) {\n        this.error('Error: Document tree modified during iteration ' + e);\n      }\n      return texts;\n    },\n\n    /**\n     * get the appinfo information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getAppinfo: function () {\n      if (this.__appInfoCache !== null) {\n        return this.__appInfoCache;\n      }\n      const node = this.getNode();\n      const appInfo = this.__getTextNodesByXPath(node, 'xsd:annotation/xsd:appinfo');\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          appInfo.push(...this.__getTextNodesByXPath(this._type, 'xsd:annotation/xsd:appinfo'));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          appInfo.push(...this.__getTextNodesByXPath(ref, 'xsd:annotation/xsd:appinfo'));\n        }\n      }\n\n      // fill the cache\n      this.__appInfoCache = appInfo;\n\n      return appInfo;\n    },\n\n    /**\n     * get the documentation information from the element, if any\n     *\n     * @return  array   list of texts, or empty list if none\n     */\n    getDocumentation: function () {\n      if (this.__documentationCache !== null) {\n        return this.__documentationCache;\n      }\n      const node = this.getNode();\n\n      const lang = qx.locale.Manager.getInstance().getLanguage();\n      const selector = 'xsd:annotation/xsd:documentation[@xml:lang=\\'' + lang + '\\']';\n\n      // any appinfo this element itself might carry\n      let documentation = this.__getTextNodesByXPath(node, selector);\n\n      const type = this.getType();\n      if (type === 'element') {\n        // only aggregate types appinfo if it is not an immediate child of the element-node, but referenced/typed\n        if (node.querySelectorAll(':scope > complexType').length === 0) {\n          documentation.push(...this.__getTextNodesByXPath(this._type, selector));\n        }\n      } else if (type === 'attribute') {\n        if (node.hasAttribute('ref')) {\n          // the attribute is a reference, so take appinfo from there, too\n\n          const refName = node.getAttribute('ref');\n          const ref = this.getSchema().getReferencedNode('attribute', refName);\n\n          documentation.push(...this.__getTextNodesByXPath(ref, selector));\n\n          documentation = documentation.map(entry => this.createDocumentationWebLinks(entry));\n        }\n      }\n      this.__documentationCache = documentation;\n\n      return documentation;\n    },\n\n\n    /**\n     * Transform documentation text to link to the online documentation when it\n     * contains a reference.\n     * @param text\n     * @return string The transformed input string.\n     */\n    createDocumentationWebLinks: function (text) {\n      const language = this.__language;\n      return text.replace(this.__linkRegex, function(match, contents) {\n        const reference = contents.match(/^(.*?) *<([^<]*)>$/);\n        const label = reference ? reference[1] : contents;\n        const key = reference ? reference[2] : contents;\n        const link = cv.ui.manager.model.schema.DocumentationMapping.MAP[key];\n        if (link) {\n          return '<a class=\"doclink\" target=\"_blank\" href=\"' + cv.ui.manager.model.schema.DocumentationMapping.MAP._base + language + link + '\">' + label + '</a>';\n        }\n        return label;\n      });\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__appInfoCache = null;\n    this.__documentationCache = null;\n    this.__linkRegex = null;\n  }\n});\n"
  ]
}