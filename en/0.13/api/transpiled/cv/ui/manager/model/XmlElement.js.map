{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "construct",
    "node",
    "schemaElement",
    "editor",
    "parent",
    "_node",
    "children",
    "Array",
    "$$widget",
    "setSchemaElement",
    "initName",
    "nodeName",
    "_updateShowEditButton",
    "hasChildren",
    "push",
    "cv",
    "ui",
    "manager",
    "model",
    "XmlElement",
    "setEditor",
    "setParent",
    "_maintainIcon",
    "_maintainStatus",
    "initChildren",
    "_initialAttributes",
    "Map",
    "bind",
    "statics",
    "entityMap",
    "properties",
    "check",
    "nullable",
    "event",
    "apply",
    "name",
    "deferredInit",
    "displayName",
    "init",
    "open",
    "loaded",
    "textContent",
    "validate",
    "temporary",
    "valid",
    "invalidMessage",
    "status",
    "editable",
    "sortable",
    "deletable",
    "modified",
    "showEditButton",
    "icon",
    "dragging",
    "members",
    "_schema",
    "_schemaElement",
    "_initialChildNames",
    "_initialTextContent",
    "__initializing",
    "__addableChildren",
    "_structure",
    "nodeType",
    "Node",
    "COMMENT_NODE",
    "setStatus",
    "isValid",
    "_applyValid",
    "value",
    "resetInvalidMessage",
    "convertTextNodeType",
    "newType",
    "isTextNode",
    "TEXT_NODE",
    "CDATA_SECTION_NODE",
    "content",
    "getText",
    "oldNode",
    "newTextNode",
    "ownerDocument",
    "createCDATASection",
    "createTextNode",
    "parentNode",
    "replaceChild",
    "setName",
    "load",
    "setIcon",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "getName",
    "getAttribute",
    "indexOf",
    "source",
    "IconHandler",
    "getInstance",
    "getIconSource",
    "isOpen",
    "_applyEditable",
    "updateDeletable",
    "getSchemaElement",
    "setShowEditButton",
    "isTextContentAllowed",
    "startsWith",
    "keys",
    "getAllowedAttributes",
    "length",
    "isChildElementAllowed",
    "isEditable",
    "setDeletable",
    "getParent",
    "isTextContentRequired",
    "existing",
    "getChildren",
    "filter",
    "child",
    "requiredFromParent",
    "getRequiredElements",
    "includes",
    "bounds",
    "getBoundsForElementName",
    "min",
    "getNode",
    "remove",
    "skipUndo",
    "changes",
    "index",
    "getEditor",
    "$$removed",
    "updateModified",
    "change",
    "ElementChange",
    "locale",
    "Manager",
    "tr",
    "getDisplayName",
    "addUndo",
    "isAncestor",
    "element",
    "_move",
    "target",
    "position",
    "targetParent",
    "targetChildren",
    "oldIndex",
    "oldParent",
    "isChildAllowedAtPosition",
    "insertChild",
    "moveTo",
    "newParent",
    "getItem",
    "moveAfter",
    "moveBefore",
    "moveInside",
    "insertAfter",
    "newIndex",
    "insertBefore",
    "getAddableChildren",
    "excludeComment",
    "allowed",
    "getAllowedElements",
    "stillAllowed",
    "countExisting",
    "isLoaded",
    "forEach",
    "prototype",
    "hasOwnProperty",
    "call",
    "elementName",
    "isMixed",
    "textNodes",
    "otherNodes",
    "key",
    "childBounds",
    "max",
    "xmlElement",
    "debug",
    "areChildrenSortable",
    "allowedSorting",
    "getFirstLevelElementSorting",
    "currentPosition",
    "targetPosition",
    "previousSibling",
    "i",
    "Math",
    "findPositionForChild",
    "newChild",
    "targetIndex",
    "found",
    "some",
    "childPos",
    "internalOperation",
    "success",
    "appendChild",
    "childNodes",
    "unshift",
    "previousChild",
    "before",
    "$$added",
    "setOpen",
    "_validateTextContent",
    "isValueValid",
    "ValidationError",
    "recursive",
    "setValid",
    "isElement",
    "allowedAttributes",
    "errors",
    "attributes",
    "attr",
    "item",
    "attribute",
    "error",
    "isOptional",
    "hasAttribute",
    "nodeValue",
    "trim",
    "setInvalidMessage",
    "map",
    "err",
    "join",
    "_applyTextContent",
    "updateDisplayName",
    "ELEMENT_NODE",
    "getTextContent",
    "setText",
    "text",
    "changed",
    "newValue",
    "oldValue",
    "setTextContent",
    "old",
    "setAttribute",
    "undefined",
    "replace",
    "s",
    "getDefaultValue",
    "removeAttribute",
    "isRequired",
    "setAttributes",
    "parentChanges",
    "attrName",
    "dom",
    "DOMParser",
    "parseFromString",
    "getElementsByTagName",
    "outerHTML",
    "innerHTML",
    "newNode",
    "documentElement",
    "parentChange",
    "_applySchemaElement",
    "getSchema",
    "getStructure",
    "converter",
    "_onOpen",
    "_applyModified",
    "nameAttr",
    "isRoot",
    "designAttr",
    "substring",
    "isModified",
    "setDisplayName",
    "hasChildNodes",
    "childNode",
    "force",
    "removeListener",
    "_syncChildNodes",
    "removeAll",
    "childSchemaElement",
    "getSchemaElementForElementName",
    "setSortable",
    "msg",
    "getInvalidMessage",
    "clear",
    "set",
    "e",
    "appendInvalidMessage",
    "toString",
    "setLoaded",
    "addListener",
    "_updateChildrenDeletableFlags",
    "errorMsg",
    "setModified",
    "initial",
    "currentChildNames",
    "_currentChildNames",
    "size",
    "hasChildrenModified",
    "onSaved",
    "names",
    "widget",
    "ev",
    "getWidgetPath",
    "schema",
    "widgets",
    "getWidgetNames",
    "current",
    "lang",
    "String",
    "firstUp",
    "ids",
    "c",
    "id",
    "selector",
    "parentElement",
    "toLowerCase",
    "clone",
    "cloneNode",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/XmlElement.js"
  ],
  "sourcesContent": [
    "/* XmlElement.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Represents an Element or TextNode in an XML document\n */\nqx.Class.define('cv.ui.manager.model.XmlElement', {\n  extend: qx.core.Object,\n  include: [qx.data.marshal.MEventBubbling],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schemaElement, editor, parent) {\n    super();\n    this._node = node;\n    const children = new qx.data.Array();\n    if (node) {\n      this._node.$$widget = this;\n      this.setSchemaElement(schemaElement);\n      this.initName(node.nodeName);\n      this._updateShowEditButton();\n      if (this.hasChildren()) {\n        // we have to add a fake node to the children to show the tree that this node has children\n        // it will be removed when the real children are loaded\n        children.push(new cv.ui.manager.model.XmlElement());\n      }\n      if (editor) {\n        this.setEditor(editor);\n      }\n      if (parent) {\n        this.setParent(parent);\n      }\n      this._maintainIcon();\n      this._maintainStatus();\n    } else {\n      // this is a fake node needed for children simulation\n      this.initName('#temp');\n    }\n    this.initChildren(children);\n    this._initialAttributes = new Map();\n    this.bind('editor.file.writeable', this, 'editable');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    entityMap: {\n      '&': '&amp;',\n      '\"': '&quot;',\n      '\\'': '&#39;',\n      '`': '&#x60;'\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    // the current editor this element os shown in\n    editor: {\n      check: 'cv.ui.manager.editor.Tree',\n      nullable: true,\n      event: 'changeEditor'\n    },\n\n    schemaElement: {\n      check: 'cv.ui.manager.model.schema.Element',\n      apply: '_applySchemaElement'\n    },\n\n    name: {\n      check: 'String',\n      deferredInit: true,\n      event: 'changeName',\n      apply: 'updateDisplayName'\n    },\n\n    displayName: {\n      check: 'String',\n      init: '',\n      event: 'changeDisplayName'\n    },\n\n    open: {\n      check: 'Boolean',\n      event: 'changeOpen',\n      init: false,\n      apply: '_onOpen'\n    },\n\n    loaded: {\n      check: 'Boolean',\n      event: 'changeLoaded',\n      init: false\n    },\n\n    children: {\n      check: 'qx.data.Array',\n      event: 'changeChildren',\n      apply: '_applyEventPropagation',\n      deferredInit: true\n    },\n\n    textContent: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyTextContent',\n      event: 'changeTextContent',\n      validate: '_validateTextContent'\n    },\n\n    /**\n     * Temporary nodes are not save in the backend yet\n     */\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTemporary'\n    },\n\n    /**\n     * Validation result for this nodes content\n     */\n    valid: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeValid',\n      apply: '_applyValid'\n    },\n\n    invalidMessage: {\n      check: 'String',\n      init: '',\n      event: 'changeInvalidMessage'\n    },\n\n    status: {\n      check: ['error', 'valid', 'comment'],\n      init: 'valid',\n      event: 'changeStatus'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeEditable',\n      apply: '_applyEditable'\n    },\n\n    sortable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeSortable'\n    },\n\n    /**\n     * true if this element can be deleted (either no bounds.min or more existing elements)\n     */\n    deletable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeDeletable'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyModified'\n    },\n\n    showEditButton: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeShowEditButton'\n    },\n\n    parent: {\n      check: 'cv.ui.manager.model.XmlElement',\n      nullable: true\n    },\n\n    // icon to show in the tree\n    icon: {\n      check: 'String',\n      nullable: true,\n      event: 'changeIcon'\n    },\n\n    dragging: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeDragging'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _node: null,\n    _schema: null,\n    _schemaElement: null,\n    _initialAttributes: null,\n    _initialChildNames: null,\n    _initialTextContent: null,\n    __initializing: false,\n    __addableChildren: null,\n    _structure: null,\n\n    _maintainStatus() {\n      if (this._node.nodeType === Node.COMMENT_NODE) {\n        this.setStatus('comment');\n      } else if (!this.isValid()) {\n        this.setStatus('error');\n      } else {\n        this.setStatus('valid');\n      }\n    },\n\n    _applyValid(value) {\n      this._maintainStatus();\n      if (value) {\n        this.resetInvalidMessage();\n      }\n    },\n\n    convertTextNodeType(newType) {\n      if (\n        this.isTextNode() &&\n        this._node.nodeType !== newType &&\n        (newType === Node.TEXT_NODE || newType === Node.CDATA_SECTION_NODE)\n      ) {\n        const content = this.getText();\n        const oldNode = this._node;\n        const newTextNode =\n          newType === Node.CDATA_SECTION_NODE\n            ? this._node.ownerDocument.createCDATASection(content)\n            : this._node.ownerDocument.createTextNode(content);\n        if (oldNode.parentNode) {\n          oldNode.parentNode.replaceChild(newTextNode, oldNode);\n        }\n        this._node = newTextNode;\n        this.setName(this._node.nodeName);\n        this.load(true);\n      }\n    },\n\n    _maintainIcon() {\n      if (this._node) {\n        if (this._node.nodeType === Node.TEXT_NODE || this._node.nodeType === Node.CDATA_SECTION_NODE) {\n          this.setIcon(cv.theme.dark.Images.getIcon('text-fields', 18));\n          return;\n        } else if (this._node.nodeType === Node.COMMENT_NODE) {\n          this.setIcon(cv.theme.dark.Images.getIcon('comment-fields', 18));\n          return;\n        } else if (\n          this.getName() === 'icon' &&\n          this.getAttribute('name') &&\n          this.getAttribute('name').indexOf('{{') === -1\n        ) {\n          // try to use the configured icon (if its not set by a template variable)\n          const source = cv.IconHandler.getInstance().getIconSource(this.getAttribute('name'), 'tree-icon');\n\n          if (source) {\n            this.setIcon(source);\n          } else {\n            this.setIcon(cv.theme.dark.Images.getIcon('image', 18));\n          }\n          return;\n        }\n      }\n      if (this.isOpen()) {\n        this.setIcon(cv.theme.dark.Images.getIcon('folder-open', 18));\n      } else {\n        this.setIcon(cv.theme.dark.Images.getIcon('folder', 18));\n      }\n    },\n\n    _applyEditable() {\n      this._updateShowEditButton();\n      this.updateDeletable();\n    },\n\n    _updateShowEditButton() {\n      const schemaElement = this.getSchemaElement();\n      this.setShowEditButton(\n        (schemaElement.isTextContentAllowed() && this.getName().startsWith('#')) ||\n          Object.keys(schemaElement.getAllowedAttributes()).length > 0 ||\n          schemaElement.isChildElementAllowed('*') // any element allowed, this is edited as text (outerHTML)\n      );\n    },\n\n    updateDeletable() {\n      if (!this.isEditable()) {\n        this.setDeletable(false);\n      } else {\n        const parent = this.getParent();\n        if (this.isTextNode()) {\n          if (this.getSchemaElement().isTextContentRequired()) {\n            const existing = parent.getChildren().filter(child => child.isTextNode()).length;\n            this.setDeletable(existing > 1);\n          } else {\n            this.setDeletable(true);\n          }\n        } else {\n          let deletable = false;\n          if (parent) {\n            const schemaElement = parent.getSchemaElement();\n            const requiredFromParent = schemaElement.getRequiredElements();\n            if (requiredFromParent.includes(this.getName())) {\n              const bounds = schemaElement.getBoundsForElementName(this.getName());\n\n              if (bounds) {\n                const existing = parent.getChildren().filter(child => child.getName() === this.getName()).length;\n                // check if we can afford to delete one\n                deletable = bounds.min <= existing - 1;\n              } else {\n                deletable = true;\n              }\n            } else {\n              deletable = true;\n            }\n          } else {\n            deletable = true;\n          }\n          this.setDeletable(deletable);\n        }\n      }\n    },\n\n    getNode() {\n      return this._node;\n    },\n\n    remove(skipUndo) {\n      const parent = this.getParent();\n      if (parent) {\n        const changes = [\n          {\n            index: parent.getChildren().indexOf(this),\n            parent: parent,\n            child: this\n          }\n        ];\n\n        this._node.remove();\n        parent.getChildren().remove(this);\n        const editor = this.getEditor();\n        this.$$removed = true;\n        if (editor) {\n          // editor should not consider the modification state of removed elements\n          editor.updateModified(this);\n        }\n        parent.updateModified();\n        if (!skipUndo) {\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Remove %1', this.getDisplayName()),\n              this,\n              changes,\n              'deleted'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n      }\n    },\n\n    /**\n     * Check is this element is an ancestor of the given element\n     * @param element {cv.ui.manager.model.XmlElement} element to check\n     * @returns {boolean}\n     */\n    isAncestor(element) {\n      let parent = element.getParent();\n      while (parent) {\n        if (parent === this) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n      return false;\n    },\n\n    /**\n     * Move this node to a new position in relation to the target\n     * @param target {cv.ui.manager.model.XmlElement} new direct sibling\n     * @param position {String} more 'before', 'after' or 'inside' target\n     * @param skipUndo {Boolean} no not add an undo operation for this\n     * @private\n     */\n    _move(target, position, skipUndo) {\n      if (this.isAncestor(target)) {\n        // we cannot move into ourselves descendants\n        return false;\n      }\n      if (target === this) {\n        // do not move ourselves before, after or inside ourselves\n        return false;\n      }\n      const parent = this.getParent();\n      const children = parent.getChildren();\n      const targetParent = position === 'inside' ? target : target.getParent();\n      const targetChildren = targetParent.getChildren();\n      const changes = [\n        {\n          oldIndex: children.indexOf(this),\n          oldParent: parent,\n          parent: targetParent,\n          child: this,\n          index: targetChildren.indexOf(target) + (position === 'after' ? 1 : 0)\n        }\n      ];\n\n      if (\n        (position === 'inside' && targetParent.getSchemaElement().isChildElementAllowed(this.getName())) ||\n        targetParent.isChildAllowedAtPosition(this, changes[0].index)\n      ) {\n        children.remove(this);\n        this.getNode().remove();\n        if (targetParent === parent) {\n          // target index might have changed by removing\n          changes[0].index = targetChildren.indexOf(target) + (position === 'after' ? 1 : 0);\n        }\n        targetParent.insertChild(this, changes[0].index, true, 'moved');\n        if (!skipUndo) {\n          const editor = this.getEditor();\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Move %1', this.getDisplayName()),\n              this,\n              changes,\n              'moved'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n\n    moveTo(newParent, index, skipUndo) {\n      if (this.isAncestor(newParent)) {\n        // we cannot move into ourselves descendants\n        return false;\n      }\n      const parent = this.getParent();\n      const children = parent.getChildren();\n      const changes = [\n        {\n          oldIndex: children.indexOf(this),\n          oldParent: parent,\n          parent: newParent,\n          child: this,\n          index: index\n        }\n      ];\n\n      // save old target index because we are moving inside the same parent, and the target index might change after removing\n      const target = newParent === parent && index < children.length ? children.getItem(index) : null;\n      if (newParent.isChildAllowedAtPosition(this, index)) {\n        children.remove(this);\n        this.getNode().remove();\n\n        if (target) {\n          index = children.indexOf(target);\n          changes[0].index = index;\n        }\n        newParent.insertChild(this, index, true, 'moved');\n        if (!skipUndo) {\n          const editor = this.getEditor();\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Move %1', this.getDisplayName()),\n              this,\n              changes,\n              'moved'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n\n    moveAfter(target, skipUndo) {\n      return this._move(target, 'after', skipUndo);\n    },\n\n    moveBefore(target, skipUndo) {\n      return this._move(target, 'before', skipUndo);\n    },\n\n    moveInside(target, skipUndo) {\n      return this._move(target, 'inside', skipUndo);\n    },\n\n    insertAfter(target, skipUndo) {\n      const targetParent = target.getParent();\n      const newIndex = targetParent.getChildren().indexOf(target) + 1;\n      return targetParent.insertChild(this, newIndex, skipUndo, 'added');\n    },\n\n    insertBefore(target, skipUndo) {\n      const targetParent = target.getParent();\n      const newIndex = targetParent.getChildren().indexOf(target);\n      return targetParent.insertChild(this, newIndex, skipUndo, 'added');\n    },\n\n    /**\n     * Returns a list of element names that can be added to this element.\n     * Checks the allowed elements and their bounds and the existing children\n     * to find out if we can add more of them.\n     * @param excludeComment {Boolean} exclude #comment child when set to true\n     */\n    getAddableChildren(excludeComment) {\n      if (!this.__addableChildren) {\n        if (this.getName().startsWith('#')) {\n          this.__addableChildren = [];\n        } else {\n          const schemaElement = this.getSchemaElement();\n          const allowed = schemaElement.getAllowedElements();\n          const stillAllowed = [];\n          const countExisting = {};\n          if (!this.isLoaded()) {\n            this.load();\n          }\n          this.getChildren().forEach(child => {\n            if (!Object.prototype.hasOwnProperty.call(countExisting, child.getName())) {\n              countExisting[child.getName()] = 0;\n            }\n            countExisting[child.getName()]++;\n          });\n\n          Object.keys(allowed).forEach(elementName => {\n            if (excludeComment === true && elementName === '#comment') {\n              return;\n            }\n            if (elementName === '#text' || elementName === '#cdata-section') {\n              if (schemaElement.isTextContentAllowed()) {\n                if (schemaElement.isMixed()) {\n                  // is a mixed content has only one text child and no other childs, we do not allow another text child -> avoid direct text siblings\n                  let textNodes = 0;\n                  let otherNodes = 0;\n                  Object.keys(countExisting).forEach(key => {\n                    if (key === '#text' || key === '#cdata-section') {\n                      textNodes += countExisting[key];\n                    } else {\n                      otherNodes += countExisting[key];\n                    }\n                  });\n                  if (textNodes <= otherNodes) {\n                    // we do not allow more text nodes than other nodes (e.g. a sequence of #text, elem would allow another #text node after elem)\n                    stillAllowed.push(elementName);\n                  }\n                } else if (\n                  !Object.prototype.hasOwnProperty.call(countExisting, '#text') &&\n                  !Object.prototype.hasOwnProperty.call(countExisting, '#cdata-section')\n                ) {\n                  stillAllowed.push(elementName);\n                }\n              }\n              return;\n            }\n            const childBounds = schemaElement.getBoundsForElementName(elementName);\n            const existing = Object.prototype.hasOwnProperty.call(countExisting, elementName)\n              ? countExisting[elementName]\n              : 0;\n            if (childBounds && childBounds.max > existing) {\n              stillAllowed.push(elementName);\n            }\n          });\n          this.__addableChildren = stillAllowed;\n        }\n      }\n      return this.__addableChildren;\n    },\n\n    /**\n     * Checks if a new child is allowed at the given position\n     * @param xmlElement {cv.ui.manager.model.XmlElement|String} the element or an element name as string\n     * @param index {Number} position to check, use Number.POSITIVE_INFINITY to check if the child is allowed to be appended\n     * @returns {boolean}\n     */\n    isChildAllowedAtPosition(xmlElement, index) {\n      const schemaElement = this.getSchemaElement();\n      const nodeName = xmlElement instanceof cv.ui.manager.model.XmlElement ? xmlElement.getName() : xmlElement;\n      if (!schemaElement.isChildElementAllowed(nodeName)) {\n        this.debug(nodeName, 'is not allowed as child of', this.getName());\n        return false;\n      }\n      if (schemaElement.areChildrenSortable()) {\n        // allowed at any position\n        return true;\n      }\n      // check position\n      const allowedSorting = schemaElement.getFirstLevelElementSorting();\n      if (!this.isLoaded()) {\n        this.load();\n      }\n      const children = this.getChildren();\n      if (children.length === 0) {\n        // no children yet, no position problem\n        return true;\n      }\n      let currentPosition = index;\n      if (children.length > index) {\n        currentPosition = allowedSorting[children.getItem(index).getName()];\n      } else {\n        currentPosition = children.length;\n      }\n      let targetPosition = allowedSorting[nodeName];\n      if (currentPosition === targetPosition || targetPosition >= children.length) {\n        // no special position\n        return true;\n      }\n      // find the first previous sibling of a different type\n      let previousSibling;\n      if (index > 0) {\n        for (let i = Math.min(index, children.length) - 1; i >= 0; i--) {\n          if (children.getItem(i).getName() !== nodeName) {\n            previousSibling = children.getItem(i).getName();\n            break;\n          }\n        }\n      }\n      if (previousSibling) {\n        currentPosition = allowedSorting[previousSibling];\n      }\n      // only allow if it can be inserted before\n      const allowed = currentPosition + 1 >= targetPosition;\n      if (!allowed) {\n        this.debug(nodeName, 'is not allowed as child of', this.getName());\n        return false;\n      }\n\n      return true;\n    },\n\n    findPositionForChild(newChild) {\n      const schemaElement = this.getSchemaElement();\n      if (schemaElement.isChildElementAllowed(newChild.getName())) {\n        if (!this.isLoaded()) {\n          this.load();\n        }\n        if (schemaElement.areChildrenSortable()) {\n          // any position is fine, just append it to the end\n          return this.getChildren().length;\n        }\n        const allowedSorting = schemaElement.getFirstLevelElementSorting();\n        if (allowedSorting && Object.prototype.hasOwnProperty.call(allowedSorting, newChild.getName())) {\n          const position = allowedSorting[newChild.getName()];\n          // search for the first sibling with a position > than the newChilds and insert it there\n          let targetIndex = position;\n          const found = this.getChildren().some((child, index) => {\n            const childPos = allowedSorting[child.getName()];\n            if (childPos > position) {\n              targetIndex = index;\n              return true;\n            }\n            return false;\n          });\n          if (!found) {\n            // append to the end\n            targetIndex = this.getChildren().length;\n          }\n          return targetIndex;\n        }\n      }\n      return -1;\n    },\n\n    /**\n     * insert child at given index\n     * @param xmlElement {cv.ui.manager.model.XmlElement} new child\n     * @param index {Number} index to insert the child, if set to -1 insert it at any allowed position\n     * @param skipUndo {Boolean} do not add an undo operation for this change\n     * @param internalOperation\n     * @return {Boolean} true if the child has been added\n     */\n    insertChild(xmlElement, index, skipUndo, internalOperation) {\n      if (!this.isLoaded()) {\n        this.load();\n      }\n      const children = this.getChildren();\n      let success = false;\n      if (index === -1) {\n        index = this.findPositionForChild(xmlElement);\n        if (index === -1) {\n          // no valid position found\n          return false;\n        }\n      }\n      if (this.isChildAllowedAtPosition(xmlElement, index)) {\n        if (index >= children.length) {\n          // append\n          this._node.appendChild(xmlElement.getNode());\n          children.push(xmlElement);\n          success = true;\n        } else if (index === 0) {\n          // add before first child\n          this._node.insertBefore(xmlElement.getNode(), this._node.childNodes[0]);\n\n          children.unshift(xmlElement);\n          success = true;\n        } else {\n          const previousChild = children.getItem(index);\n          if (previousChild) {\n            previousChild.getNode().before(xmlElement.getNode());\n            children.insertBefore(previousChild, xmlElement);\n            success = true;\n          }\n        }\n      }\n      if (success) {\n        const editor = this.getEditor();\n        xmlElement.setParent(this);\n        if (xmlElement.$$removed) {\n          delete xmlElement.$$removed;\n          if (editor) {\n            editor.updateModified(xmlElement);\n          }\n          xmlElement.updateModified();\n        } else if (!internalOperation || internalOperation === 'added') {\n          xmlElement.$$added = true;\n          xmlElement.updateModified();\n        }\n        this.updateModified();\n        if (children.length === 1) {\n          // first child added -> open it\n          this.setOpen(true);\n        }\n        if (!skipUndo) {\n          if (editor) {\n            const changes = [\n              {\n                index: index,\n                parent: this,\n                child: xmlElement\n              }\n            ];\n\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Add %1', this.getDisplayName()),\n              this,\n              changes,\n              'created'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n      }\n      return success;\n    },\n\n    _validateTextContent(value) {\n      // do not validate content that is loaded from the actual node\n      if (!this.__initializing) {\n        if (this._node) {\n          if (!this.getSchemaElement().isValueValid(value)) {\n            throw new qx.core.ValidationError(qx.locale.Manager.tr('Invalid text content: \\'%1\\'', value));\n          }\n        } else {\n          throw new qx.core.ValidationError(qx.locale.Manager.tr('Text content not allowed here'));\n        }\n      }\n    },\n\n    /**\n     * Validate this element (and its parent when this is a text node)\n     * @param recursive {Boolean} validate children too\n     */\n    validate(recursive) {\n      const schemaElement = this.getSchemaElement();\n      if (this.isTextNode()) {\n        this.getParent().validate(false);\n        this.setValid(schemaElement.isValueValid(this.getText()));\n      } else if (this.isElement()) {\n        const allowedAttributes = schemaElement.getAllowedAttributes();\n        const errors = [];\n        // check attribute values\n        for (let i = 0; i < this._node.attributes.length; i++) {\n          const attr = this._node.attributes.item(i);\n          if (Object.prototype.hasOwnProperty.call(allowedAttributes, attr.name)) {\n            if (!allowedAttributes[attr.name].isValueValid(attr.value)) {\n              errors.push({\n                attribute: attr.name,\n                error: qx.locale.Manager.tr('Invalid value')\n              });\n            }\n          } else {\n            errors.push({\n              attribute: attr.name,\n              error: qx.locale.Manager.tr('Attribute \\'%1\\' not allowed', attr.name)\n            });\n          }\n        }\n        // check for missing required attributes\n        Object.keys(allowedAttributes)\n          .filter(name => !allowedAttributes[name].isOptional())\n          .forEach(name => {\n            if (!this._node.hasAttribute(name)) {\n              errors.push({\n                attribute: name,\n                error: qx.locale.Manager.tr('Attribute \\'%1\\' is required but missing', name)\n              });\n            }\n          });\n        if (schemaElement.isTextContentRequired()) {\n          // check if we have at least one non empty #text child\n          const found = this.getChildren().some(child => child.isTextNode() && child.getNode().nodeValue.trim() !== '');\n\n          if (!found) {\n            errors.push({\n              attribute: '#text',\n              error: qx.locale.Manager.tr('Text content is missing')\n            });\n          }\n        }\n        if (schemaElement.isTextContentAllowed()) {\n          this.getChildren().forEach(child => {\n            if (child.isTextNode()) {\n              child.load();\n              child.setValid(schemaElement.isValueValid(child.getText()));\n              if (!child.isValid()) {\n                child.setInvalidMessage(qx.locale.Manager.tr('Text content is invalid'));\n              }\n            }\n          });\n        }\n        this.setInvalidMessage(errors.map(err => err.error).join('<br/>'));\n        this.setValid(errors.length === 0);\n      }\n    },\n\n    isTextNode() {\n      return this.getName() === '#text' || this.getName() === '#cdata-section';\n    },\n\n    _applyTextContent(value) {\n      if (!this.__initializing) {\n        if (this._node) {\n          if (\n            this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE\n          ) {\n            this._node.nodeValue = value;\n            this.updateDisplayName();\n          } else if (this._node.nodeType === Node.ELEMENT_NODE) {\n            this._node.textContent = value;\n          }\n        }\n      }\n    },\n\n    getText() {\n      return this.getTextContent();\n    },\n\n    setText(text, nodeName) {\n      let changed = false;\n      let newValue = text;\n      let oldValue = '';\n      if (this.getSchemaElement().isTextContentAllowed()) {\n        oldValue = this.getTextContent();\n        if (this.getSchemaElement().isValueValid(text)) {\n          if (oldValue !== text) {\n            this.setTextContent(text);\n            changed = true;\n          }\n        } else {\n          this.error('\\'' + text + '\\' is no valid text content for a \\'' + this.getName() + '\\' element');\n        }\n      } else {\n        this.error('text content is not allowed for a \\'' + this.getName() + '\\' element');\n      }\n      return {\n        changed: changed,\n        attribute: nodeName || '#text',\n        value: newValue,\n        old: oldValue\n      };\n    },\n\n    getAttribute(name) {\n      return this._node.getAttribute(name);\n    },\n\n    setAttribute(name, value) {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        const attribute = this.getSchemaElement().getAllowedAttributes()[name];\n        let changed = false;\n        let newValue = value;\n        let oldValue = this._node.hasAttribute(name) ? this._node.getAttribute(name) : '';\n        if (attribute) {\n          if (value === null || value === undefined) {\n            value = '';\n          } else {\n            value = '' + value;\n          }\n          value = value.replace(/[&\"'`]/g, function (s) {\n            return cv.ui.manager.model.XmlElement.entityMap[s];\n          });\n          newValue = value;\n          if (attribute.isValueValid(value)) {\n            if (oldValue !== value) {\n              if (!value || value === attribute.getDefaultValue()) {\n                this._node.removeAttribute(name);\n                newValue = '';\n              } else {\n                this._node.setAttribute(name, value);\n              }\n              if (name === 'name') {\n                this.updateDisplayName();\n                if (this.getName() === 'icon') {\n                  this._maintainIcon();\n                }\n              }\n              changed = true;\n            }\n          } else {\n            this.error('\\'' + value + '\\' is not allowed for attribute \\'' + name + '\\'');\n          }\n        } else {\n          this.error('\\'' + name + '\\' is no allowed attribute for a \\'' + this.getName() + '\\' element');\n        }\n        return {\n          changed: changed,\n          attribute: name,\n          value: newValue,\n          old: oldValue\n        };\n      } else if (\n        (this._node.nodeType === Node.TEXT_NODE && name === '#text') ||\n        (this._node.nodeType === Node.CDATA_SECTION_NODE && name === '#cdata-section')\n      ) {\n        return this.setText(value, name);\n      } else if (this._node.nodeType === Node.COMMENT_NODE && name === '#comment') {\n        const oldValue = this.getTextContent();\n        const changed = value !== oldValue;\n        this.setTextContent(value);\n        return {\n          changed: changed,\n          attribute: name,\n          value: value,\n          old: oldValue\n        };\n      }\n      return null;\n    },\n\n    /**\n     * @return {Boolean} true if this element is a required child from its parent\n     */\n    isRequired() {\n      const parent = this.getParent();\n      if (parent) {\n        const requiredFromParent = parent.getSchemaElement().getRequiredElements();\n        return requiredFromParent.includes(this.getName());\n      }\n      // only root element has nor parent, and a root element is always required\n      return true;\n    },\n\n    setAttributes(data) {\n      const changes = [];\n      let change;\n      const parentChanges = [];\n      const isTextNode = this.getName() === '#text' || this.getName() === '#cdata-section';\n      const parent = this.getParent();\n      Object.keys(data).forEach(attrName => {\n        if (isTextNode && !attrName.startsWith('#')) {\n          // special mode for editing text content from a data provider with hints, those hints must be applied to the parent\n          change = parent.setAttribute(attrName, data[attrName]);\n          if (change.changed) {\n            parentChanges.push(change);\n          }\n        } else if (attrName === '#outerHTML' || attrName === '#innerHTML') {\n          if (this.getSchemaElement().isChildElementAllowed('*')) {\n            const dom = new DOMParser().parseFromString(data[attrName], 'text/xml');\n\n            if (dom.getElementsByTagName('parsererror').length === 0) {\n              const oldValue = attrName === '#outerHTML' ? this._node.outerHTML : this._node.innerHTML;\n              const newNode = dom.documentElement;\n              if (attrName === '#outerHTML') {\n                const oldNode = this._node;\n                oldNode.parentNode.replaceChild(newNode, oldNode);\n                this._node = newNode;\n                this.setName(this._node.nodeName);\n              } else {\n                this._node.innerHTML = data[attrName];\n              }\n              changes.push({\n                changed: true,\n                attribute: attrName,\n                value: data[attrName],\n                old: oldValue\n              });\n\n              this.load(true);\n            }\n          } else if (attrName === '#innerHTML' && !data[attrName]) {\n            // allow empty values\n            const oldValue = this._node.innerHTML;\n            this._node.innerHTML = data[attrName];\n            changes.push({\n              changed: true,\n              attribute: attrName,\n              value: data[attrName],\n              old: oldValue\n            });\n\n            this.load(true);\n          }\n        } else {\n          change = this.setAttribute(attrName, data[attrName]);\n          if (change.changed) {\n            changes.push(change);\n          }\n        }\n      });\n      const editor = this.getEditor();\n      if (editor && changes.length > 0) {\n        if (parentChanges.length > 0) {\n          const parentChange = new cv.ui.manager.model.ElementChange(\n            qx.locale.Manager.tr('Change %1', parent.getDisplayName()),\n            parent,\n            parentChanges\n          );\n\n          changes.push(parentChange);\n          parent.updateModified();\n        }\n        editor.addUndo(\n          new cv.ui.manager.model.ElementChange(qx.locale.Manager.tr('Change %1', this.getDisplayName()), this, changes)\n        );\n      }\n      this.updateModified();\n    },\n\n    _applySchemaElement(schemaElement) {\n      if (schemaElement) {\n        this._structure = schemaElement.getSchema().getStructure();\n      } else {\n        this._structure = null;\n      }\n      schemaElement.bind('sortable', this, 'sortable', {\n        converter: function (value) {\n          return this.isEditable() && value;\n        }.bind(this)\n      });\n    },\n\n    _onOpen(value) {\n      if (value && !this.isLoaded()) {\n        this.load();\n      }\n      this._maintainIcon();\n    },\n\n    _applyModified() {\n      this.updateDisplayName();\n    },\n\n    updateDisplayName() {\n      let displayName = this.getName();\n      if (this._node) {\n        if (this._node.nodeType === Node.ELEMENT_NODE) {\n          if (this._node.hasAttribute('name')) {\n            const nameAttr = this._node.getAttribute('name');\n            displayName += ' \"' + nameAttr + '\"';\n          } else if (this.getSchemaElement().getSchema().isRoot(this.getName()) && this._node.hasAttribute('design')) {\n            const designAttr = this._node.getAttribute('design');\n            displayName += ' \"' + designAttr + '\"';\n          }\n        } else if (\n          (this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE) &&\n          this._node.nodeValue.trim()\n        ) {\n          let textContent = this._node.nodeValue.trim();\n          if (textContent.length > 26) {\n            textContent = textContent.substring(0, 26) + '...';\n          }\n          displayName = textContent;\n        }\n      }\n      if (this.isModified()) {\n        displayName += ' *';\n      }\n      this.setDisplayName(displayName);\n    },\n    hasChildren() {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        if (this._node && this._node.hasChildNodes()) {\n          for (let i = 0; i < this._node.childNodes.length; i++) {\n            const childNode = this._node.childNodes.item(i);\n            if (\n              childNode.nodeType === Node.ELEMENT_NODE ||\n              ((childNode.nodeType === Node.TEXT_NODE || childNode.nodeType === Node.CDATA_SECTION_NODE) &&\n                childNode.nodeValue.trim() !== '')\n            ) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    load(force) {\n      if (!this.isLoaded() || force) {\n        this.__initializing = true;\n        const children = this.getChildren();\n        children.removeListener('change', this._syncChildNodes, this);\n        children.removeAll();\n        if (this._node) {\n          if (this._node.nodeType === Node.ELEMENT_NODE) {\n            // read children\n            const schemaElement = this.getSchemaElement();\n            this._initialChildNames = [];\n            for (let i = 0; i < this._node.childNodes.length; i++) {\n              const childNode = this._node.childNodes.item(i);\n              const childSchemaElement = schemaElement.getSchemaElementForElementName(childNode.nodeName);\n\n              if (childSchemaElement) {\n                if (childNode.nodeType === Node.ELEMENT_NODE) {\n                  const child = new cv.ui.manager.model.XmlElement(\n                    childNode,\n                    childSchemaElement,\n                    this.getEditor(),\n                    this\n                  );\n\n                  children.push(child);\n                  this._initialChildNames.push(childNode.nodeName);\n                } else if (childNode.nodeType === Node.TEXT_NODE || childNode.nodeType === Node.CDATA_SECTION_NODE) {\n                  if (childNode.nodeValue.trim()) {\n                    // do not use childSchemaElement here, because our schemeElement already knows how to validate text\n                    const child = new cv.ui.manager.model.XmlElement(childNode, schemaElement, this.getEditor(), this);\n\n                    if (schemaElement.isMixed()) {\n                      // text nodes can be re-ordered in mixed content\n                      child.setSortable(true);\n                    }\n                    children.push(child);\n                    if (childNode.nodeValue.trim()) {\n                      this._initialChildNames.push(childNode.nodeName);\n                    }\n                  }\n                } else if (childNode.nodeType === Node.COMMENT_NODE) {\n                  if (childNode.nodeValue) {\n                    const child = new cv.ui.manager.model.XmlElement(\n                      childNode,\n                      childSchemaElement,\n                      this.getEditor(),\n                      this\n                    );\n\n                    // comment nodes are allowed everywhere. but we do not allow them to be moved via drag&drop now\n                    // because comments might contains template conditions, which will get invalid when moved and we cannot validate that\n                    child.setSortable(false);\n                    children.push(child);\n                    if (childNode.nodeValue.trim()) {\n                      this._initialChildNames.push(childNode.nodeName);\n                    }\n                  }\n                }\n              } else if (childNode.nodeType === Node.ELEMENT_NODE) {\n                if (schemaElement.isChildElementAllowed(childNode.nodeName)) {\n                  // allowed but no schema element\n                  const child = new cv.ui.manager.model.XmlElement(childNode, schemaElement, this.getEditor(), this);\n\n                  if (schemaElement.isMixed()) {\n                    // text nodes can be re-ordered in mixed content\n                    child.setSortable(true);\n                  }\n                  children.push(child);\n                  this._initialChildNames.push(childNode.nodeName);\n                } else {\n                  // only complain for real childs (no comments, textNodes)\n                  this.setValid(false);\n                  let msg = this.getInvalidMessage();\n                  msg =\n                    (msg ? msg + '<br/>' : '') +\n                    qx.locale.Manager.tr('Child element \\'%1\\' not allowed.', childNode.nodeName);\n\n                  this.setInvalidMessage(msg);\n                  this.setValid(false);\n                }\n              }\n            }\n\n            // read attributes\n            this._initialAttributes.clear();\n            for (let i = 0; i < this._node.attributes.length; i++) {\n              const attr = this._node.attributes.item(i);\n              this._initialAttributes.set(attr.name, attr.value);\n            }\n          } else if (\n            this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE\n          ) {\n            this._initialTextContent = this._node.nodeValue;\n            try {\n              this.setTextContent(this._node.nodeValue);\n            } catch (e) {\n              this.appendInvalidMessage(e.toString());\n            }\n          }\n        }\n        this.setLoaded(true);\n        children.addListener('change', this._syncChildNodes, this);\n        this._updateChildrenDeletableFlags();\n        this.__initializing = false;\n      }\n    },\n\n    appendInvalidMessage(errorMsg) {\n      if (errorMsg) {\n        const existing = this.getInvalidMessage();\n        this.setInvalidMessage(existing ? existing + '<br/>' + errorMsg : errorMsg);\n      }\n    },\n\n    updateModified() {\n      if (this.$$added) {\n        this.setModified(true);\n      } else if (this._node.nodeType === Node.ELEMENT_NODE) {\n        const initial = this._initialAttributes;\n        const currentChildNames = this._currentChildNames();\n        if (this._node.attributes.length !== initial.size) {\n          this.setModified(true);\n        } else if (\n          currentChildNames.length !== this._initialChildNames.length ||\n          currentChildNames.join('') !== this._initialChildNames.join('')\n        ) {\n          this.setModified(true);\n        } else {\n          let modified = false;\n          for (const [key, value] of initial) {\n            if (!this._node.hasAttribute(key) || this._node.getAttribute(key) !== value) {\n              modified = true;\n              break;\n            }\n          }\n          this.setModified(modified);\n        }\n      } else if (\n        this._node.nodeType === Node.TEXT_NODE ||\n        this._node.nodeType === Node.COMMENT_NODE ||\n        this._node.nodeType === Node.CDATA_SECTION_NODE\n      ) {\n        this.setModified(this._initialTextContent !== this.getTextContent());\n      }\n      const editor = this.getEditor();\n      if (editor) {\n        editor.updateModified(this);\n      }\n    },\n\n    /**\n     * Special check if this element has modified children (position, of length)\n     * This is used to determine if the preview highlighting needs to be disabled because the xml structure has changed\n     * @returns {*|boolean}\n     */\n    hasChildrenModified() {\n      if (this._node.nodeType === Node.ELEMENT_NODE && this.isLoaded()) {\n        const currentChildNames = this._currentChildNames();\n        return (\n          this.isModified() &&\n          (currentChildNames.length !== this._initialChildNames.length ||\n            currentChildNames.join('') !== this._initialChildNames.join(''))\n        );\n      }\n      return false;\n    },\n\n    onSaved() {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        // read attributes\n        this._initialAttributes.clear();\n        for (let i = 0; i < this._node.attributes.length; i++) {\n          const attr = this._node.attributes.item(i);\n          this._initialAttributes.set(attr.name, attr.value);\n        }\n        this._initialChildNames = this._currentChildNames();\n      } else if (\n        this._node.nodeType === Node.TEXT_NODE ||\n        this._node.nodeType === Node.COMMENT_NODE ||\n        this._node.nodeType === Node.CDATA_SECTION_NODE\n      ) {\n        this._initialTextContent = this._node.nodeValue;\n      }\n      if (this.$$added) {\n        delete this.$$added;\n      }\n      this.setModified(false);\n    },\n\n    isElement() {\n      return this._node.nodeType === Node.ELEMENT_NODE;\n    },\n\n    _currentChildNames() {\n      const names = [];\n      let name;\n      let widget;\n      for (let i = 0; i < this._node.childNodes.length; i++) {\n        const childNode = this._node.childNodes.item(i);\n        if (childNode.nodeType === Node.ELEMENT_NODE) {\n          widget = this._node.$$widget;\n          name = widget ? widget.getDisplayName() : childNode.nodeName;\n          names.push(name);\n        } else if (\n          (childNode.nodeType === Node.TEXT_NODE ||\n            childNode.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE) &&\n          childNode.nodeValue.trim()\n        ) {\n          names.push(childNode.nodeName);\n        }\n      }\n      return names;\n    },\n\n    _syncChildNodes(ev) {\n      // children have changed clear cache\n      this.__addableChildren = null;\n      // we have to update all deletable flags for this elements children, when their siblings changed\n      this._updateChildrenDeletableFlags();\n    },\n\n    _updateChildrenDeletableFlags() {\n      if (this.isEditable()) {\n        this.getChildren().forEach(child => {\n          if (child.isElement() || child.isTextNode()) {\n            child.updateDeletable();\n          }\n        });\n      }\n    },\n\n    getWidgetPath() {\n      if (this.getName() === '#comment') {\n        return '';\n      }\n      const schema = this.getSchemaElement().getSchema();\n      const widgets = schema.getWidgetNames();\n      let current = this;\n      while (current && !widgets.includes(current.getName())) {\n        current = current.getParent();\n      }\n      if (!current) {\n        return '';\n      }\n      if (this._structure === 'pure') {\n        if (current.getName() === 'navbar') {\n          return 'navbar' + qx.lang.String.firstUp(current.getAttribute('position'));\n        }\n\n        const ids = [];\n        let c = current;\n        while (c) {\n          const parent = c.getParent();\n          if (parent.getName() === 'pages') {\n            ids.unshift('id');\n            break;\n          }\n          let id = parent\n            .getChildren()\n            .filter(child => child.getNode().nodeType === Node.ELEMENT_NODE && child.getName() !== 'layout')\n            .indexOf(c);\n          ids.unshift(id);\n          c = parent;\n        }\n        if (current.getName() === 'page') {\n          // make sure that the join ends with '_'\n          ids.push('');\n        }\n        return '#' + ids.join('_');\n      } else if (this._structure === 'tile') {\n        let c = current.getNode();\n        let index = 0;\n        let selector = '';\n        while (c) {\n          const parent = c.parentElement;\n          if (c.hasAttribute('id')) {\n            selector = selector ? `#${c.getAttribute('id')} > ${selector}` : `#${c.getAttribute('id')}`;\n            break;\n          } else if (c.nodeName.toLowerCase() === 'config') {\n            selector = selector ? `config > ${selector}` : 'config';\n            break;\n          } else {\n            index = Array.prototype.indexOf.call(parent.children, c) + 1;\n            selector = selector ? `*:nth-child(${index}) > ${selector}` : `*:nth-child(${index})`;\n          }\n          c = parent;\n        }\n        return selector;\n      }\n      return '';\n    },\n\n    // overridden\n    clone() {\n      return new cv.ui.manager.model.XmlElement(this._node.cloneNode(true), this.getSchemaElement(), this.getEditor());\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._node = null;\n    this._schema = null;\n    this._initialAttributes = null;\n    this.__addableChildren = null;\n    this._disposeObjects('_schemaElement');\n  }\n});\n"
  ],
  "mappings": "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"
}