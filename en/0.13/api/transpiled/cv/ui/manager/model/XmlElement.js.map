{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "construct",
    "node",
    "schemaElement",
    "editor",
    "parent",
    "_node",
    "children",
    "Array",
    "$$widget",
    "setSchemaElement",
    "initName",
    "nodeName",
    "_updateShowEditButton",
    "hasChildren",
    "push",
    "cv",
    "ui",
    "manager",
    "model",
    "XmlElement",
    "setEditor",
    "setParent",
    "_maintainIcon",
    "_maintainStatus",
    "initChildren",
    "_initialAttributes",
    "Map",
    "bind",
    "statics",
    "entityMap",
    "properties",
    "check",
    "nullable",
    "event",
    "apply",
    "name",
    "deferredInit",
    "displayName",
    "init",
    "open",
    "loaded",
    "textContent",
    "validate",
    "temporary",
    "valid",
    "invalidMessage",
    "status",
    "editable",
    "sortable",
    "deletable",
    "modified",
    "showEditButton",
    "icon",
    "dragging",
    "members",
    "_schema",
    "_schemaElement",
    "_initialChildNames",
    "_initialTextContent",
    "__initializing",
    "__addableChildren",
    "_structure",
    "nodeType",
    "Node",
    "COMMENT_NODE",
    "setStatus",
    "isValid",
    "_applyValid",
    "value",
    "resetInvalidMessage",
    "convertTextNodeType",
    "newType",
    "isTextNode",
    "TEXT_NODE",
    "CDATA_SECTION_NODE",
    "content",
    "getText",
    "oldNode",
    "newTextNode",
    "ownerDocument",
    "createCDATASection",
    "createTextNode",
    "parentNode",
    "replaceChild",
    "setName",
    "load",
    "setIcon",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "getName",
    "getAttribute",
    "indexOf",
    "source",
    "IconHandler",
    "getInstance",
    "getIconSource",
    "isOpen",
    "_applyEditable",
    "updateDeletable",
    "getSchemaElement",
    "setShowEditButton",
    "isTextContentAllowed",
    "startsWith",
    "keys",
    "getAllowedAttributes",
    "length",
    "isChildElementAllowed",
    "isEditable",
    "setDeletable",
    "getParent",
    "isTextContentRequired",
    "existing",
    "getChildren",
    "filter",
    "child",
    "requiredFromParent",
    "getRequiredElements",
    "includes",
    "bounds",
    "getBoundsForElementName",
    "min",
    "getNode",
    "remove",
    "skipUndo",
    "changes",
    "index",
    "getEditor",
    "$$removed",
    "updateModified",
    "change",
    "ElementChange",
    "locale",
    "Manager",
    "tr",
    "getDisplayName",
    "addUndo",
    "isAncestor",
    "element",
    "_move",
    "target",
    "position",
    "targetParent",
    "targetChildren",
    "oldIndex",
    "oldParent",
    "isChildAllowedAtPosition",
    "insertChild",
    "moveTo",
    "newParent",
    "getItem",
    "moveAfter",
    "moveBefore",
    "moveInside",
    "insertAfter",
    "newIndex",
    "insertBefore",
    "getAddableChildren",
    "excludeComment",
    "allowed",
    "getAllowedElements",
    "stillAllowed",
    "countExisting",
    "isLoaded",
    "forEach",
    "prototype",
    "hasOwnProperty",
    "call",
    "elementName",
    "isMixed",
    "textNodes",
    "otherNodes",
    "key",
    "childBounds",
    "max",
    "xmlElement",
    "debug",
    "areChildrenSortable",
    "allowedSorting",
    "getFirstLevelElementSorting",
    "currentPosition",
    "targetPosition",
    "previousSibling",
    "i",
    "Math",
    "findPositionForChild",
    "newChild",
    "targetIndex",
    "found",
    "some",
    "childPos",
    "internalOperation",
    "success",
    "appendChild",
    "childNodes",
    "unshift",
    "previousChild",
    "before",
    "$$added",
    "setOpen",
    "_validateTextContent",
    "isValueValid",
    "ValidationError",
    "recursive",
    "setValid",
    "isElement",
    "allowedAttributes",
    "errors",
    "attributes",
    "attr",
    "item",
    "attribute",
    "error",
    "isOptional",
    "hasAttribute",
    "nodeValue",
    "trim",
    "setInvalidMessage",
    "map",
    "err",
    "join",
    "_applyTextContent",
    "updateDisplayName",
    "ELEMENT_NODE",
    "getTextContent",
    "setText",
    "text",
    "changed",
    "newValue",
    "oldValue",
    "setTextContent",
    "old",
    "setAttribute",
    "undefined",
    "replace",
    "s",
    "getDefaultValue",
    "removeAttribute",
    "isRequired",
    "setAttributes",
    "parentChanges",
    "attrName",
    "dom",
    "DOMParser",
    "parseFromString",
    "getElementsByTagName",
    "outerHTML",
    "innerHTML",
    "newNode",
    "documentElement",
    "parentChange",
    "_applySchemaElement",
    "getSchema",
    "getStructure",
    "converter",
    "_onOpen",
    "_applyModified",
    "nameAttr",
    "isRoot",
    "designAttr",
    "substring",
    "isModified",
    "setDisplayName",
    "hasChildNodes",
    "childNode",
    "force",
    "removeListener",
    "_syncChildNodes",
    "removeAll",
    "childSchemaElement",
    "getSchemaElementForElementName",
    "setSortable",
    "msg",
    "getInvalidMessage",
    "clear",
    "set",
    "e",
    "appendInvalidMessage",
    "toString",
    "setLoaded",
    "addListener",
    "_updateChildrenDeletableFlags",
    "errorMsg",
    "setModified",
    "initial",
    "currentChildNames",
    "_currentChildNames",
    "size",
    "hasChildrenModified",
    "onSaved",
    "names",
    "widget",
    "ev",
    "getWidgetPath",
    "schema",
    "widgets",
    "getWidgetNames",
    "current",
    "lang",
    "String",
    "firstUp",
    "ids",
    "c",
    "id",
    "selector",
    "parentElement",
    "toLowerCase",
    "clone",
    "cloneNode",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/XmlElement.js"
  ],
  "sourcesContent": [
    "/* XmlElement.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Represents an Element or TextNode in an XML document\n */\nqx.Class.define('cv.ui.manager.model.XmlElement', {\n  extend: qx.core.Object,\n  include: [qx.data.marshal.MEventBubbling],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schemaElement, editor, parent) {\n    super();\n    this._node = node;\n    const children = new qx.data.Array();\n    if (node) {\n      this._node.$$widget = this;\n      this.setSchemaElement(schemaElement);\n      this.initName(node.nodeName);\n      this._updateShowEditButton();\n      if (this.hasChildren()) {\n        // we have to add a fake node to the children to show the tree that this node has children\n        // it will be removed when the real children are loaded\n        children.push(new cv.ui.manager.model.XmlElement());\n      }\n      if (editor) {\n        this.setEditor(editor);\n      }\n      if (parent) {\n        this.setParent(parent);\n      }\n      this._maintainIcon();\n      this._maintainStatus();\n    } else {\n      // this is a fake node needed for children simulation\n      this.initName('#temp');\n    }\n    this.initChildren(children);\n    this._initialAttributes = new Map();\n    this.bind('editor.file.writeable', this, 'editable');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    entityMap: {\n      '&': '&amp;',\n      '\"': '&quot;',\n      '\\'': '&#39;',\n      '`': '&#x60;'\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    // the current editor this element os shown in\n    editor: {\n      check: 'cv.ui.manager.editor.Tree',\n      nullable: true,\n      event: 'changeEditor'\n    },\n\n    schemaElement: {\n      check: 'cv.ui.manager.model.schema.Element',\n      apply: '_applySchemaElement'\n    },\n\n    name: {\n      check: 'String',\n      deferredInit: true,\n      event: 'changeName',\n      apply: 'updateDisplayName'\n    },\n\n    displayName: {\n      check: 'String',\n      init: '',\n      event: 'changeDisplayName'\n    },\n\n    open: {\n      check: 'Boolean',\n      event: 'changeOpen',\n      init: false,\n      apply: '_onOpen'\n    },\n\n    loaded: {\n      check: 'Boolean',\n      event: 'changeLoaded',\n      init: false\n    },\n\n    children: {\n      check: 'qx.data.Array',\n      event: 'changeChildren',\n      apply: '_applyEventPropagation',\n      deferredInit: true\n    },\n\n    textContent: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyTextContent',\n      event: 'changeTextContent',\n      validate: '_validateTextContent'\n    },\n\n    /**\n     * Temporary nodes are not save in the backend yet\n     */\n    temporary: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeTemporary'\n    },\n\n    /**\n     * Validation result for this nodes content\n     */\n    valid: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeValid',\n      apply: '_applyValid'\n    },\n\n    invalidMessage: {\n      check: 'String',\n      init: '',\n      event: 'changeInvalidMessage'\n    },\n\n    status: {\n      check: ['error', 'valid', 'comment'],\n      init: 'valid',\n      event: 'changeStatus'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeEditable',\n      apply: '_applyEditable'\n    },\n\n    sortable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeSortable'\n    },\n\n    /**\n     * true if this element can be deleted (either no bounds.min or more existing elements)\n     */\n    deletable: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeDeletable'\n    },\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyModified'\n    },\n\n    showEditButton: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeShowEditButton'\n    },\n\n    parent: {\n      check: 'cv.ui.manager.model.XmlElement',\n      nullable: true\n    },\n\n    // icon to show in the tree\n    icon: {\n      check: 'String',\n      nullable: true,\n      event: 'changeIcon'\n    },\n\n    dragging: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeDragging'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _node: null,\n    _schema: null,\n    _schemaElement: null,\n    _initialAttributes: null,\n    _initialChildNames: null,\n    _initialTextContent: null,\n    __initializing: false,\n    __addableChildren: null,\n    _structure: null,\n\n    _maintainStatus() {\n      if (this._node.nodeType === Node.COMMENT_NODE) {\n        this.setStatus('comment');\n      } else if (!this.isValid()) {\n        this.setStatus('error');\n      } else {\n        this.setStatus('valid');\n      }\n    },\n\n    _applyValid(value) {\n      this._maintainStatus();\n      if (value) {\n        this.resetInvalidMessage();\n      }\n    },\n\n    convertTextNodeType(newType) {\n      if (\n        this.isTextNode() &&\n        this._node.nodeType !== newType &&\n        (newType === Node.TEXT_NODE || newType === Node.CDATA_SECTION_NODE)\n      ) {\n        const content = this.getText();\n        const oldNode = this._node;\n        const newTextNode =\n          newType === Node.CDATA_SECTION_NODE\n            ? this._node.ownerDocument.createCDATASection(content)\n            : this._node.ownerDocument.createTextNode(content);\n        if (oldNode.parentNode) {\n          oldNode.parentNode.replaceChild(newTextNode, oldNode);\n        }\n        this._node = newTextNode;\n        this.setName(this._node.nodeName);\n        this.load(true);\n      }\n    },\n\n    _maintainIcon() {\n      if (this._node) {\n        if (this._node.nodeType === Node.TEXT_NODE || this._node.nodeType === Node.CDATA_SECTION_NODE) {\n          this.setIcon(cv.theme.dark.Images.getIcon('text-fields', 18));\n          return;\n        } else if (this._node.nodeType === Node.COMMENT_NODE) {\n          this.setIcon(cv.theme.dark.Images.getIcon('comment-fields', 18));\n          return;\n        } else if (\n          this.getName() === 'icon' &&\n          this.getAttribute('name') &&\n          this.getAttribute('name').indexOf('{{') === -1\n        ) {\n          // try to use the configured icon (if its not set by a template variable)\n          const source = cv.IconHandler.getInstance().getIconSource(this.getAttribute('name'), 'tree-icon');\n\n          if (source) {\n            this.setIcon(source);\n          } else {\n            this.setIcon(cv.theme.dark.Images.getIcon('image', 18));\n          }\n          return;\n        }\n      }\n      if (this.isOpen()) {\n        this.setIcon(cv.theme.dark.Images.getIcon('folder-open', 18));\n      } else {\n        this.setIcon(cv.theme.dark.Images.getIcon('folder', 18));\n      }\n    },\n\n    _applyEditable() {\n      this._updateShowEditButton();\n      this.updateDeletable();\n    },\n\n    _updateShowEditButton() {\n      const schemaElement = this.getSchemaElement();\n      this.setShowEditButton(\n        (schemaElement.isTextContentAllowed() && this.getName().startsWith('#')) ||\n          Object.keys(schemaElement.getAllowedAttributes()).length > 0 ||\n          schemaElement.isChildElementAllowed('*') // any element allowed, this is edited as text (outerHTML)\n      );\n    },\n\n    updateDeletable() {\n      if (!this.isEditable()) {\n        this.setDeletable(false);\n      } else {\n        const parent = this.getParent();\n        if (this.isTextNode()) {\n          if (this.getSchemaElement().isTextContentRequired()) {\n            const existing = parent.getChildren().filter(child => child.isTextNode()).length;\n            this.setDeletable(existing > 1);\n          } else {\n            this.setDeletable(true);\n          }\n        } else {\n          let deletable = false;\n          if (parent) {\n            const schemaElement = parent.getSchemaElement();\n            const requiredFromParent = schemaElement.getRequiredElements();\n            if (requiredFromParent.includes(this.getName())) {\n              const bounds = schemaElement.getBoundsForElementName(this.getName());\n\n              if (bounds) {\n                const existing = parent.getChildren().filter(child => child.getName() === this.getName()).length;\n                // check if we can afford to delete one\n                deletable = bounds.min <= existing - 1;\n              } else {\n                deletable = true;\n              }\n            } else {\n              deletable = true;\n            }\n          } else {\n            deletable = true;\n          }\n          this.setDeletable(deletable);\n        }\n      }\n    },\n\n    getNode() {\n      return this._node;\n    },\n\n    remove(skipUndo) {\n      const parent = this.getParent();\n      if (parent) {\n        const changes = [\n          {\n            index: parent.getChildren().indexOf(this),\n            parent: parent,\n            child: this\n          }\n        ];\n\n        this._node.remove();\n        parent.getChildren().remove(this);\n        const editor = this.getEditor();\n        this.$$removed = true;\n        if (editor) {\n          // editor should not consider the modification state of removed elements\n          editor.updateModified(this);\n        }\n        parent.updateModified();\n        if (!skipUndo) {\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Remove %1', this.getDisplayName()),\n              this,\n              changes,\n              'deleted'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n      }\n    },\n\n    /**\n     * Check is this element is an ancestor of the given element\n     * @param element {cv.ui.manager.model.XmlElement} element to check\n     * @returns {boolean}\n     */\n    isAncestor(element) {\n      let parent = element.getParent();\n      while (parent) {\n        if (parent === this) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n      return false;\n    },\n\n    /**\n     * Move this node to a new position in relation to the target\n     * @param target {cv.ui.manager.model.XmlElement} new direct sibling\n     * @param position {String} more 'before', 'after' or 'inside' target\n     * @param skipUndo {Boolean} no not add an undo operation for this\n     * @private\n     */\n    _move(target, position, skipUndo) {\n      if (this.isAncestor(target)) {\n        // we cannot move into ourselves descendants\n        return false;\n      }\n      if (target === this) {\n        // do not move ourselves before, after or inside ourselves\n        return false;\n      }\n      const parent = this.getParent();\n      const children = parent.getChildren();\n      const targetParent = position === 'inside' ? target : target.getParent();\n      const targetChildren = targetParent.getChildren();\n      const changes = [\n        {\n          oldIndex: children.indexOf(this),\n          oldParent: parent,\n          parent: targetParent,\n          child: this,\n          index: targetChildren.indexOf(target) + (position === 'after' ? 1 : 0)\n        }\n      ];\n\n      if (\n        (position === 'inside' && targetParent.getSchemaElement().isChildElementAllowed(this.getName())) ||\n        targetParent.isChildAllowedAtPosition(this, changes[0].index)\n      ) {\n        children.remove(this);\n        this.getNode().remove();\n        if (targetParent === parent) {\n          // target index might have changed by removing\n          changes[0].index = targetChildren.indexOf(target) + (position === 'after' ? 1 : 0);\n        }\n        targetParent.insertChild(this, changes[0].index, true, 'moved');\n        if (!skipUndo) {\n          const editor = this.getEditor();\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Move %1', this.getDisplayName()),\n              this,\n              changes,\n              'moved'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n\n    moveTo(newParent, index, skipUndo) {\n      if (this.isAncestor(newParent)) {\n        // we cannot move into ourselves descendants\n        return false;\n      }\n      const parent = this.getParent();\n      const children = parent.getChildren();\n      const changes = [\n        {\n          oldIndex: children.indexOf(this),\n          oldParent: parent,\n          parent: newParent,\n          child: this,\n          index: index\n        }\n      ];\n\n      // save old target index because we are moving inside the same parent, and the target index might change after removing\n      const target = newParent === parent && index < children.length ? children.getItem(index) : null;\n      if (newParent.isChildAllowedAtPosition(this, index)) {\n        children.remove(this);\n        this.getNode().remove();\n\n        if (target) {\n          index = children.indexOf(target);\n          changes[0].index = index;\n        }\n        newParent.insertChild(this, index, true, 'moved');\n        if (!skipUndo) {\n          const editor = this.getEditor();\n          if (editor) {\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Move %1', this.getDisplayName()),\n              this,\n              changes,\n              'moved'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n\n    moveAfter(target, skipUndo) {\n      return this._move(target, 'after', skipUndo);\n    },\n\n    moveBefore(target, skipUndo) {\n      return this._move(target, 'before', skipUndo);\n    },\n\n    moveInside(target, skipUndo) {\n      return this._move(target, 'inside', skipUndo);\n    },\n\n    insertAfter(target, skipUndo) {\n      const targetParent = target.getParent();\n      const newIndex = targetParent.getChildren().indexOf(target) + 1;\n      return targetParent.insertChild(this, newIndex, skipUndo, 'added');\n    },\n\n    insertBefore(target, skipUndo) {\n      const targetParent = target.getParent();\n      const newIndex = targetParent.getChildren().indexOf(target);\n      return targetParent.insertChild(this, newIndex, skipUndo, 'added');\n    },\n\n    /**\n     * Returns a list of element names that can be added to this element.\n     * Checks the allowed elements and their bounds and the existing children\n     * to find out if we can add more of them.\n     * @param excludeComment {Boolean} exclude #comment child when set to true\n     */\n    getAddableChildren(excludeComment) {\n      if (!this.__addableChildren) {\n        if (this.getName().startsWith('#')) {\n          this.__addableChildren = [];\n        } else {\n          const schemaElement = this.getSchemaElement();\n          const allowed = schemaElement.getAllowedElements();\n          const stillAllowed = [];\n          const countExisting = {};\n          if (!this.isLoaded()) {\n            this.load();\n          }\n          this.getChildren().forEach(child => {\n            if (!Object.prototype.hasOwnProperty.call(countExisting, child.getName())) {\n              countExisting[child.getName()] = 0;\n            }\n            countExisting[child.getName()]++;\n          });\n\n          Object.keys(allowed).forEach(elementName => {\n            if (excludeComment === true && elementName === '#comment') {\n              return;\n            }\n            if (elementName === '#text' || elementName === '#cdata-section') {\n              if (schemaElement.isTextContentAllowed()) {\n                if (schemaElement.isMixed()) {\n                  // is a mixed content has only one text child and no other childs, we do not allow another text child -> avoid direct text siblings\n                  let textNodes = 0;\n                  let otherNodes = 0;\n                  Object.keys(countExisting).forEach(key => {\n                    if (key === '#text' || key === '#cdata-section') {\n                      textNodes += countExisting[key];\n                    } else {\n                      otherNodes += countExisting[key];\n                    }\n                  });\n                  if (textNodes <= otherNodes) {\n                    // we do not allow more text nodes than other nodes (e.g. a sequence of #text, elem would allow another #text node after elem)\n                    stillAllowed.push(elementName);\n                  }\n                } else if (\n                  !Object.prototype.hasOwnProperty.call(countExisting, '#text') &&\n                  !Object.prototype.hasOwnProperty.call(countExisting, '#cdata-section')\n                ) {\n                  stillAllowed.push(elementName);\n                }\n              }\n              return;\n            }\n            const childBounds = schemaElement.getBoundsForElementName(elementName);\n            const existing = Object.prototype.hasOwnProperty.call(countExisting, elementName)\n              ? countExisting[elementName]\n              : 0;\n            if (childBounds && childBounds.max > existing) {\n              stillAllowed.push(elementName);\n            }\n          });\n          this.__addableChildren = stillAllowed;\n        }\n      }\n      return this.__addableChildren;\n    },\n\n    /**\n     * Checks if a new child is allowed at the given position\n     * @param xmlElement {cv.ui.manager.model.XmlElement|String} the element or an element name as string\n     * @param index {Number} position to check, use Number.POSITIVE_INFINITY to check if the child is allowed to be appended\n     * @returns {boolean}\n     */\n    isChildAllowedAtPosition(xmlElement, index) {\n      const schemaElement = this.getSchemaElement();\n      const nodeName = xmlElement instanceof cv.ui.manager.model.XmlElement ? xmlElement.getName() : xmlElement;\n      if (!schemaElement.isChildElementAllowed(nodeName)) {\n        this.debug(nodeName, 'is not allowed as child of', this.getName());\n        return false;\n      }\n      if (schemaElement.areChildrenSortable()) {\n        // allowed at any position\n        return true;\n      }\n      // check position\n      const allowedSorting = schemaElement.getFirstLevelElementSorting();\n      if (!this.isLoaded()) {\n        this.load();\n      }\n      const children = this.getChildren();\n      if (children.length === 0) {\n        // no children yet, no position problem\n        return true;\n      }\n      let currentPosition = index;\n      if (children.length > index) {\n        currentPosition = allowedSorting[children.getItem(index).getName()];\n      } else {\n        currentPosition = children.length;\n      }\n      let targetPosition = allowedSorting[nodeName];\n      if (currentPosition === targetPosition || targetPosition >= children.length) {\n        // no special position\n        return true;\n      }\n      // find the first previous sibling of a different type\n      let previousSibling;\n      if (index > 0) {\n        for (let i = Math.min(index, children.length) - 1; i >= 0; i--) {\n          if (children.getItem(i).getName() !== nodeName) {\n            previousSibling = children.getItem(i).getName();\n            break;\n          }\n        }\n      }\n      if (previousSibling) {\n        currentPosition = allowedSorting[previousSibling];\n      }\n      // only allow if it can be inserted before\n      const allowed = currentPosition + 1 >= targetPosition;\n      if (!allowed) {\n        this.debug(nodeName, 'is not allowed as child of', this.getName());\n        return false;\n      }\n\n      return true;\n    },\n\n    findPositionForChild(newChild) {\n      const schemaElement = this.getSchemaElement();\n      if (schemaElement.isChildElementAllowed(newChild.getName())) {\n        if (!this.isLoaded()) {\n          this.load();\n        }\n        if (schemaElement.areChildrenSortable()) {\n          // any position is fine, just append it to the end\n          return this.getChildren().length;\n        }\n        const allowedSorting = schemaElement.getFirstLevelElementSorting();\n        if (allowedSorting && Object.prototype.hasOwnProperty.call(allowedSorting, newChild.getName())) {\n          const position = allowedSorting[newChild.getName()];\n          // search for the first sibling with a position > than the newChilds and insert it there\n          let targetIndex = position;\n          const found = this.getChildren().some((child, index) => {\n            const childPos = allowedSorting[child.getName()];\n            if (childPos > position) {\n              targetIndex = index;\n              return true;\n            }\n            return false;\n          });\n          if (!found) {\n            // append to the end\n            targetIndex = this.getChildren().length;\n          }\n          return targetIndex;\n        }\n      }\n      return -1;\n    },\n\n    /**\n     * insert child at given index\n     * @param xmlElement {cv.ui.manager.model.XmlElement} new child\n     * @param index {Number} index to insert the child, if set to -1 insert it at any allowed position\n     * @param skipUndo {Boolean} do not add an undo operation for this change\n     * @param internalOperation\n     * @return {Boolean} true if the child has been added\n     */\n    insertChild(xmlElement, index, skipUndo, internalOperation) {\n      if (!this.isLoaded()) {\n        this.load();\n      }\n      const children = this.getChildren();\n      let success = false;\n      if (index === -1) {\n        index = this.findPositionForChild(xmlElement);\n        if (index === -1) {\n          // no valid position found\n          return false;\n        }\n      }\n      if (this.isChildAllowedAtPosition(xmlElement, index)) {\n        if (index >= children.length) {\n          // append\n          this._node.appendChild(xmlElement.getNode());\n          children.push(xmlElement);\n          success = true;\n        } else if (index === 0) {\n          // add before first child\n          this._node.insertBefore(xmlElement.getNode(), this._node.childNodes[0]);\n\n          children.unshift(xmlElement);\n          success = true;\n        } else {\n          const previousChild = children.getItem(index);\n          if (previousChild) {\n            previousChild.getNode().before(xmlElement.getNode());\n            children.insertBefore(previousChild, xmlElement);\n            success = true;\n          }\n        }\n      }\n      if (success) {\n        const editor = this.getEditor();\n        xmlElement.setParent(this);\n        if (xmlElement.$$removed) {\n          delete xmlElement.$$removed;\n          if (editor) {\n            editor.updateModified(xmlElement);\n          }\n          xmlElement.updateModified();\n        } else if (!internalOperation || internalOperation === 'added') {\n          xmlElement.$$added = true;\n          xmlElement.updateModified();\n        }\n        this.updateModified();\n        if (children.length === 1) {\n          // first child added -> open it\n          this.setOpen(true);\n        }\n        if (!skipUndo) {\n          if (editor) {\n            const changes = [\n              {\n                index: index,\n                parent: this,\n                child: xmlElement\n              }\n            ];\n\n            const change = new cv.ui.manager.model.ElementChange(\n              qx.locale.Manager.tr('Add %1', this.getDisplayName()),\n              this,\n              changes,\n              'created'\n            );\n\n            editor.addUndo(change);\n          }\n        }\n      }\n      return success;\n    },\n\n    _validateTextContent(value) {\n      // do not validate content that is loaded from the actual node\n      if (!this.__initializing) {\n        if (this._node) {\n          if (!this.getSchemaElement().isValueValid(value)) {\n            throw new qx.core.ValidationError(qx.locale.Manager.tr('Invalid text content: \\'%1\\'', value));\n          }\n        } else {\n          throw new qx.core.ValidationError(qx.locale.Manager.tr('Text content not allowed here'));\n        }\n      }\n    },\n\n    /**\n     * Validate this element (and its parent when this is a text node)\n     * @param recursive {Boolean} validate children too\n     */\n    validate(recursive) {\n      const schemaElement = this.getSchemaElement();\n      if (this.isTextNode()) {\n        this.getParent().validate(false);\n        this.setValid(schemaElement.isValueValid(this.getText()));\n      } else if (this.isElement()) {\n        const allowedAttributes = schemaElement.getAllowedAttributes();\n        const errors = [];\n        // check attribute values\n        for (let i = 0; i < this._node.attributes.length; i++) {\n          const attr = this._node.attributes.item(i);\n          if (Object.prototype.hasOwnProperty.call(allowedAttributes, attr.name)) {\n            if (!allowedAttributes[attr.name].isValueValid(attr.value)) {\n              errors.push({\n                attribute: attr.name,\n                error: qx.locale.Manager.tr('Invalid value')\n              });\n            }\n          } else {\n            errors.push({\n              attribute: attr.name,\n              error: qx.locale.Manager.tr('Attribute \\'%1\\' not allowed', attr.name)\n            });\n          }\n        }\n        // check for missing required attributes\n        Object.keys(allowedAttributes)\n          .filter(name => !allowedAttributes[name].isOptional())\n          .forEach(name => {\n            if (!this._node.hasAttribute(name)) {\n              errors.push({\n                attribute: name,\n                error: qx.locale.Manager.tr('Attribute \\'%1\\' is required but missing', name)\n              });\n            }\n          });\n        if (schemaElement.isTextContentRequired()) {\n          // check if we have at least one non empty #text child\n          const found = this.getChildren().some(child => child.isTextNode() && child.getNode().nodeValue.trim() !== '');\n\n          if (!found) {\n            errors.push({\n              attribute: '#text',\n              error: qx.locale.Manager.tr('Text content is missing')\n            });\n          }\n        }\n        if (schemaElement.isTextContentAllowed()) {\n          this.getChildren().forEach(child => {\n            if (child.isTextNode()) {\n              child.load();\n              child.setValid(schemaElement.isValueValid(child.getText()));\n              if (!child.isValid()) {\n                child.setInvalidMessage(qx.locale.Manager.tr('Text content is invalid'));\n              }\n            }\n          });\n        }\n        this.setInvalidMessage(errors.map(err => err.error).join('<br/>'));\n        this.setValid(errors.length === 0);\n      }\n    },\n\n    isTextNode() {\n      return this.getName() === '#text' || this.getName() === '#cdata-section';\n    },\n\n    _applyTextContent(value) {\n      if (!this.__initializing) {\n        if (this._node) {\n          if (\n            this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE\n          ) {\n            this._node.nodeValue = value;\n            this.updateDisplayName();\n          } else if (this._node.nodeType === Node.ELEMENT_NODE) {\n            this._node.textContent = value;\n          }\n        }\n      }\n    },\n\n    getText() {\n      return this.getTextContent();\n    },\n\n    setText(text, nodeName) {\n      let changed = false;\n      let newValue = text;\n      let oldValue = '';\n      if (this.getSchemaElement().isTextContentAllowed()) {\n        oldValue = this.getTextContent();\n        if (this.getSchemaElement().isValueValid(text)) {\n          if (oldValue !== text) {\n            this.setTextContent(text);\n            changed = true;\n          }\n        } else {\n          this.error('\\'' + text + '\\' is no valid text content for a \\'' + this.getName() + '\\' element');\n        }\n      } else {\n        this.error('text content is not allowed for a \\'' + this.getName() + '\\' element');\n      }\n      return {\n        changed: changed,\n        attribute: nodeName || '#text',\n        value: newValue,\n        old: oldValue\n      };\n    },\n\n    getAttribute(name) {\n      return this._node.getAttribute(name);\n    },\n\n    setAttribute(name, value) {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        const attribute = this.getSchemaElement().getAllowedAttributes()[name];\n        let changed = false;\n        let newValue = value;\n        let oldValue = this._node.hasAttribute(name) ? this._node.getAttribute(name) : '';\n        if (attribute) {\n          if (value === null || value === undefined) {\n            value = '';\n          } else {\n            value = '' + value;\n          }\n          value = value.replace(/[&\"'`]/g, function (s) {\n            return cv.ui.manager.model.XmlElement.entityMap[s];\n          });\n          newValue = value;\n          if (attribute.isValueValid(value)) {\n            if (oldValue !== value) {\n              if (!value || value === attribute.getDefaultValue()) {\n                this._node.removeAttribute(name);\n                newValue = '';\n              } else {\n                this._node.setAttribute(name, value);\n              }\n              if (name === 'name') {\n                this.updateDisplayName();\n                if (this.getName() === 'icon') {\n                  this._maintainIcon();\n                }\n              }\n              changed = true;\n            }\n          } else {\n            this.error('\\'' + value + '\\' is not allowed for attribute \\'' + name + '\\'');\n          }\n        } else {\n          this.error('\\'' + name + '\\' is no allowed attribute for a \\'' + this.getName() + '\\' element');\n        }\n        return {\n          changed: changed,\n          attribute: name,\n          value: newValue,\n          old: oldValue\n        };\n      } else if (\n        (this._node.nodeType === Node.TEXT_NODE && name === '#text') ||\n        (this._node.nodeType === Node.CDATA_SECTION_NODE && name === '#cdata-section')\n      ) {\n        return this.setText(value, name);\n      } else if (this._node.nodeType === Node.COMMENT_NODE && name === '#comment') {\n        const oldValue = this.getTextContent();\n        const changed = value !== oldValue;\n        this.setTextContent(value);\n        return {\n          changed: changed,\n          attribute: name,\n          value: value,\n          old: oldValue\n        };\n      }\n      return null;\n    },\n\n    /**\n     * @return {Boolean} true if this element is a required child from its parent\n     */\n    isRequired() {\n      const parent = this.getParent();\n      if (parent) {\n        const requiredFromParent = parent.getSchemaElement().getRequiredElements();\n        return requiredFromParent.includes(this.getName());\n      }\n      // only root element has nor parent, and a root element is always required\n      return true;\n    },\n\n    setAttributes(data) {\n      const changes = [];\n      let change;\n      const parentChanges = [];\n      const isTextNode = this.getName() === '#text' || this.getName() === '#cdata-section';\n      const parent = this.getParent();\n      Object.keys(data).forEach(attrName => {\n        if (isTextNode && !attrName.startsWith('#')) {\n          // special mode for editing text content from a data provider with hints, those hints must be applied to the parent\n          change = parent.setAttribute(attrName, data[attrName]);\n          if (change.changed) {\n            parentChanges.push(change);\n          }\n        } else if (attrName === '#outerHTML' || attrName === '#innerHTML') {\n          if (this.getSchemaElement().isChildElementAllowed('*')) {\n            const dom = new DOMParser().parseFromString(data[attrName], 'text/xml');\n\n            if (dom.getElementsByTagName('parsererror').length === 0) {\n              const oldValue = attrName === '#outerHTML' ? this._node.outerHTML : this._node.innerHTML;\n              const newNode = dom.documentElement;\n              if (attrName === '#outerHTML') {\n                const oldNode = this._node;\n                oldNode.parentNode.replaceChild(newNode, oldNode);\n                this._node = newNode;\n                this.setName(this._node.nodeName);\n              } else {\n                this._node.innerHTML = data[attrName];\n              }\n              changes.push({\n                changed: true,\n                attribute: attrName,\n                value: data[attrName],\n                old: oldValue\n              });\n\n              this.load(true);\n            }\n          } else if (attrName === '#innerHTML' && !data[attrName]) {\n            // allow empty values\n            const oldValue = this._node.innerHTML;\n            this._node.innerHTML = data[attrName];\n            changes.push({\n              changed: true,\n              attribute: attrName,\n              value: data[attrName],\n              old: oldValue\n            });\n\n            this.load(true);\n          }\n        } else {\n          change = this.setAttribute(attrName, data[attrName]);\n          if (change.changed) {\n            changes.push(change);\n          }\n        }\n      });\n      const editor = this.getEditor();\n      if (editor && changes.length > 0) {\n        if (parentChanges.length > 0) {\n          const parentChange = new cv.ui.manager.model.ElementChange(\n            qx.locale.Manager.tr('Change %1', parent.getDisplayName()),\n            parent,\n            parentChanges\n          );\n\n          changes.push(parentChange);\n          parent.updateModified();\n        }\n        editor.addUndo(\n          new cv.ui.manager.model.ElementChange(qx.locale.Manager.tr('Change %1', this.getDisplayName()), this, changes)\n        );\n      }\n      this.updateModified();\n    },\n\n    _applySchemaElement(schemaElement) {\n      if (schemaElement) {\n        this._structure = schemaElement.getSchema().getStructure();\n      } else {\n        this._structure = null;\n      }\n      schemaElement.bind('sortable', this, 'sortable', {\n        converter: function (value) {\n          return this.isEditable() && value;\n        }.bind(this)\n      });\n    },\n\n    _onOpen(value) {\n      if (value && !this.isLoaded()) {\n        this.load();\n      }\n      this._maintainIcon();\n    },\n\n    _applyModified() {\n      this.updateDisplayName();\n    },\n\n    updateDisplayName() {\n      let displayName = this.getName();\n      if (this._node) {\n        if (this._node.nodeType === Node.ELEMENT_NODE) {\n          if (this._node.hasAttribute('name')) {\n            const nameAttr = this._node.getAttribute('name');\n            displayName += ' \"' + nameAttr + '\"';\n          } else if (this.getSchemaElement().getSchema().isRoot(this.getName()) && this._node.hasAttribute('design')) {\n            const designAttr = this._node.getAttribute('design');\n            displayName += ' \"' + designAttr + '\"';\n          }\n        } else if (\n          (this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE) &&\n          this._node.nodeValue.trim()\n        ) {\n          let textContent = this._node.nodeValue.trim();\n          if (textContent.length > 26) {\n            textContent = textContent.substring(0, 26) + '...';\n          }\n          displayName = textContent;\n        }\n      }\n      if (this.isModified()) {\n        displayName += ' *';\n      }\n      this.setDisplayName(displayName);\n    },\n    hasChildren() {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        if (this._node && this._node.hasChildNodes()) {\n          for (let i = 0; i < this._node.childNodes.length; i++) {\n            const childNode = this._node.childNodes.item(i);\n            if (\n              childNode.nodeType === Node.ELEMENT_NODE ||\n              ((childNode.nodeType === Node.TEXT_NODE || childNode.nodeType === Node.CDATA_SECTION_NODE) &&\n                childNode.nodeValue.trim() !== '')\n            ) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    load(force) {\n      if (!this.isLoaded() || force) {\n        this.__initializing = true;\n        const children = this.getChildren();\n        children.removeListener('change', this._syncChildNodes, this);\n        children.removeAll();\n        if (this._node) {\n          if (this._node.nodeType === Node.ELEMENT_NODE) {\n            // read children\n            const schemaElement = this.getSchemaElement();\n            this._initialChildNames = [];\n            for (let i = 0; i < this._node.childNodes.length; i++) {\n              const childNode = this._node.childNodes.item(i);\n              const childSchemaElement = schemaElement.getSchemaElementForElementName(childNode.nodeName);\n\n              if (childSchemaElement) {\n                if (childNode.nodeType === Node.ELEMENT_NODE) {\n                  const child = new cv.ui.manager.model.XmlElement(\n                    childNode,\n                    childSchemaElement,\n                    this.getEditor(),\n                    this\n                  );\n\n                  children.push(child);\n                  this._initialChildNames.push(childNode.nodeName);\n                } else if (childNode.nodeType === Node.TEXT_NODE || childNode.nodeType === Node.CDATA_SECTION_NODE) {\n                  if (childNode.nodeValue.trim()) {\n                    // do not use childSchemaElement here, because our schemeElement already knows how to validate text\n                    const child = new cv.ui.manager.model.XmlElement(childNode, schemaElement, this.getEditor(), this);\n\n                    if (schemaElement.isMixed()) {\n                      // text nodes can be re-ordered in mixed content\n                      child.setSortable(true);\n                    }\n                    children.push(child);\n                    if (childNode.nodeValue.trim()) {\n                      this._initialChildNames.push(childNode.nodeName);\n                    }\n                  }\n                } else if (childNode.nodeType === Node.COMMENT_NODE) {\n                  if (childNode.nodeValue) {\n                    const child = new cv.ui.manager.model.XmlElement(\n                      childNode,\n                      childSchemaElement,\n                      this.getEditor(),\n                      this\n                    );\n\n                    // comment nodes are allowed everywhere. but we do not allow them to be moved via drag&drop now\n                    // because comments might contains template conditions, which will get invalid when moved and we cannot validate that\n                    child.setSortable(false);\n                    children.push(child);\n                    if (childNode.nodeValue.trim()) {\n                      this._initialChildNames.push(childNode.nodeName);\n                    }\n                  }\n                }\n              } else if (childNode.nodeType === Node.ELEMENT_NODE) {\n                if (schemaElement.isChildElementAllowed(childNode.nodeName)) {\n                  // allowed but no schema element\n                  const child = new cv.ui.manager.model.XmlElement(childNode, schemaElement, this.getEditor(), this);\n\n                  if (schemaElement.isMixed()) {\n                    // text nodes can be re-ordered in mixed content\n                    child.setSortable(true);\n                  }\n                  children.push(child);\n                  this._initialChildNames.push(childNode.nodeName);\n                } else {\n                  // only complain for real childs (no comments, textNodes)\n                  this.setValid(false);\n                  let msg = this.getInvalidMessage();\n                  msg =\n                    (msg ? msg + '<br/>' : '') +\n                    qx.locale.Manager.tr('Child element \\'%1\\' not allowed.', childNode.nodeName);\n\n                  this.setInvalidMessage(msg);\n                  this.setValid(false);\n                }\n              }\n            }\n\n            // read attributes\n            this._initialAttributes.clear();\n            for (let i = 0; i < this._node.attributes.length; i++) {\n              const attr = this._node.attributes.item(i);\n              this._initialAttributes.set(attr.name, attr.value);\n            }\n          } else if (\n            this._node.nodeType === Node.TEXT_NODE ||\n            this._node.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE\n          ) {\n            this._initialTextContent = this._node.nodeValue;\n            try {\n              this.setTextContent(this._node.nodeValue);\n            } catch (e) {\n              this.appendInvalidMessage(e.toString());\n            }\n          }\n        }\n        this.setLoaded(true);\n        children.addListener('change', this._syncChildNodes, this);\n        this._updateChildrenDeletableFlags();\n        this.__initializing = false;\n      }\n    },\n\n    appendInvalidMessage(errorMsg) {\n      if (errorMsg) {\n        const existing = this.getInvalidMessage();\n        this.setInvalidMessage(existing ? existing + '<br/>' + errorMsg : errorMsg);\n      }\n    },\n\n    updateModified() {\n      if (this.$$added) {\n        this.setModified(true);\n      } else if (this._node.nodeType === Node.ELEMENT_NODE) {\n        const initial = this._initialAttributes;\n        const currentChildNames = this._currentChildNames();\n        if (this._node.attributes.length !== initial.size) {\n          this.setModified(true);\n        } else if (\n          currentChildNames.length !== this._initialChildNames.length ||\n          currentChildNames.join('') !== this._initialChildNames.join('')\n        ) {\n          this.setModified(true);\n        } else {\n          let modified = false;\n          for (const [key, value] of initial) {\n            if (!this._node.hasAttribute(key) || this._node.getAttribute(key) !== value) {\n              modified = true;\n              break;\n            }\n          }\n          this.setModified(modified);\n        }\n      } else if (\n        this._node.nodeType === Node.TEXT_NODE ||\n        this._node.nodeType === Node.COMMENT_NODE ||\n        this._node.nodeType === Node.CDATA_SECTION_NODE\n      ) {\n        this.setModified(this._initialTextContent !== this.getTextContent());\n      }\n      const editor = this.getEditor();\n      if (editor) {\n        editor.updateModified(this);\n      }\n    },\n\n    /**\n     * Special check if this element has modified children (position, of length)\n     * This is used to determine if the preview highlighting needs to be disabled because the xml structure has changed\n     * @returns {*|boolean}\n     */\n    hasChildrenModified() {\n      if (this._node.nodeType === Node.ELEMENT_NODE && this.isLoaded()) {\n        const currentChildNames = this._currentChildNames();\n        return (\n          this.isModified() &&\n          (currentChildNames.length !== this._initialChildNames.length ||\n            currentChildNames.join('') !== this._initialChildNames.join(''))\n        );\n      }\n      return false;\n    },\n\n    onSaved() {\n      if (this._node.nodeType === Node.ELEMENT_NODE) {\n        // read attributes\n        this._initialAttributes.clear();\n        for (let i = 0; i < this._node.attributes.length; i++) {\n          const attr = this._node.attributes.item(i);\n          this._initialAttributes.set(attr.name, attr.value);\n        }\n        this._initialChildNames = this._currentChildNames();\n      } else if (\n        this._node.nodeType === Node.TEXT_NODE ||\n        this._node.nodeType === Node.COMMENT_NODE ||\n        this._node.nodeType === Node.CDATA_SECTION_NODE\n      ) {\n        this._initialTextContent = this._node.nodeValue;\n      }\n      if (this.$$added) {\n        delete this.$$added;\n      }\n      this.setModified(false);\n    },\n\n    isElement() {\n      return this._node.nodeType === Node.ELEMENT_NODE;\n    },\n\n    _currentChildNames() {\n      const names = [];\n      let name;\n      let widget;\n      for (let i = 0; i < this._node.childNodes.length; i++) {\n        const childNode = this._node.childNodes.item(i);\n        if (childNode.nodeType === Node.ELEMENT_NODE) {\n          widget = this._node.$$widget;\n          name = widget ? widget.getDisplayName() : childNode.nodeName;\n          names.push(name);\n        } else if (\n          (childNode.nodeType === Node.TEXT_NODE ||\n            childNode.nodeType === Node.COMMENT_NODE ||\n            this._node.nodeType === Node.CDATA_SECTION_NODE) &&\n          childNode.nodeValue.trim()\n        ) {\n          names.push(childNode.nodeName);\n        }\n      }\n      return names;\n    },\n\n    _syncChildNodes(ev) {\n      // children have changed clear cache\n      this.__addableChildren = null;\n      // we have to update all deletable flags for this elements children, when their siblings changed\n      this._updateChildrenDeletableFlags();\n    },\n\n    _updateChildrenDeletableFlags() {\n      if (this.isEditable()) {\n        this.getChildren().forEach(child => {\n          if (child.isElement() || child.isTextNode()) {\n            child.updateDeletable();\n          }\n        });\n      }\n    },\n\n    getWidgetPath() {\n      if (this.getName() === '#comment') {\n        return '';\n      }\n      const schema = this.getSchemaElement().getSchema();\n      const widgets = schema.getWidgetNames();\n      let current = this;\n      while (current && !widgets.includes(current.getName())) {\n        current = current.getParent();\n      }\n      if (!current) {\n        return '';\n      }\n      if (this._structure === 'pure') {\n        if (current.getName() === 'navbar') {\n          return 'navbar' + qx.lang.String.firstUp(current.getAttribute('position'));\n        }\n\n        const ids = [];\n        let c = current;\n        while (c) {\n          const parent = c.getParent();\n          if (parent.getName() === 'pages') {\n            ids.unshift('id');\n            break;\n          }\n          let id = parent\n            .getChildren()\n            .filter(child => child.getNode().nodeType === Node.ELEMENT_NODE && child.getName() !== 'layout')\n            .indexOf(c);\n          ids.unshift(id);\n          c = parent;\n        }\n        if (current.getName() === 'page') {\n          // make sure that the join ends with '_'\n          ids.push('');\n        }\n        return '#' + ids.join('_');\n      } else if (this._structure === 'tile') {\n        let c = current.getNode();\n        let index = 0;\n        let selector = '';\n        while (c) {\n          const parent = c.parentElement;\n          if (c.hasAttribute('id')) {\n            selector = selector ? `#${c.getAttribute('id')} > ${selector}` : `#${c.getAttribute('id')}`;\n            break;\n          } else if (c.nodeName.toLowerCase() === 'config') {\n            selector = selector ? `config > ${selector}` : 'config';\n            break;\n          } else {\n            index = Array.prototype.indexOf.call(parent.children, c) + 1;\n            selector = selector ? `*:nth-child(${index}) > ${selector}` : `*:nth-child(${index})`;\n          }\n          c = parent;\n        }\n        return selector;\n      }\n      return '';\n    },\n\n    // overridden\n    clone() {\n      return new cv.ui.manager.model.XmlElement(this._node.cloneNode(true), this.getSchemaElement(), this.getEditor());\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._node = null;\n    this._schema = null;\n    this._initialAttributes = null;\n    this.__addableChildren = null;\n    this._disposeObjects('_schemaElement');\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gCAAhB,EAAkD;IAChDC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADgC;IAEhDC,OAAO,EAAE,CAACT,EAAE,CAACU,IAAH,CAAQC,OAAR,CAAgBC,cAAjB,CAFuC;;IAIhD;AACF;AACA;AACA;AACA;IACEC,SATgD,qBAStCC,IATsC,EAShCC,aATgC,EASjBC,MATiB,EASTC,MATS,EASD;MAC7C;MACA,KAAKC,KAAL,GAAaJ,IAAb;MACA,IAAMK,QAAQ,GAAG,IAAInB,EAAE,CAACU,IAAH,CAAQU,KAAZ,EAAjB;;MACA,IAAIN,IAAJ,EAAU;QACR,KAAKI,KAAL,CAAWG,QAAX,GAAsB,IAAtB;QACA,KAAKC,gBAAL,CAAsBP,aAAtB;QACA,KAAKQ,QAAL,CAAcT,IAAI,CAACU,QAAnB;;QACA,KAAKC,qBAAL;;QACA,IAAI,KAAKC,WAAL,EAAJ,EAAwB;UACtB;UACA;UACAP,QAAQ,CAACQ,IAAT,CAAc,IAAIC,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,EAAd;QACD;;QACD,IAAIhB,MAAJ,EAAY;UACV,KAAKiB,SAAL,CAAejB,MAAf;QACD;;QACD,IAAIC,MAAJ,EAAY;UACV,KAAKiB,SAAL,CAAejB,MAAf;QACD;;QACD,KAAKkB,aAAL;;QACA,KAAKC,eAAL;MACD,CAlBD,MAkBO;QACL;QACA,KAAKb,QAAL,CAAc,OAAd;MACD;;MACD,KAAKc,YAAL,CAAkBlB,QAAlB;MACA,KAAKmB,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;MACA,KAAKC,IAAL,CAAU,uBAAV,EAAmC,IAAnC,EAAyC,UAAzC;IACD,CAtC+C;;IAwChD;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,SAAS,EAAE;QACT,KAAK,OADI;QAET,KAAK,QAFI;QAGT,MAAM,OAHG;QAIT,KAAK;MAJI;IADJ,CA7CuC;;IAsDhD;AACF;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACV;MACA3B,MAAM,EAAE;QACN4B,KAAK,EAAE,2BADD;QAENC,QAAQ,EAAE,IAFJ;QAGNC,KAAK,EAAE;MAHD,CAFE;MAQV/B,aAAa,EAAE;QACb6B,KAAK,EAAE,oCADM;QAEbG,KAAK,EAAE;MAFM,CARL;MAaVC,IAAI,EAAE;QACJJ,KAAK,EAAE,QADH;QAEJK,YAAY,EAAE,IAFV;QAGJH,KAAK,EAAE,YAHH;QAIJC,KAAK,EAAE;MAJH,CAbI;MAoBVG,WAAW,EAAE;QACXN,KAAK,EAAE,QADI;QAEXO,IAAI,EAAE,EAFK;QAGXL,KAAK,EAAE;MAHI,CApBH;MA0BVM,IAAI,EAAE;QACJR,KAAK,EAAE,SADH;QAEJE,KAAK,EAAE,YAFH;QAGJK,IAAI,EAAE,KAHF;QAIJJ,KAAK,EAAE;MAJH,CA1BI;MAiCVM,MAAM,EAAE;QACNT,KAAK,EAAE,SADD;QAENE,KAAK,EAAE,cAFD;QAGNK,IAAI,EAAE;MAHA,CAjCE;MAuCVhC,QAAQ,EAAE;QACRyB,KAAK,EAAE,eADC;QAERE,KAAK,EAAE,gBAFC;QAGRC,KAAK,EAAE,wBAHC;QAIRE,YAAY,EAAE;MAJN,CAvCA;MA8CVK,WAAW,EAAE;QACXV,KAAK,EAAE,QADI;QAEXC,QAAQ,EAAE,IAFC;QAGXE,KAAK,EAAE,mBAHI;QAIXD,KAAK,EAAE,mBAJI;QAKXS,QAAQ,EAAE;MALC,CA9CH;;MAsDV;AACJ;AACA;MACIC,SAAS,EAAE;QACTZ,KAAK,EAAE,SADE;QAETO,IAAI,EAAE,KAFG;QAGTL,KAAK,EAAE;MAHE,CAzDD;;MA+DV;AACJ;AACA;MACIW,KAAK,EAAE;QACLb,KAAK,EAAE,SADF;QAELO,IAAI,EAAE,IAFD;QAGLL,KAAK,EAAE,aAHF;QAILC,KAAK,EAAE;MAJF,CAlEG;MAyEVW,cAAc,EAAE;QACdd,KAAK,EAAE,QADO;QAEdO,IAAI,EAAE,EAFQ;QAGdL,KAAK,EAAE;MAHO,CAzEN;MA+EVa,MAAM,EAAE;QACNf,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,CADD;QAENO,IAAI,EAAE,OAFA;QAGNL,KAAK,EAAE;MAHD,CA/EE;MAqFVc,QAAQ,EAAE;QACRhB,KAAK,EAAE,SADC;QAERO,IAAI,EAAE,IAFE;QAGRL,KAAK,EAAE,gBAHC;QAIRC,KAAK,EAAE;MAJC,CArFA;MA4FVc,QAAQ,EAAE;QACRjB,KAAK,EAAE,SADC;QAERO,IAAI,EAAE,IAFE;QAGRL,KAAK,EAAE;MAHC,CA5FA;;MAkGV;AACJ;AACA;MACIgB,SAAS,EAAE;QACTlB,KAAK,EAAE,SADE;QAETO,IAAI,EAAE,IAFG;QAGTL,KAAK,EAAE;MAHE,CArGD;MA2GViB,QAAQ,EAAE;QACRnB,KAAK,EAAE,SADC;QAERO,IAAI,EAAE,KAFE;QAGRJ,KAAK,EAAE;MAHC,CA3GA;MAiHViB,cAAc,EAAE;QACdpB,KAAK,EAAE,SADO;QAEdO,IAAI,EAAE,IAFQ;QAGdL,KAAK,EAAE;MAHO,CAjHN;MAuHV7B,MAAM,EAAE;QACN2B,KAAK,EAAE,gCADD;QAENC,QAAQ,EAAE;MAFJ,CAvHE;MA4HV;MACAoB,IAAI,EAAE;QACJrB,KAAK,EAAE,QADH;QAEJC,QAAQ,EAAE,IAFN;QAGJC,KAAK,EAAE;MAHH,CA7HI;MAmIVoB,QAAQ,EAAE;QACRtB,KAAK,EAAE,SADC;QAERO,IAAI,EAAE,KAFE;QAGRL,KAAK,EAAE;MAHC;IAnIA,CA3DoC;;IAqMhD;AACF;AACA;AACA;AACA;IACEqB,OAAO,EAAE;MACPjD,KAAK,EAAE,IADA;MAEPkD,OAAO,EAAE,IAFF;MAGPC,cAAc,EAAE,IAHT;MAIP/B,kBAAkB,EAAE,IAJb;MAKPgC,kBAAkB,EAAE,IALb;MAMPC,mBAAmB,EAAE,IANd;MAOPC,QAAc,EAAE,KAPT;MAQPC,QAAiB,EAAE,IARZ;MASPC,UAAU,EAAE,IATL;MAWPtC,eAXO,6BAWW;QAChB,IAAI,KAAKlB,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAAjC,EAA+C;UAC7C,KAAKC,SAAL,CAAe,SAAf;QACD,CAFD,MAEO,IAAI,CAAC,KAAKC,OAAL,EAAL,EAAqB;UAC1B,KAAKD,SAAL,CAAe,OAAf;QACD,CAFM,MAEA;UACL,KAAKA,SAAL,CAAe,OAAf;QACD;MACF,CAnBM;MAqBPE,WArBO,uBAqBKC,KArBL,EAqBY;QACjB,KAAK7C,eAAL;;QACA,IAAI6C,KAAJ,EAAW;UACT,KAAKC,mBAAL;QACD;MACF,CA1BM;MA4BPC,mBA5BO,+BA4BaC,OA5Bb,EA4BsB;QAC3B,IACE,KAAKC,UAAL,MACA,KAAKnE,KAAL,CAAWyD,QAAX,KAAwBS,OADxB,KAECA,OAAO,KAAKR,IAAI,CAACU,SAAjB,IAA8BF,OAAO,KAAKR,IAAI,CAACW,kBAFhD,CADF,EAIE;UACA,IAAMC,OAAO,GAAG,KAAKC,OAAL,EAAhB;UACA,IAAMC,OAAO,GAAG,KAAKxE,KAArB;UACA,IAAMyE,WAAW,GACfP,OAAO,KAAKR,IAAI,CAACW,kBAAjB,GACI,KAAKrE,KAAL,CAAW0E,aAAX,CAAyBC,kBAAzB,CAA4CL,OAA5C,CADJ,GAEI,KAAKtE,KAAL,CAAW0E,aAAX,CAAyBE,cAAzB,CAAwCN,OAAxC,CAHN;;UAIA,IAAIE,OAAO,CAACK,UAAZ,EAAwB;YACtBL,OAAO,CAACK,UAAR,CAAmBC,YAAnB,CAAgCL,WAAhC,EAA6CD,OAA7C;UACD;;UACD,KAAKxE,KAAL,GAAayE,WAAb;UACA,KAAKM,OAAL,CAAa,KAAK/E,KAAL,CAAWM,QAAxB;UACA,KAAK0E,IAAL,CAAU,IAAV;QACD;MACF,CA/CM;MAiDP/D,aAjDO,2BAiDS;QACd,IAAI,KAAKjB,KAAT,EAAgB;UACd,IAAI,KAAKA,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IAA0C,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAA3E,EAA+F;YAC7F,KAAKY,OAAL,CAAavE,EAAE,CAACwE,KAAH,CAASC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,aAA7B,EAA4C,EAA5C,CAAb;YACA;UACD,CAHD,MAGO,IAAI,KAAKrF,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAAjC,EAA+C;YACpD,KAAKsB,OAAL,CAAavE,EAAE,CAACwE,KAAH,CAASC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,gBAA7B,EAA+C,EAA/C,CAAb;YACA;UACD,CAHM,MAGA,IACL,KAAKC,OAAL,OAAmB,MAAnB,IACA,KAAKC,YAAL,CAAkB,MAAlB,CADA,IAEA,KAAKA,YAAL,CAAkB,MAAlB,EAA0BC,OAA1B,CAAkC,IAAlC,MAA4C,CAAC,CAHxC,EAIL;YACA;YACA,IAAMC,MAAM,GAAG/E,EAAE,CAACgF,WAAH,CAAeC,WAAf,GAA6BC,aAA7B,CAA2C,KAAKL,YAAL,CAAkB,MAAlB,CAA3C,EAAsE,WAAtE,CAAf;;YAEA,IAAIE,MAAJ,EAAY;cACV,KAAKR,OAAL,CAAaQ,MAAb;YACD,CAFD,MAEO;cACL,KAAKR,OAAL,CAAavE,EAAE,CAACwE,KAAH,CAASC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,OAA7B,EAAsC,EAAtC,CAAb;YACD;;YACD;UACD;QACF;;QACD,IAAI,KAAKQ,MAAL,EAAJ,EAAmB;UACjB,KAAKZ,OAAL,CAAavE,EAAE,CAACwE,KAAH,CAASC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,aAA7B,EAA4C,EAA5C,CAAb;QACD,CAFD,MAEO;UACL,KAAKJ,OAAL,CAAavE,EAAE,CAACwE,KAAH,CAASC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,QAA7B,EAAuC,EAAvC,CAAb;QACD;MACF,CA9EM;MAgFPS,cAhFO,4BAgFU;QACf,KAAKvF,qBAAL;;QACA,KAAKwF,eAAL;MACD,CAnFM;MAqFPxF,qBArFO,mCAqFiB;QACtB,IAAMV,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;QACA,KAAKC,iBAAL,CACGpG,aAAa,CAACqG,oBAAd,MAAwC,KAAKZ,OAAL,GAAea,UAAf,CAA0B,GAA1B,CAAzC,IACE7G,MAAM,CAAC8G,IAAP,CAAYvG,aAAa,CAACwG,oBAAd,EAAZ,EAAkDC,MAAlD,GAA2D,CAD7D,IAEEzG,aAAa,CAAC0G,qBAAd,CAAoC,GAApC,CAHJ,CAG6C;QAH7C;MAKD,CA5FM;MA8FPR,eA9FO,6BA8FW;QAAA;;QAChB,IAAI,CAAC,KAAKS,UAAL,EAAL,EAAwB;UACtB,KAAKC,YAAL,CAAkB,KAAlB;QACD,CAFD,MAEO;UACL,IAAM1G,MAAM,GAAG,KAAK2G,SAAL,EAAf;;UACA,IAAI,KAAKvC,UAAL,EAAJ,EAAuB;YACrB,IAAI,KAAK6B,gBAAL,GAAwBW,qBAAxB,EAAJ,EAAqD;cACnD,IAAMC,QAAQ,GAAG7G,MAAM,CAAC8G,WAAP,GAAqBC,MAArB,CAA4B,UAAAC,KAAK;gBAAA,OAAIA,KAAK,CAAC5C,UAAN,EAAJ;cAAA,CAAjC,EAAyDmC,MAA1E;cACA,KAAKG,YAAL,CAAkBG,QAAQ,GAAG,CAA7B;YACD,CAHD,MAGO;cACL,KAAKH,YAAL,CAAkB,IAAlB;YACD;UACF,CAPD,MAOO;YACL,IAAI7D,SAAS,GAAG,KAAhB;;YACA,IAAI7C,MAAJ,EAAY;cACV,IAAMF,aAAa,GAAGE,MAAM,CAACiG,gBAAP,EAAtB;cACA,IAAMgB,kBAAkB,GAAGnH,aAAa,CAACoH,mBAAd,EAA3B;;cACA,IAAID,kBAAkB,CAACE,QAAnB,CAA4B,KAAK5B,OAAL,EAA5B,CAAJ,EAAiD;gBAC/C,IAAM6B,MAAM,GAAGtH,aAAa,CAACuH,uBAAd,CAAsC,KAAK9B,OAAL,EAAtC,CAAf;;gBAEA,IAAI6B,MAAJ,EAAY;kBACV,IAAMP,SAAQ,GAAG7G,MAAM,CAAC8G,WAAP,GAAqBC,MAArB,CAA4B,UAAAC,KAAK;oBAAA,OAAIA,KAAK,CAACzB,OAAN,OAAoB,KAAI,CAACA,OAAL,EAAxB;kBAAA,CAAjC,EAAyEgB,MAA1F,CADU,CAEV;;kBACA1D,SAAS,GAAGuE,MAAM,CAACE,GAAP,IAAcT,SAAQ,GAAG,CAArC;gBACD,CAJD,MAIO;kBACLhE,SAAS,GAAG,IAAZ;gBACD;cACF,CAVD,MAUO;gBACLA,SAAS,GAAG,IAAZ;cACD;YACF,CAhBD,MAgBO;cACLA,SAAS,GAAG,IAAZ;YACD;;YACD,KAAK6D,YAAL,CAAkB7D,SAAlB;UACD;QACF;MACF,CAlIM;MAoIP0E,OApIO,qBAoIG;QACR,OAAO,KAAKtH,KAAZ;MACD,CAtIM;MAwIPuH,MAxIO,kBAwIAC,QAxIA,EAwIU;QACf,IAAMzH,MAAM,GAAG,KAAK2G,SAAL,EAAf;;QACA,IAAI3G,MAAJ,EAAY;UACV,IAAM0H,OAAO,GAAG,CACd;YACEC,KAAK,EAAE3H,MAAM,CAAC8G,WAAP,GAAqBrB,OAArB,CAA6B,IAA7B,CADT;YAEEzF,MAAM,EAAEA,MAFV;YAGEgH,KAAK,EAAE;UAHT,CADc,CAAhB;;UAQA,KAAK/G,KAAL,CAAWuH,MAAX;;UACAxH,MAAM,CAAC8G,WAAP,GAAqBU,MAArB,CAA4B,IAA5B;UACA,IAAMzH,MAAM,GAAG,KAAK6H,SAAL,EAAf;UACA,KAAKC,SAAL,GAAiB,IAAjB;;UACA,IAAI9H,MAAJ,EAAY;YACV;YACAA,MAAM,CAAC+H,cAAP,CAAsB,IAAtB;UACD;;UACD9H,MAAM,CAAC8H,cAAP;;UACA,IAAI,CAACL,QAAL,EAAe;YACb,IAAI1H,MAAJ,EAAY;cACV,IAAMgI,MAAM,GAAG,IAAIpH,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CACbjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,WAArB,EAAkC,KAAKC,cAAL,EAAlC,CADa,EAEb,IAFa,EAGbV,OAHa,EAIb,SAJa,CAAf;cAOA3H,MAAM,CAACsI,OAAP,CAAeN,MAAf;YACD;UACF;QACF;MACF,CAzKM;;MA2KP;AACJ;AACA;AACA;AACA;MACIO,UAhLO,sBAgLIC,OAhLJ,EAgLa;QAClB,IAAIvI,MAAM,GAAGuI,OAAO,CAAC5B,SAAR,EAAb;;QACA,OAAO3G,MAAP,EAAe;UACb,IAAIA,MAAM,KAAK,IAAf,EAAqB;YACnB,OAAO,IAAP;UACD;;UACDA,MAAM,GAAGA,MAAM,CAAC2G,SAAP,EAAT;QACD;;QACD,OAAO,KAAP;MACD,CAzLM;;MA2LP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI6B,KAlMO,iBAkMDC,MAlMC,EAkMOC,QAlMP,EAkMiBjB,QAlMjB,EAkM2B;QAChC,IAAI,KAAKa,UAAL,CAAgBG,MAAhB,CAAJ,EAA6B;UAC3B;UACA,OAAO,KAAP;QACD;;QACD,IAAIA,MAAM,KAAK,IAAf,EAAqB;UACnB;UACA,OAAO,KAAP;QACD;;QACD,IAAMzI,MAAM,GAAG,KAAK2G,SAAL,EAAf;QACA,IAAMzG,QAAQ,GAAGF,MAAM,CAAC8G,WAAP,EAAjB;QACA,IAAM6B,YAAY,GAAGD,QAAQ,KAAK,QAAb,GAAwBD,MAAxB,GAAiCA,MAAM,CAAC9B,SAAP,EAAtD;QACA,IAAMiC,cAAc,GAAGD,YAAY,CAAC7B,WAAb,EAAvB;QACA,IAAMY,OAAO,GAAG,CACd;UACEmB,QAAQ,EAAE3I,QAAQ,CAACuF,OAAT,CAAiB,IAAjB,CADZ;UAEEqD,SAAS,EAAE9I,MAFb;UAGEA,MAAM,EAAE2I,YAHV;UAIE3B,KAAK,EAAE,IAJT;UAKEW,KAAK,EAAEiB,cAAc,CAACnD,OAAf,CAAuBgD,MAAvB,KAAkCC,QAAQ,KAAK,OAAb,GAAuB,CAAvB,GAA2B,CAA7D;QALT,CADc,CAAhB;;QAUA,IACGA,QAAQ,KAAK,QAAb,IAAyBC,YAAY,CAAC1C,gBAAb,GAAgCO,qBAAhC,CAAsD,KAAKjB,OAAL,EAAtD,CAA1B,IACAoD,YAAY,CAACI,wBAAb,CAAsC,IAAtC,EAA4CrB,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAvD,CAFF,EAGE;UACAzH,QAAQ,CAACsH,MAAT,CAAgB,IAAhB;UACA,KAAKD,OAAL,GAAeC,MAAf;;UACA,IAAImB,YAAY,KAAK3I,MAArB,EAA6B;YAC3B;YACA0H,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAX,GAAmBiB,cAAc,CAACnD,OAAf,CAAuBgD,MAAvB,KAAkCC,QAAQ,KAAK,OAAb,GAAuB,CAAvB,GAA2B,CAA7D,CAAnB;UACD;;UACDC,YAAY,CAACK,WAAb,CAAyB,IAAzB,EAA+BtB,OAAO,CAAC,CAAD,CAAP,CAAWC,KAA1C,EAAiD,IAAjD,EAAuD,OAAvD;;UACA,IAAI,CAACF,QAAL,EAAe;YACb,IAAM1H,MAAM,GAAG,KAAK6H,SAAL,EAAf;;YACA,IAAI7H,MAAJ,EAAY;cACV,IAAMgI,MAAM,GAAG,IAAIpH,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CACbjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAgC,KAAKC,cAAL,EAAhC,CADa,EAEb,IAFa,EAGbV,OAHa,EAIb,OAJa,CAAf;cAOA3H,MAAM,CAACsI,OAAP,CAAeN,MAAf;YACD;UACF;;UACD,OAAO,IAAP;QACD;;QACD,OAAO,KAAP;MACD,CApPM;MAsPPkB,MAtPO,kBAsPAC,SAtPA,EAsPWvB,KAtPX,EAsPkBF,QAtPlB,EAsP4B;QACjC,IAAI,KAAKa,UAAL,CAAgBY,SAAhB,CAAJ,EAAgC;UAC9B;UACA,OAAO,KAAP;QACD;;QACD,IAAMlJ,MAAM,GAAG,KAAK2G,SAAL,EAAf;QACA,IAAMzG,QAAQ,GAAGF,MAAM,CAAC8G,WAAP,EAAjB;QACA,IAAMY,OAAO,GAAG,CACd;UACEmB,QAAQ,EAAE3I,QAAQ,CAACuF,OAAT,CAAiB,IAAjB,CADZ;UAEEqD,SAAS,EAAE9I,MAFb;UAGEA,MAAM,EAAEkJ,SAHV;UAIElC,KAAK,EAAE,IAJT;UAKEW,KAAK,EAAEA;QALT,CADc,CAAhB,CAPiC,CAiBjC;;QACA,IAAMc,MAAM,GAAGS,SAAS,KAAKlJ,MAAd,IAAwB2H,KAAK,GAAGzH,QAAQ,CAACqG,MAAzC,GAAkDrG,QAAQ,CAACiJ,OAAT,CAAiBxB,KAAjB,CAAlD,GAA4E,IAA3F;;QACA,IAAIuB,SAAS,CAACH,wBAAV,CAAmC,IAAnC,EAAyCpB,KAAzC,CAAJ,EAAqD;UACnDzH,QAAQ,CAACsH,MAAT,CAAgB,IAAhB;UACA,KAAKD,OAAL,GAAeC,MAAf;;UAEA,IAAIiB,MAAJ,EAAY;YACVd,KAAK,GAAGzH,QAAQ,CAACuF,OAAT,CAAiBgD,MAAjB,CAAR;YACAf,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAX,GAAmBA,KAAnB;UACD;;UACDuB,SAAS,CAACF,WAAV,CAAsB,IAAtB,EAA4BrB,KAA5B,EAAmC,IAAnC,EAAyC,OAAzC;;UACA,IAAI,CAACF,QAAL,EAAe;YACb,IAAM1H,MAAM,GAAG,KAAK6H,SAAL,EAAf;;YACA,IAAI7H,MAAJ,EAAY;cACV,IAAMgI,MAAM,GAAG,IAAIpH,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CACbjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAgC,KAAKC,cAAL,EAAhC,CADa,EAEb,IAFa,EAGbV,OAHa,EAIb,OAJa,CAAf;cAOA3H,MAAM,CAACsI,OAAP,CAAeN,MAAf;YACD;UACF;;UACD,OAAO,IAAP;QACD;;QACD,OAAO,KAAP;MACD,CAlSM;MAoSPqB,SApSO,qBAoSGX,MApSH,EAoSWhB,QApSX,EAoSqB;QAC1B,OAAO,KAAKe,KAAL,CAAWC,MAAX,EAAmB,OAAnB,EAA4BhB,QAA5B,CAAP;MACD,CAtSM;MAwSP4B,UAxSO,sBAwSIZ,MAxSJ,EAwSYhB,QAxSZ,EAwSsB;QAC3B,OAAO,KAAKe,KAAL,CAAWC,MAAX,EAAmB,QAAnB,EAA6BhB,QAA7B,CAAP;MACD,CA1SM;MA4SP6B,UA5SO,sBA4SIb,MA5SJ,EA4SYhB,QA5SZ,EA4SsB;QAC3B,OAAO,KAAKe,KAAL,CAAWC,MAAX,EAAmB,QAAnB,EAA6BhB,QAA7B,CAAP;MACD,CA9SM;MAgTP8B,WAhTO,uBAgTKd,MAhTL,EAgTahB,QAhTb,EAgTuB;QAC5B,IAAMkB,YAAY,GAAGF,MAAM,CAAC9B,SAAP,EAArB;QACA,IAAM6C,QAAQ,GAAGb,YAAY,CAAC7B,WAAb,GAA2BrB,OAA3B,CAAmCgD,MAAnC,IAA6C,CAA9D;QACA,OAAOE,YAAY,CAACK,WAAb,CAAyB,IAAzB,EAA+BQ,QAA/B,EAAyC/B,QAAzC,EAAmD,OAAnD,CAAP;MACD,CApTM;MAsTPgC,YAtTO,wBAsTMhB,MAtTN,EAsTchB,QAtTd,EAsTwB;QAC7B,IAAMkB,YAAY,GAAGF,MAAM,CAAC9B,SAAP,EAArB;QACA,IAAM6C,QAAQ,GAAGb,YAAY,CAAC7B,WAAb,GAA2BrB,OAA3B,CAAmCgD,MAAnC,CAAjB;QACA,OAAOE,YAAY,CAACK,WAAb,CAAyB,IAAzB,EAA+BQ,QAA/B,EAAyC/B,QAAzC,EAAmD,OAAnD,CAAP;MACD,CA1TM;;MA4TP;AACJ;AACA;AACA;AACA;AACA;MACIiC,kBAlUO,8BAkUYC,cAlUZ,EAkU4B;QACjC,IAAI,CAAC,KAAKnG,QAAV,EAA6B;UAC3B,IAAI,KAAK+B,OAAL,GAAea,UAAf,CAA0B,GAA1B,CAAJ,EAAoC;YAClC,KAAK5C,QAAL,GAAyB,EAAzB;UACD,CAFD,MAEO;YACL,IAAM1D,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;YACA,IAAM2D,OAAO,GAAG9J,aAAa,CAAC+J,kBAAd,EAAhB;YACA,IAAMC,YAAY,GAAG,EAArB;YACA,IAAMC,aAAa,GAAG,EAAtB;;YACA,IAAI,CAAC,KAAKC,QAAL,EAAL,EAAsB;cACpB,KAAK/E,IAAL;YACD;;YACD,KAAK6B,WAAL,GAAmBmD,OAAnB,CAA2B,UAAAjD,KAAK,EAAI;cAClC,IAAI,CAACzH,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,aAArC,EAAoD/C,KAAK,CAACzB,OAAN,EAApD,CAAL,EAA2E;gBACzEwE,aAAa,CAAC/C,KAAK,CAACzB,OAAN,EAAD,CAAb,GAAiC,CAAjC;cACD;;cACDwE,aAAa,CAAC/C,KAAK,CAACzB,OAAN,EAAD,CAAb;YACD,CALD;YAOAhG,MAAM,CAAC8G,IAAP,CAAYuD,OAAZ,EAAqBK,OAArB,CAA6B,UAAAI,WAAW,EAAI;cAC1C,IAAIV,cAAc,KAAK,IAAnB,IAA2BU,WAAW,KAAK,UAA/C,EAA2D;gBACzD;cACD;;cACD,IAAIA,WAAW,KAAK,OAAhB,IAA2BA,WAAW,KAAK,gBAA/C,EAAiE;gBAC/D,IAAIvK,aAAa,CAACqG,oBAAd,EAAJ,EAA0C;kBACxC,IAAIrG,aAAa,CAACwK,OAAd,EAAJ,EAA6B;oBAC3B;oBACA,IAAIC,SAAS,GAAG,CAAhB;oBACA,IAAIC,UAAU,GAAG,CAAjB;oBACAjL,MAAM,CAAC8G,IAAP,CAAY0D,aAAZ,EAA2BE,OAA3B,CAAmC,UAAAQ,GAAG,EAAI;sBACxC,IAAIA,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,gBAA/B,EAAiD;wBAC/CF,SAAS,IAAIR,aAAa,CAACU,GAAD,CAA1B;sBACD,CAFD,MAEO;wBACLD,UAAU,IAAIT,aAAa,CAACU,GAAD,CAA3B;sBACD;oBACF,CAND;;oBAOA,IAAIF,SAAS,IAAIC,UAAjB,EAA6B;sBAC3B;sBACAV,YAAY,CAACpJ,IAAb,CAAkB2J,WAAlB;oBACD;kBACF,CAfD,MAeO,IACL,CAAC9K,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,aAArC,EAAoD,OAApD,CAAD,IACA,CAACxK,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,aAArC,EAAoD,gBAApD,CAFI,EAGL;oBACAD,YAAY,CAACpJ,IAAb,CAAkB2J,WAAlB;kBACD;gBACF;;gBACD;cACD;;cACD,IAAMK,WAAW,GAAG5K,aAAa,CAACuH,uBAAd,CAAsCgD,WAAtC,CAApB;cACA,IAAMxD,QAAQ,GAAGtH,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,aAArC,EAAoDM,WAApD,IACbN,aAAa,CAACM,WAAD,CADA,GAEb,CAFJ;;cAGA,IAAIK,WAAW,IAAIA,WAAW,CAACC,GAAZ,GAAkB9D,QAArC,EAA+C;gBAC7CiD,YAAY,CAACpJ,IAAb,CAAkB2J,WAAlB;cACD;YACF,CArCD;YAsCA,KAAK7G,QAAL,GAAyBsG,YAAzB;UACD;QACF;;QACD,OAAO,KAAKtG,QAAZ;MACD,CA/XM;;MAiYP;AACJ;AACA;AACA;AACA;AACA;MACIuF,wBAvYO,oCAuYkB6B,UAvYlB,EAuY8BjD,KAvY9B,EAuYqC;QAC1C,IAAM7H,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;QACA,IAAM1F,QAAQ,GAAGqK,UAAU,YAAYjK,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAA1C,GAAuD6J,UAAU,CAACrF,OAAX,EAAvD,GAA8EqF,UAA/F;;QACA,IAAI,CAAC9K,aAAa,CAAC0G,qBAAd,CAAoCjG,QAApC,CAAL,EAAoD;UAClD,KAAKsK,KAAL,CAAWtK,QAAX,EAAqB,4BAArB,EAAmD,KAAKgF,OAAL,EAAnD;UACA,OAAO,KAAP;QACD;;QACD,IAAIzF,aAAa,CAACgL,mBAAd,EAAJ,EAAyC;UACvC;UACA,OAAO,IAAP;QACD,CAVyC,CAW1C;;;QACA,IAAMC,cAAc,GAAGjL,aAAa,CAACkL,2BAAd,EAAvB;;QACA,IAAI,CAAC,KAAKhB,QAAL,EAAL,EAAsB;UACpB,KAAK/E,IAAL;QACD;;QACD,IAAM/E,QAAQ,GAAG,KAAK4G,WAAL,EAAjB;;QACA,IAAI5G,QAAQ,CAACqG,MAAT,KAAoB,CAAxB,EAA2B;UACzB;UACA,OAAO,IAAP;QACD;;QACD,IAAI0E,eAAe,GAAGtD,KAAtB;;QACA,IAAIzH,QAAQ,CAACqG,MAAT,GAAkBoB,KAAtB,EAA6B;UAC3BsD,eAAe,GAAGF,cAAc,CAAC7K,QAAQ,CAACiJ,OAAT,CAAiBxB,KAAjB,EAAwBpC,OAAxB,EAAD,CAAhC;QACD,CAFD,MAEO;UACL0F,eAAe,GAAG/K,QAAQ,CAACqG,MAA3B;QACD;;QACD,IAAI2E,cAAc,GAAGH,cAAc,CAACxK,QAAD,CAAnC;;QACA,IAAI0K,eAAe,KAAKC,cAApB,IAAsCA,cAAc,IAAIhL,QAAQ,CAACqG,MAArE,EAA6E;UAC3E;UACA,OAAO,IAAP;QACD,CA/ByC,CAgC1C;;;QACA,IAAI4E,eAAJ;;QACA,IAAIxD,KAAK,GAAG,CAAZ,EAAe;UACb,KAAK,IAAIyD,CAAC,GAAGC,IAAI,CAAC/D,GAAL,CAASK,KAAT,EAAgBzH,QAAQ,CAACqG,MAAzB,IAAmC,CAAhD,EAAmD6E,CAAC,IAAI,CAAxD,EAA2DA,CAAC,EAA5D,EAAgE;YAC9D,IAAIlL,QAAQ,CAACiJ,OAAT,CAAiBiC,CAAjB,EAAoB7F,OAApB,OAAkChF,QAAtC,EAAgD;cAC9C4K,eAAe,GAAGjL,QAAQ,CAACiJ,OAAT,CAAiBiC,CAAjB,EAAoB7F,OAApB,EAAlB;cACA;YACD;UACF;QACF;;QACD,IAAI4F,eAAJ,EAAqB;UACnBF,eAAe,GAAGF,cAAc,CAACI,eAAD,CAAhC;QACD,CA5CyC,CA6C1C;;;QACA,IAAMvB,OAAO,GAAGqB,eAAe,GAAG,CAAlB,IAAuBC,cAAvC;;QACA,IAAI,CAACtB,OAAL,EAAc;UACZ,KAAKiB,KAAL,CAAWtK,QAAX,EAAqB,4BAArB,EAAmD,KAAKgF,OAAL,EAAnD;UACA,OAAO,KAAP;QACD;;QAED,OAAO,IAAP;MACD,CA5bM;MA8bP+F,oBA9bO,gCA8bcC,QA9bd,EA8bwB;QAC7B,IAAMzL,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;;QACA,IAAInG,aAAa,CAAC0G,qBAAd,CAAoC+E,QAAQ,CAAChG,OAAT,EAApC,CAAJ,EAA6D;UAC3D,IAAI,CAAC,KAAKyE,QAAL,EAAL,EAAsB;YACpB,KAAK/E,IAAL;UACD;;UACD,IAAInF,aAAa,CAACgL,mBAAd,EAAJ,EAAyC;YACvC;YACA,OAAO,KAAKhE,WAAL,GAAmBP,MAA1B;UACD;;UACD,IAAMwE,cAAc,GAAGjL,aAAa,CAACkL,2BAAd,EAAvB;;UACA,IAAID,cAAc,IAAIxL,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCW,cAArC,EAAqDQ,QAAQ,CAAChG,OAAT,EAArD,CAAtB,EAAgG;YAC9F,IAAMmD,QAAQ,GAAGqC,cAAc,CAACQ,QAAQ,CAAChG,OAAT,EAAD,CAA/B,CAD8F,CAE9F;;YACA,IAAIiG,WAAW,GAAG9C,QAAlB;YACA,IAAM+C,KAAK,GAAG,KAAK3E,WAAL,GAAmB4E,IAAnB,CAAwB,UAAC1E,KAAD,EAAQW,KAAR,EAAkB;cACtD,IAAMgE,QAAQ,GAAGZ,cAAc,CAAC/D,KAAK,CAACzB,OAAN,EAAD,CAA/B;;cACA,IAAIoG,QAAQ,GAAGjD,QAAf,EAAyB;gBACvB8C,WAAW,GAAG7D,KAAd;gBACA,OAAO,IAAP;cACD;;cACD,OAAO,KAAP;YACD,CAPa,CAAd;;YAQA,IAAI,CAAC8D,KAAL,EAAY;cACV;cACAD,WAAW,GAAG,KAAK1E,WAAL,GAAmBP,MAAjC;YACD;;YACD,OAAOiF,WAAP;UACD;QACF;;QACD,OAAO,CAAC,CAAR;MACD,CA7dM;;MA+dP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIxC,WAveO,uBAueK4B,UAveL,EAueiBjD,KAvejB,EAuewBF,QAvexB,EAuekCmE,iBAvelC,EAueqD;QAC1D,IAAI,CAAC,KAAK5B,QAAL,EAAL,EAAsB;UACpB,KAAK/E,IAAL;QACD;;QACD,IAAM/E,QAAQ,GAAG,KAAK4G,WAAL,EAAjB;QACA,IAAI+E,OAAO,GAAG,KAAd;;QACA,IAAIlE,KAAK,KAAK,CAAC,CAAf,EAAkB;UAChBA,KAAK,GAAG,KAAK2D,oBAAL,CAA0BV,UAA1B,CAAR;;UACA,IAAIjD,KAAK,KAAK,CAAC,CAAf,EAAkB;YAChB;YACA,OAAO,KAAP;UACD;QACF;;QACD,IAAI,KAAKoB,wBAAL,CAA8B6B,UAA9B,EAA0CjD,KAA1C,CAAJ,EAAsD;UACpD,IAAIA,KAAK,IAAIzH,QAAQ,CAACqG,MAAtB,EAA8B;YAC5B;YACA,KAAKtG,KAAL,CAAW6L,WAAX,CAAuBlB,UAAU,CAACrD,OAAX,EAAvB;;YACArH,QAAQ,CAACQ,IAAT,CAAckK,UAAd;YACAiB,OAAO,GAAG,IAAV;UACD,CALD,MAKO,IAAIlE,KAAK,KAAK,CAAd,EAAiB;YACtB;YACA,KAAK1H,KAAL,CAAWwJ,YAAX,CAAwBmB,UAAU,CAACrD,OAAX,EAAxB,EAA8C,KAAKtH,KAAL,CAAW8L,UAAX,CAAsB,CAAtB,CAA9C;;YAEA7L,QAAQ,CAAC8L,OAAT,CAAiBpB,UAAjB;YACAiB,OAAO,GAAG,IAAV;UACD,CANM,MAMA;YACL,IAAMI,aAAa,GAAG/L,QAAQ,CAACiJ,OAAT,CAAiBxB,KAAjB,CAAtB;;YACA,IAAIsE,aAAJ,EAAmB;cACjBA,aAAa,CAAC1E,OAAd,GAAwB2E,MAAxB,CAA+BtB,UAAU,CAACrD,OAAX,EAA/B;cACArH,QAAQ,CAACuJ,YAAT,CAAsBwC,aAAtB,EAAqCrB,UAArC;cACAiB,OAAO,GAAG,IAAV;YACD;UACF;QACF;;QACD,IAAIA,OAAJ,EAAa;UACX,IAAM9L,MAAM,GAAG,KAAK6H,SAAL,EAAf;UACAgD,UAAU,CAAC3J,SAAX,CAAqB,IAArB;;UACA,IAAI2J,UAAU,CAAC/C,SAAf,EAA0B;YACxB,OAAO+C,UAAU,CAAC/C,SAAlB;;YACA,IAAI9H,MAAJ,EAAY;cACVA,MAAM,CAAC+H,cAAP,CAAsB8C,UAAtB;YACD;;YACDA,UAAU,CAAC9C,cAAX;UACD,CAND,MAMO,IAAI,CAAC8D,iBAAD,IAAsBA,iBAAiB,KAAK,OAAhD,EAAyD;YAC9DhB,UAAU,CAACuB,OAAX,GAAqB,IAArB;YACAvB,UAAU,CAAC9C,cAAX;UACD;;UACD,KAAKA,cAAL;;UACA,IAAI5H,QAAQ,CAACqG,MAAT,KAAoB,CAAxB,EAA2B;YACzB;YACA,KAAK6F,OAAL,CAAa,IAAb;UACD;;UACD,IAAI,CAAC3E,QAAL,EAAe;YACb,IAAI1H,MAAJ,EAAY;cACV,IAAM2H,OAAO,GAAG,CACd;gBACEC,KAAK,EAAEA,KADT;gBAEE3H,MAAM,EAAE,IAFV;gBAGEgH,KAAK,EAAE4D;cAHT,CADc,CAAhB;cAQA,IAAM7C,MAAM,GAAG,IAAIpH,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CACbjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,QAArB,EAA+B,KAAKC,cAAL,EAA/B,CADa,EAEb,IAFa,EAGbV,OAHa,EAIb,SAJa,CAAf;cAOA3H,MAAM,CAACsI,OAAP,CAAeN,MAAf;YACD;UACF;QACF;;QACD,OAAO8D,OAAP;MACD,CAjjBM;MAmjBPQ,oBAnjBO,gCAmjBcrI,KAnjBd,EAmjBqB;QAC1B;QACA,IAAI,CAAC,KAAKT,QAAV,EAA0B;UACxB,IAAI,KAAKtD,KAAT,EAAgB;YACd,IAAI,CAAC,KAAKgG,gBAAL,GAAwBqG,YAAxB,CAAqCtI,KAArC,CAAL,EAAkD;cAChD,MAAM,IAAIjF,EAAE,CAACO,IAAH,CAAQiN,eAAZ,CAA4BxN,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,8BAArB,EAAqDnE,KAArD,CAA5B,CAAN;YACD;UACF,CAJD,MAIO;YACL,MAAM,IAAIjF,EAAE,CAACO,IAAH,CAAQiN,eAAZ,CAA4BxN,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,+BAArB,CAA5B,CAAN;UACD;QACF;MACF,CA9jBM;;MAgkBP;AACJ;AACA;AACA;MACI7F,QApkBO,oBAokBEkK,SApkBF,EAokBa;QAAA;;QAClB,IAAM1M,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;;QACA,IAAI,KAAK7B,UAAL,EAAJ,EAAuB;UACrB,KAAKuC,SAAL,GAAiBrE,QAAjB,CAA0B,KAA1B;UACA,KAAKmK,QAAL,CAAc3M,aAAa,CAACwM,YAAd,CAA2B,KAAK9H,OAAL,EAA3B,CAAd;QACD,CAHD,MAGO,IAAI,KAAKkI,SAAL,EAAJ,EAAsB;UAC3B,IAAMC,iBAAiB,GAAG7M,aAAa,CAACwG,oBAAd,EAA1B;UACA,IAAMsG,MAAM,GAAG,EAAf,CAF2B,CAG3B;;UACA,KAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnL,KAAL,CAAW4M,UAAX,CAAsBtG,MAA1C,EAAkD6E,CAAC,EAAnD,EAAuD;YACrD,IAAM0B,IAAI,GAAG,KAAK7M,KAAL,CAAW4M,UAAX,CAAsBE,IAAtB,CAA2B3B,CAA3B,CAAb;;YACA,IAAI7L,MAAM,CAAC2K,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCuC,iBAArC,EAAwDG,IAAI,CAAC/K,IAA7D,CAAJ,EAAwE;cACtE,IAAI,CAAC4K,iBAAiB,CAACG,IAAI,CAAC/K,IAAN,CAAjB,CAA6BuK,YAA7B,CAA0CQ,IAAI,CAAC9I,KAA/C,CAAL,EAA4D;gBAC1D4I,MAAM,CAAClM,IAAP,CAAY;kBACVsM,SAAS,EAAEF,IAAI,CAAC/K,IADN;kBAEVkL,KAAK,EAAElO,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,eAArB;gBAFG,CAAZ;cAID;YACF,CAPD,MAOO;cACLyE,MAAM,CAAClM,IAAP,CAAY;gBACVsM,SAAS,EAAEF,IAAI,CAAC/K,IADN;gBAEVkL,KAAK,EAAElO,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,8BAArB,EAAqD2E,IAAI,CAAC/K,IAA1D;cAFG,CAAZ;YAID;UACF,CAnB0B,CAoB3B;;;UACAxC,MAAM,CAAC8G,IAAP,CAAYsG,iBAAZ,EACG5F,MADH,CACU,UAAAhF,IAAI;YAAA,OAAI,CAAC4K,iBAAiB,CAAC5K,IAAD,CAAjB,CAAwBmL,UAAxB,EAAL;UAAA,CADd,EAEGjD,OAFH,CAEW,UAAAlI,IAAI,EAAI;YACf,IAAI,CAAC,MAAI,CAAC9B,KAAL,CAAWkN,YAAX,CAAwBpL,IAAxB,CAAL,EAAoC;cAClC6K,MAAM,CAAClM,IAAP,CAAY;gBACVsM,SAAS,EAAEjL,IADD;gBAEVkL,KAAK,EAAElO,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,0CAArB,EAAiEpG,IAAjE;cAFG,CAAZ;YAID;UACF,CATH;;UAUA,IAAIjC,aAAa,CAAC8G,qBAAd,EAAJ,EAA2C;YACzC;YACA,IAAM6E,KAAK,GAAG,KAAK3E,WAAL,GAAmB4E,IAAnB,CAAwB,UAAA1E,KAAK;cAAA,OAAIA,KAAK,CAAC5C,UAAN,MAAsB4C,KAAK,CAACO,OAAN,GAAgB6F,SAAhB,CAA0BC,IAA1B,OAAqC,EAA/D;YAAA,CAA7B,CAAd;;YAEA,IAAI,CAAC5B,KAAL,EAAY;cACVmB,MAAM,CAAClM,IAAP,CAAY;gBACVsM,SAAS,EAAE,OADD;gBAEVC,KAAK,EAAElO,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,yBAArB;cAFG,CAAZ;YAID;UACF;;UACD,IAAIrI,aAAa,CAACqG,oBAAd,EAAJ,EAA0C;YACxC,KAAKW,WAAL,GAAmBmD,OAAnB,CAA2B,UAAAjD,KAAK,EAAI;cAClC,IAAIA,KAAK,CAAC5C,UAAN,EAAJ,EAAwB;gBACtB4C,KAAK,CAAC/B,IAAN;gBACA+B,KAAK,CAACyF,QAAN,CAAe3M,aAAa,CAACwM,YAAd,CAA2BtF,KAAK,CAACxC,OAAN,EAA3B,CAAf;;gBACA,IAAI,CAACwC,KAAK,CAAClD,OAAN,EAAL,EAAsB;kBACpBkD,KAAK,CAACsG,iBAAN,CAAwBvO,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,yBAArB,CAAxB;gBACD;cACF;YACF,CARD;UASD;;UACD,KAAKmF,iBAAL,CAAuBV,MAAM,CAACW,GAAP,CAAW,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAACP,KAAR;UAAA,CAAd,EAA6BQ,IAA7B,CAAkC,OAAlC,CAAvB;UACA,KAAKhB,QAAL,CAAcG,MAAM,CAACrG,MAAP,KAAkB,CAAhC;QACD;MACF,CAjoBM;MAmoBPnC,UAnoBO,wBAmoBM;QACX,OAAO,KAAKmB,OAAL,OAAmB,OAAnB,IAA8B,KAAKA,OAAL,OAAmB,gBAAxD;MACD,CAroBM;MAuoBPmI,iBAvoBO,6BAuoBW1J,KAvoBX,EAuoBkB;QACvB,IAAI,CAAC,KAAKT,QAAV,EAA0B;UACxB,IAAI,KAAKtD,KAAT,EAAgB;YACd,IACE,KAAKA,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IACA,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAD7B,IAEA,KAAK3D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAH/B,EAIE;cACA,KAAKrE,KAAL,CAAWmN,SAAX,GAAuBpJ,KAAvB;cACA,KAAK2J,iBAAL;YACD,CAPD,MAOO,IAAI,KAAK1N,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;cACpD,KAAK3N,KAAL,CAAWoC,WAAX,GAAyB2B,KAAzB;YACD;UACF;QACF;MACF,CAtpBM;MAwpBPQ,OAxpBO,qBAwpBG;QACR,OAAO,KAAKqJ,cAAL,EAAP;MACD,CA1pBM;MA4pBPC,OA5pBO,mBA4pBCC,IA5pBD,EA4pBOxN,QA5pBP,EA4pBiB;QACtB,IAAIyN,OAAO,GAAG,KAAd;QACA,IAAIC,QAAQ,GAAGF,IAAf;QACA,IAAIG,QAAQ,GAAG,EAAf;;QACA,IAAI,KAAKjI,gBAAL,GAAwBE,oBAAxB,EAAJ,EAAoD;UAClD+H,QAAQ,GAAG,KAAKL,cAAL,EAAX;;UACA,IAAI,KAAK5H,gBAAL,GAAwBqG,YAAxB,CAAqCyB,IAArC,CAAJ,EAAgD;YAC9C,IAAIG,QAAQ,KAAKH,IAAjB,EAAuB;cACrB,KAAKI,cAAL,CAAoBJ,IAApB;cACAC,OAAO,GAAG,IAAV;YACD;UACF,CALD,MAKO;YACL,KAAKf,KAAL,CAAW,OAAOc,IAAP,GAAc,sCAAd,GAAuD,KAAKxI,OAAL,EAAvD,GAAwE,YAAnF;UACD;QACF,CAVD,MAUO;UACL,KAAK0H,KAAL,CAAW,yCAAyC,KAAK1H,OAAL,EAAzC,GAA0D,YAArE;QACD;;QACD,OAAO;UACLyI,OAAO,EAAEA,OADJ;UAELhB,SAAS,EAAEzM,QAAQ,IAAI,OAFlB;UAGLyD,KAAK,EAAEiK,QAHF;UAILG,GAAG,EAAEF;QAJA,CAAP;MAMD,CAnrBM;MAqrBP1I,YArrBO,wBAqrBMzD,IArrBN,EAqrBY;QACjB,OAAO,KAAK9B,KAAL,CAAWuF,YAAX,CAAwBzD,IAAxB,CAAP;MACD,CAvrBM;MAyrBPsM,YAzrBO,wBAyrBMtM,IAzrBN,EAyrBYiC,KAzrBZ,EAyrBmB;QACxB,IAAI,KAAK/D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;UAC7C,IAAMZ,SAAS,GAAG,KAAK/G,gBAAL,GAAwBK,oBAAxB,GAA+CvE,IAA/C,CAAlB;UACA,IAAIiM,OAAO,GAAG,KAAd;UACA,IAAIC,QAAQ,GAAGjK,KAAf;UACA,IAAIkK,QAAQ,GAAG,KAAKjO,KAAL,CAAWkN,YAAX,CAAwBpL,IAAxB,IAAgC,KAAK9B,KAAL,CAAWuF,YAAX,CAAwBzD,IAAxB,CAAhC,GAAgE,EAA/E;;UACA,IAAIiL,SAAJ,EAAe;YACb,IAAIhJ,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKsK,SAAhC,EAA2C;cACzCtK,KAAK,GAAG,EAAR;YACD,CAFD,MAEO;cACLA,KAAK,GAAG,KAAKA,KAAb;YACD;;YACDA,KAAK,GAAGA,KAAK,CAACuK,OAAN,CAAc,SAAd,EAAyB,UAAUC,CAAV,EAAa;cAC5C,OAAO7N,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAApB,CAA+BU,SAA/B,CAAyC+M,CAAzC,CAAP;YACD,CAFO,CAAR;YAGAP,QAAQ,GAAGjK,KAAX;;YACA,IAAIgJ,SAAS,CAACV,YAAV,CAAuBtI,KAAvB,CAAJ,EAAmC;cACjC,IAAIkK,QAAQ,KAAKlK,KAAjB,EAAwB;gBACtB,IAAI,CAACA,KAAD,IAAUA,KAAK,KAAKgJ,SAAS,CAACyB,eAAV,EAAxB,EAAqD;kBACnD,KAAKxO,KAAL,CAAWyO,eAAX,CAA2B3M,IAA3B;;kBACAkM,QAAQ,GAAG,EAAX;gBACD,CAHD,MAGO;kBACL,KAAKhO,KAAL,CAAWoO,YAAX,CAAwBtM,IAAxB,EAA8BiC,KAA9B;gBACD;;gBACD,IAAIjC,IAAI,KAAK,MAAb,EAAqB;kBACnB,KAAK4L,iBAAL;;kBACA,IAAI,KAAKpI,OAAL,OAAmB,MAAvB,EAA+B;oBAC7B,KAAKrE,aAAL;kBACD;gBACF;;gBACD8M,OAAO,GAAG,IAAV;cACD;YACF,CAhBD,MAgBO;cACL,KAAKf,KAAL,CAAW,OAAOjJ,KAAP,GAAe,oCAAf,GAAsDjC,IAAtD,GAA6D,IAAxE;YACD;UACF,CA7BD,MA6BO;YACL,KAAKkL,KAAL,CAAW,OAAOlL,IAAP,GAAc,qCAAd,GAAsD,KAAKwD,OAAL,EAAtD,GAAuE,YAAlF;UACD;;UACD,OAAO;YACLyI,OAAO,EAAEA,OADJ;YAELhB,SAAS,EAAEjL,IAFN;YAGLiC,KAAK,EAAEiK,QAHF;YAILG,GAAG,EAAEF;UAJA,CAAP;QAMD,CA3CD,MA2CO,IACJ,KAAKjO,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IAA0CtC,IAAI,KAAK,OAApD,IACC,KAAK9B,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAA7B,IAAmDvC,IAAI,KAAK,gBAFxD,EAGL;UACA,OAAO,KAAK+L,OAAL,CAAa9J,KAAb,EAAoBjC,IAApB,CAAP;QACD,CALM,MAKA,IAAI,KAAK9B,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAA7B,IAA6C7B,IAAI,KAAK,UAA1D,EAAsE;UAC3E,IAAMmM,SAAQ,GAAG,KAAKL,cAAL,EAAjB;;UACA,IAAMG,QAAO,GAAGhK,KAAK,KAAKkK,SAA1B;;UACA,KAAKC,cAAL,CAAoBnK,KAApB;UACA,OAAO;YACLgK,OAAO,EAAEA,QADJ;YAELhB,SAAS,EAAEjL,IAFN;YAGLiC,KAAK,EAAEA,KAHF;YAILoK,GAAG,EAAEF;UAJA,CAAP;QAMD;;QACD,OAAO,IAAP;MACD,CAtvBM;;MAwvBP;AACJ;AACA;MACIS,UA3vBO,wBA2vBM;QACX,IAAM3O,MAAM,GAAG,KAAK2G,SAAL,EAAf;;QACA,IAAI3G,MAAJ,EAAY;UACV,IAAMiH,kBAAkB,GAAGjH,MAAM,CAACiG,gBAAP,GAA0BiB,mBAA1B,EAA3B;UACA,OAAOD,kBAAkB,CAACE,QAAnB,CAA4B,KAAK5B,OAAL,EAA5B,CAAP;QACD,CALU,CAMX;;;QACA,OAAO,IAAP;MACD,CAnwBM;MAqwBPqJ,aArwBO,yBAqwBOnP,IArwBP,EAqwBa;QAAA;;QAClB,IAAMiI,OAAO,GAAG,EAAhB;QACA,IAAIK,MAAJ;QACA,IAAM8G,aAAa,GAAG,EAAtB;QACA,IAAMzK,UAAU,GAAG,KAAKmB,OAAL,OAAmB,OAAnB,IAA8B,KAAKA,OAAL,OAAmB,gBAApE;QACA,IAAMvF,MAAM,GAAG,KAAK2G,SAAL,EAAf;QACApH,MAAM,CAAC8G,IAAP,CAAY5G,IAAZ,EAAkBwK,OAAlB,CAA0B,UAAA6E,QAAQ,EAAI;UACpC,IAAI1K,UAAU,IAAI,CAAC0K,QAAQ,CAAC1I,UAAT,CAAoB,GAApB,CAAnB,EAA6C;YAC3C;YACA2B,MAAM,GAAG/H,MAAM,CAACqO,YAAP,CAAoBS,QAApB,EAA8BrP,IAAI,CAACqP,QAAD,CAAlC,CAAT;;YACA,IAAI/G,MAAM,CAACiG,OAAX,EAAoB;cAClBa,aAAa,CAACnO,IAAd,CAAmBqH,MAAnB;YACD;UACF,CAND,MAMO,IAAI+G,QAAQ,KAAK,YAAb,IAA6BA,QAAQ,KAAK,YAA9C,EAA4D;YACjE,IAAI,MAAI,CAAC7I,gBAAL,GAAwBO,qBAAxB,CAA8C,GAA9C,CAAJ,EAAwD;cACtD,IAAMuI,GAAG,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCxP,IAAI,CAACqP,QAAD,CAApC,EAAgD,UAAhD,CAAZ;;cAEA,IAAIC,GAAG,CAACG,oBAAJ,CAAyB,aAAzB,EAAwC3I,MAAxC,KAAmD,CAAvD,EAA0D;gBACxD,IAAM2H,QAAQ,GAAGY,QAAQ,KAAK,YAAb,GAA4B,MAAI,CAAC7O,KAAL,CAAWkP,SAAvC,GAAmD,MAAI,CAAClP,KAAL,CAAWmP,SAA/E;gBACA,IAAMC,OAAO,GAAGN,GAAG,CAACO,eAApB;;gBACA,IAAIR,QAAQ,KAAK,YAAjB,EAA+B;kBAC7B,IAAMrK,OAAO,GAAG,MAAI,CAACxE,KAArB;kBACAwE,OAAO,CAACK,UAAR,CAAmBC,YAAnB,CAAgCsK,OAAhC,EAAyC5K,OAAzC;kBACA,MAAI,CAACxE,KAAL,GAAaoP,OAAb;;kBACA,MAAI,CAACrK,OAAL,CAAa,MAAI,CAAC/E,KAAL,CAAWM,QAAxB;gBACD,CALD,MAKO;kBACL,MAAI,CAACN,KAAL,CAAWmP,SAAX,GAAuB3P,IAAI,CAACqP,QAAD,CAA3B;gBACD;;gBACDpH,OAAO,CAAChH,IAAR,CAAa;kBACXsN,OAAO,EAAE,IADE;kBAEXhB,SAAS,EAAE8B,QAFA;kBAGX9K,KAAK,EAAEvE,IAAI,CAACqP,QAAD,CAHA;kBAIXV,GAAG,EAAEF;gBAJM,CAAb;;gBAOA,MAAI,CAACjJ,IAAL,CAAU,IAAV;cACD;YACF,CAvBD,MAuBO,IAAI6J,QAAQ,KAAK,YAAb,IAA6B,CAACrP,IAAI,CAACqP,QAAD,CAAtC,EAAkD;cACvD;cACA,IAAMZ,UAAQ,GAAG,MAAI,CAACjO,KAAL,CAAWmP,SAA5B;cACA,MAAI,CAACnP,KAAL,CAAWmP,SAAX,GAAuB3P,IAAI,CAACqP,QAAD,CAA3B;cACApH,OAAO,CAAChH,IAAR,CAAa;gBACXsN,OAAO,EAAE,IADE;gBAEXhB,SAAS,EAAE8B,QAFA;gBAGX9K,KAAK,EAAEvE,IAAI,CAACqP,QAAD,CAHA;gBAIXV,GAAG,EAAEF;cAJM,CAAb;;cAOA,MAAI,CAACjJ,IAAL,CAAU,IAAV;YACD;UACF,CArCM,MAqCA;YACL8C,MAAM,GAAG,MAAI,CAACsG,YAAL,CAAkBS,QAAlB,EAA4BrP,IAAI,CAACqP,QAAD,CAAhC,CAAT;;YACA,IAAI/G,MAAM,CAACiG,OAAX,EAAoB;cAClBtG,OAAO,CAAChH,IAAR,CAAaqH,MAAb;YACD;UACF;QACF,CAlDD;QAmDA,IAAMhI,MAAM,GAAG,KAAK6H,SAAL,EAAf;;QACA,IAAI7H,MAAM,IAAI2H,OAAO,CAACnB,MAAR,GAAiB,CAA/B,EAAkC;UAChC,IAAIsI,aAAa,CAACtI,MAAd,GAAuB,CAA3B,EAA8B;YAC5B,IAAMgJ,YAAY,GAAG,IAAI5O,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CACnBjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,WAArB,EAAkCnI,MAAM,CAACoI,cAAP,EAAlC,CADmB,EAEnBpI,MAFmB,EAGnB6O,aAHmB,CAArB;YAMAnH,OAAO,CAAChH,IAAR,CAAa6O,YAAb;YACAvP,MAAM,CAAC8H,cAAP;UACD;;UACD/H,MAAM,CAACsI,OAAP,CACE,IAAI1H,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBkH,aAAxB,CAAsCjJ,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,WAArB,EAAkC,KAAKC,cAAL,EAAlC,CAAtC,EAAgG,IAAhG,EAAsGV,OAAtG,CADF;QAGD;;QACD,KAAKI,cAAL;MACD,CA/0BM;MAi1BP0H,mBAj1BO,+BAi1Ba1P,aAj1Bb,EAi1B4B;QACjC,IAAIA,aAAJ,EAAmB;UACjB,KAAK2D,UAAL,GAAkB3D,aAAa,CAAC2P,SAAd,GAA0BC,YAA1B,EAAlB;QACD,CAFD,MAEO;UACL,KAAKjM,UAAL,GAAkB,IAAlB;QACD;;QACD3D,aAAa,CAACyB,IAAd,CAAmB,UAAnB,EAA+B,IAA/B,EAAqC,UAArC,EAAiD;UAC/CoO,SAAS,EAAE,UAAU3L,KAAV,EAAiB;YAC1B,OAAO,KAAKyC,UAAL,MAAqBzC,KAA5B;UACD,CAFU,CAETzC,IAFS,CAEJ,IAFI;QADoC,CAAjD;MAKD,CA51BM;MA81BPqO,OA91BO,mBA81BC5L,KA91BD,EA81BQ;QACb,IAAIA,KAAK,IAAI,CAAC,KAAKgG,QAAL,EAAd,EAA+B;UAC7B,KAAK/E,IAAL;QACD;;QACD,KAAK/D,aAAL;MACD,CAn2BM;MAq2BP2O,cAr2BO,4BAq2BU;QACf,KAAKlC,iBAAL;MACD,CAv2BM;MAy2BPA,iBAz2BO,+BAy2Ba;QAClB,IAAI1L,WAAW,GAAG,KAAKsD,OAAL,EAAlB;;QACA,IAAI,KAAKtF,KAAT,EAAgB;UACd,IAAI,KAAKA,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;YAC7C,IAAI,KAAK3N,KAAL,CAAWkN,YAAX,CAAwB,MAAxB,CAAJ,EAAqC;cACnC,IAAM2C,QAAQ,GAAG,KAAK7P,KAAL,CAAWuF,YAAX,CAAwB,MAAxB,CAAjB;;cACAvD,WAAW,IAAI,OAAO6N,QAAP,GAAkB,GAAjC;YACD,CAHD,MAGO,IAAI,KAAK7J,gBAAL,GAAwBwJ,SAAxB,GAAoCM,MAApC,CAA2C,KAAKxK,OAAL,EAA3C,KAA8D,KAAKtF,KAAL,CAAWkN,YAAX,CAAwB,QAAxB,CAAlE,EAAqG;cAC1G,IAAM6C,UAAU,GAAG,KAAK/P,KAAL,CAAWuF,YAAX,CAAwB,QAAxB,CAAnB;;cACAvD,WAAW,IAAI,OAAO+N,UAAP,GAAoB,GAAnC;YACD;UACF,CARD,MAQO,IACL,CAAC,KAAK/P,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IACC,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAD9B,IAEC,KAAKrE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAF/B,KAGA,KAAK3D,KAAL,CAAWmN,SAAX,CAAqBC,IAArB,EAJK,EAKL;YACA,IAAIhL,WAAW,GAAG,KAAKpC,KAAL,CAAWmN,SAAX,CAAqBC,IAArB,EAAlB;;YACA,IAAIhL,WAAW,CAACkE,MAAZ,GAAqB,EAAzB,EAA6B;cAC3BlE,WAAW,GAAGA,WAAW,CAAC4N,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,IAA+B,KAA7C;YACD;;YACDhO,WAAW,GAAGI,WAAd;UACD;QACF;;QACD,IAAI,KAAK6N,UAAL,EAAJ,EAAuB;UACrBjO,WAAW,IAAI,IAAf;QACD;;QACD,KAAKkO,cAAL,CAAoBlO,WAApB;MACD,CAr4BM;MAs4BPxB,WAt4BO,yBAs4BO;QACZ,IAAI,KAAKR,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;UAC7C,IAAI,KAAK3N,KAAL,IAAc,KAAKA,KAAL,CAAWmQ,aAAX,EAAlB,EAA8C;YAC5C,KAAK,IAAIhF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnL,KAAL,CAAW8L,UAAX,CAAsBxF,MAA1C,EAAkD6E,CAAC,EAAnD,EAAuD;cACrD,IAAMiF,SAAS,GAAG,KAAKpQ,KAAL,CAAW8L,UAAX,CAAsBgB,IAAtB,CAA2B3B,CAA3B,CAAlB;;cACA,IACEiF,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACiK,YAA5B,IACC,CAACyC,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACU,SAA5B,IAAyCgM,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACW,kBAAtE,KACC+L,SAAS,CAACjD,SAAV,CAAoBC,IAApB,OAA+B,EAHnC,EAIE;gBACA,OAAO,IAAP;cACD;YACF;UACF;QACF;;QACD,OAAO,KAAP;MACD,CAt5BM;MAw5BPpI,IAx5BO,gBAw5BFqL,KAx5BE,EAw5BK;QACV,IAAI,CAAC,KAAKtG,QAAL,EAAD,IAAoBsG,KAAxB,EAA+B;UAC7B,KAAK/M,QAAL,GAAsB,IAAtB;UACA,IAAMrD,QAAQ,GAAG,KAAK4G,WAAL,EAAjB;UACA5G,QAAQ,CAACqQ,cAAT,CAAwB,QAAxB,EAAkC,KAAKC,eAAvC,EAAwD,IAAxD;UACAtQ,QAAQ,CAACuQ,SAAT;;UACA,IAAI,KAAKxQ,KAAT,EAAgB;YACd,IAAI,KAAKA,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;cAC7C;cACA,IAAM9N,aAAa,GAAG,KAAKmG,gBAAL,EAAtB;cACA,KAAK5C,kBAAL,GAA0B,EAA1B;;cACA,KAAK,IAAI+H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnL,KAAL,CAAW8L,UAAX,CAAsBxF,MAA1C,EAAkD6E,CAAC,EAAnD,EAAuD;gBACrD,IAAMiF,SAAS,GAAG,KAAKpQ,KAAL,CAAW8L,UAAX,CAAsBgB,IAAtB,CAA2B3B,CAA3B,CAAlB;;gBACA,IAAMsF,kBAAkB,GAAG5Q,aAAa,CAAC6Q,8BAAd,CAA6CN,SAAS,CAAC9P,QAAvD,CAA3B;;gBAEA,IAAImQ,kBAAJ,EAAwB;kBACtB,IAAIL,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACiK,YAAhC,EAA8C;oBAC5C,IAAM5G,KAAK,GAAG,IAAIrG,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,CACZsP,SADY,EAEZK,kBAFY,EAGZ,KAAK9I,SAAL,EAHY,EAIZ,IAJY,CAAd;oBAOA1H,QAAQ,CAACQ,IAAT,CAAcsG,KAAd;;oBACA,KAAK3D,kBAAL,CAAwB3C,IAAxB,CAA6B2P,SAAS,CAAC9P,QAAvC;kBACD,CAVD,MAUO,IAAI8P,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACU,SAA5B,IAAyCgM,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACW,kBAAzE,EAA6F;oBAClG,IAAI+L,SAAS,CAACjD,SAAV,CAAoBC,IAApB,EAAJ,EAAgC;sBAC9B;sBACA,IAAMrG,MAAK,GAAG,IAAIrG,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,CAAmCsP,SAAnC,EAA8CvQ,aAA9C,EAA6D,KAAK8H,SAAL,EAA7D,EAA+E,IAA/E,CAAd;;sBAEA,IAAI9H,aAAa,CAACwK,OAAd,EAAJ,EAA6B;wBAC3B;wBACAtD,MAAK,CAAC4J,WAAN,CAAkB,IAAlB;sBACD;;sBACD1Q,QAAQ,CAACQ,IAAT,CAAcsG,MAAd;;sBACA,IAAIqJ,SAAS,CAACjD,SAAV,CAAoBC,IAApB,EAAJ,EAAgC;wBAC9B,KAAKhK,kBAAL,CAAwB3C,IAAxB,CAA6B2P,SAAS,CAAC9P,QAAvC;sBACD;oBACF;kBACF,CAdM,MAcA,IAAI8P,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACC,YAAhC,EAA8C;oBACnD,IAAIyM,SAAS,CAACjD,SAAd,EAAyB;sBACvB,IAAMpG,OAAK,GAAG,IAAIrG,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,CACZsP,SADY,EAEZK,kBAFY,EAGZ,KAAK9I,SAAL,EAHY,EAIZ,IAJY,CAAd,CADuB,CAQvB;sBACA;;;sBACAZ,OAAK,CAAC4J,WAAN,CAAkB,KAAlB;;sBACA1Q,QAAQ,CAACQ,IAAT,CAAcsG,OAAd;;sBACA,IAAIqJ,SAAS,CAACjD,SAAV,CAAoBC,IAApB,EAAJ,EAAgC;wBAC9B,KAAKhK,kBAAL,CAAwB3C,IAAxB,CAA6B2P,SAAS,CAAC9P,QAAvC;sBACD;oBACF;kBACF;gBACF,CA3CD,MA2CO,IAAI8P,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACiK,YAAhC,EAA8C;kBACnD,IAAI9N,aAAa,CAAC0G,qBAAd,CAAoC6J,SAAS,CAAC9P,QAA9C,CAAJ,EAA6D;oBAC3D;oBACA,IAAMyG,OAAK,GAAG,IAAIrG,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,CAAmCsP,SAAnC,EAA8CvQ,aAA9C,EAA6D,KAAK8H,SAAL,EAA7D,EAA+E,IAA/E,CAAd;;oBAEA,IAAI9H,aAAa,CAACwK,OAAd,EAAJ,EAA6B;sBAC3B;sBACAtD,OAAK,CAAC4J,WAAN,CAAkB,IAAlB;oBACD;;oBACD1Q,QAAQ,CAACQ,IAAT,CAAcsG,OAAd;;oBACA,KAAK3D,kBAAL,CAAwB3C,IAAxB,CAA6B2P,SAAS,CAAC9P,QAAvC;kBACD,CAVD,MAUO;oBACL;oBACA,KAAKkM,QAAL,CAAc,KAAd;oBACA,IAAIoE,GAAG,GAAG,KAAKC,iBAAL,EAAV;oBACAD,GAAG,GACD,CAACA,GAAG,GAAGA,GAAG,GAAG,OAAT,GAAmB,EAAvB,IACA9R,EAAE,CAACkJ,MAAH,CAAUC,OAAV,CAAkBC,EAAlB,CAAqB,mCAArB,EAA0DkI,SAAS,CAAC9P,QAApE,CAFF;oBAIA,KAAK+M,iBAAL,CAAuBuD,GAAvB;oBACA,KAAKpE,QAAL,CAAc,KAAd;kBACD;gBACF;cACF,CA1E4C,CA4E7C;;;cACA,KAAKpL,kBAAL,CAAwB0P,KAAxB;;cACA,KAAK,IAAI3F,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKnL,KAAL,CAAW4M,UAAX,CAAsBtG,MAA1C,EAAkD6E,GAAC,EAAnD,EAAuD;gBACrD,IAAM0B,IAAI,GAAG,KAAK7M,KAAL,CAAW4M,UAAX,CAAsBE,IAAtB,CAA2B3B,GAA3B,CAAb;;gBACA,KAAK/J,kBAAL,CAAwB2P,GAAxB,CAA4BlE,IAAI,CAAC/K,IAAjC,EAAuC+K,IAAI,CAAC9I,KAA5C;cACD;YACF,CAlFD,MAkFO,IACL,KAAK/D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IACA,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAD7B,IAEA,KAAK3D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAHxB,EAIL;cACA,KAAKhB,mBAAL,GAA2B,KAAKrD,KAAL,CAAWmN,SAAtC;;cACA,IAAI;gBACF,KAAKe,cAAL,CAAoB,KAAKlO,KAAL,CAAWmN,SAA/B;cACD,CAFD,CAEE,OAAO6D,CAAP,EAAU;gBACV,KAAKC,oBAAL,CAA0BD,CAAC,CAACE,QAAF,EAA1B;cACD;YACF;UACF;;UACD,KAAKC,SAAL,CAAe,IAAf;UACAlR,QAAQ,CAACmR,WAAT,CAAqB,QAArB,EAA+B,KAAKb,eAApC,EAAqD,IAArD;;UACA,KAAKc,6BAAL;;UACA,KAAK/N,QAAL,GAAsB,KAAtB;QACD;MACF,CAngCM;MAqgCP2N,oBArgCO,gCAqgCcK,QArgCd,EAqgCwB;QAC7B,IAAIA,QAAJ,EAAc;UACZ,IAAM1K,QAAQ,GAAG,KAAKiK,iBAAL,EAAjB;UACA,KAAKxD,iBAAL,CAAuBzG,QAAQ,GAAGA,QAAQ,GAAG,OAAX,GAAqB0K,QAAxB,GAAmCA,QAAlE;QACD;MACF,CA1gCM;MA4gCPzJ,cA5gCO,4BA4gCU;QACf,IAAI,KAAKqE,OAAT,EAAkB;UAChB,KAAKqF,WAAL,CAAiB,IAAjB;QACD,CAFD,MAEO,IAAI,KAAKvR,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;UACpD,IAAM6D,OAAO,GAAG,KAAKpQ,kBAArB;;UACA,IAAMqQ,iBAAiB,GAAG,KAAKC,kBAAL,EAA1B;;UACA,IAAI,KAAK1R,KAAL,CAAW4M,UAAX,CAAsBtG,MAAtB,KAAiCkL,OAAO,CAACG,IAA7C,EAAmD;YACjD,KAAKJ,WAAL,CAAiB,IAAjB;UACD,CAFD,MAEO,IACLE,iBAAiB,CAACnL,MAAlB,KAA6B,KAAKlD,kBAAL,CAAwBkD,MAArD,IACAmL,iBAAiB,CAACjE,IAAlB,CAAuB,EAAvB,MAA+B,KAAKpK,kBAAL,CAAwBoK,IAAxB,CAA6B,EAA7B,CAF1B,EAGL;YACA,KAAK+D,WAAL,CAAiB,IAAjB;UACD,CALM,MAKA;YACL,IAAI1O,QAAQ,GAAG,KAAf;;YADK,2CAEsB2O,OAFtB;YAAA;;YAAA;cAEL,oDAAoC;gBAAA;gBAAA,IAAxBhH,GAAwB;gBAAA,IAAnBzG,KAAmB;;gBAClC,IAAI,CAAC,KAAK/D,KAAL,CAAWkN,YAAX,CAAwB1C,GAAxB,CAAD,IAAiC,KAAKxK,KAAL,CAAWuF,YAAX,CAAwBiF,GAAxB,MAAiCzG,KAAtE,EAA6E;kBAC3ElB,QAAQ,GAAG,IAAX;kBACA;gBACD;cACF;YAPI;cAAA;YAAA;cAAA;YAAA;;YAQL,KAAK0O,WAAL,CAAiB1O,QAAjB;UACD;QACF,CApBM,MAoBA,IACL,KAAK7C,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IACA,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAD7B,IAEA,KAAK3D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAHxB,EAIL;UACA,KAAKkN,WAAL,CAAiB,KAAKlO,mBAAL,KAA6B,KAAKuK,cAAL,EAA9C;QACD;;QACD,IAAM9N,MAAM,GAAG,KAAK6H,SAAL,EAAf;;QACA,IAAI7H,MAAJ,EAAY;UACVA,MAAM,CAAC+H,cAAP,CAAsB,IAAtB;QACD;MACF,CA9iCM;;MAgjCP;AACJ;AACA;AACA;AACA;MACI+J,mBArjCO,iCAqjCe;QACpB,IAAI,KAAK5R,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAA7B,IAA6C,KAAK5D,QAAL,EAAjD,EAAkE;UAChE,IAAM0H,iBAAiB,GAAG,KAAKC,kBAAL,EAA1B;;UACA,OACE,KAAKzB,UAAL,OACCwB,iBAAiB,CAACnL,MAAlB,KAA6B,KAAKlD,kBAAL,CAAwBkD,MAArD,IACCmL,iBAAiB,CAACjE,IAAlB,CAAuB,EAAvB,MAA+B,KAAKpK,kBAAL,CAAwBoK,IAAxB,CAA6B,EAA7B,CAFjC,CADF;QAKD;;QACD,OAAO,KAAP;MACD,CA/jCM;MAikCPqE,OAjkCO,qBAikCG;QACR,IAAI,KAAK7R,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAAjC,EAA+C;UAC7C;UACA,KAAKvM,kBAAL,CAAwB0P,KAAxB;;UACA,KAAK,IAAI3F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnL,KAAL,CAAW4M,UAAX,CAAsBtG,MAA1C,EAAkD6E,CAAC,EAAnD,EAAuD;YACrD,IAAM0B,IAAI,GAAG,KAAK7M,KAAL,CAAW4M,UAAX,CAAsBE,IAAtB,CAA2B3B,CAA3B,CAAb;;YACA,KAAK/J,kBAAL,CAAwB2P,GAAxB,CAA4BlE,IAAI,CAAC/K,IAAjC,EAAuC+K,IAAI,CAAC9I,KAA5C;UACD;;UACD,KAAKX,kBAAL,GAA0B,KAAKsO,kBAAL,EAA1B;QACD,CARD,MAQO,IACL,KAAK1R,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACU,SAA7B,IACA,KAAKpE,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACC,YAD7B,IAEA,KAAK3D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAHxB,EAIL;UACA,KAAKhB,mBAAL,GAA2B,KAAKrD,KAAL,CAAWmN,SAAtC;QACD;;QACD,IAAI,KAAKjB,OAAT,EAAkB;UAChB,OAAO,KAAKA,OAAZ;QACD;;QACD,KAAKqF,WAAL,CAAiB,KAAjB;MACD,CArlCM;MAulCP9E,SAvlCO,uBAulCK;QACV,OAAO,KAAKzM,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACiK,YAApC;MACD,CAzlCM;MA2lCP+D,kBA3lCO,gCA2lCc;QACnB,IAAMI,KAAK,GAAG,EAAd;QACA,IAAIhQ,IAAJ;QACA,IAAIiQ,MAAJ;;QACA,KAAK,IAAI5G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnL,KAAL,CAAW8L,UAAX,CAAsBxF,MAA1C,EAAkD6E,CAAC,EAAnD,EAAuD;UACrD,IAAMiF,SAAS,GAAG,KAAKpQ,KAAL,CAAW8L,UAAX,CAAsBgB,IAAtB,CAA2B3B,CAA3B,CAAlB;;UACA,IAAIiF,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACiK,YAAhC,EAA8C;YAC5CoE,MAAM,GAAG,KAAK/R,KAAL,CAAWG,QAApB;YACA2B,IAAI,GAAGiQ,MAAM,GAAGA,MAAM,CAAC5J,cAAP,EAAH,GAA6BiI,SAAS,CAAC9P,QAApD;YACAwR,KAAK,CAACrR,IAAN,CAAWqB,IAAX;UACD,CAJD,MAIO,IACL,CAACsO,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACU,SAA5B,IACCgM,SAAS,CAAC3M,QAAV,KAAuBC,IAAI,CAACC,YAD7B,IAEC,KAAK3D,KAAL,CAAWyD,QAAX,KAAwBC,IAAI,CAACW,kBAF/B,KAGA+L,SAAS,CAACjD,SAAV,CAAoBC,IAApB,EAJK,EAKL;YACA0E,KAAK,CAACrR,IAAN,CAAW2P,SAAS,CAAC9P,QAArB;UACD;QACF;;QACD,OAAOwR,KAAP;MACD,CA/mCM;MAinCPvB,eAjnCO,2BAinCSyB,EAjnCT,EAinCa;QAClB;QACA,KAAKzO,QAAL,GAAyB,IAAzB,CAFkB,CAGlB;;QACA,KAAK8N,6BAAL;MACD,CAtnCM;MAwnCPA,6BAxnCO,2CAwnCyB;QAC9B,IAAI,KAAK7K,UAAL,EAAJ,EAAuB;UACrB,KAAKK,WAAL,GAAmBmD,OAAnB,CAA2B,UAAAjD,KAAK,EAAI;YAClC,IAAIA,KAAK,CAAC0F,SAAN,MAAqB1F,KAAK,CAAC5C,UAAN,EAAzB,EAA6C;cAC3C4C,KAAK,CAAChB,eAAN;YACD;UACF,CAJD;QAKD;MACF,CAhoCM;MAkoCPkM,aAloCO,2BAkoCS;QACd,IAAI,KAAK3M,OAAL,OAAmB,UAAvB,EAAmC;UACjC,OAAO,EAAP;QACD;;QACD,IAAM4M,MAAM,GAAG,KAAKlM,gBAAL,GAAwBwJ,SAAxB,EAAf;QACA,IAAM2C,OAAO,GAAGD,MAAM,CAACE,cAAP,EAAhB;QACA,IAAIC,OAAO,GAAG,IAAd;;QACA,OAAOA,OAAO,IAAI,CAACF,OAAO,CAACjL,QAAR,CAAiBmL,OAAO,CAAC/M,OAAR,EAAjB,CAAnB,EAAwD;UACtD+M,OAAO,GAAGA,OAAO,CAAC3L,SAAR,EAAV;QACD;;QACD,IAAI,CAAC2L,OAAL,EAAc;UACZ,OAAO,EAAP;QACD;;QACD,IAAI,KAAK7O,UAAL,KAAoB,MAAxB,EAAgC;UAC9B,IAAI6O,OAAO,CAAC/M,OAAR,OAAsB,QAA1B,EAAoC;YAClC,OAAO,WAAWxG,EAAE,CAACwT,IAAH,CAAQC,MAAR,CAAeC,OAAf,CAAuBH,OAAO,CAAC9M,YAAR,CAAqB,UAArB,CAAvB,CAAlB;UACD;;UAED,IAAMkN,GAAG,GAAG,EAAZ;UACA,IAAIC,CAAC,GAAGL,OAAR;;UACA,OAAOK,CAAP,EAAU;YACR,IAAM3S,MAAM,GAAG2S,CAAC,CAAChM,SAAF,EAAf;;YACA,IAAI3G,MAAM,CAACuF,OAAP,OAAqB,OAAzB,EAAkC;cAChCmN,GAAG,CAAC1G,OAAJ,CAAY,IAAZ;cACA;YACD;;YACD,IAAI4G,EAAE,GAAG5S,MAAM,CACZ8G,WADM,GAENC,MAFM,CAEC,UAAAC,KAAK;cAAA,OAAIA,KAAK,CAACO,OAAN,GAAgB7D,QAAhB,KAA6BC,IAAI,CAACiK,YAAlC,IAAkD5G,KAAK,CAACzB,OAAN,OAAoB,QAA1E;YAAA,CAFN,EAGNE,OAHM,CAGEkN,CAHF,CAAT;YAIAD,GAAG,CAAC1G,OAAJ,CAAY4G,EAAZ;YACAD,CAAC,GAAG3S,MAAJ;UACD;;UACD,IAAIsS,OAAO,CAAC/M,OAAR,OAAsB,MAA1B,EAAkC;YAChC;YACAmN,GAAG,CAAChS,IAAJ,CAAS,EAAT;UACD;;UACD,OAAO,MAAMgS,GAAG,CAACjF,IAAJ,CAAS,GAAT,CAAb;QACD,CAzBD,MAyBO,IAAI,KAAKhK,UAAL,KAAoB,MAAxB,EAAgC;UACrC,IAAIkP,EAAC,GAAGL,OAAO,CAAC/K,OAAR,EAAR;;UACA,IAAII,KAAK,GAAG,CAAZ;UACA,IAAIkL,QAAQ,GAAG,EAAf;;UACA,OAAOF,EAAP,EAAU;YACR,IAAM3S,OAAM,GAAG2S,EAAC,CAACG,aAAjB;;YACA,IAAIH,EAAC,CAACxF,YAAF,CAAe,IAAf,CAAJ,EAA0B;cACxB0F,QAAQ,GAAGA,QAAQ,cAAOF,EAAC,CAACnN,YAAF,CAAe,IAAf,CAAP,gBAAiCqN,QAAjC,eAAkDF,EAAC,CAACnN,YAAF,CAAe,IAAf,CAAlD,CAAnB;cACA;YACD,CAHD,MAGO,IAAImN,EAAC,CAACpS,QAAF,CAAWwS,WAAX,OAA6B,QAAjC,EAA2C;cAChDF,QAAQ,GAAGA,QAAQ,sBAAeA,QAAf,IAA4B,QAA/C;cACA;YACD,CAHM,MAGA;cACLlL,KAAK,GAAGxH,KAAK,CAAC+J,SAAN,CAAgBzE,OAAhB,CAAwB2E,IAAxB,CAA6BpK,OAAM,CAACE,QAApC,EAA8CyS,EAA9C,IAAmD,CAA3D;cACAE,QAAQ,GAAGA,QAAQ,yBAAkBlL,KAAlB,iBAA8BkL,QAA9B,0BAA0DlL,KAA1D,MAAnB;YACD;;YACDgL,EAAC,GAAG3S,OAAJ;UACD;;UACD,OAAO6S,QAAP;QACD;;QACD,OAAO,EAAP;MACD,CA7rCM;MA+rCP;MACAG,KAhsCO,mBAgsCC;QACN,OAAO,IAAIrS,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAAxB,CAAmC,KAAKd,KAAL,CAAWgT,SAAX,CAAqB,IAArB,CAAnC,EAA+D,KAAKhN,gBAAL,EAA/D,EAAwF,KAAK2B,SAAL,EAAxF,CAAP;MACD;IAlsCM,CA1MuC;;IA+4ChD;AACF;AACA;AACA;AACA;IACEsL,QAp5CgD,sBAo5CrC;MACT,KAAKjT,KAAL,GAAa,IAAb;MACA,KAAKkD,OAAL,GAAe,IAAf;MACA,KAAK9B,kBAAL,GAA0B,IAA1B;MACA,KAAKmC,QAAL,GAAyB,IAAzB;;MACA,KAAK2P,eAAL,CAAqB,gBAArB;IACD;EA15C+C,CAAlD;EAtBAxS,EAAE,CAACC,EAAH,CAAMC,OAAN,CAAcC,KAAd,CAAoBC,UAApB,CAA+B7B,aAA/B,GAA+CA,aAA/C"
}