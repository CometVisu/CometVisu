{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "model",
    "schema",
    "Base",
    "construct",
    "node",
    "constructor",
    "call",
    "parse",
    "properties",
    "type",
    "refine",
    "init",
    "members",
    "Group",
    "superclass",
    "prototype",
    "getSchema",
    "group",
    "getNode",
    "hasAttribute",
    "getReferencedNode",
    "getAttribute",
    "grouping",
    "querySelector",
    "_subGroupings",
    "push",
    "Choice",
    "Sequence",
    "getAllowedElements",
    "getAllowedElementsSorting",
    "sortNumber",
    "namesWithSorting",
    "allowedElements",
    "Object",
    "keys",
    "forEach",
    "name",
    "item",
    "mySortNumber",
    "undefined",
    "getType",
    "getName",
    "subSortedElements",
    "assign",
    "getRegex",
    "separator",
    "nocapture",
    "_regexCache",
    "regexString",
    "bounds",
    "getBounds",
    "min",
    "max",
    "Number",
    "POSITIVE_INFINITY",
    "getBoundsForElementName",
    "childName"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/model/schema/Group.js"
  ],
  "sourcesContent": [
    "/* Group.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * a single group.\n * may be recursive\n */\nqx.Class.define('cv.ui.manager.model.schema.Group', {\n  extend: cv.ui.manager.model.schema.Base,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(node, schema) {\n    super(node, schema);\n    this.parse();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    type: {\n      refine: true,\n      init: 'group'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * parse a list of elements in this group.\n     * Group is allowed (all|choice|sequence)? as per the definition.\n     * We do all of those (except for 'all')\n     */\n    parse() {\n      super.parse();\n      const schema = this.getSchema();\n\n      let group = this.getNode();\n      if (group.hasAttribute('ref')) {\n        // if this is a reference, unravel it.\n        group = schema.getReferencedNode('group', group.getAttribute('ref'));\n      }\n\n      // we are allowed choice and sequence, but only ONE AT ALL is allowed\n      let grouping = group.querySelector(':scope > choice');\n      if (grouping) {\n        this._subGroupings.push(new cv.ui.manager.model.schema.Choice(grouping, schema));\n      } else {\n        grouping = group.querySelector(':scope > sequence');\n        if (grouping) {\n          this._subGroupings.push(new cv.ui.manager.model.schema.Sequence(grouping, schema));\n        }\n      }\n    },\n\n    /**\n     * get the elements allowed for this group\n     *\n     * @return  object      list of allowed elements, key is the name\n     */\n    getAllowedElements() {\n      // we have non of ourselves, so we return what the child says\n      return this._subGroupings[0].getAllowedElements();\n    },\n\n    /**\n     * get the sorting of the allowed elements.\n     * For a group, all elements have the same sorting, so they will all have the\n     * same sort number\n     *\n     * Warning: this only works if any element can have only ONE position in the parent.\n     *\n     * @param   sortNumber  integer the sort number of a parent (only used when recursive)\n     * @return  object              list of allowed elements, with their sort-number as value\n     */\n    getAllowedElementsSorting(sortNumber) {\n      const namesWithSorting = {};\n      const allowedElements = this.getAllowedElements();\n      Object.keys(allowedElements).forEach(name => {\n        const item = allowedElements[name];\n        let mySortNumber = 'x'; // for a group, sortNumber is always the same\n        if (sortNumber !== undefined) {\n          mySortNumber = sortNumber + '.' + mySortNumber;\n        }\n\n        if (item.getType() === 'element') {\n          namesWithSorting[item.getName()] = mySortNumber;\n        } else {\n          // go recursive\n          const subSortedElements = item.getAllowedElementsSorting(mySortNumber);\n          Object.assign(namesWithSorting, subSortedElements);\n        }\n      }, this);\n      return namesWithSorting;\n    },\n\n    /**\n     * get a regex (string) describing this choice\n     *\n     * @param   separator   string  the string used to separate different elements, e.g. ';'\n     * @param   nocapture   bool    when set to true non capturing groups are used\n     * @return  string  regex\n     */\n    getRegex(separator, nocapture) {\n      if (this._regexCache !== null) {\n        // use the cache if primed\n        return this._regexCache;\n      }\n\n      let regexString = '(';\n\n      // collect the regex for each and every grouping we might have;\n      // 'each and every' means 'the only ONE'\n      this._subGroupings.forEach(grouping => {\n        regexString = '(';\n        if (nocapture) {\n          regexString += '?:';\n        }\n        regexString += grouping.getRegex(separator, nocapture) + ')';\n      });\n\n      // append bounds to regex\n      regexString += '{';\n      const bounds = this.getBounds();\n      regexString += bounds.min === undefined ? 1 : bounds.min;\n      regexString += ',';\n      if (bounds.max !== Number.POSITIVE_INFINITY) {\n        regexString += bounds.max === undefined ? 1 : bounds.max;\n      }\n      regexString += '}';\n\n      // fill the cache\n      this._regexCache = regexString;\n\n      // thats about it.\n      return regexString;\n    },\n\n    getBoundsForElementName(childName) {\n      // we are a group. we have no saying of ourselves\n      // (@FIXME: by definition we do, but we do not take that into account)\n      return this._subGroupings[0].getBoundsForElementName(childName);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}