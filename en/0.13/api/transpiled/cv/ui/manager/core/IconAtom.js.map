{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/core/IconAtom.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "construct",
    "label",
    "icon",
    "_fontIconRegex",
    "addListener",
    "_onTap",
    "properties",
    "appearance",
    "refine",
    "init",
    "model",
    "check",
    "apply",
    "members",
    "_iconChildControlName",
    "navigator",
    "clipboard",
    "writeText",
    "getLabel",
    "cv",
    "manager",
    "snackbar",
    "Controller",
    "info",
    "locale",
    "Manager",
    "tr",
    "_applyLabel",
    "value",
    "old",
    "setToolTipText",
    "_applyModel",
    "name",
    "setLabel",
    "setIcon",
    "resetLabel",
    "resetIcon",
    "_applyIcon",
    "test",
    "getChildControl",
    "setValue",
    "_excludeChildControl",
    "setSource",
    "_handleIcon",
    "getIcon",
    "getShow",
    "_showChildControl",
    "_createChildControlImpl",
    "id",
    "control",
    "Image",
    "set",
    "anonymous",
    "scale",
    "maxHeight",
    "_addAt",
    "exclude",
    "Label",
    "rich",
    "height",
    "width",
    "core",
    "IconAtom"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* IconAtom.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Atom with cv.ui.manager.viewer.SvgIcon instead of a qx.ui.basic.Image\n */\nqx.Class.define('cv.ui.manager.core.IconAtom', {\n  extend: qx.ui.basic.Atom,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (label, icon) {\n    this.base(arguments, label, icon);\n    this._fontIconRegex = /^\\<i.*class=\".*(knxuf-|ri-)([^\\s\"]+).*\".*\\<\\/i\\>$/;\n    this.addListener('tap', this._onTap, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n      refine: true,\n      init: 'cv-icon'\n    },\n\n    model: {\n      check: 'Array',\n      apply: '_applyModel'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _fontIconRegex: null,\n    _iconChildControlName: null,\n\n    _onTap() {\n      navigator.clipboard.writeText(this.getLabel());\n      cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('Icon name has been copied to clipboard'));\n    },\n\n    // property apply\n    _applyLabel(value, old) {\n      this.base(arguments, value, old);\n      this.setToolTipText(value);\n    },\n\n    _applyModel: function (value) {\n      if (value) {\n        const [name, icon] = value;\n        this.setLabel(name);\n        this.setIcon(icon);\n      } else {\n        this.resetLabel();\n        this.resetIcon();\n      }\n    },\n\n    _applyIcon(value, old) {\n      if (value) {\n        if (this._fontIconRegex.test(value)) {\n          this._iconChildControlName = 'htmlIcon';\n          const icon = this.getChildControl(this._iconChildControlName, true);\n          if (icon) {\n            icon.setValue(value);\n          }\n          this._excludeChildControl('icon');\n        } else {\n          this._iconChildControlName = 'icon';\n          const icon = this.getChildControl(this._iconChildControlName, true);\n          if (icon) {\n            icon.setSource(value);\n          }\n          this._excludeChildControl('htmlIcon');\n        }\n      } else {\n        this._iconChildControlName = 'icon';\n        this._excludeChildControl('htmlIcon');\n      }\n      this._handleIcon();\n    },\n\n    _handleIcon() {\n      if (this.getIcon() === null || this.getShow() === 'label') {\n        this._excludeChildControl(this._iconChildControlName);\n      } else {\n        this._showChildControl(this._iconChildControlName);\n      }\n    },\n\n    // overridden\n    _createChildControlImpl : function(id) {\n      let control;\n\n      switch (id) {\n         case 'icon':\n           control = new cv.ui.manager.basic.Image(this.getIcon());\n           control.set({\n             anonymous: true,\n             scale: true,\n             maxHeight: 64\n           });\n           this._addAt(control, 0);\n           if (this.getIcon() === null || this.getShow() === 'label') {\n             control.exclude();\n           }\n           break;\n\n        case 'htmlIcon':\n          control = new qx.ui.basic.Label(this.getIcon());\n          control.set({\n            anonymous: true,\n            rich: true,\n            height: 64,\n            width: 64\n          });\n          this._addAt(control, 0);\n          if (this.getIcon() === null || this.getShow() === 'label') {\n            control.exclude();\n          }\n       }\n\n       return control || this.base(arguments, id);\n    }\n  }\n});\n"
  ]
}