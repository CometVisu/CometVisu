{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "cv",
    "manager",
    "upload",
    "MDragUpload",
    "construct",
    "rootFolder",
    "_setLayout",
    "layout",
    "Grow",
    "setRootFolder",
    "event",
    "message",
    "Bus",
    "subscribe",
    "_onEnableTree",
    "statics",
    "MIMETYPES",
    "getMimetypeFromSuffix",
    "suffix",
    "Object",
    "keys",
    "find",
    "mime",
    "isAccepted",
    "mimetype",
    "prototype",
    "hasOwnProperty",
    "call",
    "events",
    "changeSelection",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "selectedNode",
    "nullable",
    "members",
    "__selectionTimer",
    "__doubleTapWaitingTime",
    "__ignoreSelectionChange",
    "_replacementManager",
    "reload",
    "tree",
    "getChildControl",
    "openPaths",
    "getOpenNodes",
    "map",
    "node",
    "getFullPath",
    "root",
    "getModel",
    "refresh",
    "setOpen",
    "forEach",
    "openPath",
    "path",
    "_applyRootFolder",
    "value",
    "setModel",
    "load",
    "setHideRoot",
    "_applySelectedNode",
    "contextMenu",
    "contextmenu",
    "GlobalFileItem",
    "getInstance",
    "configure",
    "setContextMenu",
    "setSelection",
    "getSelection",
    "replace",
    "_onDblTapTreeSelection",
    "sel",
    "getSelectedNode",
    "stop",
    "getType",
    "fireDataEvent",
    "mode",
    "_onChangeTreeSelection",
    "length",
    "getItem",
    "setSelectedNode",
    "Timer",
    "once",
    "resetContextMenu",
    "resetSelectedNode",
    "_onFsItemRightClick",
    "ev",
    "widget",
    "getTarget",
    "VirtualFsItem",
    "setEnabled",
    "getData",
    "_createChildControlImpl",
    "id",
    "control",
    "VirtualTree",
    "set",
    "selectionMode",
    "minWidth",
    "showTopLevelOpenCloseIcons",
    "model",
    "Preferences",
    "bind",
    "converter",
    "setDelegate",
    "createItem",
    "item",
    "addListener",
    "bindItem",
    "controller",
    "index",
    "bindProperty",
    "bindPropertyReverse",
    "_add",
    "_createMDragUploadChildControlImpl",
    "destruct",
    "unsubscribe",
    "_disposeObjects",
    "FileSystem"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/tree/FileSystem.js"
  ],
  "sourcesContent": [
    "/* FileSystem.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows filesystem content in a tree.\n */\nqx.Class.define('cv.ui.manager.tree.FileSystem', {\n  extend: qx.ui.core.Widget,\n  include: [cv.ui.manager.upload.MDragUpload],\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(rootFolder) {\n    super();\n    this._setLayout(new qx.ui.layout.Grow());\n    this.setRootFolder(rootFolder);\n\n    qx.event.message.Bus.subscribe('cv.manager.tree.enable', this._onEnableTree, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    MIMETYPES: {\n      'text/xml': 'xml',\n      'application/xml': 'xml',\n      'text/javascript': 'js',\n      'application/x-httpd-php': 'php',\n      'text/css': 'css',\n      'image/png': 'png',\n      'image/svg+xml': 'svg',\n      'text/plain': ''\n    },\n\n    getMimetypeFromSuffix(suffix) {\n      return Object.keys(this.MIMETYPES).find(function (mime) {\n        return this.MIMETYPES[mime] === suffix;\n      }, this);\n    },\n\n    isAccepted(mimetype) {\n      return Object.prototype.hasOwnProperty.call(this.MIMETYPES, mimetype);\n    }\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    changeSelection: 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    appearance: {\n       refine: true,\n       init: 'cv-filesystem'\n    },\n\n    rootFolder: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applyRootFolder'\n    },\n\n    selectedNode: {\n      check: 'cv.ui.manager.model.FileItem',\n      apply: '_applySelectedNode',\n      nullable: true\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __selectionTimer: null,\n    __doubleTapWaitingTime: 500,\n    __ignoreSelectionChange: false,\n    _replacementManager: null,\n\n    reload() {\n      const tree = this.getChildControl('tree');\n      const openPaths = tree.getOpenNodes().map(function (node) {\n        return node.getFullPath();\n      });\n      const root = tree.getModel();\n      root.reload(function () {\n        this.getChildControl('tree').refresh();\n        root.setOpen(true);\n        openPaths.forEach(this.openPath, this);\n      }, this);\n    },\n\n    openPath(path) {\n      const root = this.getChildControl('tree').getModel();\n      if (path === '.') {\n        root.setOpen(true);\n      } else {\n        root.setOpen(true);\n        root.openPath(path);\n      }\n    },\n\n    refresh() {\n      this.getChildControl('tree').refresh();\n    },\n\n    _applyRootFolder(value) {\n      if (value) {\n        const tree = this.getChildControl('tree');\n        tree.setModel(value);\n        value.load(function () {\n          tree.setHideRoot(true);\n        }, this);\n      }\n    },\n\n    _applySelectedNode(value) {\n      const tree = this.getChildControl('tree');\n      const contextMenu = cv.ui.manager.contextmenu.GlobalFileItem.getInstance();\n      contextMenu.configure(value);\n      if (value) {\n        tree.setContextMenu(contextMenu);\n      }\n    },\n\n    setSelection(node) {\n      this.getChildControl('tree').getSelection().replace([node]);\n    },\n\n    _onDblTapTreeSelection() {\n      const sel = this.getSelectedNode();\n      if (sel) {\n        if (this.__selectionTimer) {\n          this.__selectionTimer.stop();\n        }\n        // only files show a different behaviour when double-clicked (permanent vs. preview mode)\n        if (sel.getType() === 'file') {\n          this.fireDataEvent('changeSelection', {\n            node: sel,\n            mode: 'dbltap'\n          });\n        }\n      }\n    },\n\n    _onChangeTreeSelection() {\n      if (this.__selectionTimer) {\n        this.__selectionTimer.stop();\n      }\n      if (this.__ignoreSelectionChange === true) {\n        return;\n      }\n      const tree = this.getChildControl('tree');\n      const sel = tree.getSelection();\n      if (sel.length > 0) {\n        const node = sel.getItem(0);\n        this.setSelectedNode(node);\n        // wait for double tap\n        if (node.getType() === 'file') {\n          this.__selectionTimer = qx.event.Timer.once(\n            function () {\n              this.fireDataEvent('changeSelection', {\n                node: this.getSelectedNode(),\n                mode: 'tap'\n              });\n\n              this.__selectionTimer = null;\n            },\n            this,\n            this.__doubleTapWaitingTime\n          );\n        } else {\n          this.fireDataEvent('changeSelection', {\n            node: node,\n            mode: 'tap'\n          });\n        }\n      } else {\n        tree.resetContextMenu();\n        this.resetSelectedNode();\n      }\n    },\n\n    _onFsItemRightClick(ev) {\n      const tree = this.getChildControl('tree');\n      const widget = ev.getTarget();\n      if (widget instanceof cv.ui.manager.tree.VirtualFsItem) {\n        const node = widget.getModel();\n        if (node) {\n          this.__ignoreSelectionChange = true;\n          tree.getSelection().replace([node]);\n          this.setSelectedNode(node);\n          this.fireDataEvent('changeSelection', {\n            node: node,\n            mode: 'contextmenu'\n          });\n\n          this.__ignoreSelectionChange = false;\n        }\n      }\n    },\n\n    /**\n     * Handle message on 'cv.manager.tree.enable' topic.\n     * @param ev {Event}\n     * @protected\n     */\n    _onEnableTree(ev) {\n      this.getChildControl('tree').setEnabled(ev.getData());\n    },\n\n    // overridden\n    _createChildControlImpl(id) {\n      let control;\n\n      switch (id) {\n        case 'tree':\n          control = new qx.ui.tree.VirtualTree(null, 'name', 'children');\n          control.set({\n            selectionMode: 'single',\n            minWidth: 250,\n            showTopLevelOpenCloseIcons: true\n          });\n\n          cv.ui.manager.model.Preferences.getInstance().bind('quickPreview', control, 'openMode', {\n            converter(value) {\n              return value ? 'tap' : 'dbltap';\n            }\n          });\n\n          control.setDelegate({\n            createItem: function () {\n              const item = new cv.ui.manager.tree.VirtualFsItem();\n              item.addListener('dbltap', this._onDblTapTreeSelection, this);\n              item.addListener('contextmenu', this._onFsItemRightClick, this);\n              return item;\n            }.bind(this),\n\n            // Bind properties from the item to the tree-widget and vice versa\n            bindItem(controller, item, index) {\n              controller.bindProperty('', 'model', null, item, index);\n              controller.bindPropertyReverse('open', 'open', null, item, index);\n              controller.bindProperty('open', 'open', null, item, index);\n              controller.bindProperty('readable', 'enabled', null, item, index);\n              controller.bindProperty('icon', 'icon', null, item, index);\n              controller.bindProperty('editing', 'editing', null, item, index);\n            }\n          });\n\n          control.getSelection().addListener('change', this._onChangeTreeSelection, this);\n          this._add(control);\n          break;\n      }\n\n      if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n\n      return control || super._createChildControlImpl(id);\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.event.message.Bus.unsubscribe('cv.manager.tree.enable', this._onEnableTree, this);\n\n    this._disposeObjects('_dateFormat', '_timeFormat', '_replacementManager');\n  }\n});\n"
  ],
  "mappings": "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"
}