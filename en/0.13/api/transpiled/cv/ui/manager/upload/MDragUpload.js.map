{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_this",
    "setDroppable",
    "getBounds",
    "_applyStartDragListeners",
    "addListenerOnce",
    "layout",
    "_getLayout",
    "ui",
    "Grow",
    "Canvas",
    "addListener",
    "__syncBounds",
    "properties",
    "uploadMode",
    "check",
    "init",
    "apply",
    "uploadHint",
    "statics",
    "onHtml5Drop",
    "ev",
    "preventDefault",
    "getFiles",
    "forEach",
    "uploadFile",
    "file",
    "replaceFile",
    "isConfig",
    "cv",
    "manager",
    "model",
    "FileItem",
    "isConfigFile",
    "name",
    "folder",
    "tree",
    "FileSystem",
    "isAccepted",
    "type",
    "set",
    "upload",
    "UploadMgr",
    "setFolder",
    "hasDroppableFile",
    "length",
    "files",
    "i",
    "l",
    "dataTransfer",
    "items",
    "item",
    "kind",
    "getAsFile",
    "push",
    "members",
    "__hasEmptyInfo",
    "_boundOnStop",
    "bounds",
    "getChildControl",
    "setUserBounds",
    "left",
    "top",
    "width",
    "height",
    "_createMDragUploadChildControlImpl",
    "id",
    "control",
    "container",
    "Composite",
    "setZIndex",
    "exclude",
    "_add",
    "edge",
    "bind",
    "setBackgroundColor",
    "dropBox",
    "basic",
    "Atom",
    "getUploadHint",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "iconPosition",
    "rich",
    "center",
    "setWrap",
    "setAnonymous",
    "add",
    "_onStopDragging",
    "setUploadMode",
    "document",
    "removeEventListener",
    "_this2",
    "getContentElement",
    "getDomElement",
    "addEventListener",
    "_isDroppable",
    "MDragUpload",
    "_applyDragListeners",
    "_this3",
    "element",
    "lid",
    "getData",
    "removeListenerById",
    "uploadable",
    "_onDrop",
    "__applyUploadMode",
    "value",
    "show",
    "hasChildControl",
    "isVisible"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/upload/MDragUpload.js"
  ],
  "sourcesContent": [
    "/* MDragUpload.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Add upload via drag&drop feature to this widget. The including widget must have a\n * \"upload-dropbox\" childcontrol or add\n *  <pre class=\"javascript\">\n *   if (!control) {\n        control = this._createMDragUploadChildControlImpl(id);\n      }\n *   </pre>\n *   to their own _createChildControlImpl method\n */\nqx.Mixin.define('cv.ui.manager.upload.MDragUpload', {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct() {\n    this.setDroppable(true);\n    if (this.getBounds()) {\n      this._applyStartDragListeners();\n    } else {\n      this.addListenerOnce('appear', () => {\n        this._applyStartDragListeners();\n      });\n    }\n    const layout = this._getLayout();\n    if (!(layout instanceof qx.ui.layout.Grow) && !(layout instanceof qx.ui.layout.Canvas)) {\n      this.addListener('resize', this.__syncBounds, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties: {\n    uploadMode: {\n      check: 'Boolean',\n      init: false,\n      apply: '__applyUploadMode'\n    },\n\n    uploadHint: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    /**\n     * Handles HTML5 drop events (dropping external files on dom element)\n     * @param ev {Event}\n     */\n    onHtml5Drop(ev) {\n      ev.preventDefault();\n      this.getFiles(ev).forEach(this.uploadFile, this);\n    },\n\n    /**\n     * Uploads the dropped file to the correct folder:\n     * - config files to the resources/config folder\n     * - accepted media files to the resources/config/media folder\n     * @param file {File}\n     * @param replaceFile {cv.ui.manager.model.FileItem?} optional, if set this files content gets replaced with the uploaded ones\n     */\n    uploadFile(file, replaceFile) {\n      const isConfig = cv.ui.manager.model.FileItem.isConfigFile(file.name);\n\n      let folder;\n      if (isConfig) {\n        // upload to root folder\n        folder = new cv.ui.manager.model.FileItem('.');\n      } else if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n        // upload to media folder\n        folder = new cv.ui.manager.model.FileItem('media');\n      }\n      if (folder) {\n        folder.set({\n          type: 'dir'\n        });\n\n        const manager = new cv.ui.manager.upload.UploadMgr();\n        if (replaceFile) {\n          manager.replaceFile(file, replaceFile);\n        } else {\n          manager.setFolder(folder);\n          manager.uploadFile(file);\n        }\n      }\n    },\n\n    hasDroppableFile(ev) {\n      return this.getFiles(ev).length > 0;\n    },\n\n    /**\n     * Extracts acceptable files from event\n     * @param ev {Event}\n     * @private\n     */\n    getFiles(ev) {\n      const files = [];\n      let i;\n      let l;\n      let file;\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (i = 0, l = ev.dataTransfer.items.length; i < l; i++) {\n          // If dropped items aren't files, reject them\n          const item = ev.dataTransfer.items[i];\n          if (item.kind === 'file' && cv.ui.manager.tree.FileSystem.isAccepted(item.type)) {\n            file = item.getAsFile();\n            files.push(file);\n          }\n        }\n      } else {\n        for (i = 0, l = ev.dataTransfer.files.length; i < l; i++) {\n          file = ev.dataTransfer.files[i];\n          if (cv.ui.manager.tree.FileSystem.isAccepted(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      return files;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __hasEmptyInfo: null,\n    _boundOnStop: null,\n\n    __syncBounds() {\n      const bounds = this.getBounds();\n      this.getChildControl('upload-overlay').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n\n      this.getChildControl('upload-dropbox').setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n    },\n\n    // overridden\n    _createMDragUploadChildControlImpl(id) {\n      let control;\n      const bounds = this.getBounds();\n      const layout = this._getLayout();\n\n      switch (id) {\n        case 'upload-overlay':\n          control = new qx.ui.container.Composite();\n          control.setZIndex(1000000);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, { edge: 0 });\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          this.getChildControl('upload-dropbox').bind('visibility', control, 'visibility');\n\n          break;\n\n        case 'upload-dropbox': {\n          control = new qx.ui.container.Composite(new qx.ui.layout.Grow());\n          control.setBackgroundColor('rgba(32, 32, 32, 0.9)');\n          control.setZIndex(1000);\n          const dropBox = new qx.ui.basic.Atom(this.getUploadHint(), cv.theme.dark.Images.getIcon('upload', 32));\n\n          dropBox.set({\n            iconPosition: 'top',\n            rich: true,\n            center: true\n          });\n\n          // control.bind('width', dropBox, 'maxWidth');\n          dropBox.getChildControl('label').setWrap(true);\n          control.setAnonymous(true);\n          control.add(dropBox);\n          control.exclude();\n          if (layout instanceof qx.ui.layout.Canvas) {\n            this._add(control, { edge: 0 });\n          } else if (!(this._getLayout() instanceof qx.ui.layout.Grow) && bounds) {\n            control.setUserBounds(bounds.left, bounds.top, bounds.width, bounds.height);\n          }\n          this._add(control);\n          break;\n        }\n      }\n\n      return control;\n    },\n\n    _onStopDragging(ev) {\n      ev.preventDefault();\n      this.setUploadMode(false);\n      document.removeEventListener('dragend', this._boundOnStop, false);\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyStartDragListeners() {\n      // add the start listener to this widget\n      this.getContentElement()\n        .getDomElement()\n        .addEventListener(\n          'dragenter',\n          function (ev) {\n            // ev.preventDefault();\n            if (this._isDroppable) {\n              if (this._isDroppable(ev.dataTransfer.items)) {\n                // we have something to drop\n                this.setUploadMode(true);\n              }\n            } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n              // we have something to drop\n              this.setUploadMode(true);\n            }\n          }.bind(this),\n          false\n        );\n\n      if (this.getChildControl('upload-overlay').getBounds()) {\n        this._applyDragListeners();\n      } else {\n        this.getChildControl('upload-overlay').addListenerOnce('appear', () => {\n          this._applyDragListeners();\n        });\n      }\n    },\n\n    /**\n     * Apply dragover/-leave listeners to the dashboard to recognize File uploads via Drag&Drop\n     */\n    _applyDragListeners() {\n      const element = this.getChildControl('upload-overlay').getContentElement().getDomElement();\n      if (!element) {\n        const lid = this.getChildControl('upload-overlay').addListener('visibility', ev => {\n          if (ev.getData() === 'visible') {\n            this._applyDragListeners();\n            this.getChildControl('upload-overlay').removeListenerById(lid);\n          }\n        });\n\n        return;\n      }\n      element.addEventListener(\n        'dragexit',\n        function () {\n          this.setUploadMode(false);\n        }.bind(this),\n        false\n      );\n\n      element.addEventListener(\n        'dragover',\n        function (ev) {\n          ev.preventDefault();\n          let uploadable = false;\n          if (this._isDroppable) {\n            uploadable = this._isDroppable(ev.dataTransfer.items);\n          } else if (cv.ui.manager.upload.MDragUpload.hasDroppableFile(ev)) {\n            uploadable = true;\n          }\n          this.setUploadMode(uploadable);\n        }.bind(this),\n        false\n      );\n\n      this._boundOnStop = this._onStopDragging.bind(this);\n\n      element.addEventListener('dragleave', this._boundOnStop, false);\n      element.addEventListener(\n        'dragend',\n        function () {\n          this.setUploadMode(false);\n        }.bind(this),\n        false\n      );\n\n      document.addEventListener('dragend', this._boundOnStop, false);\n\n      if (this._onDrop) {\n        element.addEventListener('drop', this._onDrop.bind(this), false);\n      } else {\n        element.addEventListener(\n          'drop',\n          function (ev) {\n            cv.ui.manager.upload.MDragUpload.onHtml5Drop(ev);\n            this._onStopDragging(ev);\n          }.bind(this),\n          false\n        );\n      }\n    },\n\n    // property apply\n    __applyUploadMode(value) {\n      if (value === true) {\n        this.getChildControl('upload-dropbox').show();\n        if (this.hasChildControl('empty-info') && this.getChildControl('empty-info').isVisible()) {\n          this.getChildControl('empty-info').exclude();\n          this.__hasEmptyInfo = true;\n        } else {\n          this.__hasEmptyInfo = false;\n        }\n      } else {\n        this.getChildControl('upload-dropbox').exclude();\n        if (this.__hasEmptyInfo === true) {\n          this.getChildControl('empty-info').show();\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}