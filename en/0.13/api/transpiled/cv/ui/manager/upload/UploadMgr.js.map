{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "UploadMgr",
    "construct",
    "widget",
    "uploadUrl",
    "_init",
    "statics",
    "LAST_ID",
    "properties",
    "multiple",
    "refine",
    "init",
    "folder",
    "check",
    "nullable",
    "apply",
    "filename",
    "force",
    "members",
    "_updateUploadUrl",
    "getFolder",
    "path",
    "getFullPath",
    "url",
    "cv",
    "io",
    "rest",
    "Client",
    "getBaseUrl",
    "setUploadUrl",
    "addListener",
    "evt",
    "file",
    "getData",
    "getFilename",
    "setParam",
    "isForce",
    "progressListenerId",
    "getTarget",
    "uploadedSize",
    "debug",
    "getSize",
    "Math",
    "round",
    "stateListenerId",
    "state",
    "getStatus",
    "ui",
    "manager",
    "snackbar",
    "Controller",
    "error",
    "locale",
    "Manager",
    "tr",
    "qxl",
    "dialog",
    "Dialog",
    "confirm",
    "confirmed",
    "forceUpload",
    "err",
    "getResponse",
    "lang",
    "Json",
    "parse",
    "message",
    "e",
    "info",
    "event",
    "Bus",
    "dispatchByName",
    "action",
    "removeListenerById",
    "_getUniqueFileId",
    "setForce",
    "newFile",
    "File",
    "getBrowserObject",
    "getId",
    "set",
    "size",
    "uploadWidget",
    "getUploadWidget",
    "getUploadHandler",
    "_addFile",
    "getAutoUpload",
    "beginUploads",
    "uploadFile",
    "bomFile",
    "id",
    "name",
    "fileName",
    "fileSize",
    "setSize",
    "setUploadWidget",
    "UploadButton",
    "replaceFile",
    "replacedFile",
    "setFolder",
    "getParent",
    "getName"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/upload/UploadMgr.js"
  ],
  "sourcesContent": [
    "/* UploadMgr.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Extend {com.zenesis.qx.upload.UploadMgr} to allow files to e uploaded via HTML5 drop\n */\nqx.Class.define('cv.ui.manager.upload.UploadMgr', {\n  extend: com.zenesis.qx.upload.UploadMgr,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(widget, uploadUrl) {\n    super(widget, uploadUrl);\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    LAST_ID: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    multiple: {\n      refine: true,\n      init: false\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_updateUploadUrl'\n    },\n\n    filename: {\n      check: 'String',\n      nullable: true\n    },\n\n    force: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  members: {\n    _updateUploadUrl() {\n      const folder = this.getFolder();\n      const path = folder ? folder.getFullPath() : '.';\n      const url = cv.io.rest.Client.getBaseUrl() + '/fs?type=file&path=' + path;\n      this.setUploadUrl(url);\n    },\n\n    _init() {\n      this.addListener('addFile', evt => {\n        const file = evt.getData();\n        const filename = this.getFilename();\n        if (filename) {\n          file.setParam('filename', filename);\n        }\n        if (this.isForce()) {\n          file.setParam('force', true);\n        }\n        const progressListenerId = file.addListener('changeProgress', evt => {\n          const file = evt.getTarget();\n          const uploadedSize = evt.getData();\n\n          this.debug(\n            'Upload ' +\n              file.getFilename() +\n              ': ' +\n              uploadedSize +\n              ' / ' +\n              file.getSize() +\n              ' - ' +\n              Math.round((uploadedSize / file.getSize()) * 100) +\n              '%'\n          );\n        });\n\n        const stateListenerId = file.addListener('changeState', evt => {\n          const state = evt.getData();\n          const file = evt.getTarget();\n\n          if (state === 'uploading') {\n            this.debug(file.getFilename() + ' (Uploading...)');\n          } else if (state === 'uploaded') {\n            this.debug(file.getFilename() + ' (Complete)');\n            if (file.getStatus() !== 200) {\n              // something went wrong\n              switch (file.getStatus()) {\n                case 406:\n                  if (this.isForce()) {\n                    cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Replacing the file failed.'));\n                  } else {\n                    qxl.dialog.Dialog.confirm(\n                      qx.locale.Manager.tr('This file already exists, do you want to replace it?'),\n\n                      function (confirmed) {\n                        if (confirmed) {\n                          this.forceUpload(file);\n                        }\n                      },\n                      this,\n                      qx.locale.Manager.tr('File already exists')\n                    );\n                  }\n                  break;\n\n                case 403:\n                  cv.ui.manager.snackbar.Controller.error(\n                    qx.locale.Manager.tr('Uploading this file is not allowed here.')\n                  );\n\n                  break;\n\n                default: {\n                  let err = file.getResponse();\n                  try {\n                    err = qx.lang.Json.parse(err).message;\n                  } catch (e) {}\n                  this.error(err);\n                  cv.ui.manager.snackbar.Controller.error(\n                    qx.locale.Manager.tr('File upload stopped with an error: %1', err)\n                  );\n\n                  break;\n                }\n              }\n            } else {\n              cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been uploaded'));\n\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'uploaded',\n                path: this.getFolder().getFullPath() + '/' + file.getFilename()\n              });\n            }\n          } else if (state === 'cancelled') {\n            this.debug(file.getFilename() + ' (Cancelled)');\n          }\n          // Remove the listeners\n          if (state === 'uploaded' || state === 'cancelled') {\n            file.removeListenerById(progressListenerId);\n            file.removeListenerById(stateListenerId);\n          }\n        });\n      });\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @return {Number}\n     */\n    _getUniqueFileId() {\n      return ++cv.ui.manager.upload.UploadMgr.LAST_ID;\n    },\n\n    /**\n     * Re-upload a file in forced mode\n     * @param file {com.zenesis.qx.upload.File}\n     */\n    forceUpload(file) {\n      this.setForce(true);\n      const newFile = new com.zenesis.qx.upload.File(file.getBrowserObject(), file.getFilename(), file.getId());\n\n      newFile.set({\n        size: file.getSize(),\n        uploadWidget: file.getUploadWidget()\n      });\n\n      newFile.setParam('force', true);\n      this.getUploadHandler()._addFile(newFile);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Upload file directly to the backend\n     *\n     * @param bomFile {File}\n     */\n    uploadFile(bomFile) {\n      const id = 'upload-' + this._getUniqueFileId();\n      const filename = typeof bomFile.name !== 'undefined' ? bomFile.name : bomFile.fileName;\n      const file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      const fileSize = typeof bomFile.size !== 'undefined' ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      if (this.isForce()) {\n        file.setParam('force', true);\n      }\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Replace content of existing file with the upload\n     * @param bomFile {File}\n     * @param replacedFile {cv.ui.manager.model.FileItem}\n     */\n    replaceFile(bomFile, replacedFile) {\n      this.setFolder(replacedFile.getParent());\n      const id = 'upload-' + this._getUniqueFileId();\n      const filename = replacedFile.getName();\n      const file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      file.setParam('force', true);\n      file.setParam('filename', filename);\n      const fileSize = typeof bomFile.size !== 'undefined' ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}