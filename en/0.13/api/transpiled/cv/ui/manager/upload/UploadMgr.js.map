{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "UploadMgr",
    "construct",
    "widget",
    "uploadUrl",
    "constructor",
    "call",
    "_init",
    "statics",
    "LAST_ID",
    "properties",
    "multiple",
    "refine",
    "init",
    "folder",
    "check",
    "nullable",
    "apply",
    "filename",
    "force",
    "members",
    "_updateUploadUrl",
    "getFolder",
    "path",
    "getFullPath",
    "url",
    "cv",
    "io",
    "rest",
    "Client",
    "getBaseUrl",
    "setUploadUrl",
    "_this",
    "addListener",
    "evt",
    "file",
    "getData",
    "getFilename",
    "setParam",
    "isForce",
    "progressListenerId",
    "getTarget",
    "uploadedSize",
    "debug",
    "getSize",
    "Math",
    "round",
    "stateListenerId",
    "state",
    "getStatus",
    "ui",
    "manager",
    "snackbar",
    "Controller",
    "error",
    "locale",
    "Manager",
    "tr",
    "qxl",
    "dialog",
    "Dialog",
    "confirm",
    "confirmed",
    "forceUpload",
    "err",
    "getResponse",
    "lang",
    "Json",
    "parse",
    "message",
    "e",
    "info",
    "event",
    "Bus",
    "dispatchByName",
    "action",
    "removeListenerById",
    "_getUniqueFileId",
    "setForce",
    "newFile",
    "File",
    "getBrowserObject",
    "getId",
    "set",
    "size",
    "uploadWidget",
    "getUploadWidget",
    "getUploadHandler",
    "_addFile",
    "getAutoUpload",
    "beginUploads",
    "uploadFile",
    "bomFile",
    "id",
    "name",
    "fileName",
    "fileSize",
    "setSize",
    "setUploadWidget",
    "UploadButton",
    "replaceFile",
    "replacedFile",
    "setFolder",
    "getParent",
    "getName"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/upload/UploadMgr.js"
  ],
  "sourcesContent": [
    "/* UploadMgr.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Extend {com.zenesis.qx.upload.UploadMgr} to allow files to e uploaded via HTML5 drop\n */\nqx.Class.define('cv.ui.manager.upload.UploadMgr', {\n  extend: com.zenesis.qx.upload.UploadMgr,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(widget, uploadUrl) {\n    super(widget, uploadUrl);\n    this._init();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    LAST_ID: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    multiple: {\n      refine: true,\n      init: false\n    },\n\n    folder: {\n      check: 'cv.ui.manager.model.FileItem',\n      nullable: true,\n      apply: '_updateUploadUrl'\n    },\n\n    filename: {\n      check: 'String',\n      nullable: true\n    },\n\n    force: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  members: {\n    _updateUploadUrl() {\n      const folder = this.getFolder();\n      const path = folder ? folder.getFullPath() : '.';\n      const url = cv.io.rest.Client.getBaseUrl() + '/fs?type=file&path=' + path;\n      this.setUploadUrl(url);\n    },\n\n    _init() {\n      this.addListener('addFile', evt => {\n        const file = evt.getData();\n        const filename = this.getFilename();\n        if (filename) {\n          file.setParam('filename', filename);\n        }\n        if (this.isForce()) {\n          file.setParam('force', true);\n        }\n        const progressListenerId = file.addListener('changeProgress', evt => {\n          const file = evt.getTarget();\n          const uploadedSize = evt.getData();\n\n          this.debug(\n            'Upload ' +\n              file.getFilename() +\n              ': ' +\n              uploadedSize +\n              ' / ' +\n              file.getSize() +\n              ' - ' +\n              Math.round((uploadedSize / file.getSize()) * 100) +\n              '%'\n          );\n        });\n\n        const stateListenerId = file.addListener('changeState', evt => {\n          const state = evt.getData();\n          const file = evt.getTarget();\n\n          if (state === 'uploading') {\n            this.debug(file.getFilename() + ' (Uploading...)');\n          } else if (state === 'uploaded') {\n            this.debug(file.getFilename() + ' (Complete)');\n            if (file.getStatus() !== 200) {\n              // something went wrong\n              switch (file.getStatus()) {\n                case 406:\n                  if (this.isForce()) {\n                    cv.ui.manager.snackbar.Controller.error(qx.locale.Manager.tr('Replacing the file failed.'));\n                  } else {\n                    qxl.dialog.Dialog.confirm(\n                      qx.locale.Manager.tr('This file already exists, do you want to replace it?'),\n\n                      function (confirmed) {\n                        if (confirmed) {\n                          this.forceUpload(file);\n                        }\n                      },\n                      this,\n                      qx.locale.Manager.tr('File already exists')\n                    );\n                  }\n                  break;\n\n                case 403:\n                  cv.ui.manager.snackbar.Controller.error(\n                    qx.locale.Manager.tr('Uploading this file is not allowed here.')\n                  );\n\n                  break;\n\n                default: {\n                  let err = file.getResponse();\n                  try {\n                    err = qx.lang.Json.parse(err).message;\n                  } catch (e) {}\n                  this.error(err);\n                  cv.ui.manager.snackbar.Controller.error(\n                    qx.locale.Manager.tr('File upload stopped with an error: %1', err)\n                  );\n\n                  break;\n                }\n              }\n            } else {\n              cv.ui.manager.snackbar.Controller.info(qx.locale.Manager.tr('File has been uploaded'));\n\n              qx.event.message.Bus.dispatchByName('cv.manager.file', {\n                action: 'uploaded',\n                path: this.getFolder().getFullPath() + '/' + file.getFilename()\n              });\n            }\n          } else if (state === 'cancelled') {\n            this.debug(file.getFilename() + ' (Cancelled)');\n          }\n          // Remove the listeners\n          if (state === 'uploaded' || state === 'cancelled') {\n            file.removeListenerById(progressListenerId);\n            file.removeListenerById(stateListenerId);\n          }\n        });\n      });\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @return {Number}\n     */\n    _getUniqueFileId() {\n      return ++cv.ui.manager.upload.UploadMgr.LAST_ID;\n    },\n\n    /**\n     * Re-upload a file in forced mode\n     * @param file {com.zenesis.qx.upload.File}\n     */\n    forceUpload(file) {\n      this.setForce(true);\n      const newFile = new com.zenesis.qx.upload.File(file.getBrowserObject(), file.getFilename(), file.getId());\n\n      newFile.set({\n        size: file.getSize(),\n        uploadWidget: file.getUploadWidget()\n      });\n\n      newFile.setParam('force', true);\n      this.getUploadHandler()._addFile(newFile);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Upload file directly to the backend\n     *\n     * @param bomFile {File}\n     */\n    uploadFile(bomFile) {\n      const id = 'upload-' + this._getUniqueFileId();\n      const filename = typeof bomFile.name !== 'undefined' ? bomFile.name : bomFile.fileName;\n      const file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      const fileSize = typeof bomFile.size !== 'undefined' ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      if (this.isForce()) {\n        file.setParam('force', true);\n      }\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    },\n\n    /**\n     * Replace content of existing file with the upload\n     * @param bomFile {File}\n     * @param replacedFile {cv.ui.manager.model.FileItem}\n     */\n    replaceFile(bomFile, replacedFile) {\n      this.setFolder(replacedFile.getParent());\n      const id = 'upload-' + this._getUniqueFileId();\n      const filename = replacedFile.getName();\n      const file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n      file.setParam('force', true);\n      file.setParam('filename', filename);\n      const fileSize = typeof bomFile.size !== 'undefined' ? bomFile.size : bomFile.fileSize;\n      file.setSize(fileSize);\n      file.setUploadWidget(new com.zenesis.qx.upload.UploadButton());\n\n      this.getUploadHandler()._addFile(file);\n      if (this.getAutoUpload()) {\n        this.getUploadHandler().beginUploads();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}