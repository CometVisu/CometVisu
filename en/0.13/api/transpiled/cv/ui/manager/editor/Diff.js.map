{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "Source",
    "construct",
    "constructor",
    "call",
    "statics",
    "COUNTER",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "properties",
    "originalContent",
    "check",
    "init",
    "apply",
    "modifiedContent",
    "editable",
    "members",
    "_applyEditable",
    "value",
    "_editor",
    "updateOptions",
    "readOnly",
    "_initWorker",
    "_draw",
    "window",
    "monaco",
    "load",
    "domElement",
    "getContentElement",
    "getDomElement",
    "addListenerOnce",
    "createDiffEditor",
    "folding",
    "autoIndent",
    "automaticLayout",
    "getEditable",
    "getFile",
    "_loadFile",
    "_applyContent",
    "original",
    "getOriginalContent",
    "modified",
    "getModifiedContent",
    "file",
    "originalFile",
    "model",
    "CompareFiles",
    "getOriginalFile",
    "modifiedFile",
    "getModifiedFile",
    "originalModel",
    "createModel",
    "_getLanguage",
    "_getDefaultModelOptions",
    "modifiedModel",
    "setModel",
    "getCurrentContent",
    "getModifiedEditor",
    "getValue",
    "clear",
    "getModel",
    "dispose",
    "save",
    "callback",
    "handlerOptions",
    "getHandlerOptions",
    "FileItem",
    "Object",
    "prototype",
    "hasOwnProperty",
    "upgradeVersion",
    "Diff",
    "superclass",
    "old",
    "event",
    "message",
    "Bus",
    "unsubscribe",
    "getBusTopic",
    "_onChange",
    "isWriteable",
    "snackbar",
    "Controller",
    "error",
    "getFullPath",
    "Main",
    "getInstance",
    "closeFile",
    "subscribe",
    "setEditable",
    "_client",
    "readSync",
    "path",
    "err",
    "res",
    "setOriginalContent",
    "_this$_upgradeConfig",
    "_upgradeConfig",
    "_this$_upgradeConfig2",
    "_slicedToArray",
    "upgradedContent",
    "changes",
    "qxl",
    "dialog",
    "Dialog",
    "dispatchByName",
    "setModifiedContent",
    "_convertToString",
    "changesText",
    "length",
    "join",
    "msg",
    "translate",
    "toString",
    "d",
    "confirm",
    "ok",
    "location",
    "hash",
    "reload",
    "set",
    "width",
    "Math",
    "min",
    "bom",
    "Viewport",
    "getWidth",
    "yesButtonLabel",
    "noButtonLabel",
    "setModified",
    "isSupported",
    "resetEditable",
    "resetOriginalContent",
    "resetModifiedContent"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Diff.js"
  ],
  "sourcesContent": [
    "/* Diff.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    // this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyEditable'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyEditable(value) {\n      if (this._editor) {\n        this._editor.updateOptions({ readOnly: !value });\n      }\n    },\n\n    // overridden, worker is a singleton and not usable for the diff editor\n    _initWorker() {},\n\n    _draw() {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        const domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: !this.getEditable()\n          });\n\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent() {\n      const original = this.getOriginalContent();\n      const modified = this.getModifiedContent();\n      if (original && modified) {\n        const file = this.getFile();\n        const originalFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getOriginalFile() : file;\n        const modifiedFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getModifiedFile() : file;\n        const originalModel = window.monaco.editor.createModel(original, this._getLanguage(originalFile));\n\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        const modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(modifiedFile));\n\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    getCurrentContent() {\n      return this._editor.getModifiedEditor().getValue();\n    },\n\n    clear() {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    save(callback) {\n      const handlerOptions = this.getHandlerOptions();\n      if (\n        this.getFile() instanceof cv.ui.manager.model.FileItem &&\n        Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') &&\n        handlerOptions.upgradeVersion === true\n      ) {\n        super.save(callback, 'ignore');\n      }\n    },\n\n    _loadFile(file, old) {\n      if (old && old instanceof cv.ui.manager.model.FileItem) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (this._editor) {\n        const handlerOptions = this.getHandlerOptions();\n        if (\n          file &&\n          file instanceof cv.ui.manager.model.FileItem &&\n          Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') &&\n          handlerOptions.upgradeVersion === true\n        ) {\n          if (!file.isWriteable()) {\n            cv.ui.manager.snackbar.Controller.error(\n              this.tr('\"%1\" is not writable. Upgrading not possible.', this.getFile().getFullPath())\n            );\n\n            cv.ui.manager.Main.getInstance().closeFile(file);\n            return;\n          }\n          qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n\n          this.setEditable(file.isWriteable());\n          this._client.readSync(\n            { path: file.getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setOriginalContent(res);\n                const [err, upgradedContent, changes] = this._upgradeConfig(res);\n                if (err) {\n                  qxl.dialog.Dialog.error(err);\n                  qx.event.message.Bus.dispatchByName('cv.manager.action.close');\n                } else {\n                  this.setModifiedContent(this._convertToString(upgradedContent));\n\n                  let changesText =\n                    changes.length > 0\n                      ? '<div>' +\n                        qx.locale.Manager.tr('The following changes have been made') +\n                        '</div>' +\n                        '<ul><li>' +\n                        changes.join('</li><li>') +\n                        '</li></ul>' +\n                        '<div>' +\n                        qx.locale.Manager.tr(\n                          'You can check the changes in the editor. The left side shows the content before the upgrade and the right side shows the content after the upgrade.'\n                        ) +\n                        '</div>'\n                      : '<div><strong>' + qx.locale.Manager.tr('No changes have been made') + '</strong></div>';\n\n                  let msg =\n                    '<h3>' +\n                    qx.locale.Manager.tr('Config file has been upgraded to the current library version.')\n                      .translate()\n                      .toString() +\n                    '</h3>' +\n                    changesText +\n                    '<div>' +\n                    qx.locale.Manager.tr('Click \"Apply\" if you want to save the changes and reload the browser.') +\n                    '</div>' +\n                    '<div>' +\n                    qx.locale.Manager.tr(\n                      'Click \"Check\" if you want to check the changes. You have to save the changes and reload your browser yourself in this case.'\n                    ) +\n                    '</div>';\n                  const d = qxl.dialog.Dialog.confirm(\n                    msg,\n                    function (ok) {\n                      if (ok) {\n                        this.save(function () {\n                          // remove #manager to avoid reloading into manager\n                          window.location.hash = '';\n                          window.location.reload();\n                        });\n                      }\n                    },\n                    this,\n                    qx.locale.Manager.tr('Upgrade successful')\n                  );\n\n                  d.set({\n                    width: Math.min(qx.bom.Viewport.getWidth(), 600),\n                    yesButtonLabel: qx.locale.Manager.tr('Apply'),\n                    noButtonLabel: qx.locale.Manager.tr('Check')\n                  });\n\n                  file.setModified(true);\n                }\n              }\n            },\n            this\n          );\n        } else if (\n          file &&\n          file instanceof cv.ui.manager.model.CompareFiles &&\n          this.isSupported(file.getModifiedFile())\n        ) {\n          this.resetEditable();\n          this._client.readSync(\n            { path: file.getModifiedFile().getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setModifiedContent(res);\n              }\n            },\n            this\n          );\n\n          this._client.readSync(\n            { path: file.getOriginalFile().getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setOriginalContent(res);\n              }\n            },\n            this\n          );\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}