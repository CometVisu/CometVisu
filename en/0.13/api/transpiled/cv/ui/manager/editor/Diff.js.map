{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Diff.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "Source",
    "construct",
    "statics",
    "COUNTER",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "properties",
    "originalContent",
    "check",
    "init",
    "apply",
    "modifiedContent",
    "editable",
    "members",
    "_applyEditable",
    "value",
    "_editor",
    "updateOptions",
    "readOnly",
    "_initWorker",
    "_draw",
    "window",
    "monaco",
    "load",
    "domElement",
    "getContentElement",
    "getDomElement",
    "addListenerOnce",
    "createDiffEditor",
    "folding",
    "autoIndent",
    "automaticLayout",
    "getEditable",
    "getFile",
    "_loadFile",
    "_applyContent",
    "original",
    "getOriginalContent",
    "modified",
    "getModifiedContent",
    "file",
    "originalFile",
    "model",
    "CompareFiles",
    "getOriginalFile",
    "modifiedFile",
    "getModifiedFile",
    "originalModel",
    "createModel",
    "_getLanguage",
    "_getDefaultModelOptions",
    "modifiedModel",
    "setModel",
    "getCurrentContent",
    "getModifiedEditor",
    "getValue",
    "clear",
    "getModel",
    "dispose",
    "save",
    "callback",
    "handlerOptions",
    "getHandlerOptions",
    "FileItem",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "upgradeVersion",
    "old",
    "event",
    "message",
    "Bus",
    "unsubscribe",
    "getBusTopic",
    "_onChange",
    "isWriteable",
    "snackbar",
    "Controller",
    "error",
    "getFullPath",
    "Main",
    "getInstance",
    "closeFile",
    "subscribe",
    "setEditable",
    "_client",
    "readSync",
    "path",
    "err",
    "res",
    "setOriginalContent",
    "_upgradeConfig",
    "upgradedContent",
    "changes",
    "qxl",
    "dialog",
    "Dialog",
    "dispatchByName",
    "setModifiedContent",
    "_convertToString",
    "changesText",
    "length",
    "join",
    "msg",
    "translate",
    "toString",
    "d",
    "confirm",
    "ok",
    "location",
    "hash",
    "reload",
    "set",
    "width",
    "Math",
    "min",
    "bom",
    "Viewport",
    "getWidth",
    "yesButtonLabel",
    "noButtonLabel",
    "setModified",
    "isSupported",
    "resetEditable",
    "resetOriginalContent",
    "resetModifiedContent",
    "Diff"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Diff.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    // this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyEditable'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyEditable: function(value) {\n      if (this._editor) {\n        this._editor.updateOptions({readOnly: !value});\n      }\n    },\n\n    // overridden, worker is a singleton and not usable for the diff editor\n    _initWorker: function () {},\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        const domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: !this.getEditable()\n          });\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent: function () {\n      const original = this.getOriginalContent();\n      const modified = this.getModifiedContent();\n      if (original && modified) {\n        const file = this.getFile();\n        const originalFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getOriginalFile() : file;\n        const modifiedFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getModifiedFile() : file;\n        const originalModel = window.monaco.editor.createModel(original, this._getLanguage(originalFile));\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        const modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(modifiedFile));\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    getCurrentContent: function () {\n      return this._editor.getModifiedEditor().getValue();\n    },\n\n    clear: function () {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    save: function (callback) {\n      const handlerOptions = this.getHandlerOptions();\n      if (this.getFile() instanceof cv.ui.manager.model.FileItem && Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') && handlerOptions.upgradeVersion === true) {\n        this.base(arguments, callback, 'ignore');\n      }\n    },\n\n    _loadFile: function (file, old) {\n      if (old && old instanceof cv.ui.manager.model.FileItem) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (this._editor) {\n        const handlerOptions = this.getHandlerOptions();\n        if (file && file instanceof cv.ui.manager.model.FileItem && Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') && handlerOptions.upgradeVersion === true) {\n          if (!file.isWriteable()) {\n            cv.ui.manager.snackbar.Controller.error(this.tr('\"%1\" is not writable. Upgrading not possible.', this.getFile().getFullPath()));\n            cv.ui.manager.Main.getInstance().closeFile(file);\n            return;\n          }\n          qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n          this.setEditable(file.isWriteable());\n          this._client.readSync({path: file.getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setOriginalContent(res);\n              const [err, upgradedContent, changes] = this._upgradeConfig(res);\n              if (err) {\n                qxl.dialog.Dialog.error(err);\n                qx.event.message.Bus.dispatchByName('cv.manager.action.close');\n              } else {\n                this.setModifiedContent(this._convertToString(upgradedContent));\n                let changesText = changes.length > 0\n                  ? '<div>' + qx.locale.Manager.tr('The following changes have been made') + '</div>' +\n                  '<ul><li>'+changes.join('</li><li>')+ '</li></ul>' +\n                  '<div>' + qx.locale.Manager.tr('You can check the changes in the editor. The left side shows the content before the upgrade and the right side shows the content after the upgrade.') + '</div>'\n                  : '<div><strong>' + qx.locale.Manager.tr('No changes have been made') + '</strong></div>';\n\n                let msg = '<h3>' + qx.locale.Manager.tr('Config file has been upgraded to the current library version.').translate().toString() + '</h3>' + changesText +\n                  '<div>' + qx.locale.Manager.tr('Click \"Apply\" if you want to save the changes and reload the browser.') + '</div>' +\n                  '<div>' + qx.locale.Manager.tr('Click \"Check\" if you want to check the changes. You have to save the changes and reload your browser yourself in this case.') + '</div>';\n                const d = qxl.dialog.Dialog.confirm(msg, function (ok) {\n                  if (ok) {\n                    this.save(function () {\n                      // remove #manager to avoid reloading into manager\n                      window.location.hash = '';\n                      window.location.reload();\n                    });\n                  }\n                }, this, qx.locale.Manager.tr('Upgrade successful'));\n                d.set({\n                  width: Math.min(qx.bom.Viewport.getWidth(), 600),\n                  yesButtonLabel: qx.locale.Manager.tr('Apply'),\n                  noButtonLabel: qx.locale.Manager.tr('Check')\n                });\n                file.setModified(true);\n              }\n            }\n          }, this);\n        } else if (file && file instanceof cv.ui.manager.model.CompareFiles && this.isSupported(file.getModifiedFile())) {\n          this.resetEditable();\n          this._client.readSync({path: file.getModifiedFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setModifiedContent(res);\n            }\n          }, this);\n\n          this._client.readSync({path: file.getOriginalFile().getFullPath()}, function (err, res) {\n            if (err) {\n              cv.ui.manager.snackbar.Controller.error(err);\n            } else {\n              this.setOriginalContent(res);\n            }\n          }, this);\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n"
  ]
}