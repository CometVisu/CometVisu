{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "Source",
    "construct",
    "statics",
    "COUNTER",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "properties",
    "originalContent",
    "check",
    "init",
    "apply",
    "modifiedContent",
    "editable",
    "members",
    "_applyEditable",
    "value",
    "_editor",
    "updateOptions",
    "readOnly",
    "_initWorker",
    "_draw",
    "window",
    "monaco",
    "load",
    "domElement",
    "getContentElement",
    "getDomElement",
    "addListenerOnce",
    "createDiffEditor",
    "folding",
    "autoIndent",
    "automaticLayout",
    "getEditable",
    "getFile",
    "_loadFile",
    "_applyContent",
    "original",
    "getOriginalContent",
    "modified",
    "getModifiedContent",
    "file",
    "originalFile",
    "model",
    "CompareFiles",
    "getOriginalFile",
    "modifiedFile",
    "getModifiedFile",
    "originalModel",
    "createModel",
    "_getLanguage",
    "_getDefaultModelOptions",
    "modifiedModel",
    "setModel",
    "getCurrentContent",
    "getModifiedEditor",
    "getValue",
    "clear",
    "getModel",
    "dispose",
    "save",
    "callback",
    "handlerOptions",
    "getHandlerOptions",
    "FileItem",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "upgradeVersion",
    "old",
    "event",
    "message",
    "Bus",
    "unsubscribe",
    "getBusTopic",
    "_onChange",
    "isWriteable",
    "snackbar",
    "Controller",
    "error",
    "getFullPath",
    "Main",
    "getInstance",
    "closeFile",
    "subscribe",
    "setEditable",
    "_client",
    "readSync",
    "path",
    "err",
    "res",
    "setOriginalContent",
    "_upgradeConfig",
    "upgradedContent",
    "changes",
    "qxl",
    "dialog",
    "Dialog",
    "dispatchByName",
    "setModifiedContent",
    "_convertToString",
    "changesText",
    "length",
    "join",
    "msg",
    "translate",
    "toString",
    "d",
    "confirm",
    "ok",
    "location",
    "hash",
    "reload",
    "set",
    "width",
    "Math",
    "min",
    "bom",
    "Viewport",
    "getWidth",
    "yesButtonLabel",
    "noButtonLabel",
    "setModified",
    "isSupported",
    "resetEditable",
    "resetOriginalContent",
    "resetModifiedContent",
    "Diff"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Diff.js"
  ],
  "sourcesContent": [
    "/* Diff.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Monaco Texteditor for file content comparison\n */\nqx.Class.define('cv.ui.manager.editor.Diff', {\n  extend: cv.ui.manager.editor.Source,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    // this._handledActions = [];\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    COUNTER: 0,\n    TITLE: qx.locale.Manager.tr('File compare'),\n    ICON: cv.theme.dark.Images.getIcon('compare', 18)\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    originalContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    modifiedContent: {\n      check: 'String',\n      init: '',\n      apply: '_applyContent'\n    },\n\n    editable: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyEditable'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _applyEditable(value) {\n      if (this._editor) {\n        this._editor.updateOptions({ readOnly: !value });\n      }\n    },\n\n    // overridden, worker is a singleton and not usable for the diff editor\n    _initWorker() {},\n\n    _draw() {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        const domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.createDiffEditor(domElement, {\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            theme: 'vs-dark',\n            readOnly: !this.getEditable()\n          });\n\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n        }\n      }\n    },\n\n    _applyContent() {\n      const original = this.getOriginalContent();\n      const modified = this.getModifiedContent();\n      if (original && modified) {\n        const file = this.getFile();\n        const originalFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getOriginalFile() : file;\n        const modifiedFile = file instanceof cv.ui.manager.model.CompareFiles ? file.getModifiedFile() : file;\n        const originalModel = window.monaco.editor.createModel(original, this._getLanguage(originalFile));\n\n        originalModel.updateOptions(this._getDefaultModelOptions());\n        const modifiedModel = window.monaco.editor.createModel(modified, this._getLanguage(modifiedFile));\n\n        modifiedModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel({\n          original: originalModel,\n          modified: modifiedModel\n        });\n      }\n    },\n\n    getCurrentContent() {\n      return this._editor.getModifiedEditor().getValue();\n    },\n\n    clear() {\n      this._editor.getModel().original.dispose();\n      this._editor.getModel().modified.dispose();\n    },\n\n    save(callback) {\n      const handlerOptions = this.getHandlerOptions();\n      if (\n        this.getFile() instanceof cv.ui.manager.model.FileItem &&\n        Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') &&\n        handlerOptions.upgradeVersion === true\n      ) {\n        super.save(callback, 'ignore');\n      }\n    },\n\n    _loadFile(file, old) {\n      if (old && old instanceof cv.ui.manager.model.FileItem) {\n        qx.event.message.Bus.unsubscribe(old.getBusTopic(), this._onChange, this);\n      }\n      if (this._editor) {\n        const handlerOptions = this.getHandlerOptions();\n        if (\n          file &&\n          file instanceof cv.ui.manager.model.FileItem &&\n          Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') &&\n          handlerOptions.upgradeVersion === true\n        ) {\n          if (!file.isWriteable()) {\n            cv.ui.manager.snackbar.Controller.error(\n              this.tr('\"%1\" is not writable. Upgrading not possible.', this.getFile().getFullPath())\n            );\n\n            cv.ui.manager.Main.getInstance().closeFile(file);\n            return;\n          }\n          qx.event.message.Bus.subscribe(file.getBusTopic(), this._onChange, this);\n\n          this.setEditable(file.isWriteable());\n          this._client.readSync(\n            { path: file.getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setOriginalContent(res);\n                const [err, upgradedContent, changes] = this._upgradeConfig(res);\n                if (err) {\n                  qxl.dialog.Dialog.error(err);\n                  qx.event.message.Bus.dispatchByName('cv.manager.action.close');\n                } else {\n                  this.setModifiedContent(this._convertToString(upgradedContent));\n\n                  let changesText =\n                    changes.length > 0\n                      ? '<div>' +\n                        qx.locale.Manager.tr('The following changes have been made') +\n                        '</div>' +\n                        '<ul><li>' +\n                        changes.join('</li><li>') +\n                        '</li></ul>' +\n                        '<div>' +\n                        qx.locale.Manager.tr(\n                          'You can check the changes in the editor. The left side shows the content before the upgrade and the right side shows the content after the upgrade.'\n                        ) +\n                        '</div>'\n                      : '<div><strong>' + qx.locale.Manager.tr('No changes have been made') + '</strong></div>';\n\n                  let msg =\n                    '<h3>' +\n                    qx.locale.Manager.tr('Config file has been upgraded to the current library version.')\n                      .translate()\n                      .toString() +\n                    '</h3>' +\n                    changesText +\n                    '<div>' +\n                    qx.locale.Manager.tr('Click \"Apply\" if you want to save the changes and reload the browser.') +\n                    '</div>' +\n                    '<div>' +\n                    qx.locale.Manager.tr(\n                      'Click \"Check\" if you want to check the changes. You have to save the changes and reload your browser yourself in this case.'\n                    ) +\n                    '</div>';\n                  const d = qxl.dialog.Dialog.confirm(\n                    msg,\n                    function (ok) {\n                      if (ok) {\n                        this.save(function () {\n                          // remove #manager to avoid reloading into manager\n                          window.location.hash = '';\n                          window.location.reload();\n                        });\n                      }\n                    },\n                    this,\n                    qx.locale.Manager.tr('Upgrade successful')\n                  );\n\n                  d.set({\n                    width: Math.min(qx.bom.Viewport.getWidth(), 600),\n                    yesButtonLabel: qx.locale.Manager.tr('Apply'),\n                    noButtonLabel: qx.locale.Manager.tr('Check')\n                  });\n\n                  file.setModified(true);\n                }\n              }\n            },\n            this\n          );\n        } else if (\n          file &&\n          file instanceof cv.ui.manager.model.CompareFiles &&\n          this.isSupported(file.getModifiedFile())\n        ) {\n          this.resetEditable();\n          this._client.readSync(\n            { path: file.getModifiedFile().getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setModifiedContent(res);\n              }\n            },\n            this\n          );\n\n          this._client.readSync(\n            { path: file.getOriginalFile().getFullPath() },\n            function (err, res) {\n              if (err) {\n                cv.ui.manager.snackbar.Controller.error(err);\n              } else {\n                this.setOriginalContent(res);\n              }\n            },\n            this\n          );\n        } else {\n          this.resetOriginalContent();\n          this.resetModifiedContent();\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}