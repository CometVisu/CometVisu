{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/completion/Config.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "__elementCache",
    "__currentSchemas",
    "_dataProvider",
    "cv",
    "ui",
    "manager",
    "editor",
    "data",
    "Provider",
    "getInstance",
    "properties",
    "currentPath",
    "check",
    "nullable",
    "apply",
    "members",
    "_schemas",
    "__currentSchema",
    "__metaElementCache",
    "__rootTagName",
    "__metaTagName",
    "_getSuggestions",
    "_applyCurrentPath",
    "setStructure",
    "name",
    "loaded",
    "prototype",
    "hasOwnProperty",
    "call",
    "pure",
    "model",
    "Schema",
    "providePureCompletionItems",
    "tile",
    "provideTileCompletionItems",
    "getLastOpenedTag",
    "text",
    "tags",
    "match",
    "closingTags",
    "i",
    "length",
    "indexOf",
    "push",
    "substring",
    "tagPosition",
    "lastIndexOf",
    "tag",
    "closingBracketIdx",
    "openedTag",
    "contentSearch",
    "currentAttribute",
    "attrMatch",
    "exec",
    "filteredElementSearch",
    "test",
    "tagName",
    "isAttributeSearch",
    "isContentSearch",
    "splice",
    "findElements",
    "parent",
    "elementName",
    "maxDepth",
    "currentDepth",
    "inMeta",
    "cache",
    "getElementNode",
    "undefined",
    "allowedElements",
    "getAllowedElements",
    "element",
    "result",
    "isItemAvailable",
    "itemName",
    "maxOccurs",
    "items",
    "count",
    "parseInt",
    "getElementString",
    "indent",
    "prefix",
    "insertText",
    "getName",
    "allowedAttributes",
    "getAllowedAttributes",
    "getOwnPropertyNames",
    "forEach",
    "attr",
    "attribute",
    "isOptional",
    "getDefaultValue",
    "requiredElements",
    "getRequiredElements",
    "allowedContent",
    "getAllowedContent",
    "isContentAllowed",
    "_text",
    "_grouping",
    "trim",
    "children",
    "elemName",
    "elem",
    "getAvailableElements",
    "usedItems",
    "availableItems",
    "filter",
    "startsWith",
    "childElem",
    "getBounds",
    "max",
    "label",
    "kind",
    "window",
    "monaco",
    "languages",
    "CompletionItemKind",
    "Field",
    "detail",
    "getType",
    "documentation",
    "getDocumentation",
    "join",
    "getAvailableAttributes",
    "usedChildTags",
    "attrs",
    "Property",
    "getTypeString",
    "detectSchema",
    "completeText",
    "endsWith",
    "getProvider",
    "triggerCharacters",
    "provideCompletionItems",
    "position",
    "setCurrentPath",
    "uri",
    "toString",
    "getValue",
    "suggestions",
    "bind",
    "textUntilPosition",
    "getValueInRange",
    "startLineNumber",
    "startColumn",
    "endLineNumber",
    "lineNumber",
    "endColumn",
    "column",
    "metaEndPos",
    "textMeta",
    "mappingNames",
    "stylingNames",
    "templates",
    "map",
    "vmap",
    "regex",
    "templatesStart",
    "templatesString",
    "replace",
    "split",
    "rawTemplate",
    "nameMatch",
    "variables",
    "vregex",
    "lastOpenedTag",
    "openedTags",
    "openedAttributes",
    "parts",
    "shift",
    "cleanedText",
    "xmlDoc",
    "xml",
    "Document",
    "fromString",
    "lastChild",
    "lastElementChild",
    "lastFound",
    "toLowerCase",
    "attributes",
    "outerHTML",
    "nodeName",
    "entry",
    "res",
    "searchedElement",
    "getDesigns",
    "then",
    "sugg",
    "getTransforms",
    "getPlugins",
    "getIcons",
    "getInfluxDBs",
    "getInfluxDBFields",
    "includes",
    "influxAttributes",
    "getNamedItem",
    "getInfluxDBTags",
    "value",
    "getInfluxDBValues",
    "keys",
    "EnumMember",
    "templateNames",
    "variableName",
    "locale",
    "Manager",
    "tr",
    "Variable",
    "mappingName",
    "stylingName",
    "getAddresses",
    "getRrds",
    "typeFilter",
    "getMediaFiles",
    "currentItem",
    "type",
    "getEnumeration",
    "Value",
    "destruct",
    "_schema",
    "completion",
    "Config"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Config.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * XSD-based code completion provider for the monaco text editor.\n *\n * @since 0.11.0\n * @author Tobias Bräutigam\n */\nqx.Class.define('cv.ui.manager.editor.completion.Config', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  /**\n   *\n   */\n  construct: function () {\n    this.base(arguments);\n    this.__elementCache = {};\n    this.__currentSchemas = {};\n    this._dataProvider = cv.ui.manager.editor.data.Provider.getInstance();\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentPath: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyCurrentPath'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _schemas: null,\n    __currentSchema: null,\n    __elementCache: null,\n    __metaElementCache: null,\n    _dataProvider: null,\n    __rootTagName: null,\n    __metaTagName: null,\n    _getSuggestions: null,\n\n    _applyCurrentPath() {\n      this.__currentSchema = null;\n      this.__rootTagName = '';\n    },\n\n    setStructure(name) {\n      const loaded = Object.prototype.hasOwnProperty.call(this.__currentSchemas, name);\n      switch (name) {\n        case 'pure':\n          if (!loaded) {\n            this.__currentSchemas.pure = cv.ui.manager.model.Schema.getInstance('visu_config.xsd');\n          }\n          this.__currentSchema = this.__currentSchemas.pure;\n          this.__rootTagName = 'pages';\n          this.__metaTagName = 'meta';\n          this._getSuggestions = this.providePureCompletionItems;\n          break;\n\n        case 'tile':\n          if (!loaded) {\n            this.__currentSchemas.tile = cv.ui.manager.model.Schema.getInstance('visu_config_tile.xsd');\n          }\n          this.__currentSchema = this.__currentSchemas.tile;\n          this.__rootTagName = 'config';\n          this.__metaTagName = 'cv-meta';\n          this._getSuggestions = this.provideTileCompletionItems;\n          break;\n      }\n    },\n\n    getLastOpenedTag: function (text) {\n      // get all tags inside of the content\n      const tags = text.match(/<\\/*(?=\\S*)([a-zA-Z-]+)/g);\n      if (!tags) {\n        return null;\n      }\n      // we need to know which tags are closed\n      const closingTags = [];\n      for (let i = tags.length - 1; i >= 0; i--) {\n        if (tags[i].indexOf('</') === 0) {\n          closingTags.push(tags[i].substring('</'.length));\n        } else {\n          // get the last position of the tag\n          const tagPosition = text.lastIndexOf(tags[i]);\n          const tag = tags[i].substring('<'.length);\n          const closingBracketIdx = text.indexOf('/>', tagPosition);\n          // if the tag wasn't closed\n          if (closingBracketIdx === -1) {\n            // if there are no closing tags or the current tag wasn't closed\n            if (!closingTags.length || closingTags[closingTags.length - 1] !== tag) {\n              // we found our tag, but let's get the information if we are looking for\n              // a child element or an attribute\n              text = text.substring(tagPosition);\n\n              const openedTag = text.indexOf('<') > text.indexOf('>');\n              let contentSearch = false;\n              let currentAttribute = null;\n              if (openedTag) {\n                const attrMatch = /([\\w\\-_\\.\\d]+)=\"[^\"]*$/.exec(text);\n                contentSearch = !!attrMatch;\n                currentAttribute = attrMatch ? attrMatch[1] : null;\n              }\n              const filteredElementSearch = /<[\\w-_\\d]+$/.test(text);\n              return {\n                tagName: tag,\n                currentAttribute: currentAttribute,\n                filteredElementSearch: filteredElementSearch,\n                isAttributeSearch: !filteredElementSearch && openedTag && !contentSearch,\n                isContentSearch: contentSearch,\n                text: text\n              };\n            }\n            // remove the last closed tag\n            closingTags.splice(closingTags.length - 1, 1);\n          }\n          // remove the last checked tag and continue processing the rest of the content\n          text = text.substring(0, tagPosition);\n        }\n      }\n      return null;\n    },\n\n    findElements: function (parent, elementName, maxDepth, currentDepth, inMeta) {\n      const cache = inMeta === true ? this.__metaElementCache : this.__elementCache;\n      if (elementName in cache) {\n        return cache[elementName];\n      }\n      if (maxDepth < currentDepth) {\n        return null;\n      }\n      if (!parent) {\n        parent = this.__currentSchema.getElementNode(this.__rootTagName);\n      }\n      if (currentDepth === undefined) {\n        currentDepth = 1;\n      }\n      const allowedElements = parent.getAllowedElements();\n      // console.log(parent.name+\" looking for \"+elementName+\" in tree level \"+currentDepth+ \"(<\"+maxDepth+\") (\"+Object.getOwnPropertyNames(allowedElements).join(\", \")+\")\");\n      if (elementName in allowedElements) {\n        // console.log(\"found \"+elementName+\" in tree level \"+currentDepth);\n        this.__elementCache[elementName] = allowedElements[elementName];\n        return allowedElements[elementName];\n      }\n      for (let element in allowedElements) {\n        if (inMeta !== true && element === this.__metaTagName) {\n          continue;\n        }\n        if (maxDepth > currentDepth) {\n          const result = this.findElements(allowedElements[element], elementName, maxDepth, currentDepth + 1);\n          if (result) {\n            cache[elementName] = result;\n            // console.log(\"found \" + elementName + \" in tree level \" + currentDepth);\n            return result;\n          }\n        }\n      }\n      return null;\n    },\n\n    isItemAvailable: function (itemName, maxOccurs, items) {\n      // the default for 'maxOccurs' is 1\n      maxOccurs = maxOccurs || '1';\n      // the element can appere infinite times, so it is available\n      if (maxOccurs && maxOccurs === 'unbounded') {\n        return true;\n      }\n      // count how many times the element appeared\n      let count = 0;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i] === itemName) {\n          count++;\n        }\n      }\n      // if it didn't appear yet, or it can appear again, then it\n      // is available, otherwise it't not\n      return count === 0 || parseInt(maxOccurs) > count;\n    },\n\n    getElementString: function (element, indent, prefix) {\n      let insertText = indent + prefix + element.getName() + ' ';\n      // add all required attributes with default values\n      const allowedAttributes = element.getAllowedAttributes();\n      Object.getOwnPropertyNames(allowedAttributes).forEach(function(attr) {\n        const attribute = allowedAttributes[attr];\n        if (!attribute.isOptional) {\n          insertText += attr+'=\"'+(attribute.getDefaultValue() ? attribute.getDefaultValue() : '')+'\" ';\n        }\n      });\n      // add mandatory children\n      const requiredElements = element.getRequiredElements();\n      const allowedContent = element.getAllowedContent();\n      const isContentAllowed = allowedContent._text || requiredElements.length > 0 || !!allowedContent._grouping;\n      if (!isContentAllowed) {\n        // close tag\n        insertText = insertText.trim()+'/';\n      } else {\n        // close open tag\n        insertText = insertText.trim()+'>';\n\n        // insert required elements\n        let children = 0;\n        requiredElements.forEach(function(elemName) {\n          const elem = this.findElements(element, elemName, 1, 0);\n          if (elem) {\n            insertText += '\\n    ' + this.getElementString(elem, indent + '    ', '<') + '>';\n            children++;\n          }\n        }, this);\n        // add closing tag\n        if (children > 0) {\n          insertText += '\\n'+indent;\n        }\n        insertText += '</'+element.getName();\n      }\n      return insertText;\n    },\n\n    getAvailableElements: function (element, usedItems) {\n      const availableItems = [];\n      const children = element.getAllowedElements();\n\n      // if there are no such elements, then there are no suggestions\n      if (!children) {\n        return [];\n      }\n      Object.getOwnPropertyNames(children).filter(name => !name.startsWith('#')).forEach(function(name) {\n        // get all element attributes\n        const childElem = children[name];\n        // the element is a suggestion if it's available\n        if (this.isItemAvailable(childElem.getName(), childElem.getBounds().max, usedItems)) {\n          // mark it as a 'field', and get the documentation\n          availableItems.push({\n            label: childElem.getName(),\n            insertText: this.getElementString(childElem, '', ''),\n            kind: window.monaco.languages.CompletionItemKind.Field,\n            detail: childElem.getType(),\n            documentation: childElem.getDocumentation().join('\\n')\n          });\n        }\n      }, this);\n      // return the suggestions we found\n      return availableItems;\n    },\n\n    getAvailableAttributes: function (element, usedChildTags) {\n      const availableItems = [];\n      // get all attributes for the element\n      const attrs = element.getAllowedAttributes();\n      Object.getOwnPropertyNames(attrs).forEach(function(name) { // jshint ignore:line\n        const attr = attrs[name];\n        // accept it in a suggestion list only the attribute is not used yet\n        if (usedChildTags.indexOf(attr.name) === -1) {\n          // mark it as a 'property', and get it's documentation\n          availableItems.push({\n            label: attr.getName(),\n            insertText: attr.getName()+'=\"\"',\n            kind: window.monaco.languages.CompletionItemKind.Property,\n            detail: attr.getTypeString(),\n            documentation: attr.getDocumentation().join('\\n')\n          });\n        }\n      }, this);\n\n      // return the elements we found\n      return availableItems;\n    },\n\n    detectSchema(completeText) {\n      const match = /:noNamespaceSchemaLocation=\"([^\"]+)\"/.exec(completeText.substring(0, 200));\n      if (match && match[1].endsWith('visu_config_tile.xsd')) {\n        this.setStructure('tile');\n      } else {\n        this.setStructure('pure');\n      }\n    },\n\n    getProvider: function () {\n      return {\n        triggerCharacters: ['<', '\"'],\n        provideCompletionItems: function (model, position) {\n          this.setCurrentPath(model.uri.toString());\n          const completeText = model.getValue();\n          if (!this.__currentSchema) {\n            this.detectSchema(completeText);\n          }\n          if (this._getSuggestions) {\n            return this._getSuggestions(model, position);\n          }\n          return {suggestions: []};\n        }.bind(this)\n      };\n    },\n\n    providePureCompletionItems(model, position) {\n      // get editor content before the pointer\n      const textUntilPosition = model.getValueInRange({\n        startLineNumber: 1,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column\n      });\n      // parse mappings\n      const completeText = model.getValue();\n      const metaEndPos = completeText.indexOf('</meta>');\n      const textMeta = metaEndPos > 0 ? completeText.substring(0, metaEndPos) : completeText;\n      const mappingNames = [];\n      const stylingNames = [];\n      const templates = {};\n      let map;\n      let vmap;\n      let regex = /<mapping name=\"([^\"]+)\"/gm;\n      while ((map = regex.exec(textMeta)) !== null) {\n        mappingNames.push(map[1]);\n      }\n      regex = /<styling name=\"([^\"]+)\"/gm;\n      while ((map = regex.exec(textMeta)) !== null) {\n        stylingNames.push(map[1]);\n      }\n      const templatesStart = textMeta.indexOf('<templates>');\n      if (templatesStart >= 0) {\n        const templatesString = textMeta.substring(templatesStart + 11, textMeta.indexOf('</templates>') - 12).replace(/(?:\\r\\n|\\r|\\n)/g, '');\n        templatesString.split('</template>').forEach(function (rawTemplate) {\n          const nameMatch = /<template name=\"([^\"]+)\"/.exec(rawTemplate);\n          // search for variables\n          const variables = [];\n          const vregex = /{{{?\\s*([\\w\\d]+)\\s*}?}}/gm;\n          while ((vmap = vregex.exec(rawTemplate)) !== null) {\n            variables.push(vmap[1]);\n          }\n          templates[nameMatch[1]] = variables;\n        }, this);\n      }\n\n      // if we want suggestions, inside of which tag are we?\n      const lastOpenedTag = this.getLastOpenedTag(textUntilPosition);\n      // console.log(lastOpenedTag);\n      // get opened tags to see what tag we should look for in the XSD schema\n      const openedTags = [];\n      // attrobutes of the ancestors\n      const openedAttributes = [];\n      // get the elements/attributes that are already mentioned in the element we're in\n      const usedItems = [];\n      const isAttributeSearch = lastOpenedTag && lastOpenedTag.isAttributeSearch;\n      const isContentSearch = lastOpenedTag && lastOpenedTag.isContentSearch;\n      const filteredElementSearch = lastOpenedTag && lastOpenedTag.filteredElementSearch;\n      // no need to calculate the position in the XSD schema if we are in the root element\n      let parts;\n      if (lastOpenedTag) {\n        // try to create a valid XML document\n        parts = lastOpenedTag.text.split(' ');\n        parts.shift();\n        let cleanedText = textUntilPosition;\n        if (parts.length) {\n          cleanedText = cleanedText.substring(0, cleanedText.length-parts.join(' ').length)+'>';\n        }\n        // parse the content (not cleared text) into an xml document\n        const xmlDoc = qx.xml.Document.fromString(cleanedText);\n        let lastChild = xmlDoc.lastElementChild;\n        let i;\n        let lastFound = false;\n        while (lastChild && lastChild.tagName.toLowerCase() !== 'parsererror') {\n          openedTags.push(lastChild.tagName);\n          openedAttributes.push(lastChild.attributes);\n          // if we found our last opened tag\n          if (lastChild.tagName === lastOpenedTag.tagName) {\n            lastFound = true;\n            // if we are looking for attributes, then used items should\n            // be the attributes we already used\n            if (lastOpenedTag.isAttributeSearch && lastChild.outerHTML === lastOpenedTag.text) {\n              const attrs = lastChild.attributes;\n              for (i = 0; i < attrs.length; i++) {\n                usedItems.push(attrs[i].nodeName);\n              }\n            } else {\n              // if we are looking for child elements, then used items\n              // should be the elements that were already used\n              const children = lastChild.children;\n              for (i = 0; i < children.length; i++) {\n                if (children[i].tagName.toLowerCase() !== 'parsererror') {\n                  usedItems.push(children[i].tagName);\n                }\n              }\n            }\n            break;\n          }\n          // we haven't found the last opened tag yet, so we move to\n          // the next element\n          lastChild = lastChild.lastElementChild;\n        }\n        if (!lastFound) {\n          // fallback -> parse string\n          if (isAttributeSearch || isContentSearch) {\n            parts = lastOpenedTag.text.split(' ');\n            // skip tag name\n            parts.shift();\n            parts.forEach(function(entry) {\n              usedItems.push(entry.split('=').shift());\n            });\n          }\n        }\n      }\n      let res = [];\n      let match;\n      // find the last opened tag in the schema to see what elements/attributes it can have\n      let searchedElement = openedTags[openedTags.length - 1];\n      if (isContentSearch) {\n        // handle data providers if the is one relevant\n        if (lastOpenedTag.tagName === 'pages' && lastOpenedTag.currentAttribute === 'design') {\n          return this._dataProvider.getDesigns().then(function (sugg) {\n            return {suggestions: sugg};\n          });\n        } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === 'transform') {\n          return {suggestions: this._dataProvider.getTransforms()};\n        } else if (lastOpenedTag.tagName === 'plugin' && lastOpenedTag.currentAttribute === 'name') {\n          return {suggestions: this._dataProvider.getPlugins()};\n        } else if (lastOpenedTag.tagName === 'icon' && lastOpenedTag.currentAttribute === 'name') {\n          return {suggestions: this._dataProvider.getIcons('monaco', {cache: false}, completeText)};\n        } else if (lastOpenedTag.tagName === 'influx') {\n          if (lastOpenedTag.currentAttribute === 'measurement') {\n            return this._dataProvider.getInfluxDBs().then(function (suggestions) {\n              return {suggestions: suggestions};\n            });\n          } else if (lastOpenedTag.currentAttribute === 'field') {\n            match = /measurement=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n            if (match) {\n              return this._dataProvider.getInfluxDBFields(match[1]).then(function (suggestions) {\n                return {suggestions: suggestions};\n              });\n            }\n          }\n        } else if (lastOpenedTag.tagName === 'tag' && (lastOpenedTag.currentAttribute === 'key' || lastOpenedTag.currentAttribute === 'value') && openedTags.includes('influx')) {\n          const influxAttributes = openedAttributes[openedTags.indexOf('influx')];\n          const attr = influxAttributes.getNamedItem('measurement');\n          if (attr) {\n            if (lastOpenedTag.currentAttribute === 'key') {\n              return this._dataProvider.getInfluxDBTags(attr.value).then(function (suggestions) {\n                return {suggestions: suggestions};\n              });\n            } else if (lastOpenedTag.currentAttribute === 'value') {\n              match = /key=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n              if (match) {\n                return this._dataProvider.getInfluxDBValues(attr.value, match[1]).then(function (suggestions) {\n                  return {suggestions: suggestions};\n                });\n              }\n            }\n          }\n        } else if (lastOpenedTag.tagName === 'template' && lastOpenedTag.currentAttribute === 'name' && openedTags.includes('meta')) {\n          res = Object.keys(templates).map(function (name) {\n            return {\n              label: name,\n              insertText: name,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          }, this);\n          return {suggestions: res};\n        } else if (lastOpenedTag.tagName === 'value' &&\n          lastOpenedTag.currentAttribute === 'name' &&\n          !openedTags.includes('meta') &&\n          openedTags.includes('template')) {\n          // TODO: find out template name\n          const templateNames = Object.keys(templates);\n          templateNames.forEach(function (name) {\n            templates[name].forEach(function (variableName) {\n              res.push({\n                label: variableName,\n                insertText: variableName,\n                detail: qx.locale.Manager.tr('Variable from template %1', name),\n                kind: window.monaco.languages.CompletionItemKind.Variable\n              });\n            }, this);\n          }, this);\n          return {suggestions: res};\n        } else if (lastOpenedTag.currentAttribute === 'mapping') {\n          res = mappingNames.map(function (mappingName) {\n            return {\n              label: mappingName,\n              insertText: mappingName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          }, this);\n          return {suggestions: res};\n        } else if (lastOpenedTag.currentAttribute === 'styling') {\n          res = stylingNames.map(function (stylingName) {\n            return {\n              label: stylingName,\n              insertText: stylingName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          }, this);\n          return {suggestions: res};\n        }\n\n        // TODO: completions that have to be retrieved from the backend\n        // * rrds\n        // * Influx: dbs, tags fields\n        // * media files\n\n        searchedElement = lastOpenedTag.tagName;\n      } else if (!isAttributeSearch && filteredElementSearch) {\n        searchedElement = openedTags[openedTags.length-2];\n      } else if (lastOpenedTag.tagName === 'address' && lastOpenedTag.currentAttribute === null) {\n        return this._dataProvider.getAddresses('monaco').then(res => ({suggestions: res}));\n      }\n      if (searchedElement === 'rrd') {\n        return this._dataProvider.getRrds('monaco').then(res => ({suggestions: res}));\n      } else if (searchedElement === 'file' && !isAttributeSearch && !isContentSearch && openedTags.includes('files')) {\n        match = /type=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n        const typeFilter = match ? match[1] : null;\n        return this._dataProvider.getMediaFiles(typeFilter).then(function (suggestions) {\n          return {suggestions: suggestions};\n        });\n      }\n      const currentItem = this.findElements(this.__currentSchema.getElementNode('pages'), searchedElement, openedTags.length, openedTags.includes('meta'));\n\n      // return available elements/attributes if the tag exists in the schema, or an empty\n      // array if it doesn't\n      if (isContentSearch) {\n        const currentAttribute = usedItems[usedItems.length - 1];\n\n        if (currentItem && currentAttribute in currentItem.getAllowedAttributes()) {\n          const attribute = currentItem.getAllowedAttributes()[currentAttribute];\n          const type = attribute.getTypeString();\n          attribute.getEnumeration().forEach(function(entry) {\n            res.push({\n              label: entry,\n              insertText: entry,\n              kind: window.monaco.languages.CompletionItemKind.Value,\n              detail: type,\n              documentation: attribute.getDocumentation().join('\\n')\n            });\n          });\n        }\n      } else if (isAttributeSearch) {\n        // get attributes completions\n        res = currentItem ? this.getAvailableAttributes(currentItem, usedItems) : [];\n      } else {\n        // get elements completions\n        // eslint-disable-next-line no-lonely-if\n        if (lastOpenedTag && lastOpenedTag.text.endsWith('</')) {\n          res.push({\n            label: lastOpenedTag.tagName,\n            insertText: lastOpenedTag.tagName,\n            kind: window.monaco.languages.CompletionItemKind.Field\n          });\n        } else {\n          res = currentItem ? this.getAvailableElements(currentItem, usedItems) : [];\n        }\n      }\n      return {suggestions: res};\n    },\n\n    provideTileCompletionItems(model, position) {\n      // get editor content before the pointer\n      const textUntilPosition = model.getValueInRange({\n        startLineNumber: 1,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column\n      });\n      // parse mappings\n      const completeText = model.getValue();\n      const metaEndPos = completeText.indexOf('</cv-meta>');\n      const textMeta = metaEndPos > 0 ? completeText.substring(0, metaEndPos) : completeText;\n      const mappingNames = [];\n      const stylingNames = [];\n      let map;\n      let regex = /<cv-mapping name=\"([^\"]+)\"/gm;\n      while ((map = regex.exec(textMeta)) !== null) {\n        mappingNames.push(map[1]);\n      }\n      regex = /<cv-styling name=\"([^\"]+)\"/gm;\n      while ((map = regex.exec(textMeta)) !== null) {\n        stylingNames.push(map[1]);\n      }\n\n      // if we want suggestions, inside of which tag are we?\n      const lastOpenedTag = this.getLastOpenedTag(textUntilPosition);\n      // console.log(lastOpenedTag);\n      // get opened tags to see what tag we should look for in the XSD schema\n      const openedTags = [];\n      // attrobutes of the ancestors\n      const openedAttributes = [];\n      // get the elements/attributes that are already mentioned in the element we're in\n      const usedItems = [];\n      const isAttributeSearch = lastOpenedTag && lastOpenedTag.isAttributeSearch;\n      const isContentSearch = lastOpenedTag && lastOpenedTag.isContentSearch;\n      const filteredElementSearch = lastOpenedTag && lastOpenedTag.filteredElementSearch;\n      // no need to calculate the position in the XSD schema if we are in the root element\n      let parts;\n      if (lastOpenedTag) {\n        // try to create a valid XML document\n        parts = lastOpenedTag.text.split(' ');\n        parts.shift();\n        let cleanedText = textUntilPosition;\n        if (parts.length) {\n          cleanedText = cleanedText.substring(0, cleanedText.length-parts.join(' ').length)+'>';\n        }\n        // parse the content (not cleared text) into an xml document\n        const xmlDoc = qx.xml.Document.fromString(cleanedText);\n        let lastChild = xmlDoc.lastElementChild;\n        let i;\n        let lastFound = false;\n        while (lastChild) {\n          openedTags.push(lastChild.tagName);\n          openedAttributes.push(lastChild.attributes);\n          // if we found our last opened tag\n          if (lastChild.tagName === lastOpenedTag.tagName) {\n            lastFound = true;\n            // if we are looking for attributes, then used items should\n            // be the attributes we already used\n            if (lastOpenedTag.isAttributeSearch && lastChild.outerHTML === lastOpenedTag.text) {\n              const attrs = lastChild.attributes;\n              for (i = 0; i < attrs.length; i++) {\n                usedItems.push(attrs[i].nodeName);\n              }\n            } else {\n              // if we are looking for child elements, then used items\n              // should be the elements that were already used\n              const children = lastChild.children;\n              for (i = 0; i < children.length; i++) {\n                if (children[i].tagName.toLowerCase() !== 'parsererror') {\n                  usedItems.push(children[i].tagName);\n                }\n              }\n            }\n            break;\n          }\n          // we haven't found the last opened tag yet, so we move to\n          // the next element\n          lastChild = lastChild.lastElementChild;\n        }\n        if (!lastFound) {\n          // fallback -> parse string\n          if (isAttributeSearch || isContentSearch) {\n            parts = lastOpenedTag.text.split(' ');\n            // skip tag name\n            parts.shift();\n            parts.forEach(function(entry) {\n              usedItems.push(entry.split('=').shift());\n            });\n          }\n        }\n      }\n      let res = [];\n      let match;\n      // find the last opened tag in the schema to see what elements/attributes it can have\n      let searchedElement = openedTags[openedTags.length - 1];\n      if (isContentSearch) {\n        // handle data providers if the is one relevant\n        if (lastOpenedTag.tagName === 'config' && lastOpenedTag.currentAttribute === 'design') {\n          const suggestions = this._dataProvider.getDesigns(null, null, 'tile');\n          return {suggestions: suggestions};\n        } else if (lastOpenedTag.tagName === 'cv-address' && lastOpenedTag.currentAttribute === 'transform') {\n          return {suggestions: this._dataProvider.getTransforms()};\n        } else if (lastOpenedTag.tagName === 'cv-icon' && lastOpenedTag.currentAttribute === 'name') {\n          return {suggestions: this._dataProvider.getIcons()};\n        } else if (lastOpenedTag.currentAttribute === 'mapping') {\n          res = mappingNames.map(function (mappingName) {\n            return {\n              label: mappingName,\n              insertText: mappingName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          }, this);\n          return {suggestions: res};\n        } else if (lastOpenedTag.currentAttribute === 'styling') {\n          res = stylingNames.map(function (stylingName) {\n            return {\n              label: stylingName,\n              insertText: stylingName,\n              kind: window.monaco.languages.CompletionItemKind.EnumMember\n            };\n          }, this);\n          return {suggestions: res};\n        }\n        searchedElement = lastOpenedTag.tagName;\n      } else if (!isAttributeSearch && filteredElementSearch) {\n        searchedElement = openedTags[openedTags.length-2];\n      } else if (lastOpenedTag.tagName === 'cv-address' && lastOpenedTag.currentAttribute === null) {\n        return this._dataProvider.getAddresses('monaco').then(res => ({suggestions: res}));\n      } else if (lastOpenedTag.tagName === 'cv-chart' && lastOpenedTag.currentAttribute === 'src') {\n        return this._dataProvider.getRrds('monaco').then(res => ({suggestions: res}));\n      } else if (lastOpenedTag.tagName === 'cv-loader' && lastOpenedTag.currentAttribute === 'src') {\n        match = /type=\"([^\"]+)\"/.exec(lastOpenedTag.text);\n        const typeFilter = match ? match[1] : null;\n        return this._dataProvider.getMediaFiles(typeFilter).then(function (suggestions) {\n          return {suggestions: suggestions};\n        });\n      }\n      const currentItem = this.findElements(this.__currentSchema.getElementNode('config'), searchedElement, openedTags.length, openedTags.includes('cv-meta'));\n\n      // return available elements/attributes if the tag exists in the schema, or an empty\n      // array if it doesn't\n      if (isContentSearch) {\n        const currentAttribute = lastOpenedTag.currentAttribute;\n\n        if (currentItem && currentAttribute in currentItem.getAllowedAttributes()) {\n          const attribute = currentItem.getAllowedAttributes()[currentAttribute];\n          const type = attribute.getTypeString();\n          attribute.getEnumeration().forEach(function(entry) {\n            res.push({\n              label: entry,\n              insertText: entry,\n              kind: window.monaco.languages.CompletionItemKind.Value,\n              detail: type,\n              documentation: attribute.getDocumentation().join('\\n')\n            });\n          });\n        }\n      } else if (isAttributeSearch) {\n        // get attributes completions\n        res = currentItem ? this.getAvailableAttributes(currentItem, usedItems) : [];\n      } else {\n        // get elements completions\n        // eslint-disable-next-line no-lonely-if\n        if (lastOpenedTag && lastOpenedTag.text.endsWith('</')) {\n          res.push({\n            label: lastOpenedTag.tagName,\n            insertText: lastOpenedTag.tagName,\n            kind: window.monaco.languages.CompletionItemKind.Field\n          });\n        } else {\n          res = currentItem ? this.getAvailableElements(currentItem, usedItems) : [];\n        }\n      }\n      return {suggestions: res};\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__elementCache = null;\n    this._schema = null;\n    this._dataProvider = null;\n  }\n});\n"
  ]
}