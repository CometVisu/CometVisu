{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "AbstractEditor",
    "construct",
    "_handledActions",
    "getContentElement",
    "setAttribute",
    "set",
    "droppable",
    "focusable",
    "addListener",
    "ev",
    "preventDefault",
    "dataTransfer",
    "effectAllowed",
    "dropEffect",
    "core",
    "FocusHandler",
    "getInstance",
    "setUseTabNavigation",
    "_draw",
    "_initWorker",
    "_currentDecorations",
    "bind",
    "statics",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "COUNTER",
    "MONACO_EXTENSION_REGEX",
    "FALLBACK_EXTENSION_REGEX",
    "SUPPORTED_FILES",
    "file",
    "filename",
    "getFullPath",
    "toLowerCase",
    "extRegex",
    "Source",
    "getExtensionRegex",
    "test",
    "DEFAULT_FOR",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "window",
    "monaco",
    "languages",
    "extensions",
    "getLanguages",
    "forEach",
    "lang",
    "ext",
    "replace",
    "indexOf",
    "push",
    "RegExp",
    "join",
    "load",
    "callback",
    "context",
    "version",
    "sourcePath",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "loader",
    "DynamicScriptLoader",
    "require",
    "config",
    "paths",
    "vs",
    "availableLanguages",
    "getLanguage",
    "qxLib",
    "apply",
    "typescript",
    "javascriptDefaults",
    "addExtraLib",
    "completionProvider",
    "completion",
    "Config",
    "cvCompletionProvider",
    "CometVisu",
    "registerCompletionItemProvider",
    "getProvider",
    "log",
    "Logger",
    "error",
    "getData",
    "start",
    "members",
    "_editor",
    "_workerWrapper",
    "_configClient",
    "_onDidChangeContentGuard",
    "Worker",
    "setEditor",
    "_getDefaultModelOptions",
    "tabSize",
    "indentSize",
    "insertSpaces",
    "domElement",
    "getDomElement",
    "addListenerOnce",
    "create",
    "suggestOnTriggerCharacters",
    "folding",
    "autoIndent",
    "automaticLayout",
    "dragAndDrop",
    "formatOnPaste",
    "formatOnType",
    "renderValidationDecorations",
    "minimap",
    "enabled",
    "baseVersion",
    "Version",
    "VERSION",
    "split",
    "xhr",
    "io",
    "request",
    "Xhr",
    "ResourceManager",
    "toUri",
    "method",
    "accept",
    "e",
    "req",
    "getTarget",
    "schema",
    "getResponse",
    "json",
    "jsonDefaults",
    "setDiagnosticsOptions",
    "validate",
    "allowComments",
    "schemas",
    "uri",
    "fileMatch",
    "send",
    "getFile",
    "_loadFile",
    "onDidChangeModelContent",
    "_onContentChanged",
    "handleAction",
    "actionName",
    "canHandleAction",
    "trigger",
    "_nativePasteSupported",
    "CLIPBOARD",
    "getModel",
    "getValueInRange",
    "getSelection",
    "_paste",
    "selection",
    "id",
    "major",
    "minor",
    "op",
    "identifier",
    "range",
    "text",
    "forceMoveMarkers",
    "executeEdits",
    "old",
    "close",
    "getType",
    "isSupported",
    "_loadFromFs",
    "getName",
    "rest",
    "Client",
    "getConfigClient",
    "content",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "setContent",
    "data",
    "JSON",
    "stringify",
    "_onSaved",
    "section",
    "key",
    "save",
    "overrideHash",
    "isValid",
    "snackbar",
    "Controller",
    "getHasWarnings",
    "qxl",
    "dialog",
    "Dialog",
    "confirm",
    "confirmed",
    "__saveHiddenConfig",
    "saveSync",
    "parse",
    "getCurrentContent",
    "err",
    "status",
    "statusText",
    "info",
    "_applyContent",
    "value",
    "model",
    "open",
    "getUri",
    "newModel",
    "xml",
    "Document",
    "isXmlDocument",
    "documentElement",
    "outerHTML",
    "createModel",
    "_getLanguage",
    "onDidChangeDecorations",
    "errors",
    "warnings",
    "getModelMarkers",
    "owner",
    "getLanguageId",
    "resource",
    "some",
    "marker",
    "severity",
    "MarkerSeverity",
    "Warning",
    "Error",
    "setValid",
    "setHasWarnings",
    "updateOptions",
    "setModel",
    "setValue",
    "readOnly",
    "isWriteable",
    "_processHandlerOptions",
    "handlerOptions",
    "getHandlerOptions",
    "upgradeVersion",
    "_upgradeConfig",
    "res",
    "_convertToString",
    "upgrader",
    "ConfigUpgrader",
    "upgrade",
    "getValue",
    "contentChanged",
    "parts",
    "fileType",
    "length",
    "pop",
    "typeExt",
    "showErrors",
    "path",
    "errorList",
    "markers",
    "firstErrorLine",
    "check",
    "line",
    "startLineNumber",
    "endLineNumber",
    "message",
    "startColumn",
    "endColumn",
    "setModelMarkers",
    "options",
    "jumpToError",
    "getScrollTop",
    "revealLineInCenter",
    "showDecorations",
    "decorators",
    "deltaDecorations",
    "type",
    "found",
    "destruct",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Source.js"
  ],
  "sourcesContent": [
    "/* Source.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Monaco Texteditor integration\n */\nqx.Class.define('cv.ui.manager.editor.Source', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this._handledActions = ['save', 'cut', 'copy', 'paste', 'undo', 'redo'];\n    this.getContentElement().setAttribute('contentEditable', 'true');\n    this.set({\n      droppable: false,\n      focusable: true\n    });\n\n    this.addListener('dragover', function (ev) {\n      ev.preventDefault();\n      ev.dataTransfer.effectAllowed = 'none';\n      ev.dataTransfer.dropEffect = 'none';\n    });\n    this.addListener('drop', function (ev) {\n      ev.preventDefault();\n    });\n    this.addListener('appear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(false);\n    });\n    this.addListener('disappear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n    });\n    this._draw();\n    this._initWorker();\n    this._currentDecorations = [];\n    this.bind('file.writeable', this, 'selectable');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Texteditor'),\n    COUNTER: 0,\n    MONACO_EXTENSION_REGEX: null,\n    FALLBACK_EXTENSION_REGEX: /\\.(xml|xsd|html|php|css|js|svg|json|md|yaml|conf|ts|rst|py|txt)$/i,\n    SUPPORTED_FILES(file) {\n      let filename = typeof file === 'string' ? file : file.getFullPath().toLowerCase();\n      const extRegex = cv.ui.manager.editor.Source.getExtensionRegex();\n      return extRegex.test(filename);\n    },\n    DEFAULT_FOR: /^(demo|\\.)?\\/?visu_config.*\\.xml/,\n    ICON: cv.theme.dark.Images.getIcon('text', 18),\n\n    getExtensionRegex() {\n      if (!cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX) {\n        if (window.monaco && window.monaco.languages) {\n          if (!cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX) {\n            // monaco has already been loaded, we can use its languages configuration to check if this file is supported\n            const extensions = ['\\\\.xsd'];\n            monaco.languages.getLanguages().forEach(function (lang) {\n              if (lang.extensions) {\n                lang.extensions.forEach(function (ext) {\n                  ext = ext.replace(/\\./g, '\\\\.');\n                  if (extensions.indexOf(ext) === -1) {\n                    extensions.push(ext);\n                  }\n                });\n              }\n            });\n            cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX = new RegExp('(' + extensions.join('|') + ')$');\n          }\n        }\n      }\n      return cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX || cv.ui.manager.editor.Source.FALLBACK_EXTENSION_REGEX;\n    },\n\n    load(callback, context) {\n      const version = qx.core.Environment.get('qx.debug') ? 'dev' : 'min';\n      const sourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri') + '/..');\n\n      const loader = new qx.util.DynamicScriptLoader([\n        sourcePath + 'node_modules/monaco-editor/' + version + '/vs/loader.js',\n        'manager/xml.js'\n      ]);\n\n      loader.addListener('ready', () => {\n        window.require.config({\n          paths: {\n            vs: sourcePath + 'node_modules/monaco-editor/' + version + '/vs'\n          }\n        });\n\n        window.require.config({\n          'vs/nls': {\n            availableLanguages: {\n              '*':\n                qx.locale.Manager.getInstance().getLanguage() !== 'en'\n                  ? qx.locale.Manager.getInstance().getLanguage()\n                  : ''\n            }\n          }\n        });\n\n        window.require(\n          [\n            'xml!*./resource/manager/completion-libs/qooxdoo.d.ts', // the xml loader can load any file by adding * before the path,\n            'vs/editor/editor.main'\n          ],\n\n          function (qxLib) {\n            callback.apply(context);\n            window.monaco.languages.typescript.javascriptDefaults.addExtraLib(qxLib, 'qooxdoo.d.ts');\n\n            const completionProvider = new cv.ui.manager.editor.completion.Config();\n            const cvCompletionProvider = new cv.ui.manager.editor.completion.CometVisu();\n            window.monaco.languages.registerCompletionItemProvider('javascript', cvCompletionProvider.getProvider());\n\n            window.monaco.languages.registerCompletionItemProvider('xml', completionProvider.getProvider());\n          }\n        );\n      });\n      loader.addListener('failed', ev => {\n        qx.log.Logger.error(this, ev.getData());\n      });\n      loader.start();\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _editor: null,\n    _workerWrapper: null,\n    _currentDecorations: null,\n    _configClient: null,\n    _onDidChangeContentGuard: 0,\n\n    _initWorker() {\n      this._workerWrapper = cv.ui.manager.editor.Worker.getInstance();\n      this._workerWrapper.setEditor(this);\n    },\n\n    _getDefaultModelOptions() {\n      return {\n        tabSize: 2,\n        indentSize: 2,\n        insertSpaces: true\n      };\n    },\n\n    _draw() {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        const domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.create(domElement, {\n            suggestOnTriggerCharacters: true,\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            dragAndDrop: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            renderValidationDecorations: 'on',\n            minimap: {\n              enabled: true\n            },\n\n            theme: 'vs-dark'\n          });\n\n          const baseVersion = cv.Version.VERSION.split('-')[0];\n          const xhr = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri('hidden-schema.json'));\n\n          xhr.set({\n            method: 'GET',\n            accept: 'application/json'\n          });\n\n          xhr.addListenerOnce('success', e => {\n            const req = e.getTarget();\n            const schema = req.getResponse();\n            window.monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n              validate: true,\n              allowComments: true,\n              schemas: [\n                {\n                  uri: 'https://www.cometvisu.org/CometVisu/schemas/' + baseVersion + '/hidden-schema.json',\n                  fileMatch: ['hidden.php'],\n                  schema: schema\n                }\n              ]\n            });\n          });\n          xhr.send();\n\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n          this._editor.onDidChangeModelContent(this._onContentChanged.bind(this));\n        }\n      }\n    },\n\n    handleAction(actionName) {\n      if (this.canHandleAction(actionName)) {\n        switch (actionName) {\n          case 'cut':\n            this._editor.trigger('external', 'editor.action.clipboardCutAction');\n\n            if (!this._nativePasteSupported) {\n              // we have no access to the native clipboard for pasting, so we need to save the value to copy somewhere else\n              // and implement the pasting manually\n              cv.ui.manager.editor.AbstractEditor.CLIPBOARD = this._editor\n                .getModel()\n                .getValueInRange(this._editor.getSelection());\n            }\n            break;\n          case 'copy':\n            this._editor.trigger('external', 'editor.action.clipboardCopyAction');\n\n            if (!this._nativePasteSupported) {\n              // we have no access to the native clipboard for pasting, so we need to save the value to copy somewhere else\n              // and implement the pasting manually\n              cv.ui.manager.editor.AbstractEditor.CLIPBOARD = this._editor\n                .getModel()\n                .getValueInRange(this._editor.getSelection());\n            }\n            break;\n          case 'paste':\n            if (this._nativePasteSupported) {\n              this._editor.trigger('external', 'editor.action.clipboardPasteAction');\n            } else {\n              this._paste();\n            }\n            break;\n          case 'undo':\n          case 'redo':\n            this._editor.trigger('external', actionName);\n            break;\n\n          default:\n            super.handleAction(actionName);\n            break;\n        }\n      }\n    },\n\n    /**\n     * Manual paste into source editor is used when the native paste is not supported by the browser.\n     * This is the case when the cometvisu is not running is a safe environment (no https / localhost)\n     * @private\n     */\n    _paste() {\n      if (cv.ui.manager.editor.AbstractEditor.CLIPBOARD) {\n        const selection = this._editor.getSelection();\n        const id = { major: 1, minor: 1 };\n        const op = {\n          identifier: id,\n          range: selection,\n          text: cv.ui.manager.editor.AbstractEditor.CLIPBOARD,\n          forceMoveMarkers: true\n        };\n\n        this._editor.executeEdits('clipboard', [op]);\n      }\n    },\n\n    _loadFile(file, old) {\n      if (old && this._workerWrapper) {\n        this._workerWrapper.close(old);\n      }\n      if (this._editor) {\n        if (file && file.getType() === 'file' && this.isSupported(file)) {\n          super._loadFile(file, old);\n        } else {\n          super._loadFile(null, old);\n        }\n      }\n    },\n\n    _loadFromFs() {\n      if (this.getFile().getName() === 'hidden.php') {\n        if (!this._configClient) {\n          this._configClient = cv.io.rest.Client.getConfigClient();\n          this._configClient.addListener('getSuccess', ev => {\n            const content = ev.getData();\n            if (Object.prototype.hasOwnProperty.call(content, 'error')) {\n              // hidden config json could not be parsed, show the raw data\n              this.setContent(content.data);\n            } else {\n              this.setContent(JSON.stringify(ev.getData(), null, 2));\n            }\n          });\n          this._configClient.addListener('updateSuccess', this._onSaved, this);\n        }\n        this._configClient.get({ section: '*', key: '*' });\n      } else {\n        super._loadFromFs();\n      }\n    },\n\n    save(callback, overrideHash) {\n      if (this.getFile().getName() === 'hidden.php') {\n        if (!this.getFile().isValid()) {\n          cv.ui.manager.snackbar.Controller.error(this.tr('Hidden config is invalid, please correct the errors'));\n        } else if (this.getFile().getHasWarnings()) {\n          // ask user if he really want to save a file with warnings\n          qxl.dialog.Dialog.confirm(\n            this.tr(\n              'Hidden config content has some warnings! It is recommended to fix the warnings before saving. Save anyways?'\n            ),\n\n            function (confirmed) {\n              if (confirmed) {\n                this.__saveHiddenConfig();\n              }\n            },\n            this,\n            qx.locale.Manager.tr('Confirm saving with warnings')\n          );\n        } else {\n          this.__saveHiddenConfig();\n        }\n      } else {\n        super.save(callback, overrideHash);\n      }\n    },\n\n    __saveHiddenConfig() {\n      this._configClient.saveSync(\n        null,\n        JSON.parse(this.getCurrentContent()),\n        function (err) {\n          if (err) {\n            cv.ui.manager.snackbar.Controller.error(\n              this.tr('Saving hidden config failed with error %1 (%2)', err.status, err.statusText)\n            );\n          } else {\n            cv.ui.manager.snackbar.Controller.info(this.tr('Hidden config has been saved'));\n\n            this._onSaved();\n          }\n        },\n        this\n      );\n    },\n\n    _applyContent(value) {\n      const file = this.getFile();\n      if (!file) {\n        return;\n      }\n      const model = this._editor.getModel();\n      if (this._workerWrapper) {\n        this._workerWrapper.open(file, value);\n      }\n      const id = monaco.Uri.parse(file.getUri());\n      let newModel = window.monaco.editor.getModel(id);\n      if (!newModel) {\n        // create new model\n        if (qx.xml.Document.isXmlDocument(value)) {\n          value = value.documentElement.outerHTML;\n        } else if (typeof value === 'object') {\n          value = JSON.stringify(value, null, 2);\n        }\n        newModel = window.monaco.editor.createModel(value, this._getLanguage(file), id);\n\n        newModel.onDidChangeDecorations(function (ev) {\n          let errors = false;\n          let warnings = false;\n          monaco.editor\n            .getModelMarkers({\n              owner: newModel.getLanguageId(),\n              resource: id\n            })\n            .some(function (marker) {\n              if (marker.severity === monaco.MarkerSeverity.Warning) {\n                warnings = true;\n              } else if (marker.severity === monaco.MarkerSeverity.Error) {\n                errors = true;\n              }\n              return warnings && errors;\n            }, this);\n          file.setValid(!errors);\n          file.setHasWarnings(warnings);\n        });\n      }\n\n      if (model !== newModel) {\n        newModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel(newModel);\n      } else {\n        this._editor.setValue(value);\n      }\n      this._editor.updateOptions({ readOnly: !file.isWriteable() });\n      this._processHandlerOptions(value);\n    },\n\n    _processHandlerOptions(content) {\n      const handlerOptions = this.getHandlerOptions() || {};\n      if (\n        Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') &&\n        handlerOptions.upgradeVersion === true &&\n        content\n      ) {\n        const [err, res] = this._upgradeConfig(content);\n        if (err) {\n          this.error(err);\n        } else {\n          this._editor.setValue(this._convertToString(res));\n        }\n      }\n    },\n\n    _convertToString(xml) {\n      return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n' + xml.documentElement.outerHTML;\n    },\n\n    _upgradeConfig(content) {\n      if (this.getFile()) {\n        if (this.getFile().isWriteable()) {\n          const upgrader = new cv.util.ConfigUpgrader();\n          return upgrader.upgrade(content);\n        }\n        cv.ui.manager.snackbar.Controller.error(\n          this.tr('\"%1\" is not writable. Upgrading not possible.', this.getFile().getFullPath())\n        );\n      }\n      return [null, '', []];\n    },\n\n    getCurrentContent() {\n      return this._editor.getValue();\n    },\n\n    _onContentChanged() {\n      if (this._workerWrapper) {\n        this._workerWrapper.contentChanged(this.getFile(), this._editor.getValue());\n      }\n    },\n\n    isSupported(file) {\n      const parts = file.getName().split('.');\n      const fileType = parts.length > 1 ? parts.pop() : 'txt';\n      const typeExt = '.' + fileType;\n      const extRegex = cv.ui.manager.editor.Source.getExtensionRegex();\n      return extRegex.test(typeExt);\n    },\n\n    showErrors(path, errorList) {\n      const markers = [];\n      const model = this._editor.getModel();\n      if (!model) {\n        return;\n      }\n      let firstErrorLine = -1;\n      /**\n       * @param line\n       */\n      function check(line) {\n        if (firstErrorLine < 0 || firstErrorLine > line) {\n          firstErrorLine = line;\n        }\n      }\n      if (errorList) {\n        errorList.forEach(function (error) {\n          check(error.line);\n          markers.push({\n            severity: window.monaco.MarkerSeverity.Error,\n            startLineNumber: error.line,\n            endLineNumber: error.line,\n            message: error.message,\n            startColumn: error.startColumn,\n            endColumn: error.endColumn\n          });\n        });\n      }\n      if (this.getFile().getFullPath() === path) {\n        window.monaco.editor.setModelMarkers(model, model.getLanguageId(), markers);\n\n        const options = this.getHandlerOptions();\n        if (options && options.jumpToError) {\n          // jump too first error (only when we are at the beginning\n          if (this._editor.getScrollTop() === 0) {\n            this._editor.revealLineInCenter(firstErrorLine);\n          }\n        }\n      } else {\n        // TODO: save errors for later\n      }\n    },\n\n    showDecorations(path, decorators) {\n      if (this.getFile().getFullPath() === path) {\n        this._editor.deltaDecorations(this._currentDecorations[path], decorators);\n      }\n      this._currentDecorations[path] = decorators;\n    },\n\n    _getLanguage(file) {\n      if (file.getName() === 'hidden.php') {\n        // override this setting as we are loading the hidden config from its REST endpoint as JSON\n        return 'json';\n      }\n      let type = file.getName().split('.').pop();\n      switch (type) {\n        case 'svg':\n        case 'xsd':\n          return 'xml';\n        case 'js':\n          return 'javascript';\n        case 'md':\n          return 'markdown';\n        default: {\n          if (!type) {\n            return 'txt';\n          }\n          // check if monaco knows this ending, otherwise fallback to plaintext\n          const typeExt = '.' + type;\n          const found = monaco.languages.getLanguages().some(function (lang) {\n            return lang.id === type || (lang.extensions && lang.extensions.indexOf(typeExt) >= 0);\n          });\n          if (!found) {\n            type = 'txt';\n          }\n          return type;\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._workerWrapper = null;\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n    this._configClient = null;\n    qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n  }\n});\n"
  ],
  "mappings": "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"
}