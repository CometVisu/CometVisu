{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/manager/editor/Source.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "manager",
    "editor",
    "AbstractEditor",
    "construct",
    "_handledActions",
    "getContentElement",
    "setAttribute",
    "set",
    "droppable",
    "focusable",
    "addListener",
    "ev",
    "preventDefault",
    "dataTransfer",
    "effectAllowed",
    "dropEffect",
    "core",
    "FocusHandler",
    "getInstance",
    "setUseTabNavigation",
    "_draw",
    "_initWorker",
    "_currentDecorations",
    "bind",
    "statics",
    "TITLE",
    "locale",
    "Manager",
    "tr",
    "COUNTER",
    "MONACO_EXTENSION_REGEX",
    "SUPPORTED_FILES",
    "file",
    "filename",
    "getFullPath",
    "toLowerCase",
    "window",
    "monaco",
    "languages",
    "Source",
    "extensions",
    "getLanguages",
    "forEach",
    "lang",
    "ext",
    "replace",
    "indexOf",
    "push",
    "RegExp",
    "join",
    "test",
    "DEFAULT_FOR",
    "ICON",
    "theme",
    "dark",
    "Images",
    "getIcon",
    "load",
    "callback",
    "context",
    "version",
    "sourcePath",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "loader",
    "DynamicScriptLoader",
    "require",
    "config",
    "paths",
    "availableLanguages",
    "getLanguage",
    "noCacheSuffix",
    "Math",
    "random",
    "schema",
    "qxLib",
    "__schema",
    "apply",
    "typescript",
    "javascriptDefaults",
    "addExtraLib",
    "completionProvider",
    "completion",
    "Config",
    "model",
    "Schema",
    "cvCompletionProvider",
    "CometVisu",
    "registerCompletionItemProvider",
    "getProvider",
    "log",
    "Logger",
    "error",
    "getData",
    "start",
    "members",
    "_editor",
    "_workerWrapper",
    "_configClient",
    "_onDidChangeContentGuard",
    "Worker",
    "setEditor",
    "_getDefaultModelOptions",
    "tabSize",
    "indentSize",
    "insertSpaces",
    "domElement",
    "getDomElement",
    "addListenerOnce",
    "create",
    "suggestOnTriggerCharacters",
    "folding",
    "autoIndent",
    "automaticLayout",
    "dragAndDrop",
    "formatOnPaste",
    "formatOnType",
    "renderValidationDecorations",
    "minimap",
    "enabled",
    "baseVersion",
    "Version",
    "VERSION",
    "split",
    "xhr",
    "io",
    "request",
    "Xhr",
    "ResourceManager",
    "toUri",
    "method",
    "accept",
    "e",
    "req",
    "getTarget",
    "getResponse",
    "json",
    "jsonDefaults",
    "setDiagnosticsOptions",
    "validate",
    "allowComments",
    "schemas",
    "uri",
    "fileMatch",
    "send",
    "getFile",
    "_loadFile",
    "onDidChangeModelContent",
    "_onContentChanged",
    "handleAction",
    "actionName",
    "canHandleAction",
    "trigger",
    "_nativePasteSupported",
    "CLIPBOARD",
    "getModel",
    "getValueInRange",
    "getSelection",
    "_paste",
    "selection",
    "id",
    "major",
    "minor",
    "op",
    "identifier",
    "range",
    "text",
    "forceMoveMarkers",
    "executeEdits",
    "old",
    "close",
    "getType",
    "isSupported",
    "_loadFromFs",
    "getName",
    "rest",
    "Client",
    "getConfigClient",
    "setContent",
    "JSON",
    "stringify",
    "_onSaved",
    "section",
    "key",
    "save",
    "overrideHash",
    "isValid",
    "snackbar",
    "Controller",
    "getHasWarnings",
    "qxl",
    "dialog",
    "Dialog",
    "confirm",
    "confirmed",
    "__saveHiddenConfig",
    "saveSync",
    "parse",
    "getCurrentContent",
    "err",
    "status",
    "statusText",
    "info",
    "_applyContent",
    "value",
    "open",
    "getUri",
    "newModel",
    "xml",
    "Document",
    "isXmlDocument",
    "documentElement",
    "outerHTML",
    "createModel",
    "_getLanguage",
    "onDidChangeDecorations",
    "errors",
    "warnings",
    "getModelMarkers",
    "owner",
    "getLanguageId",
    "resource",
    "some",
    "marker",
    "severity",
    "MarkerSeverity",
    "Warning",
    "Error",
    "setValid",
    "setHasWarnings",
    "updateOptions",
    "setModel",
    "setValue",
    "readOnly",
    "isWriteable",
    "_processHandlerOptions",
    "content",
    "handlerOptions",
    "getHandlerOptions",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "upgradeVersion",
    "_upgradeConfig",
    "res",
    "_convertToString",
    "upgrader",
    "ConfigUpgrader",
    "upgrade",
    "getValue",
    "contentChanged",
    "parts",
    "fileType",
    "length",
    "pop",
    "typeExt",
    "showErrors",
    "path",
    "errorList",
    "markers",
    "firstErrorLine",
    "check",
    "line",
    "startLineNumber",
    "endLineNumber",
    "message",
    "startColumn",
    "endColumn",
    "setModelMarkers",
    "options",
    "jumpToError",
    "getScrollTop",
    "revealLineInCenter",
    "showDecorations",
    "decorators",
    "deltaDecorations",
    "type",
    "found",
    "destruct",
    "dispose"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Source.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Monaco Texteditor integration\n */\nqx.Class.define('cv.ui.manager.editor.Source', {\n  extend: cv.ui.manager.editor.AbstractEditor,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this._handledActions = ['save', 'cut', 'copy', 'paste', 'undo', 'redo'];\n    this.getContentElement().setAttribute('contentEditable', 'true');\n    this.set({\n      droppable: false,\n      focusable: true\n    });\n    this.addListener('dragover', function (ev) {\n      ev.preventDefault();\n      ev.dataTransfer.effectAllowed = 'none';\n      ev.dataTransfer.dropEffect = 'none';\n    });\n    this.addListener('drop', function (ev) {\n      ev.preventDefault();\n    });\n    this.addListener('appear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(false);\n    });\n    this.addListener('disappear', function () {\n      qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n    });\n    this._draw();\n    this._initWorker();\n    this._currentDecorations = [];\n    this.bind('file.writeable', this, 'selectable');\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    TITLE: qx.locale.Manager.tr('Texteditor'),\n    COUNTER: 0,\n    MONACO_EXTENSION_REGEX: null,\n    SUPPORTED_FILES: function (file) {\n      let filename = typeof file === 'string' ? file : file.getFullPath().toLowerCase();\n      if (window.monaco && window.monaco.languages) {\n        if (!cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX) {\n          // monaco has already been loaded, we can use its languages configuration to check if this file is supported\n          const extensions = [];\n          monaco.languages.getLanguages().forEach(function (lang) {\n            lang.extensions.forEach(function (ext) {\n              ext = ext.replace(/\\./g, '\\\\.');\n              if (extensions.indexOf(ext) ===-1) {\n                extensions.push(ext);\n              }\n            });\n          });\n          cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX = new RegExp('(' + extensions.join('|') + ')$');\n        }\n        return cv.ui.manager.editor.Source.MONACO_EXTENSION_REGEX.test(filename);\n      } \n        return /\\.(xml|html|php|css|js|svg|json|md|yaml|conf|ts|rst|py|txt)$/i.test(filename);\n    },\n    DEFAULT_FOR: /^(demo|\\.)?\\/?visu_config.*\\.xml/,\n    ICON: cv.theme.dark.Images.getIcon('text', 18),\n\n    load: function (callback, context) {\n      const version = qx.core.Environment.get('qx.debug') ? 'dev' : 'min';\n      const sourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri') + '/..');\n      const loader = new qx.util.DynamicScriptLoader([\n        sourcePath + 'node_modules/monaco-editor/' + version + '/vs/loader.js',\n        'manager/xml.js'\n      ]);\n      loader.addListener('ready', function () {\n        window.require.config({\n          paths: {\n            'vs': sourcePath + 'node_modules/monaco-editor/' + version + '/vs'\n          }\n        });\n        window.require.config({\n          'vs/nls' : {\n            availableLanguages: {\n              '*': qx.locale.Manager.getInstance().getLanguage() !== 'en' ? qx.locale.Manager.getInstance().getLanguage() : ''\n            }\n          }\n        });\n        const noCacheSuffix = '?' + Math.random();\n        window.require([\n          'xml!./resource/visu_config.xsd' + noCacheSuffix,\n          'xml!*./resource/manager/completion-libs/qooxdoo.d.ts', // the xml loader can load any file by adding * before the path,\n          'vs/editor/editor.main'\n        ], function (schema, qxLib) {\n          this.__schema = schema;\n          callback.apply(context);\n          window.monaco.languages.typescript.javascriptDefaults.addExtraLib(qxLib, 'qooxdoo.d.ts');\n          const completionProvider = new cv.ui.manager.editor.completion.Config(cv.ui.manager.model.Schema.getInstance('visu_config.xsd'));\n          const cvCompletionProvider = new cv.ui.manager.editor.completion.CometVisu();\n          window.monaco.languages.registerCompletionItemProvider('xml', completionProvider.getProvider());\n          window.monaco.languages.registerCompletionItemProvider('javascript', cvCompletionProvider.getProvider());\n        }.bind(this));\n      }, this);\n      loader.addListener('failed', function (ev) {\n        qx.log.Logger.error(this, ev.getData());\n      }, this);\n      loader.start();\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __schema: null,\n    _editor: null,\n    _workerWrapper: null,\n    _currentDecorations: null,\n    _configClient: null,\n    _onDidChangeContentGuard: 0,\n\n    _initWorker: function () {\n      this._workerWrapper = cv.ui.manager.editor.Worker.getInstance();\n      this._workerWrapper.setEditor(this);\n    },\n\n    _getDefaultModelOptions: function () {\n      return {\n        tabSize: 2,\n        indentSize: 2,\n        insertSpaces: true\n      };\n    },\n\n    _draw: function () {\n      if (!window.monaco) {\n        cv.ui.manager.editor.Source.load(this._draw, this);\n      } else {\n        const domElement = this.getContentElement().getDomElement();\n        if (!domElement) {\n          this.addListenerOnce('appear', this._draw, this);\n        } else {\n          this._editor = window.monaco.editor.create(domElement, {\n            suggestOnTriggerCharacters: true,\n            folding: true,\n            autoIndent: true,\n            automaticLayout: true,\n            dragAndDrop: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            renderValidationDecorations: 'on',\n            minimap: {\n              enabled: true\n            },\n            theme: 'vs-dark'\n          });\n          const baseVersion = cv.Version.VERSION.split('-')[0];\n          const xhr = new qx.io.request.Xhr(qx.util.ResourceManager.getInstance().toUri('hidden-schema.json'));\n          xhr.set({\n            method: 'GET',\n            accept: 'application/json'\n          });\n          xhr.addListenerOnce('success', function (e) {\n            const req = e.getTarget();\n            const schema = req.getResponse();\n            window.monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n              validate: true,\n              allowComments: true,\n              schemas: [{\n                uri: 'https://www.cometvisu.org/CometVisu/schemas/' + baseVersion + '/hidden-schema.json',\n                fileMatch: ['hidden.php'],\n                schema: schema\n              }]\n            });\n          }, this);\n          xhr.send();\n\n          if (this.getFile()) {\n            this._loadFile(this.getFile());\n          }\n          this._editor.onDidChangeModelContent(this._onContentChanged.bind(this));\n        }\n      }\n    },\n\n    handleAction: function (actionName) {\n      if (this.canHandleAction(actionName)) {\n        switch (actionName) {\n          case 'cut':\n            this._editor.trigger('external', 'editor.action.clipboardCutAction');\n            if (!this._nativePasteSupported) {\n              // we have no access to the native clipboard for pasting, so we need to save the value to copy somewhere else\n              // and implement the pasting manually\n              cv.ui.manager.editor.AbstractEditor.CLIPBOARD = this._editor.getModel().getValueInRange(this._editor.getSelection());\n            }\n            break;\n          case 'copy':\n            this._editor.trigger('external', 'editor.action.clipboardCopyAction');\n            if (!this._nativePasteSupported) {\n              // we have no access to the native clipboard for pasting, so we need to save the value to copy somewhere else\n              // and implement the pasting manually\n              cv.ui.manager.editor.AbstractEditor.CLIPBOARD = this._editor.getModel().getValueInRange(this._editor.getSelection());\n            }\n            break;\n          case 'paste':\n            if (this._nativePasteSupported) {\n              this._editor.trigger('external', 'editor.action.clipboardPasteAction');\n            } else {\n              this._paste();\n            }\n            break;\n          case 'undo':\n          case 'redo':\n            this._editor.trigger('external', actionName);\n            break;\n\n          default:\n            this.base(arguments, actionName);\n            break;\n        }\n      }\n    },\n\n    /**\n     * Manual paste into source editor is used when the native paste is not supported by the browser.\n     * This is the case when the cometvisu is not running is a safe environment (no https / localhost)\n     * @private\n     */\n    _paste: function () {\n      if (cv.ui.manager.editor.AbstractEditor.CLIPBOARD) {\n        const selection = this._editor.getSelection();\n        const id = {major: 1, minor: 1};\n        const op = {\n          identifier: id,\n          range: selection,\n          text: cv.ui.manager.editor.AbstractEditor.CLIPBOARD,\n          forceMoveMarkers: true\n        };\n        this._editor.executeEdits('clipboard', [op]);\n      }\n    },\n\n    _loadFile: function (file, old) {\n      if (old && this._workerWrapper) {\n        this._workerWrapper.close(old);\n      }\n      if (this._editor) {\n        if (file && file.getType() === 'file' && this.isSupported(file)) {\n          this.base(arguments, file, old);\n        } else {\n          this.base(arguments, null, old);\n        }\n      }\n    },\n\n    _loadFromFs: function () {\n      if (this.getFile().getName() === 'hidden.php') {\n        if (!this._configClient) {\n          this._configClient = cv.io.rest.Client.getConfigClient();\n          this._configClient.addListener('getSuccess', function (ev) {\n            this.setContent(JSON.stringify(ev.getData(), null, 2));\n          }, this);\n          this._configClient.addListener('updateSuccess', this._onSaved, this);\n        }\n        this._configClient.get({section: '*', key: '*'});\n      } else {\n        this.base(arguments);\n      }\n    },\n\n    save: function (callback, overrideHash) {\n      if (this.getFile().getName() === 'hidden.php') {\n        if (!this.getFile().isValid()) {\n          cv.ui.manager.snackbar.Controller.error(this.tr('Hidden config is invalid, please correct the errors'));\n        } else if (this.getFile().getHasWarnings()) {\n          // ask user if he really want to save a file with warnings\n          qxl.dialog.Dialog.confirm(this.tr('Hidden config content has some warnings! It is recommended to fix the warnings before saving. Save anyways?'), function (confirmed) {\n            if (confirmed) {\n              this.__saveHiddenConfig();\n            }\n          }, this, qx.locale.Manager.tr('Confirm saving with warnings'));\n        } else {\n          this.__saveHiddenConfig();\n        }\n      } else {\n        this.base(arguments, callback, overrideHash);\n      }\n    },\n\n    __saveHiddenConfig: function () {\n      this._configClient.saveSync(null, JSON.parse(this.getCurrentContent()), function (err) {\n        if (err) {\n          cv.ui.manager.snackbar.Controller.error(this.tr('Saving hidden config failed with error %1 (%2)', err.status, err.statusText));\n        } else {\n          cv.ui.manager.snackbar.Controller.info(this.tr('Hidden config has been saved'));\n          this._onSaved();\n        }\n      }, this);\n    },\n\n    _applyContent: function(value) {\n      const file = this.getFile();\n      if (!file) {\n        return;\n      }\n      const model = this._editor.getModel();\n      if (this._workerWrapper) {\n        this._workerWrapper.open(file, value);\n      }\n      const id = monaco.Uri.parse(file.getUri());\n      let newModel = window.monaco.editor.getModel(id);\n      if (!newModel) {\n        // create new model\n        if (qx.xml.Document.isXmlDocument(value)) {\n          value = value.documentElement.outerHTML;\n        } else if (typeof value === 'object') {\n          value = JSON.stringify(value, null, 2);\n        }\n        newModel = window.monaco.editor.createModel(value, this._getLanguage(file), id);\n        newModel.onDidChangeDecorations(function (ev) {\n          let errors = false;\n          let warnings = false;\n          monaco.editor.getModelMarkers({\n            owner: newModel.getLanguageId(),\n            resource: id\n          }).some(function (marker) {\n            if (marker.severity === monaco.MarkerSeverity.Warning) {\n              warnings = true;\n            } else if (marker.severity === monaco.MarkerSeverity.Error) {\n              errors = true;\n            }\n            return warnings && errors;\n          }, this);\n          file.setValid(!errors);\n          file.setHasWarnings(warnings);\n        });\n      }\n\n      if (model !== newModel) {\n        newModel.updateOptions(this._getDefaultModelOptions());\n        this._editor.setModel(newModel);\n      } else {\n        this._editor.setValue(value);\n      }\n      this._editor.updateOptions({ readOnly: !file.isWriteable() });\n      this._processHandlerOptions(value);\n    },\n\n    _processHandlerOptions: function (content) {\n      const handlerOptions = this.getHandlerOptions() || {};\n      if (Object.prototype.hasOwnProperty.call(handlerOptions, 'upgradeVersion') && handlerOptions.upgradeVersion === true && content) {\n        const [err, res] = this._upgradeConfig(content);\n        if (err) {\n          this.error(err);\n        } else {\n          this._editor.setValue(this._convertToString(res));\n        }\n      }\n    },\n\n    _convertToString: function (xml) {\n      return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n' + xml.documentElement.outerHTML;\n    },\n\n    _upgradeConfig: function (content) {\n      if (this.getFile()) {\n        if (this.getFile().isWriteable()) {\n          const upgrader = new cv.util.ConfigUpgrader();\n          return upgrader.upgrade(content);\n        }\n        cv.ui.manager.snackbar.Controller.error(this.tr('\"%1\" is not writable. Upgrading not possible.', this.getFile().getFullPath()));\n      }\n      return [null, '', []];\n    },\n\n    getCurrentContent: function () {\n      return this._editor.getValue();\n    },\n\n    _onContentChanged: function () {\n      if (this._workerWrapper) {\n        this._workerWrapper.contentChanged(this.getFile(), this._editor.getValue());\n      }\n    },\n\n    isSupported: function (file) {\n      const parts = file.getName().split('.');\n      const fileType = parts.length > 1 ? parts.pop() : 'txt';\n      const typeExt = '.' + fileType;\n      return monaco.languages.getLanguages().some(function (lang) {\n        return lang.id === fileType || lang.extensions.indexOf(typeExt) >= 0;\n      });\n    },\n\n    showErrors: function (path, errorList) {\n      const markers = [];\n      const model = this._editor.getModel();\n      if (!model) {\n        return;\n      }\n      let firstErrorLine = -1;\n      /**\n       * @param line\n       */\n      function check(line) {\n        if (firstErrorLine < 0 || firstErrorLine > line) {\n          firstErrorLine = line;\n        }\n      }\n      if (errorList) {\n        errorList.forEach(function (error) {\n          check(error.line);\n          markers.push({\n            severity: window.monaco.MarkerSeverity.Error,\n            startLineNumber: error.line,\n            endLineNumber: error.line,\n            message: error.message,\n            startColumn: error.startColumn,\n            endColumn: error.endColumn\n          });\n        });\n      }\n      if (this.getFile().getFullPath() === path) {\n        window.monaco.editor.setModelMarkers(model, model.getLanguageId(), markers);\n        const options = this.getHandlerOptions();\n        if (options && options.jumpToError) {\n          // jump too first error (only when we are at the beginning\n          if (this._editor.getScrollTop() === 0) {\n            this._editor.revealLineInCenter(firstErrorLine);\n          }\n        }\n      } else {\n        // TODO: save errors for later\n      }\n    },\n\n    showDecorations: function (path, decorators) {\n      if (this.getFile().getFullPath() === path) {\n        this._editor.deltaDecorations(this._currentDecorations[path], decorators);\n      }\n      this._currentDecorations[path] = decorators;\n    },\n\n    _getLanguage: function (file) {\n      if (file.getName() === 'hidden.php') {\n        // override this setting as we are loading the hidden config from its REST endpoint as JSON\n        return 'json';\n      }\n      let type = file.getName().split('.').pop();\n      switch (type) {\n        case 'svg':\n          return 'xml';\n        case 'js':\n          return 'javascript';\n        case 'md':\n          return 'markdown';\n        default: {\n          if (!type) {\n            return 'txt';\n          }\n          // check if monaco knows this ending, otherwise fallback to plaintext\n          const typeExt = '.' + type;\n          const found = monaco.languages.getLanguages().some(function (lang) {\n            return lang.id === type || lang.extensions.indexOf(typeExt) >= 0;\n          });\n          if (!found) {\n            type = 'txt';\n          }\n          return type;\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._workerWrapper = null;\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n    this._configClient = null;\n    qx.ui.core.FocusHandler.getInstance().setUseTabNavigation(true);\n  }\n});\n"
  ]
}