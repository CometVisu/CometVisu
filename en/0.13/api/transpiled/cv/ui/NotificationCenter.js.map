{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "cv",
    "notifications",
    "IHandler",
    "include",
    "ui",
    "MHandleMessage",
    "type",
    "construct",
    "set",
    "rootElementId",
    "messageElementId",
    "Router",
    "getInstance",
    "registerMessageHandler",
    "_openCommand",
    "command",
    "Command",
    "addListener",
    "toggleVisibility",
    "TemplateEngine",
    "getCommands",
    "add",
    "event",
    "Registration",
    "window",
    "_onResize",
    "debouncedHide",
    "util",
    "Function",
    "debounce",
    "hide",
    "bind",
    "executeWhenDomFinished",
    "_init",
    "_onSeverityChange",
    "setDelegate",
    "prepareMessage",
    "message",
    "icon",
    "iconClasses",
    "IconTools",
    "svgKUF",
    "statics",
    "SLIDE",
    "duration",
    "timing",
    "origin",
    "keyFrames",
    "translate",
    "BLINK",
    "backgroundColor",
    "deleteMessage",
    "index",
    "ev",
    "clear",
    "force",
    "performAction",
    "messageId",
    "members",
    "_list",
    "__element",
    "__messagesContainer",
    "__visible",
    "__blocker",
    "__badge",
    "__favico",
    "disableBadge",
    "value",
    "classList",
    "remove",
    "height",
    "document",
    "documentElement",
    "clientHeight",
    "style",
    "left",
    "clientWidth",
    "headerRect",
    "querySelector",
    "getBoundingClientRect",
    "footerRect",
    "messageBoxHeight",
    "Math",
    "round",
    "bottom",
    "top",
    "body",
    "BodyBlocker",
    "Favico",
    "animation",
    "bgColor",
    "elem",
    "getRootElementId",
    "dom",
    "Element",
    "create",
    "id",
    "html",
    "locale",
    "Manager",
    "tr",
    "appendChild",
    "templateCode",
    "getMessageElementId",
    "template",
    "data",
    "controller",
    "website",
    "List",
    "_messages",
    "_onListTap",
    "__updateBadge",
    "DeferredCall",
    "schedule",
    "currentContent",
    "parseInt",
    "getAttribute",
    "isNaN",
    "messages",
    "getMessages",
    "getLength",
    "update",
    "visibility",
    "NotificationCenter",
    "Timer",
    "once",
    "bom",
    "element",
    "Animation",
    "animate",
    "innerHTML",
    "severity",
    "getGlobalSeverity",
    "apply",
    "_severities",
    "badge",
    "getSeverityColor",
    "show",
    "block",
    "getBlockerElement",
    "anim",
    "on",
    "transform",
    "removeListener",
    "animateReverse",
    "unblock",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/NotificationCenter.js"
  ],
  "sourcesContent": [
    "/* NotificationCenter.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The NotificationCenter shows messages in a list. Messages are Maps which can have the following structure:\n *\n * <pre>\n * {\n *   topic: {String} Topic of the message\n *   title: {String} Title of the message\n *   message: {String} The message content\n *   icon: {String} icon name (KNX-UF icon)\n *   iconClasses: {String} CSS classes that should be added to the icon element\n *   deletable: {Boolean} Flag to determine if the user can delete the message\n *   severity: {String} one of \"low\", \"normal\", \"high\", \"urgent\"\n *   tooltip: {String} Tooltip for the message\n *   progress: {Integer} indicates a progress state in percent of some long running process.\n *   action: {\n *     actionType {String}: {\n *      action: {Function} Called when the action gets executed (when the user clicks on the message)\n *      params: {Array?} Additional parameters for the callback\n *      needsConfirmation: {Boolean} If true the execution of the action must be confirmed by the user\n *      deleteMessageAfterExecution: {Boolean} If true the message gets deleted after action execution\n *   }\n *   unique: {Boolean} If true there can be only one message of that topic at once\n *   condition: {Boolean|Function} if true this unique message gets removed\n * }\n * </pre>\n *\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.11.0\n */\nqx.Class.define('cv.ui.NotificationCenter', {\n  extend: qx.core.Object,\n  implement: cv.core.notifications.IHandler,\n  include: cv.ui.MHandleMessage,\n  type: 'singleton',\n\n  /*\n  *****************************************************************************\n    CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct() {\n    super();\n\n    this.set({\n      rootElementId: 'notification-center',\n      messageElementId: 'notification_'\n    });\n\n    // register to topics\n    cv.core.notifications.Router.getInstance().registerMessageHandler(this, {\n      'cv.*': {}\n    });\n\n    this._openCommand = new qx.ui.command.Command('Ctrl+N');\n    this._openCommand.addListener('execute', this.toggleVisibility, this);\n    cv.TemplateEngine.getInstance().getCommands().add('open-notificationcenter', this._openCommand);\n\n    qx.event.Registration.addListener(window, 'resize', this._onResize, this);\n\n    this.debouncedHide = qx.util.Function.debounce(this.hide.bind(this), 5000, false);\n\n    cv.TemplateEngine.getInstance().executeWhenDomFinished(this._init, this);\n\n    this.addListener('changedGlobalSeverity', this._onSeverityChange, this);\n\n    this.setDelegate({\n      prepareMessage(message) {\n        // resolve icon if there is one\n        if (message.icon) {\n          const iconClasses = message.iconClasses ? ' ' + message.iconClasses : '';\n          message.icon = cv.util.IconTools.svgKUF(message.icon)(null, null, 'icon' + iconClasses, true);\n        }\n      }\n    });\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    SLIDE: {\n      duration: 350,\n      timing: 'linear',\n      origin: 'bottom center',\n      keyFrames: {\n        0: {\n          translate: ['0px']\n        },\n\n        100: {\n          translate: ['-300px']\n        }\n      }\n    },\n\n    BLINK: {\n      duration: 1000,\n      timing: 'ease-in-out',\n      origin: 'bottom center',\n      keyFrames: {\n        0: {\n          backgroundColor: ['rgba(61, 61, 61, 0.9)']\n        },\n\n        50: {\n          backgroundColor: ['rgba(255, 121, 0, 0.9)']\n        },\n\n        100: {\n          backgroundColor: ['rgba(61, 61, 61, 0.9)']\n        }\n      }\n    },\n\n    /**\n     * Shortcut to {@link cv.ui.NotificationCenter#deleteMessage}\n     * @param index {Number}\n     * @param ev {Event}\n     * @see cv.ui.NotificationCenter#deleteMessage\n     */\n    deleteMessage(index, ev) {\n      return this.getInstance().deleteMessage(index, ev);\n    },\n\n    /**\n     * Shortcut to {@link cv.ui.NotificationCenter#clear}\n     * @param force {Boolean}\n     * @see cv.ui.NotificationCenter#clear\n     */\n    clear(force) {\n      this.getInstance().clear(force);\n    },\n\n    /**\n     * Shortcut to {@link cv.ui.NotificationCenter#hide}\n     * @see cv.ui.NotificationCenter#hide\n     */\n    hide() {\n      this.getInstance().hide();\n    },\n\n    /**\n     * Shortcut to {@link cv.ui.NotificationCenter#performAction}\n     * @param messageId {Number}\n     * @param ev {Event}\n     * @see cv.ui.NotificationCenter#performAction\n     */\n    performAction(messageId, ev) {\n      this.getInstance().performAction(messageId, ev);\n    }\n  },\n\n  /*\n  *****************************************************************************\n   MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    _list: null,\n    __element: null,\n    __messagesContainer: null,\n    __visible: false,\n    __blocker: null,\n    __badge: null,\n    __favico: null,\n    _openCommand: null,\n\n    disableBadge(value) {\n      if (value) {\n        this.__badge.classList.add('hidden');\n      } else {\n        this.__badge.classList.remove('hidden');\n      }\n    },\n\n    _onResize() {\n      const height = document.documentElement.clientHeight;\n      if (this.__element) {\n        this.__element.style.left = document.documentElement.clientWidth + 'px';\n        this.__element.style.height = height + 'px';\n      }\n\n      if (this.__messagesContainer) {\n        // get header+footer heights\n        const headerRect = this.__element.querySelector(':scope > header').getBoundingClientRect();\n        const footerRect = this.__element.querySelector(':scope > footer').getBoundingClientRect();\n        const messageBoxHeight =\n          height - Math.round(headerRect.bottom - headerRect.top) - Math.round(footerRect.bottom - footerRect.top);\n        this.__messagesContainer.style.height = messageBoxHeight + 'px';\n      }\n    },\n\n    /**\n     * Attach to dom element and style it\n     * @private\n     */\n    _init() {\n      const body = document.querySelector('body');\n\n      this.__blocker = cv.ui.BodyBlocker.getInstance();\n\n      this.__favico = new Favico({\n        animation: 'fade',\n        bgColor: '#1C391C'\n      });\n\n      // check if the element is already there (might have been cached)\n      let elem = (this.__element = document.querySelector(this.getRootElementId()));\n\n      if (!elem) {\n        // create new element\n        elem = this.__element = qx.dom.Element.create('div', {\n          id: this.getRootElementId(),\n          style: 'visibility: hidden;',\n          html:\n            '<div class=\"badge\"></div><header><h3>' +\n            qx.locale.Manager.tr('Message center') +\n            '<div class=\"action hide\"><a href=\"#\" onclick=\"cv.ui.NotificationCenter.hide()\">X</a></div></h3></header><section class=\"messages\"></section><footer><div class=\"action clear\" onclick=\"cv.ui.NotificationCenter.clear()\">' +\n            qx.locale.Manager.tr('Delete all') +\n            '<div></div></footer>'\n        });\n\n        body.appendChild(elem);\n\n        // create the template\n        let templateCode =\n          '<div class=\"message {{severity}}{{#actions}} selectable{{/actions}}\" title=\"{{tooltip}}\" id=\"' +\n          this.getMessageElementId() +\n          '{{ id }}\">';\n        templateCode += '{{#icon}}{{ &icon }}{{/icon}}';\n        templateCode += '{{#deletable}}<div class=\"action delete\">x</div>{{/deletable}}';\n        templateCode += '{{#title}}<header><h4>{{ title }}</h4></header>{{/title}}';\n        templateCode += '<div class=\"content\">{{&message}}</div></div>';\n\n        const template = qx.dom.Element.create('script', {\n          id: 'MessageTemplate',\n          type: 'text/template',\n          html: templateCode\n        });\n\n        body.appendChild(template);\n      }\n\n      this.__messagesContainer = elem.querySelector('section.messages');\n      this.__badge = elem.querySelector('.badge');\n      qx.event.Registration.addListener(this.__badge, 'tap', this.toggleVisibility, this);\n\n      // add HTML template for messages to header\n\n      this._list = new qx.data.controller.website.List(this._messages, this.__messagesContainer, 'MessageTemplate');\n\n      qx.event.Registration.addListener(this.__messagesContainer, 'tap', this._onListTap, this);\n\n      // connect badge content\n      this._messages.addListener('changeLength', this.__updateBadge, this);\n      this.__updateBadge();\n\n      // update dimensions\n      new qx.util.DeferredCall(this._onResize, this).schedule();\n    },\n\n    __updateBadge() {\n      let currentContent = parseInt(this.__badge.getAttribute('html'));\n      if (isNaN(currentContent)) {\n        currentContent = 0;\n      }\n      const messages = this.getMessages().getLength();\n\n      const update = function () {\n        // still empty\n        if (this.getMessages().getLength() === 0) {\n          this.hide();\n        } else {\n          this.__element.style.visibility = '';\n          this._onSeverityChange();\n        }\n      }.bind(this);\n      // close center if empty\n      if (cv.ui.NotificationCenter.BLINK.duration > 0) {\n        qx.event.Timer.once(update, this, cv.ui.NotificationCenter.BLINK.duration);\n      } else {\n        update();\n      }\n      if (currentContent < messages) {\n        // blink to get the users attention for the new message\n        qx.bom.element.Animation.animate(this.__badge, cv.ui.NotificationCenter.BLINK);\n      }\n      if (messages) {\n        this.__badge.innerHTML = '' + messages;\n      } else {\n        this.__badge.innerHTML = '';\n      }\n    },\n\n    _onSeverityChange() {\n      const severity = this.getGlobalSeverity();\n      if (this.__badge) {\n        this.__badge.classList.remove.apply(this.__badge.classList, this._severities);\n\n        this.__badge.classList.add(severity);\n      }\n\n      if (this.__favico) {\n        // update favicon badge\n        this.__favico.badge(this.getMessages().getLength(), {\n          bgColor: this.getSeverityColor(severity)\n        });\n      }\n    },\n\n    /**\n     * Show the NotificationCenter\n     */\n    show() {\n      if (!this.__visible) {\n        this.__visible = true;\n        this.__blocker.block();\n        this.__element.style.visibility = '';\n        qx.event.Registration.addListener(this.__blocker.getBlockerElement(), 'tap', this.hide, this);\n\n        if (cv.ui.NotificationCenter.SLIDE.duration > 0) {\n          const anim = qx.bom.element.Animation.animate(this.__element, cv.ui.NotificationCenter.SLIDE);\n\n          anim.on(\n            'end',\n            function () {\n              this.__element.style.transform = 'translate(-300px)';\n            },\n            this\n          );\n        } else {\n          this.__element.style.transform = 'translate(-300px)';\n        }\n      }\n    },\n\n    /**\n     * Toggle the NotificationCenter visibility\n     */\n    toggleVisibility() {\n      if (this.__visible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    },\n\n    /**\n     * Hide the NotificationCenter\n     */\n    hide() {\n      if (this.__visible) {\n        this.__visible = false;\n        qx.event.Registration.removeListener(this.__blocker.getBlockerElement(), 'tap', this.hide, this);\n\n        if (cv.ui.NotificationCenter.SLIDE.duration > 0) {\n          const anim = qx.bom.element.Animation.animateReverse(this.__element, cv.ui.NotificationCenter.SLIDE);\n\n          anim.on(\n            'end',\n            function () {\n              this.__element.style.transform = 'translate(-0px)';\n              this.__blocker.unblock();\n            },\n            this\n          );\n        } else {\n          this.__element.style.transform = 'translate(-0px)';\n          this.__blocker.unblock();\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n    DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct() {\n    qx.event.Registration.removeListener(window, 'resize', this._onResize, this);\n\n    qx.event.Registration.removeListener(this.__blocker.getBlockerElement(), 'tap', this.hide, this);\n\n    qx.event.Registration.removeListener(this.__messagesContainer, 'tap', this._onListTap, this);\n\n    this._disposeObjects('__blocker', '__messagesContainer', '_openCommand');\n  }\n});\n"
  ],
  "mappings": "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"
}