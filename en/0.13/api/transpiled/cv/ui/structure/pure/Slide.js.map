{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Slide.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Operate",
    "Update",
    "construct",
    "props",
    "__animator",
    "util",
    "LimitedRateUpdateAnimator",
    "__updateHandlePosition",
    "__pageSizeListener",
    "layout",
    "ResizeHandler",
    "states",
    "addListener",
    "__invalidateScreensize",
    "__lastBusValue",
    "destruct",
    "removeListenerById",
    "__button",
    "properties",
    "min",
    "check",
    "init",
    "max",
    "step",
    "showInvalidValues",
    "sendOnFinish",
    "members",
    "undefined",
    "__range",
    "__actorWidth",
    "__buttonWidth",
    "__inDrag",
    "__coordMin",
    "_getInnerDomString",
    "placeholder",
    "getFormat",
    "_onDomReady",
    "__throttled",
    "Function",
    "throttle",
    "__onChangeValue",
    "trailing",
    "getActor",
    "addEventListener",
    "_update",
    "address",
    "data",
    "transform",
    "getAddress",
    "value",
    "Transform",
    "decode",
    "__setSliderTo",
    "isVisible",
    "instant",
    "relaxDisplay",
    "getMin",
    "getMax",
    "getStep",
    "Math",
    "abs",
    "realValue",
    "getShowInvalidValues",
    "stepValue",
    "round",
    "maxSwitchValue",
    "floor",
    "ratio",
    "valueRatio",
    "delta",
    "stepCount",
    "factor",
    "sign",
    "setBasicValue",
    "displayValue",
    "applyMapping",
    "applyFormat",
    "setValue",
    "applyStyling",
    "button",
    "getDomElement",
    "querySelector",
    "defaultValue2DOM",
    "e",
    "innerHTML",
    "setTo",
    "element",
    "_disposeObjects",
    "actor",
    "actorStyles",
    "window",
    "getComputedStyle",
    "parseFloat",
    "getPropertyValue",
    "style",
    "marginLeft",
    "borderRadius",
    "length",
    "width",
    "getBasicValue",
    "handleEvent",
    "event",
    "newRatio",
    "type",
    "document",
    "boundingRect",
    "currentTarget",
    "getBoundingClientRect",
    "computedStyle",
    "left",
    "paddingLeft",
    "clientX",
    "removeEventListener",
    "newValue",
    "getSendOnFinish",
    "call",
    "sendToBackend",
    "defer",
    "statics",
    "WidgetFactory",
    "registerClass",
    "pure",
    "Slide"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,4BAAhB,EAA8C;AAC5CC,IAAAA,MAAM,EAAEC,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,cADoB;AAE5CC,IAAAA,OAAO,EAAE,CAACJ,EAAE,CAACC,EAAH,CAAMI,MAAN,CAAaC,OAAd,EAAuBN,EAAE,CAACC,EAAH,CAAMI,MAAN,CAAaE,MAApC,CAFmC;;AAI5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgB;AAAA;;AACzB,4DAAqBA,KAArB;AACA,WAAKC,QAAL,GAAkB,IAAIV,EAAE,CAACW,IAAH,CAAQC,yBAAZ,CAAsC,KAAKC,QAA3C,EAAmE,IAAnE,CAAlB;AACA,WAAKC,QAAL,GAA0Bd,EAAE,CAACC,EAAH,CAAMc,MAAN,CAAaC,aAAb,CAA2BC,MAA3B,CAAkCC,WAAlC,CAA8C,uBAA9C,EAAuE,YAAM;AACrG,QAAA,KAAI,CAACC,QAAL;AACD,OAFyB,CAA1B;AAGA,WAAKC,QAAL,GAAsB,EAAtB;AACD,KAhB2C;;AAiB5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,QAAQ,EAAE,oBAAY;AACpBrB,MAAAA,EAAE,CAACC,EAAH,CAAMc,MAAN,CAAaC,aAAb,CAA2BC,MAA3B,CAAkCK,kBAAlC,CAAqD,KAAKR,QAA1D;AACA,WAAKA,QAAL,GAA0B,IAA1B;AACA,WAAKS,QAAL,GAAgB,IAAhB;AACD,KA1B2C;;AA4B5C;AACF;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,GAAG,EAAE;AACHC,QAAAA,KAAK,EAAE,QADJ;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADK;AAKVC,MAAAA,GAAG,EAAE;AACHF,QAAAA,KAAK,EAAE,QADJ;AAEHC,QAAAA,IAAI,EAAE;AAFH,OALK;AASVE,MAAAA,IAAI,EAAE;AACJH,QAAAA,KAAK,EAAE,QADH;AAEJC,QAAAA,IAAI,EAAE;AAFF,OATI;AAaVG,MAAAA,iBAAiB,EAAE;AACjBJ,QAAAA,KAAK,EAAE,SADU;AAEjBC,QAAAA,IAAI,EAAE;AAFW,OAbT;AAiBVI,MAAAA,YAAY,EAAE;AACZL,QAAAA,KAAK,EAAE,SADK;AAEZC,QAAAA,IAAI,EAAE;AAFM;AAjBJ,KAjCgC;;AAwD5C;AACF;AACA;AACA;AACA;AACEK,IAAAA,OAAO,EAAE;AACPZ,MAAAA,QAAc,EAAE,IADT;AAEPV,MAAAA,QAAU,EAAE,IAFL;AAGPa,MAAAA,QAAQ,EAAEU,SAHH;AAGc;AACrBC,MAAAA,QAAO,EAAED,SAJF;AAIa;AACpBE,MAAAA,QAAY,EAAEF,SALP;AAMPG,MAAAA,QAAa,EAAEH,SANR;AAOPnB,MAAAA,QAAkB,EAAEmB,SAPb;AAQPI,MAAAA,QAAQ,EAAE,KARH;AAQU;AACjBC,MAAAA,SAAU,EAAEL,SATL;AASgB;AAEvB;AACAM,MAAAA,kBAAkB,EAAE,8BAAY;AAC9B,YAAMC,WAAW,GAAG,KAAKC,SAAL,OAAqB,EAArB,GAA0B,EAA1B,GAA+B,GAAnD;AACA,eAAO,qTAEoJD,WAFpJ,qIAAP;AAMD,OApBM;AAsBP;AACAE,MAAAA,WAAW,EAAE,uBAAW;AACtB;;AAEA,aAAKC,SAAL,GAAmB3C,EAAE,CAACW,IAAH,CAAQiC,QAAR,CAAiBC,QAAjB,CAA0B,KAAKC,SAA/B,EAAgD,GAAhD,EAAqD;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAArD,EAAuE,IAAvE,CAAnB;AAEA,aAAKC,QAAL,GAAgBC,gBAAhB,CAAiC,aAAjC,EAAgD,IAAhD;AACD,OA7BM;AA+BPC,MAAAA,OAAO,EAAE,iBAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAChC,YAAIC,SAAS,GAAG,KAAKC,UAAL,GAAkBH,OAAlB,EAA2BE,SAA3C;;AACA,YAAI,KAAKhB,QAAL,IAAiB,KAAKjB,QAAL,CAAoBiC,SAApB,MAAmCD,IAAxD,EAA8D;AAC5D;AACA;AACA;AACD;;AACD,aAAKhC,QAAL,GAAsB,EAAtB,CAPgC,CAON;;AAC1B,aAAKA,QAAL,CAAoBiC,SAApB,IAAiCD,IAAjC;AAEA,YAAIG,KAAK,GAAGvD,EAAE,CAACwD,SAAH,CAAaC,MAAb,CAAoBJ,SAApB,EAA+BD,IAA/B,CAAZ,CAVgC,CAYhC;;AACA,aAAKM,SAAL,CAAmBH,KAAnB,EAA0B,CAAC,KAAKI,SAAL,EAA3B;AACD,OA7CM;;AA+CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACID,MAAAA,SAAa,EAAE,mBAASH,KAAT,EAAgBK,OAAhB,EAA+C;AAAA,YAAtBC,YAAsB,uEAAP,KAAO;AAC5D,YAAIpC,GAAG,GAAG,KAAKqC,MAAL,EAAV;AACA,YAAIlC,GAAG,GAAG,KAAKmC,MAAL,EAAV;AACA,YAAIlC,IAAI,GAAG,KAAKmC,OAAL,EAAX;;AACA,YAAInC,IAAI,KAAK,CAAT,IAAcoC,IAAI,CAACC,GAAL,CAAS,CAACtC,GAAG,GAACH,GAAL,IAAUI,IAAnB,IAA2B,KAA7C,EAAoD;AAClD;AACA;AACA;AACAA,UAAAA,IAAI,GAAG,CAACD,GAAG,GAACH,GAAL,IAAU,KAAjB;AACD;;AACD,YAAI0C,SAAS,GAAGF,IAAI,CAACxC,GAAL,CAASwC,IAAI,CAACrC,GAAL,CAAS2B,KAAT,EAAgB9B,GAAhB,CAAT,EAA+BG,GAA/B,CAAhB;;AAEA,YAAI,CAAC,KAAKwC,oBAAL,EAAL,EAAkC;AAChC;AACA,cAAIC,SAAS,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAACH,SAAS,GAAG1C,GAAb,IAAoBI,IAA/B,IAAuCA,IAAvC,GAA8CJ,GAA9D,CAFgC,CAGhC;AACA;;AACA,cAAI8C,cAAc,GAAG,CAACN,IAAI,CAACO,KAAL,CAAW,CAAC5C,GAAG,GAAGH,GAAP,IAAcI,IAAzB,IAAiCA,IAAjC,GAAwCJ,GAAxC,GAA8CG,GAA/C,IAAsD,CAA3E;AACAuC,UAAAA,SAAS,GAAGA,SAAS,GAAGI,cAAZ,GAA6BF,SAA7B,GAAyCzC,GAArD;AACD;;AAED,YAAI6C,KAAK,GAAG7C,GAAG,KAAGH,GAAN,GAAY,CAAZ,GAAgB,CAAC0C,SAAS,GAAC1C,GAAX,KAAiBG,GAAG,GAACH,GAArB,CAA5B;;AAEA,YAAIoC,YAAJ,EAAkB;AAChB,cAAIa,UAAU,GAAG9C,GAAG,KAAGH,GAAN,GAAY,CAAZ,GAAgB,CAACwC,IAAI,CAACxC,GAAL,CAASwC,IAAI,CAACrC,GAAL,CAAS2B,KAAT,EAAgB9B,GAAhB,CAAT,EAA+BG,GAA/B,IAAoCH,GAArC,KAA2CG,GAAG,GAACH,GAA/C,CAAjC;AACA,cAAIkD,KAAK,GAAGF,KAAK,GAAGC,UAApB;AACA,cAAIE,SAAS,GAAG,CAAChD,GAAG,GAAGH,GAAP,IAAcI,IAA9B;AACA,cAAIgD,MAAM,YAAI,IAAED,SAAN,EAAoB,CAApB,CAAV;AACAH,UAAAA,KAAK,IAAIR,IAAI,CAACxC,GAAL,CAASoD,MAAM,YAAGF,KAAH,EAAU,CAAV,CAAf,EAA4BV,IAAI,CAACC,GAAL,CAASS,KAAT,CAA5B,IAA+CV,IAAI,CAACa,IAAL,CAAUH,KAAV,CAAxD;AACD,SA7B2D,CA+B5D;;;AACA,aAAKI,aAAL,CAAmBZ,SAAnB;;AAEA,YAAI,KAAK1B,SAAL,OAAqB,EAAzB,EAA6B;AAC3B;AACA,cAAIuC,YAAY,GAAG,KAAKC,YAAL,CAAkBd,SAAlB,CAAnB,CAF2B,CAI3B;;AACAa,UAAAA,YAAY,GAAG,KAAKE,WAAL,CAAiBjD,SAAjB,EAA4B+C,YAA5B,CAAf;AACA,eAAKG,QAAL,CAAcH,YAAd;AAEA,eAAKI,YAAL,CAAkBjB,SAAlB;AAEA,cAAIkB,MAAM,GAAG,KAAKC,aAAL,GAAqBC,aAArB,CAAmC,QAAnC,CAAb;AACA,eAAKC,gBAAL,CAAsBR,YAAtB,EAAoC,UAAAS,CAAC,EAAI;AACvCJ,YAAAA,MAAM,CAACK,SAAP,GAAmBD,CAAnB;AACD,WAFD;AAGD;;AAED,aAAK/E,QAAL,CAAgBiF,KAAhB,CAAsBlB,KAAtB,EAA6Bb,OAA7B;AACD,OA1GM;AA4GP/C,MAAAA,QAAsB,EAAE,kBAAU4D,KAAV,EAAiB;AACvC,YAAI,KAAKlD,QAAL,KAAkBU,SAAtB,EAAiC;AAC/B,cAAI2D,OAAO,GAAG,KAAKN,aAAL,EAAd;AACA,eAAK/D,QAAL,GAAgBqE,OAAO,CAACL,aAAR,CAAsB,QAAtB,CAAhB;AACA,eAAKrD,QAAL,GAAe0D,OAAO,CAACL,aAAR,CAAsB,kBAAtB,CAAf;AACD;;AACD,YAAI,KAAKhE,QAAL,KAAkB,IAAtB,EAA4B;AAC1B;AACA;AACA,eAAKsE,eAAL,CAAqB,UAArB;;AACA;AACD;;AACD,YAAI,KAAK1D,QAAL,KAAsBF,SAAtB,IAAmC,KAAKG,QAAL,KAAuBH,SAA9D,EAAyE;AACvE,cACE6D,KAAK,GAAG,KAAKR,aAAL,GAAqBC,aAArB,CAAmC,QAAnC,CADV;AAEE,cAAIQ,WAAW,GAAGC,MAAM,CAACC,gBAAP,CAAwBH,KAAxB,CAAlB;AACF,eAAK3D,QAAL,GAAoB+D,UAAU,CAACH,WAAW,CAACI,gBAAZ,CAA6B,OAA7B,CAAD,CAA9B;AACA,eAAK/D,QAAL,GAAqB8D,UAAU,CAACF,MAAM,CAACC,gBAAP,CAAwB,KAAK1E,QAA7B,EAAuC4E,gBAAvC,CAAwD,OAAxD,CAAD,CAA/B;AACA,eAAKjE,QAAL,CAAakE,KAAb,CAAmBC,UAAnB,GAAgC,MAAMN,WAAW,CAACI,gBAAZ,CAA6B,cAA7B,CAAtC;AACA,eAAKjE,QAAL,CAAakE,KAAb,CAAmBE,YAAnB,GAAkCP,WAAW,CAACI,gBAAZ,CAA6B,eAA7B,CAAlC;AACD;;AACD,YAAII,MAAM,GAAG9B,KAAK,GAAG,KAAKtC,QAA1B;AACA,aAAKZ,QAAL,CAAc6E,KAAd,CAAoB/C,SAApB,GAAgC,kBAAkBkD,MAAM,GAAC,KAAKnE,QAAL,GAAmB,CAA5C,IAAiD,eAAjF;AACA,aAAKF,QAAL,CAAakE,KAAb,CAAmBI,KAAnB,GAA2BD,MAAM,GAAG,IAApC;AACD,OApIM;AAsIPpF,MAAAA,QAAsB,EAAE,oBAAY;AAClC,YAAIM,GAAG,GAAG,KAAKqC,MAAL,EAAV;AACA,YAAIlC,GAAG,GAAG,KAAKmC,MAAL,EAAV;AACA,aAAK5B,QAAL,GAAoBF,SAApB,CAHkC,CAGH;;AAC/B,aAAKvB,QAAL,CAAgBiF,KAAhB,CAAsB/D,GAAG,KAAGH,GAAN,GAAY,CAAZ,GAAgB,CAAC,KAAKgF,aAAL,KAAqBhF,GAAtB,KAA4BG,GAAG,GAACH,GAAhC,CAAtC,EAA4E,IAA5E;AACD,OA3IM;AA6IPiF,MAAAA,WAAW,EAAE,qBAAUC,KAAV,EAAiB;AAC5B,YAAIC,QAAQ,GAAG,CAAf;;AAEA,gBAAQD,KAAK,CAACE,IAAd;AACE,eAAK,aAAL;AAAoB;AAClB,mBAAKxE,QAAL,GAAgB,IAAhB;AACAyE,cAAAA,QAAQ,CAAC7D,gBAAT,CAA0B,aAA1B,EAAyC,IAAzC;AACA6D,cAAAA,QAAQ,CAAC7D,gBAAT,CAA0B,WAA1B,EAAuC,IAAvC;AACA,kBAAI8D,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAoBC,qBAApB,EAAnB;AACA,kBAAIC,aAAa,GAAGlB,MAAM,CAACC,gBAAP,CAAwBU,KAAK,CAACK,aAA9B,CAApB;AACA,mBAAK1E,SAAL,GAAkByE,YAAY,CAACI,IAAb,GAAoBjB,UAAU,CAACgB,aAAa,CAACE,WAAf,CAAhD;AACAR,cAAAA,QAAQ,GAAG,CAACD,KAAK,CAACU,OAAN,GAAgB,KAAK/E,SAAtB,IAAoC,KAAKH,QAApD;AACA;AACD;;AAED,eAAK,aAAL;AACE,gBAAI,CAAC,KAAKE,QAAV,EAAoB;AAClB;AACD;;AACDuE,YAAAA,QAAQ,GAAG,CAACD,KAAK,CAACU,OAAN,GAAgB,KAAK/E,SAAtB,IAAkC,KAAKH,QAAlD;AACA;;AAEF,eAAK,WAAL;AACE,iBAAKE,QAAL,GAAgB,KAAhB;AACAyE,YAAAA,QAAQ,CAACQ,mBAAT,CAA6B,aAA7B,EAA4C,IAA5C;AACAR,YAAAA,QAAQ,CAACQ,mBAAT,CAA6B,WAA7B,EAA0C,IAA1C;AACAV,YAAAA,QAAQ,GAAG,CAACD,KAAK,CAACU,OAAN,GAAgB,KAAK/E,SAAtB,IAAkC,KAAKH,QAAlD;AACA;AAxBJ;;AA2BAyE,QAAAA,QAAQ,GAAG3C,IAAI,CAACxC,GAAL,CAASwC,IAAI,CAACrC,GAAL,CAASgF,QAAT,EAAmB,GAAnB,CAAT,EAAkC,GAAlC,CAAX,CA9B4B,CA8BuB;;AACnD,YAAIW,QAAQ,GAAG,KAAKzD,MAAL,KAAgB8C,QAAQ,IAAI,KAAK7C,MAAL,KAAgB,KAAKD,MAAL,EAApB,CAAvC;;AACA,aAAKJ,SAAL,CAAmB6D,QAAnB,EAA6B,KAAKlF,QAAlC,EAA4C,KAAKA,QAAjD;;AACA,YAAI,CAAC,KAAKmF,eAAL,EAAD,IAA2Bb,KAAK,CAACE,IAAN,KAAe,WAA9C,EAA2D;AACzD,eAAKlE,SAAL,CAAiB8E,IAAjB,CAAsBF,QAAtB;AACD;AACF,OAjLM;AAmLPzE,MAAAA,SAAe,EAAE,mBAASS,KAAT,EAAgB;AAC/B,aAAKnC,QAAL,GAAsB,KAAKsG,aAAL,CAAmBnE,KAAnB,EAA0B,KAA1B,EAAiC,KAAKnC,QAAtC,CAAtB;AACD;AArLM,KA7DmC;AAqP5CuG,IAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB5H,MAAAA,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgB2H,aAAhB,CAA8BC,aAA9B,CAA4C,OAA5C,EAAqDF,OAArD;AACD;AAvP2C,GAA9C;AAzBA5H,EAAAA,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgB6H,IAAhB,CAAqBC,KAArB,CAA2BpI,aAA3B,GAA2CA,aAA3C",
  "sourcesContent": [
    "/* Slide.js \n * \n * copyright (c) 2010-2020, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Adds a horizontal slider to the visu. This can be used, for example, to dim a light or change temperature values.\n *\n * @author Christian Mayer\n * @since 2012\n */\nqx.Class.define('cv.ui.structure.pure.Slide', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Operate, cv.ui.common.Update],\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    this.base(arguments, props);\n    this.__animator = new cv.util.LimitedRateUpdateAnimator(this.__updateHandlePosition, this);\n    this.__pageSizeListener = cv.ui.layout.ResizeHandler.states.addListener('changePageSizeInvalid', () => {\n      this.__invalidateScreensize();\n    });\n    this.__lastBusValue = {};\n  },\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    cv.ui.layout.ResizeHandler.states.removeListenerById(this.__pageSizeListener);\n    this.__pageSizeListener = null;\n    this.__button = null;\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    min: {\n      check: 'Number',\n      init: 0\n    },\n    max: {\n      check: 'Number',\n      init: 100\n    },\n    step: {\n      check: 'Number',\n      init: 0.5\n    },\n    showInvalidValues: {\n      check: 'Boolean',\n      init: false\n    },\n    sendOnFinish: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __lastBusValue: null,\n    __animator: null,\n    __button: undefined, // cache for DOM element\n    __range: undefined, // cache for DOM element\n    __actorWidth: undefined,\n    __buttonWidth: undefined,\n    __pageSizeListener: undefined,\n    __inDrag: false, // is the handle currently dragged?\n    __coordMin: undefined, // minimal screen coordinate of slider\n\n    // overridden\n    _getInnerDomString: function () {\n      const placeholder = this.getFormat() === '' ? '' : '-';\n      return `\n        <div class=\"actor ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all\" style=\"touch-action: pan-y;\">\n          <button class=\"ui-slider-handle ui-state-default ui-corner-all\" draggable=\"false\" unselectable=\"true\" style=\"transform: translate3d(0px, 0px, 0px);\">`+placeholder+`</button>\n          <div class=\"ui-slider-range value\" style=\"margin-left: 0px; width: 0px;\"></div>\n        </div>\n      `;\n    },\n\n    // overridden\n    _onDomReady: function() {\n      this.base(arguments);\n\n      this.__throttled = cv.util.Function.throttle(this.__onChangeValue, 250, {trailing: true}, this);\n\n      this.getActor().addEventListener('pointerdown', this);\n    },\n\n    _update: function (address, data) {\n      let transform = this.getAddress()[address].transform;\n      if (this.__inDrag || this.__lastBusValue[transform] === data) {\n        // slider in use -> ignore value from bus\n        // internal state unchanged -> also do nothing\n        return;\n      }\n      this.__lastBusValue = {}; // forget all other transforms as they might not be valid anymore\n      this.__lastBusValue[transform] = data;\n\n      let value = cv.Transform.decode(transform, data);\n\n      // animate when visible, otherwise jump to the target value\n      this.__setSliderTo(value, !this.isVisible());\n    },\n\n    /**\n     * The the internal slider state and its handle and displayed value\n     * @param value {Number} The new value\n     * @param instant {Boolean} Animate or instant change\n     * @param relaxDisplay {Boolean} Let the handle move to an unstable position\n     *   to give visual feedback that something does happen during interaction\n     * @private\n     */\n    __setSliderTo: function(value, instant, relaxDisplay = false) {\n      let min = this.getMin();\n      let max = this.getMax();\n      let step = this.getStep();\n      if (step === 0 || Math.abs((max-min)/step) > 10000) {\n        // limit too small step size - it's not necessary to have more than\n        // 10000 steps for the range as even the biggest screen doesn't have\n        // that many pixels\n        step = (max-min)/10000;\n      }\n      let realValue = Math.min(Math.max(value, min), max);\n\n      if (!this.getShowInvalidValues()) {\n        // map to closest allowed value\n        let stepValue = Math.round((realValue - min) / step) * step + min;\n        // use max when the value is greater than the middle point between the\n        // biggest allowed step and the maximum\n        let maxSwitchValue = (Math.floor((max - min) / step) * step + min + max) / 2;\n        realValue = realValue < maxSwitchValue ? stepValue : max;\n      }\n\n      let ratio = max===min ? 0 : (realValue-min)/(max-min);\n\n      if (relaxDisplay) {\n        let valueRatio = max===min ? 0 : (Math.min(Math.max(value, min), max)-min)/(max-min);\n        let delta = ratio - valueRatio;\n        let stepCount = (max - min) / step;\n        let factor = (2*stepCount) ** 3;\n        ratio -= Math.min(factor * delta**4, Math.abs(delta)) * Math.sign(delta);\n      }\n\n      // store it to be able to suppress sending of unchanged data\n      this.setBasicValue(realValue);\n\n      if (this.getFormat() !== '') {\n        // #2: map it to a value the user wants to see\n        let displayValue = this.applyMapping(realValue);\n\n        // #3: format it in a way the user understands the value\n        displayValue = this.applyFormat(undefined, displayValue);\n        this.setValue(displayValue);\n\n        this.applyStyling(realValue);\n\n        let button = this.getDomElement().querySelector('button');\n        this.defaultValue2DOM(displayValue, e => {\n          button.innerHTML = e;\n        });\n      }\n\n      this.__animator.setTo(ratio, instant);\n    },\n\n    __updateHandlePosition: function (ratio) {\n      if (this.__button === undefined) {\n        let element = this.getDomElement();\n        this.__button = element.querySelector('button');\n        this.__range = element.querySelector('.ui-slider-range');\n      }\n      if (this.__button === null) {\n        // most likely reason: the widget / DOM tree was deleted (e.g. due to\n        // browsing to a new page or during unit tests)\n        this._disposeObjects('__animator');\n        return;\n      }\n      if (this.__actorWidth === undefined || this.__buttonWidth === undefined) {\n        let\n          actor = this.getDomElement().querySelector('.actor');\n          let actorStyles = window.getComputedStyle(actor);\n        this.__actorWidth = parseFloat(actorStyles.getPropertyValue('width'));\n        this.__buttonWidth = parseFloat(window.getComputedStyle(this.__button).getPropertyValue('width'));\n        this.__range.style.marginLeft = '-' + actorStyles.getPropertyValue('padding-left');\n        this.__range.style.borderRadius = actorStyles.getPropertyValue('border-radius');\n      }\n      let length = ratio * this.__actorWidth;\n      this.__button.style.transform = 'translate3d(' + (length-this.__buttonWidth/2) + 'px, 0px, 0px)';\n      this.__range.style.width = length + 'px';\n    },\n\n    __invalidateScreensize: function () {\n      let min = this.getMin();\n      let max = this.getMax();\n      this.__actorWidth = undefined; // invalidate cached values\n      this.__animator.setTo(max===min ? 0 : (this.getBasicValue()-min)/(max-min), true);\n    },\n\n    handleEvent: function (event) {\n      let newRatio = 0;\n\n      switch (event.type) {\n        case 'pointerdown': {\n          this.__inDrag = true;\n          document.addEventListener('pointermove', this);\n          document.addEventListener('pointerup', this);\n          let boundingRect = event.currentTarget.getBoundingClientRect();\n          let computedStyle = window.getComputedStyle(event.currentTarget);\n          this.__coordMin = boundingRect.left + parseFloat(computedStyle.paddingLeft);\n          newRatio = (event.clientX - this.__coordMin) / this.__actorWidth;\n          break;\n        }\n\n        case 'pointermove':\n          if (!this.__inDrag) {\n            return;\n          }\n          newRatio = (event.clientX - this.__coordMin)/this.__actorWidth;\n          break;\n\n        case 'pointerup':\n          this.__inDrag = false;\n          document.removeEventListener('pointermove', this);\n          document.removeEventListener('pointerup', this);\n          newRatio = (event.clientX - this.__coordMin)/this.__actorWidth;\n          break;\n      }\n\n      newRatio = Math.min(Math.max(newRatio, 0.0), 1.0); // limit to 0..1\n      let newValue = this.getMin() + newRatio * (this.getMax() - this.getMin());\n      this.__setSliderTo(newValue, this.__inDrag, this.__inDrag);\n      if (!this.getSendOnFinish() || event.type === 'pointerup') {\n        this.__throttled.call(newValue);\n      }\n    },\n\n    __onChangeValue: function(value) {\n      this.__lastBusValue = this.sendToBackend(value, false, this.__lastBusValue);\n    }\n  },\n\n  defer: function(statics) {\n    cv.ui.structure.WidgetFactory.registerClass('slide', statics);\n  }\n});\n"
  ]
}