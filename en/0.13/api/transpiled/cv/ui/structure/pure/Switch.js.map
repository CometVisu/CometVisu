{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "pure",
    "AbstractWidget",
    "include",
    "common",
    "Operate",
    "Update",
    "properties",
    "onValue",
    "check",
    "init",
    "offValue",
    "members",
    "_getInnerDomString",
    "handleUpdate",
    "value",
    "actor",
    "getActor",
    "getBasicValue",
    "off",
    "getOffValue",
    "classList",
    "remove",
    "add",
    "getActionValue",
    "getOnValue",
    "Switch"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Switch.js"
  ],
  "sourcesContent": [
    "/* Switch.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * The switch widget shows two states (e.g. ON and OFF) and can toggle between them.\n *\n * @widgetexample <settings>\n *   <caption>Configuration example of a switch widget using mapping and styling</caption>\n *   <screenshot name=\"switch_example_on\">\n *    <caption>Switch turned on</caption>\n *    <data address=\"0/0/0\">1</data>\n *   </screenshot>\n *   <screenshot name=\"switch_example_off\">\n *    <caption>Switch turned off</caption>\n *    <data address=\"0/0/0\">0</data>\n *   </screenshot>\n * </settings>\n * <meta>\n *  <mappings>\n *    <mapping name=\"OnOff\">\n *      <entry value=\"0\">O</entry>\n *      <entry value=\"1\">I</entry>\n *    </mapping>\n *  </mappings>\n *  <stylings>\n *    <styling name=\"GreyGreen\">\n *      <entry value=\"0\">grey</entry>\n *      <entry value=\"1\">green</entry>\n *    </styling>\n *  </stylings>\n * </meta>\n * <switch mapping=\"OnOff\" styling=\"GreyGreen\">\n *   <layout colspan=\"3\" />\n *   <label>Switch</label>\n *   <address transform=\"DPT:1.001\" mode=\"readwrite\">0/0/0</address>\n * </switch>\n *\n *\n * @author Christian Mayer\n * @since 0.8.0 (2012)\n */\nqx.Class.define('cv.ui.structure.pure.Switch', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Operate, cv.ui.common.Update],\n\n  /*\n   ******************************************************\n   PROPERTIES\n   ******************************************************\n   */\n  properties: {\n    onValue: {\n      check: 'String',\n      init: '1'\n    },\n\n    offValue: {\n      check: 'String',\n      init: '0'\n    }\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    // overridden\n    _getInnerDomString() {\n      return '<div class=\"actor switchUnpressed\"><div class=\"value\">-</div></div>';\n    },\n\n    /**\n     * Handles the incoming data from the backend for this widget\n     *\n     * @param value {any} incoming data (already transformed + mapped)\n     */\n    handleUpdate(value) {\n      const actor = this.getActor();\n      // compare against the unmapped value\n      value = this.getBasicValue();\n      const off = this.getOffValue();\n      // using == comparisons to make sure that e.g. 1 equals \"1\"\n      actor.classList.remove(value == off ? 'switchPressed' : 'switchUnpressed');\n\n      actor.classList.add(value == off ? 'switchUnpressed' : 'switchPressed');\n    },\n\n    /**\n     * Get the value that should be send to backend after the action has been triggered\n     * @return {var}\n     */\n    getActionValue() {\n      // using == comparisons to make sure that e.g. 1 equals \"1\"\n      return this.getBasicValue() == this.getOffValue() ? this.getOnValue() : this.getOffValue();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EAA+C;IAC7CC,MAAM,EAAEC,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,cADgB;IAE7CC,OAAO,EAAE,CAACL,EAAE,CAACC,EAAH,CAAMK,MAAN,CAAaC,OAAd,EAAuBP,EAAE,CAACC,EAAH,CAAMK,MAAN,CAAaE,MAApC,CAFoC;;IAI7C;AACF;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACVC,OAAO,EAAE;QACPC,KAAK,EAAE,QADA;QAEPC,IAAI,EAAE;MAFC,CADC;MAMVC,QAAQ,EAAE;QACRF,KAAK,EAAE,QADC;QAERC,IAAI,EAAE;MAFE;IANA,CATiC;;IAqB7C;AACF;AACA;AACA;AACA;IACEE,OAAO,EAAE;MACP;MACAC,kBAFO,gCAEc;QACnB,OAAO,qEAAP;MACD,CAJM;;MAMP;AACJ;AACA;AACA;AACA;MACIC,YAXO,wBAWMC,KAXN,EAWa;QAClB,IAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd,CADkB,CAElB;;QACAF,KAAK,GAAG,KAAKG,aAAL,EAAR;QACA,IAAMC,GAAG,GAAG,KAAKC,WAAL,EAAZ,CAJkB,CAKlB;;QACAJ,KAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuBP,KAAK,IAAII,GAAT,GAAe,eAAf,GAAiC,iBAAxD;QAEAH,KAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoBR,KAAK,IAAII,GAAT,GAAe,iBAAf,GAAmC,eAAvD;MACD,CApBM;;MAsBP;AACJ;AACA;AACA;MACIK,cA1BO,4BA0BU;QACf;QACA,OAAO,KAAKN,aAAL,MAAwB,KAAKE,WAAL,EAAxB,GAA6C,KAAKK,UAAL,EAA7C,GAAiE,KAAKL,WAAL,EAAxE;MACD;IA7BM;EA1BoC,CAA/C;EAzDAtB,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,IAAhB,CAAqByB,MAArB,CAA4BhC,aAA5B,GAA4CA,aAA5C"
}