{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "_asyncToGenerator",
    "arguments",
    "apply",
    "_next",
    "_throw",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "__supportedFeatures",
    "cache",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Config",
    "forceReload",
    "Date",
    "now",
    "properties",
    "currentPage",
    "check",
    "nullable",
    "event",
    "renderTarget",
    "init",
    "namespace",
    "members",
    "main_scroll",
    "old_scroll",
    "pagePartsHandler",
    "getHtmlStructure",
    "parseBackendSettings",
    "xml",
    "settings",
    "configSettings",
    "pagesElement",
    "documentElement",
    "defaultBackendName",
    "getAttribute",
    "backend",
    "URL",
    "server",
    "split",
    "backendUrl",
    "error",
    "backendKnxdUrl",
    "backendMQTTUrl",
    "backendOpenHABUrl",
    "credentials",
    "token",
    "username",
    "password",
    "data",
    "Model",
    "setDefaultBackendName",
    "login",
    "_this",
    "clients",
    "io",
    "BackendConnections",
    "getClients",
    "client",
    "promises",
    "_loop",
    "res",
    "rej",
    "debug",
    "startInitialRequest",
    "all",
    "parseSettings",
    "screensave_time",
    "parseInt",
    "screensave_page",
    "maxMobileScreenWidth",
    "globalClass",
    "document",
    "querySelector",
    "classList",
    "add",
    "scrollSpeed",
    "bindClickToWidget",
    "defaultColumns",
    "minColumnWidth",
    "preParse",
    "_this2",
    "_callee",
    "metaParser",
    "_callee$",
    "_context",
    "parser",
    "pure",
    "MetaParser",
    "pluginsToLoad",
    "concat",
    "parsePlugins",
    "parse",
    "createUI",
    "ScriptLoader",
    "addListenerOnce",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "cacheUsed",
    "page",
    "_createPages",
    "message",
    "Bus",
    "dispatchByName",
    "TemplateEngine",
    "setDomFinished",
    "initLayout",
    "path",
    "flavour",
    "WidgetParser",
    "renderTemplates",
    "parsedData",
    "Array",
    "isArray",
    "widget",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "getDomString",
    "parseLabel",
    "label",
    "labelClass",
    "style",
    "ret_val",
    "undefined",
    "childNodes",
    "elem",
    "nodeType",
    "Node",
    "ELEMENT_NODE",
    "nodeName",
    "toLowerCase",
    "IconHandler",
    "getIconElement",
    "TEXT_NODE",
    "textContent",
    "supports",
    "feature",
    "subfeature",
    "getInitialAddresses",
    "backendName",
    "startPageAddresses",
    "pageWidget",
    "getInstanceById",
    "initialPage",
    "getChildWidgets",
    "child",
    "address",
    "getAddress",
    "addr",
    "backendType",
    "initPagePartsHandler",
    "navigation",
    "PagePartsHandler",
    "__detectInitialPage",
    "setCurrentPage",
    "Manager",
    "adjustColumns",
    "applyColumnWidths",
    "PageHandler",
    "setSpeed",
    "DeferredCall",
    "scrollToPage",
    "schedule",
    "querySelectorAll",
    "_runTrickOMatic",
    "IconTools",
    "fillRecoloredIcon",
    "remove",
    "Init",
    "getApplication",
    "addListener",
    "_onMobileChanged",
    "retries",
    "_this3",
    "getSVGDocument",
    "svg",
    "readyState",
    "onload",
    "TrickOMatic",
    "run",
    "window",
    "requestAnimationFrame",
    "doScreenSave",
    "onHistoryRequest",
    "anchor",
    "target",
    "speed",
    "skipHistory",
    "page_id",
    "getPageIdByPath",
    "currentPageId",
    "treePath",
    "rememberLastPage",
    "Environment",
    "get",
    "localStorage",
    "lastpage",
    "headline",
    "pageTitle",
    "History",
    "addToHistory",
    "seekTo",
    "initializeNavbars",
    "_maintainNavbars",
    "ev",
    "app",
    "isReady",
    "invalidateNavbar",
    "getMobile",
    "navbars",
    "left",
    "dynamic",
    "fadeNavbar",
    "resetPageValues",
    "resetCurrentPage",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "getInitialPageId",
    "_this4",
    "_callee2",
    "_callee2$",
    "_context2",
    "_this5",
    "_callee3",
    "startpage",
    "req",
    "_callee3$",
    "_context3",
    "getItem",
    "substr",
    "removeItem",
    "Uri",
    "parseUri",
    "location",
    "href",
    "substring",
    "match",
    "subscribe",
    "page_name",
    "scope",
    "traversePath",
    "getPageIdByName",
    "root_page_id",
    "path_scope",
    "index",
    "indexOf",
    "path_page_name",
    "String",
    "decodeHtmlEntities",
    "decodeURI",
    "replace",
    "selector",
    "pages",
    "from",
    "filter",
    "getCurrentPage",
    "getPath",
    "fallback",
    "some",
    "Tree",
    "getClosest",
    "innerText",
    "pid",
    "updateSentryScope",
    "sentryEnabled",
    "Sentry",
    "setTag",
    "getDesign",
    "destruct",
    "removeListener",
    "defer",
    "statics",
    "Application",
    "structureController",
    "Controller"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.ui.structure.pure.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT =\n      '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\" class=\"clearfix\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>';\n    this.__supportedFeatures = {\n      cache: true\n    };\n\n    // load basic CSS rules shared by all designs that support this structure\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentPage: {\n      check: 'cv.ui.structure.pure.Page',\n      nullable: true,\n      event: 'changeCurrentPage'\n    },\n\n    renderTarget: {\n      check: 'String',\n      init: '#pages'\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __supportedFeatures: null,\n    __HTML_STRUCT: null,\n    main_scroll: null,\n    old_scroll: '',\n    pagePartsHandler: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    parseBackendSettings(xml) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      let defaultBackendName = '';\n      if (pagesElement.getAttribute('backend') !== null) {\n        settings.backend = pagesElement.getAttribute('backend');\n        defaultBackendName = settings.backend;\n      } else {\n        defaultBackendName = (\n          cv.Config.URL.backend ||\n          cv.Config.server.backend ||\n          'knxd'\n        ).split(',')[0];\n      }\n      if (pagesElement.getAttribute('backend-url') !== null) {\n        settings.backendUrl = pagesElement.getAttribute('backend-url');\n        this.error(\n          'The useage of \"backend-url\" is deprecated. Please use \"backend-knxd-url\", \"backend-mqtt-url\" or \"backend-openhab-url\" instead.'\n        );\n      }\n\n      if (pagesElement.getAttribute('backend-knxd-url') !== null) {\n        settings.backendKnxdUrl = pagesElement.getAttribute('backend-knxd-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'knxd';\n        }\n      }\n      if (pagesElement.getAttribute('backend-mqtt-url') !== null) {\n        settings.backendMQTTUrl = pagesElement.getAttribute('backend-mqtt-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'mqtt';\n        }\n      }\n      if (pagesElement.getAttribute('backend-openhab-url') !== null) {\n        settings.backendOpenHABUrl = pagesElement.getAttribute('backend-openhab-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'openhab';\n        }\n      }\n      if (pagesElement.getAttribute('token') !== null) {\n        settings.credentials.token = pagesElement.getAttribute('token');\n      }\n      if (pagesElement.getAttribute('username') !== null) {\n        settings.credentials.username = pagesElement.getAttribute('username');\n      }\n      if (pagesElement.getAttribute('password') !== null) {\n        settings.credentials.password = pagesElement.getAttribute('password');\n      }\n\n      // make sure that the default name is the actual type\n      if (defaultBackendName === 'default') {\n        defaultBackendName = 'knxd';\n      }\n      if (defaultBackendName) {\n        cv.data.Model.getInstance().setDefaultBackendName(defaultBackendName);\n      }\n      return true;\n    },\n\n    login() {\n      const clients = cv.io.BackendConnections.getClients();\n      let client;\n      const promises = [];\n      for (const name in clients) {\n        client = clients[name];\n        promises.push(new Promise((res, rej) => {\n          client.login(true, cv.Config.configSettings.credentials, () => {\n            this.debug(name + ' logged in');\n            cv.io.BackendConnections.startInitialRequest(name);\n            res();\n          });\n        }));\n      }\n      return Promise.all(promises);\n    },\n\n    parseSettings(xml, done) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      settings.screensave_time = pagesElement.getAttribute('screensave_time');\n      if (settings.screensave_time) {\n        settings.screensave_time = parseInt(settings.screensave_time, 10);\n      }\n      settings.screensave_page = pagesElement.getAttribute('screensave_page');\n\n      if (pagesElement.getAttribute('max_mobile_screen_width') !== null) {\n        settings.maxMobileScreenWidth = pagesElement.getAttribute('max_mobile_screen_width');\n\n        // override config setting\n        cv.Config.maxMobileScreenWidth = settings.maxMobileScreenWidth;\n      }\n\n      const globalClass = pagesElement.getAttribute('class');\n      if (globalClass !== null) {\n        document.querySelector('body').classList.add(globalClass);\n      }\n      if (pagesElement.getAttribute('scroll_speed') === null) {\n        settings.scrollSpeed = 400;\n      } else {\n        settings.scrollSpeed = parseInt(pagesElement.getAttribute('scroll_speed'));\n      }\n      settings.bindClickToWidget = pagesElement.getAttribute('bind_click_to_widget') === 'true';\n      if (pagesElement.getAttribute('default_columns') !== null) {\n        settings.defaultColumns = pagesElement.getAttribute('default_columns');\n      }\n      if (pagesElement.getAttribute('min_column_width') !== null) {\n        settings.minColumnWidth = pagesElement.getAttribute('min_column_width');\n      }\n    },\n\n    async preParse(xml) {\n      const settings = cv.Config.configSettings;\n      const metaParser = new cv.parser.pure.MetaParser();\n\n      // start with the plugins\n      settings.pluginsToLoad = settings.pluginsToLoad.concat(metaParser.parsePlugins(xml));\n\n      // and then the rest\n      await metaParser.parse(xml);\n      this.debug('pre parsing done');\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param xml {XMLDocument} loaded config file\n     */\n    createUI(xml) {\n      cv.util.ScriptLoader.getInstance().addListenerOnce('stylesAndScriptsLoaded', () => {\n        cv.ui.structure.pure.layout.ResizeHandler.invalidateScreensize();\n      }, this);\n\n      if (!cv.Config.cacheUsed) {\n        this.debug('creating pages');\n        const page = xml.querySelector('pages > page'); // only one page element allowed...\n\n        this._createPages(page, 'id');\n        this.debug('finalizing');\n        qx.event.message.Bus.dispatchByName('setup.dom.append');\n        this.debug('pages created');\n      }\n      this.debug('setup.dom.finished');\n      qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n      cv.TemplateEngine.getInstance().setDomFinished(true);\n\n      this.login().then(() => {\n        if (qx.core.Environment.get('qx.debug')) {\n          cv.report.Replay.start();\n        }\n      });\n\n      this.initLayout();\n    },\n\n    /**\n     * Start the parsing process\n     * @param page {Element} XML-configuration element\n     * @param path {String} internal poth\n     * @param flavour {String} inherited flavour\n     * @param type {String} page type (text, 2d, 3d)\n     */\n    _createPages(page, path, flavour, type) {\n      cv.parser.pure.WidgetParser.renderTemplates(page);\n      let parsedData = cv.parser.pure.WidgetParser.parse(page, path, flavour, type);\n\n      if (!Array.isArray(parsedData)) {\n        parsedData = [parsedData];\n      }\n      let i = 0;\n      const l = parsedData.length;\n      for (; i < l; i++) {\n        const data = parsedData[i];\n        const widget = cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n\n        // trigger DOM generation\n        if (widget) {\n          widget.getDomString();\n        }\n      }\n    },\n\n    /**\n     * Parse a label from the config file\n     * @param label {Element} label xml element\n     * @param flavour {String?} flavour name\n     * @param labelClass {String?} CSS class name\n     * @param style {String?} additional CSS style properties\n     */\n    parseLabel(label, flavour, labelClass, style) {\n      if (!label) {\n        return '';\n      }\n      let ret_val =\n        '<div class=\"' +\n        (labelClass !== undefined ? labelClass : 'label') +\n        '\"' +\n        (style ? ' style=\"' + style + '\"' : '') +\n        '>';\n\n      Array.prototype.forEach.call(label.childNodes, function (elem) {\n        if (elem.nodeType === Node.ELEMENT_NODE && elem.nodeName.toLowerCase() === 'icon') {\n          ret_val += cv.IconHandler.getInstance().getIconElement(\n            elem.getAttribute('name'),\n            elem.getAttribute('type'),\n            elem.getAttribute('flavour') || flavour,\n            elem.getAttribute('color'),\n            elem.getAttribute('styling'),\n            '',\n            true\n          );\n        } else if (elem.nodeType === Node.TEXT_NODE) {\n          ret_val += elem.textContent;\n        }\n      });\n      return ret_val + '</div>';\n    },\n    supports(feature, subfeature) {\n      if (Object.prototype.hasOwnProperty.call(this.__supportedFeatures, feature)) {\n        if (this.__supportedFeatures[feature] === true) {\n          if (subfeature) {\n            return (\n              Object.prototype.hasOwnProperty.call(this.__supportedFeatures[feature], subfeature) &&\n              this.__supportedFeatures[feature][subfeature] === true\n            );\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    getInitialAddresses(backendName) {\n      const startPageAddresses = {};\n      const pageWidget = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      pageWidget.getChildWidgets().forEach(function (child) {\n        const address = child.getAddress ? child.getAddress() : {};\n        for (let addr in address) {\n          if (Object.prototype.hasOwnProperty.call(address, addr) && addr.backendType === backendName) {\n            startPageAddresses[addr] = 1;\n          }\n        }\n      }, this);\n      return Object.keys(startPageAddresses);\n    },\n\n    initPagePartsHandler() {\n      if (!this.pagePartsHandler) {\n        this.pagePartsHandler = new cv.ui.structure.pure.navigation.PagePartsHandler();\n      }\n    },\n\n    initLayout() {\n      this.initPagePartsHandler();\n      if (!cv.Config.initialPage) {\n        this.__detectInitialPage();\n      }\n      let currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      if (currentPage) {\n        this.setCurrentPage(currentPage);\n      } else {\n        // this page does not exist, fallback to start page\n        cv.Config.initialPage = 'id_';\n        currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n      }\n\n      cv.ui.structure.pure.layout.Manager.adjustColumns();\n      cv.ui.structure.pure.layout.Manager.applyColumnWidths('#' + cv.Config.initialPage, true);\n\n      this.main_scroll = new cv.ui.structure.pure.navigation.PageHandler();\n      if (this.scrollSpeed !== undefined) {\n        this.main_scroll.setSpeed(this.scrollSpeed);\n      }\n\n      new qx.util.DeferredCall(function () {\n        this.scrollToPage(cv.Config.initialPage, 0);\n      }, this).schedule();\n\n      // run the Trick-O-Matic scripts for great SVG backdrops\n      document.querySelectorAll('embed').forEach(function (elem) {\n        this._runTrickOMatic(elem, 0);\n      }, this);\n\n      document.querySelectorAll('.icon').forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n      document.querySelectorAll('.loading').forEach(function (elem) {\n        elem.classList.remove('loading');\n      }, this);\n\n      qx.core.Init.getApplication().addListener('changeMobile', this._onMobileChanged, this);\n    },\n\n    _runTrickOMatic(elem, retries) {\n      if (elem && typeof elem.getSVGDocument === 'function') {\n        try {\n          const svg = elem.getSVGDocument();\n          if (svg === null || svg.readyState !== 'complete') {\n            elem.onload = cv.ui.TrickOMatic.run;\n          } else {\n            cv.ui.TrickOMatic.run.call(elem);\n          }\n        } catch (e) {\n          if (e.name === 'NotSupportedError') {\n            if (retries <= 5) {\n              retries++;\n              window.requestAnimationFrame(() => {\n                this._runTrickOMatic(elem, retries);\n              });\n            } else {\n              this.error(e);\n            }\n          } else {\n            this.error(e);\n          }\n        }\n      }\n    },\n\n    doScreenSave() {\n      this.scrollToPage();\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor, 0, true);\n      }\n    },\n\n    scrollToPage(target, speed, skipHistory) {\n      if (undefined === target) {\n        target = cv.Config.configSettings.screensave_page;\n      }\n      const page_id = this.getPageIdByPath(target);\n      if (page_id === null) {\n        return;\n      }\n      if (cv.Config.currentPageId === page_id) {\n        return;\n      }\n      cv.Config.currentPageId = page_id;\n      cv.Config.treePath = page_id;\n\n      if (undefined === speed) {\n        speed = cv.Config.configSettings.scrollSpeed;\n      }\n\n      if (cv.Config.rememberLastPage && qx.core.Environment.get('html.storage.local')) {\n        localStorage.lastpage = page_id;\n      }\n\n      // push new state to history\n      if (skipHistory === undefined) {\n        const headline = document.querySelectorAll('#' + page_id + ' h1');\n        let pageTitle = 'CometVisu';\n        if (headline.length) {\n          pageTitle = headline[0].textContent + ' - ' + pageTitle;\n        }\n        qx.bom.History.getInstance().addToHistory(page_id, pageTitle);\n      }\n\n      this.main_scroll.seekTo(page_id, speed); // scroll to it\n\n      this.pagePartsHandler.initializeNavbars(page_id);\n      this._maintainNavbars();\n    },\n\n    _onMobileChanged(ev) {\n      const app = qx.core.Init.getApplication();\n      if (app.isReady()) {\n        cv.ui.structure.pure.layout.ResizeHandler.invalidateNavbar();\n        this._maintainNavbars();\n      }\n    },\n\n    _maintainNavbars() {\n      if (qx.core.Init.getApplication().getMobile()) {\n        switch (this.pagePartsHandler.navbars.left.dynamic) {\n          case null:\n          case true:\n            this.pagePartsHandler.fadeNavbar('Left', 'out', 0);\n            break;\n\n          case false:\n            this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n        }\n      } else {\n        this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n      }\n    },\n\n    /**\n     * Reset some values related to the current page\n     */\n    resetPageValues() {\n      this.resetCurrentPage();\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableWidth = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableHeight = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageNavbarVisibility = null;\n    },\n\n    async getInitialPageId() {\n      if (!cv.Config.initialPage) {\n        await this.__detectInitialPage();\n      }\n      return cv.Config.initialPage;\n    },\n\n    async __detectInitialPage() {\n      let startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get('html.storage.local') === true) {\n          if (startpage === 'remember') {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if (typeof startpage !== 'string' || startpage.substr(0, 3) !== 'id_') {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if (startpage === 'noremember') {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        const req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === 'id_') {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n        return startpage;\n      }\n      // wait for DOM to be ready and detect the page id then\n      return new Promise(resolve => {\n        qx.event.message.Bus.subscribe('setup.dom.finished.before', () => {\n          cv.Config.initialPage = this.getPageIdByPath(startpage) || 'id_';\n          resolve(cv.Config.initialPage);\n        });\n      });\n    },\n\n    /**\n     * Returns the id of the page the given path is associated to\n     * @param page_name {String}\n     * @param path {String}\n     * @return {String}\n     */\n    getPageIdByPath(page_name, path) {\n      if (page_name === null) {\n        return null;\n      }\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      if (path !== undefined) {\n        const scope = this.traversePath(path);\n        if (scope === null) {\n          // path is wrong\n          this.error('path \\'' + path + '\\' could not be traversed, no page found');\n\n          return null;\n        }\n        return this.getPageIdByName(page_name, scope);\n      }\n      return this.getPageIdByName(page_name);\n    },\n\n    traversePath(path, root_page_id) {\n      let path_scope = null;\n      let index = path.indexOf('/');\n      if (index >= 1) {\n        // skip escaped slashes like \\/\n        while (path.substr(index - 1, 1) === '\\\\') {\n          const next = path.indexOf('/', index + 1);\n          if (next >= 0) {\n            index = next;\n          }\n        }\n      }\n      //    console.log(\"traversePath(\"+path+\",\"+root_page_id+\")\");\n      if (index >= 0) {\n        // traverse path one level down\n        const path_page_name = path.substr(0, index);\n        path_scope = this.getPageIdByName(path_page_name, root_page_id);\n        path = path.substr(path_page_name.length + 1);\n        path_scope = this.traversePath(path, path_scope);\n        //      console.log(path_page_name+\"=>\"+path_scope);\n        return path_scope;\n      }\n      // bottom path level reached\n      path_scope = this.getPageIdByName(path, root_page_id);\n      return path_scope;\n    },\n\n    getPageIdByName(page_name, scope) {\n      let page_id = null;\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      // find Page-ID by name\n      // decode html code (e.g. like &apos; => ')\n      page_name = cv.util.String.decodeHtmlEntities(page_name);\n      // remove escaped slashes\n      page_name = decodeURI(page_name.replace('\\\\/', '/'));\n\n      //      console.log(\"Page: \"+page_name+\", Scope: \"+scope);\n      const selector = scope !== undefined && scope !== null ? '.page[id^=\"' + scope + '\"] h1' : '.page h1';\n      let pages = document.querySelectorAll(selector);\n      pages = Array.from(pages).filter(function (h) {\n        return h.textContent === page_name;\n      });\n      if (pages.length > 1 && this.getCurrentPage() !== null) {\n        const currentPageId = this.getCurrentPage().getPath();\n        // More than one Page found -> search in the current pages descendants first\n        let fallback = true;\n        pages.some(function (page) {\n          const p = cv.util.Tree.getClosest(page, '.page');\n          if (page.innerText === page_name) {\n            const pid = p.getAttribute('id');\n            if (pid.length < currentPageId.length) {\n              // found pages path is shorter the the current pages -> must be an ancestor\n              if (currentPageId.indexOf(pid) === 0) {\n                // found page is an ancestor of the current page -> we take this one\n                page_id = pid;\n                fallback = false;\n                //break loop\n                return true;\n              }\n            } else if (pid.indexOf(currentPageId) === 0) {\n              // found page is an descendant of the current page -> we take this one\n              page_id = pid;\n              fallback = false;\n              //break loop\n              return true;\n            }\n          }\n          return false;\n        }, this);\n        if (fallback) {\n          // take the first page that fits (old behaviour)\n          pages.some(function (page) {\n            if (page.innerText === page_name) {\n              page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n\n              // break loop\n              return true;\n            }\n            return false;\n          });\n        }\n      } else {\n        pages.some(function (page) {\n          if (page.innerText === page_name) {\n            page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n            // break loop\n            return true;\n          }\n          return false;\n        });\n      }\n\n      if (page_id !== null && page_id.match(/^id_[0-9_]*$/) !== null) {\n        return page_id;\n      }\n      // not found\n      return null;\n    },\n\n    updateSentryScope() {\n      if (cv.Config.sentryEnabled && window.Sentry) {\n        Sentry.setTag('ui.structure', 'pure');\n        Sentry.setTag('ui.design', cv.Config.getDesign());\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.core.Init.getApplication().removeListener('changeMobile', this._onMobileChanged, this);\n  },\n\n  defer(statics) {\n    cv.Application.structureController = statics.getInstance();\n  }\n});\n"
  ],
  "mappings": ";+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,QAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,QAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,YAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAsG,mBAAAjG,CAAA,EAAAJ,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAE,CAAA,cAAAJ,CAAA,GAAAL,CAAA,CAAAO,CAAA,EAAAE,CAAA,GAAAE,CAAA,GAAAN,CAAA,CAAAD,KAAA,WAAAJ,CAAA,gBAAAL,CAAA,CAAAK,CAAA,KAAAK,CAAA,CAAA6C,IAAA,GAAAtD,CAAA,CAAAe,CAAA,IAAAwE,OAAA,CAAAtC,OAAA,CAAAlC,CAAA,EAAAoC,IAAA,CAAAlD,CAAA,EAAAK,CAAA;AAAA,SAAAgG,kBAAAlG,CAAA,6BAAAJ,CAAA,SAAAD,CAAA,GAAAwG,SAAA,aAAAhB,OAAA,WAAAtF,CAAA,EAAAK,CAAA,QAAAK,CAAA,GAAAP,CAAA,CAAAoG,KAAA,CAAAxG,CAAA,EAAAD,CAAA,YAAA0G,MAAArG,CAAA,IAAAiG,kBAAA,CAAA1F,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAmG,KAAA,EAAAC,MAAA,UAAAtG,CAAA,cAAAsG,OAAAtG,CAAA,IAAAiG,kBAAA,CAAA1F,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAmG,KAAA,EAAAC,MAAA,WAAAtG,CAAA,KAAAqG,KAAA;AAAA;EAAA,IAAAE,aAAA;IAAA;MAAA;QAAA;QAAA;MAAA;MAAA;QAAA;QAAA;MAAA;MAAA;QAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;QAAA;MAAA;IAAA;EAAA;EADAC,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACH,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAC,EAAE,CAACG,KAAK,CAAC9F,MAAM,CAAC,iCAAiC,EAAE;IACjD+F,MAAM,EAAEJ,EAAE,CAACK,IAAI,CAAC/G,MAAM;IACtByB,IAAI,EAAE,WAAW;IACjBuF,SAAS,EAAEC,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,WAAW;IAEtC;AACF;AACA;AACA;AACA;IACEC,SAAS,WAATA,SAASA,CAAA,EAAG;MACVX,EAAA,CAAAK,IAAA,CAAA/G,MAAA,CAAA8E,WAAA,CAAAnD,IAAA;MACA,IAAI,CAAC2F,QAAa,GAChB,yiBAAyiB;MAC3iB,IAAI,CAACC,QAAmB,GAAG;QACzBC,KAAK,EAAE;MACT,CAAC;;MAED;MACAd,EAAE,CAACe,GAAG,CAACC,UAAU,CAACC,WAAW,CAC3BjB,EAAE,CAACkB,IAAI,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,2BAA2B,CAAC,IACrEd,EAAE,CAACe,MAAM,CAACC,WAAW,KAAK,IAAI,GAAG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,CAC3D,CAAC;IACH,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACVC,WAAW,EAAE;QACXC,KAAK,EAAE,2BAA2B;QAClCC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;MACT,CAAC;MAEDC,YAAY,EAAE;QACZH,KAAK,EAAE,QAAQ;QACfI,IAAI,EAAE;MACR,CAAC;MAED;AACJ;AACA;MACIC,SAAS,EAAE;QACTL,KAAK,EAAE,QAAQ;QACfI,IAAI,EAAE;MACR;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACEE,OAAO,EAAE;MACPrB,QAAmB,EAAE,IAAI;MACzBD,QAAa,EAAE,IAAI;MACnBuB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE,IAAI;MAEtBC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;QACjB,OAAO,IAAI,CAAC1B,QAAa;MAC3B,CAAC;MAED2B,oBAAoB,WAApBA,oBAAoBA,CAACC,GAAG,EAAE;QACxB,IAAMC,QAAQ,GAAGlC,EAAE,CAACe,MAAM,CAACoB,cAAc;QACzC,IAAMC,YAAY,GAAGH,GAAG,CAACI,eAAe;QACxC,IAAIC,kBAAkB,GAAG,EAAE;QAC3B,IAAIF,YAAY,CAACG,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;UACjDL,QAAQ,CAACM,OAAO,GAAGJ,YAAY,CAACG,YAAY,CAAC,SAAS,CAAC;UACvDD,kBAAkB,GAAGJ,QAAQ,CAACM,OAAO;QACvC,CAAC,MAAM;UACLF,kBAAkB,GAAG,CACnBtC,EAAE,CAACe,MAAM,CAAC0B,GAAG,CAACD,OAAO,IACrBxC,EAAE,CAACe,MAAM,CAAC2B,MAAM,CAACF,OAAO,IACxB,MAAM,EACNG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB;QACA,IAAIP,YAAY,CAACG,YAAY,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;UACrDL,QAAQ,CAACU,UAAU,GAAGR,YAAY,CAACG,YAAY,CAAC,aAAa,CAAC;UAC9D,IAAI,CAACM,KAAK,CACR,gIACF,CAAC;QACH;QAEA,IAAIT,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;UAC1DL,QAAQ,CAACY,cAAc,GAAGV,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC;UACvE,IAAI,CAACD,kBAAkB,EAAE;YACvBA,kBAAkB,GAAG,MAAM;UAC7B;QACF;QACA,IAAIF,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;UAC1DL,QAAQ,CAACa,cAAc,GAAGX,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC;UACvE,IAAI,CAACD,kBAAkB,EAAE;YACvBA,kBAAkB,GAAG,MAAM;UAC7B;QACF;QACA,IAAIF,YAAY,CAACG,YAAY,CAAC,qBAAqB,CAAC,KAAK,IAAI,EAAE;UAC7DL,QAAQ,CAACc,iBAAiB,GAAGZ,YAAY,CAACG,YAAY,CAAC,qBAAqB,CAAC;UAC7E,IAAI,CAACD,kBAAkB,EAAE;YACvBA,kBAAkB,GAAG,SAAS;UAChC;QACF;QACA,IAAIF,YAAY,CAACG,YAAY,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;UAC/CL,QAAQ,CAACe,WAAW,CAACC,KAAK,GAAGd,YAAY,CAACG,YAAY,CAAC,OAAO,CAAC;QACjE;QACA,IAAIH,YAAY,CAACG,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;UAClDL,QAAQ,CAACe,WAAW,CAACE,QAAQ,GAAGf,YAAY,CAACG,YAAY,CAAC,UAAU,CAAC;QACvE;QACA,IAAIH,YAAY,CAACG,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;UAClDL,QAAQ,CAACe,WAAW,CAACG,QAAQ,GAAGhB,YAAY,CAACG,YAAY,CAAC,UAAU,CAAC;QACvE;;QAEA;QACA,IAAID,kBAAkB,KAAK,SAAS,EAAE;UACpCA,kBAAkB,GAAG,MAAM;QAC7B;QACA,IAAIA,kBAAkB,EAAE;UACtBtC,EAAE,CAACqD,IAAI,CAACC,KAAK,CAACzC,WAAW,CAAC,CAAC,CAAC0C,qBAAqB,CAACjB,kBAAkB,CAAC;QACvE;QACA,OAAO,IAAI;MACb,CAAC;MAEDkB,KAAK,WAALA,KAAKA,CAAA,EAAG;QAAA,IAAAC,KAAA;QACN,IAAMC,OAAO,GAAG1D,EAAE,CAAC2D,EAAE,CAACC,kBAAkB,CAACC,UAAU,CAAC,CAAC;QACrD,IAAIC,MAAM;QACV,IAAMC,QAAQ,GAAG,EAAE;QAAC,IAAAC,KAAA,YAAAA,MAAAlG,IAAA,EACQ;UAC1BgG,MAAM,GAAGJ,OAAO,CAAC5F,IAAI,CAAC;UACtBiG,QAAQ,CAAC1G,IAAI,CAAC,IAAIe,OAAO,CAAC,UAAC6F,GAAG,EAAEC,GAAG,EAAK;YACtCJ,MAAM,CAACN,KAAK,CAAC,IAAI,EAAExD,EAAE,CAACe,MAAM,CAACoB,cAAc,CAACc,WAAW,EAAE,YAAM;cAC7DQ,KAAI,CAACU,KAAK,CAACrG,IAAI,GAAG,YAAY,CAAC;cAC/BkC,EAAE,CAAC2D,EAAE,CAACC,kBAAkB,CAACQ,mBAAmB,CAACtG,IAAI,CAAC;cAClDmG,GAAG,CAAC,CAAC;YACP,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC;QACL,CAAC;QATD,KAAK,IAAMnG,IAAI,IAAI4F,OAAO;UAAAM,KAAA,CAAAlG,IAAA;QAAA;QAU1B,OAAOM,OAAO,CAACiG,GAAG,CAACN,QAAQ,CAAC;MAC9B,CAAC;MAEDO,aAAa,WAAbA,aAAaA,CAACrC,GAAG,EAAE9F,IAAI,EAAE;QACvB,IAAM+F,QAAQ,GAAGlC,EAAE,CAACe,MAAM,CAACoB,cAAc;QACzC,IAAMC,YAAY,GAAGH,GAAG,CAACI,eAAe;QACxCH,QAAQ,CAACqC,eAAe,GAAGnC,YAAY,CAACG,YAAY,CAAC,iBAAiB,CAAC;QACvE,IAAIL,QAAQ,CAACqC,eAAe,EAAE;UAC5BrC,QAAQ,CAACqC,eAAe,GAAGC,QAAQ,CAACtC,QAAQ,CAACqC,eAAe,EAAE,EAAE,CAAC;QACnE;QACArC,QAAQ,CAACuC,eAAe,GAAGrC,YAAY,CAACG,YAAY,CAAC,iBAAiB,CAAC;QAEvE,IAAIH,YAAY,CAACG,YAAY,CAAC,yBAAyB,CAAC,KAAK,IAAI,EAAE;UACjEL,QAAQ,CAACwC,oBAAoB,GAAGtC,YAAY,CAACG,YAAY,CAAC,yBAAyB,CAAC;;UAEpF;UACAvC,EAAE,CAACe,MAAM,CAAC2D,oBAAoB,GAAGxC,QAAQ,CAACwC,oBAAoB;QAChE;QAEA,IAAMC,WAAW,GAAGvC,YAAY,CAACG,YAAY,CAAC,OAAO,CAAC;QACtD,IAAIoC,WAAW,KAAK,IAAI,EAAE;UACxBC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,SAAS,CAACC,GAAG,CAACJ,WAAW,CAAC;QAC3D;QACA,IAAIvC,YAAY,CAACG,YAAY,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;UACtDL,QAAQ,CAAC8C,WAAW,GAAG,GAAG;QAC5B,CAAC,MAAM;UACL9C,QAAQ,CAAC8C,WAAW,GAAGR,QAAQ,CAACpC,YAAY,CAACG,YAAY,CAAC,cAAc,CAAC,CAAC;QAC5E;QACAL,QAAQ,CAAC+C,iBAAiB,GAAG7C,YAAY,CAACG,YAAY,CAAC,sBAAsB,CAAC,KAAK,MAAM;QACzF,IAAIH,YAAY,CAACG,YAAY,CAAC,iBAAiB,CAAC,KAAK,IAAI,EAAE;UACzDL,QAAQ,CAACgD,cAAc,GAAG9C,YAAY,CAACG,YAAY,CAAC,iBAAiB,CAAC;QACxE;QACA,IAAIH,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC,KAAK,IAAI,EAAE;UAC1DL,QAAQ,CAACiD,cAAc,GAAG/C,YAAY,CAACG,YAAY,CAAC,kBAAkB,CAAC;QACzE;MACF,CAAC;MAEK6C,QAAQ,WAARA,QAAQA,CAACnD,GAAG,EAAE;QAAA,IAAAoD,MAAA;QAAA,OAAAlG,iBAAA,cAAAxG,mBAAA,GAAAoF,IAAA,UAAAuH,QAAA;UAAA,IAAApD,QAAA,EAAAqD,UAAA;UAAA,OAAA5M,mBAAA,GAAAuB,IAAA,UAAAsL,SAAAC,QAAA;YAAA,kBAAAA,QAAA,CAAAjH,IAAA,GAAAiH,QAAA,CAAA5I,IAAA;cAAA;gBACZqF,QAAQ,GAAGlC,EAAE,CAACe,MAAM,CAACoB,cAAc;gBACnCoD,UAAU,GAAG,IAAIvF,EAAE,CAAC0F,MAAM,CAACC,IAAI,CAACC,UAAU,CAAC,CAAC,EAElD;gBACA1D,QAAQ,CAAC2D,aAAa,GAAG3D,QAAQ,CAAC2D,aAAa,CAACC,MAAM,CAACP,UAAU,CAACQ,YAAY,CAAC9D,GAAG,CAAC,CAAC;;gBAEpF;gBAAAwD,QAAA,CAAA5I,IAAA;gBAAA,OACM0I,UAAU,CAACS,KAAK,CAAC/D,GAAG,CAAC;cAAA;gBAC3BoD,MAAI,CAAClB,KAAK,CAAC,kBAAkB,CAAC;cAAC;cAAA;gBAAA,OAAAsB,QAAA,CAAA9G,IAAA;YAAA;UAAA,GAAA2G,OAAA;QAAA;MACjC,CAAC;MAED;AACJ;AACA;AACA;MACIW,QAAQ,WAARA,QAAQA,CAAChE,GAAG,EAAE;QACZjC,EAAE,CAACW,IAAI,CAACuF,YAAY,CAACrF,WAAW,CAAC,CAAC,CAACsF,eAAe,CAAC,wBAAwB,EAAE,YAAM;UACjFnG,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAACC,aAAa,CAACC,oBAAoB,CAAC,CAAC;QAClE,CAAC,EAAE,IAAI,CAAC;QAER,IAAI,CAACtG,EAAE,CAACe,MAAM,CAACwF,SAAS,EAAE;UACxB,IAAI,CAACpC,KAAK,CAAC,gBAAgB,CAAC;UAC5B,IAAMqC,IAAI,GAAGvE,GAAG,CAAC4C,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;;UAEhD,IAAI,CAAC4B,YAAY,CAACD,IAAI,EAAE,IAAI,CAAC;UAC7B,IAAI,CAACrC,KAAK,CAAC,YAAY,CAAC;UACxB1E,EAAE,CAAC8B,KAAK,CAACmF,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,kBAAkB,CAAC;UACvD,IAAI,CAACzC,KAAK,CAAC,eAAe,CAAC;QAC7B;QACA,IAAI,CAACA,KAAK,CAAC,oBAAoB,CAAC;QAChC1E,EAAE,CAAC8B,KAAK,CAACmF,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,2BAA2B,CAAC;QAChE5G,EAAE,CAAC6G,cAAc,CAAChG,WAAW,CAAC,CAAC,CAACiG,cAAc,CAAC,IAAI,CAAC;QAEpD,IAAI,CAACtD,KAAK,CAAC,CAAC,CAACxH,IAAI,CAAC,YAAM,CAIxB,CAAC,CAAC;QAEF,IAAI,CAAC+K,UAAU,CAAC,CAAC;MACnB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIN,YAAY,WAAZA,YAAYA,CAACD,IAAI,EAAEQ,IAAI,EAAEC,OAAO,EAAEzM,IAAI,EAAE;QACtCwF,EAAE,CAAC0F,MAAM,CAACC,IAAI,CAACuB,YAAY,CAACC,eAAe,CAACX,IAAI,CAAC;QACjD,IAAIY,UAAU,GAAGpH,EAAE,CAAC0F,MAAM,CAACC,IAAI,CAACuB,YAAY,CAAClB,KAAK,CAACQ,IAAI,EAAEQ,IAAI,EAAEC,OAAO,EAAEzM,IAAI,CAAC;QAE7E,IAAI,CAAC6M,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,EAAE;UAC9BA,UAAU,GAAG,CAACA,UAAU,CAAC;QAC3B;QACA,IAAI9N,CAAC,GAAG,CAAC;QACT,IAAMsB,CAAC,GAAGwM,UAAU,CAAC1J,MAAM;QAC3B,OAAOpE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAE,EAAE;UACjB,IAAM+J,IAAI,GAAG+D,UAAU,CAAC9N,CAAC,CAAC;UAC1B,IAAMiO,MAAM,GAAGvH,EAAE,CAACC,EAAE,CAACC,SAAS,CAACsH,aAAa,CAACC,cAAc,CAACpE,IAAI,CAACqE,MAAM,EAAErE,IAAI,CAAC;;UAE9E;UACA,IAAIkE,MAAM,EAAE;YACVA,MAAM,CAACI,YAAY,CAAC,CAAC;UACvB;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,UAAU,WAAVA,UAAUA,CAACC,KAAK,EAAEZ,OAAO,EAAEa,UAAU,EAAEC,KAAK,EAAE;QAC5C,IAAI,CAACF,KAAK,EAAE;UACV,OAAO,EAAE;QACX;QACA,IAAIG,OAAO,GACT,cAAc,IACbF,UAAU,KAAKG,SAAS,GAAGH,UAAU,GAAG,OAAO,CAAC,GACjD,GAAG,IACFC,KAAK,GAAG,UAAU,GAAGA,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,GACvC,GAAG;QAELV,KAAK,CAACrO,SAAS,CAACyC,OAAO,CAACf,IAAI,CAACmN,KAAK,CAACK,UAAU,EAAE,UAAUC,IAAI,EAAE;UAC7D,IAAIA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,IAAIH,IAAI,CAACI,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;YACjFR,OAAO,IAAIhI,EAAE,CAACyI,WAAW,CAAC5H,WAAW,CAAC,CAAC,CAAC6H,cAAc,CACpDP,IAAI,CAAC5F,YAAY,CAAC,MAAM,CAAC,EACzB4F,IAAI,CAAC5F,YAAY,CAAC,MAAM,CAAC,EACzB4F,IAAI,CAAC5F,YAAY,CAAC,SAAS,CAAC,IAAI0E,OAAO,EACvCkB,IAAI,CAAC5F,YAAY,CAAC,OAAO,CAAC,EAC1B4F,IAAI,CAAC5F,YAAY,CAAC,SAAS,CAAC,EAC5B,EAAE,EACF,IACF,CAAC;UACH,CAAC,MAAM,IAAI4F,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACM,SAAS,EAAE;YAC3CX,OAAO,IAAIG,IAAI,CAACS,WAAW;UAC7B;QACF,CAAC,CAAC;QACF,OAAOZ,OAAO,GAAG,QAAQ;MAC3B,CAAC;MACDa,QAAQ,WAARA,QAAQA,CAACC,OAAO,EAAEC,UAAU,EAAE;QAC5B,IAAIhQ,MAAM,CAACC,SAAS,CAACE,cAAc,CAACwB,IAAI,CAAC,IAAI,CAAC4F,QAAmB,EAAEwI,OAAO,CAAC,EAAE;UAC3E,IAAI,IAAI,CAACxI,QAAmB,CAACwI,OAAO,CAAC,KAAK,IAAI,EAAE;YAC9C,IAAIC,UAAU,EAAE;cACd,OACEhQ,MAAM,CAACC,SAAS,CAACE,cAAc,CAACwB,IAAI,CAAC,IAAI,CAAC4F,QAAmB,CAACwI,OAAO,CAAC,EAAEC,UAAU,CAAC,IACnF,IAAI,CAACzI,QAAmB,CAACwI,OAAO,CAAC,CAACC,UAAU,CAAC,KAAK,IAAI;YAE1D;YACA,OAAO,IAAI;UACb;QACF;QACA,OAAO,KAAK;MACd,CAAC;MAEDC,mBAAmB,WAAnBA,mBAAmBA,CAACC,WAAW,EAAE;QAC/B,IAAMC,kBAAkB,GAAG,CAAC,CAAC;QAC7B,IAAMC,UAAU,GAAGnJ,EAAE,CAACC,EAAE,CAACC,SAAS,CAACsH,aAAa,CAAC4B,eAAe,CAACpJ,EAAE,CAACe,MAAM,CAACsI,WAAW,CAAC;QAEvFF,UAAU,CAACG,eAAe,CAAC,CAAC,CAAC7N,OAAO,CAAC,UAAU8N,KAAK,EAAE;UACpD,IAAMC,OAAO,GAAGD,KAAK,CAACE,UAAU,GAAGF,KAAK,CAACE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;UAC1D,KAAK,IAAIC,IAAI,IAAIF,OAAO,EAAE;YACxB,IAAIzQ,MAAM,CAACC,SAAS,CAACE,cAAc,CAACwB,IAAI,CAAC8O,OAAO,EAAEE,IAAI,CAAC,IAAIA,IAAI,CAACC,WAAW,KAAKV,WAAW,EAAE;cAC3FC,kBAAkB,CAACQ,IAAI,CAAC,GAAG,CAAC;YAC9B;UACF;QACF,CAAC,EAAE,IAAI,CAAC;QACR,OAAO3Q,MAAM,CAACsF,IAAI,CAAC6K,kBAAkB,CAAC;MACxC,CAAC;MAEDU,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;QACrB,IAAI,CAAC,IAAI,CAAC9H,gBAAgB,EAAE;UAC1B,IAAI,CAACA,gBAAgB,GAAG,IAAI9B,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACkE,UAAU,CAACC,gBAAgB,CAAC,CAAC;QAChF;MACF,CAAC;MAED/C,UAAU,WAAVA,UAAUA,CAAA,EAAG;QACX,IAAI,CAAC6C,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAAC5J,EAAE,CAACe,MAAM,CAACsI,WAAW,EAAE;UAC1B,IAAI,CAACU,QAAmB,CAAC,CAAC;QAC5B;QACA,IAAI3I,WAAW,GAAGpB,EAAE,CAACC,EAAE,CAACC,SAAS,CAACsH,aAAa,CAAC4B,eAAe,CAACpJ,EAAE,CAACe,MAAM,CAACsI,WAAW,CAAC;QAEtF,IAAIjI,WAAW,EAAE;UACf,IAAI,CAAC4I,cAAc,CAAC5I,WAAW,CAAC;QAClC,CAAC,MAAM;UACL;UACApB,EAAE,CAACe,MAAM,CAACsI,WAAW,GAAG,KAAK;UAC7BjI,WAAW,GAAGpB,EAAE,CAACC,EAAE,CAACC,SAAS,CAACsH,aAAa,CAAC4B,eAAe,CAACpJ,EAAE,CAACe,MAAM,CAACsI,WAAW,CAAC;QACpF;QAEArJ,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAAC6D,OAAO,CAACC,aAAa,CAAC,CAAC;QACnDlK,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAAC6D,OAAO,CAACE,iBAAiB,CAAC,GAAG,GAAGnK,EAAE,CAACe,MAAM,CAACsI,WAAW,EAAE,IAAI,CAAC;QAExF,IAAI,CAACzH,WAAW,GAAG,IAAI5B,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACkE,UAAU,CAACO,WAAW,CAAC,CAAC;QACpE,IAAI,IAAI,CAACpF,WAAW,KAAKiD,SAAS,EAAE;UAClC,IAAI,CAACrG,WAAW,CAACyI,QAAQ,CAAC,IAAI,CAACrF,WAAW,CAAC;QAC7C;QAEA,IAAIvF,EAAE,CAACkB,IAAI,CAAC2J,YAAY,CAAC,YAAY;UACnC,IAAI,CAACC,YAAY,CAACvK,EAAE,CAACe,MAAM,CAACsI,WAAW,EAAE,CAAC,CAAC;QAC7C,CAAC,EAAE,IAAI,CAAC,CAACmB,QAAQ,CAAC,CAAC;;QAEnB;QACA5F,QAAQ,CAAC6F,gBAAgB,CAAC,OAAO,CAAC,CAAChP,OAAO,CAAC,UAAU0M,IAAI,EAAE;UACzD,IAAI,CAACuC,eAAe,CAACvC,IAAI,EAAE,CAAC,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC;QAERvD,QAAQ,CAAC6F,gBAAgB,CAAC,OAAO,CAAC,CAAChP,OAAO,CAACuE,EAAE,CAACW,IAAI,CAACgK,SAAS,CAACC,iBAAiB,EAAE5K,EAAE,CAACW,IAAI,CAACgK,SAAS,CAAC;QAClG/F,QAAQ,CAAC6F,gBAAgB,CAAC,UAAU,CAAC,CAAChP,OAAO,CAAC,UAAU0M,IAAI,EAAE;UAC5DA,IAAI,CAACrD,SAAS,CAAC+F,MAAM,CAAC,SAAS,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC;QAERpL,EAAE,CAACK,IAAI,CAACgL,IAAI,CAACC,cAAc,CAAC,CAAC,CAACC,WAAW,CAAC,cAAc,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;MACxF,CAAC;MAEDP,eAAe,WAAfA,eAAeA,CAACvC,IAAI,EAAE+C,OAAO,EAAE;QAAA,IAAAC,MAAA;QAC7B,IAAIhD,IAAI,IAAI,OAAOA,IAAI,CAACiD,cAAc,KAAK,UAAU,EAAE;UACrD,IAAI;YACF,IAAMC,GAAG,GAAGlD,IAAI,CAACiD,cAAc,CAAC,CAAC;YACjC,IAAIC,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACC,UAAU,KAAK,UAAU,EAAE;cACjDnD,IAAI,CAACoD,MAAM,GAAGvL,EAAE,CAACC,EAAE,CAACuL,WAAW,CAACC,GAAG;YACrC,CAAC,MAAM;cACLzL,EAAE,CAACC,EAAE,CAACuL,WAAW,CAACC,GAAG,CAAC/Q,IAAI,CAACyN,IAAI,CAAC;YAClC;UACF,CAAC,CAAC,OAAOvP,CAAC,EAAE;YACV,IAAIA,CAAC,CAACkF,IAAI,KAAK,mBAAmB,EAAE;cAClC,IAAIoN,OAAO,IAAI,CAAC,EAAE;gBAChBA,OAAO,EAAE;gBACTQ,MAAM,CAACC,qBAAqB,CAAC,YAAM;kBACjCR,MAAI,CAACT,eAAe,CAACvC,IAAI,EAAE+C,OAAO,CAAC;gBACrC,CAAC,CAAC;cACJ,CAAC,MAAM;gBACL,IAAI,CAACrI,KAAK,CAACjK,CAAC,CAAC;cACf;YACF,CAAC,MAAM;cACL,IAAI,CAACiK,KAAK,CAACjK,CAAC,CAAC;YACf;UACF;QACF;MACF,CAAC;MAEDgT,YAAY,WAAZA,YAAYA,CAAA,EAAG;QACb,IAAI,CAACrB,YAAY,CAAC,CAAC;MACrB,CAAC;MAEDsB,gBAAgB,WAAhBA,gBAAgBA,CAACC,MAAM,EAAE;QACvB,IAAIA,MAAM,EAAE;UACV,IAAI,CAACvB,YAAY,CAACuB,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;QACpC;MACF,CAAC;MAEDvB,YAAY,WAAZA,YAAYA,CAACwB,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAE;QACvC,IAAIhE,SAAS,KAAK8D,MAAM,EAAE;UACxBA,MAAM,GAAG/L,EAAE,CAACe,MAAM,CAACoB,cAAc,CAACsC,eAAe;QACnD;QACA,IAAMyH,OAAO,GAAG,IAAI,CAACC,eAAe,CAACJ,MAAM,CAAC;QAC5C,IAAIG,OAAO,KAAK,IAAI,EAAE;UACpB;QACF;QACA,IAAIlM,EAAE,CAACe,MAAM,CAACqL,aAAa,KAAKF,OAAO,EAAE;UACvC;QACF;QACAlM,EAAE,CAACe,MAAM,CAACqL,aAAa,GAAGF,OAAO;QACjClM,EAAE,CAACe,MAAM,CAACsL,QAAQ,GAAGH,OAAO;QAE5B,IAAIjE,SAAS,KAAK+D,KAAK,EAAE;UACvBA,KAAK,GAAGhM,EAAE,CAACe,MAAM,CAACoB,cAAc,CAAC6C,WAAW;QAC9C;QAEA,IAAIhF,EAAE,CAACe,MAAM,CAACuL,gBAAgB,IAAI7M,EAAE,CAACK,IAAI,CAACyM,WAAW,CAACC,GAAG,CAAC,oBAAoB,CAAC,EAAE;UAC/EC,YAAY,CAACC,QAAQ,GAAGR,OAAO;QACjC;;QAEA;QACA,IAAID,WAAW,KAAKhE,SAAS,EAAE;UAC7B,IAAM0E,QAAQ,GAAG/H,QAAQ,CAAC6F,gBAAgB,CAAC,GAAG,GAAGyB,OAAO,GAAG,KAAK,CAAC;UACjE,IAAIU,SAAS,GAAG,WAAW;UAC3B,IAAID,QAAQ,CAACjP,MAAM,EAAE;YACnBkP,SAAS,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAC/D,WAAW,GAAG,KAAK,GAAGgE,SAAS;UACzD;UACAnN,EAAE,CAACe,GAAG,CAACqM,OAAO,CAAChM,WAAW,CAAC,CAAC,CAACiM,YAAY,CAACZ,OAAO,EAAEU,SAAS,CAAC;QAC/D;QAEA,IAAI,CAAChL,WAAW,CAACmL,MAAM,CAACb,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;;QAEzC,IAAI,CAAClK,gBAAgB,CAACkL,iBAAiB,CAACd,OAAO,CAAC;QAChD,IAAI,CAACe,gBAAgB,CAAC,CAAC;MACzB,CAAC;MAEDhC,gBAAgB,WAAhBA,gBAAgBA,CAACiC,EAAE,EAAE;QACnB,IAAMC,GAAG,GAAG1N,EAAE,CAACK,IAAI,CAACgL,IAAI,CAACC,cAAc,CAAC,CAAC;QACzC,IAAIoC,GAAG,CAACC,OAAO,CAAC,CAAC,EAAE;UACjBpN,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAACC,aAAa,CAACgH,gBAAgB,CAAC,CAAC;UAC5D,IAAI,CAACJ,gBAAgB,CAAC,CAAC;QACzB;MACF,CAAC;MAEDA,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;QACjB,IAAIxN,EAAE,CAACK,IAAI,CAACgL,IAAI,CAACC,cAAc,CAAC,CAAC,CAACuC,SAAS,CAAC,CAAC,EAAE;UAC7C,QAAQ,IAAI,CAACxL,gBAAgB,CAACyL,OAAO,CAACC,IAAI,CAACC,OAAO;YAChD,KAAK,IAAI;YACT,KAAK,IAAI;cACP,IAAI,CAAC3L,gBAAgB,CAAC4L,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;cAClD;YAEF,KAAK,KAAK;cACR,IAAI,CAAC5L,gBAAgB,CAAC4L,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;UACrD;QACF,CAAC,MAAM;UACL,IAAI,CAAC5L,gBAAgB,CAAC4L,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACnD;MACF,CAAC;MAED;AACJ;AACA;MACIC,eAAe,WAAfA,eAAeA,CAAA,EAAG;QAChB,IAAI,CAACC,gBAAgB,CAAC,CAAC;QACvB5N,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAAC6D,OAAO,CAAC4D,2BAA2B,GAAG,CAAC,CAAC;QACpE7N,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAAC6D,OAAO,CAAC6D,4BAA4B,GAAG,CAAC,CAAC;QACrE9N,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAACS,MAAM,CAAC6D,OAAO,CAAC8D,2BAA2B,GAAG,IAAI;MACxE,CAAC;MAEKC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;QAAA,IAAAC,MAAA;QAAA,OAAA9O,iBAAA,cAAAxG,mBAAA,GAAAoF,IAAA,UAAAmQ,SAAA;UAAA,OAAAvV,mBAAA,GAAAuB,IAAA,UAAAiU,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAA5P,IAAA,GAAA4P,SAAA,CAAAvR,IAAA;cAAA;gBAAA,IAClBmD,EAAE,CAACe,MAAM,CAACsI,WAAW;kBAAA+E,SAAA,CAAAvR,IAAA;kBAAA;gBAAA;gBAAAuR,SAAA,CAAAvR,IAAA;gBAAA,OAClBoR,MAAI,CAAClE,QAAmB,CAAC,CAAC;cAAA;gBAAA,OAAAqE,SAAA,CAAA1R,MAAA,WAE3BsD,EAAE,CAACe,MAAM,CAACsI,WAAW;cAAA;cAAA;gBAAA,OAAA+E,SAAA,CAAAzP,IAAA;YAAA;UAAA,GAAAuP,QAAA;QAAA;MAC9B,CAAC;MAEKnE,QAAmB,WAAnBA,QAAmBA,CAAA,EAAG;QAAA,IAAAsE,MAAA;QAAA,OAAAlP,iBAAA,cAAAxG,mBAAA,GAAAoF,IAAA,UAAAuQ,SAAA;UAAA,IAAAC,SAAA,EAAAC,GAAA;UAAA,OAAA7V,mBAAA,GAAAuB,IAAA,UAAAuU,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAlQ,IAAA,GAAAkQ,SAAA,CAAA7R,IAAA;cAAA;gBACtB0R,SAAS,GAAG,KAAK;gBACrB,IAAIvO,EAAE,CAACe,MAAM,CAACwN,SAAS,EAAE;kBACvBA,SAAS,GAAGvO,EAAE,CAACe,MAAM,CAACwN,SAAS;kBAC/B,IAAI9O,EAAE,CAACK,IAAI,CAACyM,WAAW,CAACC,GAAG,CAAC,oBAAoB,CAAC,KAAK,IAAI,EAAE;oBAC1D,IAAI+B,SAAS,KAAK,UAAU,EAAE;sBAC5BA,SAAS,GAAG9B,YAAY,CAACkC,OAAO,CAAC,UAAU,CAAC;sBAC5C3O,EAAE,CAACe,MAAM,CAACuL,gBAAgB,GAAG,IAAI;sBACjC,IAAI,OAAOiC,SAAS,KAAK,QAAQ,IAAIA,SAAS,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;wBACrEL,SAAS,GAAG,KAAK,CAAC,CAAC;sBACrB;oBACF,CAAC,MAAM,IAAIA,SAAS,KAAK,YAAY,EAAE;sBACrC9B,YAAY,CAACoC,UAAU,CAAC,UAAU,CAAC;sBACnCN,SAAS,GAAG,KAAK;sBACjBvO,EAAE,CAACe,MAAM,CAACuL,gBAAgB,GAAG,KAAK;oBACpC;kBACF;gBACF,CAAC,MAAM;kBACCkC,GAAG,GAAG/O,EAAE,CAACkB,IAAI,CAACmO,GAAG,CAACC,QAAQ,CAACrD,MAAM,CAACsD,QAAQ,CAACC,IAAI,CAAC;kBACtD,IAAIT,GAAG,CAAC1C,MAAM,IAAI0C,GAAG,CAAC1C,MAAM,CAACoD,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;oBACtDX,SAAS,GAAGC,GAAG,CAAC1C,MAAM;kBACxB;gBACF;gBAAC,MACGyC,SAAS,CAACY,KAAK,CAAC,cAAc,CAAC,KAAK,IAAI;kBAAAT,SAAA,CAAA7R,IAAA;kBAAA;gBAAA;gBAC1CmD,EAAE,CAACe,MAAM,CAACsI,WAAW,GAAGkF,SAAS;gBAAC,OAAAG,SAAA,CAAAhS,MAAA,WAC3B6R,SAAS;cAAA;gBAAA,OAAAG,SAAA,CAAAhS,MAAA,WAGX,IAAI0B,OAAO,CAAC,UAAAtC,OAAO,EAAI;kBAC5B2D,EAAE,CAAC8B,KAAK,CAACmF,OAAO,CAACC,GAAG,CAACyI,SAAS,CAAC,2BAA2B,EAAE,YAAM;oBAChEpP,EAAE,CAACe,MAAM,CAACsI,WAAW,GAAGgF,MAAI,CAAClC,eAAe,CAACoC,SAAS,CAAC,IAAI,KAAK;oBAChEzS,OAAO,CAACkE,EAAE,CAACe,MAAM,CAACsI,WAAW,CAAC;kBAChC,CAAC,CAAC;gBACJ,CAAC,CAAC;cAAA;cAAA;gBAAA,OAAAqF,SAAA,CAAA/P,IAAA;YAAA;UAAA,GAAA2P,QAAA;QAAA;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACInC,eAAe,WAAfA,eAAeA,CAACkD,SAAS,EAAErI,IAAI,EAAE;QAC/B,IAAIqI,SAAS,KAAK,IAAI,EAAE;UACtB,OAAO,IAAI;QACb;QACA,IAAIA,SAAS,CAACF,KAAK,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;UAC5C;UACA,OAAOE,SAAS;QAClB;QACA,IAAIrI,IAAI,KAAKiB,SAAS,EAAE;UACtB,IAAMqH,KAAK,GAAG,IAAI,CAACC,YAAY,CAACvI,IAAI,CAAC;UACrC,IAAIsI,KAAK,KAAK,IAAI,EAAE;YAClB;YACA,IAAI,CAACzM,KAAK,CAAC,SAAS,GAAGmE,IAAI,GAAG,0CAA0C,CAAC;YAEzE,OAAO,IAAI;UACb;UACA,OAAO,IAAI,CAACwI,eAAe,CAACH,SAAS,EAAEC,KAAK,CAAC;QAC/C;QACA,OAAO,IAAI,CAACE,eAAe,CAACH,SAAS,CAAC;MACxC,CAAC;MAEDE,YAAY,WAAZA,YAAYA,CAACvI,IAAI,EAAEyI,YAAY,EAAE;QAC/B,IAAIC,UAAU,GAAG,IAAI;QACrB,IAAIC,KAAK,GAAG3I,IAAI,CAAC4I,OAAO,CAAC,GAAG,CAAC;QAC7B,IAAID,KAAK,IAAI,CAAC,EAAE;UACd;UACA,OAAO3I,IAAI,CAAC4H,MAAM,CAACe,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;YACzC,IAAM9S,IAAI,GAAGmK,IAAI,CAAC4I,OAAO,CAAC,GAAG,EAAED,KAAK,GAAG,CAAC,CAAC;YACzC,IAAI9S,IAAI,IAAI,CAAC,EAAE;cACb8S,KAAK,GAAG9S,IAAI;YACd;UACF;QACF;QACA;QACA,IAAI8S,KAAK,IAAI,CAAC,EAAE;UACd;UACA,IAAME,cAAc,GAAG7I,IAAI,CAAC4H,MAAM,CAAC,CAAC,EAAEe,KAAK,CAAC;UAC5CD,UAAU,GAAG,IAAI,CAACF,eAAe,CAACK,cAAc,EAAEJ,YAAY,CAAC;UAC/DzI,IAAI,GAAGA,IAAI,CAAC4H,MAAM,CAACiB,cAAc,CAACnS,MAAM,GAAG,CAAC,CAAC;UAC7CgS,UAAU,GAAG,IAAI,CAACH,YAAY,CAACvI,IAAI,EAAE0I,UAAU,CAAC;UAChD;UACA,OAAOA,UAAU;QACnB;QACA;QACAA,UAAU,GAAG,IAAI,CAACF,eAAe,CAACxI,IAAI,EAAEyI,YAAY,CAAC;QACrD,OAAOC,UAAU;MACnB,CAAC;MAEDF,eAAe,WAAfA,eAAeA,CAACH,SAAS,EAAEC,KAAK,EAAE;QAChC,IAAIpD,OAAO,GAAG,IAAI;QAClB,IAAImD,SAAS,CAACF,KAAK,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;UAC5C;UACA,OAAOE,SAAS;QAClB;QACA;QACA;QACAA,SAAS,GAAGrP,EAAE,CAACW,IAAI,CAACmP,MAAM,CAACC,kBAAkB,CAACV,SAAS,CAAC;QACxD;QACAA,SAAS,GAAGW,SAAS,CAACX,SAAS,CAACY,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;QAEpD;QACA,IAAMC,QAAQ,GAAGZ,KAAK,KAAKrH,SAAS,IAAIqH,KAAK,KAAK,IAAI,GAAG,aAAa,GAAGA,KAAK,GAAG,OAAO,GAAG,UAAU;QACrG,IAAIa,KAAK,GAAGvL,QAAQ,CAAC6F,gBAAgB,CAACyF,QAAQ,CAAC;QAC/CC,KAAK,GAAG9I,KAAK,CAAC+I,IAAI,CAACD,KAAK,CAAC,CAACE,MAAM,CAAC,UAAU1V,CAAC,EAAE;UAC5C,OAAOA,CAAC,CAACiO,WAAW,KAAKyG,SAAS;QACpC,CAAC,CAAC;QACF,IAAIc,KAAK,CAACzS,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC4S,cAAc,CAAC,CAAC,KAAK,IAAI,EAAE;UACtD,IAAMlE,aAAa,GAAG,IAAI,CAACkE,cAAc,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;UACrD;UACA,IAAIC,QAAQ,GAAG,IAAI;UACnBL,KAAK,CAACM,IAAI,CAAC,UAAUjK,IAAI,EAAE;YACzB,IAAMtL,CAAC,GAAG8E,EAAE,CAACW,IAAI,CAAC+P,IAAI,CAACC,UAAU,CAACnK,IAAI,EAAE,OAAO,CAAC;YAChD,IAAIA,IAAI,CAACoK,SAAS,KAAKvB,SAAS,EAAE;cAChC,IAAMwB,GAAG,GAAG3V,CAAC,CAACqH,YAAY,CAAC,IAAI,CAAC;cAChC,IAAIsO,GAAG,CAACnT,MAAM,GAAG0O,aAAa,CAAC1O,MAAM,EAAE;gBACrC;gBACA,IAAI0O,aAAa,CAACwD,OAAO,CAACiB,GAAG,CAAC,KAAK,CAAC,EAAE;kBACpC;kBACA3E,OAAO,GAAG2E,GAAG;kBACbL,QAAQ,GAAG,KAAK;kBAChB;kBACA,OAAO,IAAI;gBACb;cACF,CAAC,MAAM,IAAIK,GAAG,CAACjB,OAAO,CAACxD,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC3C;gBACAF,OAAO,GAAG2E,GAAG;gBACbL,QAAQ,GAAG,KAAK;gBAChB;gBACA,OAAO,IAAI;cACb;YACF;YACA,OAAO,KAAK;UACd,CAAC,EAAE,IAAI,CAAC;UACR,IAAIA,QAAQ,EAAE;YACZ;YACAL,KAAK,CAACM,IAAI,CAAC,UAAUjK,IAAI,EAAE;cACzB,IAAIA,IAAI,CAACoK,SAAS,KAAKvB,SAAS,EAAE;gBAChCnD,OAAO,GAAGlM,EAAE,CAACW,IAAI,CAAC+P,IAAI,CAACC,UAAU,CAACnK,IAAI,EAAE,OAAO,CAAC,CAACjE,YAAY,CAAC,IAAI,CAAC;;gBAEnE;gBACA,OAAO,IAAI;cACb;cACA,OAAO,KAAK;YACd,CAAC,CAAC;UACJ;QACF,CAAC,MAAM;UACL4N,KAAK,CAACM,IAAI,CAAC,UAAUjK,IAAI,EAAE;YACzB,IAAIA,IAAI,CAACoK,SAAS,KAAKvB,SAAS,EAAE;cAChCnD,OAAO,GAAGlM,EAAE,CAACW,IAAI,CAAC+P,IAAI,CAACC,UAAU,CAACnK,IAAI,EAAE,OAAO,CAAC,CAACjE,YAAY,CAAC,IAAI,CAAC;cACnE;cACA,OAAO,IAAI;YACb;YACA,OAAO,KAAK;UACd,CAAC,CAAC;QACJ;QAEA,IAAI2J,OAAO,KAAK,IAAI,IAAIA,OAAO,CAACiD,KAAK,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;UAC9D,OAAOjD,OAAO;QAChB;QACA;QACA,OAAO,IAAI;MACb,CAAC;MAED4E,iBAAiB,WAAjBA,iBAAiBA,CAAA,EAAG;QAClB,IAAI9Q,EAAE,CAACe,MAAM,CAACgQ,aAAa,IAAIrF,MAAM,CAACsF,MAAM,EAAE;UAC5CA,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC;UACrCD,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEjR,EAAE,CAACe,MAAM,CAACmQ,SAAS,CAAC,CAAC,CAAC;QACnD;MACF;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MACT1R,EAAE,CAACK,IAAI,CAACgL,IAAI,CAACC,cAAc,CAAC,CAAC,CAACqG,cAAc,CAAC,cAAc,EAAE,IAAI,CAACnG,gBAAgB,EAAE,IAAI,CAAC;IAC3F,CAAC;IAEDoG,KAAK,WAALA,KAAKA,CAACC,OAAO,EAAE;MACbtR,EAAE,CAACuR,WAAW,CAACC,mBAAmB,GAAGF,OAAO,CAACzQ,WAAW,CAAC,CAAC;IAC5D;EACF,CAAC,CAAC;EArqBFb,EAAE,CAACC,EAAE,CAACC,SAAS,CAACyF,IAAI,CAAC8L,UAAU,CAACjS,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}