{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "__supportedFeatures",
    "cache",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Config",
    "forceReload",
    "Date",
    "now",
    "properties",
    "currentPage",
    "check",
    "nullable",
    "event",
    "renderTarget",
    "init",
    "namespace",
    "members",
    "main_scroll",
    "old_scroll",
    "pagePartsHandler",
    "getHtmlStructure",
    "parseBackendSettings",
    "xml",
    "settings",
    "configSettings",
    "pagesElement",
    "documentElement",
    "defaultBackendName",
    "getAttribute",
    "backend",
    "URL",
    "server",
    "split",
    "backendUrl",
    "backendKnxdUrl",
    "backendMQTTUrl",
    "backendOpenHABUrl",
    "credentials",
    "token",
    "username",
    "password",
    "data",
    "Model",
    "setDefaultBackendName",
    "login",
    "_this",
    "clients",
    "io",
    "BackendConnections",
    "getClients",
    "client",
    "_loop",
    "debug",
    "startInitialRequest",
    "parseSettings",
    "screensave_time",
    "parseInt",
    "screensave_page",
    "maxMobileScreenWidth",
    "globalClass",
    "document",
    "querySelector",
    "classList",
    "add",
    "scrollSpeed",
    "bindClickToWidget",
    "defaultColumns",
    "minColumnWidth",
    "preParse",
    "_this2",
    "_callee",
    "metaParser",
    "_callee$",
    "_context",
    "parser",
    "pure",
    "MetaParser",
    "pluginsToLoad",
    "concat",
    "parsePlugins",
    "parse",
    "createUI",
    "ScriptLoader",
    "addListenerOnce",
    "layout",
    "ResizeHandler",
    "invalidateScreensize",
    "cacheUsed",
    "page",
    "_createPages",
    "message",
    "Bus",
    "dispatchByName",
    "TemplateEngine",
    "setDomFinished",
    "initLayout",
    "path",
    "flavour",
    "WidgetParser",
    "renderTemplates",
    "parsedData",
    "Array",
    "isArray",
    "l",
    "widget",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "getDomString",
    "parseLabel",
    "label",
    "labelClass",
    "style",
    "ret_val",
    "childNodes",
    "elem",
    "nodeType",
    "Node",
    "ELEMENT_NODE",
    "nodeName",
    "toLowerCase",
    "IconHandler",
    "getIconElement",
    "TEXT_NODE",
    "textContent",
    "supports",
    "feature",
    "subfeature",
    "getInitialAddresses",
    "backendName",
    "startPageAddresses",
    "pageWidget",
    "getInstanceById",
    "initialPage",
    "getChildWidgets",
    "child",
    "address",
    "getAddress",
    "addr",
    "backendType",
    "initPagePartsHandler",
    "navigation",
    "PagePartsHandler",
    "__detectInitialPage",
    "setCurrentPage",
    "Manager",
    "adjustColumns",
    "applyColumnWidths",
    "PageHandler",
    "setSpeed",
    "DeferredCall",
    "scrollToPage",
    "schedule",
    "querySelectorAll",
    "_runTrickOMatic",
    "IconTools",
    "fillRecoloredIcon",
    "remove",
    "Init",
    "getApplication",
    "addListener",
    "_onMobileChanged",
    "retries",
    "_this3",
    "getSVGDocument",
    "svg",
    "readyState",
    "onload",
    "TrickOMatic",
    "run",
    "e",
    "window",
    "requestAnimationFrame",
    "doScreenSave",
    "onHistoryRequest",
    "anchor",
    "target",
    "speed",
    "skipHistory",
    "page_id",
    "getPageIdByPath",
    "currentPageId",
    "treePath",
    "rememberLastPage",
    "Environment",
    "get",
    "localStorage",
    "lastpage",
    "headline",
    "pageTitle",
    "History",
    "addToHistory",
    "seekTo",
    "initializeNavbars",
    "_maintainNavbars",
    "ev",
    "app",
    "isReady",
    "invalidateNavbar",
    "getMobile",
    "navbars",
    "left",
    "dynamic",
    "fadeNavbar",
    "resetPageValues",
    "resetCurrentPage",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "getInitialPageId",
    "_this4",
    "_callee2",
    "_callee2$",
    "_context2",
    "__P_59_2",
    "_this5",
    "_callee3",
    "startpage",
    "req",
    "_callee3$",
    "_context3",
    "getItem",
    "substr",
    "removeItem",
    "Uri",
    "parseUri",
    "location",
    "href",
    "substring",
    "match",
    "subscribe",
    "page_name",
    "scope",
    "traversePath",
    "getPageIdByName",
    "root_page_id",
    "path_scope",
    "index",
    "indexOf",
    "path_page_name",
    "String",
    "decodeHtmlEntities",
    "decodeURI",
    "replace",
    "selector",
    "pages",
    "from",
    "filter",
    "h",
    "getCurrentPage",
    "getPath",
    "fallback",
    "some",
    "p",
    "Tree",
    "getClosest",
    "innerText",
    "pid",
    "destruct",
    "removeListener",
    "defer",
    "statics",
    "Application",
    "structureController",
    "Controller"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.ui.structure.pure.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT =\n      '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\" class=\"clearfix\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>';\n    this.__supportedFeatures = {\n      cache: true\n    };\n\n    // load basic CSS rules shared by all designs that support this structure\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentPage: {\n      check: 'cv.ui.structure.pure.Page',\n      nullable: true,\n      event: 'changeCurrentPage'\n    },\n\n    renderTarget: {\n      check: 'String',\n      init: '#pages'\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __supportedFeatures: null,\n    __HTML_STRUCT: null,\n    main_scroll: null,\n    old_scroll: '',\n    pagePartsHandler: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    parseBackendSettings(xml) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      let defaultBackendName = '';\n      if (pagesElement.getAttribute('backend') !== null) {\n        settings.backend = pagesElement.getAttribute('backend');\n        defaultBackendName = settings.backend;\n      } else {\n        defaultBackendName = (\n          cv.Config.URL.backend ||\n          cv.Config.server.backend ||\n          'knxd'\n        ).split(',')[0];\n      }\n      if (pagesElement.getAttribute('backend-url') !== null) {\n        settings.backendUrl = pagesElement.getAttribute('backend-url');\n        this.error(\n          'The useage of \"backend-url\" is deprecated. Please use \"backend-knxd-url\", \"backend-mqtt-url\" or \"backend-openhab-url\" instead.'\n        );\n      }\n\n      if (pagesElement.getAttribute('backend-knxd-url') !== null) {\n        settings.backendKnxdUrl = pagesElement.getAttribute('backend-knxd-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'knxd';\n        }\n      }\n      if (pagesElement.getAttribute('backend-mqtt-url') !== null) {\n        settings.backendMQTTUrl = pagesElement.getAttribute('backend-mqtt-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'mqtt';\n        }\n      }\n      if (pagesElement.getAttribute('backend-openhab-url') !== null) {\n        settings.backendOpenHABUrl = pagesElement.getAttribute('backend-openhab-url');\n        if (!defaultBackendName) {\n          defaultBackendName = 'openhab';\n        }\n      }\n      if (pagesElement.getAttribute('token') !== null) {\n        settings.credentials.token = pagesElement.getAttribute('token');\n      }\n      if (pagesElement.getAttribute('username') !== null) {\n        settings.credentials.username = pagesElement.getAttribute('username');\n      }\n      if (pagesElement.getAttribute('password') !== null) {\n        settings.credentials.password = pagesElement.getAttribute('password');\n      }\n\n      // make sure that the default name is the actual type\n      if (defaultBackendName === 'default') {\n        defaultBackendName = 'knxd';\n      }\n      if (defaultBackendName) {\n        cv.data.Model.getInstance().setDefaultBackendName(defaultBackendName);\n      }\n      return true;\n    },\n\n    login() {\n      const clients = cv.io.BackendConnections.getClients();\n      let client;\n      for (const name in clients) {\n        client = clients[name];\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug(name + ' logged in');\n          cv.io.BackendConnections.startInitialRequest(name);\n        });\n      }\n    },\n\n    parseSettings(xml, done) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      settings.screensave_time = pagesElement.getAttribute('screensave_time');\n      if (settings.screensave_time) {\n        settings.screensave_time = parseInt(settings.screensave_time, 10);\n      }\n      settings.screensave_page = pagesElement.getAttribute('screensave_page');\n\n      if (pagesElement.getAttribute('max_mobile_screen_width') !== null) {\n        settings.maxMobileScreenWidth = pagesElement.getAttribute('max_mobile_screen_width');\n\n        // override config setting\n        cv.Config.maxMobileScreenWidth = settings.maxMobileScreenWidth;\n      }\n\n      const globalClass = pagesElement.getAttribute('class');\n      if (globalClass !== null) {\n        document.querySelector('body').classList.add(globalClass);\n      }\n      if (pagesElement.getAttribute('scroll_speed') === null) {\n        settings.scrollSpeed = 400;\n      } else {\n        settings.scrollSpeed = parseInt(pagesElement.getAttribute('scroll_speed'));\n      }\n      settings.bindClickToWidget = pagesElement.getAttribute('bind_click_to_widget') === 'true';\n      if (pagesElement.getAttribute('default_columns') !== null) {\n        settings.defaultColumns = pagesElement.getAttribute('default_columns');\n      }\n      if (pagesElement.getAttribute('min_column_width') !== null) {\n        settings.minColumnWidth = pagesElement.getAttribute('min_column_width');\n      }\n    },\n\n    async preParse(xml) {\n      const settings = cv.Config.configSettings;\n      const metaParser = new cv.parser.pure.MetaParser();\n\n      // start with the plugins\n      settings.pluginsToLoad = settings.pluginsToLoad.concat(metaParser.parsePlugins(xml));\n\n      // and then the rest\n      await metaParser.parse(xml);\n      this.debug('pre parsing done');\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param xml {XMLDocument} loaded config file\n     */\n    createUI(xml) {\n      cv.util.ScriptLoader.getInstance().addListenerOnce('stylesAndScriptsLoaded', () => {\n        cv.ui.structure.pure.layout.ResizeHandler.invalidateScreensize();\n      }, this);\n\n      if (!cv.Config.cacheUsed) {\n        this.debug('creating pages');\n        const page = xml.querySelector('pages > page'); // only one page element allowed...\n\n        this._createPages(page, 'id');\n        this.debug('finalizing');\n        qx.event.message.Bus.dispatchByName('setup.dom.append');\n        this.debug('pages created');\n      }\n      this.debug('setup.dom.finished');\n      qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n      cv.TemplateEngine.getInstance().setDomFinished(true);\n\n      this.login();\n\n      this.initLayout();\n    },\n\n    /**\n     * Start the parsing process\n     * @param page {Element} XML-configuration element\n     * @param path {String} internal poth\n     * @param flavour {String} inherited flavour\n     * @param type {String} page type (text, 2d, 3d)\n     */\n    _createPages(page, path, flavour, type) {\n      cv.parser.pure.WidgetParser.renderTemplates(page);\n      let parsedData = cv.parser.pure.WidgetParser.parse(page, path, flavour, type);\n\n      if (!Array.isArray(parsedData)) {\n        parsedData = [parsedData];\n      }\n      let i = 0;\n      const l = parsedData.length;\n      for (; i < l; i++) {\n        const data = parsedData[i];\n        const widget = cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n\n        // trigger DOM generation\n        if (widget) {\n          widget.getDomString();\n        }\n      }\n    },\n\n    /**\n     * Parse a label from the config file\n     * @param label {Element} label xml element\n     * @param flavour {String?} flavour name\n     * @param labelClass {String?} CSS class name\n     * @param style {String?} additional CSS style properties\n     */\n    parseLabel(label, flavour, labelClass, style) {\n      if (!label) {\n        return '';\n      }\n      let ret_val =\n        '<div class=\"' +\n        (labelClass !== undefined ? labelClass : 'label') +\n        '\"' +\n        (style ? ' style=\"' + style + '\"' : '') +\n        '>';\n\n      Array.prototype.forEach.call(label.childNodes, function (elem) {\n        if (elem.nodeType === Node.ELEMENT_NODE && elem.nodeName.toLowerCase() === 'icon') {\n          ret_val += cv.IconHandler.getInstance().getIconElement(\n            elem.getAttribute('name'),\n            elem.getAttribute('type'),\n            elem.getAttribute('flavour') || flavour,\n            elem.getAttribute('color'),\n            elem.getAttribute('styling'),\n            '',\n            true\n          );\n        } else if (elem.nodeType === Node.TEXT_NODE) {\n          ret_val += elem.textContent;\n        }\n      });\n      return ret_val + '</div>';\n    },\n    supports(feature, subfeature) {\n      if (Object.prototype.hasOwnProperty.call(this.__supportedFeatures, feature)) {\n        if (this.__supportedFeatures[feature] === true) {\n          if (subfeature) {\n            return (\n              Object.prototype.hasOwnProperty.call(this.__supportedFeatures[feature], subfeature) &&\n              this.__supportedFeatures[feature][subfeature] === true\n            );\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    getInitialAddresses(backendName) {\n      const startPageAddresses = {};\n      const pageWidget = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      pageWidget.getChildWidgets().forEach(function (child) {\n        const address = child.getAddress ? child.getAddress() : {};\n        for (let addr in address) {\n          if (Object.prototype.hasOwnProperty.call(address, addr) && addr.backendType === backendName) {\n            startPageAddresses[addr] = 1;\n          }\n        }\n      }, this);\n      return Object.keys(startPageAddresses);\n    },\n\n    initPagePartsHandler() {\n      if (!this.pagePartsHandler) {\n        this.pagePartsHandler = new cv.ui.structure.pure.navigation.PagePartsHandler();\n      }\n    },\n\n    initLayout() {\n      this.initPagePartsHandler();\n      if (!cv.Config.initialPage) {\n        this.__detectInitialPage();\n      }\n      let currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      if (currentPage) {\n        this.setCurrentPage(currentPage);\n      } else {\n        // this page does not exist, fallback to start page\n        cv.Config.initialPage = 'id_';\n        currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n      }\n\n      cv.ui.structure.pure.layout.Manager.adjustColumns();\n      cv.ui.structure.pure.layout.Manager.applyColumnWidths('#' + cv.Config.initialPage, true);\n\n      this.main_scroll = new cv.ui.structure.pure.navigation.PageHandler();\n      if (this.scrollSpeed !== undefined) {\n        this.main_scroll.setSpeed(this.scrollSpeed);\n      }\n\n      new qx.util.DeferredCall(function () {\n        this.scrollToPage(cv.Config.initialPage, 0);\n      }, this).schedule();\n\n      // run the Trick-O-Matic scripts for great SVG backdrops\n      document.querySelectorAll('embed').forEach(function (elem) {\n        this._runTrickOMatic(elem, 0);\n      }, this);\n\n      document.querySelectorAll('.icon').forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n      document.querySelectorAll('.loading').forEach(function (elem) {\n        elem.classList.remove('loading');\n      }, this);\n\n      qx.core.Init.getApplication().addListener('changeMobile', this._onMobileChanged, this);\n    },\n\n    _runTrickOMatic(elem, retries) {\n      if (elem && typeof elem.getSVGDocument === 'function') {\n        try {\n          const svg = elem.getSVGDocument();\n          if (svg === null || svg.readyState !== 'complete') {\n            elem.onload = cv.ui.TrickOMatic.run;\n          } else {\n            cv.ui.TrickOMatic.run.call(elem);\n          }\n        } catch (e) {\n          if (e.name === 'NotSupportedError') {\n            if (retries <= 5) {\n              retries++;\n              window.requestAnimationFrame(() => {\n                this._runTrickOMatic(elem, retries);\n              });\n            } else {\n              this.error(e);\n            }\n          } else {\n            this.error(e);\n          }\n        }\n      }\n    },\n\n    doScreenSave() {\n      this.scrollToPage();\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor, 0, true);\n      }\n    },\n\n    scrollToPage(target, speed, skipHistory) {\n      if (undefined === target) {\n        target = cv.Config.configSettings.screensave_page;\n      }\n      const page_id = this.getPageIdByPath(target);\n      if (page_id === null) {\n        return;\n      }\n      if (cv.Config.currentPageId === page_id) {\n        return;\n      }\n      cv.Config.currentPageId = page_id;\n      cv.Config.treePath = page_id;\n\n      if (undefined === speed) {\n        speed = cv.Config.configSettings.scrollSpeed;\n      }\n\n      if (cv.Config.rememberLastPage && qx.core.Environment.get('html.storage.local')) {\n        localStorage.lastpage = page_id;\n      }\n\n      // push new state to history\n      if (skipHistory === undefined) {\n        const headline = document.querySelectorAll('#' + page_id + ' h1');\n        let pageTitle = 'CometVisu';\n        if (headline.length) {\n          pageTitle = headline[0].textContent + ' - ' + pageTitle;\n        }\n        qx.bom.History.getInstance().addToHistory(page_id, pageTitle);\n      }\n\n      this.main_scroll.seekTo(page_id, speed); // scroll to it\n\n      this.pagePartsHandler.initializeNavbars(page_id);\n      this._maintainNavbars();\n    },\n\n    _onMobileChanged(ev) {\n      const app = qx.core.Init.getApplication();\n      if (app.isReady()) {\n        cv.ui.structure.pure.layout.ResizeHandler.invalidateNavbar();\n        this._maintainNavbars();\n      }\n    },\n\n    _maintainNavbars() {\n      if (qx.core.Init.getApplication().getMobile()) {\n        switch (this.pagePartsHandler.navbars.left.dynamic) {\n          case null:\n          case true:\n            this.pagePartsHandler.fadeNavbar('Left', 'out', 0);\n            break;\n\n          case false:\n            this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n        }\n      } else {\n        this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n      }\n    },\n\n    /**\n     * Reset some values related to the current page\n     */\n    resetPageValues() {\n      this.resetCurrentPage();\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableWidth = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableHeight = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageNavbarVisibility = null;\n    },\n\n    async getInitialPageId() {\n      if (!cv.Config.initialPage) {\n        await this.__detectInitialPage();\n      }\n      return cv.Config.initialPage;\n    },\n\n    async __detectInitialPage() {\n      let startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get('html.storage.local') === true) {\n          if (startpage === 'remember') {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if (typeof startpage !== 'string' || startpage.substr(0, 3) !== 'id_') {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if (startpage === 'noremember') {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        const req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === 'id_') {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n        return startpage;\n      }\n      // wait for DOM to be ready and detect the page id then\n      return new Promise(resolve => {\n        qx.event.message.Bus.subscribe('setup.dom.finished.before', () => {\n          cv.Config.initialPage = this.getPageIdByPath(startpage) || 'id_';\n          resolve(cv.Config.initialPage);\n        });\n      });\n    },\n\n    /**\n     * Returns the id of the page the given path is associated to\n     * @param page_name {String}\n     * @param path {String}\n     * @return {String}\n     */\n    getPageIdByPath(page_name, path) {\n      if (page_name === null) {\n        return null;\n      }\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      if (path !== undefined) {\n        const scope = this.traversePath(path);\n        if (scope === null) {\n          // path is wrong\n          this.error('path \\'' + path + '\\' could not be traversed, no page found');\n\n          return null;\n        }\n        return this.getPageIdByName(page_name, scope);\n      }\n      return this.getPageIdByName(page_name);\n    },\n\n    traversePath(path, root_page_id) {\n      let path_scope = null;\n      let index = path.indexOf('/');\n      if (index >= 1) {\n        // skip escaped slashes like \\/\n        while (path.substr(index - 1, 1) === '\\\\') {\n          const next = path.indexOf('/', index + 1);\n          if (next >= 0) {\n            index = next;\n          }\n        }\n      }\n      //    console.log(\"traversePath(\"+path+\",\"+root_page_id+\")\");\n      if (index >= 0) {\n        // traverse path one level down\n        const path_page_name = path.substr(0, index);\n        path_scope = this.getPageIdByName(path_page_name, root_page_id);\n        path = path.substr(path_page_name.length + 1);\n        path_scope = this.traversePath(path, path_scope);\n        //      console.log(path_page_name+\"=>\"+path_scope);\n        return path_scope;\n      }\n      // bottom path level reached\n      path_scope = this.getPageIdByName(path, root_page_id);\n      return path_scope;\n    },\n\n    getPageIdByName(page_name, scope) {\n      let page_id = null;\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      // find Page-ID by name\n      // decode html code (e.g. like &apos; => ')\n      page_name = cv.util.String.decodeHtmlEntities(page_name);\n      // remove escaped slashes\n      page_name = decodeURI(page_name.replace('\\\\/', '/'));\n\n      //      console.log(\"Page: \"+page_name+\", Scope: \"+scope);\n      const selector = scope !== undefined && scope !== null ? '.page[id^=\"' + scope + '\"] h1' : '.page h1';\n      let pages = document.querySelectorAll(selector);\n      pages = Array.from(pages).filter(function (h) {\n        return h.textContent === page_name;\n      });\n      if (pages.length > 1 && this.getCurrentPage() !== null) {\n        const currentPageId = this.getCurrentPage().getPath();\n        // More than one Page found -> search in the current pages descendants first\n        let fallback = true;\n        pages.some(function (page) {\n          const p = cv.util.Tree.getClosest(page, '.page');\n          if (page.innerText === page_name) {\n            const pid = p.getAttribute('id');\n            if (pid.length < currentPageId.length) {\n              // found pages path is shorter the the current pages -> must be an ancestor\n              if (currentPageId.indexOf(pid) === 0) {\n                // found page is an ancestor of the current page -> we take this one\n                page_id = pid;\n                fallback = false;\n                //break loop\n                return true;\n              }\n            } else if (pid.indexOf(currentPageId) === 0) {\n              // found page is an descendant of the current page -> we take this one\n              page_id = pid;\n              fallback = false;\n              //break loop\n              return true;\n            }\n          }\n          return false;\n        }, this);\n        if (fallback) {\n          // take the first page that fits (old behaviour)\n          pages.some(function (page) {\n            if (page.innerText === page_name) {\n              page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n\n              // break loop\n              return true;\n            }\n            return false;\n          });\n        }\n      } else {\n        pages.some(function (page) {\n          if (page.innerText === page_name) {\n            page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n            // break loop\n            return true;\n          }\n          return false;\n        });\n      }\n\n      if (page_id !== null && page_id.match(/^id_[0-9_]*$/) !== null) {\n        return page_id;\n      }\n      // not found\n      return null;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.core.Init.getApplication().removeListener('changeMobile', this._onMobileChanged, this);\n  },\n\n  defer(statics) {\n    cv.Application.structureController = statics.getInstance();\n  }\n});\n"
  ],
  "mappings": "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"
}