{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "__supportedFeatures",
    "cache",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Config",
    "forceReload",
    "Date",
    "now",
    "properties",
    "currentPage",
    "check",
    "nullable",
    "event",
    "renderTarget",
    "init",
    "namespace",
    "members",
    "main_scroll",
    "old_scroll",
    "pagePartsHandler",
    "getHtmlStructure",
    "parseBackendSettings",
    "xml",
    "settings",
    "configSettings",
    "pagesElement",
    "documentElement",
    "getAttribute",
    "backend",
    "backendUrl",
    "error",
    "backendKnxdUrl",
    "backendMQTTUrl",
    "backendOpenHABUrl",
    "credentials",
    "token",
    "username",
    "password",
    "login",
    "client",
    "io",
    "BackendConnections",
    "getClient",
    "debug",
    "startInitialRequest",
    "parseSettings",
    "done",
    "screensave_time",
    "parseInt",
    "screensave_page",
    "maxMobileScreenWidth",
    "globalClass",
    "document",
    "querySelector",
    "classList",
    "add",
    "scrollSpeed",
    "bindClickToWidget",
    "defaultColumns",
    "minColumnWidth",
    "preParse",
    "metaParser",
    "parser",
    "pure",
    "MetaParser",
    "pluginsToLoad",
    "concat",
    "parsePlugins",
    "parse",
    "createUI",
    "cacheUsed",
    "page",
    "_createPages",
    "message",
    "Bus",
    "dispatchByName",
    "TemplateEngine",
    "setDomFinished",
    "initLayout",
    "path",
    "flavour",
    "WidgetParser",
    "renderTemplates",
    "parsedData",
    "Array",
    "isArray",
    "i",
    "l",
    "length",
    "data",
    "widget",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "getDomString",
    "parseLabel",
    "label",
    "labelClass",
    "style",
    "ret_val",
    "undefined",
    "prototype",
    "forEach",
    "call",
    "childNodes",
    "elem",
    "nodeType",
    "Node",
    "ELEMENT_NODE",
    "nodeName",
    "toLowerCase",
    "IconHandler",
    "getIconElement",
    "TEXT_NODE",
    "textContent",
    "supports",
    "feature",
    "subfeature",
    "hasOwnProperty",
    "getInitialAddresses",
    "startPageAddresses",
    "pageWidget",
    "getInstanceById",
    "initialPage",
    "getChildWidgets",
    "child",
    "address",
    "getAddress",
    "addr",
    "keys",
    "initPagePartsHandler",
    "navigation",
    "PagePartsHandler",
    "__detectInitialPage",
    "setCurrentPage",
    "layout",
    "Manager",
    "adjustColumns",
    "applyColumnWidths",
    "PageHandler",
    "setSpeed",
    "DeferredCall",
    "scrollToPage",
    "schedule",
    "querySelectorAll",
    "getSVGDocument",
    "svg",
    "readyState",
    "onload",
    "TrickOMatic",
    "run",
    "IconTools",
    "fillRecoloredIcon",
    "remove",
    "Init",
    "getApplication",
    "addListener",
    "_onMobileChanged",
    "doScreenSave",
    "onHistoryRequest",
    "anchor",
    "target",
    "speed",
    "skipHistory",
    "page_id",
    "getPageIdByPath",
    "currentPageId",
    "treePath",
    "rememberLastPage",
    "Environment",
    "get",
    "localStorage",
    "lastpage",
    "headline",
    "pageTitle",
    "History",
    "addToHistory",
    "seekTo",
    "initializeNavbars",
    "_maintainNavbars",
    "ev",
    "app",
    "isReady",
    "ResizeHandler",
    "invalidateNavbar",
    "getMobile",
    "navbars",
    "left",
    "dynamic",
    "fadeNavbar",
    "resetPageValues",
    "resetCurrentPage",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "getInitialPageId",
    "startpage",
    "getItem",
    "substr",
    "removeItem",
    "req",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "substring",
    "match",
    "Promise",
    "resolve",
    "subscribe",
    "page_name",
    "scope",
    "traversePath",
    "getPageIdByName",
    "root_page_id",
    "path_scope",
    "index",
    "indexOf",
    "next",
    "path_page_name",
    "String",
    "decodeHtmlEntities",
    "decodeURI",
    "replace",
    "selector",
    "pages",
    "from",
    "filter",
    "h",
    "getCurrentPage",
    "getPath",
    "fallback",
    "some",
    "p",
    "Tree",
    "getClosest",
    "innerText",
    "pid",
    "destruct",
    "removeListener",
    "defer",
    "statics",
    "Application",
    "structureController",
    "Controller"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\nqx.Class.define('cv.ui.structure.pure.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT =\n      '<div id=\"top\" class=\"loading\"><div class=\"nav_path\">-</div></div><div id=\"navbarTop\" class=\"loading\"></div><div id=\"centerContainer\" class=\"clearfix\"><div id=\"navbarLeft\" class=\"loading page\"></div><div id=\"main\" style=\"position:relative; overflow: hidden;\" class=\"loading\"><div id=\"pages\" style=\"position:relative;clear:both;\"><!-- all pages will be inserted here --></div></div><div id=\"navbarRight\" class=\"loading page\"></div></div><div id=\"navbarBottom\" class=\"loading\"></div><div id=\"bottom\" class=\"loading\"><hr /><div class=\"footer\"></div></div>';\n    this.__supportedFeatures = {\n      cache: true\n    };\n\n    // load basic CSS rules shared by all designs that support this structure\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentPage: {\n      check: 'cv.ui.structure.pure.Page',\n      nullable: true,\n      event: 'changeCurrentPage'\n    },\n\n    renderTarget: {\n      check: 'String',\n      init: '#pages'\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __supportedFeatures: null,\n    __HTML_STRUCT: null,\n    main_scroll: null,\n    old_scroll: '',\n    pagePartsHandler: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    parseBackendSettings(xml) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      if (pagesElement.getAttribute('backend') !== null) {\n        settings.backend = pagesElement.getAttribute('backend');\n      }\n      if (pagesElement.getAttribute('backend-url') !== null) {\n        settings.backendUrl = pagesElement.getAttribute('backend-url');\n        this.error(\n          'The useage of \"backend-url\" is deprecated. Please use \"backend-knxd-url\", \"backend-mqtt-url\" or \"backend-openhab-url\" instead.'\n        );\n      }\n      if (pagesElement.getAttribute('backend-knxd-url') !== null) {\n        settings.backendKnxdUrl = pagesElement.getAttribute('backend-knxd-url');\n      }\n      if (pagesElement.getAttribute('backend-mqtt-url') !== null) {\n        settings.backendMQTTUrl = pagesElement.getAttribute('backend-mqtt-url');\n      }\n      if (pagesElement.getAttribute('backend-openhab-url') !== null) {\n        settings.backendOpenHABUrl = pagesElement.getAttribute('backend-openhab-url');\n      }\n      if (pagesElement.getAttribute('token') !== null) {\n        settings.credentials.token = pagesElement.getAttribute('token');\n      }\n      if (pagesElement.getAttribute('username') !== null) {\n        settings.credentials.username = pagesElement.getAttribute('username');\n      }\n      if (pagesElement.getAttribute('password') !== null) {\n        settings.credentials.password = pagesElement.getAttribute('password');\n      }\n      return true;\n    },\n\n    login() {\n      const client = cv.io.BackendConnections.getClient('main');\n      client.login(true, cv.Config.configSettings.credentials, () => {\n        this.debug('logged in');\n        cv.io.BackendConnections.startInitialRequest();\n      });\n    },\n\n    parseSettings(xml, done) {\n      const settings = cv.Config.configSettings;\n      const pagesElement = xml.documentElement;\n      settings.screensave_time = pagesElement.getAttribute('screensave_time');\n      if (settings.screensave_time) {\n        settings.screensave_time = parseInt(settings.screensave_time, 10);\n      }\n      settings.screensave_page = pagesElement.getAttribute('screensave_page');\n\n      if (pagesElement.getAttribute('max_mobile_screen_width') !== null) {\n        settings.maxMobileScreenWidth = pagesElement.getAttribute('max_mobile_screen_width');\n\n        // override config setting\n        cv.Config.maxMobileScreenWidth = settings.maxMobileScreenWidth;\n      }\n\n      const globalClass = pagesElement.getAttribute('class');\n      if (globalClass !== null) {\n        document.querySelector('body').classList.add(globalClass);\n      }\n      if (pagesElement.getAttribute('scroll_speed') === null) {\n        settings.scrollSpeed = 400;\n      } else {\n        settings.scrollSpeed = parseInt(pagesElement.getAttribute('scroll_speed'));\n      }\n      settings.bindClickToWidget = pagesElement.getAttribute('bind_click_to_widget') === 'true';\n      if (pagesElement.getAttribute('default_columns') !== null) {\n        settings.defaultColumns = pagesElement.getAttribute('default_columns');\n      }\n      if (pagesElement.getAttribute('min_column_width') !== null) {\n        settings.minColumnWidth = pagesElement.getAttribute('min_column_width');\n      }\n    },\n\n    async preParse(xml) {\n      const settings = cv.Config.configSettings;\n      const metaParser = new cv.parser.pure.MetaParser();\n\n      // start with the plugins\n      settings.pluginsToLoad = settings.pluginsToLoad.concat(metaParser.parsePlugins(xml));\n\n      // and then the rest\n      await metaParser.parse(xml);\n      this.debug('pre parsing done');\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param xml {XMLDocument} loaded config file\n     */\n    createUI(xml) {\n      if (!cv.Config.cacheUsed) {\n        this.debug('creating pages');\n        const page = xml.querySelector('pages > page'); // only one page element allowed...\n\n        this._createPages(page, 'id');\n        this.debug('finalizing');\n        qx.event.message.Bus.dispatchByName('setup.dom.append');\n        this.debug('pages created');\n      }\n      this.debug('setup.dom.finished');\n      qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n      cv.TemplateEngine.getInstance().setDomFinished(true);\n\n      this.login();\n\n      this.initLayout();\n    },\n\n    /**\n     * Start the parsing process\n     * @param page {Element} XML-configuration element\n     * @param path {String} internal poth\n     * @param flavour {String} inherited flavour\n     * @param type {String} page type (text, 2d, 3d)\n     */\n    _createPages(page, path, flavour, type) {\n      cv.parser.pure.WidgetParser.renderTemplates(page);\n      let parsedData = cv.parser.pure.WidgetParser.parse(page, path, flavour, type);\n\n      if (!Array.isArray(parsedData)) {\n        parsedData = [parsedData];\n      }\n      let i = 0;\n      const l = parsedData.length;\n      for (; i < l; i++) {\n        const data = parsedData[i];\n        const widget = cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n\n        // trigger DOM generation\n        if (widget) {\n          widget.getDomString();\n        }\n      }\n    },\n\n    /**\n     * Parse a label from the config file\n     * @param label {Element} label xml element\n     * @param flavour {String?} flavour name\n     * @param labelClass {String?} CSS class name\n     * @param style {String?} additional CSS style properties\n     */\n    parseLabel(label, flavour, labelClass, style) {\n      if (!label) {\n        return '';\n      }\n      let ret_val =\n        '<div class=\"' +\n        (labelClass !== undefined ? labelClass : 'label') +\n        '\"' +\n        (style ? ' style=\"' + style + '\"' : '') +\n        '>';\n\n      Array.prototype.forEach.call(label.childNodes, function (elem) {\n        if (elem.nodeType === Node.ELEMENT_NODE && elem.nodeName.toLowerCase() === 'icon') {\n          ret_val += cv.IconHandler.getInstance().getIconElement(\n            elem.getAttribute('name'),\n            elem.getAttribute('type'),\n            elem.getAttribute('flavour') || flavour,\n            elem.getAttribute('color'),\n            elem.getAttribute('styling'),\n            '',\n            true\n          );\n        } else if (elem.nodeType === Node.TEXT_NODE) {\n          ret_val += elem.textContent;\n        }\n      });\n      return ret_val + '</div>';\n    },\n    supports(feature, subfeature) {\n      if (Object.prototype.hasOwnProperty.call(this.__supportedFeatures, feature)) {\n        if (this.__supportedFeatures[feature] === true) {\n          if (subfeature) {\n            return (\n              Object.prototype.hasOwnProperty.call(this.__supportedFeatures[feature], subfeature) &&\n              this.__supportedFeatures[feature][subfeature] === true\n            );\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    getInitialAddresses() {\n      const startPageAddresses = {};\n      const pageWidget = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      pageWidget.getChildWidgets().forEach(function (child) {\n        const address = child.getAddress ? child.getAddress() : {};\n        for (let addr in address) {\n          if (Object.prototype.hasOwnProperty.call(address, addr)) {\n            startPageAddresses[addr] = 1;\n          }\n        }\n      }, this);\n      return Object.keys(startPageAddresses);\n    },\n\n    initPagePartsHandler() {\n      if (!this.pagePartsHandler) {\n        this.pagePartsHandler = new cv.ui.structure.pure.navigation.PagePartsHandler();\n      }\n    },\n\n    initLayout() {\n      this.initPagePartsHandler();\n      if (!cv.Config.initialPage) {\n        this.__detectInitialPage();\n      }\n      let currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n\n      if (currentPage) {\n        this.setCurrentPage(currentPage);\n      } else {\n        // this page does not exist, fallback to start page\n        cv.Config.initialPage = 'id_';\n        currentPage = cv.ui.structure.WidgetFactory.getInstanceById(cv.Config.initialPage);\n      }\n\n      cv.ui.structure.pure.layout.Manager.adjustColumns();\n      cv.ui.structure.pure.layout.Manager.applyColumnWidths('#' + cv.Config.initialPage, true);\n\n      this.main_scroll = new cv.ui.structure.pure.navigation.PageHandler();\n      if (this.scrollSpeed !== undefined) {\n        this.main_scroll.setSpeed(this.scrollSpeed);\n      }\n\n      new qx.util.DeferredCall(function () {\n        this.scrollToPage(cv.Config.initialPage, 0);\n      }, this).schedule();\n\n      // run the Trick-O-Matic scripts for great SVG backdrops\n      document.querySelectorAll('embed').forEach(function (elem) {\n        if (typeof elem.getSVGDocument === 'function') {\n          const svg = elem.getSVGDocument();\n          if (svg === null || svg.readyState !== 'complete') {\n            elem.onload = cv.ui.TrickOMatic.run;\n          } else {\n            cv.ui.TrickOMatic.run.call(elem);\n          }\n        }\n      });\n\n      document.querySelectorAll('.icon').forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n      document.querySelectorAll('.loading').forEach(function (elem) {\n        elem.classList.remove('loading');\n      }, this);\n\n      qx.core.Init.getApplication().addListener('changeMobile', this._onMobileChanged, this);\n    },\n\n    doScreenSave() {\n      this.scrollToPage();\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor, 0, true);\n      }\n    },\n\n    scrollToPage(target, speed, skipHistory) {\n      if (undefined === target) {\n        target = cv.Config.configSettings.screensave_page;\n      }\n      const page_id = this.getPageIdByPath(target);\n      if (page_id === null) {\n        return;\n      }\n      if (cv.Config.currentPageId === page_id) {\n        return;\n      }\n      cv.Config.currentPageId = page_id;\n      cv.Config.treePath = page_id;\n\n      if (undefined === speed) {\n        speed = cv.Config.configSettings.scrollSpeed;\n      }\n\n      if (cv.Config.rememberLastPage && qx.core.Environment.get('html.storage.local')) {\n        localStorage.lastpage = page_id;\n      }\n\n      // push new state to history\n      if (skipHistory === undefined) {\n        const headline = document.querySelectorAll('#' + page_id + ' h1');\n        let pageTitle = 'CometVisu';\n        if (headline.length) {\n          pageTitle = headline[0].textContent + ' - ' + pageTitle;\n        }\n        qx.bom.History.getInstance().addToHistory(page_id, pageTitle);\n      }\n\n      this.main_scroll.seekTo(page_id, speed); // scroll to it\n\n      this.pagePartsHandler.initializeNavbars(page_id);\n      this._maintainNavbars();\n    },\n\n    _onMobileChanged(ev) {\n      const app = qx.core.Init.getApplication();\n      if (app.isReady()) {\n        cv.ui.structure.pure.layout.ResizeHandler.invalidateNavbar();\n        this._maintainNavbars();\n      }\n    },\n\n    _maintainNavbars() {\n      if (qx.core.Init.getApplication().getMobile()) {\n        switch (this.pagePartsHandler.navbars.left.dynamic) {\n          case null:\n          case true:\n            this.pagePartsHandler.fadeNavbar('Left', 'out', 0);\n            break;\n\n          case false:\n            this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n        }\n      } else {\n        this.pagePartsHandler.fadeNavbar('Left', 'in', 0);\n      }\n    },\n\n    /**\n     * Reset some values related to the current page\n     */\n    resetPageValues() {\n      this.resetCurrentPage();\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableWidth = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageUnavailableHeight = -1;\n      cv.ui.structure.pure.layout.Manager.currentPageNavbarVisibility = null;\n    },\n\n    async getInitialPageId() {\n      if (!cv.Config.initialPage) {\n        await this.__detectInitialPage();\n      }\n      return cv.Config.initialPage;\n    },\n\n    async __detectInitialPage() {\n      let startpage = 'id_';\n      if (cv.Config.startpage) {\n        startpage = cv.Config.startpage;\n        if (qx.core.Environment.get('html.storage.local') === true) {\n          if (startpage === 'remember') {\n            startpage = localStorage.getItem('lastpage');\n            cv.Config.rememberLastPage = true;\n            if (typeof startpage !== 'string' || startpage.substr(0, 3) !== 'id_') {\n              startpage = 'id_'; // fix obvious wrong data\n            }\n          } else if (startpage === 'noremember') {\n            localStorage.removeItem('lastpage');\n            startpage = 'id_';\n            cv.Config.rememberLastPage = false;\n          }\n        }\n      } else {\n        const req = qx.util.Uri.parseUri(window.location.href);\n        if (req.anchor && req.anchor.substring(0, 3) === 'id_') {\n          startpage = req.anchor;\n        }\n      }\n      if (startpage.match(/^id_[0-9_]*$/) !== null) {\n        cv.Config.initialPage = startpage;\n        return startpage;\n      }\n      // wait for DOM to be ready and detect the page id then\n      return new Promise(resolve => {\n        qx.event.message.Bus.subscribe('setup.dom.finished.before', () => {\n          cv.Config.initialPage = this.getPageIdByPath(startpage) || 'id_';\n          resolve(cv.Config.initialPage);\n        });\n      });\n    },\n\n    /**\n     * Returns the id of the page the given path is associated to\n     * @param page_name {String}\n     * @param path {String}\n     * @return {String}\n     */\n    getPageIdByPath(page_name, path) {\n      if (page_name === null) {\n        return null;\n      }\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      if (path !== undefined) {\n        const scope = this.traversePath(path);\n        if (scope === null) {\n          // path is wrong\n          this.error('path \\'' + path + '\\' could not be traversed, no page found');\n\n          return null;\n        }\n        return this.getPageIdByName(page_name, scope);\n      }\n      return this.getPageIdByName(page_name);\n    },\n\n    traversePath(path, root_page_id) {\n      let path_scope = null;\n      let index = path.indexOf('/');\n      if (index >= 1) {\n        // skip escaped slashes like \\/\n        while (path.substr(index - 1, 1) === '\\\\') {\n          const next = path.indexOf('/', index + 1);\n          if (next >= 0) {\n            index = next;\n          }\n        }\n      }\n      //    console.log(\"traversePath(\"+path+\",\"+root_page_id+\")\");\n      if (index >= 0) {\n        // traverse path one level down\n        const path_page_name = path.substr(0, index);\n        path_scope = this.getPageIdByName(path_page_name, root_page_id);\n        path = path.substr(path_page_name.length + 1);\n        path_scope = this.traversePath(path, path_scope);\n        //      console.log(path_page_name+\"=>\"+path_scope);\n        return path_scope;\n      }\n      // bottom path level reached\n      path_scope = this.getPageIdByName(path, root_page_id);\n      return path_scope;\n    },\n\n    getPageIdByName(page_name, scope) {\n      let page_id = null;\n      if (page_name.match(/^id_[0-9_]*$/) !== null) {\n        // already a page_id\n        return page_name;\n      }\n      // find Page-ID by name\n      // decode html code (e.g. like &apos; => ')\n      page_name = cv.util.String.decodeHtmlEntities(page_name);\n      // remove escaped slashes\n      page_name = decodeURI(page_name.replace('\\\\/', '/'));\n\n      //      console.log(\"Page: \"+page_name+\", Scope: \"+scope);\n      const selector = scope !== undefined && scope !== null ? '.page[id^=\"' + scope + '\"] h1' : '.page h1';\n      let pages = document.querySelectorAll(selector);\n      pages = Array.from(pages).filter(function (h) {\n        return h.textContent === page_name;\n      });\n      if (pages.length > 1 && this.getCurrentPage() !== null) {\n        const currentPageId = this.getCurrentPage().getPath();\n        // More than one Page found -> search in the current pages descendants first\n        let fallback = true;\n        pages.some(function (page) {\n          const p = cv.util.Tree.getClosest(page, '.page');\n          if (page.innerText === page_name) {\n            const pid = p.getAttribute('id');\n            if (pid.length < currentPageId.length) {\n              // found pages path is shorter the the current pages -> must be an ancestor\n              if (currentPageId.indexOf(pid) === 0) {\n                // found page is an ancestor of the current page -> we take this one\n                page_id = pid;\n                fallback = false;\n                //break loop\n                return true;\n              }\n            } else if (pid.indexOf(currentPageId) === 0) {\n              // found page is an descendant of the current page -> we take this one\n              page_id = pid;\n              fallback = false;\n              //break loop\n              return true;\n            }\n          }\n          return false;\n        }, this);\n        if (fallback) {\n          // take the first page that fits (old behaviour)\n          pages.some(function (page) {\n            if (page.innerText === page_name) {\n              page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n\n              // break loop\n              return true;\n            }\n            return false;\n          });\n        }\n      } else {\n        pages.some(function (page) {\n          if (page.innerText === page_name) {\n            page_id = cv.util.Tree.getClosest(page, '.page').getAttribute('id');\n            // break loop\n            return true;\n          }\n          return false;\n        });\n      }\n\n      if (page_id !== null && page_id.match(/^id_[0-9_]*$/) !== null) {\n        return page_id;\n      }\n      // not found\n      return null;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.core.Init.getApplication().removeListener('changeMobile', this._onMobileChanged, this);\n  },\n\n  defer(statics) {\n    cv.Application.structureController = statics.getInstance();\n  }\n});\n"
  ],
  "mappings": "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"
}