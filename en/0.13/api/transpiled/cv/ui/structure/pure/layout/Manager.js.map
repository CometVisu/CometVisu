{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "lastBodyWidth",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "oldWidth",
    "LAYOUT_MODE",
    "COLSPAN_CLASS",
    "getCurrentPageNavbarVisibility",
    "left",
    "right",
    "top",
    "bottom",
    "cv",
    "Application",
    "structureController",
    "pagePartsHandler",
    "getNavbarsVisibility",
    "getCurrentPage",
    "getColspanClass",
    "width",
    "Config",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "adjustColumns",
    "getAvailableWidth",
    "oldClass",
    "newClass",
    "bodyWidth",
    "document",
    "documentElement",
    "clientWidth",
    "navbarVisibility",
    "querySelector",
    "widthNavbarLeft",
    "leftRect",
    "getBoundingClientRect",
    "window",
    "getComputedStyle",
    "Math",
    "round",
    "core",
    "Init",
    "getApplication",
    "getMobile",
    "widthNavbarRight",
    "rightRect",
    "getAvailableHeight",
    "windowHeight",
    "clientHeight",
    "emptyRect",
    "topNav",
    "bottomNav",
    "topNavDisplay",
    "topDisplay",
    "bottomNavDisplay",
    "bottomDisplay",
    "topRect",
    "topHeight",
    "topNavRect",
    "topNavHeight",
    "bottomNavRect",
    "bottomNavHeight",
    "bottomRect",
    "bottomHeight",
    "nav_pathRect",
    "navPathHeight",
    "max",
    "rowspanClass",
    "rowspan",
    "configSettings",
    "usedRowspans",
    "getWidgetColspan",
    "widget",
    "getColspan",
    "getColspanS",
    "getColspanM",
    "getLayoutSuffix",
    "suffix",
    "applyColumnWidths",
    "selector",
    "includeNavbars",
    "mainAreaColspan",
    "defaultColumns",
    "main",
    "mainAreaColumns",
    "dataset",
    "parseInt",
    "pageSelector",
    "selectors",
    "forEach",
    "area",
    "allContainer",
    "querySelectorAll",
    "length",
    "areaColspan",
    "areaElement",
    "areaColumns",
    "child",
    "ui",
    "structure",
    "WidgetFactory",
    "getInstanceByElement",
    "ourColspan",
    "w",
    "min",
    "__applyWidthClass",
    "adjustableElements",
    "e",
    "groupChild",
    "util",
    "Tree",
    "getChildWidgets",
    "groupColspan",
    "parentGroupElement",
    "getParent",
    "parentGroupWidget",
    "parentNode",
    "elem",
    "widthClassSuffix",
    "style",
    "classList",
    "cssClass",
    "startsWith",
    "remove",
    "add",
    "pure",
    "layout",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/layout/Manager.js"
  ],
  "sourcesContent": [
    "/* Manager.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n */\nqx.Class.define('cv.ui.structure.pure.layout.Manager', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // use to recognize if the screen width has crossed the maxMobileScreenWidth\n    lastBodyWidth: 0,\n    currentPageUnavailableWidth: -1,\n    currentPageUnavailableHeight: -1,\n    currentPageNavbarVisibility: null,\n    oldWidth: -1,\n\n    LAYOUT_MODE: 'DEFAULT',\n\n    COLSPAN_CLASS: null,\n\n    getCurrentPageNavbarVisibility() {\n      if (\n        this.currentPageNavbarVisibility === null ||\n        this.currentPageNavbarVisibility.left === null ||\n        this.currentPageNavbarVisibility.right === null ||\n        this.currentPageNavbarVisibility.top === null ||\n        this.currentPageNavbarVisibility.bottom === null\n      ) {\n        this.currentPageNavbarVisibility = cv.Application.structureController.pagePartsHandler.getNavbarsVisibility(\n          cv.Application.structureController.getCurrentPage()\n        );\n      }\n      return this.currentPageNavbarVisibility;\n    },\n\n    // return S, M or L depening on the passed width\n    getColspanClass(width) {\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        return 'S';\n      }\n      if (width <= cv.Config.maxScreenWidthColspanM) {\n        return 'M';\n      }\n      return 'L';\n    },\n\n    adjustColumns() {\n      const width = this.getAvailableWidth();\n      const oldClass = this.getColspanClass(this.oldWidth);\n      const newClass = this.getColspanClass(width);\n\n      this.oldWidth = width;\n      this.COLSPAN_CLASS = newClass;\n      return oldClass !== newClass;\n    },\n\n    /**\n     * return the available width for a the currently visible page\n     * the available width is calculated by subtracting the following elements widths (if they are visible) from the body width\n     * - Left-Navbar\n     * - Right-Navbar\n     */\n    getAvailableWidth() {\n      // currently this calculation is done once after every page scroll (where cv.TemplateEngine.getInstance()currentPageUnavailableWidth is reseted)\n      // if the screen width falls below the threshold which activates/deactivates the mobile.css\n      // the calculation has to be done again, even if the page hasnÂ´t changed (e.g. switching between portrait and landscape mode on a mobile can cause that)\n      const bodyWidth = document.documentElement.clientWidth;\n      //      console.log(\"Mobile.css use changed \"+mobileUseChanged);\n      this.currentPageUnavailableWidth = 0;\n      const navbarVisibility = this.getCurrentPageNavbarVisibility();\n\n      const left = document.querySelector('#navbarLeft');\n      let widthNavbarLeft = 0;\n      if (left) {\n        const leftRect = left.getBoundingClientRect();\n        widthNavbarLeft =\n          navbarVisibility.left === true && window.getComputedStyle(left)['display'] !== 'none'\n            ? Math.round(leftRect.right - leftRect.left)\n            : 0;\n      }\n      if (widthNavbarLeft >= bodyWidth || qx.core.Init.getApplication().getMobile()) {\n        // Left-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n        // maybe there is a better solution to solve this problem\n        // OR: we have a mobile device where the nav bar is floating above the other content\n        widthNavbarLeft = 0;\n      }\n      const right = document.querySelector('#navbarRight');\n      let widthNavbarRight = 0;\n      if (right) {\n        const rightRect = right.getBoundingClientRect();\n        widthNavbarRight =\n          navbarVisibility.right === true && window.getComputedStyle(right)['display'] !== 'none'\n            ? Math.round(rightRect.right - rightRect.left)\n            : 0;\n      }\n      if (widthNavbarRight >= bodyWidth || qx.core.Init.getApplication().getMobile()) {\n        // Right-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n        // maybe there is a better solution to solve this problem\n        // OR: we have a mobile device where the nav bar is floating above the other content\n        widthNavbarRight = 0;\n      }\n      this.currentPageUnavailableWidth = widthNavbarLeft + widthNavbarRight + 1; // remove an additional pixel for Firefox\n      //      console.log(\"Width: \"+bodyWidth+\" - \"+widthNavbarLeft+\" - \"+widthNavbarRight);\n\n      this.lastBodyWidth = bodyWidth;\n      return bodyWidth - this.currentPageUnavailableWidth;\n    },\n\n    /**\n     * return the available height for a the currently visible page\n     * the available height is calculated by subtracting the following elements heights (if they are visible) from the window height\n     * - Top-Navigation\n     * - Top-Navbar\n     * - Bottom-Navbar\n     * - Statusbar\n     *\n     * Notice: the former way to use the subtract the main.position().top value from the total height leads to errors in certain cases\n     *         because the value of main.position().top is not reliable all the time\n     */\n    getAvailableHeight() {\n      const windowHeight = document.documentElement.clientHeight;\n      this.currentPageUnavailableHeight = 0;\n      const emptyRect = {\n        top: 0,\n        bottom: 0\n      };\n\n      const navbarVisibility = this.getCurrentPageNavbarVisibility();\n      const topNav = document.querySelector('#navbarTop');\n      const top = document.querySelector('#top');\n      const bottomNav = document.querySelector('#navbarBottom');\n      const bottom = document.querySelector('#bottom');\n      const topNavDisplay = topNav ? window.getComputedStyle(topNav)['display'] : 'none';\n      const topDisplay = top ? window.getComputedStyle(top)['display'] : 'none';\n      const bottomNavDisplay = bottomNav ? window.getComputedStyle(bottomNav)['display'] : 'none';\n      const bottomDisplay = bottom ? window.getComputedStyle(bottom)['display'] : 'none';\n      const topRect = top ? top.getBoundingClientRect() : emptyRect;\n      const topHeight = Math.round(topRect.bottom - topRect.top);\n      const topNavRect = topNav ? topNav.getBoundingClientRect() : emptyRect;\n      const topNavHeight = Math.round(topNavRect.bottom - topNavRect.top);\n      const bottomNavRect = bottomNav ? bottomNav.getBoundingClientRect() : emptyRect;\n      const bottomNavHeight = Math.round(bottomNavRect.bottom - bottomNavRect.top);\n\n      const bottomRect = bottom ? bottom.getBoundingClientRect() : emptyRect;\n      const bottomHeight = Math.round(bottomRect.bottom - bottomRect.top);\n      const nav_pathRect = document.querySelector('.nav_path').getBoundingClientRect();\n      const navPathHeight = Math.round(nav_pathRect.bottom - nav_pathRect.top);\n\n      if (topDisplay !== 'none' && topHeight > 0) {\n        this.currentPageUnavailableHeight += Math.max(topHeight, navPathHeight);\n      }\n      if (topNavDisplay !== 'none' && navbarVisibility.top === true && topNavHeight > 0) {\n        this.currentPageUnavailableHeight += topNavHeight;\n      }\n      if (bottomNavDisplay !== 'none' && navbarVisibility.bottom === true && bottomNavHeight > 0) {\n        this.currentPageUnavailableHeight += bottomNavHeight;\n      }\n      if (bottomDisplay !== 'none' && bottomHeight > 0) {\n        this.currentPageUnavailableHeight += bottomHeight;\n      }\n      if (this.currentPageUnavailableHeight > 0) {\n        this.currentPageUnavailableHeight += 1; // remove an additional pixel for Firefox\n      }\n      return windowHeight - this.currentPageUnavailableHeight;\n    },\n\n    rowspanClass(rowspan) {\n      cv.Config.configSettings.usedRowspans[rowspan] = true;\n      return 'rowspan rowspan' + rowspan;\n    },\n\n    getWidgetColspan(widget, width) {\n      if (widget.getColspan) {\n        if (width <= cv.Config.maxScreenWidthColspanS) {\n          return widget.getColspanS();\n        }\n        if (width <= cv.Config.maxScreenWidthColspanM) {\n          return widget.getColspanM();\n        }\n        return widget.getColspan();\n      }\n      return 0;\n    },\n\n    getLayoutSuffix(width) {\n      let suffix = '';\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        suffix = '-s';\n      } else if (width <= cv.Config.maxScreenWidthColspanM) {\n        suffix = '-m';\n      }\n      return suffix;\n    },\n\n    /**\n     * applies the correct width to the widgets corresponding to the given colspan setting\n     *\n     * @param selector {String?} only update elements found by the given selector\n     * @param includeNavbars {Boolean?} also update navbar elements (default: true)\n     */\n    applyColumnWidths(selector, includeNavbars) {\n      const width = this.getAvailableWidth();\n      let mainAreaColspan = cv.Config.defaultColumns;\n      const main = document.querySelector('#main');\n      if (main) {\n        const mainAreaColumns = document.querySelector('#main').dataset['columns'];\n        if (mainAreaColumns) {\n          mainAreaColspan = parseInt(mainAreaColumns);\n        }\n      }\n\n      const pageSelector = selector ? selector : '#main .activePage';\n      let selectors = [];\n\n      if (includeNavbars === true) {\n        selectors = ['#navbarTop', '#navbarLeft', pageSelector, '#navbarRight', '#navbarBottom'];\n      } else {\n        selectors = [pageSelector];\n      }\n\n      selectors.forEach(function (area) {\n        const allContainer = document.querySelectorAll(area + ' .widget_container');\n\n        if (allContainer.length > 0) {\n          let areaColspan = cv.Config.defaultColumns;\n          const areaElement = document.querySelector(area);\n          if (areaElement) {\n            const areaColumns = areaElement.dataset['columns'];\n            if (areaColumns) {\n              areaColspan = parseInt(areaColumns);\n            }\n          }\n          allContainer.forEach(function (child) {\n            const widget = cv.ui.structure.WidgetFactory.getInstanceByElement(child);\n            const ourColspan = this.getWidgetColspan(widget, width);\n\n            let w = 'auto';\n            if (ourColspan > 0) {\n              w = Math.min(100, (ourColspan / areaColspan) * 100) + '%';\n            }\n            this.__applyWidthClass(child, w);\n          }, this);\n        }\n\n        // and elements inside groups\n        const adjustableElements = document.querySelectorAll(area + ' .group .widget_container');\n\n        adjustableElements.forEach(function (e) {\n          const widget = cv.ui.structure.WidgetFactory.getInstanceByElement(e);\n          let ourColspan = this.getWidgetColspan(widget, width);\n          if (ourColspan === null) {\n            // workaround for nowidget groups\n            const groupChild = cv.util.Tree.getChildWidgets(widget, 'group')[0];\n            ourColspan = this.getWidgetColspan(groupChild, width);\n          }\n          let w = 'auto';\n          if (ourColspan > 0) {\n            let groupColspan = mainAreaColspan;\n            const parentGroupElement = cv.util.Tree.getParent(e, '.widget_container', '.group', 1)[0];\n            if (parentGroupElement) {\n              const parentGroupWidget = cv.ui.structure.WidgetFactory.getInstanceByElement(\n                parentGroupElement.parentNode\n              );\n\n              if (parentGroupWidget) {\n                groupColspan = Math.min(mainAreaColspan, this.getWidgetColspan(parentGroupWidget, width));\n              }\n            }\n            w = Math.min(100, (ourColspan / groupColspan) * 100) + '%'; // in percent\n          }\n          this.__applyWidthClass(e, w);\n        }, this);\n      }, this);\n    },\n\n    __applyWidthClass(elem, widthClassSuffix) {\n      if (widthClassSuffix === 'auto') {\n        elem.style.width = widthClassSuffix;\n      } else {\n        switch (this.LAYOUT_MODE) {\n          case 'GRID':\n            // remove all old width related classes\n            elem.classList.forEach(function (cssClass) {\n              if (cssClass.startsWith('width-')) {\n                elem.classList.remove(cssClass);\n              }\n            }, this);\n            elem.classList.add('width-' + parseInt(widthClassSuffix));\n            break;\n\n          default:\n            elem.style.width = widthClassSuffix;\n            break;\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}