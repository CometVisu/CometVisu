{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "lastBodyWidth",
    "currentPageUnavailableWidth",
    "currentPageUnavailableHeight",
    "currentPageNavbarVisibility",
    "oldWidth",
    "LAYOUT_MODE",
    "COLSPAN_CLASS",
    "getCurrentPageNavbarVisibility",
    "left",
    "right",
    "top",
    "bottom",
    "cv",
    "Application",
    "structureController",
    "pagePartsHandler",
    "getNavbarsVisibility",
    "getCurrentPage",
    "getColspanClass",
    "width",
    "Config",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "adjustColumns",
    "getAvailableWidth",
    "oldClass",
    "newClass",
    "bodyWidth",
    "document",
    "documentElement",
    "clientWidth",
    "navbarVisibility",
    "querySelector",
    "widthNavbarLeft",
    "leftRect",
    "getBoundingClientRect",
    "window",
    "getComputedStyle",
    "Math",
    "round",
    "core",
    "Init",
    "getApplication",
    "getMobile",
    "widthNavbarRight",
    "rightRect",
    "getAvailableHeight",
    "windowHeight",
    "clientHeight",
    "emptyRect",
    "topNav",
    "bottomNav",
    "topNavDisplay",
    "topDisplay",
    "bottomNavDisplay",
    "bottomDisplay",
    "topRect",
    "topHeight",
    "topNavRect",
    "topNavHeight",
    "bottomNavRect",
    "bottomNavHeight",
    "bottomRect",
    "bottomHeight",
    "nav_pathRect",
    "navPathHeight",
    "max",
    "rowspanClass",
    "rowspan",
    "configSettings",
    "usedRowspans",
    "getWidgetColspan",
    "widget",
    "getColspan",
    "getColspanS",
    "getColspanM",
    "getLayoutSuffix",
    "suffix",
    "applyColumnWidths",
    "selector",
    "includeNavbars",
    "mainAreaColspan",
    "defaultColumns",
    "main",
    "mainAreaColumns",
    "dataset",
    "parseInt",
    "pageSelector",
    "selectors",
    "forEach",
    "area",
    "allContainer",
    "querySelectorAll",
    "length",
    "areaColspan",
    "areaElement",
    "areaColumns",
    "child",
    "ui",
    "structure",
    "WidgetFactory",
    "getInstanceByElement",
    "ourColspan",
    "w",
    "min",
    "__applyWidthClass",
    "adjustableElements",
    "e",
    "groupChild",
    "util",
    "Tree",
    "getChildWidgets",
    "groupColspan",
    "parentGroupElement",
    "getParent",
    "parentGroupWidget",
    "parentNode",
    "elem",
    "widthClassSuffix",
    "style",
    "classList",
    "cssClass",
    "startsWith",
    "remove",
    "add",
    "pure",
    "layout",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/pure/layout/Manager.js"
  ],
  "sourcesContent": [
    "/* Manager.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n */\nqx.Class.define('cv.ui.structure.pure.layout.Manager', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // use to recognize if the screen width has crossed the maxMobileScreenWidth\n    lastBodyWidth: 0,\n    currentPageUnavailableWidth: -1,\n    currentPageUnavailableHeight: -1,\n    currentPageNavbarVisibility: null,\n    oldWidth: -1,\n\n    LAYOUT_MODE: 'DEFAULT',\n\n    COLSPAN_CLASS: null,\n\n    getCurrentPageNavbarVisibility() {\n      if (\n        this.currentPageNavbarVisibility === null ||\n        this.currentPageNavbarVisibility.left === null ||\n        this.currentPageNavbarVisibility.right === null ||\n        this.currentPageNavbarVisibility.top === null ||\n        this.currentPageNavbarVisibility.bottom === null\n      ) {\n        this.currentPageNavbarVisibility = cv.Application.structureController.pagePartsHandler.getNavbarsVisibility(\n          cv.Application.structureController.getCurrentPage()\n        );\n      }\n      return this.currentPageNavbarVisibility;\n    },\n\n    // return S, M or L depening on the passed width\n    getColspanClass(width) {\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        return 'S';\n      }\n      if (width <= cv.Config.maxScreenWidthColspanM) {\n        return 'M';\n      }\n      return 'L';\n    },\n\n    adjustColumns() {\n      const width = this.getAvailableWidth();\n      const oldClass = this.getColspanClass(this.oldWidth);\n      const newClass = this.getColspanClass(width);\n\n      this.oldWidth = width;\n      this.COLSPAN_CLASS = newClass;\n      return oldClass !== newClass;\n    },\n\n    /**\n     * return the available width for a the currently visible page\n     * the available width is calculated by subtracting the following elements widths (if they are visible) from the body width\n     * - Left-Navbar\n     * - Right-Navbar\n     */\n    getAvailableWidth() {\n      // currently this calculation is done once after every page scroll (where cv.TemplateEngine.getInstance()currentPageUnavailableWidth is reseted)\n      // if the screen width falls below the threshold which activates/deactivates the mobile.css\n      // the calculation has to be done again, even if the page hasnÂ´t changed (e.g. switching between portrait and landscape mode on a mobile can cause that)\n      const bodyWidth = document.documentElement.clientWidth;\n      //      console.log(\"Mobile.css use changed \"+mobileUseChanged);\n      this.currentPageUnavailableWidth = 0;\n      const navbarVisibility = this.getCurrentPageNavbarVisibility();\n\n      const left = document.querySelector('#navbarLeft');\n      let widthNavbarLeft = 0;\n      if (left) {\n        const leftRect = left.getBoundingClientRect();\n        widthNavbarLeft =\n          navbarVisibility.left === true && window.getComputedStyle(left)['display'] !== 'none'\n            ? Math.round(leftRect.right - leftRect.left)\n            : 0;\n      }\n      if (widthNavbarLeft >= bodyWidth || qx.core.Init.getApplication().getMobile()) {\n        // Left-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n        // maybe there is a better solution to solve this problem\n        // OR: we have a mobile device where the nav bar is floating above the other content\n        widthNavbarLeft = 0;\n      }\n      const right = document.querySelector('#navbarRight');\n      let widthNavbarRight = 0;\n      if (right) {\n        const rightRect = right.getBoundingClientRect();\n        widthNavbarRight =\n          navbarVisibility.right === true && window.getComputedStyle(right)['display'] !== 'none'\n            ? Math.round(rightRect.right - rightRect.left)\n            : 0;\n      }\n      if (widthNavbarRight >= bodyWidth || qx.core.Init.getApplication().getMobile()) {\n        // Right-Navbar has the same size as the complete body, this can happen, when the navbar has no content\n        // maybe there is a better solution to solve this problem\n        // OR: we have a mobile device where the nav bar is floating above the other content\n        widthNavbarRight = 0;\n      }\n      this.currentPageUnavailableWidth = widthNavbarLeft + widthNavbarRight + 1; // remove an additional pixel for Firefox\n      //      console.log(\"Width: \"+bodyWidth+\" - \"+widthNavbarLeft+\" - \"+widthNavbarRight);\n\n      this.lastBodyWidth = bodyWidth;\n      return bodyWidth - this.currentPageUnavailableWidth;\n    },\n\n    /**\n     * return the available height for a the currently visible page\n     * the available height is calculated by subtracting the following elements heights (if they are visible) from the window height\n     * - Top-Navigation\n     * - Top-Navbar\n     * - Bottom-Navbar\n     * - Statusbar\n     *\n     * Notice: the former way to use the subtract the main.position().top value from the total height leads to errors in certain cases\n     *         because the value of main.position().top is not reliable all the time\n     */\n    getAvailableHeight() {\n      const windowHeight = document.documentElement.clientHeight;\n      this.currentPageUnavailableHeight = 0;\n      const emptyRect = {\n        top: 0,\n        bottom: 0\n      };\n\n      const navbarVisibility = this.getCurrentPageNavbarVisibility();\n      const topNav = document.querySelector('#navbarTop');\n      const top = document.querySelector('#top');\n      const bottomNav = document.querySelector('#navbarBottom');\n      const bottom = document.querySelector('#bottom');\n      const topNavDisplay = topNav ? window.getComputedStyle(topNav)['display'] : 'none';\n      const topDisplay = top ? window.getComputedStyle(top)['display'] : 'none';\n      const bottomNavDisplay = bottomNav ? window.getComputedStyle(bottomNav)['display'] : 'none';\n      const bottomDisplay = bottom ? window.getComputedStyle(bottom)['display'] : 'none';\n      const topRect = top ? top.getBoundingClientRect() : emptyRect;\n      const topHeight = Math.round(topRect.bottom - topRect.top);\n      const topNavRect = topNav ? topNav.getBoundingClientRect() : emptyRect;\n      const topNavHeight = Math.round(topNavRect.bottom - topNavRect.top);\n      const bottomNavRect = bottomNav ? bottomNav.getBoundingClientRect() : emptyRect;\n      const bottomNavHeight = Math.round(bottomNavRect.bottom - bottomNavRect.top);\n\n      const bottomRect = bottom ? bottom.getBoundingClientRect() : emptyRect;\n      const bottomHeight = Math.round(bottomRect.bottom - bottomRect.top);\n      const nav_pathRect = document.querySelector('.nav_path').getBoundingClientRect();\n      const navPathHeight = Math.round(nav_pathRect.bottom - nav_pathRect.top);\n\n      if (topDisplay !== 'none' && topHeight > 0) {\n        this.currentPageUnavailableHeight += Math.max(topHeight, navPathHeight);\n      }\n      if (topNavDisplay !== 'none' && navbarVisibility.top === true && topNavHeight > 0) {\n        this.currentPageUnavailableHeight += topNavHeight;\n      }\n      if (bottomNavDisplay !== 'none' && navbarVisibility.bottom === true && bottomNavHeight > 0) {\n        this.currentPageUnavailableHeight += bottomNavHeight;\n      }\n      if (bottomDisplay !== 'none' && bottomHeight > 0) {\n        this.currentPageUnavailableHeight += bottomHeight;\n      }\n      if (this.currentPageUnavailableHeight > 0) {\n        this.currentPageUnavailableHeight += 1; // remove an additional pixel for Firefox\n      }\n      return windowHeight - this.currentPageUnavailableHeight;\n    },\n\n    rowspanClass(rowspan) {\n      cv.Config.configSettings.usedRowspans[rowspan] = true;\n      return 'rowspan rowspan' + rowspan;\n    },\n\n    getWidgetColspan(widget, width) {\n      if (widget.getColspan) {\n        if (width <= cv.Config.maxScreenWidthColspanS) {\n          return widget.getColspanS();\n        }\n        if (width <= cv.Config.maxScreenWidthColspanM) {\n          return widget.getColspanM();\n        }\n        return widget.getColspan();\n      }\n      return 0;\n    },\n\n    getLayoutSuffix(width) {\n      let suffix = '';\n      if (width <= cv.Config.maxScreenWidthColspanS) {\n        suffix = '-s';\n      } else if (width <= cv.Config.maxScreenWidthColspanM) {\n        suffix = '-m';\n      }\n      return suffix;\n    },\n\n    /**\n     * applies the correct width to the widgets corresponding to the given colspan setting\n     *\n     * @param selector {String?} only update elements found by the given selector\n     * @param includeNavbars {Boolean?} also update navbar elements (default: true)\n     */\n    applyColumnWidths(selector, includeNavbars) {\n      const width = this.getAvailableWidth();\n      let mainAreaColspan = cv.Config.defaultColumns;\n      const main = document.querySelector('#main');\n      if (main) {\n        const mainAreaColumns = document.querySelector('#main').dataset['columns'];\n        if (mainAreaColumns) {\n          mainAreaColspan = parseInt(mainAreaColumns);\n        }\n      }\n\n      const pageSelector = selector ? selector : '#main .activePage';\n      let selectors = [];\n\n      if (includeNavbars === true) {\n        selectors = ['#navbarTop', '#navbarLeft', pageSelector, '#navbarRight', '#navbarBottom'];\n      } else {\n        selectors = [pageSelector];\n      }\n\n      selectors.forEach(function (area) {\n        const allContainer = document.querySelectorAll(area + ' .widget_container');\n\n        if (allContainer.length > 0) {\n          let areaColspan = cv.Config.defaultColumns;\n          const areaElement = document.querySelector(area);\n          if (areaElement) {\n            const areaColumns = areaElement.dataset['columns'];\n            if (areaColumns) {\n              areaColspan = parseInt(areaColumns);\n            }\n          }\n          allContainer.forEach(function (child) {\n            const widget = cv.ui.structure.WidgetFactory.getInstanceByElement(child);\n            const ourColspan = this.getWidgetColspan(widget, width);\n\n            let w = 'auto';\n            if (ourColspan > 0) {\n              w = Math.min(100, (ourColspan / areaColspan) * 100) + '%';\n            }\n            this.__applyWidthClass(child, w);\n          }, this);\n        }\n\n        // and elements inside groups\n        const adjustableElements = document.querySelectorAll(area + ' .group .widget_container');\n\n        adjustableElements.forEach(function (e) {\n          const widget = cv.ui.structure.WidgetFactory.getInstanceByElement(e);\n          let ourColspan = this.getWidgetColspan(widget, width);\n          if (ourColspan === null) {\n            // workaround for nowidget groups\n            const groupChild = cv.util.Tree.getChildWidgets(widget, 'group')[0];\n            ourColspan = this.getWidgetColspan(groupChild, width);\n          }\n          let w = 'auto';\n          if (ourColspan > 0) {\n            let groupColspan = mainAreaColspan;\n            const parentGroupElement = cv.util.Tree.getParent(e, '.widget_container', '.group', 1)[0];\n            if (parentGroupElement) {\n              const parentGroupWidget = cv.ui.structure.WidgetFactory.getInstanceByElement(\n                parentGroupElement.parentNode\n              );\n\n              if (parentGroupWidget) {\n                groupColspan = Math.min(mainAreaColspan, this.getWidgetColspan(parentGroupWidget, width));\n              }\n            }\n            w = Math.min(100, (ourColspan / groupColspan) * 100) + '%'; // in percent\n          }\n          this.__applyWidthClass(e, w);\n        }, this);\n      }, this);\n    },\n\n    __applyWidthClass(elem, widthClassSuffix) {\n      if (widthClassSuffix === 'auto') {\n        elem.style.width = widthClassSuffix;\n      } else {\n        switch (this.LAYOUT_MODE) {\n          case 'GRID':\n            // remove all old width related classes\n            elem.classList.forEach(function (cssClass) {\n              if (cssClass.startsWith('width-')) {\n                elem.classList.remove(cssClass);\n              }\n            }, this);\n            elem.classList.add('width-' + parseInt(widthClassSuffix));\n            break;\n\n          default:\n            elem.style.width = widthClassSuffix;\n            break;\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}