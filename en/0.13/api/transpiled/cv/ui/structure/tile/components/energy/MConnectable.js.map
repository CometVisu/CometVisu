{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_connections",
    "_inverseConnections",
    "properties",
    "connectTo",
    "check",
    "nullable",
    "apply",
    "connectFrom",
    "connectionPoints",
    "init",
    "useConnectionSum",
    "members",
    "_connectorTo",
    "_connectorFrom",
    "_useConnectionsSumAsValue",
    "addConnection",
    "other",
    "includes",
    "push",
    "getUseConnectionSum",
    "addListener",
    "_updateConnectionsSum",
    "addInverseConnection",
    "removeConnection",
    "remove",
    "removeListener",
    "removeInverseConnection",
    "_applyUseConnectionSum",
    "value",
    "_iterator",
    "_createForOfIteratorHelper",
    "_step",
    "s",
    "n",
    "done",
    "err",
    "e",
    "f",
    "_iterator2",
    "_step2",
    "sum",
    "_iterator3",
    "_step3",
    "getValue",
    "_iterator4",
    "_step4",
    "setValue",
    "_updateDirection",
    "Math",
    "round",
    "connectors",
    "_i",
    "_connectors",
    "length",
    "connector",
    "setShowDirection",
    "_applyConnectTo",
    "targetId",
    "_svg",
    "parent",
    "_element",
    "parentElement",
    "target",
    "querySelector",
    "nodeName",
    "toLowerCase",
    "_initConnection",
    "_instance",
    "_applyConnectionPoints",
    "getConnectionPoints",
    "setTarget",
    "registerPreMappingHook",
    "preMappingHook",
    "unregisterPreMappingHook",
    "_applyConnectFrom",
    "sourceId",
    "source",
    "setSource",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "svg",
    "Connector",
    "hasNoValue",
    "getElement",
    "getAttribute",
    "energy",
    "PowerEntity",
    "bind",
    "_i2",
    "_connectors2",
    "set",
    "sourceConnectionPoint",
    "targetConnectionPoint",
    "_value$split",
    "split",
    "_value$split2",
    "_slicedToArray",
    "destruct",
    "getSource",
    "getTarget",
    "_disposeObjects",
    "clear",
    "MConnectable"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/energy/MConnectable.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n\n/**\n * Mixin for all SVG based components that can be connected to each other.\n * @since 2023\n * @author Tobias Br√§utigam\n */\nqx.Mixin.define('cv.ui.structure.tile.components.energy.MConnectable', {\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    this._connections = [];\n    this._inverseConnections = [];\n  },\n\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    connectTo: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyConnectTo'\n    },\n\n    connectFrom: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyConnectFrom'\n    },\n\n    connectionPoints: {\n      check: 'String',\n      init: 'auto',\n      apply: '_applyConnectionPoints'\n    },\n\n    useConnectionSum: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyUseConnectionSum'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _connectorTo: null,\n    _connectorFrom: null,\n    _useConnectionsSumAsValue: null,\n    /**\n     * @type {Array<cv.ui.structure.tile.components.energy.PowerEntity>}\n     */\n    _connections: null,\n    /**\n     * @type {Array<cv.ui.structure.tile.components.energy.PowerEntity>}\n     */\n    _inverseConnections: null,\n\n\n    /**\n     * Adds an incoming connection from another PowerEntity\n     * @param other {cv.ui.structure.tile.components.energy.PowerEntity} connected from other to this\n     */\n    addConnection(other) {\n      if (!this._connections.includes(other)) {\n        this._connections.push(other);\n        if (this.getUseConnectionSum()) {\n          other.addListener('changeValue', this._updateConnectionsSum, this);\n        }\n      }\n    },\n\n    /**\n     * Adds an incoming inverse connection from another PowerEntity.\n     * Inverse connection means that the sign of the other entity is flipped for summing all values\n     * @param other {cv.ui.structure.tile.components.energy.PowerEntity} connected from other to this\n     */\n    addInverseConnection(other) {\n      if (!this._inverseConnections.includes(other)) {\n        this._inverseConnections.push(other);\n        if (this.getUseConnectionSum()) {\n          other.addListener('changeValue', this._updateConnectionsSum, this);\n        }\n      }\n    },\n\n    /**\n     * Remove an incoming connection from another PowerEntity\n     * @param other {cv.ui.structure.tile.components.energy.PowerEntity}\n     */\n    removeConnection(other) {\n      if (this._connections.includes(other)) {\n        this._connections.remove(other);\n        if (this.getUseConnectionSum()) {\n          other.removeListener('changeValue', this._updateConnectionsSum, this);\n        }\n      }\n    },\n\n    /**\n     * Remove an incoming inverse connection from another PowerEntity\n     * @param other {cv.ui.structure.tile.components.energy.PowerEntity}\n     */\n    removeInverseConnection(other) {\n      if (this._inverseConnections.includes(other)) {\n        this._inverseConnections.remove(other);\n        if (this.getUseConnectionSum()) {\n          other.removeListener('changeValue', this._updateConnectionsSum, this);\n        }\n      }\n    },\n\n    _applyUseConnectionSum(value) {\n      if (value) {\n        for (const other of this._connections) {\n          // refresh connections\n          other.removeListener('changeValue', this._updateConnectionsSum, this);\n          other.addListener('changeValue', this._updateConnectionsSum, this);\n        }\n        for (const other of this._inverseConnections) {\n          // refresh connections\n          other.removeListener('changeValue', this._updateConnectionsSum, this);\n          other.addListener('changeValue', this._updateConnectionsSum, this);\n        }\n      }\n    },\n\n    _updateConnectionsSum() {\n      let sum = 0.0;\n      for (const other of this._connections) {\n        sum += other.getValue();\n      }\n      for (const other of this._inverseConnections) {\n        sum -= other.getValue();\n      }\n      this.setValue(sum);\n    },\n\n    _updateDirection() {\n      const value = Math.round(this.getValue());\n      const connectors = [this._connectorTo, this._connectorFrom];\n      for (const connector of connectors) {\n        if (connector) {\n          if (value < 0) {\n            connector.setShowDirection('source');\n          } else if (value > 0) {\n            connector.setShowDirection('target');\n          } else {\n            connector.setShowDirection('none');\n          }\n        }\n      }\n    },\n\n    _applyConnectTo(targetId) {\n      if (this._svg && targetId) {\n        const parent = this._element.parentElement;\n        const target = parent.querySelector('#' + targetId);\n        if (target && target.nodeName.toLowerCase() === 'cv-power-entity') {\n          if (!this._connectorTo) {\n            this._connectorTo = this._initConnection(this, target._instance);\n            this._applyConnectionPoints(this.getConnectionPoints());\n            this._updateDirection();\n            // we are the power source for the target\n            target._instance.addConnection(this);\n          } else {\n            this._connectorTo.setTarget(target._instance);\n          }\n        }\n      }\n      if (targetId) {\n        this.registerPreMappingHook(this.preMappingHook, this);\n      } else {\n        this.unregisterPreMappingHook(this.preMappingHook);\n      }\n    },\n\n    _applyConnectFrom(sourceId) {\n      if (this._svg && sourceId) {\n        const parent = this._element.parentElement;\n        const source = parent.querySelector('#' + sourceId);\n        if (source && source.nodeName.toLowerCase() === 'cv-power-entity') {\n          if (!this._connectorFrom) {\n            this._connectorFrom = this._initConnection(source._instance, this);\n            this._applyConnectionPoints(this.getConnectionPoints());\n            this._updateDirection();\n            // we take power from the target\n            source._instance.addInverseConnection(this);\n          } else {\n            this._connectorFrom.setSource(source._instance);\n          }\n        }\n      }\n    },\n\n    /**\n     *\n     * @param source {cv.ui.structure.tile.components.energy.PowerEntity}\n     * @param target {cv.ui.structure.tile.components.energy.PowerEntity}\n     * @returns {cv.ui.structure.tile.components.svg.Connector}\n     * @private\n     */\n    _initConnection(source, target) {\n      const connector = new cv.ui.structure.tile.components.svg.Connector(source, target);\n      if (source.hasNoValue()) {\n        const targetId = target.getElement().getAttribute('id');\n        const parentElement = this._element.parentElement.querySelector('#' + targetId);\n        if (parentElement && parentElement._instance && parentElement._instance instanceof cv.ui.structure.tile.components.energy.PowerEntity && !parentElement._instance.hasNoValue()) {\n          // use styleClass from target\n          parentElement._instance.bind('styleClass', connector, 'styleClass');\n        }\n      } else {\n        this.bind('styleClass', connector, 'styleClass');\n      }\n      return connector;\n    },\n\n    _applyConnectionPoints(value) {\n      if (value) {\n        const connectors = [];\n        if (this._connectorTo) {\n          connectors.push(this._connectorTo);\n        }\n        if (this._connectorFrom) {\n          connectors.push(this._connectorFrom);\n        }\n        for (const connector of connectors) {\n          if (value === 'auto') {\n            connector.set({\n              sourceConnectionPoint: 'auto',\n              targetConnectionPoint: 'auto'\n            });\n          } else {\n            const [source, target] = value.split('-');\n            connector.set({\n              sourceConnectionPoint: source,\n              targetConnectionPoint: target\n            });\n          }\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    const source = this.getSource();\n    const target = this.getTarget();\n    if (target) {\n      target.removeConnection(this);\n    }\n    if (source) {\n      source.removeInverseConnection(this);\n    }\n\n    this._disposeObjects('_connectorTo', '_connectorFrom');\n    this._connections.clear();\n    this._inverseConnections.clear();\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}