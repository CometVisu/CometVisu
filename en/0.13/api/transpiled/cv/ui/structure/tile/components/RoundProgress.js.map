{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "construct",
    "element",
    "constructor",
    "call",
    "addListener",
    "_applyVisible",
    "properties",
    "progress",
    "check",
    "apply",
    "text",
    "type",
    "init",
    "min",
    "max",
    "members",
    "__writeAddresses",
    "__circumference",
    "__start",
    "__normalizedRadius",
    "__radius",
    "__label",
    "__canvas",
    "__availableLabelWidth",
    "__defaultLabelFontSize",
    "_queuedFitText",
    "_init",
    "_this",
    "RoundProgress",
    "superclass",
    "prototype",
    "_element",
    "style",
    "document",
    "querySelector",
    "hasFixedRadius",
    "hasAttribute",
    "radius",
    "getAttribute",
    "parseInt",
    "getPropertyValue",
    "strokeWidth",
    "normalizedRadius",
    "Math",
    "PI",
    "isNaN",
    "setMin",
    "setMax",
    "setType",
    "getType",
    "height",
    "ns",
    "svg",
    "createElementNS",
    "setAttribute",
    "bg",
    "classList",
    "add",
    "stroke",
    "appendChild",
    "bar",
    "concat",
    "x",
    "y",
    "replaceChildren",
    "createElement",
    "event",
    "message",
    "Bus",
    "subscribe",
    "ev",
    "getData",
    "querySelectorAll",
    "forEach",
    "circle",
    "contains",
    "_applyProgress",
    "isPropertyInitialized",
    "getProgress",
    "__convert",
    "__P_83_9",
    "angle",
    "angleRad",
    "cos",
    "sin",
    "value",
    "isConnected",
    "valueElement",
    "end",
    "valueInRange",
    "getMin",
    "percent",
    "getMax",
    "join",
    "_fitText",
    "textContent",
    "isVisible",
    "__context",
    "getContext",
    "compStyle",
    "window",
    "getComputedStyle",
    "font",
    "metrics",
    "measureText",
    "width",
    "factor",
    "fontSize",
    "floor",
    "_applyText",
    "destruct",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "_QxConnector",
    "_class",
    "_classCallCheck",
    "_callSuper",
    "_inherits",
    "_createClass",
    "QxConnector"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/RoundProgress.js"
  ],
  "sourcesContent": [
    "/* RoundProgress.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a round progress bar (partially filled circle).\n * This component must be used inside a cv-value component, it is not meant to be used standalone.\n *\n * @author Tobias BrÃ¤utigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.components.RoundProgress', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: cv.ui.structure.tile.MVisibility,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(element) {\n    super(element);\n    this.addListener('changeVisible', this._applyVisible, this);\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    progress: {\n      check: 'Number',\n      apply: '_applyProgress'\n    },\n\n    text: {\n      check: 'String',\n      apply: '_applyText'\n    },\n\n    type: {\n      check: ['circle', 'semiCircle'],\n      init: 'circle'\n    },\n\n    min: {\n      check: 'Number',\n      init: 0\n    },\n\n    max: {\n      check: 'Number',\n      init: 100\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __writeAddresses: null,\n    __circumference: null,\n    __start: null,\n    __normalizedRadius: null,\n    __radius: null,\n    __label: null,\n    __canvas: null,\n    __availableLabelWidth: null,\n    __defaultLabelFontSize: null,\n    _queuedFitText: null,\n\n    _init() {\n      super._init();\n      const element = this._element;\n      const style = document.querySelector(':root').style;\n      const hasFixedRadius = element.hasAttribute('radius');\n      const radius = (this.__radius =\n        element.getAttribute('radius') || parseInt(style.getPropertyValue('--tileCellWidth')) || 56);\n      const strokeWidth = element.getAttribute('stroke') || 8;\n      const normalizedRadius = (this.__normalizedRadius = radius - strokeWidth / 2);\n      this.__circumference = normalizedRadius * 2 * Math.PI;\n\n      if (element.hasAttribute('min')) {\n        const min = parseInt(element.getAttribute('min'));\n        if (!isNaN(min)) {\n          this.setMin(min);\n        }\n      }\n\n      if (element.hasAttribute('max')) {\n        const max = parseInt(element.getAttribute('max'));\n        if (!isNaN(max)) {\n          this.setMax(max);\n        }\n      }\n\n      if (element.hasAttribute('type')) {\n        this.setType(element.getAttribute('type'));\n      }\n      const type = this.getType();\n      let height = type === 'semiCircle' ? radius : radius * 2;\n      const ns = 'http://www.w3.org/2000/svg';\n      const svg = document.createElementNS(ns, 'svg');\n      svg.setAttribute('height', height);\n      svg.setAttribute('width', '' + (radius * 2));\n      svg.setAttribute('type', type);\n\n      if (type === 'circle') {\n        if (!element.hasAttribute('no-background')) {\n          const bg = document.createElementNS(ns, 'circle');\n          bg.classList.add('bg');\n          bg.setAttribute('r', '' +normalizedRadius);\n          bg.setAttribute('cx', '50%');\n          bg.setAttribute('cy', '50%');\n          bg.setAttribute('fill', 'transparent');\n          bg.setAttribute('stroke-width', strokeWidth);\n          if (element.hasAttribute('background-color')) {\n            bg.style.stroke = element.getAttribute('background-color');\n          }\n          svg.appendChild(bg);\n        }\n        const bar = document.createElementNS(ns, 'circle');\n        bar.classList.add('bar');\n        bar.setAttribute('r', '' +normalizedRadius);\n        bar.setAttribute('cx', '50%');\n        bar.setAttribute('cy', '50%');\n        bar.setAttribute('stroke-width', strokeWidth);\n        bar.setAttribute('stroke-dasharray', `${this.__circumference} ${this.__circumference}`);\n        bar.setAttribute('stroke-dashoffset', this.__circumference);\n        if (element.hasAttribute('foreground-color')) {\n          bar.style.stroke = element.getAttribute('foreground-color');\n        }\n        svg.appendChild(bar);\n      } else if (type === 'semiCircle') {\n        if (!element.hasAttribute('no-background')) {\n          const bg = document.createElementNS(ns, 'path');\n          bg.classList.add('bg');\n          bg.setAttribute('d', `M ${strokeWidth / 2} ${radius} A ${normalizedRadius} ${normalizedRadius} 0 0 1 ${\n            radius * 2 - strokeWidth / 2\n          } ${radius}`);\n          bg.setAttribute('fill', 'transparent');\n          bg.setAttribute('stroke-width', strokeWidth);\n          if (element.hasAttribute('background-color')) {\n            bg.style.stroke = element.getAttribute('background-color');\n          }\n          svg.appendChild(bg);\n        }\n        this.__start = {\n          x: strokeWidth / 2,\n          y: radius\n        };\n        const bar = document.createElementNS(ns, 'path');\n        bar.classList.add('bar');\n        bar.setAttribute('d', `M ${strokeWidth / 2} ${radius} A ${normalizedRadius} ${normalizedRadius} 0 0 0 ${\n          strokeWidth / 2\n        } ${radius}`);\n        bar.setAttribute('fill', 'transparent');\n        bar.setAttribute('stroke-width', strokeWidth);\n        if (element.hasAttribute('foreground-color')) {\n          bar.style.stroke = element.getAttribute('foreground-color');\n        }\n        svg.appendChild(bar);\n      }\n      element.replaceChildren(svg, document.createElement('label'));\n\n      this.__availableLabelWidth = radius * 2 - strokeWidth * 2 - 24;\n\n      if (!hasFixedRadius) {\n        qx.event.message.Bus.subscribe('cv.design.tile.cellWidthChanged', ev => {\n          this.__radius = ev.getData();\n          this.__normalizedRadius = this.__radius - strokeWidth / 2;\n          this.__circumference = this.__normalizedRadius * 2 * Math.PI;\n          height = type === 'semiCircle' ? this.__radius : this.__radius * 2;\n          const svg = element.querySelector(':scope > svg');\n          svg.setAttribute('height', '' + height);\n          svg.setAttribute('width', '' + this.__radius * 2);\n          if (type === 'circle') {\n            this._element.querySelectorAll(':scope > svg > circle').forEach(circle => {\n              circle.setAttribute('r', '' + this.__normalizedRadius);\n              if (circle.classList.contains('bar')) {\n                circle.setAttribute('stroke-dasharray', this.__circumference + ' ' + this.__circumference);\n\n                circle.setAttribute('stroke-dashoffset', '' + this.__circumference);\n              }\n            });\n          } else if (type === 'semiCircle') {\n            this.__start.y = this.__radius;\n            const bg = this._element.querySelector(':scope > svg > path.bg');\n            if (bg) {\n              bg.setAttribute(\n                'd',\n                `M ${strokeWidth / 2} ${this.__radius} A ${this.__normalizedRadius} ${this.__normalizedRadius} 0 0 1 ${\n                  this.__radius * 2 - strokeWidth / 2\n                } ${this.__radius}`\n              );\n            }\n          }\n          this._applyProgress(this.isPropertyInitialized('progress') ? this.getProgress() : 0);\n        });\n      }\n    },\n\n    __convert(angle) {\n      const angleRad = angle * (Math.PI / 180.0);\n      return {\n        x: this.__radius - this.__normalizedRadius * Math.cos(angleRad),\n        y: this.__radius - this.__normalizedRadius * Math.sin(angleRad)\n      };\n    },\n\n    _applyProgress(value) {\n      if (this.isConnected()) {\n        let valueElement;\n        let end;\n        let valueInRange = value - this.getMin();\n        let percent = Math.max(0, Math.min(100, (100 / (this.getMax() - this.getMin())) * valueInRange));\n\n        switch (this.getType()) {\n          case 'circle':\n            valueElement = this._element.querySelector(':scope > svg > circle.bar');\n\n            valueElement.setAttribute(\n              'stroke-dashoffset',\n              '' + this.__circumference - (percent / 100) * this.__circumference\n            );\n\n            break;\n\n          case 'semiCircle':\n            valueElement = this._element.querySelector(':scope > svg > path.bar');\n\n            end = this.__convert((180 / 100) * percent);\n            valueElement.setAttribute(\n              'd',\n              [\n                'M',\n                this.__start.x,\n                this.__start.y,\n                'A',\n                this.__normalizedRadius,\n                this.__normalizedRadius,\n                0,\n                0,\n                1,\n                end.x,\n                end.y\n              ].join(' ')\n            );\n\n            break;\n        }\n      }\n    },\n\n    _fitText() {\n      if (this.__label && this.__label.textContent) {\n        if (this.isVisible()) {\n          if (!this.__canvas) {\n            this.__canvas = document.createElement('canvas');\n            this.__context = this.__canvas.getContext('2d');\n            const compStyle = window.getComputedStyle(this.__label);\n            this.__context.font = compStyle.getPropertyValue('font');\n            this.__defaultLabelFontSize = compStyle.getPropertyValue('font-size');\n          }\n          const metrics = this.__context.measureText(this.__label.textContent);\n          if (metrics.width > this.__availableLabelWidth) {\n            // adjust font-size\n            const factor = this.__availableLabelWidth / metrics.width;\n            this.__label.style.fontSize = Math.floor(parseInt(this.__defaultLabelFontSize) * factor) + 'px';\n          } else {\n            this.__label.style.fontSize = this.__defaultLabelFontSize;\n          }\n          this._queuedFitText = false;\n        } else {\n          this._queuedFitText = true;\n        }\n      }\n    },\n\n    _applyVisible(ev) {\n      if (ev.getData() && this._queuedFitText) {\n        this._fitText();\n      }\n    },\n\n    _applyText(value) {\n      if (this.isConnected()) {\n        if (!this.__label) {\n          this.__label = this._element.querySelector(':scope > label');\n        }\n        this.__label.textContent = value;\n        if (!value) {\n          // empty text, just reset to default font size\n          if (this.__defaultLabelFontSize) {\n            this.__label.style.fontSize = this.__defaultLabelFontSize;\n          }\n        } else {\n          this._fitText();\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this.__label = null;\n  },\n\n  defer(QxClass) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'round-progress',\n      class extends QxConnector {\n        constructor() {\n          super(QxClass);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}