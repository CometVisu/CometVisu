{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/RoundProgress.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "properties",
    "progress",
    "check",
    "apply",
    "text",
    "type",
    "init",
    "min",
    "max",
    "members",
    "__writeAddresses",
    "__circumference",
    "__start",
    "__normalizedRadius",
    "__radius",
    "__label",
    "__canvas",
    "__availableLabelWidth",
    "__defaultLabelFontSize",
    "_queuedFitText",
    "_init",
    "element",
    "_element",
    "style",
    "document",
    "querySelector",
    "hasFixedRadius",
    "hasAttribute",
    "radius",
    "getAttribute",
    "parseInt",
    "getPropertyValue",
    "strokeWidth",
    "normalizedRadius",
    "Math",
    "PI",
    "isNaN",
    "setMin",
    "setMax",
    "setType",
    "getType",
    "height",
    "code",
    "x",
    "y",
    "innerHTML",
    "event",
    "message",
    "Bus",
    "subscribe",
    "ev",
    "getData",
    "svg",
    "setAttribute",
    "querySelectorAll",
    "forEach",
    "circle",
    "classList",
    "contains",
    "bg",
    "_applyProgress",
    "isPropertyInitialized",
    "getProgress",
    "__convert",
    "angle",
    "angleRad",
    "cos",
    "sin",
    "value",
    "isConnected",
    "valueElement",
    "end",
    "valueInRange",
    "getMin",
    "percent",
    "getMax",
    "join",
    "_fitText",
    "textContent",
    "isVisible",
    "createElement",
    "__context",
    "getContext",
    "compStyle",
    "window",
    "getComputedStyle",
    "font",
    "metrics",
    "measureText",
    "width",
    "factor",
    "fontSize",
    "floor",
    "_applyVisible",
    "visible",
    "_applyText",
    "destruct",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "RoundProgress"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* RoundProgress.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a round progress bar (partially filled circle).\n * This component must be used inside a cv-value component, it is not meant to be used standalone.\n *\n * @author Tobias Bräutigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.components.RoundProgress', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: cv.ui.structure.tile.MVisibility,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    progress: {\n      check: 'Number',\n      apply: '_applyProgress'\n    },\n    text: {\n      check: 'String',\n      apply: '_applyText'\n    },\n    type: {\n      check: ['circle', 'semiCircle'],\n      init: 'circle'\n    },\n    min: {\n      check: 'Number',\n      init: 0\n    },\n    max: {\n      check: 'Number',\n      init: 100\n    }\n  },\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __writeAddresses: null,\n    __circumference: null,\n    __start: null,\n    __normalizedRadius: null,\n    __radius: null,\n    __label: null,\n    __canvas: null,\n    __availableLabelWidth: null,\n    __defaultLabelFontSize: null,\n    _queuedFitText: null,\n\n    _init() {\n      this.base(arguments);\n      const element = this._element;\n      const style = document.querySelector(':root').style;\n      const hasFixedRadius = element.hasAttribute('radius');\n      const radius = this.__radius = element.getAttribute('radius') || parseInt(style.getPropertyValue('--tileCellWidth')) || 56;\n      const strokeWidth = element.getAttribute('stroke') || 8;\n      const normalizedRadius = this.__normalizedRadius = radius - strokeWidth / 2;\n      this.__circumference = normalizedRadius * 2 * Math.PI;\n\n      if (element.hasAttribute('min')) {\n        const min = parseInt(element.getAttribute('min'));\n        if (!isNaN(min)) {\n          this.setMin(min);\n        }\n      }\n\n      if (element.hasAttribute('max')) {\n        const max = parseInt(element.getAttribute('max'));\n        if (!isNaN(max)) {\n          this.setMax(max);\n        }\n      }\n\n      if (element.hasAttribute('type')) {\n        this.setType(element.getAttribute('type'));\n      }\n      const type = this.getType();\n      let height = type === 'semiCircle' ? radius : radius * 2;\n      let code = `<svg height=\"${height}\" width=\"${radius * 2}\" type=\"${type}\">`;\n      if (type === 'circle') {\n        if (!element.hasAttribute('no-background')) {\n          code += `<circle class=\"bg\" \n                r=\"${normalizedRadius}\" \n                cx=\"50%\" \n                cy=\"50%\" \n                fill=\"transparent\" \n                stroke-width=\"${strokeWidth}\"/>`;\n        }\n        code += `<circle class=\"bar\" \n              r=\"${normalizedRadius}\" \n              cx=\"50%\" \n              cy=\"50%\" \n              stroke-width=\"${strokeWidth}\" \n              stroke-dasharray=\"${this.__circumference} ${this.__circumference}\" \n              stroke-dashoffset=\"${this.__circumference}\"/>`;\n      } else if (type === 'semiCircle') {\n        if (!element.hasAttribute('no-background')) {\n          code += `<path class=\"bg\" d=\"M ${strokeWidth / 2} ${radius} A ${normalizedRadius} ${normalizedRadius} 0 0 1 ${radius * 2 - strokeWidth / 2} ${radius}\" fill=\"transparent\" stroke-width=\"${strokeWidth}\"/>`;\n        }\n        this.__start = {\n          x: strokeWidth / 2,\n          y: radius\n        };\n        code += `<path class=\"bar\" d=\"M ${strokeWidth / 2} ${radius} A ${normalizedRadius} ${normalizedRadius} 0 0 0 ${strokeWidth / 2} ${radius}\" fill=\"transparent\" stroke-width=\"${strokeWidth}\"/>`;\n      }\n      code += '</svg><label></label>';\n      element.innerHTML = code;\n\n      this.__availableLabelWidth = radius * 2 - strokeWidth * 2 - 24;\n\n      if (!hasFixedRadius) {\n        qx.event.message.Bus.subscribe('cv.design.tile.cellWidthChanged', ev => {\n          this.__radius = ev.getData();\n          this.__normalizedRadius = this.__radius - strokeWidth / 2;\n          this.__circumference = this.__normalizedRadius * 2 * Math.PI;\n          height = type === 'semiCircle' ? this.__radius : this.__radius * 2;\n          const svg = element.querySelector(':scope > svg');\n          svg.setAttribute('height', '' + height);\n          svg.setAttribute('width', '' + this.__radius * 2);\n          if (type === 'circle') {\n            this._element.querySelectorAll(':scope > svg > circle').forEach(circle => {\n              circle.setAttribute('r', '' + this.__normalizedRadius);\n              if (circle.classList.contains('bar')) {\n                circle.setAttribute('stroke-dasharray', this.__circumference + ' ' + this.__circumference);\n                circle.setAttribute('stroke-dashoffset', '' + this.__circumference);\n              }\n            });\n          } else if (type === 'semiCircle') {\n            this.__start.y = this.__radius;\n            const bg = this._element.querySelector(':scope > svg > path.bg');\n            if (bg) {\n              bg.setAttribute('d', `M ${strokeWidth / 2} ${this.__radius} A ${this.__normalizedRadius} ${this.__normalizedRadius} 0 0 1 ${this.__radius * 2 - strokeWidth / 2} ${this.__radius}`);\n            }\n          }\n          this._applyProgress(this.isPropertyInitialized('progress') ? this.getProgress() : 0);\n        });\n      }\n    },\n\n    __convert(angle) {\n      const angleRad = angle * (Math.PI / 180.0);\n      return {\n        x: this.__radius - (this.__normalizedRadius * Math.cos(angleRad)),\n        y: this.__radius - (this.__normalizedRadius * Math.sin(angleRad))\n      };\n    },\n\n    _applyProgress(value) {\n      if (this.isConnected()) {\n        let valueElement;\n        let end;\n        let valueInRange = value - this.getMin();\n        let percent = Math.max(0, Math.min(100, (100 / (this.getMax() - this.getMin())) * valueInRange));\n        switch (this.getType()) {\n          case 'circle':\n            valueElement = this._element.querySelector(':scope > svg > circle.bar');\n            valueElement.setAttribute('stroke-dashoffset', '' + this.__circumference - percent / 100 * this.__circumference);\n            break;\n\n          case 'semiCircle':\n            valueElement = this._element.querySelector(':scope > svg > path.bar');\n            end = this.__convert(180/100 * percent);\n            valueElement.setAttribute('d', [\n              'M', this.__start.x, this.__start.y,\n              'A', this.__normalizedRadius, this.__normalizedRadius, 0, 0, 1, end.x, end.y\n            ].join(' '));\n            break;\n        }\n      }\n    },\n\n    _fitText() {\n      if (this.__label && this.__label.textContent) {\n        if (this.isVisible()) {\n          if (!this.__canvas) {\n            this.__canvas = document.createElement('canvas');\n            this.__context = this.__canvas.getContext('2d');\n            const compStyle = window.getComputedStyle(this.__label);\n            this.__context.font = compStyle.getPropertyValue('font');\n            this.__defaultLabelFontSize = compStyle.getPropertyValue('font-size');\n          }\n          const metrics = this.__context.measureText(this.__label.textContent);\n          if (metrics.width > this.__availableLabelWidth) {\n            // adjust font-size\n            const factor = this.__availableLabelWidth / metrics.width;\n            this.__label.style.fontSize = Math.floor(parseInt(this.__defaultLabelFontSize) * factor) + 'px';\n          } else {\n            this.__label.style.fontSize = this.__defaultLabelFontSize;\n          }\n          this._queuedFitText = false;\n        } else {\n          this._queuedFitText = true;\n        }\n      }\n    },\n\n    _applyVisible(visible) {\n      if (visible && this._queuedFitText) {\n        this._fitText();\n      }\n    },\n\n\n    _applyText(value) {\n      if (this.isConnected()) {\n        if (!this.__label) {\n          this.__label = this._element.querySelector(':scope > label');\n        }\n        this.__label.textContent = value;\n        if (!value) {\n          // empty text, just reset to default font size\n          if (this.__defaultLabelFontSize) {\n            this.__label.style.fontSize = this.__defaultLabelFontSize;\n          }\n        } else {\n          this._fitText();\n        }\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this.__label = null;\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'round-progress', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}