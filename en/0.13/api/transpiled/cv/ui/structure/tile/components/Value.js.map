{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Value.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MResize",
    "members",
    "_queuedOverflowDetection",
    "_debouncedDetectOverflow",
    "_init",
    "util",
    "Function",
    "debounce",
    "_detectOverflow",
    "target",
    "_element",
    "querySelector",
    "tagName",
    "toLowerCase",
    "setResizeTarget",
    "addListener",
    "_applyVisible",
    "visible",
    "classList",
    "contains",
    "remove",
    "isVisible",
    "clientWidth",
    "parentElement",
    "add",
    "_updateValue",
    "mappedValue",
    "value",
    "styleClass",
    "_instance",
    "setId",
    "hasAttribute",
    "Application",
    "structureController",
    "styleValue",
    "getAttribute",
    "__store",
    "setStyleClass",
    "setAttribute",
    "innerHTML",
    "parseInt",
    "setProgress",
    "setText",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Value"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Value.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a value from the backend, as label or image/icon\n * @author Tobias BrÃ¤utigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.components.Value', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [cv.ui.structure.tile.MVisibility, cv.ui.structure.tile.MResize],\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _queuedOverflowDetection: null,\n    _debouncedDetectOverflow: null,\n\n    _init() {\n      this.base(arguments);\n      this._debouncedDetectOverflow = qx.util.Function.debounce(this._detectOverflow, 20);\n      const target = this._element.querySelector('.value');\n      if (target && target.tagName.toLowerCase() === 'label') {\n        // check for overflowing text, when labels parent gets resized\n        this.setResizeTarget(this._element);\n        this.addListener('resized', this._debouncedDetectOverflow, this);\n      }\n    },\n\n    _applyVisible(visible) {\n      if (visible) {\n        if (this._queuedOverflowDetection) {\n          this._debouncedDetectOverflow();\n        }\n      } else {\n        const target = this._element.querySelector('.value');\n        if (target && target.classList.contains('scroll')) {\n          target.classList.remove('scroll');\n        }\n      }\n    },\n\n    _detectOverflow() {\n      const target = this._element.querySelector('.value');\n      if (this.isVisible()) {\n        this._queuedOverflowDetection = false;\n        if (target.clientWidth > target.parentElement.clientWidth) {\n          target.classList.add('scroll');\n        } else {\n          target.classList.remove('scroll');\n        }\n      } else {\n        this._queuedOverflowDetection = true;\n      }\n    },\n\n    _updateValue(mappedValue, value) {\n      const target = this._element.querySelector('.value');\n      let styleClass = '';\n      if (target) {\n        const tagName = target.tagName.toLowerCase();\n        switch (tagName) {\n          case 'cv-icon':\n            target._instance.setId(mappedValue);\n            if (this._element.hasAttribute('styling')) {\n              styleClass = cv.Application.structureController.styleValue(this._element.getAttribute('styling'), value, this.__store);\n            }\n            target._instance.setStyleClass(styleClass);\n            break;\n          case 'meter':\n            target.setAttribute('value', mappedValue);\n            target.innerHTML = '' + mappedValue;\n            break;\n          case 'cv-round-progress':\n            if (typeof value === 'string') {\n              value = parseInt(value);\n            }\n            target._instance.setProgress(value);\n            target._instance.setText('' + mappedValue);\n            break;\n          case 'label':\n            target.innerHTML = mappedValue;\n            this._debouncedDetectOverflow();\n            break;\n        }\n      }\n    }\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'value', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}