{
  "className": "cv.ui.structure.tile.elements.AddressGroup",
  "packageName": "cv.ui.structure.tile.elements",
  "name": "AddressGroup",
  "superClass": "cv.ui.structure.tile.elements.Address",
  "interfaces": [],
  "mixins": [
    "cv.ui.structure.tile.MStringTransforms"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 993
      },
      "end": {
        "line": 226,
        "column": 3,
        "index": 5914
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Aggregates values from sub-elements like other cv.ui.structure.tile.elements.AddressGroups\n or cv.ui.structure.tile.elements.Address.</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 2023</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2023"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1286
      },
      "end": {
        "line": 42,
        "column": 3,
        "index": 1568
      }
    },
    "jsdoc": {}
  },
  "statics": {
    "C": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1710
        },
        "end": {
          "line": 50,
          "column": 8,
          "index": 1714
        }
      },
      "type": "variable",
      "access": "public"
    }
  },
  "events": {
    "changeValue": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1858
        },
        "end": {
          "line": 59,
          "column": 37,
          "index": 1891
        }
      },
      "name": "changeValue",
      "type": "qx.event.type.Data"
    }
  },
  "properties": {
    "operator": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 2044
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 2147
        }
      },
      "name": "operator",
      "propertyType": "new",
      "apply": "_updateCalculation",
      "init": "+",
      "possibleValues": [
        "+",
        "-",
        "/",
        "*"
      ],
      "defaultValue": "+"
    },
    "round": {
      "location": {
        "start": {
          "line": 75,
          "column": 4,
          "index": 2154
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2244
        }
      },
      "name": "round",
      "propertyType": "new",
      "init": false,
      "transform": "_parseBoolean",
      "check": "Boolean",
      "defaultValue": false
    },
    "factor": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2251
        },
        "end": {
          "line": 85,
          "column": 5,
          "index": 2335
        }
      },
      "name": "factor",
      "propertyType": "new",
      "init": 1,
      "transform": "_parseFloat",
      "check": "Number",
      "defaultValue": 1
    },
    "valid": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2342
        },
        "end": {
          "line": 91,
          "column": 5,
          "index": 2425
        }
      },
      "name": "valid",
      "propertyType": "new",
      "apply": "_applyValid",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "nonZeroValues": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2432
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2527
        }
      },
      "name": "nonZeroValues",
      "propertyType": "new",
      "event": "changeNonZeroValues",
      "init": 0,
      "check": "Number",
      "defaultValue": 0
    }
  },
  "members": {
    "_i": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2673
        },
        "end": {
          "line": 106,
          "column": 12,
          "index": 2681
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_values": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2687
        },
        "end": {
          "line": 107,
          "column": 17,
          "index": 2700
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__value": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2706
        },
        "end": {
          "line": 108,
          "column": 17,
          "index": 2719
        }
      },
      "type": "variable",
      "access": "private"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 2726
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 2945
        }
      },
      "type": "function",
      "access": "public"
    },
    "getValue": {
      "location": {
        "start": {
          "line": 119,
          "column": 4,
          "index": 2952
        },
        "end": {
          "line": 121,
          "column": 5,
          "index": 2997
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "appearsIn": [
        "cv.ui.structure.tile.elements.Address"
      ]
    },
    "resetValue": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3004
        },
        "end": {
          "line": 125,
          "column": 5,
          "index": 3051
        }
      },
      "type": "function",
      "access": "public"
    },
    "getAddress": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3058
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 3125
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "appearsIn": [
        "cv.ui.structure.tile.elements.Address"
      ]
    },
    "_init": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3132
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3459
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "appearsIn": [
        "cv.ui.structure.tile.elements.Address",
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "_applyValue": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3466
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 3650
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_applyValid": {
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3657
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 3743
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "valid"
      ]
    },
    "_updateCalculation": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 3750
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 5101
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "operator"
      ]
    },
    "onStateUpdate": {
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 5108
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 5616
        }
      },
      "type": "function",
      "access": "public"
    },
    "_parseInt": {
      "type": "function",
      "name": "_parseInt",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "_parseFloat": {
      "type": "function",
      "name": "_parseFloat",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "_parseBoolean": {
      "type": "function",
      "name": "_parseBoolean",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.Address",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getOperator": {
      "type": "function",
      "name": "getOperator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>operator</code>.\n\nFor further details take a look at the property definition: {@link #operator}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for operator"
          }
        ]
      }
    },
    "setOperator": {
      "type": "function",
      "name": "setOperator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>operator</code>.\n\nFor further details take a look at the property definition: {@link #operator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for operator"
          }
        ]
      }
    },
    "resetOperator": {
      "type": "function",
      "name": "resetOperator",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>operator</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #operator}."
          }
        ]
      }
    },
    "getRound": {
      "type": "function",
      "name": "getRound",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>round</code>.\n\nFor further details take a look at the property definition: {@link #round}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for round"
          }
        ]
      }
    },
    "isRound": {
      "type": "function",
      "name": "isRound",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>round</code>.\n\nFor further details take a look at the property definition: {@link #round}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for round"
          }
        ]
      }
    },
    "setRound": {
      "type": "function",
      "name": "setRound",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>round</code>.\n\nFor further details take a look at the property definition: {@link #round}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for round"
          }
        ]
      }
    },
    "resetRound": {
      "type": "function",
      "name": "resetRound",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>round</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #round}."
          }
        ]
      }
    },
    "getFactor": {
      "type": "function",
      "name": "getFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>factor</code>.\n\nFor further details take a look at the property definition: {@link #factor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for factor"
          }
        ]
      }
    },
    "setFactor": {
      "type": "function",
      "name": "setFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>factor</code>.\n\nFor further details take a look at the property definition: {@link #factor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for factor"
          }
        ]
      }
    },
    "resetFactor": {
      "type": "function",
      "name": "resetFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>factor</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #factor}."
          }
        ]
      }
    },
    "getValid": {
      "type": "function",
      "name": "getValid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "isValid": {
      "type": "function",
      "name": "isValid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for valid"
          }
        ]
      }
    },
    "setValid": {
      "type": "function",
      "name": "setValid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>valid</code>.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for valid"
          }
        ]
      }
    },
    "resetValid": {
      "type": "function",
      "name": "resetValid",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>valid</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #valid}."
          }
        ]
      }
    },
    "getNonZeroValues": {
      "type": "function",
      "name": "getNonZeroValues",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>nonZeroValues</code>.\n\nFor further details take a look at the property definition: {@link #nonZeroValues}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for nonZeroValues"
          }
        ]
      }
    },
    "setNonZeroValues": {
      "type": "function",
      "name": "setNonZeroValues",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>nonZeroValues</code>.\n\nFor further details take a look at the property definition: {@link #nonZeroValues}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for nonZeroValues"
          }
        ]
      }
    },
    "resetNonZeroValues": {
      "type": "function",
      "name": "resetNonZeroValues",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>nonZeroValues</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #nonZeroValues}."
          }
        ]
      }
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 215,
        "column": 2,
        "index": 5625
      },
      "end": {
        "line": 225,
        "column": 3,
        "index": 5910
      }
    }
  },
  "descendants": []
}