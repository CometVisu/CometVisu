{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MRefresh",
    "properties",
    "value",
    "refine",
    "init",
    "members",
    "_target",
    "_timer",
    "_model",
    "_getModel",
    "_filterModel",
    "_sortModel",
    "_limit",
    "_modelInstance",
    "_init",
    "element",
    "_element",
    "refreshOnUpdate",
    "model",
    "querySelector",
    "error",
    "hasAttribute",
    "Function",
    "getAttribute",
    "parseInt",
    "readAddresses",
    "querySelectorAll",
    "address",
    "addEventListener",
    "ev",
    "evCopy",
    "CustomEvent",
    "bubbles",
    "cancelable",
    "detail",
    "a",
    "dispatchEvent",
    "sortBy",
    "sortModifier",
    "left",
    "right",
    "leftVal",
    "rightVal",
    "localeCompare",
    "JSON",
    "stringify",
    "undefined",
    "options",
    "proxyParam",
    "io",
    "Fetch",
    "fetch",
    "res",
    "Clazz",
    "listmodel",
    "Registry",
    "get",
    "modelInstance",
    "props",
    "split",
    "entry",
    "map",
    "n",
    "trim",
    "name",
    "startsWith",
    "substring",
    "length",
    "set",
    "refresh",
    "getModel",
    "script",
    "data",
    "innerText",
    "getValue",
    "forEach",
    "elem",
    "i",
    "d",
    "index",
    "attributes",
    "push",
    "onStateUpdate",
    "isVisible",
    "setRefresh",
    "target",
    "_lastRefresh",
    "stopPropagation",
    "_applyValue",
    "template",
    "newModel",
    "Promise",
    "parentElement",
    "style",
    "display",
    "Error",
    "document",
    "createElement",
    "classList",
    "add",
    "appendChild",
    "debug",
    "Array",
    "isArray",
    "filter",
    "sort",
    "slice",
    "whenEmptyTemplate",
    "firstElementChild",
    "removeChild",
    "emptyModel",
    "content",
    "cloneNode",
    "emptyElem",
    "remove",
    "itemTemplate",
    "endsWith",
    "indexOf",
    "isNaN",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "val",
    "html",
    "innerHTML",
    "replaceAll",
    "match",
    "includes",
    "removeAttribute",
    "setAttribute",
    "destruct",
    "_disposeObjects",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "List"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/List.js"
  ],
  "sourcesContent": [
    "/* List.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Generates a list of items. A &lt;template&gt;-element defines the content of the list-items and a model is used to\n * generate those items and apply the models content to the list-items.\n * It allows custom Javascript code in a &lt;script&gt;-Element to fill the model or address-Elements as model source.\n * The model can be refreshed in a time defined interval, which is set by the 'refresh' attribute.\n *\n * @widgetexample <settings>\n *    <caption>Example list</caption>\n *    <screenshot name=\"list_simple\"/>\n *  </settings>\n    <cv-list refresh=\"10\">\n      <model>\n        <script><![CDATA[\n         for (let i = 0; i < Math.round(Math.random()*10); i++) {\n           model.push({\n             label: 'This is list item no ' + i,\n             subLabel: 'Sublabel number ' + i\n           })\n         }\n         ]]>\n         </script>\n       </model>\n       <template>\n         <li>\n           <label class=\"primary\">${label}</label>\n           <label class=\"secondary\">${subLabel}</label>\n         </li>\n       </template>\n       <template when=\"empty\">\n         <li>\n           <label class=\"primary\">Model is empty!</label>\n         </li>\n       </template>\n   </cv-list>\n */\nqx.Class.define('cv.ui.structure.tile.components.List', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [cv.ui.structure.tile.MVisibility, cv.ui.structure.tile.MRefresh],\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    value: {\n      refine: true,\n      init: []\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _target: null,\n    _timer: null,\n    _model: null,\n    _getModel: null,\n    _filterModel: null,\n    _sortModel: null,\n    _limit: null,\n    _modelInstance: null,\n\n    _init() {\n      const element = this._element;\n      this._model = [];\n      let refreshOnUpdate = false;\n      const model = element.querySelector('model');\n      if (!model) {\n        this.error('cv-list needs a model');\n        return;\n      }\n      if (model.hasAttribute('filter')) {\n        this._filterModel = new Function('item', 'index', '\"use strict\"; return ' + model.getAttribute('filter'));\n      }\n      if (model.hasAttribute('limit')) {\n        this._limit = parseInt(model.getAttribute('limit'));\n      }\n      const readAddresses = model.querySelectorAll(':scope > cv-address:not([mode=\"write\"])');\n\n      // if we have top level write addresses, we need to listen to sendState Events from the list items\n      for (let address of element.querySelectorAll(':scope > cv-address')) {\n        if (address.getAttribute('mode') !== 'read') {\n          element.addEventListener('sendState', ev => {\n            // forward event copy (dispatching the same is not possible) to all write addresses\n            const evCopy = new CustomEvent('sendState', {\n              bubbles: ev.bubbles,\n              cancelable: ev.cancelable,\n              detail: ev.detail\n            });\n            for (let a of element.querySelectorAll(':scope > cv-address')) {\n              a.dispatchEvent(evCopy);\n            }\n          });\n          break;\n        }\n      }\n\n      if (model.hasAttribute('sort-by')) {\n        const sortBy = model.getAttribute('sort-by');\n        // reverse order in 'desc' sort mode\n        const sortModifier = model.getAttribute('sort-mode') === 'desc' ? -1 : 1;\n        this._sortModel = (left, right) => {\n          const leftVal = left[sortBy];\n          const rightVal = right[sortBy];\n          if (leftVal === rightVal) {\n            return 0;\n          } else if (typeof leftVal === typeof rightVal) {\n            switch (typeof leftVal) {\n              case 'number':\n                return (leftVal - rightVal) * sortModifier;\n\n              case 'boolean':\n                return (leftVal ? -1 : 1) * sortModifier;\n\n              case 'string':\n                return leftVal.localeCompare(rightVal) * sortModifier;\n\n              default:\n                return JSON.stringify(leftVal).localeCompare(JSON.stringify(rightVal)) * sortModifier;\n            }\n          } else if (leftVal === undefined || leftVal === null) {\n            return 1 * sortModifier;\n          } else if (rightVal === undefined || rightVal === null) {\n            return -1 * sortModifier;\n          }\n          return 0;\n        };\n      }\n      if (model.hasAttribute('src') || model.hasAttribute('config-section')) {\n        // fetch from url\n        this._getModel = async () => {\n          const options = {};\n          for (const proxyParam of ['self-signed', 'config-section', 'auth-type']) {\n            if (model.hasAttribute(proxyParam)) {\n              options[proxyParam] = model.getAttribute(proxyParam);\n            }\n          }\n          const res = await cv.io.Fetch.fetch(model.getAttribute('src'), options, model.getAttribute('proxy') === 'true');\n          return res;\n        };\n      } else if (model.hasAttribute('class')) {\n        // initialize internal class instance that implements cv.io.listmodel.IListModel\n        const Clazz = cv.io.listmodel.Registry.get(model.getAttribute('class'));\n        if (Clazz) {\n          const modelInstance = new Clazz();\n          if (model.hasAttribute('parameters')) {\n            const props = {};\n            for (let entry of model.getAttribute('parameters').split(',')) {\n              const [name, value] = entry.split('=').map(n => n.trim());\n              props[name] = value.startsWith('\\'') ? value.substring(1, value.length-1) : value;\n            }\n            modelInstance.set(props);\n          }\n          this._getModel = async () => {\n            await modelInstance.refresh();\n            return modelInstance.getModel();\n          };\n        } else {\n          this.error(`clazz \"cv.io.listmodel.${model.getAttribute('class')}\" not found`);\n        }\n      } else {\n        const script = model.querySelector(':scope > script');\n        const data = model.querySelectorAll(':scope > cv-data');\n        if (script) {\n          this._getModel = new Function('\"use strict\";let model = []; ' + script.innerText.trim() + '; return model');\n\n          this._model = this._getModel();\n        } else if (readAddresses.length > 0) {\n          // model has an address that triggers a refresh on update, so we just have to read the model from the updated value\n          this._getModel = this.getValue;\n          refreshOnUpdate = true;\n        } else if (data.length > 0) {\n          this._model = [];\n          this._getModel = () => this._model;\n          data.forEach((elem, i) => {\n            const d = {\n              index: i\n            };\n\n            for (const a of elem.attributes) {\n              d[a.name] = a.value;\n            }\n            this._model.push(d);\n          });\n        } else {\n          this.error(\n            'cv-list > model must have at least one read address, src-attribute, cv-data child or a script that fills the model.'\n          );\n\n          return;\n        }\n      }\n      if (readAddresses.length > 0) {\n        element.addEventListener('stateUpdate', ev => this.onStateUpdate(ev));\n      }\n      if (!refreshOnUpdate) {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        }\n        if (element.hasAttribute('refresh')) {\n          this.setRefresh(parseInt(element.getAttribute('refresh')));\n        }\n      }\n    },\n\n    onStateUpdate(ev) {\n      if (ev.detail.target === 'refresh') {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        } else {\n          // reset lastRefresh to that the refresh get called when this item gets visible\n          this._lastRefresh = null;\n        }\n      } else {\n        super.onStateUpdate(ev);\n      }\n      // cancel event here\n      ev.stopPropagation();\n    },\n\n    _applyValue() {\n      // reset last refresh, because with new data its obsolete\n      this._lastRefresh = 0;\n      this.refresh();\n    },\n\n    async refresh() {\n      const element = this._element;\n      const template = element.querySelector(':scope > template:not([when])');\n      let newModel = [];\n      if (typeof this._getModel === 'function') {\n        newModel = this._getModel();\n      }\n      if (newModel instanceof Promise) {\n        try {\n          newModel = await newModel;\n        } catch (e) {\n          this.error('error refreshing async model:', e);\n        }\n      }\n      let target = element.querySelector(':scope > ul');\n      if (template.getAttribute('wrap') === 'false') {\n        target = element;\n      } else if (template.hasAttribute('target')) {\n        switch (template.getAttribute('target')) {\n          case 'parent':\n            target = element.parentElement;\n            // we do not need the list to be visible then\n            element.style.display = 'none';\n            break;\n          default:\n            throw new Error('invalid target: ' + template.getAttribute('target'));\n        }\n      } else if (!target) {\n        target = document.createElement('ul');\n        target.classList.add('content');\n        element.appendChild(target);\n      }\n      this.debug('refreshing with new model length', newModel.length);\n      if (Array.isArray(newModel) || newModel instanceof qx.data.Array) {\n        if (typeof this._filterModel === 'function') {\n          newModel = newModel.filter(this._filterModel);\n        }\n        if (typeof this._sortModel === 'function') {\n          newModel.sort(this._sortModel);\n        }\n        if (this._limit) {\n          newModel = newModel.slice(0, this._limit);\n        }\n        if (newModel.length === 0) {\n          const whenEmptyTemplate = element.querySelector(':scope > template[when=\"empty\"]');\n\n          if (whenEmptyTemplate && !target.querySelector(':scope > .empty-model')) {\n            while (target.firstElementChild && target.firstElementChild.hasAttribute('data-row')) {\n              target.removeChild(target.firstElementChild);\n            }\n            const emptyModel = whenEmptyTemplate.content.firstElementChild.cloneNode(true);\n            emptyModel.classList.add('empty-model');\n            target.appendChild(emptyModel);\n            return;\n          }\n        } else {\n          const emptyElem = target.querySelector(':scope > .empty-model');\n          if (emptyElem) {\n            emptyElem.remove();\n          }\n        }\n        const itemTemplate = document.createElement('template');\n        // remove entries we do not need anymore\n        for (let i = newModel.length; i < this._model.length; i++) {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          if (elem) {\n            elem.remove();\n          }\n        }\n\n        const getValue = (name, entry) => {\n          let index = -1;\n          if (name.endsWith(']')) {\n            // array access\n            index = parseInt(name.substring(name.indexOf('[') + 1, name.length - 1));\n            if (isNaN(index)) {\n              this.error(\n                'error parsing array index from ' + name,\n                name.substring(name.indexOf('[') + 1, name.length - 1)\n              );\n              return '';\n            }\n            name = name.substring(0, name.indexOf('['));\n          }\n          if (Object.prototype.hasOwnProperty.call(entry, name)) {\n            let val = entry[name];\n            if (index >= 0 && Array.isArray(val)) {\n              return val[index];\n            }\n            return val;\n          }\n          return '';\n        };\n        newModel.forEach((entry, i) => {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          const html = template.innerHTML.replaceAll(/\\${([^}]+)}/g, (match, content) => {\n            if (content === 'index') {\n              return '' + i;\n            }\n            if (content.includes('||')) {\n              // elements are or'ed use the first one with value\n              let val = '';\n              for (let name of content.split('||').map(n => n.trim())) {\n                val = getValue(name, entry);\n                if (val) {\n                  return val;\n                }\n              }\n            }\n            return getValue(content, entry);\n          });\n\n          itemTemplate.innerHTML = html;\n          // check for elements with when attributes\n          itemTemplate.content.firstElementChild.querySelectorAll('[when]').forEach(elem => {\n            const [leftVal, rightVal] = elem\n              .getAttribute('when')\n              .split('=')\n              .map(n => n.trim());\n            // noinspection EqualityComparisonWithCoercionJS\n            if (leftVal != rightVal) {\n              elem.parentElement.removeChild(elem);\n            } else {\n              elem.removeAttribute('when');\n            }\n          });\n          if (elem) {\n            // update existing\n            elem.innerHTML = itemTemplate.content.firstElementChild.innerHTML;\n            elem.setAttribute('data-row', '' + i);\n          } else {\n            // append new child\n            itemTemplate.content.firstElementChild.setAttribute('data-row', '' + i);\n\n            target.appendChild(itemTemplate.content.cloneNode(true));\n          }\n        });\n        this._model = newModel;\n      } else {\n        this.error('model must be an array', newModel);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._disposeObjects('_modelInstance', '_timer');\n    this._model = null;\n    this._filterModel = null;\n    this._sortModel = null;\n    this._target = null;\n  },\n\n  defer(QxClass) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'list',\n      class extends QxConnector {\n        constructor() {\n          super(QxClass);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;+CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAAA;IAAA;MAAA;QAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;MAAA;MAAA;MAAA;QAAA;MAAA;IAAA;EAAA;EADAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sCAAsC,EAAE;IACtDC,MAAM,EAAEC,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,UAAU,CAACC,iBAAiB;IACzDC,OAAO,EAAE,CAACN,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACI,WAAW,EAAEP,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACK,QAAQ,CAAC;IAE1E;AACF;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACVC,KAAK,EAAE;QACLC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MAEpBC,KAAK,mBAAG;QAAA;QACN,IAAMC,OAAO,GAAG,IAAI,CAACC,QAAQ;QAC7B,IAAI,CAACR,MAAM,GAAG,EAAE;QAChB,IAAIS,eAAe,GAAG,KAAK;QAC3B,IAAMC,KAAK,GAAGH,OAAO,CAACI,aAAa,CAAC,OAAO,CAAC;QAC5C,IAAI,CAACD,KAAK,EAAE;UACV,IAAI,CAACE,KAAK,CAAC,uBAAuB,CAAC;UACnC;QACF;QACA,IAAIF,KAAK,CAACG,YAAY,CAAC,QAAQ,CAAC,EAAE;UAChC,IAAI,CAACX,YAAY,GAAG,IAAIY,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,uBAAuB,GAAGJ,KAAK,CAACK,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC3G;QACA,IAAIL,KAAK,CAACG,YAAY,CAAC,OAAO,CAAC,EAAE;UAC/B,IAAI,CAACT,MAAM,GAAGY,QAAQ,CAACN,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,CAAC;QACrD;QACA,IAAME,aAAa,GAAGP,KAAK,CAACQ,gBAAgB,CAAC,yCAAyC,CAAC;;QAEvF;QAAA,2CACoBX,OAAO,CAACW,gBAAgB,CAAC,qBAAqB,CAAC;UAAA;QAAA;UAAnE,oDAAqE;YAAA,IAA5DC,OAAO;YACd,IAAIA,OAAO,CAACJ,YAAY,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;cAC3CR,OAAO,CAACa,gBAAgB,CAAC,WAAW,EAAE,UAAAC,EAAE,EAAI;gBAC1C;gBACA,IAAMC,MAAM,GAAG,IAAIC,WAAW,CAAC,WAAW,EAAE;kBAC1CC,OAAO,EAAEH,EAAE,CAACG,OAAO;kBACnBC,UAAU,EAAEJ,EAAE,CAACI,UAAU;kBACzBC,MAAM,EAAEL,EAAE,CAACK;gBACb,CAAC,CAAC;gBAAC,4CACWnB,OAAO,CAACW,gBAAgB,CAAC,qBAAqB,CAAC;kBAAA;gBAAA;kBAA7D,uDAA+D;oBAAA,IAAtDS,CAAC;oBACRA,CAAC,CAACC,aAAa,CAACN,MAAM,CAAC;kBACzB;gBAAC;kBAAA;gBAAA;kBAAA;gBAAA;cACH,CAAC,CAAC;cACF;YACF;UACF;QAAC;UAAA;QAAA;UAAA;QAAA;QAED,IAAIZ,KAAK,CAACG,YAAY,CAAC,SAAS,CAAC,EAAE;UACjC,IAAMgB,MAAM,GAAGnB,KAAK,CAACK,YAAY,CAAC,SAAS,CAAC;UAC5C;UACA,IAAMe,YAAY,GAAGpB,KAAK,CAACK,YAAY,CAAC,WAAW,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;UACxE,IAAI,CAACZ,UAAU,GAAG,UAAC4B,IAAI,EAAEC,KAAK,EAAK;YACjC,IAAMC,OAAO,GAAGF,IAAI,CAACF,MAAM,CAAC;YAC5B,IAAMK,QAAQ,GAAGF,KAAK,CAACH,MAAM,CAAC;YAC9B,IAAII,OAAO,KAAKC,QAAQ,EAAE;cACxB,OAAO,CAAC;YACV,CAAC,MAAM,IAAI,QAAOD,OAAO,cAAYC,QAAQ,GAAE;cAC7C,gBAAeD,OAAO;gBACpB,KAAK,QAAQ;kBACX,OAAO,CAACA,OAAO,GAAGC,QAAQ,IAAIJ,YAAY;gBAE5C,KAAK,SAAS;kBACZ,OAAO,CAACG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIH,YAAY;gBAE1C,KAAK,QAAQ;kBACX,OAAOG,OAAO,CAACE,aAAa,CAACD,QAAQ,CAAC,GAAGJ,YAAY;gBAEvD;kBACE,OAAOM,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAACE,aAAa,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC,GAAGJ,YAAY;cAAC;YAE5F,CAAC,MAAM,IAAIG,OAAO,KAAKK,SAAS,IAAIL,OAAO,KAAK,IAAI,EAAE;cACpD,OAAO,CAAC,GAAGH,YAAY;YACzB,CAAC,MAAM,IAAII,QAAQ,KAAKI,SAAS,IAAIJ,QAAQ,KAAK,IAAI,EAAE;cACtD,OAAO,CAAC,CAAC,GAAGJ,YAAY;YAC1B;YACA,OAAO,CAAC;UACV,CAAC;QACH;QACA,IAAIpB,KAAK,CAACG,YAAY,CAAC,KAAK,CAAC,IAAIH,KAAK,CAACG,YAAY,CAAC,gBAAgB,CAAC,EAAE;UACrE;UACA,IAAI,CAACZ,SAAS,2EAAG;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBACTsC,OAAO,GAAG,CAAC,CAAC;oBAClB,oBAAyB,CAAC,aAAa,EAAE,gBAAgB,EAAE,WAAW,CAAC,0BAAE;sBAA9DC,UAAU;sBACnB,IAAI9B,KAAK,CAACG,YAAY,CAAC2B,UAAU,CAAC,EAAE;wBAClCD,OAAO,CAACC,UAAU,CAAC,GAAG9B,KAAK,CAACK,YAAY,CAACyB,UAAU,CAAC;sBACtD;oBACF;oBAAC;oBAAA,OACiBxD,EAAE,CAACyD,EAAE,CAACC,KAAK,CAACC,KAAK,CAACjC,KAAK,CAACK,YAAY,CAAC,KAAK,CAAC,EAAEwB,OAAO,EAAE7B,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC;kBAAA;oBAAzG6B,GAAG;oBAAA,iCACFA,GAAG;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CACX;QACH,CAAC,MAAM,IAAIlC,KAAK,CAACG,YAAY,CAAC,OAAO,CAAC,EAAE;UACtC;UACA,IAAMgC,KAAK,GAAG7D,EAAE,CAACyD,EAAE,CAACK,SAAS,CAACC,QAAQ,CAACC,GAAG,CAACtC,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,CAAC;UACvE,IAAI8B,KAAK,EAAE;YACT,IAAMI,aAAa,GAAG,IAAIJ,KAAK,EAAE;YACjC,IAAInC,KAAK,CAACG,YAAY,CAAC,YAAY,CAAC,EAAE;cACpC,IAAMqC,KAAK,GAAG,CAAC,CAAC;cAAC,4CACCxC,KAAK,CAACK,YAAY,CAAC,YAAY,CAAC,CAACoC,KAAK,CAAC,GAAG,CAAC;gBAAA;cAAA;gBAA7D,uDAA+D;kBAAA,IAAtDC,KAAK;kBACZ,uBAAsBA,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,UAAAC,CAAC;sBAAA,OAAIA,CAAC,CAACC,IAAI,EAAE;oBAAA,EAAC;oBAAA;oBAAlDC,IAAI;oBAAE9D,KAAK;kBAClBwD,KAAK,CAACM,IAAI,CAAC,GAAG9D,KAAK,CAAC+D,UAAU,CAAC,IAAI,CAAC,GAAG/D,KAAK,CAACgE,SAAS,CAAC,CAAC,EAAEhE,KAAK,CAACiE,MAAM,GAAC,CAAC,CAAC,GAAGjE,KAAK;gBACnF;cAAC;gBAAA;cAAA;gBAAA;cAAA;cACDuD,aAAa,CAACW,GAAG,CAACV,KAAK,CAAC;YAC1B;YACA,IAAI,CAACjD,SAAS,2EAAG;cAAA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACTgD,aAAa,CAACY,OAAO,EAAE;oBAAA;sBAAA,kCACtBZ,aAAa,CAACa,QAAQ,EAAE;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CAChC;UACH,CAAC,MAAM;YACL,IAAI,CAAClD,KAAK,mCAA2BF,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,kBAAc;UAChF;QACF,CAAC,MAAM;UACL,IAAMgD,MAAM,GAAGrD,KAAK,CAACC,aAAa,CAAC,iBAAiB,CAAC;UACrD,IAAMqD,IAAI,GAAGtD,KAAK,CAACQ,gBAAgB,CAAC,kBAAkB,CAAC;UACvD,IAAI6C,MAAM,EAAE;YACV,IAAI,CAAC9D,SAAS,GAAG,IAAIa,QAAQ,CAAC,+BAA+B,GAAGiD,MAAM,CAACE,SAAS,CAACV,IAAI,EAAE,GAAG,gBAAgB,CAAC;YAE3G,IAAI,CAACvD,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;UAChC,CAAC,MAAM,IAAIgB,aAAa,CAAC0C,MAAM,GAAG,CAAC,EAAE;YACnC;YACA,IAAI,CAAC1D,SAAS,GAAG,IAAI,CAACiE,QAAQ;YAC9BzD,eAAe,GAAG,IAAI;UACxB,CAAC,MAAM,IAAIuD,IAAI,CAACL,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC3D,MAAM,GAAG,EAAE;YAChB,IAAI,CAACC,SAAS,GAAG;cAAA,OAAM,KAAI,CAACD,MAAM;YAAA;YAClCgE,IAAI,CAACG,OAAO,CAAC,UAACC,IAAI,EAAEC,CAAC,EAAK;cACxB,IAAMC,CAAC,GAAG;gBACRC,KAAK,EAAEF;cACT,CAAC;cAAC,4CAEcD,IAAI,CAACI,UAAU;gBAAA;cAAA;gBAA/B,uDAAiC;kBAAA,IAAtB7C,CAAC;kBACV2C,CAAC,CAAC3C,CAAC,CAAC6B,IAAI,CAAC,GAAG7B,CAAC,CAACjC,KAAK;gBACrB;cAAC;gBAAA;cAAA;gBAAA;cAAA;cACD,KAAI,CAACM,MAAM,CAACyE,IAAI,CAACH,CAAC,CAAC;YACrB,CAAC,CAAC;UACJ,CAAC,MAAM;YACL,IAAI,CAAC1D,KAAK,CACR,qHAAqH,CACtH;YAED;UACF;QACF;QACA,IAAIK,aAAa,CAAC0C,MAAM,GAAG,CAAC,EAAE;UAC5BpD,OAAO,CAACa,gBAAgB,CAAC,aAAa,EAAE,UAAAC,EAAE;YAAA,OAAI,KAAI,CAACqD,aAAa,CAACrD,EAAE,CAAC;UAAA,EAAC;QACvE;QACA,IAAI,CAACZ,eAAe,EAAE;UACpB,IAAI,IAAI,CAACkE,SAAS,EAAE,EAAE;YACpB;YACA,IAAI,CAACd,OAAO,EAAE;UAChB;UACA,IAAItD,OAAO,CAACM,YAAY,CAAC,SAAS,CAAC,EAAE;YACnC,IAAI,CAAC+D,UAAU,CAAC5D,QAAQ,CAACT,OAAO,CAACQ,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;UAC5D;QACF;MACF,CAAC;MAED2D,aAAa,yBAACrD,EAAE,EAAE;QAChB,IAAIA,EAAE,CAACK,MAAM,CAACmD,MAAM,KAAK,SAAS,EAAE;UAClC,IAAI,IAAI,CAACF,SAAS,EAAE,EAAE;YACpB;YACA,IAAI,CAACd,OAAO,EAAE;UAChB,CAAC,MAAM;YACL;YACA,IAAI,CAACiB,YAAY,GAAG,IAAI;UAC1B;QACF,CAAC,MAAM;UACL,mFAAoBzD,EAAE;QACxB;QACA;QACAA,EAAE,CAAC0D,eAAe,EAAE;MACtB,CAAC;MAEDC,WAAW,yBAAG;QACZ;QACA,IAAI,CAACF,YAAY,GAAG,CAAC;QACrB,IAAI,CAACjB,OAAO,EAAE;MAChB,CAAC;MAEKA,OAAO,qBAAG;QAAA;QAAA;UAAA;UAAA;YAAA;cAAA;gBAAA;kBACRtD,OAAO,GAAG,MAAI,CAACC,QAAQ;kBACvByE,QAAQ,GAAG1E,OAAO,CAACI,aAAa,CAAC,+BAA+B,CAAC;kBACnEuE,QAAQ,GAAG,EAAE;kBACjB,IAAI,OAAO,MAAI,CAACjF,SAAS,KAAK,UAAU,EAAE;oBACxCiF,QAAQ,GAAG,MAAI,CAACjF,SAAS,EAAE;kBAC7B;kBAAC,MACGiF,QAAQ,YAAYC,OAAO;oBAAA;oBAAA;kBAAA;kBAAA;kBAAA;kBAAA,OAEVD,QAAQ;gBAAA;kBAAzBA,QAAQ;kBAAA;kBAAA;gBAAA;kBAAA;kBAAA;kBAER,MAAI,CAACtE,KAAK,CAAC,+BAA+B,eAAI;gBAAC;kBAG/CiE,MAAM,GAAGtE,OAAO,CAACI,aAAa,CAAC,aAAa,CAAC;kBAAA,MAC7CsE,QAAQ,CAAClE,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO;oBAAA;oBAAA;kBAAA;kBAC3C8D,MAAM,GAAGtE,OAAO;kBAAC;kBAAA;gBAAA;kBAAA,KACR0E,QAAQ,CAACpE,YAAY,CAAC,QAAQ,CAAC;oBAAA;oBAAA;kBAAA;kBAAA,eAChCoE,QAAQ,CAAClE,YAAY,CAAC,QAAQ,CAAC;kBAAA,kCAChC,QAAQ;kBAAA;gBAAA;kBACX8D,MAAM,GAAGtE,OAAO,CAAC6E,aAAa;kBAC9B;kBACA7E,OAAO,CAAC8E,KAAK,CAACC,OAAO,GAAG,MAAM;kBAAC;gBAAA;kBAAA,MAGzB,IAAIC,KAAK,CAAC,kBAAkB,GAAGN,QAAQ,CAAClE,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAAA;kBAAA;kBAAA;gBAAA;kBAEpE,IAAI,CAAC8D,MAAM,EAAE;oBAClBA,MAAM,GAAGW,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;oBACrCZ,MAAM,CAACa,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;oBAC/BpF,OAAO,CAACqF,WAAW,CAACf,MAAM,CAAC;kBAC7B;gBAAC;kBACD,MAAI,CAACgB,KAAK,CAAC,kCAAkC,EAAEX,QAAQ,CAACvB,MAAM,CAAC;kBAAC,MAC5DmC,KAAK,CAACC,OAAO,CAACb,QAAQ,CAAC,IAAIA,QAAQ,YAAYzG,EAAE,CAACuF,IAAI,CAAC8B,KAAK;oBAAA;oBAAA;kBAAA;kBAC9D,IAAI,OAAO,MAAI,CAAC5F,YAAY,KAAK,UAAU,EAAE;oBAC3CgF,QAAQ,GAAGA,QAAQ,CAACc,MAAM,CAAC,MAAI,CAAC9F,YAAY,CAAC;kBAC/C;kBACA,IAAI,OAAO,MAAI,CAACC,UAAU,KAAK,UAAU,EAAE;oBACzC+E,QAAQ,CAACe,IAAI,CAAC,MAAI,CAAC9F,UAAU,CAAC;kBAChC;kBACA,IAAI,MAAI,CAACC,MAAM,EAAE;oBACf8E,QAAQ,GAAGA,QAAQ,CAACgB,KAAK,CAAC,CAAC,EAAE,MAAI,CAAC9F,MAAM,CAAC;kBAC3C;kBAAC,MACG8E,QAAQ,CAACvB,MAAM,KAAK,CAAC;oBAAA;oBAAA;kBAAA;kBACjBwC,iBAAiB,GAAG5F,OAAO,CAACI,aAAa,CAAC,iCAAiC,CAAC;kBAAA,MAE9EwF,iBAAiB,IAAI,CAACtB,MAAM,CAAClE,aAAa,CAAC,uBAAuB,CAAC;oBAAA;oBAAA;kBAAA;kBACrE,OAAOkE,MAAM,CAACuB,iBAAiB,IAAIvB,MAAM,CAACuB,iBAAiB,CAACvF,YAAY,CAAC,UAAU,CAAC,EAAE;oBACpFgE,MAAM,CAACwB,WAAW,CAACxB,MAAM,CAACuB,iBAAiB,CAAC;kBAC9C;kBACME,UAAU,GAAGH,iBAAiB,CAACI,OAAO,CAACH,iBAAiB,CAACI,SAAS,CAAC,IAAI,CAAC;kBAC9EF,UAAU,CAACZ,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;kBACvCd,MAAM,CAACe,WAAW,CAACU,UAAU,CAAC;kBAAC;gBAAA;kBAAA;kBAAA;gBAAA;kBAI3BG,SAAS,GAAG5B,MAAM,CAAClE,aAAa,CAAC,uBAAuB,CAAC;kBAC/D,IAAI8F,SAAS,EAAE;oBACbA,SAAS,CAACC,MAAM,EAAE;kBACpB;gBAAC;kBAEGC,YAAY,GAAGnB,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,EACvD;kBACA,KAASpB,CAAC,GAAGa,QAAQ,CAACvB,MAAM,EAAEU,CAAC,GAAG,MAAI,CAACrE,MAAM,CAAC2D,MAAM,EAAEU,CAAC,EAAE,EAAE;oBACnDD,IAAI,GAAGS,MAAM,CAAClE,aAAa,gCAAwB0D,CAAC,SAAK;oBAC/D,IAAID,IAAI,EAAE;sBACRA,IAAI,CAACsC,MAAM,EAAE;oBACf;kBACF;kBAEMxC,QAAQ,GAAG,SAAXA,QAAQ,CAAIV,IAAI,EAAEJ,KAAK,EAAK;oBAChC,IAAImB,KAAK,GAAG,CAAC,CAAC;oBACd,IAAIf,IAAI,CAACoD,QAAQ,CAAC,GAAG,CAAC,EAAE;sBACtB;sBACArC,KAAK,GAAGvD,QAAQ,CAACwC,IAAI,CAACE,SAAS,CAACF,IAAI,CAACqD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAErD,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC;sBACxE,IAAImD,KAAK,CAACvC,KAAK,CAAC,EAAE;wBAChB,MAAI,CAAC3D,KAAK,CACR,iCAAiC,GAAG4C,IAAI,EACxCA,IAAI,CAACE,SAAS,CAACF,IAAI,CAACqD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAErD,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,CACvD;wBACD,OAAO,EAAE;sBACX;sBACAH,IAAI,GAAGA,IAAI,CAACE,SAAS,CAAC,CAAC,EAAEF,IAAI,CAACqD,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC7C;oBACA,IAAIE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC9D,KAAK,EAAEI,IAAI,CAAC,EAAE;sBACrD,IAAI2D,GAAG,GAAG/D,KAAK,CAACI,IAAI,CAAC;sBACrB,IAAIe,KAAK,IAAI,CAAC,IAAIuB,KAAK,CAACC,OAAO,CAACoB,GAAG,CAAC,EAAE;wBACpC,OAAOA,GAAG,CAAC5C,KAAK,CAAC;sBACnB;sBACA,OAAO4C,GAAG;oBACZ;oBACA,OAAO,EAAE;kBACX,CAAC;kBACDjC,QAAQ,CAACf,OAAO,CAAC,UAACf,KAAK,EAAEiB,CAAC,EAAK;oBAC7B,IAAMD,IAAI,GAAGS,MAAM,CAAClE,aAAa,gCAAwB0D,CAAC,SAAK;oBAC/D,IAAM+C,IAAI,GAAGnC,QAAQ,CAACoC,SAAS,CAACC,UAAU,CAAC,cAAc,EAAE,UAACC,KAAK,EAAEhB,OAAO,EAAK;sBAC7E,IAAIA,OAAO,KAAK,OAAO,EAAE;wBACvB,OAAO,EAAE,GAAGlC,CAAC;sBACf;sBACA,IAAIkC,OAAO,CAACiB,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAC1B;wBACA,IAAIL,GAAG,GAAG,EAAE;wBAAC,4CACIZ,OAAO,CAACpD,KAAK,CAAC,IAAI,CAAC,CAACE,GAAG,CAAC,UAAAC,CAAC;4BAAA,OAAIA,CAAC,CAACC,IAAI,EAAE;0BAAA,EAAC;0BAAA;wBAAA;0BAAvD,uDAAyD;4BAAA,IAAhDC,IAAI;4BACX2D,GAAG,GAAGjD,QAAQ,CAACV,IAAI,EAAEJ,KAAK,CAAC;4BAC3B,IAAI+D,GAAG,EAAE;8BACP,OAAOA,GAAG;4BACZ;0BACF;wBAAC;0BAAA;wBAAA;0BAAA;wBAAA;sBACH;sBACA,OAAOjD,QAAQ,CAACqC,OAAO,EAAEnD,KAAK,CAAC;oBACjC,CAAC,CAAC;oBAEFuD,YAAY,CAACU,SAAS,GAAGD,IAAI;oBAC7B;oBACAT,YAAY,CAACJ,OAAO,CAACH,iBAAiB,CAAClF,gBAAgB,CAAC,QAAQ,CAAC,CAACiD,OAAO,CAAC,UAAAC,IAAI,EAAI;sBAChF,4BAA4BA,IAAI,CAC7BrD,YAAY,CAAC,MAAM,CAAC,CACpBoC,KAAK,CAAC,GAAG,CAAC,CACVE,GAAG,CAAC,UAAAC,CAAC;0BAAA,OAAIA,CAAC,CAACC,IAAI,EAAE;wBAAA,EAAC;wBAAA;wBAHdtB,OAAO;wBAAEC,QAAQ;sBAIxB;sBACA,IAAID,OAAO,IAAIC,QAAQ,EAAE;wBACvBkC,IAAI,CAACgB,aAAa,CAACiB,WAAW,CAACjC,IAAI,CAAC;sBACtC,CAAC,MAAM;wBACLA,IAAI,CAACqD,eAAe,CAAC,MAAM,CAAC;sBAC9B;oBACF,CAAC,CAAC;oBACF,IAAIrD,IAAI,EAAE;sBACR;sBACAA,IAAI,CAACiD,SAAS,GAAGV,YAAY,CAACJ,OAAO,CAACH,iBAAiB,CAACiB,SAAS;sBACjEjD,IAAI,CAACsD,YAAY,CAAC,UAAU,EAAE,EAAE,GAAGrD,CAAC,CAAC;oBACvC,CAAC,MAAM;sBACL;sBACAsC,YAAY,CAACJ,OAAO,CAACH,iBAAiB,CAACsB,YAAY,CAAC,UAAU,EAAE,EAAE,GAAGrD,CAAC,CAAC;sBAEvEQ,MAAM,CAACe,WAAW,CAACe,YAAY,CAACJ,OAAO,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;oBAC1D;kBACF,CAAC,CAAC;kBACF,MAAI,CAACxG,MAAM,GAAGkF,QAAQ;kBAAC;kBAAA;gBAAA;kBAEvB,MAAI,CAACtE,KAAK,CAAC,wBAAwB,EAAEsE,QAAQ,CAAC;gBAAC;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;MAEnD;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACEyC,QAAQ,sBAAG;MACT,IAAI,CAACC,eAAe,CAAC,gBAAgB,EAAE,QAAQ,CAAC;MAChD,IAAI,CAAC5H,MAAM,GAAG,IAAI;MAClB,IAAI,CAACE,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACL,OAAO,GAAG,IAAI;IACrB,CAAC;IAED+H,KAAK,iBAACC,OAAO,EAAE;MACbC,cAAc,CAACjJ,MAAM,CACnBE,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAAC6I,UAAU,CAACC,MAAM,GAAG,MAAM;QAAA;;QAAA;QAAA;QAE7C,kBAAc;UAAA;UAAA,yBACNH,OAAO;QACf;QAAC;MAAA,EAHWI,WAAW,EAK1B;IACH;EACF,CAAC,CAAC;EAlaFlJ,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,UAAU,CAAC+I,IAAI,CAACvJ,aAAa,GAAGA,aAAa;AAAC"
}