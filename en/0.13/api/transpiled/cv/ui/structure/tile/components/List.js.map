{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MRefresh",
    "properties",
    "value",
    "refine",
    "init",
    "members",
    "_target",
    "_timer",
    "_model",
    "_getModel",
    "_filterModel",
    "_sortModel",
    "_limit",
    "_modelInstance",
    "_init",
    "element",
    "_element",
    "refreshOnUpdate",
    "model",
    "querySelector",
    "parentElement",
    "classList",
    "add",
    "error",
    "hasAttribute",
    "Function",
    "getAttribute",
    "parseInt",
    "readAddresses",
    "querySelectorAll",
    "address",
    "addEventListener",
    "ev",
    "evCopy",
    "CustomEvent",
    "bubbles",
    "cancelable",
    "detail",
    "a",
    "dispatchEvent",
    "sortBy",
    "sortModifier",
    "left",
    "right",
    "leftVal",
    "rightVal",
    "localeCompare",
    "JSON",
    "stringify",
    "undefined",
    "options",
    "ttl",
    "getRefresh",
    "proxyParam",
    "io",
    "Fetch",
    "cachedFetch",
    "res",
    "Clazz",
    "listmodel",
    "Registry",
    "get",
    "modelInstance",
    "props",
    "split",
    "entry",
    "map",
    "n",
    "trim",
    "name",
    "startsWith",
    "substring",
    "length",
    "set",
    "refresh",
    "getModel",
    "script",
    "data",
    "innerText",
    "getValue",
    "forEach",
    "elem",
    "i",
    "d",
    "index",
    "attributes",
    "push",
    "onStateUpdate",
    "isVisible",
    "setRefresh",
    "target",
    "_lastRefresh",
    "stopPropagation",
    "_applyValue",
    "template",
    "newModel",
    "Promise",
    "style",
    "display",
    "Error",
    "document",
    "createElement",
    "appendChild",
    "debug",
    "Array",
    "isArray",
    "filter",
    "sort",
    "slice",
    "whenEmptyTemplate",
    "firstElementChild",
    "removeChild",
    "emptyModel",
    "content",
    "cloneNode",
    "emptyElem",
    "remove",
    "itemTemplate",
    "endsWith",
    "indexOf",
    "isNaN",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "val",
    "html",
    "innerHTML",
    "replaceAll",
    "match",
    "includes",
    "removeAttribute",
    "setAttribute",
    "destruct",
    "_disposeObjects",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "List"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/List.js"
  ],
  "sourcesContent": [
    "/* List.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Generates a list of items. A &lt;template&gt;-element defines the content of the list-items and a model is used to\n * generate those items and apply the models content to the list-items.\n * It allows custom Javascript code in a &lt;script&gt;-Element to fill the model or address-Elements as model source.\n * The model can be refreshed in a time defined interval, which is set by the 'refresh' attribute.\n *\n * @widgetexample <settings>\n *    <caption>Example list</caption>\n *    <screenshot name=\"list_simple\"/>\n *  </settings>\n    <cv-list refresh=\"10\">\n      <model>\n        <script><![CDATA[\n         for (let i = 0; i < Math.round(Math.random()*10); i++) {\n           model.push({\n             label: 'This is list item no ' + i,\n             subLabel: 'Sublabel number ' + i\n           })\n         }\n         ]]>\n         </script>\n       </model>\n       <template>\n         <li>\n           <label class=\"primary\">${label}</label>\n           <label class=\"secondary\">${subLabel}</label>\n         </li>\n       </template>\n       <template when=\"empty\">\n         <li>\n           <label class=\"primary\">Model is empty!</label>\n         </li>\n       </template>\n   </cv-list>\n */\nqx.Class.define('cv.ui.structure.tile.components.List', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [cv.ui.structure.tile.MVisibility, cv.ui.structure.tile.MRefresh],\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    value: {\n      refine: true,\n      init: []\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _target: null,\n    _timer: null,\n    _model: null,\n    _getModel: null,\n    _filterModel: null,\n    _sortModel: null,\n    _limit: null,\n    _modelInstance: null,\n\n    _init() {\n      const element = this._element;\n      this._model = [];\n      let refreshOnUpdate = false;\n      const model = element.querySelector('model');\n      if (element.parentElement) {\n        element.parentElement.classList.add('has-list');\n      }\n      if (!model) {\n        this.error('cv-list needs a model');\n        return;\n      }\n      if (model.hasAttribute('filter')) {\n        this._filterModel = new Function('item', 'index', '\"use strict\"; return ' + model.getAttribute('filter'));\n      }\n      if (model.hasAttribute('limit')) {\n        this._limit = parseInt(model.getAttribute('limit'));\n      }\n      const readAddresses = model.querySelectorAll(':scope > cv-address:not([mode=\"write\"])');\n\n      // if we have top level write addresses, we need to listen to sendState Events from the list items\n      for (let address of element.querySelectorAll(':scope > cv-address')) {\n        if (address.getAttribute('mode') !== 'read') {\n          element.addEventListener('sendState', ev => {\n            // forward event copy (dispatching the same is not possible) to all write addresses\n            const evCopy = new CustomEvent('sendState', {\n              bubbles: ev.bubbles,\n              cancelable: ev.cancelable,\n              detail: ev.detail\n            });\n            for (let a of element.querySelectorAll(':scope > cv-address')) {\n              a.dispatchEvent(evCopy);\n            }\n          });\n          break;\n        }\n      }\n\n      if (model.hasAttribute('sort-by')) {\n        const sortBy = model.getAttribute('sort-by');\n        // reverse order in 'desc' sort mode\n        const sortModifier = model.getAttribute('sort-mode') === 'desc' ? -1 : 1;\n        this._sortModel = (left, right) => {\n          const leftVal = left[sortBy];\n          const rightVal = right[sortBy];\n          if (leftVal === rightVal) {\n            return 0;\n          } else if (typeof leftVal === typeof rightVal) {\n            switch (typeof leftVal) {\n              case 'number':\n                return (leftVal - rightVal) * sortModifier;\n\n              case 'boolean':\n                return (leftVal ? -1 : 1) * sortModifier;\n\n              case 'string':\n                return leftVal.localeCompare(rightVal) * sortModifier;\n\n              default:\n                return JSON.stringify(leftVal).localeCompare(JSON.stringify(rightVal)) * sortModifier;\n            }\n          } else if (leftVal === undefined || leftVal === null) {\n            return 1 * sortModifier;\n          } else if (rightVal === undefined || rightVal === null) {\n            return -1 * sortModifier;\n          }\n          return 0;\n        };\n      }\n      if (model.hasAttribute('src') || model.hasAttribute('config-section')) {\n        // fetch from url\n        this._getModel = async () => {\n          const options = {\n            ttl: this.getRefresh()\n          };\n          for (const proxyParam of ['self-signed', 'config-section', 'auth-type']) {\n            if (model.hasAttribute(proxyParam)) {\n              options[proxyParam] = model.getAttribute(proxyParam);\n            }\n          }\n          const res = await cv.io.Fetch.cachedFetch(model.getAttribute('src'), options, model.getAttribute('proxy') === 'true');\n          return res;\n        };\n      } else if (model.hasAttribute('class')) {\n        // initialize internal class instance that implements cv.io.listmodel.IListModel\n        const Clazz = cv.io.listmodel.Registry.get(model.getAttribute('class'));\n        if (Clazz) {\n          const modelInstance = new Clazz();\n          if (model.hasAttribute('parameters')) {\n            const props = {};\n            for (let entry of model.getAttribute('parameters').split(',')) {\n              const [name, value] = entry.split('=').map(n => n.trim());\n              props[name] = value.startsWith('\\'') ? value.substring(1, value.length-1) : value;\n            }\n            modelInstance.set(props);\n          }\n          this._getModel = async () => {\n            await modelInstance.refresh();\n            return modelInstance.getModel();\n          };\n        } else {\n          this.error(`clazz \"cv.io.listmodel.${model.getAttribute('class')}\" not found`);\n        }\n      } else {\n        const script = model.querySelector(':scope > script');\n        const data = model.querySelectorAll(':scope > cv-data');\n        if (script) {\n          this._getModel = new Function('\"use strict\";let model = []; ' + script.innerText.trim() + '; return model');\n\n          this._model = this._getModel();\n        } else if (readAddresses.length > 0) {\n          // model has an address that triggers a refresh on update, so we just have to read the model from the updated value\n          this._getModel = this.getValue;\n          refreshOnUpdate = true;\n        } else if (data.length > 0) {\n          this._model = [];\n          this._getModel = () => this._model;\n          data.forEach((elem, i) => {\n            const d = {\n              index: i\n            };\n\n            for (const a of elem.attributes) {\n              d[a.name] = a.value;\n            }\n            this._model.push(d);\n          });\n        } else {\n          this.error(\n            'cv-list > model must have at least one read address, src-attribute, cv-data child or a script that fills the model.'\n          );\n\n          return;\n        }\n      }\n      if (readAddresses.length > 0) {\n        element.addEventListener('stateUpdate', ev => this.onStateUpdate(ev));\n      }\n      if (!refreshOnUpdate) {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        }\n        if (element.hasAttribute('refresh')) {\n          this.setRefresh(parseInt(element.getAttribute('refresh')));\n        }\n      }\n    },\n\n    onStateUpdate(ev) {\n      if (ev.detail.target === 'refresh') {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        } else {\n          // reset lastRefresh to that the refresh get called when this item gets visible\n          this._lastRefresh = null;\n        }\n      } else {\n        super.onStateUpdate(ev);\n      }\n      // cancel event here\n      ev.stopPropagation();\n    },\n\n    _applyValue() {\n      // reset last refresh, because with new data its obsolete\n      this._lastRefresh = 0;\n      this.refresh();\n    },\n\n    async refresh() {\n      const element = this._element;\n      const template = element.querySelector(':scope > template:not([when])');\n      let newModel = [];\n      if (typeof this._getModel === 'function') {\n        newModel = this._getModel();\n      }\n      if (newModel instanceof Promise) {\n        try {\n          newModel = await newModel;\n        } catch (e) {\n          this.error('error refreshing async model:', e);\n        }\n      }\n      let target = element.querySelector(':scope > ul');\n      if (template.getAttribute('wrap') === 'false') {\n        target = element;\n      } else if (template.hasAttribute('target')) {\n        switch (template.getAttribute('target')) {\n          case 'parent':\n            target = element.parentElement;\n            // we do not need the list to be visible then\n            element.style.display = 'none';\n            break;\n          default:\n            throw new Error('invalid target: ' + template.getAttribute('target'));\n        }\n      } else if (!target) {\n        target = document.createElement('ul');\n        target.classList.add('content');\n        element.appendChild(target);\n      }\n      this.debug('refreshing with new model length', newModel.length);\n      if (Array.isArray(newModel) || newModel instanceof qx.data.Array) {\n        if (typeof this._filterModel === 'function') {\n          newModel = newModel.filter(this._filterModel);\n        }\n        if (typeof this._sortModel === 'function') {\n          newModel.sort(this._sortModel);\n        }\n        if (this._limit) {\n          newModel = newModel.slice(0, this._limit);\n        }\n        if (newModel.length === 0) {\n          const whenEmptyTemplate = element.querySelector(':scope > template[when=\"empty\"]');\n\n          if (whenEmptyTemplate && !target.querySelector(':scope > .empty-model')) {\n            while (target.firstElementChild && target.firstElementChild.hasAttribute('data-row')) {\n              target.removeChild(target.firstElementChild);\n            }\n            const emptyModel = whenEmptyTemplate.content.firstElementChild.cloneNode(true);\n            emptyModel.classList.add('empty-model');\n            target.appendChild(emptyModel);\n            return;\n          }\n        } else {\n          const emptyElem = target.querySelector(':scope > .empty-model');\n          if (emptyElem) {\n            emptyElem.remove();\n          }\n        }\n        const itemTemplate = document.createElement('template');\n        // remove entries we do not need anymore\n        for (let i = newModel.length; i < this._model.length; i++) {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          if (elem) {\n            elem.remove();\n          }\n        }\n\n        const getValue = (name, entry) => {\n          let index = -1;\n          if (name.endsWith(']')) {\n            // array access\n            index = parseInt(name.substring(name.indexOf('[') + 1, name.length - 1));\n            if (isNaN(index)) {\n              this.error(\n                'error parsing array index from ' + name,\n                name.substring(name.indexOf('[') + 1, name.length - 1)\n              );\n              return '';\n            }\n            name = name.substring(0, name.indexOf('['));\n          }\n          if (Object.prototype.hasOwnProperty.call(entry, name)) {\n            let val = entry[name];\n            if (index >= 0 && Array.isArray(val)) {\n              return val[index];\n            }\n            return val;\n          }\n          return '';\n        };\n        newModel.forEach((entry, i) => {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          const html = template.innerHTML.replaceAll(/\\${([^}]+)}/g, (match, content) => {\n            if (content === 'index') {\n              return '' + i;\n            }\n            if (content.includes('||')) {\n              // elements are or'ed use the first one with value\n              let val = '';\n              for (let name of content.split('||').map(n => n.trim())) {\n                val = getValue(name, entry);\n                if (val) {\n                  return val;\n                }\n              }\n            }\n            return getValue(content, entry);\n          });\n\n          itemTemplate.innerHTML = html;\n          // check for elements with when attributes\n          itemTemplate.content.firstElementChild.querySelectorAll('[when]').forEach(elem => {\n            const [leftVal, rightVal] = elem\n              .getAttribute('when')\n              .split('=')\n              .map(n => n.trim());\n            // noinspection EqualityComparisonWithCoercionJS\n            if (leftVal != rightVal) {\n              elem.parentElement.removeChild(elem);\n            } else {\n              elem.removeAttribute('when');\n            }\n          });\n          if (elem) {\n            // update existing\n            elem.innerHTML = itemTemplate.content.firstElementChild.innerHTML;\n            elem.setAttribute('data-row', '' + i);\n          } else {\n            // append new child\n            itemTemplate.content.firstElementChild.setAttribute('data-row', '' + i);\n\n            target.appendChild(itemTemplate.content.cloneNode(true));\n          }\n        });\n        this._model = newModel;\n      } else {\n        this.error('model must be an array', newModel);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._disposeObjects('_modelInstance', '_timer');\n    this._model = null;\n    this._filterModel = null;\n    this._sortModel = null;\n    this._target = null;\n  },\n\n  defer(QxClass) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'list',\n      class extends QxConnector {\n        constructor() {\n          super(QxClass);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}