{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MRefresh",
    "properties",
    "value",
    "refine",
    "init",
    "members",
    "_target",
    "_timer",
    "_model",
    "_getModel",
    "_filterModel",
    "_sortModel",
    "_limit",
    "_init",
    "element",
    "_element",
    "refreshOnUpdate",
    "model",
    "querySelector",
    "error",
    "hasAttribute",
    "Function",
    "getAttribute",
    "parseInt",
    "readAddresses",
    "querySelectorAll",
    "sortBy",
    "sortModifier",
    "left",
    "right",
    "leftVal",
    "rightVal",
    "localeCompare",
    "JSON",
    "stringify",
    "undefined",
    "io",
    "Fetch",
    "fetch",
    "res",
    "script",
    "data",
    "innerText",
    "trim",
    "length",
    "getValue",
    "forEach",
    "elem",
    "i",
    "d",
    "index",
    "attributes",
    "a",
    "name",
    "push",
    "addEventListener",
    "ev",
    "onStateUpdate",
    "isVisible",
    "refresh",
    "setRefresh",
    "detail",
    "target",
    "_lastRefresh",
    "stopPropagation",
    "_applyValue",
    "template",
    "newModel",
    "Promise",
    "parentElement",
    "style",
    "display",
    "Error",
    "document",
    "createElement",
    "classList",
    "add",
    "appendChild",
    "debug",
    "Array",
    "isArray",
    "filter",
    "sort",
    "slice",
    "whenEmptyTemplate",
    "firstChild",
    "removeChild",
    "lastChild",
    "emptyModel",
    "content",
    "firstElementChild",
    "cloneNode",
    "emptyElem",
    "remove",
    "itemTemplate",
    "entry",
    "html",
    "innerHTML",
    "replaceAll",
    "match",
    "p1",
    "p2",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "val",
    "setAttribute",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "List"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* List.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Generates a list of items. A &lt;template&gt;-element defines the content of the list-items and a model is used to\n * generate those items and apply the models content to the list-items.\n * It allows custom Javascript code in a &lt;script&gt;-Element to fill the model or address-Elements as model source.\n * The model can be refreshed in a time defined interval, which is set by the 'refresh' attribute.\n *\n * @widgetexample <settings>\n *    <caption>Example list</caption>\n *    <screenshot name=\"list_simple\"/>\n *  </settings>\n    <cv-list refresh=\"10\">\n      <model>\n        <script><![CDATA[\n         for (let i = 0; i < Math.round(Math.random()*10); i++) {\n           model.push({\n             label: 'This is list item no ' + i,\n             subLabel: 'Sublabel number ' + i\n           })\n         }\n         ]]>\n         </script>\n       </model>\n       <template>\n         <li>\n           <label class=\"primary\">${label}</label>\n           <label class=\"secondary\">${subLabel}</label>\n         </li>\n       </template>\n       <template when=\"empty\">\n         <li>\n           <label class=\"primary\">Model is empty!</label>\n         </li>\n       </template>\n   </cv-list>\n */\nqx.Class.define('cv.ui.structure.tile.components.List', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [cv.ui.structure.tile.MVisibility, cv.ui.structure.tile.MRefresh],\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    value: {\n      refine: true,\n      init: []\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _target: null,\n    _timer: null,\n    _model: null,\n    _getModel: null,\n    _filterModel: null,\n    _sortModel: null,\n    _limit: null,\n\n    _init() {\n      const element = this._element;\n      this._model = [];\n      let refreshOnUpdate = false;\n      const model = element.querySelector('model');\n      if (!model) {\n        this.error('cv-list needs a model');\n        return;\n      }\n      if (model.hasAttribute('filter')) {\n        this._filterModel = new Function('item', 'index', '\"use strict\"; return ' + model.getAttribute('filter'));\n      }\n      if (model.hasAttribute('limit')) {\n        this._limit = parseInt(model.getAttribute('limit'));\n      }\n      const readAddresses = model.querySelectorAll(':scope > cv-address:not([mode=\"write\"])');\n      if (model.hasAttribute('sort-by')) {\n        const sortBy = model.getAttribute('sort-by');\n        // reverse order in 'desc' sort mode\n        const sortModifier = model.getAttribute('sort-mode') === 'desc' ? -1 : 1;\n        this._sortModel = (left, right) => {\n          const leftVal = left[sortBy];\n          const rightVal = right[sortBy];\n          if (leftVal === rightVal) {\n            return 0;\n          } else if (typeof leftVal === typeof rightVal) {\n            switch (typeof leftVal) {\n              case 'number':\n                return (leftVal - rightVal) * sortModifier;\n\n              case 'boolean':\n                return (leftVal ? -1 : 1) * sortModifier;\n\n              case 'string':\n                return leftVal.localeCompare(rightVal) * sortModifier;\n\n              default:\n                return JSON.stringify(leftVal).localeCompare(JSON.stringify(rightVal)) * sortModifier;\n            }\n          } else if (leftVal === undefined || leftVal === null) {\n            return 1 * sortModifier;\n          } else if (rightVal === undefined || rightVal === null) {\n            return -1 * sortModifier;\n          }\n          return 0;\n        };\n      }\n      if (model.hasAttribute('src')) {\n        // fetch from url\n        this._getModel = async () => {\n          const res = await cv.io.Fetch.fetch(model.getAttribute('src'), null, model.getAttribute('proxy') === 'true');\n          return res;\n        };\n      } else {\n        const script = model.querySelector(':scope > script');\n        const data = model.querySelectorAll(':scope > cv-data');\n        if (script) {\n          this._getModel = new Function('\"use strict\";let model = []; ' + script.innerText.trim() + '; return model');\n          this._model = this._getModel();\n        } else if (readAddresses.length > 0) {\n          // model has an address that triggers a refresh on update, so we just have to read the model from the updated value\n          this._getModel = this.getValue;\n          refreshOnUpdate = true;\n        } else if (data.length > 0) {\n          this._model = [];\n          this._getModel = () => this._model;\n          data.forEach((elem, i) => {\n            const d = {\n              index: i\n            };\n            for (const a of elem.attributes) {\n              d[a.name] = a.value;\n            }\n            this._model.push(d);\n          });\n        } else {\n          this.error('cv-list > model must have at least one read address, src-attribute, cv-data child or a script that fills the model.');\n          return;\n        }\n      }\n      if (readAddresses.length > 0) {\n        element.addEventListener('stateUpdate', ev => this.onStateUpdate(ev));\n      }\n      if (!refreshOnUpdate) {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        }\n        if (element.hasAttribute('refresh')) {\n          this.setRefresh(parseInt(element.getAttribute('refresh')));\n        }\n      }\n    },\n\n    onStateUpdate(ev) {\n      if (ev.detail.target === 'refresh') {\n        if (this.isVisible()) {\n          // only load when visible\n          this.refresh();\n        } else {\n          // reset lastRefresh to that the refresh get called when this item gets visible\n          this._lastRefresh = null;\n        }\n      } else {\n        this.base(arguments, ev);\n      }\n      // cancel event here\n      ev.stopPropagation();\n    },\n\n    _applyValue() {\n      // reset last refresh, because with new data its obsolete\n      this._lastRefresh = 0;\n      this.refresh();\n    },\n\n    async refresh() {\n      const element = this._element;\n      const template = element.querySelector(':scope > template:not([when])');\n      let newModel = [];\n      if (typeof this._getModel === 'function') {\n        newModel = this._getModel();\n      }\n      if (newModel instanceof Promise) {\n        newModel = await newModel;\n      }\n      let target = element.querySelector(':scope > ul');\n      if (template.getAttribute('wrap') === 'false') {\n        target = element;\n      } else if (template.hasAttribute('target')) {\n        switch (template.getAttribute('target')) {\n          case 'parent':\n            target = element.parentElement;\n            // we do not need the list to be visible then\n            element.style.display = 'none';\n            break;\n          default:\n            throw new Error('invalid target: ' + template.getAttribute('target'));\n        }\n      } else if (!target) {\n        target = document.createElement('ul');\n        target.classList.add('content');\n        element.appendChild(target);\n      }\n      this.debug('refreshing with new model length', newModel.length);\n      if (Array.isArray(newModel) || newModel instanceof qx.data.Array) {\n        if (typeof this._filterModel === 'function') {\n          newModel = newModel.filter(this._filterModel);\n        }\n        if (typeof this._sortModel === 'function') {\n          newModel.sort(this._sortModel);\n        }\n        if (this._limit) {\n          newModel = newModel.slice(0, this._limit);\n        }\n        if (newModel.length === 0) {\n          const whenEmptyTemplate = element.querySelector(':scope > template[when=\"empty\"]');\n          if (whenEmptyTemplate && !target.querySelector(':scope > .empty-model')) {\n            while (target.firstChild && target.hasAttribute('data-row')) {\n              target.removeChild(target.lastChild);\n            }\n            const emptyModel = whenEmptyTemplate.content.firstElementChild.cloneNode(true);\n            emptyModel.classList.add('empty-model');\n            target.appendChild(emptyModel);\n            return;\n          }\n        } else {\n          const emptyElem = target.querySelector(':scope > .empty-model');\n          if (emptyElem) {\n            emptyElem.remove();\n          }\n        }\n        const itemTemplate = document.createElement('template');\n        // remove entries we do not need anymore\n        for (let i = newModel.length; i < this._model.length; i++) {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          if (elem) {\n            elem.remove();\n          }\n        }\n\n        newModel.forEach((entry, i) => {\n          const elem = target.querySelector(`:scope > [data-row=\"${i}\"]`);\n          const html = template.innerHTML.replaceAll(/\\${([^}\\[]+)\\[?(\\d+)?\\]?}/g, (match, p1, p2) => {\n            if (Object.prototype.hasOwnProperty.call(entry, p1)) {\n              let val = entry[p1];\n              if (p2 && Array.isArray(val)) {\n                return val[parseInt(p2)];\n              }\n              return val;\n            } else if (p1 === 'index') {\n              return '' + i;\n            }\n            return '';\n          });\n          itemTemplate.innerHTML = html;\n          if (elem) {\n            // update existing\n            elem.innerHTML = itemTemplate.content.firstElementChild.innerHTML;\n            elem.setAttribute('data-row', ''+i);\n          } else {\n            // append new child\n            itemTemplate.content.firstElementChild.setAttribute('data-row', ''+i);\n            target.appendChild(itemTemplate.content.cloneNode(true));\n          }\n        });\n        this._model = newModel;\n      } else {\n        this.error('model must be an array', newModel);\n      }\n    }\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'list', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}