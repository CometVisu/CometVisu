{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "source",
    "target",
    "constructor",
    "call",
    "_updatePosition",
    "__updatePosition",
    "bind",
    "_debouncedUpdatePosition",
    "util",
    "Function",
    "debounce",
    "_sourceObserver",
    "MutationObserver",
    "_onMutation",
    "_targetObserver",
    "setSource",
    "setTarget",
    "statics",
    "C",
    "properties",
    "id",
    "check",
    "nullable",
    "apply",
    "root",
    "sourceConnectionPoint",
    "init",
    "validate",
    "targetConnectionPoint",
    "styleClass",
    "showDirection",
    "inverted",
    "members",
    "_path",
    "_applySource",
    "value",
    "oldValue",
    "disconnect",
    "_init",
    "observe",
    "getSvg",
    "attributes",
    "_applyTarget",
    "_this",
    "sourceEntity",
    "getSource",
    "targetEntity",
    "getTarget",
    "sourceRoot",
    "ownerSVGElement",
    "targetRoot",
    "changed",
    "setRoot",
    "appendC",
    "hasAttribute",
    "getAttribute",
    "nodeName",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "svg",
    "Connector",
    "path",
    "querySelector",
    "setId",
    "document",
    "createElementNS",
    "_instance",
    "setAttribute",
    "insertBefore",
    "firstChild",
    "setTimeout",
    "records",
    "observer",
    "_iterator",
    "_createForOfIteratorHelper",
    "_step",
    "s",
    "n",
    "done",
    "mutation",
    "type",
    "attributeName",
    "err",
    "e",
    "f",
    "__P_89_0",
    "_this2",
    "retried",
    "arguments",
    "length",
    "undefined",
    "sourceCoord",
    "Svg",
    "getBBox",
    "targetCoord",
    "startX",
    "startY",
    "endX",
    "endY",
    "getSourceConnectionPoint",
    "getTargetConnectionPoint",
    "dx",
    "cx",
    "dy",
    "cy",
    "l",
    "Math",
    "sqrt",
    "pow",
    "rsl",
    "getRadius",
    "rtl",
    "yS",
    "yT",
    "xS",
    "xT",
    "debug",
    "getId",
    "concat",
    "y",
    "height",
    "x",
    "width",
    "setInverted",
    "drawPath",
    "_applyRoot",
    "oldRoot",
    "removeEventListener",
    "addEventListener",
    "_initArrowMarkers",
    "_applyStyleClass",
    "classList",
    "remove",
    "add",
    "_applyShowDirection",
    "getShowDirection",
    "markerId",
    "removeAttribute",
    "__getMarkerId",
    "isInverted",
    "__P_89_1",
    "arrowId",
    "getStyleClass",
    "getRoot",
    "marker",
    "baseMarker",
    "newMarker",
    "cloneNode",
    "appendChild",
    "log",
    "error",
    "errorMessage",
    "_validateConnectionPoint",
    "includes",
    "ValidationError",
    "defs",
    "ns",
    "arrowPath",
    "arrow",
    "use",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/svg/Connector.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n\n/**\n * Draws a line between two SVGGraphicsElements.\n *\n * @since 2023\n * @author Tobias BrÃ¤utigam\n */\nqx.Class.define('cv.ui.structure.tile.components.svg.Connector', {\n  extend: qx.core.Object,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct(source, target) {\n    super();\n    this._updatePosition = this.__updatePosition.bind(this);\n    this._debouncedUpdatePosition = qx.util.Function.debounce(this._updatePosition, 50);\n    this._sourceObserver = new MutationObserver(this._onMutation.bind(this));\n    this._targetObserver = new MutationObserver(this._onMutation.bind(this));\n    this.setSource(source);\n    this.setTarget(target);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    C: 0\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    id: {\n      check: 'String',\n      nullable: true\n    },\n    source: {\n      check: 'cv.ui.structure.tile.components.energy.PowerEntity',\n      apply: '_applySource',\n      nullable: true\n    },\n    target: {\n      check: 'cv.ui.structure.tile.components.energy.PowerEntity',\n      apply: '_applyTarget',\n      nullable: true\n    },\n    root: {\n      check: 'SVGSVGElement',\n      apply: '_applyRoot',\n      nullable: true\n    },\n    sourceConnectionPoint: {\n      check: ['top', 'right', 'bottom', 'left', 'auto'],\n      init: 'auto',\n      apply: '__updatePosition',\n      validate : '_validateConnectionPoint'\n    },\n    targetConnectionPoint: {\n      check: ['top', 'right', 'bottom', 'left', 'auto'],\n      init: 'auto',\n      apply: '__updatePosition',\n      validate : '_validateConnectionPoint'\n    },\n    styleClass: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyStyleClass'\n    },\n\n    showDirection: {\n      check: ['none', 'source', 'target', 'both'],\n      init: 'none',\n      apply: '_applyShowDirection'\n    },\n\n    inverted: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyShowDirection'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _path: null,\n    /**\n     * @type {MutationObserver}\n     */\n    _sourceObserver: null,\n    /**\n     * @type {MutationObserver}\n     */\n    _targetObserver: null,\n\n    _applySource(value, oldValue) {\n      if (oldValue) {\n        this._sourceObserver.disconnect();\n      }\n      if (value) {\n        this._init();\n        this._sourceObserver.observe(value.getSvg(), {attributes: true});\n      }\n    },\n\n    _applyTarget(value, oldValue) {\n      if (oldValue) {\n        this._targetObserver.disconnect();\n      }\n      if (value) {\n        this._init();\n        this._targetObserver.observe(value.getSvg(), {attributes: true});\n      }\n    },\n\n    _init() {\n      const sourceEntity = this.getSource();\n      const targetEntity = this.getTarget();\n\n      if (sourceEntity && targetEntity) {\n        const source = sourceEntity.getSvg();\n        const target = targetEntity.getSvg();\n        // find common root\n        let sourceRoot = source.ownerSVGElement;\n        let targetRoot = target.ownerSVGElement;\n        while (sourceRoot !== targetRoot) {\n          let changed = false;\n          if (sourceRoot.ownerSVGElement) {\n            sourceRoot = sourceRoot.ownerSVGElement;\n            changed = true;\n          }\n          if (targetRoot.ownerSVGElement) {\n            targetRoot = targetRoot.ownerSVGElement;\n            changed = true;\n          }\n          if (!changed) {\n            break;\n          }\n        }\n        const root = sourceRoot || targetRoot;\n        this.setRoot(root);\n\n        let id = '';\n        let appendC = false;\n        if (source.hasAttribute('id')) {\n          id += source.getAttribute('id');\n        } else {\n          id += source.nodeName;\n          appendC = true;\n        }\n        id += '-';\n        if (target.hasAttribute('id')) {\n          id += target.getAttribute('id');\n        } else {\n          id += target.nodeName;\n          appendC = true;\n        }\n        if (appendC) {\n          id += cv.ui.structure.tile.components.svg.Connector.C++;\n        }\n\n        let path = root.querySelector('#' + id);\n        this.setId(id);\n        if (!path) {\n          path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path._instance = this;\n          path.setAttribute('id', id);\n          path.setAttribute('stroke', 'var(--borderColor)');\n          path.setAttribute('fill', 'transparent');\n          path.setAttribute('stroke-width', '2');\n          path.setAttribute('class', 'connection');\n          root.insertBefore(path, root.firstChild);\n        }\n        this._path = path;\n        setTimeout(() => {\n          this.__updatePosition();\n        }, 1000);\n      }\n    },\n\n    _onMutation(records, observer) {\n      for (const mutation of records) {\n        if (mutation.type === 'attributes' && (mutation.attributeName === 'x' || mutation.attributeName === 'y')) {\n          this._debouncedUpdatePosition();\n        }\n      }\n    },\n\n    __updatePosition(retried = false) {\n      const sourceEntity = this.getSource();\n      const targetEntity = this.getTarget();\n\n      if (sourceEntity && targetEntity && this._path) {\n        const source = sourceEntity.getSvg();\n        const target = targetEntity.getSvg();\n        let sourceCoord = cv.util.Svg.getBBox(source);\n        let targetCoord = cv.util.Svg.getBBox(target);\n\n        let startX = 0;\n        let startY = 0;\n        let endX = 0;\n        let endY = 0;\n\n        let sourceConnectionPoint = this.getSourceConnectionPoint();\n        let targetConnectionPoint = this.getTargetConnectionPoint();\n        if (sourceConnectionPoint === 'auto' || targetConnectionPoint === 'auto') {\n          const dx = targetCoord.cx - sourceCoord.cx;\n          const dy = targetCoord.cy - sourceCoord.cy;\n          const l = Math.sqrt(dx**2 + dy**2);\n          if (l === 0) {\n            if (!retried) {\n              setTimeout(() => {\n                this._updatePosition(true);\n              }, 1000);\n            }\n            return;\n          }\n          const rsl = sourceEntity.getRadius() / l;\n          const rtl = targetEntity.getRadius() / l;\n          const yS = sourceCoord.cy + dy * rsl;\n          const yT = targetCoord.cy - dy * rtl;\n          const xS = sourceCoord.cx + dx * rsl;\n          const xT = targetCoord.cx - dx * rtl;\n\n          this.debug(this.getId(), `(${xS}, ${yS}) -> (${xT}, ${yT})`);\n\n          if (sourceConnectionPoint === 'auto') {\n            startX = xS;\n            startY = yS;\n          }\n          if (targetConnectionPoint === 'auto') {\n            endX = xT;\n            endY = yT;\n          }\n        }\n\n        switch (sourceConnectionPoint) {\n          case 'bottom':\n            startX = sourceCoord.cx;\n            startY = sourceCoord.y + sourceCoord.height;\n            break;\n\n          case 'top':\n            startX = sourceCoord.cx;\n            startY = sourceCoord.y;\n            break;\n\n          case 'right':\n            startX = sourceCoord.x + sourceCoord.width;\n            startY = sourceCoord.cy;\n            break;\n\n          case 'left':\n            startX = sourceCoord.x;\n            startY = sourceCoord.cy;\n            break;\n        }\n\n        switch (targetConnectionPoint) {\n          case 'bottom':\n            endX = targetCoord.cx;\n            endY = targetCoord.y + targetCoord.height;\n            break;\n\n          case 'top':\n            endX = targetCoord.cx;\n            endY = targetCoord.y;\n            break;\n\n          case 'right':\n            endX = targetCoord.x + targetCoord.width;\n            endY = targetCoord.cy;\n            break;\n\n          case 'left':\n            endX = targetCoord.x;\n            endY = targetCoord.cy;\n            break;\n        }\n\n        // make sure that we always draw the path from left to right\n        if (startX > endX) {\n          this.setInverted(true);\n          this.drawPath(this._path, endX, endY, startX, startY);\n        } else {\n          this.setInverted(false);\n          this.drawPath(this._path, startX, startY, endX, endY);\n        }\n      }\n    },\n\n    drawPath(path, startX, startY, endX, endY) {\n       /* const deltaX = (endX - startX) * 0.15;\n      const deltaY = (endY - startY) * 0.15;\n      // for further calculations which ever is the shortest distance\n      const delta  =  deltaY < Math.abs(deltaX) ? deltaY : Math.abs(deltaX);\n\n      let arc1 = 0;\n      let arc2 = 1;\n      if (startX > endX) {\n        arc1 = 1;\n        arc2 = 0;\n      }\n\n      // 1. move a bit down, 2. arch,  3. move a bit to the right, 4.arch, 5. move down to the end\n      path.setAttribute('d',  'M'  + startX + ' ' + startY +\n        ' V' + (startY + delta) +\n        ' A' + delta + ' ' +  delta + ' 0 0 ' + arc1 + ' ' + (startX + delta*Math.sign(deltaX)) + ' ' + (startY + 2*delta) +\n        ' H' + (endX - delta*Math.sign(deltaX)) +\n        ' A' + delta + ' ' +  delta + ' 0 0 ' + arc2 + ' ' + endX + ' ' + (startY + 3*delta) +\n        ' V' + endY);*/\n\n      // draw straight line\n      path.setAttribute('d',  `M${startX} ${startY} L ${endX} ${endY}`);\n    },\n\n    _applyRoot(root, oldRoot) {\n      if (oldRoot) {\n        oldRoot.removeEventListener('resize', this._updatePosition);\n      }\n      if (root) {\n        root.addEventListener('resize', this._updatePosition);\n        this._initArrowMarkers(root);\n      }\n    },\n\n    _applyStyleClass(value, oldValue) {\n      if (this._path) {\n        if (oldValue) {\n          this._path.classList.remove(oldValue);\n        }\n        if (value) {\n          this._path.classList.add(value);\n        }\n        this._applyShowDirection();\n      }\n    },\n\n    _applyShowDirection() {\n      const value = this.getShowDirection();\n      let markerId = '';\n      if (value === 'none') {\n        this._path.removeAttribute('marker-start');\n        this._path.removeAttribute('marker-end');\n      } else if (value === 'both') {\n        markerId = this.__getMarkerId();\n        this._path.setAttribute('marker-start', `url(#${markerId})`);\n        this._path.setAttribute('marker-end', `url(#${markerId})`);\n      } else if ((value === 'source' && !this.isInverted()) || (value === 'target' && this.isInverted())) {\n        markerId = this.__getMarkerId();\n        this._path.setAttribute('marker-start', `url(#${markerId})`);\n        this._path.removeAttribute('marker-end');\n      } else if ((value === 'target' && !this.isInverted()) || (value === 'source' && this.isInverted())) {\n        markerId = this.__getMarkerId();\n        this._path.removeAttribute('marker-start');\n        this._path.setAttribute('marker-end', `url(#${markerId})`);\n      }\n    },\n\n    __getMarkerId() {\n      const arrowId = 'arrow';\n      const styleClass = this.getStyleClass();\n      if (styleClass) {\n        const id = `${arrowId}-${styleClass}`;\n        // check if we have a marker with this ID\n        const root = this.getRoot();\n        try {\n          let marker = root.querySelector(`#${id}`);\n          if (!marker) {\n            const baseMarker = root.querySelector(`#${arrowId}`);\n            const newMarker = baseMarker.cloneNode(true);\n            newMarker.removeAttribute('fill');\n            newMarker.setAttribute('class', 'connection ' + styleClass);\n            newMarker.setAttribute('id', id);\n            root.querySelector('defs').appendChild(newMarker);\n          }\n        } catch (e) {\n          this.log.error('error getting arrow:', e.errorMessage);\n        }\n        return id;\n      }\n      return arrowId;\n    },\n\n    _validateConnectionPoint(value) {\n      if (!['top', 'right', 'bottom', 'left', 'auto'].includes(value)) {\n        throw new qx.core.ValidationError(\n          'Validation Error: ', value + ' is no valid connection point.'\n        );\n      }\n    },\n\n    _initArrowMarkers(svg) {\n      let defs = svg.querySelector('defs');\n      const ns = 'http://www.w3.org/2000/svg';\n      if (!defs) {\n        defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n      }\n\n      // define paths for re-use\n      let arrowPath = defs.querySelector('#h-arrow-path');\n      if (!arrowPath) {\n        arrowPath = document.createElementNS(ns, 'path');\n        arrowPath.setAttribute('id', 'h-arrow-path');\n        arrowPath.setAttribute('d', 'M 0 0 L 10 5 L 0 10 z');\n        defs.appendChild(arrowPath);\n      }\n/*\n      let vertArrowPath = defs.querySelector('#v-arrow-path');\n      if (!vertArrowPath) {\n        vertArrowPath = document.createElementNS(ns, 'path');\n        vertArrowPath.setAttribute('id', 'v-arrow-path');\n        vertArrowPath.setAttribute('d', 'M 0 10 L 10 10 L 5 0 z');\n        defs.appendChild(vertArrowPath);\n      }*/\n\n      let arrow = defs.querySelector('#arrow');\n      if (!arrow) {\n        arrow = document.createElementNS(ns, 'marker');\n        arrow.setAttribute('id', 'arrow');\n        arrow.setAttribute('viewBox', '0 0 10 10');\n        arrow.setAttribute('refX', '10');\n        arrow.setAttribute('refY', '5');\n        arrow.setAttribute('markerWidth', '5');\n        arrow.setAttribute('markerHeight', '5');\n        arrow.setAttribute('markerUnits', 'strokeWidth');\n        arrow.setAttribute('fill', 'var(--borderColor)');\n        arrow.setAttribute('orient', 'auto-start-reverse');\n        let use = document.createElementNS(ns, 'use');\n        use.setAttribute('href', '#h-arrow-path');\n        arrow.appendChild(use);\n        defs.appendChild(arrow);\n      }\n\n      /*let vertArrow = defs.querySelector('#vertical-arrow');\n      if (!vertArrow) {\n        const vertArrow = arrow.cloneNode(true);\n        vertArrow.setAttribute('id', 'vertical-arrow');\n        vertArrow.setAttribute('orient', '270');\n        defs.appendChild(vertArrow);\n      }*/\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._path = null;\n    this._sourceObserver.disconnect();\n    this._sourceObserver = null;\n    this._targetObserver.disconnect();\n    this._targetObserver = null;\n  }\n});\n"
  ],
  "mappings": "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"
}