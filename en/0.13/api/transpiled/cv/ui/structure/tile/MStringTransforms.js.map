{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "_parseInt",
    "val",
    "parseInt",
    "_parseFloat",
    "parseFloat",
    "_parseBoolean",
    "cv",
    "ui",
    "structure",
    "tile",
    "MStringTransforms"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/MStringTransforms.js"
  ],
  "sourcesContent": [
    "/*\n * Copyright (c) 2023, Christian Mayer and the CometVisu contributors.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n *\n */\n\n/**\n * Provides all transform helper functions for converting a string value,\n * to other scalar property types.\n *\n * @since 2023\n * @author Tobias Br√§utigam\n */\nqx.Mixin.define('cv.ui.structure.tile.MStringTransforms', {\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _parseInt(val) {\n      if (typeof val === 'string') {\n        return parseInt(val, 10);\n      }\n      return val;\n    },\n\n    _parseFloat(val) {\n      if (typeof val === 'string') {\n        return parseFloat(val);\n      }\n      return val;\n    },\n\n    _parseBoolean(val) {\n      if (typeof val === 'string') {\n        return val === 'true';\n      }\n      return val;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wCAAwC,EAAE;IAExD;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,SAAS,WAAAA,UAACC,GAAG,EAAE;QACb,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC3B,OAAOC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;QAC1B;QACA,OAAOA,GAAG;MACZ,CAAC;MAEDE,WAAW,WAAAA,YAACF,GAAG,EAAE;QACf,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC3B,OAAOG,UAAU,CAACH,GAAG,CAAC;QACxB;QACA,OAAOA,GAAG;MACZ,CAAC;MAEDI,aAAa,WAAAA,cAACJ,GAAG,EAAE;QACjB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC3B,OAAOA,GAAG,KAAK,MAAM;QACvB;QACA,OAAOA,GAAG;MACZ;IACF;EACF,CAAC,CAAC;EAvDFK,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,iBAAiB,CAACd,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}