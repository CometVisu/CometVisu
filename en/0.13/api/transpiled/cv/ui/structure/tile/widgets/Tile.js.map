{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/widgets/Tile.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MPopup",
    "properties",
    "backgroundImage",
    "check",
    "nullable",
    "apply",
    "popup",
    "init",
    "members",
    "_init",
    "_initPopupChild",
    "_element",
    "hasAttribute",
    "setBackgroundImage",
    "getAttribute",
    "_childPopup",
    "addEventListener",
    "resetPopup",
    "_applyBackgroundImage",
    "value",
    "style",
    "overlay",
    "querySelector",
    "document",
    "createElement",
    "classList",
    "add",
    "insertBefore",
    "firstChild",
    "remove",
    "open",
    "_openPopupChild",
    "closeButton",
    "icon",
    "appendChild",
    "setPopup",
    "display",
    "registerModalPopup",
    "close",
    "keepState",
    "_closePopupChild",
    "unregisterModalPopup",
    "_autoCloseTimer",
    "stop",
    "_applyPopup",
    "onStateUpdate",
    "ev",
    "detail",
    "target",
    "state",
    "addressValue",
    "event",
    "Timer",
    "addListener",
    "restart",
    "debug",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "widgets",
    "Tile"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Tile.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a tile\n */\nqx.Class.define('cv.ui.structure.tile.widgets.Tile', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: cv.ui.structure.tile.MPopup,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    backgroundImage: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyBackgroundImage'\n    },\n\n    /**\n     * Turn this tile into a popup\n     */\n    popup: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyPopup'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _init() {\n      this.base(arguments);\n      this._initPopupChild();\n      if (this._element.hasAttribute('background-image')) {\n        this.setBackgroundImage(this._element.getAttribute('background-image'));\n      }\n      if (this._childPopup) {\n        this._childPopup.addEventListener('closed', () => {\n          this.resetPopup();\n        });\n      }\n    },\n\n    _applyBackgroundImage(value) {\n      if (value) {\n        this._element.style.backgroundImage = `url(${value})`;\n        let overlay = this._element.querySelector(':scope > div.overlay');\n        if (!overlay) {\n          overlay = document.createElement('div');\n          overlay.classList.add('overlay');\n          this._element.insertBefore(overlay, this._element.firstChild);\n        }\n        this._element.classList.add('has-bg-image');\n      } else {\n        this._element.style.backgroundImage = '';\n        this._element.classList.remove('has-bg-image');\n      }\n    },\n\n    open() {\n      if (this._childPopup) {\n        this._openPopupChild();\n      } else {\n        let closeButton = this._element.querySelector(':scope > button.close');\n        if (!closeButton) {\n          closeButton = document.createElement('button');\n          closeButton.classList.add('close');\n          const icon = document.createElement('i');\n          icon.classList.add('ri-close-line');\n          closeButton.appendChild(icon);\n          this._element.appendChild(closeButton);\n          closeButton.addEventListener('click', () => this.setPopup(false));\n        }\n        closeButton.style.display = 'block';\n        this._element.classList.add('popup');\n        this.registerModalPopup();\n      }\n    },\n\n    close(keepState) {\n      if (!keepState) {\n        this.setPopup(false);\n      }\n      if (this._childPopup) {\n        this._closePopupChild();\n      } else {\n        this._element.classList.remove('popup');\n        let closeButton = this._element.querySelector(':scope > button.close');\n        if (closeButton) {\n          closeButton.style.display = 'none';\n        }\n        this.unregisterModalPopup();\n      }\n      if (this._autoCloseTimer) {\n        this._autoCloseTimer.stop();\n      }\n    },\n\n    _applyPopup(value) {\n      if (value) {\n        this.open();\n      } else {\n        this.close(true);\n      }\n    },\n\n    /**\n     * Handles the incoming data from the backend for this widget\n     *\n     * @param ev {CustomEvent} stateUpdate event fired from a cv-address component\n     */\n    onStateUpdate(ev) {\n      if (!this.base(arguments, ev)) {\n        switch (ev.detail.target) {\n          case 'background-image':\n            this.setBackgroundImage(ev.detail.state);\n            break;\n\n          case 'popup':\n            if (ev.detail.addressValue) {\n              // only open when the sent value equals the fixed value\n              // noinspection EqualityComparisonWithCoercionJS\n              if (ev.detail.addressValue == ev.detail.state) {\n                this.setPopup(true);\n                // this is not closing by address, so we set a close timeout to 3 minutes\n                if (!this._autoCloseTimer) {\n                  this._autoCloseTimer = new qx.event.Timer(180 * 1000);\n                  this._autoCloseTimer.addListener('interval', this.close, this);\n                }\n                this._autoCloseTimer.restart();\n              }\n            } else {\n              // open / close depending on value\n              // noinspection EqualityComparisonWithCoercionJS\n              this.setPopup(ev.detail.state == 1);\n            }\n            break;\n\n          default:\n            this.debug('unhandled address target', ev.detail.target);\n        }\n      }\n    }\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'tile', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}