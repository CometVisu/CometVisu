{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "members",
    "_name",
    "__applyValues",
    "_init",
    "element",
    "_element",
    "type",
    "getAttribute",
    "uriString",
    "hasAttribute",
    "uri",
    "URL",
    "window",
    "location",
    "origin",
    "pathname",
    "e",
    "error",
    "credentials",
    "username",
    "password",
    "model",
    "data",
    "Model",
    "getInstance",
    "backendUrl",
    "toString",
    "backendUrlConfigKey",
    "Config",
    "server",
    "name",
    "io",
    "BackendConnections",
    "hasClient",
    "getClient",
    "configuredIn",
    "log",
    "Logger",
    "warn",
    "debug",
    "notification",
    "topic",
    "title",
    "locale",
    "Manager",
    "tr",
    "message",
    "severity",
    "unique",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "client",
    "addBackendClient",
    "_client",
    "update",
    "updateFrom",
    "login",
    "setDefaultBackendName",
    "doSubscribe",
    "address",
    "value",
    "onUpdate",
    "addressesToSubscribe",
    "getAddresses",
    "length",
    "subscribe",
    "TemplateEngine",
    "isDomFinished",
    "event",
    "Bus",
    "querySelectorAll",
    "textContent",
    "trim",
    "encoding",
    "encodedValue",
    "Transform",
    "encodeBusAndRaw",
    "transform",
    "bus",
    "push",
    "_disconnected",
    "resetDefaultBackendName",
    "terminate",
    "removeClient",
    "dispose",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Backend"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/Backend.js"
  ],
  "sourcesContent": [
    "/* Backend.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * <cv-backend> Custom element to define a backend connection\n */\nqx.Class.define('cv.ui.structure.tile.elements.Backend', {\n  extend: cv.ui.structure.tile.elements.AbstractCustomElement,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _name: null,\n    __applyValues: null,\n\n    _init() {\n      const element = this._element;\n      const type = element.getAttribute('type');\n      const uriString = element.hasAttribute('uri') ? element.getAttribute('uri') : '';\n      let uri;\n      if (uriString) {\n        try {\n          uri = new URL(uriString, window.location.origin + window.location.pathname);\n        } catch (e) {\n          this.error('Error parsing uri: ' + uriString);\n        }\n      }\n\n      if (type) {\n        let credentials = null;\n        if (element.hasAttribute('username')) {\n          credentials = {\n            username: element.getAttribute('username'),\n            password: element.getAttribute('password') || ''\n          };\n        } else if (uri && uri.username) {\n          credentials = {\n            username: uri.username,\n            password: uri.password\n          };\n        }\n        const model = cv.data.Model.getInstance();\n        let backendUrl = uri ? uri.toString() : null;\n        let backendUrlConfigKey;\n        switch (type) {\n          case 'knxd':\n            backendUrlConfigKey = 'backendKnxdUrl';\n            break;\n          case 'openhab':\n            backendUrlConfigKey = 'backendOpenHABUrl';\n            break;\n          case 'mqtt':\n            backendUrlConfigKey = 'backendMQTTUrl';\n            break;\n        }\n\n        if (backendUrlConfigKey) {\n          // override by URL settings\n          if (cv.Config.URL[backendUrlConfigKey]) {\n            backendUrl = cv.Config.URL[backendUrlConfigKey];\n          } else if (!backendUrl && cv.Config.server[backendUrlConfigKey]) {\n            backendUrl = cv.Config.server[backendUrlConfigKey];\n          }\n        }\n        let name = type;\n        if (element.hasAttribute('name')) {\n          name = element.getAttribute('name');\n        } else if (!cv.io.BackendConnections.hasClient('main')) {\n          // we need one main backend\n          name = 'main';\n        } else if (cv.io.BackendConnections.getClient('main').configuredIn === 'config') {\n          qx.log.Logger.warn(\n            this,\n            `there is already a backend registered with name \"main\" and type ${type} skipping this one`\n          );\n\n          return;\n        }\n        qx.log.Logger.debug(this, 'init backend', name);\n        if (cv.io.BackendConnections.hasClient(name)) {\n          const notification = {\n            topic: 'cv.config.error',\n            title: qx.locale.Manager.tr('Config error'),\n            message: qx.locale.Manager.tr('There already exists a backend named: \"%1\"', name),\n\n            severity: 'urgent',\n            unique: true,\n            deletable: true\n          };\n\n          cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n\n          return;\n        }\n        const client = cv.io.BackendConnections.addBackendClient(name, type, backendUrl, 'config');\n\n        this._client = client;\n        this._name = name;\n        this.__applyValues = [];\n        client.update = data => model.updateFrom(name, data); // override clients update function\n        client.login(true, credentials, () => {\n          this.debug(name, 'connected');\n          if (element.hasAttribute('default') && element.getAttribute('default') === 'true') {\n            model.setDefaultBackendName(name);\n          }\n          const doSubscribe = () => {\n            for (const [address, value] of this.__applyValues) {\n              this.debug(name, 'apply update', address, value);\n              model.onUpdate(address, value, name);\n            }\n            const addressesToSubscribe = model.getAddresses(name);\n            this.debug(name, 'subscribing to', addressesToSubscribe.length, 'addresses');\n\n            if (addressesToSubscribe.length !== 0) {\n              client.subscribe(addressesToSubscribe);\n            }\n          };\n          if (cv.TemplateEngine.getInstance().isDomFinished()) {\n            doSubscribe();\n          } else {\n            qx.event.message.Bus.subscribe(\n              'setup.dom.finished',\n              function () {\n                doSubscribe();\n              },\n              this\n            );\n          }\n        });\n\n        for (const data of element.querySelectorAll(':scope > cv-data')) {\n          if (data.hasAttribute('address')) {\n            let value = data.textContent.trim();\n            if (data.hasAttribute('transform')) {\n              const encoding = data.getAttribute('transform');\n              const encodedValue = cv.Transform.encodeBusAndRaw({ transform: encoding }, value);\n\n              value = encodedValue.bus;\n            }\n            this.__applyValues.push([data.getAttribute('address'), value]);\n          }\n        }\n      } else {\n        this.error('<cv-backend> must have a type attribute');\n      }\n    },\n\n    _disconnected() {\n      if (this._client) {\n        const model = cv.data.Model.getInstance();\n        if (this._element.hasAttribute('default') && this._element.getAttribute('default') === 'true') {\n          model.resetDefaultBackendName();\n        }\n        this._client.terminate();\n        cv.io.BackendConnections.removeClient(this._client);\n        this._client.dispose();\n        this._client = null;\n      }\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'backend',\n      class extends QxConnector {\n        constructor() {\n          super(Clazz);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}