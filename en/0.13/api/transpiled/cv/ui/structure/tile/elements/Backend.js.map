{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "members",
    "_name",
    "__applyValues",
    "_init",
    "element",
    "_element",
    "type",
    "getAttribute",
    "startsWith",
    "className",
    "split",
    "pop",
    "io",
    "BackendConnections",
    "isRegistered",
    "addClassLoadedListener",
    "uriString",
    "hasAttribute",
    "uri",
    "URL",
    "window",
    "location",
    "origin",
    "pathname",
    "e",
    "error",
    "credentials",
    "username",
    "password",
    "model",
    "data",
    "Model",
    "getInstance",
    "backendUrl",
    "toString",
    "backendUrlConfigKey",
    "Config",
    "server",
    "name",
    "hasClient",
    "getClient",
    "configuredIn",
    "log",
    "Logger",
    "warn",
    "debug",
    "notification",
    "topic",
    "title",
    "locale",
    "Manager",
    "tr",
    "message",
    "severity",
    "unique",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "client",
    "addBackendClient",
    "_client",
    "update",
    "updateFrom",
    "querySelectorAll",
    "setResourcePath",
    "textContent",
    "trim",
    "login",
    "setDefaultBackendName",
    "doSubscribe",
    "address",
    "value",
    "onUpdate",
    "addressesToSubscribe",
    "getAddresses",
    "length",
    "subscribe",
    "TemplateEngine",
    "isDomFinished",
    "event",
    "Bus",
    "_disconnected",
    "resetDefaultBackendName",
    "terminate",
    "removeClient",
    "dispose",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Backend"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/Backend.js"
  ],
  "sourcesContent": [
    "/* Backend.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * <cv-backend> Custom element to define a backend connection\n */\nqx.Class.define('cv.ui.structure.tile.elements.Backend', {\n  extend: cv.ui.structure.tile.elements.AbstractCustomElement,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _name: null,\n    __applyValues: null,\n\n    _init() {\n      const element = this._element;\n      let type = element.getAttribute('type');\n      if (type && type.startsWith('class:')) {\n        const className = type.split(':').pop();\n        if (!cv.io.BackendConnections.isRegistered(className)) {\n          // wait until client class has been loaded\n          cv.io.BackendConnections.addClassLoadedListener(className, () => {\n            this._init();\n          });\n          return;\n        }\n        type = className;\n      }\n      const uriString = element.hasAttribute('uri') ? element.getAttribute('uri') : '';\n      let uri;\n      if (uriString) {\n        try {\n          uri = new URL(uriString, window.location.origin + window.location.pathname);\n        } catch (e) {\n          this.error('Error parsing uri: ' + uriString);\n        }\n      }\n\n      if (type) {\n        let credentials = null;\n        if (element.hasAttribute('username')) {\n          credentials = {\n            username: element.getAttribute('username'),\n            password: element.getAttribute('password') || ''\n          };\n        } else if (uri && uri.username) {\n          credentials = {\n            username: uri.username,\n            password: uri.password\n          };\n        }\n        const model = cv.data.Model.getInstance();\n        let backendUrl = uri ? uri.toString() : null;\n        let backendUrlConfigKey;\n        switch (type) {\n          case 'knxd':\n            backendUrlConfigKey = 'backendKnxdUrl';\n            break;\n          case 'openhab':\n            backendUrlConfigKey = 'backendOpenHABUrl';\n            break;\n          case 'mqtt':\n            backendUrlConfigKey = 'backendMQTTUrl';\n            break;\n        }\n\n        if (backendUrlConfigKey) {\n          // override by URL settings\n          if (cv.Config.URL[backendUrlConfigKey]) {\n            backendUrl = cv.Config.URL[backendUrlConfigKey];\n          } else if (!backendUrl && cv.Config.server[backendUrlConfigKey]) {\n            backendUrl = cv.Config.server[backendUrlConfigKey];\n          }\n        }\n        let name = type;\n        if (element.hasAttribute('name')) {\n          name = element.getAttribute('name');\n        } else if (!cv.io.BackendConnections.hasClient('main')) {\n          // we need one main backend\n          name = 'main';\n        } else if (cv.io.BackendConnections.getClient('main').configuredIn === 'config') {\n          qx.log.Logger.warn(\n            this,\n            `there is already a backend registered with name \"main\" and type ${type} skipping this one`\n          );\n\n          return;\n        }\n        qx.log.Logger.debug(this, 'init backend', name);\n        if (cv.io.BackendConnections.hasClient(name)) {\n          const notification = {\n            topic: 'cv.config.error',\n            title: qx.locale.Manager.tr('Config error'),\n            message: qx.locale.Manager.tr('There already exists a backend named: \"%1\"', name),\n\n            severity: 'urgent',\n            unique: true,\n            deletable: true\n          };\n\n          cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n\n          return;\n        }\n        const client = cv.io.BackendConnections.addBackendClient(name, type, backendUrl, 'config');\n\n        this._client = client;\n        this._name = name;\n        this.__applyValues = [];\n        client.update = data => model.updateFrom(name, data); // override clients update function\n\n        for (const data of element.querySelectorAll(':scope > cv-resource')) {\n          client.setResourcePath(data.getAttribute('name'), data.textContent.trim());\n        }\n\n        client.login(true, credentials, () => {\n          this.debug(name, 'connected');\n          if (element.hasAttribute('default') && element.getAttribute('default') === 'true') {\n            model.setDefaultBackendName(name);\n          }\n          const doSubscribe = () => {\n            for (const [address, value] of this.__applyValues) {\n              this.debug(name, 'apply update', address, value);\n              model.onUpdate(address, value, name);\n            }\n            const addressesToSubscribe = model.getAddresses(name);\n            this.debug(name, 'subscribing to', addressesToSubscribe.length, 'addresses');\n\n            if (addressesToSubscribe.length !== 0) {\n              client.subscribe(addressesToSubscribe);\n            }\n          };\n          if (cv.TemplateEngine.getInstance().isDomFinished()) {\n            doSubscribe();\n          } else {\n            qx.event.message.Bus.subscribe(\n              'setup.dom.finished',\n              function () {\n                doSubscribe();\n              },\n              this\n            );\n          }\n        });\n      } else {\n        this.error('<cv-backend> must have a type attribute');\n      }\n    },\n\n    _disconnected() {\n      if (this._client) {\n        const model = cv.data.Model.getInstance();\n        if (this._element.hasAttribute('default') && this._element.getAttribute('default') === 'true') {\n          model.resetDefaultBackendName();\n        }\n        this._client.terminate();\n        cv.io.BackendConnections.removeClient(this._client);\n        this._client.dispose();\n        this._client = null;\n      }\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'backend',\n      class extends QxConnector {\n        constructor() {\n          super(Clazz);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}