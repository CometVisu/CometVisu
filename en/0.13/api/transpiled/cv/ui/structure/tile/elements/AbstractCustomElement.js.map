{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/AbstractCustomElement.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "element",
    "_element",
    "properties",
    "connected",
    "check",
    "init",
    "apply",
    "event",
    "members",
    "_initialized",
    "_applyConnected",
    "value",
    "_init",
    "_disconnected",
    "getElement",
    "destruct",
    "QxConnector",
    "QxClass",
    "isSubClassOf",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "_instance",
    "Error",
    "hasAttribute",
    "classList",
    "add",
    "getAttribute",
    "setConnected",
    "name",
    "oldValue",
    "newValue",
    "hasProperty",
    "constructor",
    "set",
    "HTMLElement",
    "window"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qDAAhB,EAAuE;AACrEC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADqD;AAErEC,IAAAA,IAAI,EAAE,UAF+D;;AAIrE;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAAUC,OAAV,EAAmB;AAC5B,WAAKC,QAAL,GAAgBD,OAAhB;AACD,KAXoE;;AAarE;AACF;AACA;AACA;AACA;AACEE,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,SADE;AAETC,QAAAA,IAAI,EAAE,KAFG;AAGTC,QAAAA,KAAK,EAAE,iBAHE;AAITC,QAAAA,KAAK,EAAE;AAJE;AADD,KAlByD;;AA2BrE;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACIP,MAAAA,QAAQ,EAAE,IAJH;AAMPQ,MAAAA,YAAY,EAAE,KANP;AAQPC,MAAAA,eARO,2BAQSC,KART,EAQgB;AACrB,YAAIA,KAAK,IAAI,CAAC,KAAKF,YAAnB,EAAiC;AAC/B,eAAKG,KAAL;;AACA,eAAKH,YAAL,GAAoB,IAApB;AACD,SAHD,MAGO;AACL,eAAKI,aAAL;;AACA,eAAKJ,YAAL,GAAoB,KAApB;AACD;AACF,OAhBM;AAiBPG,MAAAA,KAjBO,mBAiBC,CAAE,CAjBH;AAmBPC,MAAAA,aAnBO,2BAmBS,CAAE,CAnBX;AAqBPC,MAAAA,UArBO,wBAqBM;AACX,eAAO,KAAKb,QAAZ;AACD;AAvBM,KAhC4D;;AA0DrE;AACF;AACA;AACA;AACA;AACEc,IAAAA,QAAQ,EAAE,oBAAY;AACpB,WAAKd,QAAL,GAAgB,IAAhB;AACD;AAjEoE,GAAvE,E,CAoEA;;MACMe,W;;;;;;;AACJ,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;;AACA,UAAI5B,EAAE,CAACI,KAAH,CAASyB,YAAT,CAAsBD,OAAtB,EAA+BE,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8BC,qBAA7D,CAAJ,EAAyF;AACvF,cAAKC,SAAL,GAAiB,IAAIR,OAAJ,+BAAjB;AACD,OAFD,MAEO;AACL,cAAMS,KAAK,CAACT,OAAO,GAAG,4EAAX,CAAX;AACD;;AACD,UAAI,MAAKU,YAAL,CAAkB,SAAlB,CAAJ,EAAkC;AAChC,cAAKC,SAAL,CAAeC,GAAf,CAAmB,aAAa,MAAKC,YAAL,CAAkB,SAAlB,CAAhC;AACD;;AACD,UAAI,MAAKH,YAAL,CAAkB,SAAlB,CAAJ,EAAkC;AAChC,cAAKC,SAAL,CAAeC,GAAf,CAAmB,aAAa,MAAKC,YAAL,CAAkB,SAAlB,CAAhC;AACD;;AAZkB;AAapB;;;;oCAEa;AACZ,eAAO,KAAKL,SAAZ;AACD;;;0CAEmB;AAClB,YAAI,KAAKA,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAeM,YAAf,CAA4B,IAA5B;AACD;AACF;;;6CAEsB;AACrB,YAAI,KAAKN,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAeM,YAAf,CAA4B,KAA5B;AACD;AACF;;;+CAEwBC,I,EAAMC,Q,EAAUC,Q,EAAU;AACjD,YAAI,KAAKT,SAAL,IAAkBpC,EAAE,CAACI,KAAH,CAAS0C,WAAT,CAAqB,KAAKV,SAAL,CAAeW,WAApC,EAAiDJ,IAAjD,CAAtB,EAA8E;AAC5E,eAAKP,SAAL,CAAeY,GAAf,CAAmBL,IAAnB,EAAyBE,QAAzB;AACD;AACF;;;;mCApCuBI,W;;AAuC1BC,EAAAA,MAAM,CAACvB,WAAP,GAAqBA,WAArB;AAlIAG,EAAAA,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8BC,qBAA9B,CAAoDhC,aAApD,GAAoEA,aAApE",
  "sourcesContent": [
    "/* AbstractCustomElement.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.ui.structure.tile.elements.AbstractCustomElement', {\n  extend: qx.core.Object,\n  type: 'abstract',\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (element) {\n    this._element = element;\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    connected: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyConnected',\n      event: 'changeConnected'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * @var {HTMLElement}\n     */\n    _element: null,\n\n    _initialized: false,\n\n    _applyConnected(value) {\n      if (value && !this._initialized) {\n        this._init();\n        this._initialized = true;\n      } else {\n        this._disconnected();\n        this._initialized = false;\n      }\n    },\n    _init() {},\n\n    _disconnected() {},\n\n    getElement() {\n      return this._element;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._element = null;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nclass QxConnector extends HTMLElement {\n  constructor(QxClass) {\n    super();\n    if (qx.Class.isSubClassOf(QxClass, cv.ui.structure.tile.elements.AbstractCustomElement)) {\n      this._instance = new QxClass(this);\n    } else {\n      throw Error(QxClass + ' must be a subclass of cv.ui.structure.tile.elements.AbstractCustomElement');\n    }\n    if (this.hasAttribute('colspan')) {\n      this.classList.add('colspan-' + this.getAttribute('colspan'));\n    }\n    if (this.hasAttribute('rowspan')) {\n      this.classList.add('rowspan-' + this.getAttribute('rowspan'));\n    }\n  }\n\n  getInstance() {\n    return this._instance;\n  }\n\n  connectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(true);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(false);\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (this._instance && qx.Class.hasProperty(this._instance.constructor, name)) {\n      this._instance.set(name, newValue);\n    }\n  }\n}\n\nwindow.QxConnector = QxConnector;\n"
  ]
}