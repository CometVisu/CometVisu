{
  "className": "cv.ui.structure.tile.components.Flow",
  "packageName": "cv.ui.structure.tile.components",
  "name": "Flow",
  "superClass": "cv.ui.structure.tile.components.AbstractComponent",
  "interfaces": [],
  "mixins": [
    "cv.ui.structure.tile.components.svg.MSvgGrid",
    "cv.ui.structure.tile.MResize",
    "cv.ui.structure.tile.MStringTransforms",
    "cv.ui.structure.tile.MFullscreen"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0,
        "index": 923
      },
      "end": {
        "line": 563,
        "column": 3,
        "index": 17987
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Flow management widget.</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 2023</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2023"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "d3.select"
        },
        {
          "name": "@ignore",
          "body": "screen"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "pan": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1371
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1485
        }
      },
      "name": "pan",
      "propertyType": "new",
      "apply": "_applyPan",
      "init": false,
      "transform": "_stringToBool",
      "check": "Boolean",
      "defaultValue": false
    },
    "pagination": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1492
        },
        "end": {
          "line": 55,
          "column": 5,
          "index": 1620
        }
      },
      "name": "pagination",
      "propertyType": "new",
      "apply": "_applyPagination",
      "init": "none",
      "possibleValues": [
        "none",
        "horizontal",
        "vertical",
        "both"
      ],
      "defaultValue": "none"
    },
    "centerX": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1627
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1749
        }
      },
      "name": "centerX",
      "propertyType": "new",
      "apply": "_applyCenterX",
      "init": false,
      "transform": "_parseBoolean",
      "check": "Boolean",
      "defaultValue": false
    },
    "centerY": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1756
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 1878
        }
      },
      "name": "centerY",
      "propertyType": "new",
      "apply": "_applyCenterY",
      "init": false,
      "transform": "_parseBoolean",
      "check": "Boolean",
      "defaultValue": false
    },
    "fullscreenViewBox": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1885
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 1995
        }
      },
      "name": "fullscreenViewBox",
      "propertyType": "new",
      "event": "changeFullscreenViewBox",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "rows": {
      "type": "property",
      "name": "rows",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeRows"
    },
    "columns": {
      "type": "property",
      "name": "columns",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeColumns"
    },
    "outerPadding": {
      "type": "property",
      "name": "outerPadding",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeOuterPadding"
    },
    "spacing": {
      "type": "property",
      "name": "spacing",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeSpacing"
    },
    "cellWidth": {
      "type": "property",
      "name": "cellWidth",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeSize"
    },
    "cellHeight": {
      "type": "property",
      "name": "cellHeight",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeSize"
    },
    "viewBox": {
      "type": "property",
      "name": "viewBox",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "event": "changeViewBox"
    },
    "resizeTarget": {
      "type": "property",
      "name": "resizeTarget",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MResize"
    },
    "fullscreen": {
      "type": "property",
      "name": "fullscreen",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen",
      "event": "changeFullscreen"
    }
  },
  "members": {
    "SVG": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 2141
        },
        "end": {
          "line": 84,
          "column": 13,
          "index": 2150
        }
      },
      "type": "variable",
      "access": "public"
    },
    "_dragPoint": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2156
        },
        "end": {
          "line": 85,
          "column": 20,
          "index": 2172
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_startPoint": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2178
        },
        "end": {
          "line": 86,
          "column": 21,
          "index": 2195
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_expiredTouchStart": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2201
        },
        "end": {
          "line": 87,
          "column": 28,
          "index": 2225
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_viewBoxBinding": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2231
        },
        "end": {
          "line": 88,
          "column": 25,
          "index": 2252
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getSvg": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2259
        },
        "end": {
          "line": 96,
          "column": 5,
          "index": 2456
        }
      },
      "type": "function",
      "access": "public"
    },
    "_init": {
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2463
        },
        "end": {
          "line": 155,
          "column": 5,
          "index": 4559
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "appearsIn": [
        "cv.ui.structure.tile.components.AbstractComponent",
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "_applyCenterX": {
      "location": {
        "start": {
          "line": 157,
          "column": 4,
          "index": 4566
        },
        "end": {
          "line": 161,
          "column": 5,
          "index": 4672
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "centerX"
      ]
    },
    "_applyCenterY": {
      "location": {
        "start": {
          "line": 163,
          "column": 4,
          "index": 4679
        },
        "end": {
          "line": 167,
          "column": 5,
          "index": 4791
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "centerY"
      ]
    },
    "__applyCenter": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4798
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 5439
        }
      },
      "type": "function",
      "access": "private"
    },
    "__adjustRow": {
      "location": {
        "start": {
          "line": 191,
          "column": 4,
          "index": 5446
        },
        "end": {
          "line": 200,
          "column": 5,
          "index": 5875
        }
      },
      "type": "function",
      "access": "private"
    },
    "__adjustColumn": {
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 5882
        },
        "end": {
          "line": 211,
          "column": 5,
          "index": 6314
        }
      },
      "type": "function",
      "access": "private"
    },
    "_drag": {
      "location": {
        "start": {
          "line": 213,
          "column": 4,
          "index": 6321
        },
        "end": {
          "line": 222,
          "column": 5,
          "index": 6745
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_cancelEvent": {
      "location": {
        "start": {
          "line": 224,
          "column": 4,
          "index": 6752
        },
        "end": {
          "line": 227,
          "column": 5,
          "index": 6840
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_startDrag": {
      "location": {
        "start": {
          "line": 229,
          "column": 4,
          "index": 6847
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 7292
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_endDrag": {
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 7299
        },
        "end": {
          "line": 245,
          "column": 5,
          "index": 7459
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_touchStart": {
      "location": {
        "start": {
          "line": 247,
          "column": 4,
          "index": 7466
        },
        "end": {
          "line": 263,
          "column": 5,
          "index": 8101
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_applyPan": {
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 8108
        },
        "end": {
          "line": 298,
          "column": 5,
          "index": 9646
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "pan"
      ]
    },
    "_applyPagination": {
      "location": {
        "start": {
          "line": 300,
          "column": 4,
          "index": 9653
        },
        "end": {
          "line": 336,
          "column": 5,
          "index": 10759
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "pagination"
      ]
    },
    "_enablePaginationButton": {
      "location": {
        "start": {
          "line": 338,
          "column": 4,
          "index": 10766
        },
        "end": {
          "line": 366,
          "column": 5,
          "index": 11541
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_updatePaginationButtons": {
      "location": {
        "start": {
          "line": 368,
          "column": 4,
          "index": 11548
        },
        "end": {
          "line": 393,
          "column": 5,
          "index": 12406
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_paginateLeft": {
      "location": {
        "start": {
          "line": 395,
          "column": 4,
          "index": 12413
        },
        "end": {
          "line": 397,
          "column": 5,
          "index": 12466
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_paginateRight": {
      "location": {
        "start": {
          "line": 399,
          "column": 4,
          "index": 12473
        },
        "end": {
          "line": 401,
          "column": 5,
          "index": 12528
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_paginateTop": {
      "location": {
        "start": {
          "line": 403,
          "column": 4,
          "index": 12535
        },
        "end": {
          "line": 405,
          "column": 5,
          "index": 12586
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_paginateBottom": {
      "location": {
        "start": {
          "line": 407,
          "column": 4,
          "index": 12593
        },
        "end": {
          "line": 409,
          "column": 5,
          "index": 12650
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_paginate": {
      "location": {
        "start": {
          "line": 411,
          "column": 4,
          "index": 12657
        },
        "end": {
          "line": 438,
          "column": 5,
          "index": 13367
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_updateDimensions": {
      "location": {
        "start": {
          "line": 440,
          "column": 4,
          "index": 13374
        },
        "end": {
          "line": 479,
          "column": 5,
          "index": 14729
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_updateViewBox": {
      "location": {
        "start": {
          "line": 481,
          "column": 4,
          "index": 14736
        },
        "end": {
          "line": 514,
          "column": 5,
          "index": 16321
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_updateCellSize": {
      "location": {
        "start": {
          "line": 516,
          "column": 4,
          "index": 16328
        },
        "end": {
          "line": 539,
          "column": 5,
          "index": 17335
        }
      },
      "type": "function",
      "access": "protected"
    },
    "_stringToBool": {
      "location": {
        "start": {
          "line": 541,
          "column": 4,
          "index": 17342
        },
        "end": {
          "line": 548,
          "column": 5,
          "index": 17550
        }
      },
      "type": "function",
      "access": "protected"
    },
    "__toInt": {
      "type": "function",
      "name": "__toInt",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid"
    },
    "_invalidateLayout": {
      "type": "function",
      "name": "_invalidateLayout",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid"
    },
    "_layoutAll": {
      "type": "function",
      "name": "_layoutAll",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid"
    },
    "getCells": {
      "type": "function",
      "name": "getCells",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the number of cells in this grid</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{number}",
            "type": "number",
            "description": ""
          }
        ]
      }
    },
    "layout": {
      "type": "function",
      "name": "layout",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add a SVGElement to a cell in the grid.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "element {SVGGraphicsElement} element to place",
            "paramName": "element",
            "description": " element to place",
            "type": "SVGGraphicsElement"
          },
          {
            "name": "@param",
            "body": "row {number} row number (-1 to find next free row)",
            "paramName": "row",
            "description": " row number (-1 to find next free row)",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "column {number} column cumber (-1 to use next free cell)",
            "paramName": "column",
            "description": " column cumber (-1 to use next free cell)",
            "type": "number"
          },
          {
            "name": "@param",
            "body": "replace {boolean} it true replace current item in cell, otherwise the element will not be added when the cell is not empty",
            "paramName": "replace",
            "description": " it true replace current item in cell, otherwise the element will not be added when the cell is not empty",
            "type": "boolean"
          },
          {
            "name": "@param",
            "body": "retries {number} internal value used to limit layout retries for one element. Do not set this externally!",
            "paramName": "retries",
            "description": " internal value used to limit layout retries for one element. Do not set this externally!",
            "type": "number"
          }
        ]
      }
    },
    "getNextFreeCell": {
      "type": "function",
      "name": "getNextFreeCell",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.svg.MSvgGrid"
    },
    "getRows": {
      "type": "function",
      "name": "getRows",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>rows</code>.\n\nFor further details take a look at the property definition: {@link #rows}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for rows"
          }
        ]
      }
    },
    "setRows": {
      "type": "function",
      "name": "setRows",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>rows</code>.\n\nFor further details take a look at the property definition: {@link #rows}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for rows"
          }
        ]
      }
    },
    "resetRows": {
      "type": "function",
      "name": "resetRows",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>rows</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #rows}."
          }
        ]
      }
    },
    "getColumns": {
      "type": "function",
      "name": "getColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>columns</code>.\n\nFor further details take a look at the property definition: {@link #columns}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for columns"
          }
        ]
      }
    },
    "setColumns": {
      "type": "function",
      "name": "setColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>columns</code>.\n\nFor further details take a look at the property definition: {@link #columns}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for columns"
          }
        ]
      }
    },
    "resetColumns": {
      "type": "function",
      "name": "resetColumns",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>columns</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #columns}."
          }
        ]
      }
    },
    "getOuterPadding": {
      "type": "function",
      "name": "getOuterPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outerPadding</code>.\n\nFor further details take a look at the property definition: {@link #outerPadding}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for outerPadding"
          }
        ]
      }
    },
    "setOuterPadding": {
      "type": "function",
      "name": "setOuterPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outerPadding</code>.\n\nFor further details take a look at the property definition: {@link #outerPadding}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for outerPadding"
          }
        ]
      }
    },
    "resetOuterPadding": {
      "type": "function",
      "name": "resetOuterPadding",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outerPadding</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outerPadding}."
          }
        ]
      }
    },
    "getSpacing": {
      "type": "function",
      "name": "getSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>spacing</code>.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for spacing"
          }
        ]
      }
    },
    "setSpacing": {
      "type": "function",
      "name": "setSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>spacing</code>.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for spacing"
          }
        ]
      }
    },
    "resetSpacing": {
      "type": "function",
      "name": "resetSpacing",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>spacing</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #spacing}."
          }
        ]
      }
    },
    "getCellWidth": {
      "type": "function",
      "name": "getCellWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cellWidth</code>.\n\nFor further details take a look at the property definition: {@link #cellWidth}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for cellWidth"
          }
        ]
      }
    },
    "setCellWidth": {
      "type": "function",
      "name": "setCellWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cellWidth</code>.\n\nFor further details take a look at the property definition: {@link #cellWidth}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for cellWidth"
          }
        ]
      }
    },
    "resetCellWidth": {
      "type": "function",
      "name": "resetCellWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>cellWidth</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #cellWidth}."
          }
        ]
      }
    },
    "getCellHeight": {
      "type": "function",
      "name": "getCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cellHeight</code>.\n\nFor further details take a look at the property definition: {@link #cellHeight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for cellHeight"
          }
        ]
      }
    },
    "setCellHeight": {
      "type": "function",
      "name": "setCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cellHeight</code>.\n\nFor further details take a look at the property definition: {@link #cellHeight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for cellHeight"
          }
        ]
      }
    },
    "resetCellHeight": {
      "type": "function",
      "name": "resetCellHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>cellHeight</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #cellHeight}."
          }
        ]
      }
    },
    "getViewBox": {
      "type": "function",
      "name": "getViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>viewBox</code>.\n\nFor further details take a look at the property definition: {@link #viewBox}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for viewBox"
          }
        ]
      }
    },
    "setViewBox": {
      "type": "function",
      "name": "setViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>viewBox</code>.\n\nFor further details take a look at the property definition: {@link #viewBox}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for viewBox"
          }
        ]
      }
    },
    "resetViewBox": {
      "type": "function",
      "name": "resetViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>viewBox</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #viewBox}."
          }
        ]
      }
    },
    "_applyResizeTarget": {
      "type": "function",
      "name": "_applyResizeTarget",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MResize"
    },
    "getResizeTarget": {
      "type": "function",
      "name": "getResizeTarget",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MResize",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resizeTarget</code>.\n\nFor further details take a look at the property definition: {@link #resizeTarget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Element",
            "desc": "Returns the value for resizeTarget"
          }
        ]
      }
    },
    "setResizeTarget": {
      "type": "function",
      "name": "setResizeTarget",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MResize",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resizeTarget</code>.\n\nFor further details take a look at the property definition: {@link #resizeTarget}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Element",
            "paramName": "value",
            "desc": "Value for resizeTarget"
          }
        ]
      }
    },
    "resetResizeTarget": {
      "type": "function",
      "name": "resetResizeTarget",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MResize",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resizeTarget</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resizeTarget}."
          }
        ]
      }
    },
    "_parseInt": {
      "type": "function",
      "name": "_parseInt",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "_parseFloat": {
      "type": "function",
      "name": "_parseFloat",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "_parseBoolean": {
      "type": "function",
      "name": "_parseBoolean",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MStringTransforms"
    },
    "getUuid": {
      "type": "function",
      "name": "getUuid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen"
    },
    "getPopupAddress": {
      "type": "function",
      "name": "getPopupAddress",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen"
    },
    "__applyFullscreen": {
      "type": "function",
      "name": "__applyFullscreen",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen"
    },
    "_initFullscreenSwitch": {
      "type": "function",
      "name": "_initFullscreenSwitch",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen"
    },
    "_buttonFactory": {
      "type": "function",
      "name": "_buttonFactory",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen"
    },
    "getFullscreen": {
      "type": "function",
      "name": "getFullscreen",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fullscreen</code>.\n\nFor further details take a look at the property definition: {@link #fullscreen}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fullscreen"
          }
        ]
      }
    },
    "isFullscreen": {
      "type": "function",
      "name": "isFullscreen",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fullscreen</code>.\n\nFor further details take a look at the property definition: {@link #fullscreen}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for fullscreen"
          }
        ]
      }
    },
    "setFullscreen": {
      "type": "function",
      "name": "setFullscreen",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>fullscreen</code>.\n\nFor further details take a look at the property definition: {@link #fullscreen}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for fullscreen"
          }
        ]
      }
    },
    "resetFullscreen": {
      "type": "function",
      "name": "resetFullscreen",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MFullscreen",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>fullscreen</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #fullscreen}."
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for value"
          }
        ]
      }
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>value</code>.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for value"
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>value</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #value}."
          }
        ]
      }
    },
    "getStyleClass": {
      "type": "function",
      "name": "getStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>styleClass</code>.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for styleClass"
          }
        ]
      }
    },
    "setStyleClass": {
      "type": "function",
      "name": "setStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>styleClass</code>.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for styleClass"
          }
        ]
      }
    },
    "resetStyleClass": {
      "type": "function",
      "name": "resetStyleClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>styleClass</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #styleClass}."
          }
        ]
      }
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for enabled"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>enabled</code>.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for enabled"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>enabled</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #enabled}."
          }
        ]
      }
    },
    "getVisibility": {
      "type": "function",
      "name": "getVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for visibility"
          }
        ]
      }
    },
    "setVisibility": {
      "type": "function",
      "name": "setVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visibility</code>.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for visibility"
          }
        ]
      }
    },
    "resetVisibility": {
      "type": "function",
      "name": "resetVisibility",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visibility</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visibility}."
          }
        ]
      }
    },
    "getWidget": {
      "type": "function",
      "name": "getWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for widget"
          }
        ]
      }
    },
    "isWidget": {
      "type": "function",
      "name": "isWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for widget"
          }
        ]
      }
    },
    "setWidget": {
      "type": "function",
      "name": "setWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>widget</code>.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for widget"
          }
        ]
      }
    },
    "resetWidget": {
      "type": "function",
      "name": "resetWidget",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>widget</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #widget}."
          }
        ]
      }
    },
    "getInPopup": {
      "type": "function",
      "name": "getInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inPopup"
          }
        ]
      }
    },
    "isInPopup": {
      "type": "function",
      "name": "isInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inPopup"
          }
        ]
      }
    },
    "setInPopup": {
      "type": "function",
      "name": "setInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>inPopup</code>.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for inPopup"
          }
        ]
      }
    },
    "resetInPopup": {
      "type": "function",
      "name": "resetInPopup",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.components.AbstractComponent",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>inPopup</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #inPopup}."
          }
        ]
      }
    },
    "getPan": {
      "type": "function",
      "name": "getPan",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pan</code>.\n\nFor further details take a look at the property definition: {@link #pan}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for pan"
          }
        ]
      }
    },
    "isPan": {
      "type": "function",
      "name": "isPan",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pan</code>.\n\nFor further details take a look at the property definition: {@link #pan}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for pan"
          }
        ]
      }
    },
    "setPan": {
      "type": "function",
      "name": "setPan",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>pan</code>.\n\nFor further details take a look at the property definition: {@link #pan}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for pan"
          }
        ]
      }
    },
    "resetPan": {
      "type": "function",
      "name": "resetPan",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>pan</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #pan}."
          }
        ]
      }
    },
    "getPagination": {
      "type": "function",
      "name": "getPagination",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>pagination</code>.\n\nFor further details take a look at the property definition: {@link #pagination}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for pagination"
          }
        ]
      }
    },
    "setPagination": {
      "type": "function",
      "name": "setPagination",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>pagination</code>.\n\nFor further details take a look at the property definition: {@link #pagination}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for pagination"
          }
        ]
      }
    },
    "resetPagination": {
      "type": "function",
      "name": "resetPagination",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>pagination</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #pagination}."
          }
        ]
      }
    },
    "getCenterX": {
      "type": "function",
      "name": "getCenterX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>centerX</code>.\n\nFor further details take a look at the property definition: {@link #centerX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for centerX"
          }
        ]
      }
    },
    "isCenterX": {
      "type": "function",
      "name": "isCenterX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>centerX</code>.\n\nFor further details take a look at the property definition: {@link #centerX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for centerX"
          }
        ]
      }
    },
    "setCenterX": {
      "type": "function",
      "name": "setCenterX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>centerX</code>.\n\nFor further details take a look at the property definition: {@link #centerX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for centerX"
          }
        ]
      }
    },
    "resetCenterX": {
      "type": "function",
      "name": "resetCenterX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>centerX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #centerX}."
          }
        ]
      }
    },
    "getCenterY": {
      "type": "function",
      "name": "getCenterY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>centerY</code>.\n\nFor further details take a look at the property definition: {@link #centerY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for centerY"
          }
        ]
      }
    },
    "isCenterY": {
      "type": "function",
      "name": "isCenterY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>centerY</code>.\n\nFor further details take a look at the property definition: {@link #centerY}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for centerY"
          }
        ]
      }
    },
    "setCenterY": {
      "type": "function",
      "name": "setCenterY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>centerY</code>.\n\nFor further details take a look at the property definition: {@link #centerY}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for centerY"
          }
        ]
      }
    },
    "resetCenterY": {
      "type": "function",
      "name": "resetCenterY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>centerY</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #centerY}."
          }
        ]
      }
    },
    "getFullscreenViewBox": {
      "type": "function",
      "name": "getFullscreenViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>fullscreenViewBox</code>.\n\nFor further details take a look at the property definition: {@link #fullscreenViewBox}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for fullscreenViewBox"
          }
        ]
      }
    },
    "setFullscreenViewBox": {
      "type": "function",
      "name": "setFullscreenViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>fullscreenViewBox</code>.\n\nFor further details take a look at the property definition: {@link #fullscreenViewBox}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for fullscreenViewBox"
          }
        ]
      }
    },
    "resetFullscreenViewBox": {
      "type": "function",
      "name": "resetFullscreenViewBox",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>fullscreenViewBox</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #fullscreenViewBox}."
          }
        ]
      }
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 551,
        "column": 2,
        "index": 17559
      },
      "end": {
        "line": 562,
        "column": 3,
        "index": 17983
      }
    }
  },
  "events": {
    "resized": {
      "type": "event",
      "name": "resized",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.MResize"
    }
  },
  "descendants": []
}