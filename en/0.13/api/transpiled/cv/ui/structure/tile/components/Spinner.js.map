{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Spinner.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "properties",
    "stepWidth",
    "check",
    "init",
    "mode",
    "members",
    "_init",
    "element",
    "_element",
    "hasAttribute",
    "setStepWidth",
    "parseFloat",
    "getAttribute",
    "setMode",
    "valueElement",
    "querySelector",
    "document",
    "createElement",
    "classList",
    "add",
    "appendChild",
    "decrease",
    "decreaseIcon",
    "addEventListener",
    "onDecrease",
    "insertBefore",
    "increase",
    "increaseIcon",
    "onIncrease",
    "value",
    "getMode",
    "getValue",
    "getStepWidth",
    "__sendValue",
    "_updateValue",
    "mappedValue",
    "target",
    "innerHTML",
    "on",
    "ev",
    "CustomEvent",
    "detail",
    "source",
    "_writeAddresses",
    "filter",
    "addr",
    "forEach",
    "address",
    "dispatchEvent",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Spinner"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Spinner.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a number value that can be increased and decreased by a defined step width.\n */\nqx.Class.define('cv.ui.structure.tile.components.Spinner', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    stepWidth: {\n      check: 'Number',\n      init: 1.0\n    },\n    mode: {\n      check: ['relative', 'absolute'],\n      init: 'absolute'\n    }\n  },\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n\n    _init() {\n      this.base(arguments);\n      const element = this._element;\n      if (element.hasAttribute('step-width')) {\n        this.setStepWidth(parseFloat(element.getAttribute('step-width')));\n      }\n      if (element.hasAttribute('mode')) {\n        this.setMode(element.getAttribute('mode'));\n      }\n      // init components\n      let valueElement = element.querySelector(':scope > .value');\n      if (!valueElement) {\n        valueElement = document.createElement('label');\n        valueElement.classList.add('value');\n        valueElement.classList.add('primary');\n        element.appendChild(valueElement);\n      }\n      // add increase / decrease buttons\n      const decrease = document.createElement('div');\n      decrease.classList.add('clickable');\n      decrease.classList.add('left');\n      const decreaseIcon = document.createElement('cv-icon');\n      decreaseIcon.classList.add('ri-arrow-down-s-line');\n      decrease.addEventListener('click', () => this.onDecrease());\n      decrease.appendChild(decreaseIcon);\n      element.insertBefore(decrease, valueElement);\n\n      const increase = document.createElement('div');\n      increase.classList.add('clickable');\n      increase.classList.add('right');\n      const increaseIcon = document.createElement('cv-icon');\n      increaseIcon.classList.add('ri-arrow-up-s-line');\n      increase.appendChild(increaseIcon);\n      increase.addEventListener('click', () => this.onIncrease());\n      element.appendChild(increase);\n    },\n\n    onDecrease() {\n      const value = this.getMode() === 'absolute' ? this.getValue() - this.getStepWidth() : this.getStepWidth() * -1;\n      this.__sendValue(value, 'decrease');\n    },\n\n    onIncrease() {\n      const value = this.getMode() === 'absolute' ? this.getValue() + this.getStepWidth() : this.getStepWidth();\n      this.__sendValue(value, 'increase');\n    },\n\n    _updateValue(mappedValue) {\n      const target = this._element.querySelector('.value');\n      if (target) {\n        target.innerHTML = mappedValue;\n      }\n    },\n\n    __sendValue(value, on) {\n      const ev = new CustomEvent('sendState', {\n        detail: {\n          value: value,\n          source: this\n        }\n      });\n      this._writeAddresses.filter(addr => !addr.hasAttribute('on') || addr.getAttribute('on') === on).forEach(address => address.dispatchEvent(ev));\n    }\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'spinner', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}