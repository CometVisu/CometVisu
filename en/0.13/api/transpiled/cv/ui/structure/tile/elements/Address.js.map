{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "members",
    "__lastValue",
    "__transformedValue",
    "_init",
    "element",
    "_element",
    "address",
    "textContent",
    "trim",
    "model",
    "data",
    "Model",
    "getInstance",
    "backendName",
    "getAttribute",
    "addAddress",
    "mode",
    "hasAttribute",
    "state",
    "getState",
    "undefined",
    "fireStateUpdate",
    "addUpdateListener",
    "startsWith",
    "addEventListener",
    "ev",
    "value",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "detail",
    "allowDuplicates",
    "source",
    "components",
    "Button",
    "getType",
    "encoding",
    "encodedValue",
    "Transform",
    "encodeBusAndRaw",
    "transform",
    "selector",
    "ignoreError",
    "variantInfo",
    "qos",
    "raw",
    "lastSentValue",
    "delay",
    "parseInt",
    "debug",
    "event",
    "Timer",
    "once",
    "io",
    "BackendConnections",
    "getClient",
    "write",
    "bus",
    "transformedState",
    "decode",
    "mapping",
    "Application",
    "structureController",
    "mapValue",
    "util",
    "String",
    "sprintf",
    "Date",
    "toLocaleString",
    "targetConfig",
    "split",
    "target",
    "length",
    "shift",
    "CustomEvent",
    "bubbles",
    "cancelable",
    "addressValue",
    "variant",
    "dispatchEvent",
    "isRead",
    "isWrite",
    "getValue",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Address"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/Address.js"
  ],
  "sourcesContent": [
    "/* Address.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Address element that connect a widget/component to the backend.\n *\n *  @author Tobias BrÃ¤utigam\n *  @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.elements.Address', {\n  extend: cv.ui.structure.tile.elements.AbstractCustomElement,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastValue: null,\n    __transformedValue: null,\n\n    _init() {\n      const element = this._element;\n      const address = element.textContent.trim();\n      if (address) {\n        const model = cv.data.Model.getInstance();\n        const backendName = element.getAttribute('backend');\n        model.addAddress(address, element.getAttribute('id'), backendName);\n        const mode = element.hasAttribute('mode') ? element.getAttribute('mode') : 'readwrite';\n        if (mode !== 'write') {\n          // subscribe\n          // this is a read address register for updates\n          const state = model.getState(address, backendName);\n          if (state !== undefined) {\n            this.fireStateUpdate(address, state);\n          }\n          //add listener\n          model.addUpdateListener(address, this.fireStateUpdate, this, backendName);\n\n          if (element.hasAttribute('target') && element.getAttribute('target').startsWith('last-update')) {\n            if (state === undefined) {\n              // notify tile that we have no value, so its outdated\n              this.fireStateUpdate(address, '-');\n            }\n          }\n        }\n        if (mode !== 'read') {\n          // listen for sendState events\n          element.addEventListener('sendState', ev => {\n            let value = null;\n            if (Object.prototype.hasOwnProperty.call(ev.detail, 'value')) {\n              value = ev.detail.value;\n            }\n            if (element.hasAttribute('value')) {\n              // address has a fixed value that must be sent\n              value = element.getAttribute('value');\n            }\n            const allowDuplicates =\n              ev.detail.source &&\n              ev.detail.source instanceof cv.ui.structure.tile.components.Button &&\n              (ev.detail.source.getType() === 'trigger' || ev.detail.source.getType() === 'push');\n            if (value !== null) {\n              const encoding = element.getAttribute('transform') || 'raw';\n              const encodedValue = cv.Transform.encodeBusAndRaw({\n                transform: encoding,\n                selector: this._element.getAttribute('selector'),\n                ignoreError: this._element.getAttribute('ignore-error') === 'true',\n                variantInfo: this._element.getAttribute('variant'),\n                qos: (this._element.getAttribute('qos') || 0) | 0\n              }, value);\n\n              // noinspection EqualityComparisonWithCoercionJS\n              if (\n                allowDuplicates ||\n                !Object.prototype.hasOwnProperty.call(element, 'lastSentValue') ||\n                encodedValue.raw !== element.lastSentValue\n              ) {\n                if (element.hasAttribute('delay')) {\n                  const delay = parseInt(element.getAttribute('delay'));\n                  this.debug(`send with delay of ${delay}ms`);\n                  qx.event.Timer.once(\n                    () => {\n                      cv.io.BackendConnections.getClient(backendName).write(\n                        address,\n                        encodedValue.bus,\n                        element\n                      );\n\n                      if (!allowDuplicates) {\n                        element.lastSentValue = encodedValue.raw;\n                      }\n                    },\n                    this,\n                    delay\n                  );\n                } else {\n                  cv.io.BackendConnections.getClient(backendName).write(address, encodedValue.bus, element);\n\n                  if (!allowDuplicates) {\n                    element.lastSentValue = encodedValue.raw;\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n    },\n\n    /**\n     * Creates a 'stateUpdate' event with the transformed value and dispatches it to the <cv-address>-Element.\n     * @param address {String} address\n     * @param state {variant} state to send\n     */\n    fireStateUpdate(address, state) {\n      if (this.__lastValue !== state || this._element.getAttribute('send-mode') === 'always') {\n        let transform = this._element.getAttribute('transform') || 'raw';\n        let transformedState = cv.Transform.decode({\n          transform: transform,\n          selector: this._element.getAttribute('selector'),\n          ignoreError: this._element.getAttribute('ignore-error') === 'true',\n          variantInfo: this._element.getAttribute('variant'),\n          qos: (this._element.getAttribute('qos') || 0) | 0\n        }, state);\n\n        let mapping = '';\n        if (this._element.hasAttribute('mapping')) {\n          mapping = this._element.getAttribute('mapping');\n          transformedState = cv.Application.structureController.mapValue(mapping, transformedState);\n        }\n        if (this._element.hasAttribute('format')) {\n          transformedState = cv.util.String.sprintf(\n            this._element.getAttribute('format'),\n            transformedState instanceof Date ? transformedState.toLocaleString() : transformedState\n          );\n        }\n        let targetConfig = this._element.hasAttribute('target') ? this._element.getAttribute('target').split(':') : [];\n        const target = targetConfig.length > 0 ? targetConfig.shift() : '';\n        const ev = new CustomEvent('stateUpdate', {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            address: this._element.textContent.trim(),\n            state: transformedState,\n            target: target,\n            targetConfig: targetConfig,\n            raw: state,\n            mapping: mapping,\n            addressValue: this._element.hasAttribute('value') ? this._element.getAttribute('value') : null,\n            source: this,\n            variant: this._element.hasAttribute('variant') ? this._element.getAttribute('variant') : null\n          }\n        });\n\n        this.__transformedValue = transformedState;\n        //console.log(ev.detail);\n        this._element.dispatchEvent(ev);\n        this.__lastValue = state;\n        // reset lastSentValue\n        if (state !== this._element.lastSentValue) {\n          this._element.lastSentValue = null;\n        }\n      }\n    },\n\n    /**\n     *\n     * @return {boolean} true if this is a read address\n     */\n    isRead() {\n      return this._element.getAttribute('mode') !== 'write';\n    },\n\n    /**\n     *\n     * @return {boolean} true if this is a write address\n     */\n    isWrite() {\n      return this._element.getAttribute('mode') !== 'read';\n    },\n\n    getValue() {\n      return this.__transformedValue;\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'address',\n      class extends QxConnector {\n        constructor() {\n          super(Clazz);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}