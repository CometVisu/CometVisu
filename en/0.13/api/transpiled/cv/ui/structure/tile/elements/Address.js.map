{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/Address.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "members",
    "__lastValue",
    "__transformedValue",
    "_init",
    "element",
    "_element",
    "address",
    "textContent",
    "trim",
    "model",
    "data",
    "Model",
    "getInstance",
    "backendName",
    "getAttribute",
    "addAddress",
    "mode",
    "hasAttribute",
    "state",
    "getState",
    "undefined",
    "fireStateUpdate",
    "addUpdateListener",
    "addEventListener",
    "ev",
    "value",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "detail",
    "allowDuplicates",
    "source",
    "components",
    "Button",
    "getType",
    "encoding",
    "encodedValue",
    "Transform",
    "encodeBusAndRaw",
    "transform",
    "raw",
    "lastSentValue",
    "delay",
    "parseInt",
    "debug",
    "event",
    "Timer",
    "once",
    "io",
    "BackendConnections",
    "getClient",
    "write",
    "bus",
    "transformedState",
    "decode",
    "mapping",
    "Application",
    "structureController",
    "mapValue",
    "util",
    "String",
    "sprintf",
    "Date",
    "toLocaleString",
    "CustomEvent",
    "bubbles",
    "cancelable",
    "target",
    "addressValue",
    "variant",
    "dispatchEvent",
    "getValue",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Address"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Address.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Address element that connect a widget/component to the backend.\n *\n *  @author Tobias BrÃ¤utigam\n *  @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.elements.Address', {\n  extend: cv.ui.structure.tile.elements.AbstractCustomElement,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastValue: null,\n    __transformedValue: null,\n\n    _init() {\n      const element = this._element;\n      const address = element.textContent.trim();\n      if (address) {\n        const model = cv.data.Model.getInstance();\n        const backendName = element.getAttribute('backend');\n        model.addAddress(address, element.getAttribute('id'), backendName);\n        const mode = element.hasAttribute('mode') ? element.getAttribute('mode') : 'readwrite';\n        if (mode !== 'write') {\n          // subscribe\n          // this is a read address register for updates\n          const state = model.getState(address, backendName);\n          if (state !== undefined) {\n            this.fireStateUpdate(address, state);\n          }\n          //add listener\n          model.addUpdateListener(address, this.fireStateUpdate, this, backendName);\n        }\n        if (mode !== 'read') {\n          // listen for sendState events\n          element.addEventListener('sendState', ev => {\n            let value = null;\n            if (Object.prototype.hasOwnProperty.call(ev.detail, 'value')) {\n              value = ev.detail.value;\n            }\n            if (element.hasAttribute('value')) {\n              // address has a fixed value that must be sent\n              value = element.getAttribute('value');\n            }\n            const allowDuplicates = ev.detail.source &&\n              ev.detail.source instanceof cv.ui.structure.tile.components.Button &&\n              (ev.detail.source.getType() === 'trigger' || ev.detail.source.getType() === 'push');\n            if (value !== null) {\n              const encoding = element.getAttribute('transform') || 'raw';\n              const encodedValue = cv.Transform.encodeBusAndRaw({transform: encoding}, value);\n              // noinspection EqualityComparisonWithCoercionJS\n              if (allowDuplicates ||\n                !Object.prototype.hasOwnProperty.call(element, 'lastSentValue') ||\n                encodedValue.raw !== element.lastSentValue) {\n                if (element.hasAttribute('delay')) {\n                  const delay = parseInt(element.getAttribute('delay'));\n                  this.debug(`send with delay of ${delay}ms`);\n                  qx.event.Timer.once(() => {\n                    cv.io.BackendConnections.getClient(backendName).write(element.textContent, encodedValue.bus, element);\n                    if (!allowDuplicates) {\n                      element.lastSentValue = encodedValue.raw;\n                    }\n                  }, this, delay);\n                } else {\n                  cv.io.BackendConnections.getClient(backendName).write(element.textContent, encodedValue.bus, element);\n                  if (!allowDuplicates) {\n                    element.lastSentValue = encodedValue.raw;\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n    },\n\n    /**\n     * Creates a 'stateUpdate' event with the transformed value and dispatches it to the <cv-address>-Element.\n     * @param address {String} address\n     * @param state {variant} state to send\n     */\n    fireStateUpdate(address, state) {\n      if (this.__lastValue !== state || this._element.getAttribute('send-mode') === 'always') {\n        let transform = this._element.getAttribute('transform') || 'raw';\n        let transformedState = cv.Transform.decode({transform: transform}, state);\n        let mapping = '';\n        if (this._element.hasAttribute('mapping')) {\n          mapping = this._element.getAttribute('mapping');\n          transformedState = cv.Application.structureController.mapValue(mapping, transformedState);\n        }\n        if (this._element.hasAttribute('format')) {\n          transformedState = cv.util.String.sprintf(this._element.getAttribute('format'), transformedState instanceof Date ? transformedState.toLocaleString() : transformedState);\n        }\n        const ev = new CustomEvent('stateUpdate', {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            address: this._element.textContent.trim(),\n            state: transformedState,\n            target: this._element.getAttribute('target') || '',\n            raw: state,\n            mapping: mapping,\n            addressValue: this._element.hasAttribute('value') ? this._element.getAttribute('value') : null,\n            source: this,\n            variant: this._element.hasAttribute('variant') ? this._element.getAttribute('variant') : null\n          }\n        });\n        this.__transformedValue = transformedState;\n        //console.log(ev.detail);\n        this._element.dispatchEvent(ev);\n        this.__lastValue = state;\n        // reset lastSentValue\n        if (state !== this._element.lastSentValue) {\n          this._element.lastSentValue = null;\n        }\n      }\n    },\n\n    getValue() {\n      return this.__transformedValue;\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'address', class extends QxConnector {\n      constructor() {\n        super(Clazz);\n      }\n    });\n  }\n});\n"
  ]
}