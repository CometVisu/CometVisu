{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "elements",
    "AbstractCustomElement",
    "members",
    "__lastValue",
    "__transformedValue",
    "_stateUpdateTarget",
    "getAddress",
    "_element",
    "textContent",
    "trim",
    "_init",
    "_this",
    "element",
    "address",
    "model",
    "data",
    "Model",
    "getInstance",
    "backendName",
    "getAttribute",
    "addAddress",
    "mode",
    "hasAttribute",
    "state",
    "getState",
    "undefined",
    "fireStateUpdate",
    "addUpdateListener",
    "startsWith",
    "addEventListener",
    "ev",
    "value",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "detail",
    "allowDuplicates",
    "source",
    "components",
    "Button",
    "getType",
    "encoding",
    "encodedValue",
    "Transform",
    "encodeBusAndRaw",
    "transform",
    "selector",
    "ignoreError",
    "variantInfo",
    "qos",
    "client",
    "io",
    "BackendConnections",
    "getClient",
    "error",
    "raw",
    "lastSentValue",
    "delay",
    "parseInt",
    "debug",
    "concat",
    "event",
    "Timer",
    "once",
    "write",
    "bus",
    "transformedState",
    "decode",
    "mapping",
    "Application",
    "structureController",
    "mapValue",
    "util",
    "String",
    "sprintf",
    "Date",
    "toLocaleString",
    "targetConfig",
    "split",
    "target",
    "length",
    "shift",
    "CustomEvent",
    "bubbles",
    "cancelable",
    "addressValue",
    "variant",
    "dispatchEvent",
    "isRead",
    "isWrite",
    "getValue",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "_QxConnector",
    "_class",
    "_classCallCheck",
    "_callSuper",
    "_inherits",
    "_createClass",
    "QxConnector",
    "Address"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/elements/Address.js"
  ],
  "sourcesContent": [
    "/* Address.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Address element that connect a widget/component to the backend.\n *\n *  @author Tobias BrÃ¤utigam\n *  @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.elements.Address', {\n  extend: cv.ui.structure.tile.elements.AbstractCustomElement,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __lastValue: null,\n    __transformedValue: null,\n    _stateUpdateTarget: null,\n\n    getAddress() {\n      return this._element.textContent.trim();\n    },\n\n\n    _init() {\n      const element = this._element;\n      this._stateUpdateTarget = element;\n      const address = this.getAddress();\n      if (address) {\n        const model = cv.data.Model.getInstance();\n        const backendName = element.getAttribute('backend');\n        model.addAddress(address, element.getAttribute('id'), backendName);\n        const mode = element.hasAttribute('mode') ? element.getAttribute('mode') : 'readwrite';\n        if (mode !== 'write') {\n          // subscribe\n          // this is a read address register for updates\n          const state = model.getState(address, backendName);\n          if (state !== undefined) {\n            this.fireStateUpdate(address, state);\n          }\n          //add listener\n          model.addUpdateListener(address, this.fireStateUpdate, this, backendName);\n\n          if (element.hasAttribute('target') && element.getAttribute('target').startsWith('last-update')) {\n            if (state === undefined) {\n              // notify tile that we have no value, so its outdated\n              this.fireStateUpdate(address, '-');\n            }\n          }\n        }\n        if (mode !== 'read') {\n          // listen for sendState events\n          element.addEventListener('sendState', ev => {\n            let value = null;\n            if (Object.prototype.hasOwnProperty.call(ev.detail, 'value')) {\n              value = ev.detail.value;\n            }\n            let allowDuplicates =\n              ev.detail.source &&\n              ev.detail.source instanceof cv.ui.structure.tile.components.Button &&\n              (ev.detail.source.getType() === 'trigger' || ev.detail.source.getType() === 'push');\n\n            if (element.hasAttribute('value')) {\n              // address has a fixed value that must be sent\n              value = element.getAttribute('value');\n              allowDuplicates = true;\n            }\n\n            if (value !== null) {\n              const encoding = element.getAttribute('transform') || 'raw';\n              const encodedValue = cv.Transform.encodeBusAndRaw({\n                transform: encoding,\n                selector: this._element.getAttribute('selector'),\n                ignoreError: this._element.getAttribute('ignore-error') === 'true',\n                variantInfo: this._element.getAttribute('variant'),\n                qos: (this._element.getAttribute('qos') || 0) | 0\n              }, value);\n\n              const client = cv.io.BackendConnections.getClient(backendName);\n              if (!client) {\n                this.error('no client found for backend', backendName);\n                return;\n              }\n              // noinspection EqualityComparisonWithCoercionJS\n              if (\n                allowDuplicates ||\n                !Object.prototype.hasOwnProperty.call(element, 'lastSentValue') ||\n                encodedValue.raw !== element.lastSentValue\n              ) {\n                if (element.hasAttribute('delay')) {\n                  const delay = parseInt(element.getAttribute('delay'));\n                  this.debug(`send with delay of ${delay}ms`);\n                  qx.event.Timer.once(\n                    () => {\n                      client.write(\n                        address,\n                        encodedValue.bus,\n                        element\n                      );\n\n                      if (!allowDuplicates) {\n                        element.lastSentValue = encodedValue.raw;\n                      }\n                    },\n                    this,\n                    delay\n                  );\n                } else {\n                  client.write(address, encodedValue.bus, element);\n\n                  if (!allowDuplicates) {\n                    element.lastSentValue = encodedValue.raw;\n                  }\n                }\n              }\n            }\n          });\n        }\n      }\n    },\n\n    /**\n     * Creates a 'stateUpdate' event with the transformed value and dispatches it to the <cv-address>-Element.\n     * @param address {String} address\n     * @param state {variant} state to send\n     */\n    fireStateUpdate(address, state) {\n      if (this.__lastValue !== state || this._element.getAttribute('send-mode') === 'always') {\n        let transform = this._element.getAttribute('transform') || 'raw';\n        let transformedState = cv.Transform.decode({\n          transform: transform,\n          selector: this._element.getAttribute('selector'),\n          ignoreError: this._element.getAttribute('ignore-error') === 'true',\n          variantInfo: this._element.getAttribute('variant'),\n          qos: (this._element.getAttribute('qos') || 0) | 0\n        }, state);\n\n        let mapping = '';\n        if (this._element.hasAttribute('mapping')) {\n          mapping = this._element.getAttribute('mapping');\n          transformedState = cv.Application.structureController.mapValue(mapping, transformedState);\n        }\n        if (this._element.hasAttribute('format')) {\n          transformedState = cv.util.String.sprintf(\n            this._element.getAttribute('format'),\n            transformedState instanceof Date ? transformedState.toLocaleString() : transformedState\n          );\n        }\n        let targetConfig = this._element.hasAttribute('target') ? this._element.getAttribute('target').split(':') : [];\n        const target = targetConfig.length > 0 ? targetConfig.shift() : '';\n        const ev = new CustomEvent('stateUpdate', {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            address: this.getAddress(),\n            state: transformedState,\n            target: target,\n            targetConfig: targetConfig,\n            raw: state,\n            mapping: mapping,\n            addressValue: this._element.hasAttribute('value') ? this._element.getAttribute('value') : null,\n            source: this,\n            variant: this._element.hasAttribute('variant') ? this._element.getAttribute('variant') : null\n          }\n        });\n\n        this.__transformedValue = transformedState;\n        //console.log(ev.detail);\n        this._stateUpdateTarget.dispatchEvent(ev);\n        this.__lastValue = state;\n        // reset lastSentValue\n        if (state !== this._element.lastSentValue) {\n          this._element.lastSentValue = null;\n        }\n      }\n    },\n\n    /**\n     *\n     * @return {boolean} true if this is a read address\n     */\n    isRead() {\n      return this._element.getAttribute('mode') !== 'write';\n    },\n\n    /**\n     *\n     * @return {boolean} true if this is a write address\n     */\n    isWrite() {\n      return this._element.getAttribute('mode') !== 'read';\n    },\n\n    getValue() {\n      return this.__transformedValue;\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'address',\n      class extends QxConnector {\n        constructor() {\n          super(Clazz);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}