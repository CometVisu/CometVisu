{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_observeVisibility",
    "statics",
    "observer",
    "IntersectionObserver",
    "entries",
    "forEach",
    "entry",
    "target",
    "_instance",
    "setVisible",
    "isIntersecting",
    "root",
    "document",
    "querySelector",
    "properties",
    "visible",
    "check",
    "init",
    "event",
    "members",
    "_element",
    "cv",
    "ui",
    "structure",
    "tile",
    "MVisibility",
    "observe",
    "warn"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/MVisibility.js"
  ],
  "sourcesContent": [
    "/* MVisibility.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Detects dom elements visibility\n * @ignore(IntersectionObserver)\n */\nqx.Mixin.define('cv.ui.structure.tile.MVisibility', {\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    this._observeVisibility();\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    observer: new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.target._instance) {\n          entry.target._instance.setVisible(entry.isIntersecting);\n        }\n      }, {\n        root: document.querySelector('body > main')\n      });\n    })\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    visible: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeVisible'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _observeVisibility() {\n      if (this._element) {\n        cv.ui.structure.tile.MVisibility.observer.observe(this._element);\n      } else {\n        this.warn('no element to observe defined');\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kCAAkC,EAAE;IAClD;AACF;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAAA,EAAG;MACV,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAC3B,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPC,QAAQ,EAAE,IAAIC,oBAAoB,CAAC,UAACC,OAAO,EAAEF,QAAQ,EAAK;QACxDE,OAAO,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;UACvB,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,EAAE;YAC1BF,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,UAAU,CAACH,KAAK,CAACI,cAAc,CAAC;UACzD;QACF,CAAC,EAAE;UACDC,IAAI,EAAEC,QAAQ,CAACC,aAAa,CAAC,aAAa;QAC5C,CAAC,CAAC;MACJ,CAAC;IACH,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,UAAU,EAAE;MACVC,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE;MACT;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACEC,OAAO,EAAE;MACPnB,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,IAAI,IAAI,CAACoB,QAAQ,EAAE;UACjBC,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,WAAW,CAACvB,QAAQ,CAACwB,OAAO,CAAC,IAAI,CAACN,QAAQ,CAAC;QAClE,CAAC,MAAM;UACL,IAAI,CAACO,IAAI,CAAC,+BAA+B,CAAC;QAC5C;MACF;IACF;EACF,CAAC,CAAC;EA7EFN,EAAE,CAACC,EAAE,CAACC,SAAS,CAACC,IAAI,CAACC,WAAW,CAAC7B,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}