{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "_asyncToGenerator",
    "arguments",
    "apply",
    "_next",
    "_throw",
    "_this",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MRefresh",
    "MResize",
    "MFullscreen",
    "statics",
    "ChartCounter",
    "DEFAULT_ASPECT_RATIO",
    "JS_LOADED",
    "_ref",
    "_callee",
    "reject",
    "check",
    "timer",
    "counter",
    "_callee$",
    "_context",
    "window",
    "d3",
    "util",
    "ScriptLoader",
    "includeScript",
    "ResourceManager",
    "getInstance",
    "toUri",
    "t0",
    "log",
    "Logger",
    "error",
    "event",
    "Timer",
    "addListener",
    "_x",
    "_x2",
    "locale",
    "Manager",
    "getLanguage",
    "formatDefaultLocale",
    "decimal",
    "Number",
    "getDecimalSeparator",
    "translate",
    "toString",
    "thousands",
    "getGroupSeparator",
    "grouping",
    "currency",
    "timeFormatDefaultLocale",
    "dateTime",
    "date",
    "time",
    "periods",
    "Date",
    "getAmMarker",
    "getPmMarker",
    "days",
    "getDayNames",
    "map",
    "shortDays",
    "months",
    "getMonthNames",
    "shortMonths",
    "CONFIG",
    "properties",
    "currentSeries",
    "init",
    "currentPeriod",
    "startTime",
    "endTime",
    "members",
    "_id",
    "_downloadedImage",
    "_url",
    "_headers",
    "_request",
    "_width",
    "_height",
    "_loaded",
    "_dataSetConfigs",
    "_initializing",
    "_navigationEnabled",
    "__toolTipTimer",
    "__showTooltip",
    "__debouncedOnResize",
    "__resizeTimeout",
    "__startTs",
    "__endTs",
    "__srcToHash",
    "_dot",
    "_svg",
    "_tooltip",
    "_titleString",
    "__helpers",
    "__config",
    "_chartConf",
    "_init",
    "_this2",
    "_callee2",
    "element",
    "inBackground",
    "title",
    "span",
    "seriesSelection",
    "button",
    "_span",
    "popup",
    "option",
    "_iterator",
    "_step",
    "_s",
    "svg",
    "noToolTips",
    "format",
    "timeFormat",
    "formatString",
    "datasetSources",
    "readAddresses",
    "_callee2$",
    "_context2",
    "_checkEnvironment",
    "_element",
    "Chart",
    "setAttribute",
    "hasAttribute",
    "getAttribute",
    "getHeader",
    "document",
    "createElement",
    "classList",
    "add",
    "appendChild",
    "textContent",
    "appendToHeader",
    "trim",
    "split",
    "toLowerCase",
    "setCurrentSeries",
    "getCurrentSeries",
    "includes",
    "_buttonFactory",
    "tr",
    "addEventListener",
    "_onSeriesPrev",
    "parentElement",
    "insertBefore",
    "_createForOfIteratorHelper",
    "_seriesToShort",
    "ev",
    "style",
    "display",
    "_onSeriesChange",
    "target",
    "stopPropagation",
    "preventDefault",
    "err",
    "getComputedStyle",
    "getPropertyValue",
    "disabled",
    "_onSeriesNext",
    "_initFullscreenSwitch",
    "body",
    "contains",
    "_onRendered",
    "setRefresh",
    "parseInt",
    "select",
    "append",
    "on",
    "_onPointerEntered",
    "_onPointerMoved",
    "_onPointerLeft",
    "targetTouches",
    "clientY",
    "pathRect",
    "querySelector",
    "getBoundingClientRect",
    "height",
    "passive",
    "multiTimeFormat",
    "getSeconds",
    "getMinutes",
    "getHours",
    "getDay",
    "getDate",
    "getMonth",
    "x",
    "z",
    "key",
    "color",
    "String",
    "sprintf",
    "curve",
    "curveLinear",
    "marginTop",
    "marginRight",
    "marginBottom",
    "marginLeft",
    "width",
    "aspectRatio",
    "xType",
    "scaleTime",
    "xFormat",
    "yType",
    "scaleLinear",
    "yFormat",
    "undefined",
    "yLabel",
    "strokeLinecap",
    "strokeLinejoin",
    "strokeWidth",
    "strokeOpacity",
    "mixBlendMode",
    "showArea",
    "gradient",
    "showXAxis",
    "showYAxis",
    "xPadding",
    "__updateTitle",
    "_onLocaleChanged",
    "Array",
    "from",
    "querySelectorAll",
    "elem",
    "filter",
    "onStateUpdate",
    "_headerFooterParent",
    "_iterator2",
    "_step2",
    "targetDataset",
    "detail",
    "config",
    "ts",
    "now",
    "aggregationInterval",
    "mins",
    "Math",
    "round",
    "_renderChart",
    "src",
    "state",
    "setCurrentPeriod",
    "getCurrentPeriod",
    "resetCurrentPeriod",
    "refresh",
    "__updateTimeRange",
    "_loadData",
    "_refreshData",
    "nextButton",
    "removeAttribute",
    "getStartTime",
    "getEndTime",
    "_applyCurrentSeries",
    "series",
    "currentSelection",
    "alreadySelected",
    "newSelection",
    "concat",
    "end",
    "periodStart",
    "interval",
    "setHours",
    "setDate",
    "setTime",
    "getTime",
    "setMonth",
    "setFullYear",
    "getFullYear",
    "startTs",
    "endTs",
    "setStartTime",
    "setEndTime",
    "_this3",
    "client",
    "io",
    "BackendConnections",
    "getClient",
    "isConnected",
    "addListenerOnce",
    "url",
    "dataSets",
    "_iterator3",
    "_step3",
    "line",
    "promises",
    "_iterator4",
    "_step4",
    "dataSet",
    "localName",
    "chartType",
    "attr",
    "attributes",
    "item",
    "part",
    "substring",
    "toUpperCase",
    "join",
    "test",
    "parseFloat",
    "startsWith",
    "subType",
    "source",
    "timeseries",
    "FluxSource",
    "isInline",
    "fluxQuery",
    "ConfigCache",
    "hashCode",
    "setQueryTemplate",
    "OpenhabPersistenceSource",
    "RRDSource",
    "DemoSource",
    "Plugin",
    "_loop",
    "proxy",
    "options",
    "ttl",
    "getRefresh",
    "getRequestConfig",
    "assign",
    "fetch",
    "fetchData",
    "data",
    "debug",
    "processResponse",
    "_lastRefresh",
    "_onStatusError",
    "Fetch",
    "cachedFetch",
    "all",
    "responses",
    "_onSuccess",
    "_this4",
    "chartData",
    "_iterator5",
    "_step5",
    "entry",
    "tsdata",
    "_iterator6",
    "_step6",
    "_step6$value",
    "_slicedToArray",
    "overflow",
    "requestAnimationFrame",
    "setTimeout",
    "retries",
    "_this5",
    "clearTimeout",
    "isVisible",
    "_this$_getSize",
    "_getSize",
    "_this$_getSize2",
    "parent",
    "padding",
    "containerWidth",
    "offsetWidth",
    "containerHeight",
    "offsetHeight",
    "factor",
    "landscape",
    "formatsArray",
    "multiFormat",
    "found",
    "fmt",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "severity",
    "message",
    "JSON",
    "stringify",
    "_getSvgElement",
    "nodeName",
    "classes",
    "empty",
    "single",
    "_this6",
    "X",
    "Y",
    "Z",
    "O",
    "T",
    "_helpers",
    "shift",
    "xDomain",
    "extent",
    "minVal",
    "maxVal",
    "min",
    "max",
    "yDomain",
    "zDomain",
    "InternSet",
    "I",
    "range",
    "has",
    "maxValue",
    "toFixed",
    "xTicks",
    "yTicks",
    "additionalXRangePadding",
    "xRange",
    "yRange",
    "xAxis",
    "axisBottom",
    "ticks",
    "tickSizeOuter",
    "tickFormat",
    "yAxis",
    "axisLeft",
    "showGrid",
    "xGrid",
    "tickSize",
    "transform",
    "yGrid",
    "yAxisElement",
    "label",
    "text",
    "remove",
    "lineGroups",
    "Map",
    "areaGroups",
    "barGroups",
    "stackedBarGroups",
    "lineFunctions",
    "areaFunctions",
    "xBar",
    "xzScale",
    "_loop2",
    "idx",
    "set",
    "curveName",
    "curveFunction",
    "curveStep",
    "curveNatural",
    "minY",
    "area",
    "y0",
    "y1",
    "scaleBand",
    "xz",
    "size",
    "lineContainer",
    "fill",
    "stroke",
    "areaContainer",
    "__opacifyColor",
    "barContainer",
    "domain",
    "bandwidth",
    "_iterator7",
    "_step7",
    "_loop3",
    "_iterator8",
    "_step8",
    "_loop4",
    "_iterator9",
    "_step9",
    "_loop5",
    "_iterator10",
    "_step10",
    "_loop6",
    "targetContainer",
    "yValue",
    "lineElem",
    "x1",
    "x2",
    "transition",
    "duration",
    "ease",
    "easeLinear",
    "selectAll",
    "_toConsumableArray",
    "_ref2",
    "_ref3",
    "k",
    "enter",
    "func",
    "linear",
    "val",
    "gradId",
    "replaceAll",
    "lg",
    "yMin",
    "__addLines",
    "dot",
    "_this7",
    "_iterator11",
    "entries",
    "_step11",
    "_loop7",
    "_step11$value",
    "NaN",
    "get",
    "sum",
    "_iterator12",
    "_step12",
    "di",
    "formatAttribute",
    "y2",
    "_this7$_chartConf$x$d",
    "_this7$_chartConf$x$d2",
    "xMin",
    "xMax",
    "_this7$_chartConf$y$d",
    "_this7$_chartConf$y$d2",
    "yMax",
    "valueElem",
    "_ret",
    "_this8",
    "__activateTooltip",
    "relatedTarget",
    "raise",
    "node",
    "dispatch",
    "bubbles",
    "center",
    "xm",
    "ym",
    "_d3$pointer",
    "pointer",
    "_d3$pointer2",
    "_this$_helpers",
    "_this$_chartConf",
    "least",
    "hypot",
    "scaleFactorX",
    "scaleFactorY",
    "xOffset",
    "cursorOffset",
    "pointerType",
    "timeString",
    "top",
    "left",
    "lineTitle",
    "innerHTML",
    "property",
    "chartTitle",
    "_shownDateRange",
    "DateFormat",
    "getDateTimeFormat",
    "trc",
    "getWeekNumber",
    "yearStart",
    "ceil",
    "opacity",
    "documentElement",
    "destruct",
    "removeListener",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "_QxConnector",
    "_class",
    "_classCallCheck",
    "_callSuper",
    "_inherits",
    "_createClass",
    "QxConnector"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Chart.js"
  ],
  "sourcesContent": [
    "/* Chart.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/* eslint-disable arrow-body-style */\n/**\n * Shows an chart.\n * @asset(libs/d3.min.js)\n * @asset(libs/d3.min.js.map)\n * @ignore(d3)\n */\nqx.Class.define('cv.ui.structure.tile.components.Chart', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [\n    cv.ui.structure.tile.MVisibility,\n    cv.ui.structure.tile.MRefresh,\n    cv.ui.structure.tile.MResize,\n    cv.ui.structure.tile.MFullscreen\n  ],\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ChartCounter: 0,\n    DEFAULT_ASPECT_RATIO: 392/192,\n\n    JS_LOADED: new Promise(async (resolve, reject) => {\n      const check = () => typeof window.d3 === 'object';\n      try {\n        await cv.util.ScriptLoader.includeScript(qx.util.ResourceManager.getInstance().toUri('libs/d3.min.js'));\n      } catch (e) {\n        qx.log.Logger.error(this, 'Error loading D3:', e);\n        reject(new Error('Error loading d3 library'));\n        return;\n      }\n\n      if (!check()) {\n        const timer = new qx.event.Timer(50);\n        let counter = 0;\n        timer.addListener('interval', () => {\n          counter++;\n          if (check()) {\n            resolve(true);\n          } else if (counter > 5) {\n            reject(new Error('Error loading d3 library'));\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    }).then(() => {\n      if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n        // localize\n        d3.formatDefaultLocale({\n          decimal: qx.locale.Number.getDecimalSeparator().translate().toString(),\n          thousands: qx.locale.Number.getGroupSeparator().translate().toString(),\n          grouping: [3],\n          currency: ['€', '']\n        });\n\n        d3.timeFormatDefaultLocale({\n          dateTime: '%A, der %e. %B %Y, %X',\n          date: '%d.%m.%Y',\n          time: '%H:%M:%S',\n          periods: [qx.locale.Date.getAmMarker().translate().toString(), qx.locale.Date.getPmMarker().translate().toString()],\n          days: qx.locale.Date.getDayNames('wide', null, 'format').map(t => t.translate().toString()),\n\n          shortDays: qx.locale.Date.getDayNames('narrow', null, 'stand-alone').map(t => t.translate().toString()),\n          months: qx.locale.Date.getMonthNames('wide').map(t => t.translate().toString()),\n          shortMonths: qx.locale.Date.getMonthNames('narrow', null, 'stand-alone').map(t => t.translate().toString())\n        });\n      }\n    }),\n\n    CONFIG: null\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentSeries: {\n      check: ['hour', 'day', 'week', 'month', 'year'],\n      init: 'day',\n      apply: '_applyCurrentSeries'\n    },\n\n    currentPeriod: {\n      check: 'Number',\n      init: 0,\n      apply: '__updateTimeRange'\n    },\n\n    startTime: {\n      check: 'Number',\n      init: 0\n    },\n\n    endTime: {\n      check: 'Number',\n      init: 0\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _id: null,\n    _downloadedImage: null,\n    _url: null,\n    _headers: null,\n    _request: null,\n    _width: null,\n    _height: null,\n    _loaded: null,\n    _dataSetConfigs: null,\n    _initializing: null,\n    _navigationEnabled: null,\n    __toolTipTimer: null,\n    __showTooltip: false,\n    __debouncedOnResize: null,\n    __resizeTimeout: null,\n    __startTs: null,\n    __endTs: null,\n    __srcToHash: null,\n\n    /**\n    * @type {d3.Selection}\n    */\n    _dot: null,\n    /**\n     * @type {d3.Selection}\n     */\n    _svg: null,\n    /**\n     * @type {HTMLElement}\n     */\n    _tooltip: null,\n    /**\n     * @type {String}\n     */\n    _titleString: null,\n\n    __helpers: null,\n    __config: null,\n    // all chart properties\n    _chartConf: null,\n\n    async _init() {\n      this._checkEnvironment();\n\n      this._initializing = true;\n      this.__srcToHash = {};\n      const element = this._element;\n      await cv.ui.structure.tile.components.Chart.JS_LOADED;\n      this._id = cv.ui.structure.tile.components.Chart.ChartCounter++;\n\n      element.setAttribute('data-chart-id', this._id.toString());\n      const inBackground = this._element.hasAttribute('background') && this._element.getAttribute('background') === 'true';\n\n      let title = this.getHeader('label.title');\n      if (!inBackground && element.hasAttribute('title') && !title) {\n        title = document.createElement('label');\n        title.classList.add('title');\n        let span = document.createElement('span');\n        title.appendChild(span);\n        span.textContent = element.getAttribute('title');\n        this.appendToHeader(title);\n      }\n\n      if (title) {\n        // save base title for updating\n        this._titleString = title.textContent.trim();\n      }\n\n      let seriesSelection = [];\n      if (!inBackground && element.hasAttribute('selection')) {\n        const s = element.getAttribute('selection');\n        if (s === 'none') {\n          seriesSelection = [];\n        } else if (s === 'all') {\n          seriesSelection = ['hour', 'day', 'week', 'month', 'year'];\n        } else {\n          seriesSelection = s.split(',').map(n => n.trim().toLowerCase());\n        }\n      }\n      if (element.hasAttribute('series')) {\n        this.setCurrentSeries(element.getAttribute('series'));\n      }\n      const currentSeries = this.getCurrentSeries();\n      if (seriesSelection.length > 0 && !seriesSelection.includes(currentSeries)) {\n        seriesSelection.push(currentSeries);\n      }\n      this._navigationEnabled = seriesSelection.length > 0;\n      if (seriesSelection.length > 0) {\n        // back button\n        let button = this._buttonFactory('ri-arrow-left-s-line', ['prev']);\n        button.setAttribute('title', qx.locale.Manager.tr('previous'));\n        button.addEventListener('click', () => this._onSeriesPrev());\n\n        if (!title) {\n          title = document.createElement('label');\n          title.classList.add('title');\n          let span = document.createElement('span');\n          title.appendChild(span);\n          this.appendToHeader(title);\n        }\n\n        title.parentElement.insertBefore(button, title);\n        const i = document.createElement('i');\n        i.classList.add('ri-arrow-down-s-fill');\n        title.appendChild(i);\n\n        // current selection\n        const popup = document.createElement('div');\n        popup.classList.add('popup', 'series');\n        let option;\n        for (const s of seriesSelection) {\n          option = document.createElement('cv-option');\n          option.setAttribute('key', s);\n          if (s === currentSeries) {\n            option.setAttribute('selected', 'selected');\n          }\n          option.textContent = this._seriesToShort(s);\n          option.addEventListener('click', ev => {\n            popup.style.display = 'none';\n            this._onSeriesChange(ev.target.getAttribute('key'));\n            ev.stopPropagation();\n            ev.preventDefault();\n          });\n          popup.appendChild(option);\n        }\n        title.appendChild(popup);\n\n        // make title clickable\n        title.classList.add('clickable');\n        title.addEventListener('click', ev => {\n          const style = getComputedStyle(popup);\n          if (style.getPropertyValue('display') === 'none') {\n            popup.style.display = 'flex';\n          } else {\n            popup.style.display = 'none';\n          }\n          ev.stopPropagation();\n          ev.preventDefault();\n        });\n\n        // forward button\n        button = this._buttonFactory('ri-arrow-right-s-line', ['next']);\n        button.setAttribute('title', qx.locale.Manager.tr('next'));\n        // initially we cannot go into the future\n        button.disabled = true;\n        button.addEventListener('click', () => this._onSeriesNext());\n        this.appendToHeader(button);\n      }\n      if (!inBackground && element.hasAttribute('allow-fullscreen') && element.getAttribute('allow-fullscreen') === 'true') {\n        this._initFullscreenSwitch();\n\n        // only on mobile we need this, because of height: auto\n        if (document.body.classList.contains('mobile')) {\n          this.addListener('changeFullscreen', () => this._onRendered());\n        }\n      }\n\n      if (element.hasAttribute('refresh')) {\n        this.setRefresh(parseInt(element.getAttribute('refresh')));\n      }\n\n      // create needed elements\n\n      const svg = d3.select(this._element)\n        .append('svg');\n\n      let noToolTips = false;\n      if (inBackground) {\n        noToolTips = true;\n        svg.style('opacity', 0.4);\n      }\n\n      if (!noToolTips) {\n        this._tooltip = document.createElement('div');\n        this._tooltip.classList.add('tooltip');\n        this._tooltip.style.display = 'none';\n        this._element.appendChild(this._tooltip);\n\n        svg.on('pointerenter', ev => this._onPointerEntered(ev));\n        svg.on('pointermove', ev => this._onPointerMoved(ev));\n        svg.on('pointerleave', ev => this._onPointerLeft(ev));\n      }\n      svg.on(\n        'touchmove',\n        event => {\n          if (this._loaded) {\n            let y = event.targetTouches[0].clientY;\n            const pathRect = this._element.querySelector(':scope > svg').getBoundingClientRect();\n            if (y > pathRect.y && y < pathRect.y + pathRect.height) {\n              event.preventDefault();\n            }\n          }\n        },\n        { passive: false }\n      );\n\n      // init some fixed settings\n      const format = this._element.hasAttribute('y-format') ? this._element.getAttribute('y-format') : '%s';\n      let timeFormat = null;\n      if (this._element.hasAttribute('x-format')) {\n        const formatString = this._element.getAttribute('x-format');\n        timeFormat = date => d3.timeFormat(formatString)(date);\n      } else {\n        // format auto-detection\n        timeFormat = this.multiTimeFormat([\n          [\n            '%H:%M:%S',\n            function (d) {\n              return d.getSeconds();\n            }\n          ],\n\n          [\n            '%H:%M',\n            function (d) {\n              return d.getMinutes();\n            }\n          ],\n\n          [\n            '%H',\n            function (d) {\n              return d.getHours();\n            }\n          ],\n\n          [\n            '%a %d',\n            function (d) {\n              return d.getDay() && d.getDate() !== 1;\n            }\n          ],\n\n          [\n            '%b %d',\n            function (d) {\n              return d.getDate() !== 1;\n            }\n          ],\n\n          [\n            '%B',\n            function (d) {\n              return d.getMonth();\n            }\n          ],\n\n          [\n            '%Y',\n            function () {\n              return true;\n            }\n          ]\n        ]);\n      }\n      this.__config = {\n        x: d => d.time, // given d in data, returns the (temporal) x-value\n        y: d => +d.value, // given d in data, returns the (quantitative) y-value\n        z: d => d.key, // given d in data, returns the (categorical) z-value\n        color: d => d && this._dataSetConfigs[d].color, // stroke color of line, as a constant or a function of *z*\n        title: d => cv.util.String.sprintf(format, d.value), // given d in data, returns the title text\n        curve: d3.curveLinear, // method of interpolation between points\n        marginTop: 12, // top margin, in pixels\n        marginRight: 24, // right margin, in pixels\n        marginBottom: 20, // bottom margin, in pixels\n        marginLeft: 24, // left margin, in pixels\n        width: 392, // outer width, in pixels\n        height: 192, // outer height, in pixels\n        aspectRatio: 392/192,\n        xType: d3.scaleTime, // type of x-scale\n        xFormat: timeFormat, // a format specifier string for the x-axis\n        yType: d3.scaleLinear, // type of y-scale\n        yFormat: undefined, // a format specifier string for the y-axis\n        yLabel: undefined, // a label for the y-axis\n        strokeLinecap: undefined, // stroke line cap of line\n        strokeLinejoin: undefined, // stroke line join of line\n        strokeWidth: 1.5, // stroke width of line\n        strokeOpacity: undefined, // stroke opacity of line\n        mixBlendMode: 'normal', // blend mode of lines\n        showArea: d => this._dataSetConfigs[d].showArea, // show area below the line,\n        gradient: d => this._dataSetConfigs[d].gradient, // use gradient for area\n        showXAxis: !this._element.hasAttribute('show-x-axis') || this._element.getAttribute('show-x-axis') === 'true',\n        showYAxis: !this._element.hasAttribute('show-y-axis') || this._element.getAttribute('show-y-axis') === 'true',\n        xPadding: 0.1 // amount of x-range to reserve to separate bars\n      };\n\n      this._initializing = false;\n      this.__updateTitle();\n      qx.locale.Manager.getInstance().addListener('changeLocale', this._onLocaleChanged, this);\n\n      // check if we have a read address for live updates\n      const datasetSources = Array.from(this._element.querySelectorAll(':scope > dataset')).map(elem => elem.getAttribute('src'));\n      const readAddresses = Array.from(element.querySelectorAll(':scope > cv-address:not([mode=\"write\"])')).filter(elem => datasetSources.includes(elem.getAttribute('target')));\n      if (readAddresses.length > 0) {\n        element.addEventListener('stateUpdate', ev => {\n          this.onStateUpdate(ev);\n          // cancel event here\n          ev.stopPropagation();\n        });\n      }\n    },\n\n    _onLocaleChanged() {\n      this.__updateTitle();\n      const popup = this._headerFooterParent.querySelector('div.popup.series');\n      if (popup) {\n        for (const option of popup.querySelectorAll('cv-option')) {\n          option.textContent = this._seriesToShort(option.getAttribute('key'));\n        }\n      }\n    },\n\n    onStateUpdate(ev) {\n      const targetDataset = this._element.querySelector(':scope > dataset[src=\"'+ev.detail.target+'\"]');\n      const config = this._dataSetConfigs ? this._dataSetConfigs[ev.detail.target] : null;\n      if (targetDataset && config) {\n        let ts = Date.now();\n        if (config.aggregationInterval) {\n          const mins = config.aggregationInterval * 60 * 1000;\n          ts = Math.round(ts / mins) * mins;\n        }\n        this._renderChart({\n          src: ev.detail.target,\n          time: ts,\n          value: ev.detail.state\n        }, true);\n      }\n    },\n\n    _onSeriesPrev() {\n      this.setCurrentPeriod(this.getCurrentPeriod()+1);\n    },\n\n    _onSeriesChange(select) {\n      if (this.getCurrentSeries() !== select) {\n        this._initializing = true;\n        // reset offset when series changed\n        this.resetCurrentPeriod();\n        this._initializing = false;\n        // reset configuration, we need a new one\n        this._chartConf = null;\n        this.setCurrentSeries(select);\n      }\n    },\n\n    _onSeriesNext() {\n      const currentPeriod = this.getCurrentPeriod();\n      if (currentPeriod > 0) {\n        this.setCurrentPeriod(currentPeriod-1);\n      }\n    },\n\n    refresh() {\n      this._loaded = false;\n      this.__updateTimeRange();\n      this._loadData();\n    },\n\n    // triggered after a change os series or period\n    _refreshData() {\n      const nextButton = this.getHeader('.next');\n      if (nextButton) {\n        if (this.getCurrentPeriod() === 0) {\n          nextButton.setAttribute('disabled', 'disabled');\n        } else {\n          nextButton.removeAttribute('disabled');\n        }\n      }\n\n      if (!this._initializing && this.getStartTime() > 0 && this.getEndTime() > 0) {\n        this._loaded = false;\n        this._loadData();\n      }\n      this.__updateTitle();\n    },\n\n    _applyCurrentSeries(series) {\n      const currentSelection = this.getHeader('.popup.series > cv-option[selected=\"selected\"]');\n      let alreadySelected = false;\n      if (currentSelection) {\n        if (currentSelection.getAttribute('key') !== series) {\n          currentSelection.removeAttribute('selected');\n        } else {\n          alreadySelected = true;\n        }\n      }\n      if (!alreadySelected) {\n        const newSelection = this.getHeader(`.popup.series > cv-option[key=\"${series}\"]`);\n        if (newSelection) {\n          newSelection.setAttribute('selected', 'selected');\n        }\n      }\n      this.__updateTimeRange();\n    },\n\n    __updateTimeRange() {\n      const series = this.getCurrentSeries();\n\n      const currentPeriod = this.getCurrentPeriod();\n      let end = new Date();\n      let periodStart = new Date();\n      let interval = 0;\n      switch (series) {\n        case 'hour':\n          interval = 60 * 60;\n          periodStart.setHours(periodStart.getHours() - currentPeriod, 0, 0, 0);\n          end.setHours(periodStart.getHours() + 1, 0, 0, 0);\n          break;\n\n        case 'day':\n          interval = 24 * 60 * 60;\n          periodStart.setDate(periodStart.getDate() - currentPeriod);\n          periodStart.setHours(0, 0, 0, 0);\n          end.setTime(periodStart.getTime());\n          end.setDate(periodStart.getDate() + 1);\n          end.setHours(0, 0, 0, 0);\n          break;\n\n        case 'week':\n          interval = 7 * 24 * 60 * 60;\n          periodStart.setDate(periodStart.getDate() - (periodStart.getDay() || 7) + 1 - 7 * currentPeriod);\n          periodStart.setHours(0, 0, 0, 0);\n          end.setTime(periodStart.getTime());\n          end.setDate(periodStart.getDate() + 7);\n          end.setHours(0, 0, 0, 0);\n          break;\n\n        case 'month':\n          interval = 30 * 24 * 60 * 60;\n          periodStart.setMonth(periodStart.getMonth() - currentPeriod);\n          periodStart.setDate(1);\n          periodStart.setHours(0, 0, 0, 0);\n          end.setTime(periodStart.getTime());\n          end.setMonth(periodStart.getMonth() + 1, 1);\n          end.setHours(0, 0, 0, 0);\n          break;\n\n        case 'year':\n          interval = 365 * 24 * 60 * 60;\n          periodStart.setFullYear(periodStart.getFullYear() - currentPeriod);\n          periodStart.setMonth(0, 1);\n          periodStart.setHours(0, 0, 0, 0);\n          end.setFullYear(periodStart.getFullYear() + 1);\n          end.setMonth(periodStart.getMonth() + 1, 1);\n          end.setHours(0, 0, 0, 0);\n          break;\n      }\n      let startTs = Math.round(periodStart.getTime()/1000);\n      let endTs = Math.round(end.getTime()/1000);\n      if (this._element.getAttribute('background') === 'true' || !this._element.hasAttribute('selection')) {\n        // when have no navigation, we can just use the old relative time range now - interval\n        startTs = endTs -  interval;\n      }\n      this.setStartTime(startTs);\n      this.setEndTime(endTs);\n      this._refreshData();\n    },\n\n    _loadData() {\n      if (this._loaded && Date.now() - this._loaded < 300000) {\n        // don't reload within 5 minutes\n        return;\n      }\n      const client = cv.io.BackendConnections.getClient();\n      if (!client) {\n        return;\n      }\n      if (!client.isConnected()) {\n        client.addListenerOnce('changeConnected', () => {\n          this._loadData();\n        });\n        return;\n      }\n      let url;\n      const dataSets = Array.from(this._element.querySelectorAll(':scope > dataset'));\n      const datasetSources = dataSets.map(elem => elem.getAttribute('src'));\n      for (const line of this._element.querySelectorAll(':scope > h-line, v-line')) {\n        if (line.hasAttribute('src') && !datasetSources.includes(line.getAttribute('src'))) {\n          dataSets.push(line);\n        }\n      }\n\n      const promises = [];\n      if (!this._dataSetConfigs) {\n        this._dataSetConfigs = {};\n        for (let dataSet of dataSets) {\n          let ts = {\n            showArea: dataSet.localName === 'dataset',\n            color: '#FF9900',\n            chartType: 'line',\n            element: dataSet,\n            title: '',\n            curve: 'linear',\n            aggregationInterval: 0\n          };\n\n          let attr;\n          let name;\n          let value;\n          for (let i = 0; i < dataSet.attributes.length; i++) {\n            attr = dataSet.attributes.item(i);\n            // CamelCase attribute names\n            name = attr.name\n              .split('-')\n              .map((part, i) => {\n                if (i > 0) {\n                  return `${part.substring(0, 1).toUpperCase()}${part.substring(1)}`;\n                }\n                return part;\n              })\n              .join('');\n            value = attr.value;\n            if (value === 'true' || value === 'false') {\n              value = value === 'true';\n            } else if (/^\\d+$/.test(value)) {\n              value = parseInt(value);\n            } else if (/^[\\d.]+$/.test(value)) {\n              value = parseFloat(value);\n            }\n            ts[name] = value;\n          }\n          let type = ts.src.split('://')[0].toLowerCase();\n          if (type.startsWith('plugin+')) {\n            ts.subType = type.substring(7);\n            type = type.substring(0, 6);\n          }\n          ts.type = type;\n          let key = ts.src;\n          switch (type) {\n            case 'flux':\n              ts.source = new cv.io.timeseries.FluxSource(ts.src, this);\n              if (ts.source.isInline()) {\n                const fluxQuery = dataSet.textContent.trim();\n                key = cv.ConfigCache.hashCode(fluxQuery).toString();\n                if (!this.__srcToHash[ts.src]) {\n                  this.__srcToHash[ts.src] = key;\n                } else {\n                  this.error(`duplicate flux inline source, you must append an unique anchor ID like ${ts.src}#12345`, ts.src);\n                }\n                ts.source.setQueryTemplate(fluxQuery);\n              }\n              break;\n\n            case 'openhab':\n              ts.source = new cv.io.timeseries.OpenhabPersistenceSource(ts.src, this);\n              break;\n\n            case 'rrd':\n              ts.source = new cv.io.timeseries.RRDSource(ts.src, this);\n              break;\n\n            case 'demo':\n              ts.source = new cv.io.timeseries.DemoSource(ts.src, this);\n              break;\n\n            case 'plugin':\n              ts.source = new cv.io.timeseries.Plugin(ts.src, this);\n              break;\n\n            default:\n              this.error('unknown chart data source type ' + type);\n              break;\n          }\n          ts.key = key;\n          this._dataSetConfigs[key] = ts;\n        }\n      }\n\n      for (const key in this._dataSetConfigs) {\n        const ts = this._dataSetConfigs[key];\n        let proxy = false;\n        let options = {ttl: this.getRefresh()};\n        if (ts.source) {\n          const config = ts.source.getRequestConfig(\n            this.getStartTime(),\n            this.getEndTime(),\n            this.getCurrentSeries(),\n            this.getCurrentPeriod()\n          );\n          url = config.url;\n          proxy = config.proxy;\n          options = Object.assign(options, config.options);\n\n          if (config.fetch === false) {\n            // data retrieval is handled by the source itself\n            promises.push(ts.source.fetchData(this.getStartTime(), this.getEndTime(), this.getCurrentSeries(), this.getCurrentPeriod())\n              .then(data => {\n                this.debug('data successfully loaded by source');\n                if (ts.source) {\n                  data = ts.source.processResponse(data);\n                }\n                if (!this._lastRefresh) {\n                  this._lastRefresh = Date.now();\n                }\n                return {\n                  data: data || [],\n                  ts: ts\n                };\n              })\n              .catch(err => {\n                this._onStatusError(ts, url, err);\n                return {\n                  data: [],\n                  ts: ts\n                };\n              })\n            );\n          }\n        }\n\n        if (!url) {\n          continue;\n        }\n\n        this.debug('loading', url);\n        promises.push(\n          cv.io.Fetch.cachedFetch(url, options, proxy, client)\n            .then(data => {\n              this.debug('successfully loaded', url);\n              if (ts.source) {\n                data = ts.source.processResponse(data);\n              }\n              if (!this._lastRefresh) {\n                this._lastRefresh = Date.now();\n              }\n              return {\n                data: data || [],\n                ts: ts\n              };\n            })\n            .catch(err => {\n              this._onStatusError(ts, url, err);\n              return {\n                data: [],\n                ts: ts\n              };\n            })\n        );\n      }\n      Promise.all(promises).then(responses => {\n        this._onSuccess(responses);\n      });\n    },\n\n    _onSuccess(data) {\n      let chartData = [];\n\n      for (let entry of data) {\n        let tsdata = entry.data;\n        if (tsdata !== null) {\n          // TODO: stacked bar times (entry.ts.chartType === 'stacked-bar') must be aggregated, they have to be at the same time index for stacking\n          const mins = entry.ts.aggregationInterval > 0 ? entry.ts.aggregationInterval * 60 * 1000 : 0;\n          for (let [time, value] of tsdata) {\n            chartData.push({\n              key: entry.ts.key,\n              src: entry.ts.src,\n              time: mins > 0\n                ? Math.round(time / mins) * mins : time,\n              value\n            });\n          }\n        }\n      }\n\n      if (this._element.hasAttribute('background') && this._element.getAttribute('background') === 'true') {\n        // no margins\n        this.__config = Object.assign(this.__config, {\n          marginRight: 0,\n          marginBottom: 0,\n          marginLeft: 0\n        });\n\n        // because we have no margins we need to cut the overflow on the tile\n        let tile = this._element.parentElement;\n        while (tile && tile.localName !== 'cv-tile') {\n          tile = tile.parentElement;\n        }\n        if (tile && tile.localName === 'cv-tile') {\n          tile.style.overflow = 'hidden';\n        }\n      }\n\n      // wait some time to let the element size settle\n      window.requestAnimationFrame(() => {\n        setTimeout(() => {\n          this._onRendered(chartData);\n        }, 100);\n      });\n    },\n\n    _onRendered(chartData, retries) {\n      if (this.__resizeTimeout) {\n        clearTimeout(this.__resizeTimeout);\n        this.__resizeTimeout = null;\n      }\n      if (this.isVisible()) {\n        const [width, height] = this._getSize();\n        if ((width < 20 || height < 10) && (!retries || retries <= 5)) {\n          // this makes no sense\n          this.__resizeTimeout = setTimeout(() => {\n            this._onRendered(chartData, retries > 0 ? retries + 1 : 1);\n          }, 150);\n        }\n        if (width < 20 || height < 10) {\n          // do nothing, these values are invalid\n          return;\n        }\n\n        this.__config.width = width;\n        this.__config.height = height;\n        d3.select(this._element).select('svg')\n          .attr('viewBox', `0, 0, ${width}, ${height}`);\n        if (chartData) {\n          this._renderChart(chartData);\n          this._loaded = Date.now();\n        }\n      }\n    },\n\n    _getSize() {\n      const parent = this._element.parentElement;\n      let padding = this._element.getAttribute('background') === 'true' ? 0 : 8;\n      let containerWidth = this._element.offsetWidth - padding;\n      let containerHeight = this._element.offsetHeight - padding;\n      let factor = 1;\n\n      const landscape = containerWidth > containerHeight;\n      let width = 0;\n      let height = 0;\n\n      if (landscape && containerHeight > 0) {\n        // obeying aspect ratio in landscape mode is not necessary\n        width = Math.round(containerWidth / factor);\n        height = Math.round(containerHeight / factor);\n      } else {\n        width = Math.round(containerWidth / factor);\n        height = width / cv.ui.structure.tile.components.Chart.DEFAULT_ASPECT_RATIO;\n      }\n      if (!this._element.style.height && (parent.localName === 'cv-popup' && (parent.getAttribute('fullscreen') === 'true') ||\n        (this._element.getAttribute('allow-fullscreen') === 'true' &&\n          parent.parentElement.classList.contains('fullscreen')))) {\n        // the parent container has height: auto, so we need to have one\n        this._element.style.height = (height + this.__config.marginTop + this.__config.marginBottom) + 'px';\n      }\n      return [width, height];\n    },\n\n    multiTimeFormat(formatsArray) {\n      /**\n       * @param date\n       */\n      function multiFormat(date) {\n        let i = 0;\n        let found = false;\n        let fmt = '%c';\n        while (!found && i < formatsArray.length) {\n          found = formatsArray[i][1](date);\n          if (found) {\n            fmt = formatsArray[i][0];\n          }\n          i++;\n        }\n        return fmt;\n      }\n      return date => d3.timeFormat(multiFormat(date))(date);\n    },\n\n    _onStatusError(ts, key, err) {\n      cv.core.notifications.Router.dispatchMessage('cv.charts.error', {\n        title: qx.locale.Manager.tr('Communication error'),\n        severity: 'urgent',\n        message: qx.locale.Manager.tr('URL: %1<br/><br/>Response:</br>%2', JSON.stringify(key), JSON.stringify(err))\n      });\n\n      this.error('Chart _onStatusError', ts, key, err);\n    },\n\n    /**\n     * Get svg element selection (create if not exists)\n     * @param parent d3.selection of the parent this element should be a child of\n     * @param nodeName {String} Element name\n     * @param classes {Array<String>} array of css classes used to identify this element\n     * @param attributes {Map<String, String>?} set these attributes if the element has to be created, when it already exists these are ignored\n     * @private\n     */\n    _getSvgElement(parent, nodeName, classes, attributes) {\n      let elem = parent.select(nodeName + '.' + classes.join('.'));\n      if (elem.empty()) {\n        elem = parent.append(nodeName).attr('class', classes.join(' '));\n        if (attributes) {\n          for (const name in attributes) {\n            elem.attr(name, attributes[name]);\n          }\n        }\n      }\n      return elem;\n    },\n\n    /**\n     * Copyright 2021 Observable, Inc.\n     * Released under the ISC license.\n     * https://observablehq.com/@d3/multi-line-chart\n     *\n     * @param data\n     * @param single\n     * @private\n     */\n    _renderChart(data, single) {\n      const config = this.__config;\n      const svg = d3.select(this._element).select('svg');\n\n      // Compute values.\n      let X;\n      let Y;\n      let Z;\n      let O;\n      let T;\n      if (single) {\n        if (!this._helpers) {\n          return;\n        }\n        X = this._helpers.X;\n        Y = this._helpers.Y;\n        Z = this._helpers.Z;\n        O = this._helpers.O;\n        T = this._helpers.T;\n        if (X[X.length-1] === data.time) {\n          // replace last value instead of adding one\n          Y[Y.length-1] = data.value;\n        } else {\n          X.push(data.time);\n          Y.push(data.value);\n          Z.push(data.key);\n          O.push(data);\n          T.push(config.title === undefined ? data.src : config.title === null ? null : config.title(data));\n\n          // cleanup\n          X.shift();\n          Y.shift();\n          Z.shift();\n          O.shift();\n          T.shift();\n        }\n      } else {\n        X = d3.map(data, config.x);\n        Y = d3.map(data, config.y);\n        Z = d3.map(data, config.z);\n        O = d3.map(data, d => d);\n        // Compute titles.\n        T = config.title === undefined ? Z : config.title === null ? null : d3.map(data, config.title);\n      }\n\n      // Compute default domains, and unique the z-domain.\n      let xDomain = d3.extent(X);\n      let minVal = 0;\n      let maxVal = 0;\n      if (this._element.hasAttribute('min')) {\n        const min = parseFloat(this._element.getAttribute('min'));\n        if (!isNaN(min)) {\n          minVal = min;\n        }\n      } else {\n        minVal = d3.min(Y);\n        if (minVal > 1.0) {\n          minVal -= 1;\n        }\n      }\n      if (this._element.hasAttribute('max')) {\n        const max = parseFloat(this._element.getAttribute('max'));\n        if (!isNaN(max)) {\n          maxVal = max;\n        }\n      } else {\n        maxVal = d3.max(Y);\n        if (maxVal > 1.0) {\n          // add some inner chart padding\n          maxVal += 1;\n        } else {\n          maxVal += 0.1;\n        }\n      }\n      const yDomain = [minVal, maxVal];\n      const zDomain = new d3.InternSet(Z);\n      // Omit any data not present in the z-domain.\n      const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n      if (config.showYAxis) {\n        const maxValue = config.yFormat ? config.yFormat(yDomain[1]) : yDomain[1].toFixed(maxVal < 1 ? 2 : 1);\n        // check if we need more space for the y-axis\n        if (maxValue.length >= 2) {\n          config.marginLeft = maxValue.length * 8;\n        }\n      }\n\n      const xTicks = config.width / 80;\n      const yTicks = config.height / 60;\n      const additionalXRangePadding = this._element.getAttribute('background') === 'true' ? 0 : 2;\n\n      const xRange = [config.marginLeft + additionalXRangePadding, config.width - config.marginRight - additionalXRangePadding]; // [left, right]\n      if (!this._chartConf) {\n        const yRange = [config.height - config.marginBottom, config.marginTop]; // [bottom, top]\n\n        // initialize everything once\n        this._chartConf = {\n          // x/y scales\n          x: config.xType().range(xRange),\n          y: config.yType().range(yRange)\n        };\n        this._chartConf.xAxis = config.showXAxis\n          ? d3.axisBottom(this._chartConf.x)\n            .ticks(xTicks)\n            .tickSizeOuter(0)\n            .tickFormat(config.xFormat)\n          : undefined;\n        this._chartConf.yAxis = config.showYAxis\n          ? d3.axisLeft(this._chartConf.y).ticks(yTicks, config.yFormat)\n          : undefined;\n\n\n        // add elements\n        const showGrid = this._element.hasAttribute('show-grid') ? this._element.getAttribute('show-grid') : 'xy';\n        if (showGrid.includes('x')) {\n          this._chartConf.xGrid = d3.axisBottom(this._chartConf.x).ticks(xTicks)\n            .tickSize(-config.height + config.marginBottom + config.marginTop)\n            .tickFormat('');\n          this._getSvgElement(svg, 'g', ['grid', 'x'], {\n            transform: `translate(0,${config.height - config.marginBottom})`\n          })\n            .call(this._chartConf.xGrid);\n        }\n        if (showGrid.includes('y')) {\n          this._chartConf.yGrid = d3.axisLeft(this._chartConf.y).ticks(yTicks)\n            .tickSize(-config.width + config.marginRight + config.marginLeft)\n            .tickFormat('');\n\n          this._getSvgElement(svg, 'g', ['grid', 'y'], {\n            transform: `translate(${config.marginLeft},0)`\n          })\n            .call(this._chartConf.yGrid);\n        }\n\n        if (config.showXAxis) {\n          this._getSvgElement(svg, 'g', ['axis', 'x'])\n            .attr('transform', `translate(0,${config.height - config.marginBottom})`)\n            .call(this._chartConf.xAxis);\n        }\n\n        if (config.showYAxis) {\n          let yAxisElement = this._getSvgElement(svg, 'g', ['axis', 'y'])\n            .attr('transform', `translate(${config.marginLeft},0)`);\n\n          if (config.label && yAxisElement.select('text').empty()) {\n            yAxisElement.append('text')\n              .attr('x', -config.marginLeft)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(config.yLabel);\n          }\n\n          yAxisElement\n            .call(this._chartConf.yAxis)\n            .call(g => g.select('.domain').remove());\n        }\n\n        // find chart types\n        const lineGroups = new Map();\n        const areaGroups = new Map();\n        const barGroups = new Map();\n        const stackedBarGroups = new Map();\n        const lineFunctions = {};\n        const areaFunctions = {};\n        let xBar;\n        let xzScale;\n\n        for (const key in this._dataSetConfigs) {\n          switch (this._dataSetConfigs[key].chartType) {\n            case 'line': {\n              const idx = I.filter(i => Z[i] === key);\n              lineGroups.set(key, idx);\n              const curveName = this._dataSetConfigs[key].curve || 'linear';\n              if (!Object.prototype.hasOwnProperty.call(lineFunctions, curveName)) {\n                let curveFunction;\n                switch (curveName) {\n                  case 'linear':\n                    curveFunction = d3.curveLinear;\n                    break;\n\n                  case 'step':\n                    curveFunction = d3.curveStep;\n                    break;\n\n                  case 'natural':\n                    curveFunction = d3.curveNatural;\n                    break;\n                }\n\n                if (curveFunction) {\n                  // Construct a line generator.\n                  lineFunctions[curveName] = d3\n                    .line()\n                    .curve(curveFunction)\n                    .x(i => this._chartConf.x(this._helpers.X[i]))\n                    .y(i => this._chartConf.y(this._helpers.Y[i]));\n                }\n\n                if (this._dataSetConfigs[key].chartType === 'line' && typeof config.showArea === 'function' && config.showArea(key)) {\n                  areaGroups.set(key, idx);\n                  if (curveFunction) {\n                    // Construct a line generator.\n                    const minY = this._chartConf.y.range()[0];\n                    areaFunctions[curveName] = d3\n                      .area()\n                      .curve(curveFunction)\n                      .x(i => this._chartConf.x(this._helpers.X[i]))\n                      .y0(() => minY)\n                      .y1(i => this._chartConf.y(this._helpers.Y[i]));\n                  }\n                }\n              }\n              break;\n            }\n\n            case 'bar':\n              barGroups.set(key, I.filter(i => Z[i] === key));\n              if (!xBar) {\n                xBar = d3.scaleBand().range(this._chartConf.x.range()).padding(config.xPadding);\n              }\n              if (!xzScale) {\n                xzScale = d3.scaleBand().padding(0.05);\n              }\n              break;\n\n            case 'stacked-bar':\n              stackedBarGroups.set(key, I.filter(i => Z[i] === key));\n              break;\n          }\n        }\n\n        this._chartConf.lineGroups = lineGroups;\n        this._chartConf.areaGroups = areaGroups;\n        this._chartConf.barGroups = barGroups;\n        this._chartConf.stackedBarGroups = stackedBarGroups;\n        this._chartConf.lineFunctions = lineFunctions;\n        this._chartConf.areaFunctions = areaFunctions;\n        this._chartConf.xBar = xBar;\n        if (xzScale) {\n          this._chartConf.xz = xzScale;\n        }\n\n        // prepare elements for chart elements\n        if (this._chartConf.lineGroups.size > 0) {\n          this._chartConf.lineContainer = this._getSvgElement(svg, 'g', ['line'], {\n            fill: 'none',\n            stroke: typeof config.color === 'string' ? config.color : null,\n            'stroke-linecap': config.strokeLinecap,\n            'stroke-linejoin': config.strokeLinejoin,\n            'stroke-width': config.strokeWidth,\n            'stroke-opacity': config.strokeOpacity\n          });\n        }\n        if (this._chartConf.areaGroups.size > 0) {\n          this._chartConf.areaContainer = this._getSvgElement(svg, 'g', ['area'], {\n            stroke: 'none',\n            fill: typeof config.color === 'string' ? this.__opacifyColor(config.color, '30') : null\n          });\n        }\n        if (this._chartConf.barGroups.size > 0) {\n          this._chartConf.barContainer = this._getSvgElement(svg, 'g', ['bars']);\n        }\n      }\n\n      // apply domains to scales\n      this._chartConf.x.domain(xDomain);\n      this._chartConf.y.domain(yDomain);\n\n      this._helpers = { X, Y, I, T, Z, O };\n\n      if (this._chartConf.xAxis) {\n        this._getSvgElement(svg, 'g', ['axis', 'x'])\n          .call(this._chartConf.xAxis);\n      }\n\n      if (this._chartConf.yAxis) {\n        this._getSvgElement(svg, 'g', ['axis', 'y'])\n          .call(this._chartConf.yAxis);\n      }\n      if (this._chartConf.xBar) {\n        this._chartConf.xBar.domain(new d3.InternSet(X));\n      }\n      if (this._chartConf.xz) {\n        this._chartConf.xz.domain(zDomain);\n        this._chartConf.x.range([xRange[0], xRange[1] - this._chartConf.xBar.bandwidth()]);\n        this._chartConf.xz.range([0, this._chartConf.xBar.bandwidth()]);\n      }\n\n      // update groups\n      for (const key of this._chartConf.lineGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key);\n        this._chartConf.lineGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.areaGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.areaGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.barGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.barGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.stackedBarGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.stackedBarGroups.set(key, idx);\n      }\n\n      this.__config = config;\n      this._dot = svg.select('g.dot');\n\n      // show zero line in grid for non-zero based charts\n      if (minVal !== 0) {\n        let targetContainer = this._chartConf.lineContainer || this._chartConf.areaContainer || this._chartConf.barContainer;\n        let yValue = 0.0;\n        let data = [0, X.length-1];\n        let lineElem = targetContainer.select('.zero-line');\n        if (lineElem.empty()) {\n          lineElem = targetContainer.append('line')\n            .attr('class', 'zero-line')\n            .attr('stroke', 'currentColor')\n            .attr('stroke-opacity', '15%');\n        }\n        if (X.length > 0) {\n          const x1 = this._chartConf.x(X[data[0]]);\n          const x2 = this._chartConf.x(X[X.length - 1]); // always draw until end of chart (not until end of src dataset)\n          const y = this._chartConf.y(yValue);\n          lineElem\n            .attr('x1', x1)\n            .attr('x2', x2)\n            .attr('y1', y)\n            .attr('y2', y);\n        }\n      }\n\n      const t = d3.transition()\n        .duration(single ? 0 : 500)\n        .ease(d3.easeLinear);\n\n      if (this._chartConf.lineContainer) {\n        this._chartConf.lineContainer\n          .selectAll('path')\n          .data(new Map([...this._chartConf.lineGroups].filter(([k, v]) => {\n            const config = this._dataSetConfigs[k];\n            // do not use h-/v-line here, only datasets\n            return config.element.localName === 'dataset';\n          })))\n          .join(\n            enter => enter.append('path')\n              .style('mix-blend-mode', config.mixBlendMode)\n              .attr('stroke', typeof config.color === 'function' ? p => config.color(p[0]) : null)\n          )\n          .transition(t)\n          .attr('d', d => {\n            const curveName = this._dataSetConfigs[d[0]].curve || 'linear';\n            const func = this._chartConf.lineFunctions[curveName] || this._chartConf.lineFunctions.linear;\n            const val = func(d[1]);\n            return val;\n          });\n      }\n\n      // Add the area\n      if (this._chartConf.areaContainer) {\n        this._chartConf.areaContainer\n          .selectAll('path')\n          .data(this._chartConf.areaGroups)\n          .join(\n            enter => enter.append('path')\n              .style('mix-blend-mode', config.mixBlendMode)\n              .attr('fill', typeof config.color === 'function' ? p => {\n                const color = config.color(p[0]);\n                const gradient = typeof config.gradient === 'function' ? config.gradient(p[0]) : false;\n                if (gradient) {\n                  const gradId = `${color.replaceAll(/\\W/g, '')}Grad`;\n                  let lg = svg.select('#' + gradId);\n                  if (lg.empty()) {\n                    const lg = svg.append('defs').append('linearGradient')\n                      .attr('id', gradId)\n                      .attr('x1', '0%')\n                      .attr('x2', '0%')\n                      .attr('y1', '0%')\n                      .attr('y2', '100%');\n                    \n                    lg.append('stop')\n                      .attr('offset', '0%')\n                      .style('stop-color', color)\n                      .style('stop-opacity', 0.7);\n\n                    lg.append('stop')\n                      .attr('offset', '100%')\n                      .style('stop-color', color)\n                      .style('stop-opacity', 0);\n                  }\n                  return 'url(#' + gradId + ')';\n                } \n                  return this.__opacifyColor(color, '30');\n              }: null)\n          )\n          .transition(t)\n          .attr('d', d => {\n            const curveName = this._dataSetConfigs[d[0]].curve || 'linear';\n            const func = this._chartConf.areaFunctions[curveName] || this._chartConf.areaFunctions.linear;\n            return func(d[1]);\n          });\n      }\n\n      if (this._chartConf.barContainer) {\n        const yMin = this._chartConf.y.range()[0];\n        this._chartConf.barContainer\n          .selectAll('g')\n          .data(this._chartConf.barGroups)\n          .join('g')\n          .attr('fill', typeof config.color === 'function' ? d => config.color(d[0]) : null)\n          .selectAll('rect')\n          .data(d => {\n            return d[1].map(val => {\n              return {\n                key: d[0],\n                value: val\n              };\n            });\n          })\n          .join('rect')\n          .attr('x', d => {\n            const x = this._chartConf.x(X[d.value]);\n            const xz =  this._chartConf.xz(d.key);\n            return x + xz;\n          })\n          .attr('y', d => this._chartConf.y(Y[d.value]))\n          .attr('width', this._chartConf.xz.bandwidth())\n          .transition(t)\n          .attr('height', d => yMin - this._chartConf.y(Y[d.value]));\n      }\n\n      // add fixed/calculated lines\n      this.__addLines(X, Y);\n\n      // dot must be added last\n      const dot = svg.select('g.dot');\n      if (dot.empty()) {\n        svg.append('g')\n          .attr('class', 'dot')\n          .attr('display', 'none')\n          .attr('fill', 'currentColor')\n          .append('circle')\n          .attr('r', 2.5);\n      }\n      this._dot = svg.select('g.dot');\n    },\n\n    __addLines(X, Y) {\n      for (const [i, line] of this._element.querySelectorAll(':scope > h-line, v-line').entries()) {\n        let key = line.getAttribute('src');\n        if (this.__srcToHash[key]) {\n          key = this.__srcToHash[key];\n        }\n        const name = line.localName;\n        let targetContainer = null;\n        let data = null;\n        let value = NaN;\n        if (key) {\n          if (this._chartConf.lineGroups.get(key)) {\n            targetContainer = this._chartConf.lineContainer;\n            data = this._chartConf.lineGroups.get(key);\n          } else if (this._chartConf.areaGroups.get(key)) {\n            targetContainer = this._chartConf.areaContainer;\n            data = this._chartConf.areaGroups.get(key);\n          } else if (this._chartConf.barGroups.get(key)) {\n            targetContainer = this._chartConf.barContainer;\n            data = this._chartConf.barGroups.get(key);\n          }\n          if (!data) {\n            this.error('no data found for key ' + key);\n            continue;\n          }\n          if (name === 'h-line') {\n            // we can only do calculations for values on the Y-Axis for horizontal lines\n            switch (line.getAttribute('value')) {\n              case 'avg': {\n                let sum = 0.0;\n                for (const di of data) {\n                  sum += Y[di];\n                }\n                value = sum / data.length;\n                break;\n              }\n\n              case 'max':\n                value = d3.max(Y.filter((v, i) => data.includes(i), d => d));\n                break;\n\n              case 'min':\n                value = d3.min(Y.filter((v, i) => data.includes(i), d => d));\n                break;\n\n              default:\n                this.error('unknown value calculation: ' + line.getAttribute('value'));\n                break;\n            }\n          } else {\n            value = X[data[0]];\n          }\n        } else {\n          targetContainer = this._chartConf.lineContainer || this._chartConf.areaContainer || this._chartConf.barContainer;\n          if (name === 'h-line') {\n            value = parseFloat(line.getAttribute('value'));\n          } else {\n            value = new Date(line.getAttribute('value')).getTime();\n          }\n          data = [0, X.length-1];\n        }\n        if (!targetContainer) {\n          continue;\n        }\n\n        let lineElem = targetContainer.select(`.${name}-${i}`);\n        if (isNaN(value) && !lineElem.empty()) {\n          // remove line\n          lineElem.remove();\n          if (line.getAttribute('show-value') === 'true') {\n            targetContainer.select(`.${name}-value-${i}`).remove();\n          }\n        } else if (!isNaN(value)) {\n          const color = line.getAttribute('color') || 'currentColor';\n          if (lineElem.empty()) {\n            lineElem = targetContainer.append('line')\n              .attr('class', `${name}-${i}`)\n              .attr('stroke', color);\n          }\n          let formatAttribute = 'y-format';\n          let x1;\n          let x2;\n          let y1;\n          let y2 = 0;\n          if (name === 'h-line') {\n            const [xMin, xMax] = this._chartConf.x.domain();\n            x1 = this._chartConf.x(xMin);\n            x2 = this._chartConf.x(xMax); // always draw until end of chart (not until end of src dataset)\n            y1 = this._chartConf.y(value);\n            y2 = y1;\n          } else {\n            const [yMin, yMax] = this._chartConf.y.domain();\n            y1 = this._chartConf.y(yMin);\n            y2 = this._chartConf.y(yMax);\n            x1 = this._chartConf.x(value);\n            x2 = x1;\n\n            formatAttribute = 'x-format';\n          }\n\n          lineElem\n            .attr('x1', x1)\n            .attr('x2', x2)\n            .attr('y1', y1)\n            .attr('y2', y2);\n\n          if (line.getAttribute('show-value') === 'true') {\n            const format = line.hasAttribute('format') ? line.getAttribute('format')\n              : (this._element.hasAttribute(formatAttribute) ? this._element.getAttribute(formatAttribute) : '%s');\n            let valueElem = targetContainer.select(`.${name}-value-${i}`);\n            if (valueElem.empty()) {\n              valueElem = targetContainer.append('text')\n                .attr('class', `${name}-value-${i}`)\n                .attr('fill', line.getAttribute('value-color') || color)\n                .attr('font-size', '10')\n                .attr('text-anchor', 'start');\n            }\n            if (name === 'h-line') {\n              // show value on right side of the chart\n              valueElem\n                .attr('x', x2 + 2)\n                .attr('y', y1 + 5)\n                .text(cv.util.String.sprintf(format, value));\n            } else {\n              // show value on top of the chart\n              valueElem\n                .attr('x', x1 + 2)\n                .attr('y', y2)\n                .text(d3.timeFormat(format)(value));\n            }\n          }\n        }\n      }\n    },\n\n    _onPointerEntered(ev) {\n      if (this._loaded) {\n        this.__toolTipTimer = setTimeout(() => {\n          this.__activateTooltip(true, ev);\n          this.__toolTipTimer = null;\n        }, 500);\n      }\n    },\n\n    _onPointerLeft(ev) {\n      if (this.__toolTipTimer) {\n        clearTimeout(this.__toolTipTimer);\n      }\n\n      if (this._loaded) {\n        if (ev.relatedTarget !== this._tooltip) {\n          this.__activateTooltip(false);\n        }\n      }\n    },\n\n    __activateTooltip(val, ev) {\n      this.__showTooltip = val;\n      if (val) {\n        if (this._dot) {\n          this._dot.attr('display', null);\n          this._dot.raise();\n        }\n        this._tooltip.style.display = 'block';\n        this._onPointerMoved(null, true);\n      } else {\n        if (this._dot) {\n          this._dot.attr('display', 'none');\n        }\n        const svg = d3.select(this._element).select('svg');\n        svg.node().value = null;\n        svg.dispatch('input', {bubbles: true});\n        this._tooltip.style.display = 'none';\n      }\n    },\n\n    _onPointerMoved(event, center) {\n      if (this._loaded && this.__showTooltip) {\n        let xm = 0;\n        let ym = 0;\n        if (event) {\n          [xm, ym] = d3.pointer(event);\n        } else if (center) {\n          xm = this.__config.width/2;\n          ym = this.__config.height/2;\n        } else {\n          return;\n        }\n        const {X, Y, I, T, Z, O} = this._helpers;\n        const {x, y, xz} = this._chartConf;\n        const i = d3.least(I, i => Math.hypot(x(X[i]) - xm, y(Y[i]) - ym));\n        const scaleFactorX = this._element.offsetWidth / this.__config.width;\n        const scaleFactorY = this._element.offsetHeight / this.__config.height;\n        // closest point\n        const xOffset = xz ? (xz(Z[i]) + (typeof xz.bandwidth === 'function' ? xz.bandwidth() / 2 : 0)) : 0;\n        this._dot.attr('transform', `translate(${x(X[i]) + xOffset},${y(Y[i])})`);\n        if (T) {\n          const cursorOffset = event && event.pointerType === 'mouse' ? 16 : 40;\n          const timeString = this.__config.xFormat(new Date(X[i]));\n          let top = ym * scaleFactorY - this._tooltip.offsetHeight;\n          if (top < 0) {\n            top += cursorOffset + this._tooltip.offsetHeight;\n          } else {\n            top -= cursorOffset;\n          }\n\n          let left = xm * scaleFactorX;\n          if (left > this._element.offsetWidth / 2) {\n            left -= this._tooltip.offsetWidth + cursorOffset;\n          } else {\n            left += cursorOffset;\n          }\n\n          const key = Z[i];\n          const lineTitle = this._dataSetConfigs[key] && this._dataSetConfigs[key].title ? this._dataSetConfigs[key].title + ': ' : '';\n          this._tooltip.innerHTML = `${timeString}<br/>${lineTitle}${T[i]}`;\n          this._tooltip.style.left = left + 'px';\n          this._tooltip.style.top = top + 'px';\n        }\n        d3.select(this._element).select('svg').property('value', O[i]).dispatch('input', {bubbles: true});\n      }\n    },\n\n    __updateTitle() {\n      if (this._navigationEnabled) {\n        let title = this.getHeader('label.title span');\n        if (title) {\n          let chartTitle = this._titleString || '';\n          title.textContent = (chartTitle ? chartTitle + ' - ' : '') + this._shownDateRange();\n        }\n      }\n    },\n\n    /**\n     * Converts series to a shot string that is shown in a select box\n     * @param series\n     * @private\n     */\n    _seriesToShort(series) {\n      switch (series) {\n        case 'hour':\n          return qx.locale.Manager.tr('Hour');\n\n        case 'day':\n          return qx.locale.Manager.tr('Day');\n\n        case 'week':\n          return qx.locale.Manager.tr('Week');\n\n        case 'month':\n          return qx.locale.Manager.tr('Month');\n\n        case 'year':\n          return qx.locale.Manager.tr('Year');\n      }\n      return '';\n    },\n\n    /**\n     * Convert the currently shown date range into a human-readable string\n     * @private\n     */\n    _shownDateRange() {\n      const series = this.getCurrentSeries();\n      const currentPeriod = this.getCurrentPeriod();\n      const date = new Date();\n      let format = new qx.util.format.DateFormat();\n      switch (series) {\n        case 'hour':\n          date.setHours(date.getHours() - currentPeriod, 0, 0);\n          format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('hmm', 'h:mm'));\n          return format.format(date);\n\n        case 'day':\n          if (currentPeriod === 0) {\n            return qx.locale.Manager.tr('today');\n          } else if (currentPeriod === 1) {\n            return qx.locale.Manager.tr('yesterday');\n          }\n          date.setDate(date.getDate() - currentPeriod);\n          format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('MMMd', 'd. MMM'));\n          return format.format(date);\n\n        case 'week':\n          date.setDate(date.getDate() - currentPeriod*7);\n          return qx.locale.Manager.trc('CW = calendar week', 'CW %1', this.getWeekNumber(date));\n\n        case 'month':\n          date.setMonth(date.getMonth() - currentPeriod);\n          if (date.getFullYear() === new Date().getFullYear()) {\n            // no year needed\n            format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('MMM', 'MMM'));\n          } else {\n            format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('yyMMM', 'MMM yy'));\n          }\n          return format.format(date);\n\n        case 'year':\n          return date.getFullYear() - currentPeriod;\n      }\n      return '';\n    },\n\n   getWeekNumber(d) {\n      d = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      // Set to the nearest Thursday: current date + 4 - current day number\n      d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n      // Get first day of year\n      const yearStart = new Date(d.getFullYear(), 0, 1);\n      // Calculate full weeks to the nearest Thursday\n      return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    },\n\n    /**\n     * add opacity to color\n     * @param color\n     * @param opacity {string} hex number 0 - 255\n     * @return {string|*}\n     * @private\n     */\n    __opacifyColor(color, opacity) {\n      if (color.startsWith('var(')) {\n        color = getComputedStyle(document.documentElement).getPropertyValue(color.substring(4, color.length-1));\n      }\n      if (color.startsWith('rgb(')) {\n        return 'rgba(' + color.substring(4, color.length-1) + ', ' + (parseInt(opacity, 16) / 255).toFixed(2) + ')';\n      } else if (color.startsWith('#') && color.length === 7) {\n        return color + opacity;\n      }\n      return color;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._chartConf = null;\n    this._helpers = null;\n    qx.locale.Manager.getInstance().removeListener('changeLocale', this._onLocaleChanged, this);\n  },\n\n  defer(QxClass) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'chart',\n      class extends QxConnector {\n        constructor() {\n          super(QxClass);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}