{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "include",
    "MVisibility",
    "MRefresh",
    "MResize",
    "statics",
    "ChartCounter",
    "DEFAULT_ASPECT_RATIO",
    "JS_LOADED",
    "_ref",
    "_callee",
    "check",
    "timer",
    "counter",
    "_callee$",
    "_context",
    "window",
    "d3",
    "util",
    "ScriptLoader",
    "includeScript",
    "ResourceManager",
    "getInstance",
    "toUri",
    "event",
    "Timer",
    "addListener",
    "_x",
    "_x2",
    "locale",
    "Manager",
    "getLanguage",
    "formatDefaultLocale",
    "decimal",
    "Number",
    "getDecimalSeparator",
    "translate",
    "toString",
    "thousands",
    "getGroupSeparator",
    "grouping",
    "currency",
    "timeFormatDefaultLocale",
    "dateTime",
    "date",
    "time",
    "periods",
    "Date",
    "getAmMarker",
    "getPmMarker",
    "days",
    "getDayNames",
    "map",
    "t",
    "shortDays",
    "months",
    "getMonthNames",
    "shortMonths",
    "CONFIG",
    "properties",
    "currentSeries",
    "init",
    "currentPeriod",
    "startTime",
    "endTime",
    "members",
    "_id",
    "_downloadedImage",
    "_url",
    "_headers",
    "_request",
    "_width",
    "_height",
    "_loaded",
    "_dataSetConfigs",
    "_initializing",
    "_navigationEnabled",
    "__toolTipTimer",
    "__showTooltip",
    "__debouncedOnResize",
    "__resizeTimeout",
    "__startTs",
    "__endTs",
    "_dot",
    "_svg",
    "_tooltip",
    "_titleString",
    "__helpers",
    "__config",
    "_chartConf",
    "_init",
    "_this",
    "_callee2",
    "element",
    "chartId",
    "inBackground",
    "title",
    "span",
    "seriesSelection",
    "s",
    "button",
    "_span",
    "popup",
    "option",
    "_iterator",
    "_step",
    "_s",
    "_button",
    "popupAddress",
    "tileAddress",
    "parent",
    "tileWidget",
    "svg",
    "noToolTips",
    "format",
    "timeFormat",
    "formatString",
    "datasetSources",
    "readAddresses",
    "_callee2$",
    "_context2",
    "_checkIfWidget",
    "_element",
    "Chart",
    "setAttribute",
    "hasAttribute",
    "getAttribute",
    "getHeader",
    "document",
    "createElement",
    "classList",
    "add",
    "appendChild",
    "textContent",
    "appendToHeader",
    "trim",
    "split",
    "n",
    "toLowerCase",
    "setCurrentSeries",
    "getCurrentSeries",
    "includes",
    "_buttonFactory",
    "tr",
    "addEventListener",
    "_onSeriesPrev",
    "parentElement",
    "insertBefore",
    "_createForOfIteratorHelper",
    "_seriesToShort",
    "ev",
    "style",
    "display",
    "_onSeriesChange",
    "target",
    "stopPropagation",
    "preventDefault",
    "e",
    "f",
    "getComputedStyle",
    "getPropertyValue",
    "disabled",
    "_onSeriesNext",
    "concat",
    "data",
    "Model",
    "onUpdate",
    "nodeName",
    "onStateUpdate",
    "body",
    "contains",
    "_onRendered",
    "setRefresh",
    "parseInt",
    "select",
    "append",
    "on",
    "_onPointerEntered",
    "bind",
    "_onPointerMoved",
    "_onPointerLeft",
    "y",
    "targetTouches",
    "clientY",
    "pathRect",
    "querySelector",
    "getBoundingClientRect",
    "height",
    "passive",
    "multiTimeFormat",
    "d",
    "getSeconds",
    "getMinutes",
    "getHours",
    "getDay",
    "getDate",
    "getMonth",
    "x",
    "z",
    "src",
    "color",
    "String",
    "sprintf",
    "curve",
    "curveLinear",
    "marginTop",
    "marginRight",
    "marginBottom",
    "marginLeft",
    "width",
    "aspectRatio",
    "xType",
    "scaleTime",
    "xFormat",
    "yType",
    "scaleLinear",
    "yFormat",
    "yLabel",
    "strokeLinecap",
    "strokeLinejoin",
    "strokeWidth",
    "strokeOpacity",
    "mixBlendMode",
    "showArea",
    "showXAxis",
    "showYAxis",
    "xPadding",
    "__updateTitle",
    "Array",
    "from",
    "querySelectorAll",
    "elem",
    "filter",
    "targetDataset",
    "detail",
    "config",
    "ts",
    "now",
    "aggregationInterval",
    "mins",
    "Math",
    "round",
    "_renderChart",
    "setCurrentPeriod",
    "getCurrentPeriod",
    "resetCurrentPeriod",
    "refresh",
    "_loadData",
    "_refreshData",
    "nextButton",
    "removeAttribute",
    "getStartTime",
    "getEndTime",
    "_applyCurrentSeries",
    "series",
    "currentSelection",
    "alreadySelected",
    "newSelection",
    "__updateTimeRange",
    "__P_75_0",
    "end",
    "periodStart",
    "interval",
    "setHours",
    "setDate",
    "setMonth",
    "setFullYear",
    "getFullYear",
    "startTs",
    "getTime",
    "endTs",
    "setStartTime",
    "setEndTime",
    "_this2",
    "client",
    "io",
    "BackendConnections",
    "getClient",
    "isConnected",
    "addListenerOnce",
    "url",
    "dataSets",
    "promises",
    "_iterator2",
    "_step2",
    "dataSet",
    "chartType",
    "attr",
    "attributes",
    "item",
    "part",
    "substring",
    "toUpperCase",
    "join",
    "test",
    "parseFloat",
    "source",
    "timeseries",
    "FluxSource",
    "isInline",
    "setQueryTemplate",
    "OpenhabPersistenceSource",
    "RRDSource",
    "DemoSource",
    "_loop",
    "proxy",
    "options",
    "ttl",
    "getRefresh",
    "getRequestConfig",
    "assign",
    "debug",
    "Fetch",
    "cachedFetch",
    "processResponse",
    "_lastRefresh",
    "_onStatusError",
    "all",
    "responses",
    "_onSuccess",
    "_this3",
    "chartData",
    "_iterator3",
    "_step3",
    "tsdata",
    "_iterator4",
    "_step4",
    "_step4$value",
    "_slicedToArray",
    "localName",
    "overflow",
    "requestAnimationFrame",
    "setTimeout",
    "retries",
    "_this4",
    "clearTimeout",
    "isVisible",
    "_this$_getSize",
    "_getSize",
    "_this$_getSize2",
    "padding",
    "containerWidth",
    "offsetWidth",
    "containerHeight",
    "offsetHeight",
    "factor",
    "landscape",
    "formatsArray",
    "multiFormat",
    "found",
    "fmt",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "severity",
    "message",
    "JSON",
    "stringify",
    "_getSvgElement",
    "classes",
    "empty",
    "single",
    "_this5",
    "X",
    "Y",
    "Z",
    "O",
    "T",
    "_helpers",
    "shift",
    "xDomain",
    "extent",
    "minVal",
    "zeroBased",
    "min",
    "maxVal",
    "max",
    "yDomain",
    "zDomain",
    "InternSet",
    "I",
    "range",
    "has",
    "maxValue",
    "toFixed",
    "xTicks",
    "yTicks",
    "additionalXRangePadding",
    "xRange",
    "yRange",
    "xAxis",
    "axisBottom",
    "ticks",
    "tickSizeOuter",
    "tickFormat",
    "yAxis",
    "axisLeft",
    "showGrid",
    "xGrid",
    "tickSize",
    "transform",
    "yGrid",
    "yAxisElement",
    "label",
    "text",
    "g",
    "remove",
    "lineGroups",
    "Map",
    "areaGroups",
    "barGroups",
    "stackedBarGroups",
    "lineFunctions",
    "areaFunctions",
    "xBar",
    "xzScale",
    "_loop2",
    "idx",
    "set",
    "curveName",
    "curveFunction",
    "curveStep",
    "curveNatural",
    "line",
    "minY",
    "area",
    "y0",
    "y1",
    "scaleBand",
    "xz",
    "size",
    "lineContainer",
    "fill",
    "stroke",
    "areaContainer",
    "__opacifyColor",
    "barContainer",
    "domain",
    "bandwidth",
    "_iterator5",
    "_step5",
    "_loop3",
    "_iterator6",
    "_step6",
    "_loop4",
    "_iterator7",
    "_step7",
    "_loop5",
    "_iterator8",
    "_step8",
    "_loop6",
    "targetContainer",
    "yValue",
    "lineElem",
    "x1",
    "x2",
    "transition",
    "duration",
    "ease",
    "easeLinear",
    "selectAll",
    "enter",
    "p",
    "func",
    "linear",
    "yMin",
    "_iterator9",
    "entries",
    "_step9",
    "_loop7",
    "_step9$value",
    "NaN",
    "get",
    "sum",
    "_iterator10",
    "_step10",
    "di",
    "v",
    "valueElem",
    "_ret",
    "dot",
    "_this6",
    "__activateTooltip",
    "relatedTarget",
    "__P_75_11",
    "raise",
    "node",
    "dispatch",
    "bubbles",
    "center",
    "xm",
    "ym",
    "_d3$pointer",
    "pointer",
    "_d3$pointer2",
    "_this$_helpers",
    "_this$_chartConf",
    "least",
    "hypot",
    "scaleFactorX",
    "scaleFactorY",
    "xOffset",
    "cursorOffset",
    "pointerType",
    "timeString",
    "top",
    "left",
    "lineTitle",
    "innerHTML",
    "property",
    "icon",
    "_button$classList",
    "_toConsumableArray",
    "__P_75_9",
    "chartTitle",
    "_shownDateRange",
    "DateFormat",
    "getDateTimeFormat",
    "trc",
    "getWeekNumber",
    "yearStart",
    "ceil",
    "__P_75_10",
    "opacity",
    "startsWith",
    "destruct",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "_QxConnector",
    "_inherits",
    "_class",
    "_super",
    "_createSuper",
    "_classCallCheck",
    "_createClass",
    "QxConnector"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Chart.js"
  ],
  "sourcesContent": [
    "/* Chart.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/* eslint-disable arrow-body-style */\n/**\n * Shows an chart.\n * @asset(libs/d3.min.js)\n * @ignore(d3)\n */\nqx.Class.define('cv.ui.structure.tile.components.Chart', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n  include: [\n    cv.ui.structure.tile.MVisibility,\n    cv.ui.structure.tile.MRefresh,\n    cv.ui.structure.tile.MResize\n  ],\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    ChartCounter: 0,\n    DEFAULT_ASPECT_RATIO: 392/192,\n\n    JS_LOADED: new Promise(async (resolve, reject) => {\n      const check = () => typeof window.d3 === 'object';\n      await cv.util.ScriptLoader.includeScript(qx.util.ResourceManager.getInstance().toUri('libs/d3.min.js'));\n\n      if (!check()) {\n        const timer = new qx.event.Timer(50);\n        let counter = 0;\n        timer.addListener('interval', () => {\n          counter++;\n          if (check()) {\n            resolve(true);\n          } else if (counter > 5) {\n            reject(new Error('Error loaded d3 library'));\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    }).then(() => {\n      if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n        // localize\n        d3.formatDefaultLocale({\n          decimal: qx.locale.Number.getDecimalSeparator().translate().toString(),\n          thousands: qx.locale.Number.getGroupSeparator().translate().toString(),\n          grouping: [3],\n          currency: ['€', '']\n        });\n\n        d3.timeFormatDefaultLocale({\n          dateTime: '%A, der %e. %B %Y, %X',\n          date: '%d.%m.%Y',\n          time: '%H:%M:%S',\n          periods: [qx.locale.Date.getAmMarker().translate().toString(), qx.locale.Date.getPmMarker().translate().toString()],\n          days: qx.locale.Date.getDayNames('wide', null, 'format').map(t => t.translate().toString()),\n\n          shortDays: qx.locale.Date.getDayNames('narrow', null, 'stand-alone').map(t => t.translate().toString()),\n          months: qx.locale.Date.getMonthNames('wide').map(t => t.translate().toString()),\n          shortMonths: qx.locale.Date.getMonthNames('narrow', null, 'stand-alone').map(t => t.translate().toString())\n        });\n      }\n    }),\n\n    CONFIG: null\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    currentSeries: {\n      check: ['hour', 'day', 'week', 'month', 'year'],\n      init: 'day',\n      apply: '_applyCurrentSeries'\n    },\n\n    currentPeriod: {\n      check: 'Number',\n      init: 0,\n      apply: '__updateTimeRange'\n    },\n\n    startTime: {\n      check: 'Number',\n      init: 0\n    },\n\n    endTime: {\n      check: 'Number',\n      init: 0\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    _id: null,\n    _downloadedImage: null,\n    _url: null,\n    _headers: null,\n    _request: null,\n    _width: null,\n    _height: null,\n    _loaded: null,\n    _dataSetConfigs: null,\n    _initializing: null,\n    _navigationEnabled: null,\n    __toolTipTimer: null,\n    __showTooltip: false,\n    __debouncedOnResize: null,\n    __resizeTimeout: null,\n    __startTs: null,\n    __endTs: null,\n\n    /**\n    * @type {d3.Selection}\n    */\n    _dot: null,\n    /**\n     * @type {d3.Selection}\n     */\n    _svg: null,\n    /**\n     * @type {HTMLElement}\n     */\n    _tooltip: null,\n    /**\n     * @type {String}\n     */\n    _titleString: null,\n\n    __helpers: null,\n    __config: null,\n    // all chart properties\n    _chartConf: null,\n\n    async _init() {\n      this._checkIfWidget();\n\n      this._initializing = true;\n      const element = this._element;\n      await cv.ui.structure.tile.components.Chart.JS_LOADED;\n      this._id = cv.ui.structure.tile.components.Chart.ChartCounter++;\n      const chartId = 'chart-' + this._id;\n      element.setAttribute('data-chart-id', this._id.toString());\n      const inBackground = this._element.hasAttribute('background') && this._element.getAttribute('background') === 'true';\n\n      let title = this.getHeader('label.title');\n      if (!inBackground && element.hasAttribute('title') && !title) {\n        title = document.createElement('label');\n        title.classList.add('title');\n        let span = document.createElement('span');\n        title.appendChild(span);\n        span.textContent = element.getAttribute('title');\n        this.appendToHeader(title);\n      }\n\n      if (title) {\n        // save base title for updating\n        this._titleString = title.textContent.trim();\n      }\n\n      let seriesSelection = [];\n      if (!inBackground && element.hasAttribute('selection')) {\n        const s = element.getAttribute('selection');\n        if (s === 'none') {\n          seriesSelection = [];\n        } else if (s === 'all') {\n          seriesSelection = ['hour', 'day', 'week', 'month', 'year'];\n        } else {\n          seriesSelection = s.split(',').map(n => n.trim().toLowerCase());\n        }\n      }\n      if (element.hasAttribute('series')) {\n        this.setCurrentSeries(element.getAttribute('series'));\n      }\n      const currentSeries = this.getCurrentSeries();\n      if (seriesSelection.length > 0 && !seriesSelection.includes(currentSeries)) {\n        seriesSelection.push(currentSeries);\n      }\n      this._navigationEnabled = seriesSelection.length > 0;\n      if (seriesSelection.length > 0) {\n        // back button\n        let button = this._buttonFactory('ri-arrow-left-s-line', ['prev']);\n        button.setAttribute('title', qx.locale.Manager.tr('previous'));\n        button.addEventListener('click', () => this._onSeriesPrev());\n\n        if (!title) {\n          title = document.createElement('label');\n          title.classList.add('title');\n          let span = document.createElement('span');\n          title.appendChild(span);\n          this.appendToHeader(title);\n        }\n\n        title.parentElement.insertBefore(button, title);\n        const i = document.createElement('i');\n        i.classList.add('ri-arrow-down-s-fill');\n        title.appendChild(i);\n\n        // current selection\n        const popup = document.createElement('div');\n        popup.classList.add('popup', 'series');\n        let option;\n        for (const s of seriesSelection) {\n          option = document.createElement('cv-option');\n          option.setAttribute('key', s);\n          if (s === currentSeries) {\n            option.setAttribute('selected', 'selected');\n          }\n          option.textContent = this._seriesToShort(s);\n          option.addEventListener('click', ev => {\n            popup.style.display = 'none';\n            this._onSeriesChange(ev.target.getAttribute('key'));\n            ev.stopPropagation();\n            ev.preventDefault();\n          });\n          popup.appendChild(option);\n        }\n        title.appendChild(popup);\n\n        // make title clickable\n        title.classList.add('clickable');\n        title.addEventListener('click', ev => {\n          const style = getComputedStyle(popup);\n          if (style.getPropertyValue('display') === 'none') {\n            popup.style.display = 'flex';\n          } else {\n            popup.style.display = 'none';\n          }\n          ev.stopPropagation();\n          ev.preventDefault();\n        });\n\n        // forward button\n        button = this._buttonFactory('ri-arrow-right-s-line', ['next']);\n        button.setAttribute('title', qx.locale.Manager.tr('next'));\n        // initially we cannot go into the future\n        button.disabled = true;\n        button.addEventListener('click', () => this._onSeriesNext());\n        this.appendToHeader(button);\n      }\n      if (!inBackground && element.hasAttribute('allow-fullscreen') && element.getAttribute('allow-fullscreen') === 'true') {\n        // add fullscreen button + address\n        const button = this._buttonFactory('ri-fullscreen-line', ['fullscreen']);\n        button.setAttribute('data-value', '0');\n\n        const popupAddress = `state:${chartId}-popup`;\n\n        button.addEventListener('click', () => {\n          cv.data.Model.getInstance().onUpdate(popupAddress, button.getAttribute('data-value') === '0' ? '1' : '0', 'system');\n        });\n\n        this.appendToHeader(button, 'right');\n\n        // address\n        const tileAddress = document.createElement('cv-address');\n        tileAddress.setAttribute('mode', 'read');\n        tileAddress.setAttribute('target', 'fullscreen-popup');\n        tileAddress.setAttribute('backend', 'system');\n        tileAddress.setAttribute('send-mode', 'always');\n        tileAddress.textContent = popupAddress;\n        element.parentElement.appendChild(tileAddress);\n\n        // listen to parent tile of popup is opened or not\n        let parent = element;\n        while (parent && parent.nodeName.toLowerCase() !== 'cv-tile') {\n          parent = parent.parentElement;\n        }\n        if (parent) {\n          const tileWidget = parent.getInstance();\n          tileWidget.addListener('closed', () => cv.data.Model.getInstance().onUpdate(popupAddress, '0', 'system'));\n\n          // because we added a read address to the tile after is has been initialized we need to init the listener here manually\n          parent.addEventListener('stateUpdate', ev => {\n            tileWidget.onStateUpdate(ev);\n            // cancel event here\n            ev.stopPropagation();\n          });\n\n        // only on mobile we need this, because of height: auto\n          if (document.body.classList.contains('mobile')) {\n            tileWidget.addListener('fullscreenChanged', () => {\n              this._onRendered();\n            });\n          }\n        }\n      }\n\n\n      if (element.hasAttribute('refresh')) {\n        this.setRefresh(parseInt(element.getAttribute('refresh')));\n      }\n\n      // create needed elements\n\n      const svg = d3.select(this._element)\n        .append('svg');\n\n      let noToolTips = false;\n      if (inBackground) {\n        noToolTips = true;\n        svg.style('opacity', 0.4);\n      }\n\n      if (!noToolTips) {\n        this._tooltip = document.createElement('div');\n        this._tooltip.classList.add('tooltip');\n        this._tooltip.style.display = 'none';\n        this._element.appendChild(this._tooltip);\n\n        svg.on('pointerenter', this._onPointerEntered.bind(this));\n        svg.on('pointermove', this._onPointerMoved.bind(this));\n        svg.on('pointerleave', this._onPointerLeft.bind(this));\n      }\n      svg.on(\n        'touchmove',\n        event => {\n          if (this._loaded) {\n            let y = event.targetTouches[0].clientY;\n            const pathRect = this._element.querySelector(':scope > svg').getBoundingClientRect();\n            if (y > pathRect.y && y < pathRect.y + pathRect.height) {\n              event.preventDefault();\n            }\n          }\n        },\n        { passive: false }\n      );\n\n      // init some fixed settings\n      const format = this._element.hasAttribute('y-format') ? this._element.getAttribute('y-format') : '%s';\n      let timeFormat = null;\n      if (this._element.hasAttribute('x-format')) {\n        const formatString = this._element.getAttribute('x-format');\n        timeFormat = date => d3.timeFormat(formatString)(date);\n      } else {\n        // format auto-detection\n        timeFormat = this.multiTimeFormat([\n          [\n            '%H:%M:%S',\n            function (d) {\n              return d.getSeconds();\n            }\n          ],\n\n          [\n            '%H:%M',\n            function (d) {\n              return d.getMinutes();\n            }\n          ],\n\n          [\n            '%H',\n            function (d) {\n              return d.getHours();\n            }\n          ],\n\n          [\n            '%a %d',\n            function (d) {\n              return d.getDay() && d.getDate() !== 1;\n            }\n          ],\n\n          [\n            '%b %d',\n            function (d) {\n              return d.getDate() !== 1;\n            }\n          ],\n\n          [\n            '%B',\n            function (d) {\n              return d.getMonth();\n            }\n          ],\n\n          [\n            '%Y',\n            function () {\n              return true;\n            }\n          ]\n        ]);\n      }\n      this.__config = {\n        x: d => d.time, // given d in data, returns the (temporal) x-value\n        y: d => +d.value, // given d in data, returns the (quantitative) y-value\n        z: d => d.src, // given d in data, returns the (categorical) z-value\n        color: d => d && this._dataSetConfigs[d].color, // stroke color of line, as a constant or a function of *z*\n        title: d => cv.util.String.sprintf(format, d.value), // given d in data, returns the title text\n        curve: d3.curveLinear, // method of interpolation between points\n        marginTop: 12, // top margin, in pixels\n        marginRight: 24, // right margin, in pixels\n        marginBottom: 20, // bottom margin, in pixels\n        marginLeft: 24, // left margin, in pixels\n        width: 392, // outer width, in pixels\n        height: 192, // outer height, in pixels\n        aspectRatio: 392/192,\n        xType: d3.scaleTime, // type of x-scale\n        xFormat: timeFormat, // a format specifier string for the x-axis\n        yType: d3.scaleLinear, // type of y-scale\n        yFormat: undefined, // a format specifier string for the y-axis\n        yLabel: undefined, // a label for the y-axis\n        strokeLinecap: undefined, // stroke line cap of line\n        strokeLinejoin: undefined, // stroke line join of line\n        strokeWidth: 1.5, // stroke width of line\n        strokeOpacity: undefined, // stroke opacity of line\n        mixBlendMode: 'normal', // blend mode of lines\n        showArea: d => this._dataSetConfigs[d].showArea, // show area below the line,\n        showXAxis: !this._element.hasAttribute('show-x-axis') || this._element.getAttribute('show-x-axis') === 'true',\n        showYAxis: !this._element.hasAttribute('show-y-axis') || this._element.getAttribute('show-y-axis') === 'true',\n        xPadding: 0.1 // amount of x-range to reserve to separate bars\n      };\n\n      this._initializing = false;\n      this.__updateTitle();\n\n      // check if we have a read address for live updates\n      const datasetSources = Array.from(this._element.querySelectorAll(':scope > dataset')).map(elem => elem.getAttribute('src'));\n      const readAddresses = Array.from(element.querySelectorAll(':scope > cv-address:not([mode=\"write\"])')).filter(elem => datasetSources.includes(elem.getAttribute('target')));\n      if (readAddresses.length > 0) {\n        element.addEventListener('stateUpdate', ev => {\n          this.onStateUpdate(ev);\n          // cancel event here\n          ev.stopPropagation();\n        });\n      }\n    },\n\n    onStateUpdate(ev) {\n      const targetDataset = this._element.querySelector(':scope > dataset[src=\"'+ev.detail.target+'\"]');\n      const config = this._dataSetConfigs ? this._dataSetConfigs[ev.detail.target] : null;\n      if (targetDataset && config) {\n        let ts = Date.now();\n        if (config.aggregationInterval) {\n          const mins = config.aggregationInterval * 60 * 1000;\n          ts = Math.round(ts / mins) * mins;\n        }\n        this._renderChart({\n          src: ev.detail.target,\n          time: ts,\n          value: ev.detail.state\n        }, true);\n      }\n    },\n\n    _onSeriesPrev() {\n      this.setCurrentPeriod(this.getCurrentPeriod()+1);\n    },\n\n    _onSeriesChange(select) {\n      this._initializing = true;\n      // reset offset when series changed\n      this.resetCurrentPeriod();\n      this._initializing = false;\n      // reset configuration, we need a new one\n      this._chartConf = null;\n      this.setCurrentSeries(select);\n    },\n\n    _onSeriesNext() {\n      const currentPeriod = this.getCurrentPeriod();\n      if (currentPeriod > 0) {\n        this.setCurrentPeriod(currentPeriod-1);\n      }\n    },\n\n    refresh() {\n      this._loaded = false;\n      this._loadData();\n    },\n\n    // triggered after a change os series or period\n    _refreshData() {\n      const nextButton = this.getHeader('.next');\n      if (nextButton) {\n        if (this.getCurrentPeriod() === 0) {\n          nextButton.setAttribute('disabled', 'disabled');\n        } else {\n          nextButton.removeAttribute('disabled');\n        }\n      }\n\n      if (!this._initializing && this.getStartTime() > 0 && this.getEndTime() > 0) {\n        this._loaded = false;\n        this._loadData();\n      }\n      this.__updateTitle();\n    },\n\n    _applyCurrentSeries(series) {\n      const currentSelection = this.getHeader('.popup.series > cv-option[selected=\"selected\"]');\n      let alreadySelected = false;\n      if (currentSelection) {\n        if (currentSelection.getAttribute('key') !== series) {\n          currentSelection.removeAttribute('selected');\n        } else {\n          alreadySelected = true;\n        }\n      }\n      if (!alreadySelected) {\n        const newSelection = this.getHeader(`.popup.series > cv-option[key=\"${series}\"]`);\n        if (newSelection) {\n          newSelection.setAttribute('selected', 'selected');\n        }\n      }\n      this.__updateTimeRange();\n    },\n\n    __updateTimeRange() {\n      const series = this.getCurrentSeries();\n\n      const currentPeriod = this.getCurrentPeriod();\n      let end = new Date();\n      let periodStart = new Date();\n      let interval = 0;\n      switch (series) {\n        case 'hour':\n          interval = 60 * 60;\n          periodStart.setHours(periodStart.getHours() - currentPeriod, 0, 0, 0);\n          if (currentPeriod > 0) {\n            end.setHours(periodStart.getHours() + 1, 0, 0, 0);\n          }\n          break;\n\n        case 'day':\n          interval = 24 * 60 * 60;\n          periodStart.setDate(periodStart.getDate() - currentPeriod);\n          periodStart.setHours(0, 0, 0, 0);\n          if (currentPeriod > 0) {\n            end.setDate(periodStart.getDate() + 1);\n            end.setHours(0, 0, 0, 0);\n          }\n          break;\n\n        case 'week':\n          interval = 7 * 24 * 60 * 60;\n          periodStart.setDate(-periodStart.getDay() - 7 * currentPeriod);\n          periodStart.setHours(0, 0, 0, 0);\n          if (currentPeriod > 0) {\n            end.setDate(periodStart.getDate() + 7);\n            end.setHours(0, 0, 0, 0);\n          }\n          break;\n\n        case 'month':\n          interval = 30 * 24 * 60 * 60;\n          periodStart.setMonth(periodStart.getMonth() - currentPeriod);\n          periodStart.setDate(1);\n          periodStart.setHours(0, 0, 0, 0);\n          if (currentPeriod > 0) {\n            end.setMonth(periodStart.getMonth() + 1, 1);\n            end.setHours(0, 0, 0, 0);\n          }\n          break;\n\n        case 'year':\n          interval = 365 * 24 * 60 * 60;\n          periodStart.setFullYear(periodStart.getFullYear() - currentPeriod);\n          periodStart.setMonth(0, 1);\n          periodStart.setHours(0, 0, 0, 0);\n          if (currentPeriod > 0) {\n            end.setFullYear(periodStart.getFullYear() + 1);\n            end.setMonth(periodStart.getMonth() + 1, 1);\n            end.setHours(0, 0, 0, 0);\n          }\n          break;\n      }\n      let startTs = Math.round(periodStart.getTime()/1000);\n      let endTs = Math.round(end.getTime()/1000);\n      if (this._element.getAttribute('background') === 'true' || !this._element.hasAttribute('selection')) {\n        // when have no navigation, we can just use the old relative time range now - interval\n        startTs = endTs -  interval;\n      }\n      this.setStartTime(startTs);\n      this.setEndTime(endTs);\n      this._refreshData();\n    },\n\n    _loadData() {\n      if (this._loaded && Date.now() - this._loaded < 300000) {\n        // don't reload within 5 minutes\n        return;\n      }\n      const client = cv.io.BackendConnections.getClient();\n      if (!client) {\n        return;\n      }\n      if (!client.isConnected()) {\n        client.addListenerOnce('changeConnected', () => {\n          this._loadData();\n        });\n        return;\n      }\n      let url;\n      const dataSets = this._element.querySelectorAll(':scope > dataset');\n\n      const promises = [];\n      if (!this._dataSetConfigs) {\n        this._dataSetConfigs = {};\n        for (let dataSet of dataSets) {\n          let ts = {\n            showArea: true,\n            color: '#FF9900',\n            chartType: 'line',\n            title: '',\n            curve: 'linear',\n            aggregationInterval: 0\n          };\n\n          let attr;\n          let name;\n          let value;\n          for (let i = 0; i < dataSet.attributes.length; i++) {\n            attr = dataSet.attributes.item(i);\n            // CamelCase attribute names\n            name = attr.name\n              .split('-')\n              .map((part, i) => {\n                if (i > 0) {\n                  return `${part.substring(0, 1).toUpperCase()}${part.substring(1)}`;\n                }\n                return part;\n              })\n              .join('');\n            value = attr.value;\n            if (value === 'true' || value === 'false') {\n              value = value === 'true';\n            } else if (/^\\d+$/.test(value)) {\n              value = parseInt(value);\n            } else if (/^[\\d.]+$/.test(value)) {\n              value = parseFloat(value);\n            }\n            ts[name] = value;\n          }\n          const type = ts.src.split('://')[0].toLowerCase();\n          ts.type = type;\n          switch (type) {\n            case 'flux':\n              ts.source = new cv.io.timeseries.FluxSource(ts.src);\n              if (ts.source.isInline()) {\n                ts.source.setQueryTemplate(dataSet.textContent.trim());\n              }\n              break;\n\n            case 'openhab':\n              ts.source = new cv.io.timeseries.OpenhabPersistenceSource(ts.src);\n              break;\n\n            case 'rrd':\n              ts.source = new cv.io.timeseries.RRDSource(ts.src);\n              break;\n\n            case 'demo':\n              ts.source = new cv.io.timeseries.DemoSource(ts.src);\n              break;\n\n            default:\n              this.error('unknown chart data source type ' + type);\n              break;\n          }\n          this._dataSetConfigs[ts.src] = ts;\n        }\n      }\n\n      for (const src in this._dataSetConfigs) {\n        const ts = this._dataSetConfigs[src];\n        let proxy = false;\n        let options = {ttl: this.getRefresh()};\n        if (ts.source) {\n          const config = ts.source.getRequestConfig(\n            this.getStartTime(),\n            this.getEndTime(),\n            this.getCurrentSeries(),\n            this.getCurrentPeriod()\n          );\n          url = config.url;\n          proxy = config.proxy;\n          options = Object.assign(options, config.options);\n        }\n\n        if (!url) {\n          continue;\n        }\n\n        this.debug('loading', url);\n        promises.push(\n          cv.io.Fetch.cachedFetch(url, options, proxy, client)\n            .then(data => {\n              this.debug('successfully loaded', url);\n              if (ts.source) {\n                data = ts.source.processResponse(data);\n              }\n              if (!this._lastRefresh) {\n                this._lastRefresh = Date.now();\n              }\n              return {\n                data: data || [],\n                ts: ts\n              };\n            })\n            .catch(err => {\n              this._onStatusError(ts, url, err);\n              return {\n                data: [],\n                ts: ts\n              };\n            })\n        );\n      }\n      Promise.all(promises).then(responses => {\n        this._onSuccess(responses);\n      });\n    },\n\n    _onSuccess(data) {\n      let chartData = [];\n\n      for (let entry of data) {\n        let tsdata = entry.data;\n        if (tsdata !== null) {\n          // TODO: stacked bar times (entry.ts.chartType === 'stacked-bar') must be aggregated, they have to be at the same time index for stacking\n          const mins = entry.ts.aggregationInterval > 0 ? entry.ts.aggregationInterval * 60 * 1000 : 0;\n          for (let [time, value] of tsdata) {\n            chartData.push({\n              src: entry.ts.src,\n              time: mins > 0\n                ? Math.round(time / mins) * mins : time,\n              value\n            });\n          }\n        }\n      }\n\n      if (this._element.hasAttribute('background') && this._element.getAttribute('background') === 'true') {\n        // no margins\n        this.__config = Object.assign(this.__config, {\n          marginRight: 0,\n          marginBottom: 0,\n          marginLeft: 0\n        });\n\n        // because we have no margins we need to cut the overflow on the tile\n        let tile = this._element.parentElement;\n        while (tile && tile.localName !== 'cv-tile') {\n          tile = tile.parentElement;\n        }\n        if (tile && tile.localName === 'cv-tile') {\n          tile.style.overflow = 'hidden';\n        }\n      }\n\n      // wait some time to let the element size settle\n      window.requestAnimationFrame(() => {\n        setTimeout(() => {\n          this._onRendered(chartData);\n        }, 100);\n      });\n    },\n\n    _onRendered(chartData, retries) {\n      if (this.__resizeTimeout) {\n        clearTimeout(this.__resizeTimeout);\n        this.__resizeTimeout = null;\n      }\n      if (this.isVisible()) {\n        const [width, height] = this._getSize();\n        if ((width < 20 || height < 10) && (!retries || retries <= 5)) {\n          // this makes no sense\n          this.__resizeTimeout = setTimeout(() => {\n            this._onRendered(chartData, retries > 0 ? retries + 1 : 1);\n          }, 150);\n        }\n        if (width < 20 || height < 10) {\n          // do nothing, these values are invalid\n          return;\n        }\n\n        this.__config.width = width;\n        this.__config.height = height;\n        d3.select(this._element).select('svg')\n          .attr('viewBox', `0, 0, ${width}, ${height}`);\n        if (chartData) {\n          this._renderChart(chartData);\n          this._loaded = Date.now();\n        }\n      }\n    },\n\n    _getSize() {\n      const parent = this._element.parentElement;\n      let padding = this._element.getAttribute('background') === 'true' ? 0 : 8;\n      let containerWidth = this._element.offsetWidth - padding;\n      let containerHeight = this._element.offsetHeight - padding;\n      let factor = 1;\n\n      const landscape = containerWidth > containerHeight;\n      let width = 0;\n      let height = 0;\n\n      if (landscape && containerHeight > 0) {\n        // obeying aspect ratio in landscape mode is not necessary\n        width = Math.round(containerWidth / factor);\n        height = Math.round(containerHeight / factor);\n      } else {\n        width = Math.round(containerWidth / factor);\n        height = width / cv.ui.structure.tile.components.Chart.DEFAULT_ASPECT_RATIO;\n      }\n      if (!this._element.style.height && (parent.localName === 'cv-popup' && (parent.getAttribute('fullscreen') === 'true') ||\n        (this._element.getAttribute('allow-fullscreen') === 'true' &&\n          parent.parentElement.classList.contains('fullscreen')))) {\n        // the parent container has height: auto, so we need to have one\n        this._element.style.height = (height + this.__config.marginTop + this.__config.marginBottom) + 'px';\n      }\n      return [width, height];\n    },\n\n    multiTimeFormat(formatsArray) {\n      /**\n       * @param date\n       */\n      function multiFormat(date) {\n        let i = 0;\n        let found = false;\n        let fmt = '%c';\n        while (!found && i < formatsArray.length) {\n          found = formatsArray[i][1](date);\n          if (found) {\n            fmt = formatsArray[i][0];\n          }\n          i++;\n        }\n        return fmt;\n      }\n      return date => d3.timeFormat(multiFormat(date))(date);\n    },\n\n    _onStatusError(ts, key, err) {\n      cv.core.notifications.Router.dispatchMessage('cv.charts.error', {\n        title: qx.locale.Manager.tr('Communication error'),\n        severity: 'urgent',\n        message: qx.locale.Manager.tr('URL: %1<br/><br/>Response:</br>%2', JSON.stringify(key), JSON.stringify(err))\n      });\n\n      this.error('Chart _onStatusError', ts, key, err);\n    },\n\n    /**\n     * Get svg element selection (create if not exists)\n     * @param parent d3.selection of the parent this element should be a child of\n     * @param nodeName {String} Element name\n     * @param classes {Array<String>} array of css classes used to identify this element\n     * @param attributes {Map<String, String>?} set these attributes if the element has to be created, when it already exists these are ignored\n     * @private\n     */\n    _getSvgElement(parent, nodeName, classes, attributes) {\n      let elem = parent.select(nodeName + '.' + classes.join('.'));\n      if (elem.empty()) {\n        elem = parent.append(nodeName).attr('class', classes.join(' '));\n        if (attributes) {\n          for (const name in attributes) {\n            elem.attr(name, attributes[name]);\n          }\n        }\n      }\n      return elem;\n    },\n\n    /**\n     * Copyright 2021 Observable, Inc.\n     * Released under the ISC license.\n     * https://observablehq.com/@d3/multi-line-chart\n     *\n     * @param data\n     * @param single\n     * @private\n     */\n    _renderChart(data, single) {\n      const config = this.__config;\n      const svg = d3.select(this._element).select('svg');\n\n      // Compute values.\n      let X;\n      let Y;\n      let Z;\n      let O;\n      let T;\n      if (single) {\n        if (!this._helpers) {\n          return;\n        }\n        X = this._helpers.X;\n        Y = this._helpers.Y;\n        Z = this._helpers.Z;\n        O = this._helpers.O;\n        T = this._helpers.T;\n        if (X[X.length-1] === data.time) {\n          // replace last value instead of adding one\n          Y[Y.length-1] = data.value;\n        } else {\n          X.push(data.time);\n          Y.push(data.value);\n          Z.push(data.src);\n          O.push(data);\n          T.push(config.title === undefined ? data.src : config.title === null ? null : config.title(data));\n\n          // cleanup\n          X.shift();\n          Y.shift();\n          Z.shift();\n          O.shift();\n          T.shift();\n        }\n      } else {\n        X = d3.map(data, config.x);\n        Y = d3.map(data, config.y);\n        Z = d3.map(data, config.z);\n        O = d3.map(data, d => d);\n        // Compute titles.\n        T = config.title === undefined ? Z : config.title === null ? null : d3.map(data, config.title);\n      }\n\n      // Compute default domains, and unique the z-domain.\n      let xDomain = d3.extent(X);\n      let minVal = 0;\n      const zeroBased = !this._element.hasAttribute('zero-based') || this._element.getAttribute('zero-based') === 'true';\n      if (!zeroBased) {\n        minVal = d3.min(Y);\n        if (minVal > 1.0) {\n          minVal -= 1;\n        }\n      }\n      let maxVal = d3.max(Y);\n      if (maxVal > 1.0) {\n        // add some inner chart padding\n        maxVal += 1;\n      } else {\n        maxVal += 0.1;\n      }\n      const yDomain = [minVal, maxVal];\n      const zDomain = new d3.InternSet(Z);\n      // Omit any data not present in the z-domain.\n      const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n      if (config.showYAxis) {\n        const maxValue = config.yFormat ? config.yFormat(yDomain[1]) : yDomain[1].toFixed(maxVal < 1 ? 2 : 1);\n        // check if we need more space for the y-axis\n        if (maxValue.length >= 2) {\n          config.marginLeft = maxValue.length * 8;\n        }\n      }\n\n      const xTicks = config.width / 80;\n      const yTicks = config.height / 60;\n      const additionalXRangePadding = this._element.getAttribute('background') === 'true' ? 0 : 2;\n\n      const xRange = [config.marginLeft + additionalXRangePadding, config.width - config.marginRight - additionalXRangePadding]; // [left, right]\n      if (!this._chartConf) {\n        const yRange = [config.height - config.marginBottom, config.marginTop]; // [bottom, top]\n\n        // initialize everything once\n        this._chartConf = {\n          // x/y scales\n          x: config.xType().range(xRange),\n          y: config.yType().range(yRange)\n        };\n        this._chartConf.xAxis = config.showXAxis\n          ? d3.axisBottom(this._chartConf.x)\n            .ticks(xTicks)\n            .tickSizeOuter(0)\n            .tickFormat(config.xFormat)\n          : undefined;\n        this._chartConf.yAxis = config.showYAxis\n          ? d3.axisLeft(this._chartConf.y).ticks(yTicks, config.yFormat)\n          : undefined;\n\n\n        // add elements\n        const showGrid = this._element.hasAttribute('show-grid') ? this._element.getAttribute('show-grid') : 'xy';\n        if (showGrid.includes('x')) {\n          this._chartConf.xGrid = d3.axisBottom(this._chartConf.x).ticks(xTicks)\n            .tickSize(-config.height + config.marginBottom + config.marginTop)\n            .tickFormat('');\n          this._getSvgElement(svg, 'g', ['grid', 'x'], {\n            transform: `translate(0,${config.height - config.marginBottom})`\n          })\n            .call(this._chartConf.xGrid);\n        }\n        if (showGrid.includes('y')) {\n          this._chartConf.yGrid = d3.axisLeft(this._chartConf.y).ticks(yTicks)\n            .tickSize(-config.width + config.marginRight + config.marginLeft)\n            .tickFormat('');\n\n          this._getSvgElement(svg, 'g', ['grid', 'y'], {\n            transform: `translate(${config.marginLeft},0)`\n          })\n            .call(this._chartConf.yGrid);\n        }\n\n        if (config.showXAxis) {\n          this._getSvgElement(svg, 'g', ['axis', 'x'])\n            .attr('transform', `translate(0,${config.height - config.marginBottom})`)\n            .call(this._chartConf.xAxis);\n        }\n\n        if (config.showYAxis) {\n          let yAxisElement = this._getSvgElement(svg, 'g', ['axis', 'y'])\n            .attr('transform', `translate(${config.marginLeft},0)`);\n\n          if (config.label && yAxisElement.select('text').empty()) {\n            yAxisElement.append('text')\n              .attr('x', -config.marginLeft)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(config.yLabel);\n          }\n\n          yAxisElement\n            .call(this._chartConf.yAxis)\n            .call(g => g.select('.domain').remove());\n        }\n\n        // find chart types\n        const lineGroups = new Map();\n        const areaGroups = new Map();\n        const barGroups = new Map();\n        const stackedBarGroups = new Map();\n        const lineFunctions = {};\n        const areaFunctions = {};\n        let xBar;\n        let xzScale;\n\n        for (const key in this._dataSetConfigs) {\n          switch (this._dataSetConfigs[key].chartType) {\n            case 'line': {\n              const idx = I.filter(i => Z[i] === key);\n              lineGroups.set(key, idx);\n              const curveName = this._dataSetConfigs[key].curve || 'linear';\n              if (!Object.prototype.hasOwnProperty.call(lineFunctions, curveName)) {\n                let curveFunction;\n                switch (curveName) {\n                  case 'linear':\n                    curveFunction = d3.curveLinear;\n                    break;\n\n                  case 'step':\n                    curveFunction = d3.curveStep;\n                    break;\n\n                  case 'natural':\n                    curveFunction = d3.curveNatural;\n                    break;\n                }\n\n                if (curveFunction) {\n                  // Construct a line generator.\n                  lineFunctions[curveName] = d3\n                    .line()\n                    .curve(curveFunction)\n                    .x(i => this._chartConf.x(this._helpers.X[i]))\n                    .y(i => this._chartConf.y(this._helpers.Y[i]));\n                }\n\n                if (this._dataSetConfigs[key].chartType === 'line' && typeof config.showArea === 'function' && config.showArea(key)) {\n                  areaGroups.set(key, idx);\n                  if (curveFunction) {\n                    // Construct a line generator.\n                    const minY = this._chartConf.y.range()[0];\n                    areaFunctions[curveName] = d3\n                      .area()\n                      .curve(curveFunction)\n                      .x(i => this._chartConf.x(this._helpers.X[i]))\n                      .y0(() => minY)\n                      .y1(i => this._chartConf.y(this._helpers.Y[i]));\n                  }\n                }\n              }\n              break;\n            }\n\n            case 'bar':\n              barGroups.set(key, I.filter(i => Z[i] === key));\n              if (!xBar) {\n                xBar = d3.scaleBand().range(this._chartConf.x.range()).padding(config.xPadding);\n              }\n              if (!xzScale) {\n                xzScale = d3.scaleBand().padding(0.05);\n              }\n              break;\n\n            case 'stacked-bar':\n              stackedBarGroups.set(key, I.filter(i => Z[i] === key));\n              break;\n          }\n        }\n\n        this._chartConf.lineGroups = lineGroups;\n        this._chartConf.areaGroups = areaGroups;\n        this._chartConf.barGroups = barGroups;\n        this._chartConf.stackedBarGroups = stackedBarGroups;\n        this._chartConf.lineFunctions = lineFunctions;\n        this._chartConf.areaFunctions = areaFunctions;\n        this._chartConf.xBar = xBar;\n        if (xzScale) {\n          this._chartConf.xz = xzScale;\n        }\n\n        // prepare elements for chart elements\n        if (this._chartConf.lineGroups.size > 0) {\n          this._chartConf.lineContainer = this._getSvgElement(svg, 'g', ['line'], {\n            fill: 'none',\n            stroke: typeof config.color === 'string' ? config.color : null,\n            'stroke-linecap': config.strokeLinecap,\n            'stroke-linejoin': config.strokeLinejoin,\n            'stroke-width': config.strokeWidth,\n            'stroke-opacity': config.strokeOpacity\n          });\n        }\n        if (this._chartConf.areaGroups.size > 0) {\n          this._chartConf.areaContainer = this._getSvgElement(svg, 'g', ['area'], {\n            stroke: 'none',\n            fill: typeof config.color === 'string' ? this.__opacifyColor(config.color, '30') : null\n          });\n        }\n        if (this._chartConf.barGroups.size > 0) {\n          this._chartConf.barContainer = this._getSvgElement(svg, 'g', ['bars']);\n        }\n      }\n\n      // apply domains to scales\n      this._chartConf.x.domain(xDomain);\n      this._chartConf.y.domain(yDomain);\n\n      this._helpers = { X, Y, I, T, Z, O };\n\n      if (this._chartConf.xAxis) {\n        this._getSvgElement(svg, 'g', ['axis', 'x'])\n          .call(this._chartConf.xAxis);\n      }\n\n      if (this._chartConf.yAxis) {\n        this._getSvgElement(svg, 'g', ['axis', 'y'])\n          .call(this._chartConf.yAxis);\n      }\n      if (this._chartConf.xBar) {\n        this._chartConf.xBar.domain(new d3.InternSet(X));\n      }\n      if (this._chartConf.xz) {\n        this._chartConf.xz.domain(zDomain);\n        this._chartConf.x.range([xRange[0], xRange[1] - this._chartConf.xBar.bandwidth()]);\n        this._chartConf.xz.range([0, this._chartConf.xBar.bandwidth()]);\n      }\n\n      // update groups\n      for (const key of this._chartConf.lineGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key);\n        this._chartConf.lineGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.areaGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.areaGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.barGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.barGroups.set(key, idx);\n      }\n      for (const key of this._chartConf.stackedBarGroups.keys()) {\n        const idx = I.filter(i => Z[i] === key && Y[i] !== undefined);\n        this._chartConf.stackedBarGroups.set(key, idx);\n      }\n\n      this.__config = config;\n      this._dot = svg.select('g.dot');\n\n      // show zero line in grid for non-zero based charts\n      if (!zeroBased) {\n        let targetContainer = this._chartConf.lineContainer || this._chartConf.areaContainer || this._chartConf.barContainer;\n        let yValue = 0.0;\n        let data = [0, X.length-1];\n        let lineElem = targetContainer.select('.zero-line');\n        if (lineElem.empty()) {\n          lineElem = targetContainer.append('line')\n            .attr('class', 'zero-line')\n            .attr('stroke', 'currentColor')\n            .attr('stroke-opacity', '15%');\n        }\n        if (X.length > 0) {\n          const x1 = this._chartConf.x(X[data[0]]);\n          const x2 = this._chartConf.x(X[X.length - 1]); // always draw until end of chart (not until end of src dataset)\n          const y = this._chartConf.y(yValue);\n          lineElem\n            .attr('x1', x1)\n            .attr('x2', x2)\n            .attr('y1', y)\n            .attr('y2', y);\n        }\n      }\n\n      const t = d3.transition()\n        .duration(single ? 0 : 500)\n        .ease(d3.easeLinear);\n\n      if (this._chartConf.lineContainer) {\n        this._chartConf.lineContainer\n          .selectAll('path')\n          .data(this._chartConf.lineGroups)\n          .join(\n            enter => enter.append('path')\n              .style('mix-blend-mode', config.mixBlendMode)\n              .attr('stroke', typeof config.color === 'function' ? p => config.color(p[0]) : null)\n          )\n          .transition(t)\n          .attr('d', d => {\n            const curveName = this._dataSetConfigs[d[0]].curve || 'linear';\n            const func = this._chartConf.lineFunctions[curveName] || this._chartConf.lineFunctions.linear;\n            const val = func(d[1]);\n            return val;\n          });\n      }\n\n      // Add the area\n      if (this._chartConf.areaContainer) {\n        this._chartConf.areaContainer\n          .selectAll('path')\n          .data(this._chartConf.areaGroups)\n          .join(\n            enter => enter.append('path')\n              .style('mix-blend-mode', config.mixBlendMode)\n              .attr('fill', typeof config.color === 'function' ? p => this.__opacifyColor(config.color(p[0]), '30') : null)\n          )\n          .transition(t)\n          .attr('d', d => {\n            const curveName = this._dataSetConfigs[d[0]].curve || 'linear';\n            const func = this._chartConf.areaFunctions[curveName] || this._chartConf.areaFunctions.linear;\n            return func(d[1]);\n          });\n      }\n\n      if (this._chartConf.barContainer) {\n        const yMin = this._chartConf.y.range()[0];\n        this._chartConf.barContainer\n          .selectAll('g')\n          .data(this._chartConf.barGroups)\n          .join('g')\n          .attr('fill', typeof config.color === 'function' ? d => config.color(d[0]) : null)\n          .selectAll('rect')\n          .data(d => {\n            return d[1].map(val => {\n              return {\n                key: d[0],\n                value: val\n              };\n            });\n          })\n          .join('rect')\n          .attr('x', d => {\n            const x = this._chartConf.x(X[d.value]);\n            const xz =  this._chartConf.xz(d.key);\n            return x + xz;\n          })\n          .attr('y', d => this._chartConf.y(Y[d.value]))\n          .attr('width', this._chartConf.xz.bandwidth())\n          .transition(t)\n          .attr('height', d => yMin - this._chartConf.y(Y[d.value]));\n      }\n\n      // add fixed/calculated lines\n      for (const [i, line] of this._element.querySelectorAll(':scope > h-line').entries()) {\n        const src = line.getAttribute('src');\n        let targetContainer = null;\n        let data = null;\n        let yValue = NaN;\n        if (src) {\n          if (this._chartConf.lineGroups.get(src)) {\n            targetContainer = this._chartConf.lineContainer;\n            data = this._chartConf.lineGroups.get(src);\n          } else if (this._chartConf.areaGroups.get(src)) {\n            targetContainer = this._chartConf.areaContainer;\n            data = this._chartConf.areaGroups.get(src);\n          } else if (this._chartConf.barGroups.get(src)) {\n            targetContainer = this._chartConf.barContainer;\n            data = this._chartConf.barGroups.get(src);\n          }\n          if (!data) {\n            this.error('no data found for src ' + src);\n            continue;\n          }\n          switch (line.getAttribute('value')) {\n            case 'avg': {\n              let sum = 0.0;\n              for (const di of data) {\n                sum += Y[di];\n              }\n              yValue = sum / data.length;\n              break;\n            }\n\n            case 'max':\n              yValue = d3.max(Y.filter((v, i) => data.includes(i), d => d));\n              break;\n\n            case 'min':\n              yValue = d3.min(Y.filter((v, i) => data.includes(i), d => d));\n              break;\n\n            default:\n              this.error('unknown value calculation: ' + line.getAttribute('value'));\n              break;\n          }\n        } else {\n          targetContainer = this._chartConf.lineContainer || this._chartConf.areaContainer || this._chartConf.barContainer;\n          yValue = parseFloat(line.getAttribute('value'));\n          data = [0, X.length-1];\n        }\n        if (!targetContainer) {\n          continue;\n        }\n\n        let lineElem = targetContainer.select('.line-' + i);\n        if (isNaN(yValue) && !lineElem.empty()) {\n          // remove line\n          lineElem.remove();\n          if (line.getAttribute('show-value') === 'true') {\n            targetContainer.select('.line-value-' + i).remove();\n          }\n        } else if (!isNaN(yValue)) {\n          const color = line.getAttribute('color') || 'currentColor';\n          if (lineElem.empty()) {\n            lineElem = targetContainer.append('line')\n              .attr('class', 'line-' + i)\n              .attr('stroke', color);\n          }\n          const x1 = this._chartConf.x(X[data[0]]);\n          const x2 = this._chartConf.x(X[X.length -1]); // always draw until end of chart (not until end of src dataset)\n          const y = this._chartConf.y(yValue);\n          lineElem\n            .attr('x1', x1)\n            .attr('x2', x2)\n            .attr('y1', y)\n            .attr('y2', y);\n\n          if (line.getAttribute('show-value') === 'true') {\n            const format = line.hasAttribute('format') ? line.getAttribute('format')\n              : (this._element.hasAttribute('y-format') ? this._element.getAttribute('y-format') : '%s');\n            let valueElem = targetContainer.select('.line-value-' + i);\n            if (valueElem.empty()) {\n              valueElem = targetContainer.append('text')\n                .attr('class', 'line-value-' + i)\n                .attr('fill', line.getAttribute('value-color') || color)\n                .attr('font-size', '10')\n                .attr('text-anchor', 'start');\n            }\n            // show value on right side of the chart\n            valueElem\n              .attr('x', x2 + 2)\n              .attr('y', y + 5)\n              .text(cv.util.String.sprintf(format, yValue));\n          }\n        }\n      }\n\n      // dot must be added last\n      const dot = svg.select('g.dot');\n      if (dot.empty()) {\n        svg.append('g')\n          .attr('class', 'dot')\n          .attr('display', 'none')\n          .attr('fill', 'currentColor')\n          .append('circle')\n          .attr('r', 2.5);\n      }\n      this._dot = svg.select('g.dot');\n    },\n\n    _onPointerEntered(ev) {\n      if (this._loaded) {\n        this.__toolTipTimer = setTimeout(() => {\n          this.__activateTooltip(true, ev);\n          this.__toolTipTimer = null;\n        }, 500);\n      }\n    },\n\n    _onPointerLeft(ev) {\n      if (this.__toolTipTimer) {\n        clearTimeout(this.__toolTipTimer);\n      }\n\n      if (this._loaded) {\n        if (ev.relatedTarget !== this._tooltip) {\n          this.__activateTooltip(false);\n        }\n      }\n    },\n\n    __activateTooltip(val, ev) {\n      this.__showTooltip = val;\n      if (val) {\n        if (this._dot) {\n          this._dot.attr('display', null);\n          this._dot.raise();\n        }\n        this._tooltip.style.display = 'block';\n        this._onPointerMoved(null, true);\n      } else {\n        if (this._dot) {\n          this._dot.attr('display', 'none');\n        }\n        const svg = d3.select(this._element).select('svg');\n        svg.node().value = null;\n        svg.dispatch('input', {bubbles: true});\n        this._tooltip.style.display = 'none';\n      }\n    },\n\n    _onPointerMoved(event, center) {\n      if (this._loaded && this.__showTooltip) {\n        let xm = 0;\n        let ym = 0;\n        if (event) {\n          [xm, ym] = d3.pointer(event);\n        } else if (center) {\n          xm = this.__config.width/2;\n          ym = this.__config.height/2;\n        } else {\n          return;\n        }\n        const {X, Y, I, T, Z, O} = this._helpers;\n        const {x, y, xz} = this._chartConf;\n        const i = d3.least(I, i => Math.hypot(x(X[i]) - xm, y(Y[i]) - ym));\n        const scaleFactorX = this._element.offsetWidth / this.__config.width;\n        const scaleFactorY = this._element.offsetHeight / this.__config.height;\n        // closest point\n        const xOffset = xz ? (xz(Z[i]) + (typeof xz.bandwidth === 'function' ? xz.bandwidth() / 2 : 0)) : 0;\n        this._dot.attr('transform', `translate(${x(X[i]) + xOffset},${y(Y[i])})`);\n        if (T) {\n          const cursorOffset = event && event.pointerType === 'mouse' ? 16 : 40;\n          const timeString = this.__config.xFormat(new Date(X[i]));\n          let top = ym * scaleFactorY - this._tooltip.offsetHeight;\n          if (top < 0) {\n            top += cursorOffset + this._tooltip.offsetHeight;\n          } else {\n            top -= cursorOffset;\n          }\n\n          let left = xm * scaleFactorX;\n          if (left > this._element.offsetWidth / 2) {\n            left -= this._tooltip.offsetWidth + cursorOffset;\n          } else {\n            left += cursorOffset;\n          }\n\n          const key = Z[i];\n          const lineTitle = this._dataSetConfigs[key] && this._dataSetConfigs[key].title ? this._dataSetConfigs[key].title + ': ' : '';\n          this._tooltip.innerHTML = `${timeString}<br/>${lineTitle}${T[i]}`;\n          this._tooltip.style.left = left + 'px';\n          this._tooltip.style.top = top + 'px';\n        }\n        d3.select(this._element).select('svg').property('value', O[i]).dispatch('input', {bubbles: true});\n      }\n    },\n\n    _buttonFactory(icon, classes) {\n      const button = document.createElement('button');\n      button.classList.add(...classes);\n      if (icon) {\n        const i = document.createElement('i');\n        i.classList.add(icon);\n        button.appendChild(i);\n      }\n      return button;\n    },\n\n    __updateTitle() {\n      if (this._navigationEnabled) {\n        let title = this.getHeader('label.title span');\n        if (title) {\n          let chartTitle = this._titleString || '';\n          title.textContent = (chartTitle ? chartTitle + ' - ' : '') + this._shownDateRange();\n        }\n      }\n    },\n\n    /**\n     * Converts series to a shot string that is shown in a select box\n     * @param series\n     * @private\n     */\n    _seriesToShort(series) {\n      switch (series) {\n        case 'hour':\n          return qx.locale.Manager.tr('Hour');\n\n        case 'day':\n          return qx.locale.Manager.tr('Day');\n\n        case 'week':\n          return qx.locale.Manager.tr('Week');\n\n        case 'month':\n          return qx.locale.Manager.tr('Month');\n\n        case 'year':\n          return qx.locale.Manager.tr('Year');\n      }\n      return '';\n    },\n\n    /**\n     * Convert the currently shown date range into a human-readable string\n     * @private\n     */\n    _shownDateRange() {\n      const series = this.getCurrentSeries();\n      const currentPeriod = this.getCurrentPeriod();\n      const date = new Date();\n      let format = new qx.util.format.DateFormat();\n      switch (series) {\n        case 'hour':\n          date.setHours(date.getHours() - currentPeriod, 0, 0);\n          format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('hmm', 'h:mm'));\n          return format.format(date);\n\n        case 'day':\n          if (currentPeriod === 0) {\n            return qx.locale.Manager.tr('today');\n          } else if (currentPeriod === 1) {\n            return qx.locale.Manager.tr('yesterday');\n          }\n          date.setDate(date.getDate() - currentPeriod);\n          format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('MMMd', 'd. MMM'));\n          return format.format(date);\n\n        case 'week':\n          date.setDate(date.getDate() - currentPeriod*7);\n          return qx.locale.Manager.trc('CW = calendar week', 'CW %1', this.getWeekNumber(date));\n\n        case 'month':\n          date.setMonth(date.getMonth() - currentPeriod);\n          if (date.getFullYear() === new Date().getFullYear()) {\n            // no year needed\n            format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('MMM', 'MMM'));\n          } else {\n            format = new qx.util.format.DateFormat(qx.locale.Date.getDateTimeFormat('yyMMM', 'MMM yy'));\n          }\n          return format.format(date);\n\n        case 'year':\n          return date.getFullYear() - currentPeriod;\n      }\n      return '';\n    },\n\n   getWeekNumber(d) {\n      d = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      // Set to the nearest Thursday: current date + 4 - current day number\n      d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n      // Get first day of year\n      const yearStart = new Date(d.getFullYear(), 0, 1);\n      // Calculate full weeks to the nearest Thursday\n      return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    },\n\n    /**\n     * add opacity to color\n     * @param color\n     * @param opacity {string} hex number 0 - 255\n     * @return {string|*}\n     * @private\n     */\n    __opacifyColor(color, opacity) {\n      if (color.startsWith('rgb(')) {\n        return 'rgba(' + color.substring(4, color.length-1) + ', ' + (parseInt(opacity, 16) / 255).toFixed(2) + ')';\n      } else if (color.startsWith('#') && color.length === 7) {\n        return color + opacity;\n      }\n      return color;\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    this._chartConf = null;\n    this._helpers = null;\n  },\n\n  defer(QxClass) {\n    customElements.define(\n      cv.ui.structure.tile.Controller.PREFIX + 'chart',\n      class extends QxConnector {\n        constructor() {\n          super(QxClass);\n        }\n      }\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}