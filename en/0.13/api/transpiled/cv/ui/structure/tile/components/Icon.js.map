{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Icon.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "construct",
    "element",
    "_idRegex",
    "properties",
    "id",
    "check",
    "nullable",
    "apply",
    "transform",
    "color",
    "members",
    "__initialized",
    "_transformId",
    "value",
    "test",
    "error",
    "_init",
    "_element",
    "textContent",
    "trim",
    "setId",
    "it",
    "classList",
    "values",
    "name",
    "startsWith",
    "_applyId",
    "oldValue",
    "remove",
    "add",
    "_applyColor",
    "defer",
    "Clazz",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Icon"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Icon.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n *\n */\nqx.Class.define('cv.ui.structure.tile.components.Icon', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function (element) {\n    this.base(arguments, element);\n    this._idRegex = /^[^\\s]+$/;\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    id: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyId',\n      // the id is used as 'class' property and therefore must not have spaces\n      transform: '_transformId'\n    },\n\n    color: {\n      check: 'String',\n      nullable: true,\n      apply: '_applyColor'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __initialized: false,\n    _idRegex: null,\n\n    _transformId(value) {\n      if (this._idRegex.test(value)) {\n        return value;\n      }\n      this.error('invalid icon id:', value);\n      return null;\n    },\n\n    _init() {\n      this.base(arguments);\n      const element = this._element;\n      if (element.textContent.trim()) {\n        this.__initialized = true;\n        this.setId(element.textContent.trim());\n      } else {\n        const it = element.classList.values();\n        for (let name of it) {\n          if (name.startsWith('ri-') || name.startsWith('knxuf-')) {\n            this.setId(name);\n            break;\n          }\n        }\n      }\n      this.__initialized = true;\n    },\n\n    _applyId(value, oldValue) {\n      const element = this._element;\n      if (this.__initialized) {\n        if (oldValue) {\n          element.classList.remove(oldValue);\n        }\n        if (value) {\n          // default is an icon font that uses CSS classes\n          element.classList.add(value);\n          if (element.textContent) {\n            element.textContent = '';\n          }\n        }\n      }\n    },\n\n    _applyColor(value, oldValue) {\n      const element = this._element;\n      if (oldValue) {\n        element.classList.remove(oldValue);\n      }\n      if (value) {\n        element.classList.add(value);\n      }\n    }\n  },\n\n  defer(Clazz) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'icon', class extends QxConnector {\n      constructor() {\n        super(Clazz);\n      }\n\n      static get observedAttributes() {\n        return ['color'];\n      }\n    });\n  }\n});\n"
  ]
}