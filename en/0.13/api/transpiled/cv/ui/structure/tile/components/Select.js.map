{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/components/Select.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "members",
    "__options",
    "__value",
    "__popup",
    "_init",
    "element",
    "_element",
    "Map",
    "popup",
    "document",
    "createElement",
    "classList",
    "add",
    "querySelectorAll",
    "forEach",
    "option",
    "i",
    "appendChild",
    "hasAttribute",
    "setAttribute",
    "set",
    "getAttribute",
    "value",
    "handle",
    "_writeAddresses",
    "length",
    "addEventListener",
    "ev",
    "onClicked",
    "style",
    "getComputedStyle",
    "path",
    "target",
    "tagName",
    "toLowerCase",
    "_sendSelection",
    "currentTarget",
    "getPropertyValue",
    "display",
    "key",
    "predictive",
    "CustomEvent",
    "detail",
    "source",
    "filter",
    "addr",
    "address",
    "dispatchEvent",
    "setValue",
    "_updateValue",
    "mappedValue",
    "has",
    "innerHTML",
    "current",
    "get",
    "children",
    "child",
    "cloneNode",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "Select"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Select.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Allows the selection of one element out of a list of <cv-option> elements\n */\nqx.Class.define('cv.ui.structure.tile.components.Select', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __options: null,\n    __value: null,\n    __popup: null,\n\n    _init() {\n      this.base(arguments);\n      const element = this._element;\n      this.__options = new Map();\n\n      const popup = this.__popup = document.createElement('div');\n      popup.classList.add('popup');\n      element.querySelectorAll(':scope > cv-option').forEach((option, i) => {\n        popup.appendChild(option);\n        if (!option.hasAttribute('key')) {\n          option.setAttribute('key', '' + i);\n        }\n        this.__options.set(option.getAttribute('key'), option);\n      });\n      const value = this.__value = document.createElement('span');\n      value.classList.add('value');\n      element.appendChild(value);\n      element.appendChild(popup);\n      const handle = document.createElement('cv-icon');\n      handle.classList.add('dropdown');\n      handle.classList.add('ri-arrow-down-s-line');\n      element.appendChild(handle);\n\n      if (this._writeAddresses.length > 0) {\n        element.addEventListener('click', ev => this.onClicked(ev));\n      }\n    },\n\n    onClicked(ev) {\n      const style = getComputedStyle(this.__popup);\n      for (let target of ev.path) {\n        if (target.tagName.toLowerCase() === 'cv-option') {\n          // select this option\n          this._sendSelection(target.getAttribute('key'), true);\n          break;\n        }\n        if (target === ev.currentTarget) {\n          break;\n        }\n      }\n      // open popup\n      if (style.getPropertyValue('display') === 'none') {\n        this.__popup.style.display = 'block';\n      } else {\n        this.__popup.style.display ='none';\n      }\n    },\n\n    _sendSelection(key, predictive) {\n      const ev = new CustomEvent('sendState', {\n        detail: {\n          value: key,\n          source: this\n        }\n      });\n      this._writeAddresses.filter(addr => !addr.hasAttribute('on') || addr.getAttribute('on') === 'click').forEach(address => address.dispatchEvent(ev));\n      if (predictive === true) {\n        this.setValue(key);\n      }\n    },\n\n    _updateValue(mappedValue, value) {\n      if (this.__options.has(mappedValue)) {\n        this.__value.innerHTML = '';\n        const current = this.__options.get(mappedValue);\n        if (current.children.length > 0) {\n          // if we have non text children, we only use them (only icons no text)\n          for (const child of current.children) {\n            this.__value.appendChild(child.cloneNode());\n          }\n        } else {\n          this.__value.innerHTML = current.innerHTML;\n        }\n      }\n    }\n  },\n\n  defer(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'select', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}