{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/widgets/Group.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "tile",
    "components",
    "AbstractComponent",
    "members",
    "_init",
    "element",
    "_element",
    "label",
    "summary",
    "needsSummary",
    "hasAttribute",
    "querySelector",
    "document",
    "createElement",
    "insertBefore",
    "firstChild",
    "classList",
    "add",
    "textContent",
    "getAttribute",
    "icon",
    "empty",
    "event",
    "Registration",
    "addListener",
    "_toggleOpen",
    "removeAttribute",
    "setAttribute",
    "onStateUpdate",
    "ev",
    "detail",
    "target",
    "appendChild",
    "state",
    "debug",
    "defer",
    "QxClass",
    "customElements",
    "Controller",
    "PREFIX",
    "QxConnector",
    "widgets",
    "Group"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Group.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Creates a group of widgets that can be hidden (works like the <detail> HTML Element)\n *\n * @author Tobias BrÃ¤utigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.widgets.Group', {\n  extend: cv.ui.structure.tile.components.AbstractComponent,\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    _init() {\n      this.base(arguments);\n      const element = this._element;\n      let label = null;\n      let summary = null;\n      const needsSummary = element.hasAttribute('name') || element.hasAttribute('icon');\n      if (needsSummary) {\n        summary = element.querySelector(':scope > summary');\n        if (!summary) {\n          summary = document.createElement('summary');\n          element.insertBefore(summary, element.firstChild);\n        }\n        if (element.hasAttribute('name')) {\n          label = element.querySelector(':scope > summary > label.title');\n          if (!label) {\n            label = document.createElement('label');\n            label.classList.add('title');\n            summary.insertBefore(label, summary.firstChild);\n          }\n          label.classList.add('last-of-title');\n          label.textContent = element.getAttribute('name');\n        }\n        if (element.hasAttribute('icon')) {\n          let icon = element.querySelector(':scope > summary > cv-icon.title');\n          if (!icon) {\n            icon = document.createElement('cv-icon');\n            icon.classList.add('title');\n            summary.insertBefore(icon, summary.firstChild);\n          }\n          if (!label) {\n            icon.classList.add('last-of-title');\n          }\n          icon.classList.add(element.getAttribute('icon'));\n        }\n      }\n      const empty = !element.querySelector(':scope > *:not(summary)');\n      if (empty) {\n        element.classList.add('empty');\n      } else if (summary) {\n        qx.event.Registration.addListener(summary, 'click', this._toggleOpen, this);\n      }\n    },\n\n    _toggleOpen() {\n      if (this._element.hasAttribute('open')) {\n        this._element.removeAttribute('open');\n      } else {\n        this._element.setAttribute('open', 'true');\n      }\n    },\n\n    /**\n     * Handles the incoming data from the backend for this widget\n     *\n     * @param ev {CustomEvent} stateUpdate event fired from a cv-address component\n     */\n    onStateUpdate(ev) {\n      if (!this.base(arguments, ev)) {\n        if (ev.detail.target === 'summary') {\n          let target = this._element.querySelector(':scope > summary > label.value');\n          if (!target) {\n            target = document.createElement('label');\n            target.classList.add('value');\n            const summary = this._element.querySelector(':scope > summary');\n            summary.appendChild(target);\n          }\n          target.textContent = ev.detail.state;\n        } else {\n          this.debug('unhandled address target', ev.detail.target);\n        }\n      }\n    }\n  },\n\n  defer: function(QxClass) {\n    customElements.define(cv.ui.structure.tile.Controller.PREFIX + 'group', class extends QxConnector {\n      constructor() {\n        super(QxClass);\n      }\n    });\n  }\n});\n"
  ]
}