{
  "className": "cv.ui.structure.tile.elements.Address",
  "packageName": "cv.ui.structure.tile.elements",
  "name": "Address",
  "superClass": "cv.ui.structure.tile.elements.AbstractCustomElement",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 937
      },
      "end": {
        "line": 220,
        "column": 3,
        "index": 8070
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Address element that connect a widget/component to the backend.</p><div class=\"authors\"><label>Author:</label> Tobias Bräutigam</div><div class=\"since\"><label>Since:</label> 2022</div>"
        }
      ],
      "@author": [
        {
          "name": "@author",
          "body": "Tobias Bräutigam"
        }
      ],
      "@since": [
        {
          "name": "@since",
          "body": "2022"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "__lastValue": {
      "location": {
        "start": {
          "line": 35,
          "column": 4,
          "index": 1199
        },
        "end": {
          "line": 35,
          "column": 21,
          "index": 1216
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__transformedValue": {
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1222
        },
        "end": {
          "line": 36,
          "column": 28,
          "index": 1246
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_stateUpdateTarget": {
      "location": {
        "start": {
          "line": 37,
          "column": 4,
          "index": 1252
        },
        "end": {
          "line": 37,
          "column": 28,
          "index": 1276
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "getAddress": {
      "location": {
        "start": {
          "line": 39,
          "column": 4,
          "index": 1283
        },
        "end": {
          "line": 41,
          "column": 5,
          "index": 1350
        }
      },
      "type": "function",
      "access": "public"
    },
    "_init": {
      "location": {
        "start": {
          "line": 44,
          "column": 4,
          "index": 1358
        },
        "end": {
          "line": 131,
          "column": 5,
          "index": 5035
        }
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "appearsIn": [
        "cv.ui.structure.tile.elements.AbstractCustomElement"
      ]
    },
    "fireStateUpdate": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 5252
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 7457
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a 'stateUpdate' event with the transformed value and dispatches it to the <cv-address>-Element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "address {String} address",
            "paramName": "address",
            "description": " address",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "state {variant} state to send",
            "paramName": "state",
            "description": " state to send",
            "type": "variant"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isRead": {
      "location": {
        "start": {
          "line": 193,
          "column": 4,
          "index": 7543
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 7620
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean} true if this is a read address",
            "type": "boolean",
            "description": " true if this is a read address"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isWrite": {
      "location": {
        "start": {
          "line": 201,
          "column": 4,
          "index": 7707
        },
        "end": {
          "line": 203,
          "column": 5,
          "index": 7784
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{boolean} true if this is a write address",
            "type": "boolean",
            "description": " true if this is a write address"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getValue": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 7791
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 7847
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getConnected": {
      "type": "function",
      "name": "getConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "isConnected": {
      "type": "function",
      "name": "isConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for connected"
          }
        ]
      }
    },
    "setConnected": {
      "type": "function",
      "name": "setConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>connected</code>.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for connected"
          }
        ]
      }
    },
    "resetConnected": {
      "type": "function",
      "name": "resetConnected",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "cv.ui.structure.tile.elements.AbstractCustomElement",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>connected</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #connected}."
          }
        ]
      }
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 210,
        "column": 2,
        "index": 7856
      },
      "end": {
        "line": 219,
        "column": 3,
        "index": 8066
      }
    }
  },
  "descendants": [
    "cv.ui.structure.tile.elements.AddressGroup"
  ]
}