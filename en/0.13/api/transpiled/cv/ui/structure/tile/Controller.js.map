{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "_createForOfIteratorHelper",
    "o",
    "allowArrayLike",
    "it",
    "Array",
    "isArray",
    "_unsupportedIterableToArray",
    "F",
    "s",
    "n",
    "e",
    "_e2",
    "f",
    "normalCompletion",
    "didErr",
    "step",
    "_e3",
    "minLen",
    "_arrayLikeToArray",
    "toString",
    "from",
    "test",
    "arr",
    "len",
    "arr2",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "replace",
    "Config",
    "forceReload",
    "Date",
    "now",
    "locale",
    "Manager",
    "addListener",
    "_onChangeLocale",
    "statics",
    "PREFIX",
    "__MAP",
    "__I",
    "MAPPING_PARAM_REGEX",
    "register",
    "webComponentName",
    "qxClass",
    "onComponentCreated",
    "element",
    "tagName",
    "toLowerCase",
    "QxClass",
    "log",
    "Logger",
    "properties",
    "renderTarget",
    "check",
    "init",
    "document",
    "body",
    "namespace",
    "scrolled",
    "members",
    "__mappings",
    "__stylings",
    "_templateWidgets",
    "getHtmlStructure",
    "supports",
    "feature",
    "subfeature",
    "initLayout",
    "__gotoStartPage",
    "__P_72_5",
    "location",
    "hash",
    "scrollToPage",
    "getInitialPageId",
    "substring",
    "onHistoryRequest",
    "anchor",
    "pageId",
    "skipHistory",
    "page",
    "querySelector",
    "classList",
    "contains",
    "_iterator",
    "querySelectorAll",
    "_step",
    "oldPage",
    "remove",
    "_iterator2",
    "_step2",
    "add",
    "parentElement",
    "nodeName",
    "headline",
    "getAttribute",
    "pageTitle",
    "History",
    "addToHistory",
    "event",
    "message",
    "Bus",
    "dispatchByName",
    "warn",
    "parseBackendSettings",
    "xml",
    "parseSettings",
    "config",
    "_this",
    "settings",
    "configSettings",
    "configElement",
    "documentElement",
    "bindClickToWidget",
    "translate",
    "cacheUsed",
    "templates",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "addListenerOnce",
    "content",
    "getTarget",
    "getResponse",
    "target",
    "getRenderTarget",
    "debug",
    "registerTemplates",
    "child",
    "xmlns",
    "text",
    "getResponseText",
    "parser",
    "DOMParser",
    "parseFromString",
    "firstElementChild",
    "appendChild",
    "observeVisibility",
    "TemplateEngine",
    "setDomFinished",
    "main",
    "shrinkHeight",
    "canAnimate",
    "addEventListener",
    "style",
    "_iterator3",
    "_step3",
    "elem",
    "getComputedStyle",
    "height",
    "parseInt",
    "paddingTop",
    "paddingBottom",
    "marginTop",
    "marginBottom",
    "isScrolled",
    "scrollTop",
    "setScrolled",
    "enablePullToRefresh",
    "status",
    "getTransport",
    "Request",
    "isSuccessful",
    "send",
    "_applyScrolled",
    "_iterator4",
    "_step4",
    "_iterator5",
    "_step5",
    "preParse",
    "_this2",
    "_callee",
    "theme",
    "data",
    "_callee$",
    "_context",
    "hasAttribute",
    "window",
    "matchMedia",
    "matches",
    "setAttribute",
    "Model",
    "updateFrom",
    "createUI",
    "observer",
    "IntersectionObserver",
    "entries",
    "isIntersecting",
    "removeAttribute",
    "unobserve",
    "root",
    "_iterator6",
    "_step6",
    "iframe",
    "observe",
    "doc",
    "rememberKeys",
    "useKeys",
    "language",
    "getLanguage",
    "match",
    "exec",
    "search",
    "_trKeys",
    "_i",
    "_arr",
    "attr",
    "_iterator7",
    "concat",
    "_step7",
    "trNameElement",
    "translation",
    "textContent",
    "trim",
    "_iterator8",
    "_step8",
    "trTextElement",
    "doScreenSave",
    "screensave_page",
    "getInitialAddresses",
    "firstPage",
    "id",
    "addMapping",
    "mapping",
    "removeMapping",
    "mapValue",
    "mappingName",
    "store",
    "params",
    "tile",
    "Controller",
    "JSON",
    "parse",
    "replaceAll",
    "addStyling",
    "styling",
    "removeStyling",
    "styleValue",
    "stylingName",
    "parseLabel",
    "startY",
    "scrollContainer",
    "refreshSpinner",
    "createElement",
    "icon",
    "append",
    "eventSource",
    "onMove",
    "ev",
    "touchY",
    "touches",
    "clientY",
    "touchDiff",
    "onEnd",
    "reload",
    "removeEventListener",
    "isTemplateWidget",
    "includes",
    "_this3",
    "_iterator9",
    "_step9",
    "_loop",
    "template",
    "className",
    "lang",
    "String",
    "firstUp",
    "camelCase",
    "Clazz",
    "getByName",
    "widgets",
    "TemplateWidget",
    "customElements",
    "_TemplatedElement",
    "_inherits",
    "_class",
    "_super",
    "_createSuper",
    "_classCallCheck",
    "_createClass",
    "TemplatedElement",
    "defer",
    "cvTestMode",
    "Application",
    "structureController",
    "destruct",
    "removeListener",
    "QxConnector",
    "_HTMLElement",
    "_super2",
    "_this4",
    "isSubClassOf",
    "elements",
    "AbstractCustomElement",
    "_instance",
    "_assertThisInitialized",
    "connectedCallback",
    "setConnected",
    "disconnectedCallback",
    "attributeChangedCallback",
    "oldValue",
    "newValue",
    "hasProperty",
    "_wrapNativeSuper",
    "HTMLElement",
    "_QxConnector",
    "_super3",
    "templateId",
    "_this5",
    "controller",
    "getElementById",
    "slotAttributes",
    "cloneNode",
    "_iterator10",
    "getAttributeNames",
    "_step10",
    "_iterator11",
    "_step11",
    "_loop2",
    "slot",
    "slotName",
    "replacementSelector",
    "slotParentScope",
    "slotContents",
    "attrs",
    "l",
    "attributes",
    "slotContent",
    "newNode",
    "attrName",
    "parentNode",
    "insertBefore",
    "replaced",
    "children",
    "_iterator12",
    "_step12",
    "slotAttributeName",
    "targets",
    "targetName",
    "endsWith",
    "_iterator14",
    "_step14",
    "targetValue",
    "startsWith",
    "_iterator15",
    "split",
    "_step15",
    "_entry$split",
    "_entry$split2",
    "_slicedToArray",
    "_iterator13",
    "_step13",
    "_i3",
    "_arr2",
    "_toConsumableArray",
    "attrValue",
    "parts",
    "_iterator16",
    "_step16",
    "_entry$split3",
    "_entry$split4",
    "innerHTML"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Controller for the 'tile' structure.\n *\n * This structure is based on web-components and does not need a parser to work.\n * The config file is directly attached to the document body.\n * The widgets in this structure register a customElement and the browser automatically creates instances\n * of this widgets once the customElement is added to the body.\n *\n * The basic structure is a set of pages that contain a list of tiles.\n * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n * but also can spread over more than one cell by using row-/column spanning.\n *\n * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n * contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n *\n * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template)\n * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.\n *\n * @asset(structures/tile/*)\n * @author Tobias Bräutigam\n * @since 2022\n * @ignore(IntersectionObserver)\n */\nqx.Class.define('cv.ui.structure.tile.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT = '';\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/tile-globals.scss').replace('.scss', '.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n    qx.locale.Manager.getInstance().addListener('changeLocale', this._onChangeLocale, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    // prefix for all custom components uses/provided by this structure\n    PREFIX: 'cv-',\n    __MAP: {},\n    __I: {},\n\n    MAPPING_PARAM_REGEX: /^(.+)\\(([^)]+)\\)$/,\n\n    register(webComponentName, qxClass) {\n      this.__MAP[webComponentName] = qxClass;\n    },\n\n    onComponentCreated(element) {\n      const name = element.tagName.toLowerCase();\n      if (Object.prototype.hasOwnProperty.call(this, name)) {\n        const QxClass = this.__MAP[name];\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          this.__I[name] = [];\n        }\n        this.__I[name].push(new QxClass(element));\n      } else {\n        qx.log.Logger.error(this, 'no QxClass registered for custom element ' + name);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * The target this structure should be inserted into\n     */\n    renderTarget: {\n      check: 'Element',\n      init: document.body\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    },\n\n    scrolled: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyScrolled'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __HTML_STRUCT: null,\n    __mappings: null,\n    __stylings: null,\n    _templateWidgets: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    supports(feature, subfeature) {\n      return false;\n    },\n\n    initLayout() {},\n\n    __gotoStartPage() {\n      // open first page\n      if (!document.location.hash) {\n        this.scrollToPage(this.getInitialPageId());\n      } else {\n        this.scrollToPage(document.location.hash.substring(1));\n      }\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor);\n      }\n    },\n\n    scrollToPage(pageId, skipHistory) {\n      if (!pageId) {\n        return;\n      }\n      const page = document.querySelector('cv-page#' + pageId);\n      if (page) {\n        if (!page.classList.contains('active')) {\n          for (let oldPage of document.querySelectorAll('cv-page.active')) {\n            oldPage.classList.remove('active');\n          }\n          for (let oldPage of document.querySelectorAll('cv-page.sub-active')) {\n            oldPage.classList.remove('sub-active');\n          }\n          page.classList.add('active');\n          // mark parent pages that there is an active subpage\n          let parentElement = page.parentElement;\n          while (parentElement && parentElement.nodeName.toLowerCase() !== 'main') {\n            if (parentElement.nodeName.toLowerCase() === 'cv-page') {\n              parentElement.classList.add('sub-active');\n            }\n            parentElement = parentElement.parentElement;\n          }\n\n          if (skipHistory === undefined) {\n            const headline = page.getAttribute('name');\n            let pageTitle = 'CometVisu';\n            if (headline) {\n              pageTitle = headline + ' - ' + pageTitle;\n            }\n            qx.bom.History.getInstance().addToHistory(pageId, pageTitle);\n          }\n          qx.event.message.Bus.dispatchByName('cv.ui.structure.tile.currentPage', page);\n        }\n      } else {\n        this.warn('no page with id', pageId, 'found');\n      }\n    },\n\n    // not needed, backend parse/init themselves\n    parseBackendSettings(xml) {\n/*      if (xml.querySelectorAll('cv-backend').length === 0) {\n        // no backends defined, use the default one;\n        const client = cv.io.BackendConnections.initBackendClient();\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug('logged in');\n          cv.io.BackendConnections.startInitialRequests();\n        });\n      }*/\n      return false;\n    },\n\n    /**\n     * Parses structure specific settings\n     * @param config {XMLDocument} loaded config\n     */\n    parseSettings(config) {\n      document.body.classList.add('loading-structure');\n      const settings = cv.Config.configSettings;\n      const configElement = config.documentElement;\n      settings.bindClickToWidget = configElement.getAttribute('bind_click_to_widget') === 'true';\n      this.translate(config, true);\n\n      if (!cv.Config.cacheUsed) {\n        const templates = qx.util.ResourceManager.getInstance().toUri('structures/tile/templates.xml');\n\n        const ajaxRequest = new qx.io.request.Xhr(templates);\n        ajaxRequest.set({\n          accept: 'application/xml',\n          cache: !cv.Config.forceReload\n        });\n\n        ajaxRequest.addListenerOnce('success', e => {\n          let content = e.getTarget().getResponse();\n          const target = this.getRenderTarget();\n          this.debug('creating pages');\n          // register custom elements for templates in this document\n          this.registerTemplates(content);\n          let child;\n          // we need the documents to be in HTML namespace\n          if (!content.documentElement.xmlns) {\n            let text = e.getTarget().getResponseText();\n            text = text.replace('<templates', '<templates xmlns=\"http://www.w3.org/1999/xhtml\"');\n\n            const parser = new DOMParser();\n            content = parser.parseFromString(text, 'text/xml');\n          }\n          while ((child = content.documentElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n\n          while ((child = configElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n          document.body.classList.remove('loading-structure');\n          this.debug('finalizing');\n          this.observeVisibility();\n          qx.event.message.Bus.dispatchByName('setup.dom.append');\n          this.debug('pages created');\n          this.__gotoStartPage();\n          this.debug('setup.dom.finished');\n          qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n          cv.TemplateEngine.getInstance().setDomFinished(true);\n\n          const main = document.body.querySelector(':scope > main');\n          if (main) {\n            let shrinkHeight = -1;\n            let canAnimate = false;\n            main.addEventListener('scroll', () => {\n              // we need to know the space that we gain in height, when the shrinked elements are not shown\n              // and must not start the effect before we reach that threshold, otherwise\n              // main.scrollTop would go back to 0 because we have more height available and do not have to scroll+\n              // anymore, that would lead to an endless toggling this effect\n              // so long story short: avoid that applying this effect would lead to: main.scrollTop === 0\n              if (shrinkHeight < 0) {\n                shrinkHeight = 1;\n                let style;\n                for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n                  style = getComputedStyle(elem);\n                  if (!canAnimate) {\n                    // we need at least one element that has a defined height, to get a working animation\n                    canAnimate = !!elem.style.height;\n                  }\n                  shrinkHeight += parseInt(style.height) +\n                    parseInt(style.paddingTop) +\n                    parseInt(style.paddingBottom) +\n                    parseInt(style.marginTop) +\n                    parseInt(style.marginBottom);\n                }\n              }\n              if (!this.isScrolled() && main.scrollTop > shrinkHeight) {\n                this.setScrolled(true);\n                if (!canAnimate) {\n                  main.scrollTop -= shrinkHeight;\n                }\n              } else if (this.isScrolled() && main.scrollTop === 0) {\n                this.setScrolled(false);\n                shrinkHeight = -1;\n              }\n            });\n          }\n\n          this.enablePullToRefresh();\n        });\n        ajaxRequest.addListener('statusError', e => {\n          const status = e.getTarget().getTransport().status;\n          if (!qx.util.Request.isSuccessful(status)) {\n            this.error('filenotfound', templates);\n          }\n          document.body.classList.remove('loading-structure');\n        });\n\n        ajaxRequest.send();\n      }\n    },\n\n    _applyScrolled(value) {\n      if (value) {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.add('scrolled');\n        }\n      } else {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.remove('scrolled');\n        }\n      }\n    },\n\n    /**\n     * Pre parsing hook, do everything here that is needed before the real parsing process can start\n     * @param xml {XMLDocument}\n     */\n    async preParse(xml) {\n      if (xml.documentElement.hasAttribute('theme')) {\n        let theme = xml.documentElement.getAttribute('theme');\n        const data = {};\n        if (theme === 'system') {\n          if (window.matchMedia) {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', theme);\n            data['theme'] = theme;\n            cv.data.Model.getInstance().updateFrom('system', data);\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n\n              data['theme'] = e.matches ? 'dark' : 'light';\n              cv.data.Model.getInstance().updateFrom('system', data);\n            });\n          } else {\n            this.error('system theme detection not possible in this browser');\n          }\n        } else {\n          document.documentElement.setAttribute('data-theme', theme);\n          data['theme'] = theme;\n          cv.data.Model.getInstance().updateFrom('system', data);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats\n     */\n    createUI(config) {\n    },\n\n    observeVisibility() {\n      // find all pages with an iframe with attribute \"data-src\" and observe its parent page\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && entry.target.hasAttribute('data-src')) {\n            entry.target.setAttribute('src', entry.target.getAttribute('data-src'));\n            entry.target.removeAttribute('data-src');\n            observer.unobserve(entry.target);\n          }\n        }, {\n          root: document.querySelector('body > main')\n        });\n      });\n      for (const iframe of document.querySelectorAll('iframe[data-src], img[data-src]')) {\n        observer.observe(iframe);\n      }\n    },\n\n    translate(doc, rememberKeys, useKeys) {\n      let language = qx.locale.Manager.getInstance().getLanguage();\n      let match = /locale=([a-z]{2,3})/.exec(document.location.search);\n      if (match) {\n        language = match[1];\n      }\n      if (rememberKeys) {\n        this._trKeys = {};\n      }\n      for (const attr of ['name', 'label', 'title', 'format']) {\n        for (const trNameElement of doc.querySelectorAll(`*[${attr}^=\"tr(\"]`)) {\n          const match = /^tr\\('([^']+)'\\)$/.exec(trNameElement.getAttribute(attr));\n\n          if (!match && !useKeys) {\n            this.warn('attribute content no valid translation string', trNameElement.getAttribute(attr));\n\n            continue;\n          }\n          const key = useKeys ? this._trKeys[trNameElement.getAttribute(attr)] : match[1];\n          const translation = doc.querySelector(\n            `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n          );\n\n          if (translation) {\n            if (rememberKeys) {\n              this._trKeys[translation.textContent.trim()] = key;\n            }\n            trNameElement.setAttribute(attr, translation.textContent.trim());\n          } else {\n            trNameElement.setAttribute(attr, key);\n            this.warn(`[${language}] no translation found for: \"${key}\"`);\n          }\n        }\n      }\n      for (const trTextElement of doc.querySelectorAll('*[tr=\"true\"]')) {\n        const key = useKeys ? this._trKeys[trTextElement.textContent.trim()] : trTextElement.textContent.trim();\n        const translation = doc.querySelector(\n          `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n        );\n\n        if (translation) {\n          if (rememberKeys) {\n            this._trKeys[translation.textContent.trim()] = key;\n          }\n          trTextElement.textContent = translation.textContent.trim();\n        } else {\n          trTextElement.textContent = key;\n          this.warn(`[${language}] no translation found for: \"${key}\"`);\n        }\n      }\n    },\n\n    /**\n     * Handle fired event from screensaver\n     * @return {Array<string>} Array with addresses\n     */\n    doScreenSave() {\n      if (cv.Config.configSettings.screensave_page) {\n        this.scrollToPage(cv.Config.configSettings.screensave_page);\n      }\n    },\n\n    /**\n     * Return the addresses needed to update all states on the initially loaded page\n     */\n    getInitialAddresses() {\n      return [];\n    },\n\n    /**\n     * Returns the widget id of the page item initially loaded\n     * @returns {String} widget path like 'id_'...\n     */\n    getInitialPageId() {\n      const firstPage = document.querySelector('cv-page');\n      return firstPage ? firstPage.id : '';\n    },\n\n    /**\n     *\n     * @param name {String} mapping name\n     * @param mapping {cv.ui.structure.tile.elements.Mapping}\n     */\n    addMapping(name, mapping) {\n      if (!this.__mappings) {\n        this.__mappings = {};\n      }\n      this.__mappings[name] = mapping;\n    },\n\n    removeMapping(name) {\n      if (this.__mappings) {\n        delete this.__mappings[name];\n      }\n    },\n\n    mapValue(mappingName, value, store) {\n      let match;\n      let params = [];\n      if ((match = cv.ui.structure.tile.Controller.MAPPING_PARAM_REGEX.exec(mappingName)) !== null) {\n        // this mapping name contains a parameter\n        try {\n          params = JSON.parse(`[${match[2].replaceAll('\\'', '\"')}]`);\n        } catch (e) {\n          this.error('error parsing parameters from ' + mappingName);\n        }\n        mappingName = match[1];\n      }\n      if (this.__mappings && Object.prototype.hasOwnProperty.call(this.__mappings, mappingName)) {\n        return this.__mappings[mappingName].mapValue(value, store, params);\n      }\n      return value;\n    },\n\n    /**\n     * @param name {String} styling name\n     * @param styling {cv.ui.structure.tile.elements.Styling}\n     */\n    addStyling(name, styling) {\n      if (!this.__stylings) {\n        this.__stylings = {};\n      }\n      this.__stylings[name] = styling;\n    },\n\n    removeStyling(name) {\n      if (this.__stylings) {\n        delete this.__stylings[name];\n      }\n    },\n\n    styleValue(stylingName, value, store) {\n      if (this.__stylings && Object.prototype.hasOwnProperty.call(this.__stylings, stylingName)) {\n        return this.__stylings[stylingName].mapValue(value, store);\n      }\n      return '';\n    },\n\n    // for compatibility with pure controller\n    parseLabel() {\n      return '';\n    },\n\n    _onChangeLocale() {\n      this.translate(document.body, false, true);\n    },\n\n    enablePullToRefresh() {\n      let startY = 0;\n      let scrollContainer;\n\n      const refreshSpinner = document.createElement('div');\n      refreshSpinner.classList.add('pull-to-refresh');\n      const icon = document.createElement('i');\n      icon.classList.add('ri-loader-4-fill');\n      refreshSpinner.append(icon);\n      document.body.append(refreshSpinner);\n      const eventSource = document;\n\n      const onMove = ev => {\n        const touchY = ev.touches[0].clientY;\n        const touchDiff = touchY - startY;\n        if (touchDiff > 60 && scrollContainer.scrollTop === 0) {\n          refreshSpinner.classList.add('visible');\n        } else {\n          refreshSpinner.classList.remove('visible');\n        }\n      };\n      const onEnd = () => {\n        finish();\n        if (refreshSpinner.classList.contains('visible')) {\n          refreshSpinner.classList.remove('visible');\n          location.reload();\n        }\n      };\n      const finish = () => {\n        eventSource.removeEventListener('touchmove', onMove);\n        eventSource.removeEventListener('touchend', onEnd);\n        eventSource.removeEventListener('touchcancel', finish);\n      };\n      eventSource.addEventListener('touchstart', ev => {\n        startY = ev.touches[0].clientY;\n        scrollContainer = document.querySelector('main');\n        if (scrollContainer && scrollContainer.scrollTop === 0) {\n          eventSource.addEventListener('touchmove', onMove);\n          eventSource.addEventListener('touchend', onEnd);\n          eventSource.addEventListener('touchcancel', finish);\n        }\n      });\n    },\n\n    isTemplateWidget(name) {\n      return this._templateWidgets.includes(name);\n    },\n\n    /**\n     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element\n     * @param xml {XMLDocument}\n     */\n    registerTemplates(xml) {\n      if (this._templateWidgets === null) {\n        this._templateWidgets = [];\n      }\n      for (const template of xml.querySelectorAll('templates[structure=\\'tile\\'] > template')) {\n        const className = qx.lang.String.firstUp(qx.lang.String.camelCase(template.getAttribute('id')));\n        let Clazz = qx.Class.getByName(`cv.ui.structure.tile.widgets.${className}`);\n        if (!Clazz) {\n          Clazz = cv.ui.structure.tile.widgets.TemplateWidget;\n        }\n        customElements.define(\n          cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'),\n          class extends TemplatedElement {\n            constructor() {\n              super(template.getAttribute('id'), Clazz);\n            }\n          }\n        );\n        this._templateWidgets.push(cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'));\n      }\n    }\n  },\n\n  defer(statics) {\n    if (!window.cvTestMode) {\n      // do not apply ourselves automatically in test mode\n      cv.Application.structureController = statics.getInstance();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.locale.Manager.getInstance().removeListener('changeLocale', this._onChangeLocale, this);\n  }\n});\n\n\n/* eslint-disable-next-line no-redeclare */\nclass QxConnector extends HTMLElement {\n  constructor(QxClass) {\n    super();\n    if (QxClass) {\n      if (qx.Class.isSubClassOf(QxClass, cv.ui.structure.tile.elements.AbstractCustomElement)) {\n        this._instance = new QxClass(this);\n      } else {\n        throw Error(QxClass + ' must be a subclass of cv.ui.structure.tile.elements.AbstractCustomElement');\n      }\n    }\n    if (this.hasAttribute('colspan')) {\n      this.classList.add('colspan-' + this.getAttribute('colspan'));\n    }\n    if (this.hasAttribute('rowspan')) {\n      this.classList.add('rowspan-' + this.getAttribute('rowspan'));\n    }\n  }\n\n  getInstance() {\n    return this._instance;\n  }\n\n  connectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(true);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(false);\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    name = qx.lang.String.camelCase(name);\n    if (this._instance && qx.Class.hasProperty(this._instance.constructor, name)) {\n      this._instance.set(name, newValue);\n    }\n  }\n}\n\nwindow.QxConnector = QxConnector;\n\nclass TemplatedElement extends QxConnector {\n  constructor(templateId, QxClass) {\n    super(QxClass);\n    const controller = cv.ui.structure.tile.Controller.getInstance();\n    let template = document.getElementById(templateId);\n    if (template) {\n      const slotAttributes = ['name', 'replaces', 'parent-scope'];\n      const content = template.content.cloneNode(true);\n\n      // copy all attributes, except 'id' of the template itself to the widget\n      for (const name of template.getAttributeNames()) {\n        if (name !== 'id' && !this.hasAttribute(name)) {\n          this.setAttribute(name, template.getAttribute(name));\n        }\n      }\n\n      // move slots into template\n      for (let slot of content.querySelectorAll('slot')) {\n        const slotName = slot.getAttribute('name');\n        const replacementSelector = slot.hasAttribute('replaces') ? slot.getAttribute('replaces') : '';\n        const slotParentScope = slot.hasAttribute('parent-scope') ? parseInt(slot.getAttribute('parent-scope')) : 0;\n        let slotContents = this.querySelectorAll(`[slot='${slotName}']`);\n        if (slotContents.length === 0 && slotName === 'default') {\n          // add all elements that have no slot to this default slot\n          slotContents = this.querySelectorAll(':scope > *:not([slot])');\n        }\n        const attrs = {};\n        for (let i = 0, l = slot.attributes.length; i < l; i++) {\n          if (!slotAttributes.includes(slot.attributes[i].name)) {\n            attrs[slot.attributes[i].name] = slot.attributes[i].value;\n          }\n        }\n        if (slotContents.length > 0) {\n          Array.from(slotContents).forEach(slotContent => {\n            const newNode = slotContent.cloneNode(true);\n            Object.keys(attrs).forEach(attrName => {\n              if (newNode.hasAttribute(attrName)) {\n                if (attrName === 'class') {\n                  // append it\n                  newNode.classList.add(attrs[attrName]);\n                } else {\n                  qx.log.Logger.debug(controller, '[' + templateId + '] attribute', attrName, 'already set, skipping');\n                }\n              } else {\n                newNode.setAttribute(attrName, attrs[attrName]);\n              }\n            });\n            newNode.removeAttribute('slot');\n            slot.parentNode.insertBefore(newNode, slot);\n          });\n          slot.remove();\n          if (replacementSelector) {\n            content.querySelectorAll(replacementSelector).forEach(replaced => {\n              replaced.remove();\n            });\n          }\n        } else {\n          let parentNode = slot.parentNode;\n          if (slotParentScope > 0) {\n            // got slotParentScope elements up and remove that one\n            let i = slotParentScope - 1;\n            while (i > 0) {\n              parentNode = parentNode.parentNode;\n              i--;\n            }\n            if (parentNode) {\n              parentNode.remove();\n            }\n          } else {\n            slot.remove();\n            if (parentNode.children.length === 0 && slotParentScope >= 0) {\n              // also remove slots parent when it has no content\n              // can be obeyed by setting parent-scope=\"-1\"\n              parentNode.remove();\n            }\n          }\n        }\n      }\n      // transfer attribute slots\n      const attributes = this.getAttributeNames();\n      for (const name of attributes) {\n        let value = this.getAttribute(name);\n        const slotAttributeName = `slot-${name}`;\n        const targets = content.querySelectorAll(`[${slotAttributeName}]`);\n        let targetName = name;\n        // allow names like percent-mapping that should also be mapped to a certain elements 'mapping' attribute\n        if (name.endsWith('-mapping')) {\n          targetName = 'mapping';\n        } else if (name.endsWith('-styling')) {\n          targetName = 'styling';\n        } else if (name.endsWith('-format')) {\n          targetName = 'format';\n        }\n        for (const target of targets) {\n          if (target.hasAttribute(slotAttributeName)) {\n            const targetValue = target.getAttribute(slotAttributeName);\n            if (targetValue.startsWith(':')) {\n              // this template slot-attribute contains some configuration\n              for (const entry of targetValue.substring(1).split(',')) {\n                const [key, val] = entry.split('=');\n                switch (key) {\n                  case 'target':\n                    targetName = val;\n                    break;\n                  case 'value':\n                    // not needed here\n                    break;\n                  default:\n                    qx.log.Logger.error(this, 'unhandled slot-attribute configuration key', key);\n                    break;\n                }\n              }\n            }\n          }\n\n          target.setAttribute(targetName, value);\n          target.removeAttribute(slotAttributeName);\n        }\n        if (targets.length > 0) {\n          this.removeAttribute(name);\n        }\n      }\n\n      for (const elem of content.querySelectorAll('*')) {\n        for (const attr of [...elem.attributes]) {\n          if (attr.name.startsWith('slot-')) {\n            let attrValue = attr.value;\n            let targetName = attr.name.substring(5);\n            // only e.g. map slot-progress-mapping to mapping if we have no slot-mapping attribute\n            if (attr.name.endsWith('-mapping') && elem.hasAttribute('slot-mapping')) {\n              targetName = 'mapping';\n            } else if (attr.name.endsWith('-styling') && elem.hasAttribute('slot-styling')) {\n              targetName = 'styling';\n            } else if (attr.name.endsWith('-format') && elem.hasAttribute('slot-format')) {\n              targetName = 'format';\n            } else if (attr.value.startsWith(':')) {\n              attrValue = '';\n              // this template slot-attribute contains some configuration\n              const parts = attr.value.substring(1).split(',');\n              for (const entry of parts) {\n                const [key, val] = entry.split('=');\n                switch (key) {\n                  case 'target':\n                    targetName = val;\n                    break;\n                  case 'value':\n                    attrValue = val;\n                    break;\n                  default:\n                    qx.log.Logger.error(this, 'unhandled slot-attribute configuration key', key);\n                    break;\n                }\n              }\n            }\n            if (attrValue) {\n              elem.setAttribute(targetName, attrValue);\n            }\n            elem.removeAttribute(attr.name);\n          }\n        }\n      }\n\n      // clear content\n      this.innerHTML = '';\n      this.appendChild(content);\n      this.classList.add('cv-widget');\n    } else {\n      qx.log.Logger.error(controller, '[' + templateId + '] no template found for id', templateId);\n    }\n  }\n}\n"
  ],
  "mappings": "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"
}