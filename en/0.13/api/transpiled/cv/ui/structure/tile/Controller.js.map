{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "replace",
    "Config",
    "forceReload",
    "Date",
    "now",
    "locale",
    "Manager",
    "addListener",
    "_onChangeLocale",
    "statics",
    "PREFIX",
    "__MAP",
    "__I",
    "MAPPING_PARAM_REGEX",
    "register",
    "webComponentName",
    "qxClass",
    "onComponentCreated",
    "element",
    "name",
    "tagName",
    "toLowerCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "QxClass",
    "push",
    "log",
    "Logger",
    "error",
    "properties",
    "renderTarget",
    "check",
    "init",
    "document",
    "body",
    "namespace",
    "scrolled",
    "apply",
    "members",
    "__mappings",
    "__stylings",
    "getHtmlStructure",
    "supports",
    "feature",
    "subfeature",
    "initLayout",
    "__gotoStartPage",
    "location",
    "hash",
    "scrollToPage",
    "getInitialPageId",
    "substring",
    "onHistoryRequest",
    "anchor",
    "pageId",
    "skipHistory",
    "page",
    "querySelector",
    "classList",
    "contains",
    "querySelectorAll",
    "oldPage",
    "remove",
    "add",
    "parentElement",
    "nodeName",
    "undefined",
    "headline",
    "getAttribute",
    "pageTitle",
    "History",
    "addToHistory",
    "event",
    "message",
    "Bus",
    "dispatchByName",
    "warn",
    "parseBackendSettings",
    "xml",
    "parseSettings",
    "config",
    "settings",
    "configSettings",
    "configElement",
    "documentElement",
    "bindClickToWidget",
    "translate",
    "cacheUsed",
    "templates",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "addListenerOnce",
    "e",
    "content",
    "getTarget",
    "getResponse",
    "target",
    "getRenderTarget",
    "debug",
    "registerTemplates",
    "child",
    "xmlns",
    "text",
    "getResponseText",
    "parser",
    "DOMParser",
    "parseFromString",
    "firstElementChild",
    "appendChild",
    "observeVisibility",
    "TemplateEngine",
    "setDomFinished",
    "main",
    "shrinkHeight",
    "canAnimate",
    "addEventListener",
    "style",
    "elem",
    "getComputedStyle",
    "height",
    "parseInt",
    "paddingTop",
    "paddingBottom",
    "marginTop",
    "marginBottom",
    "isScrolled",
    "scrollTop",
    "setScrolled",
    "status",
    "getTransport",
    "Request",
    "isSuccessful",
    "send",
    "_applyScrolled",
    "value",
    "forEach",
    "template",
    "customElements",
    "tile",
    "Controller",
    "TemplatedElement",
    "preParse",
    "hasAttribute",
    "theme",
    "data",
    "window",
    "matchMedia",
    "matches",
    "setAttribute",
    "Model",
    "updateFrom",
    "createUI",
    "observer",
    "IntersectionObserver",
    "entries",
    "entry",
    "isIntersecting",
    "removeAttribute",
    "unobserve",
    "root",
    "iframe",
    "observe",
    "doc",
    "rememberKeys",
    "useKeys",
    "language",
    "getLanguage",
    "match",
    "exec",
    "search",
    "_trKeys",
    "attr",
    "trNameElement",
    "key",
    "translation",
    "textContent",
    "trim",
    "trTextElement",
    "doScreenSave",
    "screensave_page",
    "getInitialAddresses",
    "firstPage",
    "id",
    "addMapping",
    "mapping",
    "removeMapping",
    "mapValue",
    "mappingName",
    "store",
    "params",
    "JSON",
    "parse",
    "replaceAll",
    "addStyling",
    "styling",
    "removeStyling",
    "styleValue",
    "stylingName",
    "parseLabel",
    "defer",
    "cvTestMode",
    "Application",
    "structureController",
    "destruct",
    "removeListener",
    "templateId",
    "controller",
    "getElementById",
    "slotAttributes",
    "cloneNode",
    "getAttributeNames",
    "slot",
    "slotName",
    "replacementSelector",
    "slotParentScope",
    "slotContents",
    "attrs",
    "i",
    "l",
    "attributes",
    "length",
    "includes",
    "Array",
    "from",
    "slotContent",
    "newNode",
    "keys",
    "attrName",
    "parentNode",
    "insertBefore",
    "replaced",
    "children",
    "targets",
    "targetName",
    "endsWith",
    "targetValue",
    "startsWith",
    "split",
    "innerHTML",
    "HTMLElement"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Controller for the 'tile' structure.\n *\n * This structure is based on web-components and does not need a parser to work.\n * The config file is directly attached to the document body.\n * The widgets in this structure register a customElement and the browser automatically creates instances\n * of this widgets once the customElement is added to the body.\n *\n * The basic structure is a set of pages that contain a list of tiles.\n * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n * but also can spread over more than one cell by using row-/column spanning.\n *\n * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n * contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n *\n * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template)\n * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.\n *\n * @asset(structures/tile/*)\n * @author Tobias Br√§utigam\n * @since 2022\n * @ignore(IntersectionObserver)\n */\nqx.Class.define('cv.ui.structure.tile.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT = '';\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/tile-globals.scss').replace('.scss', '.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n    qx.locale.Manager.getInstance().addListener('changeLocale', this._onChangeLocale, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    // prefix for all custom components uses/provided by this structure\n    PREFIX: 'cv-',\n    __MAP: {},\n    __I: {},\n\n    MAPPING_PARAM_REGEX: /^(.+)\\(([^)]+)\\)$/,\n\n    register(webComponentName, qxClass) {\n      this.__MAP[webComponentName] = qxClass;\n    },\n\n    onComponentCreated(element) {\n      const name = element.tagName.toLowerCase();\n      if (Object.prototype.hasOwnProperty.call(this, name)) {\n        const QxClass = this.__MAP[name];\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          this.__I[name] = [];\n        }\n        this.__I[name].push(new QxClass(element));\n      } else {\n        qx.log.Logger.error(this, 'no QxClass registered for custom element ' + name);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * The target this structure should be inserted into\n     */\n    renderTarget: {\n      check: 'Element',\n      init: document.body\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    },\n\n    scrolled: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyScrolled'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __HTML_STRUCT: null,\n    __mappings: null,\n    __stylings: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    supports(feature, subfeature) {\n      return false;\n    },\n\n    initLayout() {},\n\n    __gotoStartPage() {\n      // open first page\n      if (!document.location.hash) {\n        this.scrollToPage(this.getInitialPageId());\n      } else {\n        this.scrollToPage(document.location.hash.substring(1));\n      }\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor);\n      }\n    },\n\n    scrollToPage(pageId, skipHistory) {\n      if (!pageId) {\n        return;\n      }\n      const page = document.querySelector('#' + pageId);\n      if (page) {\n        if (!page.classList.contains('active')) {\n          for (let oldPage of document.querySelectorAll('cv-page.active')) {\n            oldPage.classList.remove('active');\n          }\n          for (let oldPage of document.querySelectorAll('cv-page.sub-active')) {\n            oldPage.classList.remove('sub-active');\n          }\n          page.classList.add('active');\n          // mark parent pages that there is an active subpage\n          let parentElement = page.parentElement;\n          while (parentElement && parentElement.nodeName.toLowerCase() !== 'main') {\n            if (parentElement.nodeName.toLowerCase() === 'cv-page') {\n              parentElement.classList.add('sub-active');\n            }\n            parentElement = parentElement.parentElement;\n          }\n\n          if (skipHistory === undefined) {\n            const headline = page.getAttribute('name');\n            let pageTitle = 'CometVisu';\n            if (headline) {\n              pageTitle = headline + ' - ' + pageTitle;\n            }\n            qx.bom.History.getInstance().addToHistory(pageId, pageTitle);\n          }\n          qx.event.message.Bus.dispatchByName('cv.ui.structure.tile.currentPage', page);\n        }\n      } else {\n        this.warn('no page with id', pageId, 'found');\n      }\n    },\n\n    // not needed, backend parse/init themselves\n    parseBackendSettings(xml) {\n/*      if (xml.querySelectorAll('cv-backend').length === 0) {\n        // no backends defined, use the default one;\n        const client = cv.io.BackendConnections.initBackendClient();\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug('logged in');\n          cv.io.BackendConnections.startInitialRequests();\n        });\n      }*/\n      return false;\n    },\n\n    /**\n     * Parses structure specific settings\n     * @param config {XMLDocument} loaded config\n     */\n    parseSettings(config) {\n      document.body.classList.add('loading-structure');\n      const settings = cv.Config.configSettings;\n      const configElement = config.documentElement;\n      settings.bindClickToWidget = configElement.getAttribute('bind_click_to_widget') === 'true';\n      this.translate(config, true);\n\n      if (!cv.Config.cacheUsed) {\n        const templates = qx.util.ResourceManager.getInstance().toUri('structures/tile/templates.xml');\n\n        const ajaxRequest = new qx.io.request.Xhr(templates);\n        ajaxRequest.set({\n          accept: 'application/xml',\n          cache: !cv.Config.forceReload\n        });\n\n        ajaxRequest.addListenerOnce('success', e => {\n          let content = e.getTarget().getResponse();\n          const target = this.getRenderTarget();\n          this.debug('creating pages');\n          // register custom elements for templates in this document\n          this.registerTemplates(content);\n          let child;\n          // we need the documents to be in HTML namespace\n          if (!content.documentElement.xmlns) {\n            let text = e.getTarget().getResponseText();\n            text = text.replace('<templates', '<templates xmlns=\"http://www.w3.org/1999/xhtml\"');\n\n            const parser = new DOMParser();\n            content = parser.parseFromString(text, 'text/xml');\n          }\n          while ((child = content.documentElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n\n          while ((child = configElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n          document.body.classList.remove('loading-structure');\n          this.debug('finalizing');\n          this.observeVisibility();\n          qx.event.message.Bus.dispatchByName('setup.dom.append');\n          this.debug('pages created');\n          this.__gotoStartPage();\n          this.debug('setup.dom.finished');\n          qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n          cv.TemplateEngine.getInstance().setDomFinished(true);\n\n          const main = document.body.querySelector(':scope > main');\n          if (main) {\n            let shrinkHeight = -1;\n            let canAnimate = false;\n            main.addEventListener('scroll', () => {\n              // we need to know the space that we gain in height, when the shrinked elements are not shown\n              // and must not start the effect before we reach that threshold, otherwise\n              // main.scrollTop would go back to 0 because we have more height available and do not have to scroll+\n              // anymore, that would lead to an endless toggling this effect\n              // so long story short: avoid that applying this effect would lead to: main.scrollTop === 0\n              if (shrinkHeight < 0) {\n                shrinkHeight = 1;\n                let style;\n                for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n                  style = getComputedStyle(elem);\n                  if (!canAnimate) {\n                    // we need at least one element that has a defined height, to get a working animation\n                    canAnimate = !!elem.style.height;\n                  }\n                  shrinkHeight += parseInt(style.height) +\n                    parseInt(style.paddingTop) +\n                    parseInt(style.paddingBottom) +\n                    parseInt(style.marginTop) +\n                    parseInt(style.marginBottom);\n                }\n              }\n              if (!this.isScrolled() && main.scrollTop > shrinkHeight) {\n                this.setScrolled(true);\n                if (!canAnimate) {\n                  main.scrollTop -= shrinkHeight;\n                }\n              } else if (this.isScrolled() && main.scrollTop === 0) {\n                this.setScrolled(false);\n                shrinkHeight = -1;\n              }\n            });\n          }\n        });\n        ajaxRequest.addListener('statusError', e => {\n          const status = e.getTarget().getTransport().status;\n          if (!qx.util.Request.isSuccessful(status)) {\n            this.error('filenotfound', templates);\n          }\n          document.body.classList.remove('loading-structure');\n        });\n\n        ajaxRequest.send();\n      }\n    },\n\n    _applyScrolled(value) {\n      if (value) {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.add('scrolled');\n        }\n      } else {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.remove('scrolled');\n        }\n      }\n    },\n\n    /**\n     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element\n     * @param xml {XMLDocument}\n     */\n    registerTemplates(xml) {\n      xml.querySelectorAll('templates[structure=\\'tile\\'] > template').forEach(template => {\n        customElements.define(\n          cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'),\n          class extends TemplatedElement {\n            constructor() {\n              super(template.getAttribute('id'));\n            }\n          }\n        );\n      });\n    },\n\n    /**\n     * Pre parsing hook, do everything here that is needed before the real parsing process can start\n     * @param xml {XMLDocument}\n     */\n    async preParse(xml) {\n      if (xml.documentElement.hasAttribute('theme')) {\n        let theme = xml.documentElement.getAttribute('theme');\n        const data = {};\n        if (theme === 'system') {\n          if (window.matchMedia) {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', theme);\n            data['theme'] = theme;\n            cv.data.Model.getInstance().updateFrom('system', data);\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n\n              data['theme'] = e.matches ? 'dark' : 'light';\n              cv.data.Model.getInstance().updateFrom('system', data);\n            });\n          } else {\n            this.error('system theme detection not possible in this browser');\n          }\n        } else {\n          document.documentElement.setAttribute('data-theme', theme);\n          data['theme'] = theme;\n          cv.data.Model.getInstance().updateFrom('system', data);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats\n     */\n    createUI(config) {},\n\n    observeVisibility() {\n      // find all pages with an iframe with attribute \"data-src\" and observe its parent page\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && entry.target.hasAttribute('data-src')) {\n            entry.target.setAttribute('src', entry.target.getAttribute('data-src'));\n            entry.target.removeAttribute('data-src');\n            observer.unobserve(entry.target);\n          }\n        }, {\n          root: document.querySelector('body > main')\n        });\n      });\n      for (const iframe of document.querySelectorAll('iframe[data-src], img[data-src]')) {\n        observer.observe(iframe);\n      }\n    },\n\n    translate(doc, rememberKeys, useKeys) {\n      let language = qx.locale.Manager.getInstance().getLanguage();\n      let match = /locale=([a-z]{2,3})/.exec(document.location.search);\n      if (match) {\n        language = match[1];\n      }\n      if (rememberKeys) {\n        this._trKeys = {};\n      }\n      for (const attr of ['name', 'label', 'title', 'format']) {\n        for (const trNameElement of doc.querySelectorAll(`*[${attr}^=\"tr(\"]`)) {\n          const match = /^tr\\('([^']+)'\\)$/.exec(trNameElement.getAttribute(attr));\n\n          if (!match && !useKeys) {\n            this.warn('attribute content no valid translation string', trNameElement.getAttribute(attr));\n\n            continue;\n          }\n          const key = useKeys ? this._trKeys[trNameElement.getAttribute(attr)] : match[1];\n          const translation = doc.querySelector(\n            `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n          );\n\n          if (translation) {\n            if (rememberKeys) {\n              this._trKeys[translation.textContent.trim()] = key;\n            }\n            trNameElement.setAttribute(attr, translation.textContent.trim());\n          } else {\n            trNameElement.setAttribute(attr, key);\n            this.warn(`[${language}] no translation found for: \"${key}\"`);\n          }\n        }\n      }\n      for (const trTextElement of doc.querySelectorAll('*[tr=\"true\"]')) {\n        const key = useKeys ? this._trKeys[trTextElement.textContent.trim()] : trTextElement.textContent.trim();\n        const translation = doc.querySelector(\n          `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n        );\n\n        if (translation) {\n          if (rememberKeys) {\n            this._trKeys[translation.textContent.trim()] = key;\n          }\n          trTextElement.textContent = translation.textContent.trim();\n        } else {\n          trTextElement.textContent = key;\n          this.warn(`[${language}] no translation found for: \"${key}\"`);\n        }\n      }\n    },\n\n    /**\n     * Handle fired event from screensaver\n     * @return {Array<string>} Array with addresses\n     */\n    doScreenSave() {\n      if (cv.Config.configSettings.screensave_page) {\n        this.scrollToPage(cv.Config.configSettings.screensave_page);\n      }\n    },\n\n    /**\n     * Return the addresses needed to update all states on the initially loaded page\n     */\n    getInitialAddresses() {\n      return [];\n    },\n\n    /**\n     * Returns the widget id of the page item initially loaded\n     * @returns {String} widget path like 'id_'...\n     */\n    getInitialPageId() {\n      const firstPage = document.querySelector('cv-page');\n      return firstPage ? firstPage.id : '';\n    },\n\n    /**\n     *\n     * @param name {String} mapping name\n     * @param mapping {cv.ui.structure.tile.elements.Mapping}\n     */\n    addMapping(name, mapping) {\n      if (!this.__mappings) {\n        this.__mappings = {};\n      }\n      this.__mappings[name] = mapping;\n    },\n\n    removeMapping(name) {\n      if (this.__mappings) {\n        delete this.__mappings[name];\n      }\n    },\n\n    mapValue(mappingName, value, store) {\n      let match;\n      let params = [];\n      if ((match = cv.ui.structure.tile.Controller.MAPPING_PARAM_REGEX.exec(mappingName)) !== null) {\n        // this mapping name contains a parameter\n        try {\n          params = JSON.parse(`[${match[2].replaceAll('\\'', '\"')}]`);\n        } catch (e) {\n          this.error('error parsing parameters from ' + mappingName);\n        }\n        mappingName = match[1];\n      }\n      if (this.__mappings && Object.prototype.hasOwnProperty.call(this.__mappings, mappingName)) {\n        return this.__mappings[mappingName].mapValue(value, store, params);\n      }\n      return value;\n    },\n\n    /**\n     * @param name {String} styling name\n     * @param styling {cv.ui.structure.tile.elements.Styling}\n     */\n    addStyling(name, styling) {\n      if (!this.__stylings) {\n        this.__stylings = {};\n      }\n      this.__stylings[name] = styling;\n    },\n\n    removeStyling(name) {\n      if (this.__stylings) {\n        delete this.__stylings[name];\n      }\n    },\n\n    styleValue(stylingName, value, store) {\n      if (this.__stylings && Object.prototype.hasOwnProperty.call(this.__stylings, stylingName)) {\n        return this.__stylings[stylingName].mapValue(value, store);\n      }\n      return value;\n    },\n\n    // for compatibility with pure controller\n    parseLabel() {\n      return '';\n    },\n\n    _onChangeLocale() {\n      this.translate(document.body, false, true);\n    }\n  },\n\n  defer(statics) {\n    if (!window.cvTestMode) {\n      // do not apply ourselves automatically in test mode\n      cv.Application.structureController = statics.getInstance();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.locale.Manager.getInstance().removeListener('changeLocale', this._onChangeLocale, this);\n  }\n});\n\nclass TemplatedElement extends HTMLElement {\n  constructor(templateId) {\n    super();\n    const controller = cv.ui.structure.tile.Controller.getInstance();\n    let template = document.getElementById(templateId);\n    if (template) {\n      const slotAttributes = ['name', 'replaces', 'parent-scope'];\n      const content = template.content.cloneNode(true);\n\n      // copy all attributes, except 'id' of the template itself to the widget\n      for (const name of template.getAttributeNames()) {\n        if (name !== 'id') {\n          this.setAttribute(name, template.getAttribute(name));\n        }\n      }\n\n      // move slots into template\n      for (let slot of content.querySelectorAll('slot')) {\n        const slotName = slot.getAttribute('name');\n        const replacementSelector = slot.hasAttribute('replaces') ? slot.getAttribute('replaces') : '';\n        const slotParentScope = slot.hasAttribute('parent-scope') ? parseInt(slot.getAttribute('parent-scope')) : 0;\n        let slotContents = this.querySelectorAll(`[slot='${slotName}']`);\n        const attrs = {};\n        for (let i = 0, l = slot.attributes.length; i < l; i++) {\n          if (!slotAttributes.includes(slot.attributes[i].name)) {\n            attrs[slot.attributes[i].name] = slot.attributes[i].value;\n          }\n        }\n        if (slotContents.length > 0) {\n          Array.from(slotContents).forEach(slotContent => {\n            const newNode = slotContent.cloneNode(true);\n            Object.keys(attrs).forEach(attrName => {\n              if (newNode.hasAttribute(attrName)) {\n                if (attrName === 'class') {\n                  // append it\n                  newNode.classList.add(attrs[attrName]);\n                } else {\n                  qx.log.Logger.debug(controller, '[' + templateId + '] attribute', attrName, 'already set, skipping');\n                }\n              } else {\n                newNode.setAttribute(attrName, attrs[attrName]);\n              }\n            });\n            newNode.removeAttribute('slot');\n            slot.parentNode.insertBefore(newNode, slot);\n          });\n          slot.remove();\n          if (replacementSelector) {\n            content.querySelectorAll(replacementSelector).forEach(replaced => {\n              replaced.remove();\n            });\n          }\n        } else {\n          let parentNode = slot.parentNode;\n          if (slotParentScope > 0) {\n            // got slotParentScope elements up and remove that one\n            let i = slotParentScope - 1;\n            while (i > 0) {\n              parentNode = parentNode.parentNode;\n              i--;\n            }\n            if (parentNode) {\n              parentNode.remove();\n            }\n          } else {\n            slot.remove();\n            if (parentNode.children.length === 0) {\n              // also remove slots parent when it has no content\n              parentNode.remove();\n            }\n          }\n        }\n      }\n      // transfer attribute slots\n      const attributes = this.getAttributeNames();\n      attributes.forEach(name => {\n        let value = this.getAttribute(name);\n        const targets = content.querySelectorAll('[slot-' + name + ']');\n        let targetName = name;\n        // allow names like percent-mapping that should also be mapped to a certain elements 'mapping' attribute\n        if (name.endsWith('-mapping')) {\n          targetName = 'mapping';\n        } else if (name.endsWith('-styling')) {\n          targetName = 'styling';\n        } else if (name.endsWith('-format')) {\n          targetName = 'format';\n        }\n        for (const target of targets) {\n          if (targetName !== name && target.hasAttribute('slot-' + name)) {\n            const targetValue = target.getAttribute('slot-' + name);\n            if (targetValue.startsWith(':')) {\n              // this template slot-attribute contains some configuration\n              for (const entry of targetValue.substring(1).split(',')) {\n                const [key, value] = entry.split('=');\n                switch (key) {\n                  case 'target':\n                    name = value;\n                    break;\n                  default:\n                    qx.log.Logger.error(this, 'unhandled slot-attribute configuration key', key);\n                    break;\n                }\n              }\n            }\n            target.setAttribute(name, value);\n\n            target.removeAttribute('slot-' + name);\n          } else {\n            target.setAttribute(targetName, value);\n\n            target.removeAttribute('slot-' + targetName);\n          }\n        }\n        if (targets.length > 0) {\n          this.removeAttribute(name);\n        }\n      });\n      content.querySelectorAll('*').forEach(elem => {\n        [...elem.attributes].forEach(attr => {\n          if (attr.name.startsWith('slot-')) {\n            let targetName = attr.name.substring(5);\n            // only e.g. map slot-progress-mapping to mapping if we have no slot-mapping attribute\n            if (attr.name.endsWith('-mapping') && elem.hasAttribute('slot-mapping')) {\n              targetName = 'mapping';\n            } else if (attr.name.endsWith('-styling') && elem.hasAttribute('slot-styling')) {\n              targetName = 'styling';\n            } else if (attr.name.endsWith('-format') && elem.hasAttribute('slot-format')) {\n              targetName = 'format';\n            }\n            if (attr.value && !attr.value.startsWith(':')) {\n              elem.setAttribute(targetName, attr.value);\n            }\n            elem.removeAttribute(attr.name);\n          }\n        });\n      });\n\n      // clear content\n      this.innerHTML = '';\n      this.appendChild(content);\n      this.classList.add('cv-widget');\n    } else {\n      qx.log.Logger.error(controller, '[' + templateId + '] no template found for id', templateId);\n    }\n  }\n}\n"
  ],
  "mappings": "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"
}