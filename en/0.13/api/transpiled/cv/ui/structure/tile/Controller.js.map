{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/Controller.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "replace",
    "Config",
    "forceReload",
    "Date",
    "now",
    "statics",
    "PREFIX",
    "__MAP",
    "__I",
    "register",
    "webComponentName",
    "qxClass",
    "onComponentCreated",
    "element",
    "name",
    "tagName",
    "toLowerCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "QxClass",
    "push",
    "log",
    "Logger",
    "error",
    "properties",
    "renderTarget",
    "check",
    "init",
    "document",
    "body",
    "namespace",
    "members",
    "__mappings",
    "__stylings",
    "getHtmlStructure",
    "supports",
    "feature",
    "subfeature",
    "initLayout",
    "__gotoStartPage",
    "location",
    "hash",
    "scrollToPage",
    "getInitialPageId",
    "substring",
    "onHistoryRequest",
    "anchor",
    "pageId",
    "skipHistory",
    "page",
    "querySelector",
    "classList",
    "contains",
    "querySelectorAll",
    "oldPage",
    "remove",
    "add",
    "parentElement",
    "nodeName",
    "undefined",
    "headline",
    "getAttribute",
    "pageTitle",
    "History",
    "addToHistory",
    "event",
    "message",
    "Bus",
    "dispatchByName",
    "warn",
    "parseBackendSettings",
    "xml",
    "length",
    "client",
    "io",
    "BackendConnections",
    "initBackendClient",
    "login",
    "configSettings",
    "credentials",
    "debug",
    "startInitialRequest",
    "parseSettings",
    "config",
    "settings",
    "configElement",
    "documentElement",
    "bindClickToWidget",
    "translate",
    "cacheUsed",
    "templates",
    "ajaxRequest",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "addListenerOnce",
    "e",
    "content",
    "getTarget",
    "getResponse",
    "target",
    "getRenderTarget",
    "registerTemplates",
    "child",
    "xmlns",
    "text",
    "getResponseText",
    "parser",
    "DOMParser",
    "parseFromString",
    "firstElementChild",
    "appendChild",
    "TemplateEngine",
    "setDomFinished",
    "addListener",
    "status",
    "getTransport",
    "Request",
    "isSuccessful",
    "send",
    "forEach",
    "template",
    "customElements",
    "tile",
    "Controller",
    "TemplatedElement",
    "preParse",
    "hasAttribute",
    "theme",
    "data",
    "window",
    "matchMedia",
    "matches",
    "setAttribute",
    "Model",
    "updateFrom",
    "addEventListener",
    "createUI",
    "doc",
    "attr",
    "trNameElement",
    "match",
    "exec",
    "key",
    "translation",
    "locale",
    "Manager",
    "getLanguage",
    "textContent",
    "trim",
    "trTextElement",
    "doScreenSave",
    "screensave_page",
    "getInitialAddresses",
    "firstPage",
    "id",
    "addMapping",
    "mapping",
    "removeMapping",
    "mapValue",
    "mappingName",
    "value",
    "store",
    "addStyling",
    "styling",
    "removeStyling",
    "styleValue",
    "stylingName",
    "defer",
    "cvTestMode",
    "Application",
    "structureController",
    "templateId",
    "controller",
    "getElementById",
    "slotAttributes",
    "cloneNode",
    "slot",
    "slotName",
    "replacementSelector",
    "slotParentScope",
    "parseInt",
    "slotContents",
    "attrs",
    "i",
    "l",
    "attributes",
    "includes",
    "Array",
    "from",
    "slotContent",
    "newNode",
    "keys",
    "attrName",
    "removeAttribute",
    "parentNode",
    "insertBefore",
    "replaced",
    "children",
    "getAttributeNames",
    "targets",
    "targetName",
    "endsWith",
    "elem",
    "startsWith",
    "innerHTML",
    "HTMLElement"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Controller.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Controller for the 'tile' structure.\n *\n * This structure is based on web-components and does not need a parser to work.\n * The config file is directly attached to the document body.\n * The widgets in this structure register a customElement and the browser automatically creates instances\n * of this widgets once the customElement is added to the body.\n *\n * The basic structure is a set of pages that contain a list of tiles.\n * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n * but also can spread over more then one cell by using row-/column spanning.\n *\n * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n * contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n *\n * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template}\n * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.\n *\n * @asset(structures/tile/*)\n * @author Tobias Bräutigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__HTML_STRUCT = '';\n    qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/tile-globals.scss').replace('.scss', '.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    // prefix for all custom components uses/provided by this structure\n    PREFIX: 'cv-',\n    __MAP: {},\n    __I: {},\n    register(webComponentName, qxClass) {\n      this.__MAP[webComponentName] = qxClass;\n    },\n\n    onComponentCreated(element) {\n      const name = element.tagName.toLowerCase();\n      if (Object.prototype.hasOwnProperty.call(this, name)) {\n        const QxClass = this.__MAP[name];\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          this.__I[name] = [];\n        }\n        this.__I[name].push(new QxClass(element));\n      } else {\n        qx.log.Logger.error(this, 'no QxClass registered for custom element ' + name);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * The target this structure should be inserted into\n     */\n    renderTarget: {\n      check: 'Element',\n      init: document.body\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __HTML_STRUCT: null,\n    __mappings: null,\n    __stylings: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    supports(feature, subfeature) {\n      return false;\n    },\n\n    initLayout() {\n    },\n\n    __gotoStartPage() {\n      // open first page\n      if (!document.location.hash) {\n        this.scrollToPage(this.getInitialPageId());\n      } else {\n        this.scrollToPage(document.location.hash.substring(1));\n      }\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor);\n      }\n    },\n\n    scrollToPage(pageId, skipHistory) {\n      if (!pageId) {\n        return;\n      }\n      const page = document.querySelector('#' + pageId);\n      if (page) {\n        if (!page.classList.contains('active')) {\n          for (let oldPage of document.querySelectorAll('cv-page.active')) {\n            oldPage.classList.remove('active');\n          }\n          for (let oldPage of document.querySelectorAll('cv-page.sub-active')) {\n            oldPage.classList.remove('sub-active');\n          }\n          page.classList.add('active');\n          // mark parent pages that there is a active subpage\n          let parentElement = page.parentElement;\n          while (parentElement && parentElement.nodeName.toLowerCase() !== 'main') {\n            if (parentElement.nodeName.toLowerCase() === 'cv-page') {\n              parentElement.classList.add('sub-active');\n            }\n            parentElement = parentElement.parentElement;\n          }\n\n          if (skipHistory === undefined) {\n            const headline = page.getAttribute('name');\n            let pageTitle = 'CometVisu';\n            if (headline) {\n              pageTitle = headline + ' - '+pageTitle;\n            }\n            qx.bom.History.getInstance().addToHistory(pageId, pageTitle);\n          }\n          qx.event.message.Bus.dispatchByName('cv.ui.structure.tile.currentPage', page);\n        }\n      } else {\n        this.warn('no page with id', pageId, 'found');\n      }\n    },\n\n    // not needed, backend parse/init themselves\n    parseBackendSettings(xml) {\n      if (xml.querySelectorAll('cv-backend').length === 0) {\n        // no backends defined, use the default one;\n        const client = cv.io.BackendConnections.initBackendClient();\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug('logged in');\n          cv.io.BackendConnections.startInitialRequest();\n        });\n      }\n      return false;\n    },\n\n    /**\n     * Parses structure specific settings\n     * @param config {XMLDocument} loaded config\n     */\n    parseSettings(config) {\n      document.body.classList.add('loading-structure');\n      const settings = cv.Config.configSettings;\n      const configElement = config.documentElement;\n      settings.bindClickToWidget = configElement.getAttribute('bind_click_to_widget') === 'true';\n      this.translate(config);\n\n      if (!cv.Config.cacheUsed) {\n        const templates = qx.util.ResourceManager.getInstance().toUri('structures/tile/templates.xml');\n        const ajaxRequest = new qx.io.request.Xhr(templates);\n        ajaxRequest.set({\n          accept: 'application/xml',\n          cache: !cv.Config.forceReload\n        });\n        ajaxRequest.addListenerOnce('success', e => {\n          let content = e.getTarget().getResponse();\n          const target = this.getRenderTarget();\n          this.debug('creating pages');\n          // register custom elements for templates in this document\n          this.registerTemplates(content);\n          let child;\n          // we need the documents to be in HTML namespace\n          if (!content.documentElement.xmlns) {\n            let text = e.getTarget().getResponseText();\n            text = text.replace('<templates', '<templates xmlns=\"http://www.w3.org/1999/xhtml\"');\n            const parser = new DOMParser();\n            content = parser.parseFromString(text, 'text/xml');\n          }\n          while ((child = content.documentElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n\n          while ((child = configElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n          document.body.classList.remove('loading-structure');\n          this.debug('finalizing');\n          qx.event.message.Bus.dispatchByName('setup.dom.append');\n          this.debug('pages created');\n          this.__gotoStartPage();\n          this.debug('setup.dom.finished');\n          qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n          cv.TemplateEngine.getInstance().setDomFinished(true);\n        });\n        ajaxRequest.addListener('statusError', function (e) {\n          const status = e.getTarget().getTransport().status;\n          if (!qx.util.Request.isSuccessful(status)) {\n            this.error('filenotfound', templates);\n          }\n          document.body.classList.remove('loading-structure');\n        }, this);\n\n        ajaxRequest.send();\n      }\n    },\n\n    /**\n     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element\n     * @param xml {XMLDocument}\n     */\n    registerTemplates(xml) {\n      xml.querySelectorAll('templates[structure=\\'tile\\'] > template').forEach(template => {\n        customElements.define(cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'), class extends TemplatedElement {\n          constructor() {\n            super(template.getAttribute('id'));\n          }\n        });\n      });\n    },\n\n    /**\n     * Pre parsing hook, do everything here that is needed before the real parsing process can start\n     * @param xml {XMLDocument}\n     */\n    async preParse(xml) {\n      if (xml.documentElement.hasAttribute('theme')) {\n        let theme = xml.documentElement.getAttribute('theme');\n        const data = {};\n        if (theme === 'system') {\n          if (window.matchMedia) {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', theme);\n            data['theme'] = theme;\n            cv.data.Model.getInstance().updateFrom('system', data);\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n              data['theme'] = e.matches ? 'dark' : 'light';\n              cv.data.Model.getInstance().updateFrom('system', data);\n            });\n          } else {\n            this.error('system theme detection not possible in this browser');\n          }\n        } else {\n          document.documentElement.setAttribute('data-theme', theme);\n          data['theme'] = theme;\n          cv.data.Model.getInstance().updateFrom('system', data);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats\n     */\n    createUI(config) {\n    },\n\n    translate(doc) {\n      for (const attr of ['name', 'label']) {\n        for (const trNameElement of doc.querySelectorAll(`*[${attr}^=\"tr(\"]`)) {\n          const match = /^tr\\('([^']+)'\\)$/.exec(trNameElement.getAttribute(attr));\n          if (!match) {\n            this.warn('attribute content no valid translation string', trNameElement.getAttribute(attr));\n            continue;\n          }\n          const key = match[1];\n          const translation = doc.querySelector(`cv-translations > language[name=\"${qx.locale.Manager.getInstance().getLanguage()}\"] > tr[key='${key}']`);\n          if (translation) {\n            trNameElement.setAttribute(attr, translation.textContent.trim());\n          } else {\n            trNameElement.setAttribute(attr, key);\n            this.warn(`[${qx.locale.Manager.getInstance().getLanguage()}] no translation found for: \"${key}\"`);\n          }\n        }\n      }\n      for (const trTextElement of doc.querySelectorAll('*[tr=\"true\"]')) {\n        const key = trTextElement.textContent.trim();\n        const translation = doc.querySelector(`cv-translations > language[name=\"${qx.locale.Manager.getInstance().getLanguage()}\"] > tr[key='${key}']`);\n        if (translation) {\n          trTextElement.textContent = translation.textContent.trim();\n        } else {\n          this.warn(`[${qx.locale.Manager.getInstance().getLanguage()}] no translation found for: \"${key}\"`);\n        }\n      }\n    },\n\n    /**\n     * Handle fired event from screensaver\n     * @return {Array<string>} Array with addresses\n     */\n    doScreenSave() {\n      if (cv.Config.configSettings.screensave_page) {\n        this.scrollToPage(cv.Config.configSettings.screensave_page);\n      }\n    },\n\n    /**\n     * Return the addresses needed to update all states on the initially loaded page\n     */\n    getInitialAddresses() {\n      return [];\n    },\n\n    /**\n     * Returns the widget id of the page item initially loaded\n     * @returns {String} widget path like 'id_'...\n     */\n    getInitialPageId() {\n      const firstPage = document.querySelector('cv-page');\n      return firstPage ? firstPage.id : '';\n    },\n\n    /**\n     *\n     * @param name {String} mapping name\n     * @param mapping {cv.ui.structure.tile.elements.Mapping}\n     */\n    addMapping(name, mapping) {\n      if (!this.__mappings) {\n        this.__mappings = {};\n      }\n      this.__mappings[name] = mapping;\n    },\n\n    removeMapping(name) {\n      if (this.__mappings) {\n        delete this.__mappings[name];\n      }\n    },\n\n    mapValue(mappingName, value, store) {\n      if (this.__mappings && Object.prototype.hasOwnProperty.call(this.__mappings, mappingName)) {\n        return this.__mappings[mappingName].mapValue(value, store);\n      }\n      return value;\n    },\n\n    /**\n     * @param name {String} styling name\n     * @param styling {cv.ui.structure.tile.elements.Styling}\n     */\n    addStyling(name, styling) {\n      if (!this.__stylings) {\n        this.__stylings = {};\n      }\n      this.__stylings[name] = styling;\n    },\n\n    removeStyling(name) {\n      if (this.__stylings) {\n        delete this.__stylings[name];\n      }\n    },\n\n    styleValue(stylingName, value, store) {\n      if (this.__stylings && Object.prototype.hasOwnProperty.call(this.__stylings, stylingName)) {\n        return this.__stylings[stylingName].mapValue(value, store);\n      }\n      return value;\n    }\n  },\n  defer: function (statics) {\n    if (!window.cvTestMode) {\n      // do not apply ourselves automatically in test mode\n      cv.Application.structureController = statics.getInstance();\n    }\n  }\n});\n\nclass TemplatedElement extends HTMLElement {\n  constructor(templateId) {\n    super();\n    const controller = cv.ui.structure.tile.Controller.getInstance();\n    let template = document.getElementById(templateId);\n    if (template) {\n      const slotAttributes = ['name', 'replaces', 'parent-scope'];\n      const content = template.content.cloneNode(true);\n      // move slots into template\n      for (let slot of content.querySelectorAll('slot')) {\n        const slotName = slot.getAttribute('name');\n        const replacementSelector = slot.hasAttribute('replaces') ? slot.getAttribute('replaces') : '';\n        const slotParentScope = slot.hasAttribute('parent-scope') ? parseInt(slot.getAttribute('parent-scope')) : 0;\n        let slotContents = this.querySelectorAll(`[slot='${slotName}']`);\n        const attrs = {};\n        for (let i = 0, l = slot.attributes.length; i < l; i++) {\n          if (!slotAttributes.includes(slot.attributes[i].name)) {\n            attrs[slot.attributes[i].name] = slot.attributes[i].value;\n          }\n        }\n        if (slotContents.length > 0) {\n          Array.from(slotContents).forEach(slotContent => {\n            const newNode = slotContent.cloneNode(true);\n            Object.keys(attrs).forEach(attrName => {\n              if (newNode.hasAttribute(attrName)) {\n                if (attrName === 'class') {\n                  // append it\n                  newNode.classList.add(attrs[attrName]);\n                } else {\n                  qx.log.Logger.debug(controller, '['+templateId+'] attribute', attrName, 'already set, skipping');\n                }\n              } else {\n                newNode.setAttribute(attrName, attrs[attrName]);\n              }\n            });\n            newNode.removeAttribute('slot');\n            slot.parentNode.insertBefore(newNode, slot);\n          });\n          slot.remove();\n          if (replacementSelector) {\n            content.querySelectorAll(replacementSelector).forEach(replaced => {\n              replaced.remove();\n            });\n          }\n        } else {\n          qx.log.Logger.debug(controller, '['+templateId+'] no content for slot', slotName, ' removing');\n\n          let parentNode = slot.parentNode;\n          if (slotParentScope > 0) {\n            // got slotParentScope elements up and remove that one\n            let i = slotParentScope-1;\n            while (i > 0) {\n              parentNode = parentNode.parentNode;\n              i--;\n            }\n            if (parentNode) {\n              parentNode.remove();\n            }\n          } else {\n            slot.remove();\n            if (parentNode.children.length === 0) {\n              // also remove slots parent when it has no content\n              parentNode.remove();\n            }\n          }\n        }\n      }\n      // transfer attribute slots\n      const attributes = this.getAttributeNames();\n      attributes.forEach(name => {\n        let value = this.getAttribute(name);\n        const targets = content.querySelectorAll('[slot-'+name+']');\n        let targetName = name;\n        // allow names like percent-mapping that should also be mapped to a certain elements 'mapping' attribute\n        if (name.endsWith('-mapping')) {\n          targetName = 'mapping';\n        } else if (name.endsWith('-styling')) {\n          targetName = 'styling';\n        } else if (name.endsWith('-format')) {\n          targetName = 'format';\n        }\n        targets.forEach(target => {\n          if (targetName !== name && target.hasAttribute('slot-' + name)) {\n            target.setAttribute(name, value || target.getAttribute('slot-'+name));\n            target.removeAttribute('slot-'+name);\n          } else {\n            target.setAttribute(targetName, value || target.getAttribute('slot-'+targetName));\n            target.removeAttribute('slot-'+targetName);\n          }\n        });\n        if (targets.length > 0) {\n          this.removeAttribute(name);\n        }\n      });\n      content.querySelectorAll('*')\n        .forEach(elem => {\n          [...elem.attributes].forEach(attr => {\n            if (attr.name.startsWith('slot-')) {\n              let targetName = attr.name.substring(5);\n              // only e.g. map slot-progress-mapping to mapping if we have no slot-mapping attribute\n              if (attr.name.endsWith('-mapping') && elem.hasAttribute('slot-mapping')) {\n                targetName = 'mapping';\n              } else if (attr.name.endsWith('-styling') && elem.hasAttribute('slot-styling')) {\n                targetName = 'styling';\n              } else if (attr.name.endsWith('-format') && elem.hasAttribute('slot-format')) {\n                targetName = 'format';\n              }\n              if (attr.value) {\n                elem.setAttribute(targetName, attr.value);\n              }\n              elem.removeAttribute(attr.name);\n            }\n          });\n        });\n      \n      // clear content\n      this.innerHTML = '';\n      this.appendChild(content);\n    } else {\n      qx.log.Logger.error(controller, '['+templateId+'] no template found for id', templateId);\n    }\n  }\n}\n"
  ]
}