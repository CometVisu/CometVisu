{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "_asyncToGenerator",
    "arguments",
    "apply",
    "_next",
    "_throw",
    "_createForOfIteratorHelper",
    "Array",
    "isArray",
    "_unsupportedIterableToArray",
    "_n",
    "F",
    "_arrayLikeToArray",
    "toString",
    "from",
    "test",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "replace",
    "Config",
    "forceReload",
    "Date",
    "now",
    "locale",
    "Manager",
    "addListener",
    "_onChangeLocale",
    "statics",
    "PREFIX",
    "__MAP",
    "__I",
    "MAPPING_PARAM_REGEX",
    "register",
    "webComponentName",
    "qxClass",
    "onComponentCreated",
    "element",
    "tagName",
    "toLowerCase",
    "QxClass",
    "log",
    "Logger",
    "error",
    "properties",
    "renderTarget",
    "check",
    "init",
    "document",
    "body",
    "namespace",
    "scrolled",
    "members",
    "__mappings",
    "__stylings",
    "_templateWidgets",
    "getHtmlStructure",
    "supports",
    "feature",
    "subfeature",
    "initLayout",
    "__gotoStartPage",
    "__P_72_5",
    "location",
    "hash",
    "scrollToPage",
    "getInitialPageId",
    "substring",
    "onHistoryRequest",
    "anchor",
    "pageId",
    "skipHistory",
    "page",
    "querySelector",
    "classList",
    "contains",
    "_iterator",
    "querySelectorAll",
    "_step",
    "oldPage",
    "remove",
    "err",
    "_iterator2",
    "_step2",
    "add",
    "parentElement",
    "nodeName",
    "undefined",
    "headline",
    "getAttribute",
    "pageTitle",
    "History",
    "addToHistory",
    "event",
    "message",
    "Bus",
    "dispatchByName",
    "warn",
    "parseBackendSettings",
    "xml",
    "parseSettings",
    "config",
    "_this",
    "settings",
    "configSettings",
    "configElement",
    "documentElement",
    "bindClickToWidget",
    "translate",
    "cacheUsed",
    "templates",
    "ajaxRequest",
    "io",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "addListenerOnce",
    "content",
    "getTarget",
    "getResponse",
    "target",
    "getRenderTarget",
    "debug",
    "registerTemplates",
    "child",
    "xmlns",
    "text",
    "getResponseText",
    "parser",
    "DOMParser",
    "parseFromString",
    "firstElementChild",
    "appendChild",
    "observeVisibility",
    "TemplateEngine",
    "setDomFinished",
    "main",
    "shrinkHeight",
    "canAnimate",
    "addEventListener",
    "style",
    "_iterator3",
    "_step3",
    "elem",
    "getComputedStyle",
    "height",
    "parseInt",
    "paddingTop",
    "paddingBottom",
    "marginTop",
    "marginBottom",
    "isScrolled",
    "scrollTop",
    "setScrolled",
    "enablePullToRefresh",
    "status",
    "getTransport",
    "Request",
    "isSuccessful",
    "send",
    "_applyScrolled",
    "_iterator4",
    "_step4",
    "_iterator5",
    "_step5",
    "preParse",
    "_this2",
    "_callee",
    "theme",
    "data",
    "_callee$",
    "_context",
    "hasAttribute",
    "window",
    "matchMedia",
    "matches",
    "setAttribute",
    "Model",
    "updateFrom",
    "createUI",
    "observer",
    "IntersectionObserver",
    "entries",
    "entry",
    "isIntersecting",
    "removeAttribute",
    "unobserve",
    "root",
    "_iterator6",
    "_step6",
    "iframe",
    "observe",
    "doc",
    "rememberKeys",
    "useKeys",
    "language",
    "getLanguage",
    "match",
    "exec",
    "search",
    "_trKeys",
    "_i",
    "_arr",
    "attr",
    "_iterator7",
    "concat",
    "_step7",
    "trNameElement",
    "key",
    "translation",
    "textContent",
    "trim",
    "_iterator8",
    "_step8",
    "trTextElement",
    "doScreenSave",
    "screensave_page",
    "getInitialAddresses",
    "firstPage",
    "id",
    "addMapping",
    "mapping",
    "removeMapping",
    "mapValue",
    "mappingName",
    "store",
    "params",
    "tile",
    "Controller",
    "JSON",
    "parse",
    "replaceAll",
    "addStyling",
    "styling",
    "removeStyling",
    "styleValue",
    "stylingName",
    "parseLabel",
    "startY",
    "scrollContainer",
    "refreshSpinner",
    "createElement",
    "icon",
    "append",
    "eventSource",
    "onMove",
    "ev",
    "touchY",
    "touches",
    "clientY",
    "touchDiff",
    "onEnd",
    "reload",
    "removeEventListener",
    "isTemplateWidget",
    "includes",
    "_this3",
    "_iterator9",
    "_step9",
    "_loop",
    "template",
    "className",
    "lang",
    "String",
    "firstUp",
    "camelCase",
    "Clazz",
    "getByName",
    "widgets",
    "TemplateWidget",
    "customElements",
    "_TemplatedElement",
    "_class",
    "_classCallCheck",
    "_callSuper",
    "_inherits",
    "_createClass",
    "TemplatedElement",
    "defer",
    "cvTestMode",
    "Application",
    "structureController",
    "destruct",
    "removeListener",
    "QxConnector",
    "_HTMLElement",
    "_this4",
    "isSubClassOf",
    "elements",
    "AbstractCustomElement",
    "_instance",
    "connectedCallback",
    "setConnected",
    "disconnectedCallback",
    "attributeChangedCallback",
    "oldValue",
    "newValue",
    "hasProperty",
    "_wrapNativeSuper",
    "HTMLElement",
    "_QxConnector",
    "templateId",
    "_this5",
    "controller",
    "getElementById",
    "slotAttributes",
    "cloneNode",
    "_iterator10",
    "getAttributeNames",
    "_step10",
    "_iterator11",
    "_step11",
    "_loop2",
    "slot",
    "slotName",
    "replacementSelector",
    "slotParentScope",
    "slotContents",
    "attrs",
    "attributes",
    "slotContent",
    "newNode",
    "attrName",
    "parentNode",
    "insertBefore",
    "replaced",
    "children",
    "_iterator12",
    "_step12",
    "slotAttributeName",
    "targets",
    "targetName",
    "_iterator14",
    "_step14",
    "targetValue",
    "startsWith",
    "_iterator15",
    "split",
    "_step15",
    "_entry$split",
    "_entry$split2",
    "_slicedToArray",
    "val",
    "_iterator13",
    "_step13",
    "_i3",
    "_arr2",
    "_toConsumableArray",
    "attrValue",
    "endsWith",
    "parts",
    "_iterator16",
    "_step16",
    "_entry$split3",
    "_entry$split4",
    "innerHTML"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Controller for the 'tile' structure.\n *\n * This structure is based on web-components and does not need a parser to work.\n * The config file is directly attached to the document body.\n * The widgets in this structure register a customElement and the browser automatically creates instances\n * of this widgets once the customElement is added to the body.\n *\n * The basic structure is a set of pages that contain a list of tiles.\n * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n * but also can spread over more than one cell by using row-/column spanning.\n *\n * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n * contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n *\n * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template)\n * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.\n *\n * @asset(structures/tile/*)\n * @author Tobias Bräutigam\n * @since 2022\n * @ignore(IntersectionObserver)\n */\nqx.Class.define('cv.ui.structure.tile.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT = '';\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/tile-globals.scss').replace('.scss', '.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n    qx.locale.Manager.getInstance().addListener('changeLocale', this._onChangeLocale, this);\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    // prefix for all custom components uses/provided by this structure\n    PREFIX: 'cv-',\n    __MAP: {},\n    __I: {},\n\n    MAPPING_PARAM_REGEX: /^(.+)\\(([^)]+)\\)$/,\n\n    register(webComponentName, qxClass) {\n      this.__MAP[webComponentName] = qxClass;\n    },\n\n    onComponentCreated(element) {\n      const name = element.tagName.toLowerCase();\n      if (Object.prototype.hasOwnProperty.call(this, name)) {\n        const QxClass = this.__MAP[name];\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          this.__I[name] = [];\n        }\n        this.__I[name].push(new QxClass(element));\n      } else {\n        qx.log.Logger.error(this, 'no QxClass registered for custom element ' + name);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * The target this structure should be inserted into\n     */\n    renderTarget: {\n      check: 'Element',\n      init: document.body\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    },\n\n    scrolled: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyScrolled'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __HTML_STRUCT: null,\n    __mappings: null,\n    __stylings: null,\n    _templateWidgets: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    supports(feature, subfeature) {\n      return false;\n    },\n\n    initLayout() {},\n\n    __gotoStartPage() {\n      // open first page\n      if (!document.location.hash) {\n        this.scrollToPage(this.getInitialPageId());\n      } else {\n        this.scrollToPage(document.location.hash.substring(1));\n      }\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor);\n      }\n    },\n\n    scrollToPage(pageId, skipHistory) {\n      if (!pageId) {\n        return;\n      }\n      const page = document.querySelector('cv-page#' + pageId);\n      if (page) {\n        if (!page.classList.contains('active')) {\n          for (let oldPage of document.querySelectorAll('cv-page.active')) {\n            oldPage.classList.remove('active');\n          }\n          for (let oldPage of document.querySelectorAll('cv-page.sub-active')) {\n            oldPage.classList.remove('sub-active');\n          }\n          page.classList.add('active');\n          // mark parent pages that there is an active subpage\n          let parentElement = page.parentElement;\n          while (parentElement && parentElement.nodeName.toLowerCase() !== 'main') {\n            if (parentElement.nodeName.toLowerCase() === 'cv-page') {\n              parentElement.classList.add('sub-active');\n            }\n            parentElement = parentElement.parentElement;\n          }\n\n          if (skipHistory === undefined) {\n            const headline = page.getAttribute('name');\n            let pageTitle = 'CometVisu';\n            if (headline) {\n              pageTitle = headline + ' - ' + pageTitle;\n            }\n            qx.bom.History.getInstance().addToHistory(pageId, pageTitle);\n          }\n          qx.event.message.Bus.dispatchByName('cv.ui.structure.tile.currentPage', page);\n        }\n      } else {\n        this.warn('no page with id', pageId, 'found');\n      }\n    },\n\n    // not needed, backend parse/init themselves\n    parseBackendSettings(xml) {\n/*      if (xml.querySelectorAll('cv-backend').length === 0) {\n        // no backends defined, use the default one;\n        const client = cv.io.BackendConnections.initBackendClient();\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug('logged in');\n          cv.io.BackendConnections.startInitialRequests();\n        });\n      }*/\n      return false;\n    },\n\n    /**\n     * Parses structure specific settings\n     * @param config {XMLDocument} loaded config\n     */\n    parseSettings(config) {\n      document.body.classList.add('loading-structure');\n      const settings = cv.Config.configSettings;\n      const configElement = config.documentElement;\n      settings.bindClickToWidget = configElement.getAttribute('bind_click_to_widget') === 'true';\n      this.translate(config, true);\n\n      if (!cv.Config.cacheUsed) {\n        const templates = qx.util.ResourceManager.getInstance().toUri('structures/tile/templates.xml');\n\n        const ajaxRequest = new qx.io.request.Xhr(templates);\n        ajaxRequest.set({\n          accept: 'application/xml',\n          cache: !cv.Config.forceReload\n        });\n\n        ajaxRequest.addListenerOnce('success', e => {\n          let content = e.getTarget().getResponse();\n          const target = this.getRenderTarget();\n          this.debug('creating pages');\n          // register custom elements for templates in this document\n          this.registerTemplates(content);\n          let child;\n          // we need the documents to be in HTML namespace\n          if (!content.documentElement.xmlns) {\n            let text = e.getTarget().getResponseText();\n            text = text.replace('<templates', '<templates xmlns=\"http://www.w3.org/1999/xhtml\"');\n\n            const parser = new DOMParser();\n            content = parser.parseFromString(text, 'text/xml');\n          }\n          while ((child = content.documentElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n\n          while ((child = configElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n          document.body.classList.remove('loading-structure');\n          this.debug('finalizing');\n          this.observeVisibility();\n          qx.event.message.Bus.dispatchByName('setup.dom.append');\n          this.debug('pages created');\n          this.__gotoStartPage();\n          this.debug('setup.dom.finished');\n          qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n          cv.TemplateEngine.getInstance().setDomFinished(true);\n\n          if (qx.core.Environment.get('qx.debug')) {\n            cv.report.Replay.start();\n          }\n\n          const main = document.body.querySelector(':scope > main');\n          if (main) {\n            let shrinkHeight = -1;\n            let canAnimate = false;\n            main.addEventListener('scroll', () => {\n              // we need to know the space that we gain in height, when the shrinked elements are not shown\n              // and must not start the effect before we reach that threshold, otherwise\n              // main.scrollTop would go back to 0 because we have more height available and do not have to scroll+\n              // anymore, that would lead to an endless toggling this effect\n              // so long story short: avoid that applying this effect would lead to: main.scrollTop === 0\n              if (shrinkHeight < 0) {\n                shrinkHeight = 1;\n                let style;\n                for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n                  style = getComputedStyle(elem);\n                  if (!canAnimate) {\n                    // we need at least one element that has a defined height, to get a working animation\n                    canAnimate = !!elem.style.height;\n                  }\n                  shrinkHeight += parseInt(style.height) +\n                    parseInt(style.paddingTop) +\n                    parseInt(style.paddingBottom) +\n                    parseInt(style.marginTop) +\n                    parseInt(style.marginBottom);\n                }\n              }\n              if (!this.isScrolled() && main.scrollTop > shrinkHeight) {\n                this.setScrolled(true);\n                if (!canAnimate) {\n                  main.scrollTop -= shrinkHeight;\n                }\n              } else if (this.isScrolled() && main.scrollTop === 0) {\n                this.setScrolled(false);\n                shrinkHeight = -1;\n              }\n            });\n          }\n\n          this.enablePullToRefresh();\n        });\n        ajaxRequest.addListener('statusError', e => {\n          const status = e.getTarget().getTransport().status;\n          if (!qx.util.Request.isSuccessful(status)) {\n            this.error('filenotfound', templates);\n          }\n          document.body.classList.remove('loading-structure');\n        });\n\n        ajaxRequest.send();\n      }\n    },\n\n    _applyScrolled(value) {\n      if (value) {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.add('scrolled');\n        }\n      } else {\n        for (const elem of document.body.querySelectorAll(':scope > header [hide-on-scroll=\"true\"]')) {\n          elem.classList.remove('scrolled');\n        }\n      }\n    },\n\n    /**\n     * Pre parsing hook, do everything here that is needed before the real parsing process can start\n     * @param xml {XMLDocument}\n     */\n    async preParse(xml) {\n      if (xml.documentElement.hasAttribute('theme')) {\n        let theme = xml.documentElement.getAttribute('theme');\n        const data = {};\n        if (theme === 'system') {\n          if (window.matchMedia) {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', theme);\n            data['theme'] = theme;\n            cv.data.Model.getInstance().updateFrom('system', data);\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n\n              data['theme'] = e.matches ? 'dark' : 'light';\n              cv.data.Model.getInstance().updateFrom('system', data);\n            });\n          } else {\n            this.error('system theme detection not possible in this browser');\n          }\n        } else {\n          document.documentElement.setAttribute('data-theme', theme);\n          data['theme'] = theme;\n          cv.data.Model.getInstance().updateFrom('system', data);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats\n     */\n    createUI(config) {\n    },\n\n    observeVisibility() {\n      // find all pages with an iframe with attribute \"data-src\" and observe its parent page\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && entry.target.hasAttribute('data-src')) {\n            entry.target.setAttribute('src', entry.target.getAttribute('data-src'));\n            entry.target.removeAttribute('data-src');\n            observer.unobserve(entry.target);\n          }\n        }, {\n          root: document.querySelector('body > main')\n        });\n      });\n      for (const iframe of document.querySelectorAll('iframe[data-src], img[data-src]')) {\n        observer.observe(iframe);\n      }\n    },\n\n    translate(doc, rememberKeys, useKeys) {\n      let language = qx.locale.Manager.getInstance().getLanguage();\n      let match = /locale=([a-z]{2,3})/.exec(document.location.search);\n      if (match) {\n        language = match[1];\n      }\n      if (rememberKeys) {\n        this._trKeys = {};\n      }\n      for (const attr of ['name', 'label', 'title', 'format']) {\n        for (const trNameElement of doc.querySelectorAll(`*[${attr}^=\"tr(\"]`)) {\n          const match = /^tr\\('([^']+)'\\)$/.exec(trNameElement.getAttribute(attr));\n\n          if (!match && !useKeys) {\n            this.warn('attribute content no valid translation string', trNameElement.getAttribute(attr));\n\n            continue;\n          }\n          const key = useKeys ? this._trKeys[trNameElement.getAttribute(attr)] : match[1];\n          const translation = doc.querySelector(\n            `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n          );\n\n          if (translation) {\n            if (rememberKeys) {\n              this._trKeys[translation.textContent.trim()] = key;\n            }\n            trNameElement.setAttribute(attr, translation.textContent.trim());\n          } else {\n            trNameElement.setAttribute(attr, key);\n            this.warn(`[${language}] no translation found for: \"${key}\"`);\n          }\n        }\n      }\n      for (const trTextElement of doc.querySelectorAll('*[tr=\"true\"]')) {\n        const key = useKeys ? this._trKeys[trTextElement.textContent.trim()] : trTextElement.textContent.trim();\n        const translation = doc.querySelector(\n          `cv-translations > language[name=\"${language}\"] > tr[key='${key}']`\n        );\n\n        if (translation) {\n          if (rememberKeys) {\n            this._trKeys[translation.textContent.trim()] = key;\n          }\n          trTextElement.textContent = translation.textContent.trim();\n        } else {\n          trTextElement.textContent = key;\n          this.warn(`[${language}] no translation found for: \"${key}\"`);\n        }\n      }\n    },\n\n    /**\n     * Handle fired event from screensaver\n     * @return {Array<string>} Array with addresses\n     */\n    doScreenSave() {\n      if (cv.Config.configSettings.screensave_page) {\n        this.scrollToPage(cv.Config.configSettings.screensave_page);\n      }\n    },\n\n    /**\n     * Return the addresses needed to update all states on the initially loaded page\n     */\n    getInitialAddresses() {\n      return [];\n    },\n\n    /**\n     * Returns the widget id of the page item initially loaded\n     * @returns {String} widget path like 'id_'...\n     */\n    getInitialPageId() {\n      const firstPage = document.querySelector('cv-page');\n      return firstPage ? firstPage.id : '';\n    },\n\n    /**\n     *\n     * @param name {String} mapping name\n     * @param mapping {cv.ui.structure.tile.elements.Mapping}\n     */\n    addMapping(name, mapping) {\n      if (!this.__mappings) {\n        this.__mappings = {};\n      }\n      this.__mappings[name] = mapping;\n    },\n\n    removeMapping(name) {\n      if (this.__mappings) {\n        delete this.__mappings[name];\n      }\n    },\n\n    mapValue(mappingName, value, store) {\n      let match;\n      let params = [];\n      if ((match = cv.ui.structure.tile.Controller.MAPPING_PARAM_REGEX.exec(mappingName)) !== null) {\n        // this mapping name contains a parameter\n        try {\n          params = JSON.parse(`[${match[2].replaceAll('\\'', '\"')}]`);\n        } catch (e) {\n          this.error('error parsing parameters from ' + mappingName);\n        }\n        mappingName = match[1];\n      }\n      if (this.__mappings && Object.prototype.hasOwnProperty.call(this.__mappings, mappingName)) {\n        return this.__mappings[mappingName].mapValue(value, store, params);\n      }\n      return value;\n    },\n\n    /**\n     * @param name {String} styling name\n     * @param styling {cv.ui.structure.tile.elements.Styling}\n     */\n    addStyling(name, styling) {\n      if (!this.__stylings) {\n        this.__stylings = {};\n      }\n      this.__stylings[name] = styling;\n    },\n\n    removeStyling(name) {\n      if (this.__stylings) {\n        delete this.__stylings[name];\n      }\n    },\n\n    styleValue(stylingName, value, store) {\n      if (this.__stylings && Object.prototype.hasOwnProperty.call(this.__stylings, stylingName)) {\n        return this.__stylings[stylingName].mapValue(value, store);\n      }\n      return '';\n    },\n\n    // for compatibility with pure controller\n    parseLabel() {\n      return '';\n    },\n\n    _onChangeLocale() {\n      this.translate(document.body, false, true);\n    },\n\n    enablePullToRefresh() {\n      let startY = 0;\n      let scrollContainer;\n\n      const refreshSpinner = document.createElement('div');\n      refreshSpinner.classList.add('pull-to-refresh');\n      const icon = document.createElement('i');\n      icon.classList.add('ri-loader-4-fill');\n      refreshSpinner.append(icon);\n      document.body.append(refreshSpinner);\n      const eventSource = document;\n\n      const onMove = ev => {\n        const touchY = ev.touches[0].clientY;\n        const touchDiff = touchY - startY;\n        if (touchDiff > 60 && scrollContainer.scrollTop === 0) {\n          refreshSpinner.classList.add('visible');\n        } else {\n          refreshSpinner.classList.remove('visible');\n        }\n      };\n      const onEnd = () => {\n        finish();\n        if (refreshSpinner.classList.contains('visible')) {\n          refreshSpinner.classList.remove('visible');\n          location.reload();\n        }\n      };\n      const finish = () => {\n        eventSource.removeEventListener('touchmove', onMove);\n        eventSource.removeEventListener('touchend', onEnd);\n        eventSource.removeEventListener('touchcancel', finish);\n      };\n      eventSource.addEventListener('touchstart', ev => {\n        startY = ev.touches[0].clientY;\n        scrollContainer = document.querySelector('main');\n        if (scrollContainer && scrollContainer.scrollTop === 0) {\n          eventSource.addEventListener('touchmove', onMove);\n          eventSource.addEventListener('touchend', onEnd);\n          eventSource.addEventListener('touchcancel', finish);\n        }\n      });\n    },\n\n    isTemplateWidget(name) {\n      return this._templateWidgets.includes(name);\n    },\n\n    /**\n     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element\n     * @param xml {XMLDocument}\n     */\n    registerTemplates(xml) {\n      if (this._templateWidgets === null) {\n        this._templateWidgets = [];\n      }\n      for (const template of xml.querySelectorAll('templates[structure=\\'tile\\'] > template')) {\n        const className = qx.lang.String.firstUp(qx.lang.String.camelCase(template.getAttribute('id')));\n        let Clazz = qx.Class.getByName(`cv.ui.structure.tile.widgets.${className}`);\n        if (!Clazz) {\n          Clazz = cv.ui.structure.tile.widgets.TemplateWidget;\n        }\n        customElements.define(\n          cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'),\n          class extends TemplatedElement {\n            constructor() {\n              super(template.getAttribute('id'), Clazz);\n            }\n          }\n        );\n        this._templateWidgets.push(cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'));\n      }\n    }\n  },\n\n  defer(statics) {\n    if (!window.cvTestMode) {\n      // do not apply ourselves automatically in test mode\n      cv.Application.structureController = statics.getInstance();\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct() {\n    qx.locale.Manager.getInstance().removeListener('changeLocale', this._onChangeLocale, this);\n  }\n});\n\n\n/* eslint-disable-next-line no-redeclare */\nclass QxConnector extends HTMLElement {\n  constructor(QxClass) {\n    super();\n    if (QxClass) {\n      if (qx.Class.isSubClassOf(QxClass, cv.ui.structure.tile.elements.AbstractCustomElement)) {\n        this._instance = new QxClass(this);\n      } else {\n        throw Error(QxClass + ' must be a subclass of cv.ui.structure.tile.elements.AbstractCustomElement');\n      }\n    }\n    if (this.hasAttribute('colspan')) {\n      this.classList.add('colspan-' + this.getAttribute('colspan'));\n    }\n    if (this.hasAttribute('rowspan')) {\n      this.classList.add('rowspan-' + this.getAttribute('rowspan'));\n    }\n  }\n\n  getInstance() {\n    return this._instance;\n  }\n\n  connectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(true);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._instance) {\n      this._instance.setConnected(false);\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    name = qx.lang.String.camelCase(name);\n    if (this._instance && qx.Class.hasProperty(this._instance.constructor, name)) {\n      this._instance.set(name, newValue);\n    }\n  }\n}\n\nwindow.QxConnector = QxConnector;\n\nclass TemplatedElement extends QxConnector {\n  constructor(templateId, QxClass) {\n    super(QxClass);\n    const controller = cv.ui.structure.tile.Controller.getInstance();\n    let template = document.getElementById(templateId);\n    if (template) {\n      const slotAttributes = ['name', 'replaces', 'parent-scope'];\n      const content = template.content.cloneNode(true);\n\n      // copy all attributes, except 'id' of the template itself to the widget\n      for (const name of template.getAttributeNames()) {\n        if (name !== 'id' && !this.hasAttribute(name)) {\n          this.setAttribute(name, template.getAttribute(name));\n        }\n      }\n\n      // move slots into template\n      for (let slot of content.querySelectorAll('slot')) {\n        const slotName = slot.getAttribute('name');\n        const replacementSelector = slot.hasAttribute('replaces') ? slot.getAttribute('replaces') : '';\n        const slotParentScope = slot.hasAttribute('parent-scope') ? parseInt(slot.getAttribute('parent-scope')) : 0;\n        let slotContents = this.querySelectorAll(`[slot='${slotName}']`);\n        if (slotContents.length === 0 && slotName === 'default') {\n          // add all elements that have no slot to this default slot\n          slotContents = this.querySelectorAll(':scope > *:not([slot])');\n        }\n        const attrs = {};\n        for (let i = 0, l = slot.attributes.length; i < l; i++) {\n          if (!slotAttributes.includes(slot.attributes[i].name)) {\n            attrs[slot.attributes[i].name] = slot.attributes[i].value;\n          }\n        }\n        if (slotContents.length > 0) {\n          Array.from(slotContents).forEach(slotContent => {\n            const newNode = slotContent.cloneNode(true);\n            Object.keys(attrs).forEach(attrName => {\n              if (newNode.hasAttribute(attrName)) {\n                if (attrName === 'class') {\n                  // append it\n                  newNode.classList.add(attrs[attrName]);\n                } else {\n                  qx.log.Logger.debug(controller, '[' + templateId + '] attribute', attrName, 'already set, skipping');\n                }\n              } else {\n                newNode.setAttribute(attrName, attrs[attrName]);\n              }\n            });\n            newNode.removeAttribute('slot');\n            slot.parentNode.insertBefore(newNode, slot);\n          });\n          slot.remove();\n          if (replacementSelector) {\n            content.querySelectorAll(replacementSelector).forEach(replaced => {\n              replaced.remove();\n            });\n          }\n        } else {\n          let parentNode = slot.parentNode;\n          if (slotParentScope > 0) {\n            // got slotParentScope elements up and remove that one\n            let i = slotParentScope - 1;\n            while (i > 0) {\n              parentNode = parentNode.parentNode;\n              i--;\n            }\n            if (parentNode) {\n              parentNode.remove();\n            }\n          } else {\n            slot.remove();\n            if (parentNode.children.length === 0 && slotParentScope >= 0) {\n              // also remove slots parent when it has no content\n              // can be obeyed by setting parent-scope=\"-1\"\n              parentNode.remove();\n            }\n          }\n        }\n      }\n      // transfer attribute slots\n      const attributes = this.getAttributeNames();\n      for (const name of attributes) {\n        let value = this.getAttribute(name);\n        const slotAttributeName = `slot-${name}`;\n        const targets = content.querySelectorAll(`[${slotAttributeName}]`);\n        let targetName = name;\n\n        for (const target of targets) {\n          if (target.hasAttribute(slotAttributeName)) {\n            const targetValue = target.getAttribute(slotAttributeName);\n            if (targetValue.startsWith(':')) {\n              // this template slot-attribute contains some configuration\n              for (const entry of targetValue.substring(1).split(',')) {\n                const [key, val] = entry.split('=');\n                switch (key) {\n                  case 'target':\n                    targetName = val;\n                    break;\n                  case 'value':\n                    // not needed here\n                    break;\n                  default:\n                    qx.log.Logger.error(this, 'unhandled slot-attribute configuration key', key);\n                    break;\n                }\n              }\n            }\n          }\n\n          target.setAttribute(targetName, value);\n          target.removeAttribute(slotAttributeName);\n        }\n        if (targets.length > 0) {\n          this.removeAttribute(name);\n        }\n      }\n\n      for (const elem of content.querySelectorAll('*')) {\n        for (const attr of [...elem.attributes]) {\n          if (attr.name.startsWith('slot-')) {\n            let attrValue = attr.value;\n            let targetName = attr.name.substring(5);\n            // only e.g. map slot-progress-mapping to mapping if we have no slot-mapping attribute\n            if (attr.name.endsWith('-mapping') && elem.hasAttribute('slot-mapping')) {\n              targetName = 'mapping';\n            } else if (attr.name.endsWith('-styling') && elem.hasAttribute('slot-styling')) {\n              targetName = 'styling';\n            } else if (attr.name.endsWith('-format') && elem.hasAttribute('slot-format')) {\n              targetName = 'format';\n            } else if (attr.value.startsWith(':')) {\n              attrValue = '';\n              // this template slot-attribute contains some configuration\n              const parts = attr.value.substring(1).split(',');\n              for (const entry of parts) {\n                const [key, val] = entry.split('=');\n                switch (key) {\n                  case 'target':\n                    targetName = val;\n                    break;\n                  case 'value':\n                    attrValue = val;\n                    break;\n                  default:\n                    qx.log.Logger.error(this, 'unhandled slot-attribute configuration key', key);\n                    break;\n                }\n              }\n            }\n            if (attrValue) {\n              elem.setAttribute(targetName, attrValue);\n            }\n            elem.removeAttribute(attr.name);\n          }\n        }\n      }\n\n      // clear content\n      this.innerHTML = '';\n      this.appendChild(content);\n      this.classList.add('cv-widget');\n    } else {\n      qx.log.Logger.error(controller, '[' + templateId + '] no template found for id', templateId);\n    }\n  }\n}\n"
  ],
  "mappings": "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",
  "ignoreList": []
}