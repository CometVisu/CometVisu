{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "implement",
    "cv",
    "ui",
    "structure",
    "IController",
    "construct",
    "__HTML_STRUCT",
    "bom",
    "Stylesheet",
    "includeFile",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "replace",
    "Config",
    "forceReload",
    "Date",
    "now",
    "statics",
    "PREFIX",
    "__MAP",
    "__I",
    "register",
    "webComponentName",
    "qxClass",
    "onComponentCreated",
    "element",
    "name",
    "tagName",
    "toLowerCase",
    "prototype",
    "hasOwnProperty",
    "call",
    "QxClass",
    "push",
    "log",
    "Logger",
    "error",
    "properties",
    "renderTarget",
    "check",
    "init",
    "document",
    "body",
    "namespace",
    "members",
    "__mappings",
    "__stylings",
    "getHtmlStructure",
    "supports",
    "feature",
    "subfeature",
    "initLayout",
    "__gotoStartPage",
    "location",
    "hash",
    "scrollToPage",
    "getInitialPageId",
    "substring",
    "onHistoryRequest",
    "anchor",
    "pageId",
    "skipHistory",
    "page",
    "querySelector",
    "classList",
    "contains",
    "querySelectorAll",
    "oldPage",
    "remove",
    "add",
    "parentElement",
    "nodeName",
    "undefined",
    "headline",
    "getAttribute",
    "pageTitle",
    "History",
    "addToHistory",
    "event",
    "message",
    "Bus",
    "dispatchByName",
    "warn",
    "parseBackendSettings",
    "xml",
    "length",
    "client",
    "io",
    "BackendConnections",
    "initBackendClient",
    "login",
    "configSettings",
    "credentials",
    "debug",
    "startInitialRequest",
    "parseSettings",
    "config",
    "settings",
    "configElement",
    "documentElement",
    "bindClickToWidget",
    "translate",
    "cacheUsed",
    "templates",
    "ajaxRequest",
    "request",
    "Xhr",
    "set",
    "accept",
    "cache",
    "addListenerOnce",
    "e",
    "content",
    "getTarget",
    "getResponse",
    "target",
    "getRenderTarget",
    "registerTemplates",
    "child",
    "xmlns",
    "text",
    "getResponseText",
    "parser",
    "DOMParser",
    "parseFromString",
    "firstElementChild",
    "appendChild",
    "TemplateEngine",
    "setDomFinished",
    "addListener",
    "status",
    "getTransport",
    "Request",
    "isSuccessful",
    "send",
    "forEach",
    "template",
    "customElements",
    "tile",
    "Controller",
    "TemplatedElement",
    "preParse",
    "hasAttribute",
    "theme",
    "data",
    "window",
    "matchMedia",
    "matches",
    "setAttribute",
    "Model",
    "updateFrom",
    "addEventListener",
    "createUI",
    "doc",
    "attr",
    "trNameElement",
    "match",
    "exec",
    "key",
    "translation",
    "locale",
    "Manager",
    "getLanguage",
    "textContent",
    "trim",
    "trTextElement",
    "doScreenSave",
    "screensave_page",
    "getInitialAddresses",
    "firstPage",
    "id",
    "addMapping",
    "mapping",
    "removeMapping",
    "mapValue",
    "mappingName",
    "value",
    "store",
    "addStyling",
    "styling",
    "removeStyling",
    "styleValue",
    "stylingName",
    "parseLabel",
    "defer",
    "cvTestMode",
    "Application",
    "structureController",
    "templateId",
    "controller",
    "getElementById",
    "slotAttributes",
    "cloneNode",
    "slot",
    "slotName",
    "replacementSelector",
    "slotParentScope",
    "parseInt",
    "slotContents",
    "attrs",
    "i",
    "l",
    "attributes",
    "includes",
    "Array",
    "from",
    "slotContent",
    "newNode",
    "keys",
    "attrName",
    "removeAttribute",
    "parentNode",
    "insertBefore",
    "replaced",
    "children",
    "getAttributeNames",
    "targets",
    "targetName",
    "endsWith",
    "elem",
    "startsWith",
    "innerHTML",
    "HTMLElement"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/Controller.js"
  ],
  "sourcesContent": [
    "/* Controller.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Controller for the 'tile' structure.\n *\n * This structure is based on web-components and does not need a parser to work.\n * The config file is directly attached to the document body.\n * The widgets in this structure register a customElement and the browser automatically creates instances\n * of this widgets once the customElement is added to the body.\n *\n * The basic structure is a set of pages that contain a list of tiles.\n * Each tile contains a grid of 3 rows and 3 columns. The components can be added to a cell of that grid\n * but also can spread over more then one cell by using row-/column spanning.\n *\n * This structure provides some tiles with a pre-defined content, e.g. a <cv-switch> which\n * contains of a button in the middle of the tile and a primary- and secondary label in the third row.\n *\n * Those pre-defined tiles are provided by a <template> (@see https://developer.mozilla.org/de/docs/Web/HTML/Element/template}\n * User are able to define own templates for re-usable tiles if they need one that this structure does not provide.\n *\n * @asset(structures/tile/*)\n * @author Tobias Br√§utigam\n * @since 2022\n */\nqx.Class.define('cv.ui.structure.tile.Controller', {\n  extend: qx.core.Object,\n  type: 'singleton',\n  implement: cv.ui.structure.IController,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__HTML_STRUCT = '';\n    qx.bom.Stylesheet.includeFile(\n      qx.util.ResourceManager.getInstance().toUri('designs/tile-globals.scss').replace('.scss', '.css') +\n        (cv.Config.forceReload === true ? '?' + Date.now() : '')\n    );\n  },\n\n  /*\n  ***********************************************\n    STATICS\n  ***********************************************\n  */\n  statics: {\n    // prefix for all custom components uses/provided by this structure\n    PREFIX: 'cv-',\n    __MAP: {},\n    __I: {},\n    register(webComponentName, qxClass) {\n      this.__MAP[webComponentName] = qxClass;\n    },\n\n    onComponentCreated(element) {\n      const name = element.tagName.toLowerCase();\n      if (Object.prototype.hasOwnProperty.call(this, name)) {\n        const QxClass = this.__MAP[name];\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          this.__I[name] = [];\n        }\n        this.__I[name].push(new QxClass(element));\n      } else {\n        qx.log.Logger.error(this, 'no QxClass registered for custom element ' + name);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * The target this structure should be inserted into\n     */\n    renderTarget: {\n      check: 'Element',\n      init: document.body\n    },\n\n    /**\n     * Namespace for path ids\n     */\n    namespace: {\n      check: 'String',\n      init: ''\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    __HTML_STRUCT: null,\n    __mappings: null,\n    __stylings: null,\n\n    getHtmlStructure() {\n      return this.__HTML_STRUCT;\n    },\n\n    supports(feature, subfeature) {\n      return false;\n    },\n\n    initLayout() {},\n\n    __gotoStartPage() {\n      // open first page\n      if (!document.location.hash) {\n        this.scrollToPage(this.getInitialPageId());\n      } else {\n        this.scrollToPage(document.location.hash.substring(1));\n      }\n    },\n\n    onHistoryRequest(anchor) {\n      if (anchor) {\n        this.scrollToPage(anchor);\n      }\n    },\n\n    scrollToPage(pageId, skipHistory) {\n      if (!pageId) {\n        return;\n      }\n      const page = document.querySelector('#' + pageId);\n      if (page) {\n        if (!page.classList.contains('active')) {\n          for (let oldPage of document.querySelectorAll('cv-page.active')) {\n            oldPage.classList.remove('active');\n          }\n          for (let oldPage of document.querySelectorAll('cv-page.sub-active')) {\n            oldPage.classList.remove('sub-active');\n          }\n          page.classList.add('active');\n          // mark parent pages that there is a active subpage\n          let parentElement = page.parentElement;\n          while (parentElement && parentElement.nodeName.toLowerCase() !== 'main') {\n            if (parentElement.nodeName.toLowerCase() === 'cv-page') {\n              parentElement.classList.add('sub-active');\n            }\n            parentElement = parentElement.parentElement;\n          }\n\n          if (skipHistory === undefined) {\n            const headline = page.getAttribute('name');\n            let pageTitle = 'CometVisu';\n            if (headline) {\n              pageTitle = headline + ' - ' + pageTitle;\n            }\n            qx.bom.History.getInstance().addToHistory(pageId, pageTitle);\n          }\n          qx.event.message.Bus.dispatchByName('cv.ui.structure.tile.currentPage', page);\n        }\n      } else {\n        this.warn('no page with id', pageId, 'found');\n      }\n    },\n\n    // not needed, backend parse/init themselves\n    parseBackendSettings(xml) {\n      if (xml.querySelectorAll('cv-backend').length === 0) {\n        // no backends defined, use the default one;\n        const client = cv.io.BackendConnections.initBackendClient();\n        client.login(true, cv.Config.configSettings.credentials, () => {\n          this.debug('logged in');\n          cv.io.BackendConnections.startInitialRequest();\n        });\n      }\n      return false;\n    },\n\n    /**\n     * Parses structure specific settings\n     * @param config {XMLDocument} loaded config\n     */\n    parseSettings(config) {\n      document.body.classList.add('loading-structure');\n      const settings = cv.Config.configSettings;\n      const configElement = config.documentElement;\n      settings.bindClickToWidget = configElement.getAttribute('bind_click_to_widget') === 'true';\n      this.translate(config);\n\n      if (!cv.Config.cacheUsed) {\n        const templates = qx.util.ResourceManager.getInstance().toUri('structures/tile/templates.xml');\n\n        const ajaxRequest = new qx.io.request.Xhr(templates);\n        ajaxRequest.set({\n          accept: 'application/xml',\n          cache: !cv.Config.forceReload\n        });\n\n        ajaxRequest.addListenerOnce('success', e => {\n          let content = e.getTarget().getResponse();\n          const target = this.getRenderTarget();\n          this.debug('creating pages');\n          // register custom elements for templates in this document\n          this.registerTemplates(content);\n          let child;\n          // we need the documents to be in HTML namespace\n          if (!content.documentElement.xmlns) {\n            let text = e.getTarget().getResponseText();\n            text = text.replace('<templates', '<templates xmlns=\"http://www.w3.org/1999/xhtml\"');\n\n            const parser = new DOMParser();\n            content = parser.parseFromString(text, 'text/xml');\n          }\n          while ((child = content.documentElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n\n          while ((child = configElement.firstElementChild)) {\n            target.appendChild(child);\n          }\n          document.body.classList.remove('loading-structure');\n          this.debug('finalizing');\n          qx.event.message.Bus.dispatchByName('setup.dom.append');\n          this.debug('pages created');\n          this.__gotoStartPage();\n          this.debug('setup.dom.finished');\n          qx.event.message.Bus.dispatchByName('setup.dom.finished.before');\n          cv.TemplateEngine.getInstance().setDomFinished(true);\n        });\n        ajaxRequest.addListener('statusError', e => {\n          const status = e.getTarget().getTransport().status;\n          if (!qx.util.Request.isSuccessful(status)) {\n            this.error('filenotfound', templates);\n          }\n          document.body.classList.remove('loading-structure');\n        });\n\n        ajaxRequest.send();\n      }\n    },\n\n    /**\n     * Registers customElements for all templates in the given xml that are direct children of a <templates structure=\"tile\"> element\n     * @param xml {XMLDocument}\n     */\n    registerTemplates(xml) {\n      xml.querySelectorAll('templates[structure=\\'tile\\'] > template').forEach(template => {\n        customElements.define(\n          cv.ui.structure.tile.Controller.PREFIX + template.getAttribute('id'),\n          class extends TemplatedElement {\n            constructor() {\n              super(template.getAttribute('id'));\n            }\n          }\n        );\n      });\n    },\n\n    /**\n     * Pre parsing hook, do everything here that is needed before the real parsing process can start\n     * @param xml {XMLDocument}\n     */\n    async preParse(xml) {\n      if (xml.documentElement.hasAttribute('theme')) {\n        let theme = xml.documentElement.getAttribute('theme');\n        const data = {};\n        if (theme === 'system') {\n          if (window.matchMedia) {\n            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', theme);\n            data['theme'] = theme;\n            cv.data.Model.getInstance().updateFrom('system', data);\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n              document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n\n              data['theme'] = e.matches ? 'dark' : 'light';\n              cv.data.Model.getInstance().updateFrom('system', data);\n            });\n          } else {\n            this.error('system theme detection not possible in this browser');\n          }\n        } else {\n          document.documentElement.setAttribute('data-theme', theme);\n          data['theme'] = theme;\n          cv.data.Model.getInstance().updateFrom('system', data);\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Generate the UI code from the config file\n     * @param config {Object} loaded config file usually an XMLDocument but other structures might use different formats\n     */\n    createUI(config) {},\n\n    translate(doc) {\n      for (const attr of ['name', 'label']) {\n        for (const trNameElement of doc.querySelectorAll(`*[${attr}^=\"tr(\"]`)) {\n          const match = /^tr\\('([^']+)'\\)$/.exec(trNameElement.getAttribute(attr));\n\n          if (!match) {\n            this.warn('attribute content no valid translation string', trNameElement.getAttribute(attr));\n\n            continue;\n          }\n          const key = match[1];\n          const translation = doc.querySelector(\n            `cv-translations > language[name=\"${qx.locale.Manager.getInstance().getLanguage()}\"] > tr[key='${key}']`\n          );\n\n          if (translation) {\n            trNameElement.setAttribute(attr, translation.textContent.trim());\n          } else {\n            trNameElement.setAttribute(attr, key);\n            this.warn(`[${qx.locale.Manager.getInstance().getLanguage()}] no translation found for: \"${key}\"`);\n          }\n        }\n      }\n      for (const trTextElement of doc.querySelectorAll('*[tr=\"true\"]')) {\n        const key = trTextElement.textContent.trim();\n        const translation = doc.querySelector(\n          `cv-translations > language[name=\"${qx.locale.Manager.getInstance().getLanguage()}\"] > tr[key='${key}']`\n        );\n\n        if (translation) {\n          trTextElement.textContent = translation.textContent.trim();\n        } else {\n          this.warn(`[${qx.locale.Manager.getInstance().getLanguage()}] no translation found for: \"${key}\"`);\n        }\n      }\n    },\n\n    /**\n     * Handle fired event from screensaver\n     * @return {Array<string>} Array with addresses\n     */\n    doScreenSave() {\n      if (cv.Config.configSettings.screensave_page) {\n        this.scrollToPage(cv.Config.configSettings.screensave_page);\n      }\n    },\n\n    /**\n     * Return the addresses needed to update all states on the initially loaded page\n     */\n    getInitialAddresses() {\n      return [];\n    },\n\n    /**\n     * Returns the widget id of the page item initially loaded\n     * @returns {String} widget path like 'id_'...\n     */\n    getInitialPageId() {\n      const firstPage = document.querySelector('cv-page');\n      return firstPage ? firstPage.id : '';\n    },\n\n    /**\n     *\n     * @param name {String} mapping name\n     * @param mapping {cv.ui.structure.tile.elements.Mapping}\n     */\n    addMapping(name, mapping) {\n      if (!this.__mappings) {\n        this.__mappings = {};\n      }\n      this.__mappings[name] = mapping;\n    },\n\n    removeMapping(name) {\n      if (this.__mappings) {\n        delete this.__mappings[name];\n      }\n    },\n\n    mapValue(mappingName, value, store) {\n      if (this.__mappings && Object.prototype.hasOwnProperty.call(this.__mappings, mappingName)) {\n        return this.__mappings[mappingName].mapValue(value, store);\n      }\n      return value;\n    },\n\n    /**\n     * @param name {String} styling name\n     * @param styling {cv.ui.structure.tile.elements.Styling}\n     */\n    addStyling(name, styling) {\n      if (!this.__stylings) {\n        this.__stylings = {};\n      }\n      this.__stylings[name] = styling;\n    },\n\n    removeStyling(name) {\n      if (this.__stylings) {\n        delete this.__stylings[name];\n      }\n    },\n\n    styleValue(stylingName, value, store) {\n      if (this.__stylings && Object.prototype.hasOwnProperty.call(this.__stylings, stylingName)) {\n        return this.__stylings[stylingName].mapValue(value, store);\n      }\n      return value;\n    },\n\n    // for compatibility with pure controller\n    parseLabel() {\n      return '';\n    }\n  },\n\n  defer(statics) {\n    if (!window.cvTestMode) {\n      // do not apply ourselves automatically in test mode\n      cv.Application.structureController = statics.getInstance();\n    }\n  }\n});\n\nclass TemplatedElement extends HTMLElement {\n  constructor(templateId) {\n    super();\n    const controller = cv.ui.structure.tile.Controller.getInstance();\n    let template = document.getElementById(templateId);\n    if (template) {\n      const slotAttributes = ['name', 'replaces', 'parent-scope'];\n      const content = template.content.cloneNode(true);\n      // move slots into template\n      for (let slot of content.querySelectorAll('slot')) {\n        const slotName = slot.getAttribute('name');\n        const replacementSelector = slot.hasAttribute('replaces') ? slot.getAttribute('replaces') : '';\n        const slotParentScope = slot.hasAttribute('parent-scope') ? parseInt(slot.getAttribute('parent-scope')) : 0;\n        let slotContents = this.querySelectorAll(`[slot='${slotName}']`);\n        const attrs = {};\n        for (let i = 0, l = slot.attributes.length; i < l; i++) {\n          if (!slotAttributes.includes(slot.attributes[i].name)) {\n            attrs[slot.attributes[i].name] = slot.attributes[i].value;\n          }\n        }\n        if (slotContents.length > 0) {\n          Array.from(slotContents).forEach(slotContent => {\n            const newNode = slotContent.cloneNode(true);\n            Object.keys(attrs).forEach(attrName => {\n              if (newNode.hasAttribute(attrName)) {\n                if (attrName === 'class') {\n                  // append it\n                  newNode.classList.add(attrs[attrName]);\n                } else {\n                  qx.log.Logger.debug(controller, '[' + templateId + '] attribute', attrName, 'already set, skipping');\n                }\n              } else {\n                newNode.setAttribute(attrName, attrs[attrName]);\n              }\n            });\n            newNode.removeAttribute('slot');\n            slot.parentNode.insertBefore(newNode, slot);\n          });\n          slot.remove();\n          if (replacementSelector) {\n            content.querySelectorAll(replacementSelector).forEach(replaced => {\n              replaced.remove();\n            });\n          }\n        } else {\n          qx.log.Logger.debug(controller, '[' + templateId + '] no content for slot', slotName, ' removing');\n\n          let parentNode = slot.parentNode;\n          if (slotParentScope > 0) {\n            // got slotParentScope elements up and remove that one\n            let i = slotParentScope - 1;\n            while (i > 0) {\n              parentNode = parentNode.parentNode;\n              i--;\n            }\n            if (parentNode) {\n              parentNode.remove();\n            }\n          } else {\n            slot.remove();\n            if (parentNode.children.length === 0) {\n              // also remove slots parent when it has no content\n              parentNode.remove();\n            }\n          }\n        }\n      }\n      // transfer attribute slots\n      const attributes = this.getAttributeNames();\n      attributes.forEach(name => {\n        let value = this.getAttribute(name);\n        const targets = content.querySelectorAll('[slot-' + name + ']');\n        let targetName = name;\n        // allow names like percent-mapping that should also be mapped to a certain elements 'mapping' attribute\n        if (name.endsWith('-mapping')) {\n          targetName = 'mapping';\n        } else if (name.endsWith('-styling')) {\n          targetName = 'styling';\n        } else if (name.endsWith('-format')) {\n          targetName = 'format';\n        }\n        targets.forEach(target => {\n          if (targetName !== name && target.hasAttribute('slot-' + name)) {\n            target.setAttribute(name, value || target.getAttribute('slot-' + name));\n\n            target.removeAttribute('slot-' + name);\n          } else {\n            target.setAttribute(targetName, value || target.getAttribute('slot-' + targetName));\n\n            target.removeAttribute('slot-' + targetName);\n          }\n        });\n        if (targets.length > 0) {\n          this.removeAttribute(name);\n        }\n      });\n      content.querySelectorAll('*').forEach(elem => {\n        [...elem.attributes].forEach(attr => {\n          if (attr.name.startsWith('slot-')) {\n            let targetName = attr.name.substring(5);\n            // only e.g. map slot-progress-mapping to mapping if we have no slot-mapping attribute\n            if (attr.name.endsWith('-mapping') && elem.hasAttribute('slot-mapping')) {\n              targetName = 'mapping';\n            } else if (attr.name.endsWith('-styling') && elem.hasAttribute('slot-styling')) {\n              targetName = 'styling';\n            } else if (attr.name.endsWith('-format') && elem.hasAttribute('slot-format')) {\n              targetName = 'format';\n            }\n            if (attr.value) {\n              elem.setAttribute(targetName, attr.value);\n            }\n            elem.removeAttribute(attr.name);\n          }\n        });\n      });\n\n      // clear content\n      this.innerHTML = '';\n      this.appendChild(content);\n    } else {\n      qx.log.Logger.error(controller, '[' + templateId + '] no template found for id', templateId);\n    }\n  }\n}\n"
  ],
  "mappings": "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"
}