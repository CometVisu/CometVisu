{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ui/structure/tile/MResize.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_observer",
    "ResizeObserver",
    "entries",
    "observer",
    "element",
    "getResizeTarget",
    "some",
    "entry",
    "target",
    "fireDataEvent",
    "events",
    "resized",
    "properties",
    "resizeTarget",
    "check",
    "nullable",
    "apply",
    "members",
    "_applyResizeTarget",
    "oldElement",
    "unobserve",
    "observe",
    "destruct",
    "disconnect",
    "cv",
    "ui",
    "structure",
    "tile",
    "MResize"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAAgD;AAE9C;AACF;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,qBAAY;AAAA;;AACrB,WAAKC,SAAL,GAAiB,IAAIC,cAAJ,CAAmB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzD,YAAMC,OAAO,GAAG,KAAI,CAACC,eAAL,EAAhB;;AACAH,QAAAA,OAAO,CAACI,IAAR,CAAa,UAAAC,KAAK,EAAI;AACpB,cAAIA,KAAK,CAACC,MAAN,KAAiBJ,OAArB,EAA8B;AAC5B,YAAA,KAAI,CAACK,aAAL,CAAmB,SAAnB,EAA8BF,KAA9B;;AACA,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SAND;AAOD,OATgB,CAAjB;AAUD,KAlB6C;;AAoB9C;AACF;AACA;AACA;AACA;AACEG,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KAzBsC;;AA6B9C;AACF;AACA;AACA;AACA;AACEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,SADK;AAEZC,QAAAA,QAAQ,EAAE,IAFE;AAGZC,QAAAA,KAAK,EAAE;AAHK;AADJ,KAlCkC;;AA0C9C;AACF;AACA;AACA;AACA;AACEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACIjB,MAAAA,SAAS,EAAE,IAJJ;AAMPkB,MAAAA,kBANO,8BAMYd,OANZ,EAMqBe,UANrB,EAMiC;AACtC,YAAIA,UAAJ,EAAgB;AACd,eAAKnB,SAAL,CAAeoB,SAAf,CAAyBD,UAAzB;AACD;;AACD,YAAIf,OAAJ,EAAa;AACX,eAAKJ,SAAL,CAAeqB,OAAf,CAAuBjB,OAAvB;AACD;AACF;AAbM,KA/CqC;;AA+D9C;AACF;AACA;AACA;AACA;AACEkB,IAAAA,QAAQ,EAAE,oBAAY;AACpB,WAAKtB,SAAL,CAAeuB,UAAf;;AACA,WAAKvB,SAAL,GAAiB,IAAjB;AACD;AAvE6C,GAAhD;AAvBAwB,EAAAA,EAAE,CAACC,EAAH,CAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6BhC,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* MResize.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Detects dom elements resizing\n * @ignore(ResizeObserver)\n */\nqx.Mixin.define('cv.ui.structure.tile.MResize', {\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this._observer = new ResizeObserver((entries, observer) => {\n      const element = this.getResizeTarget();\n      entries.some(entry => {\n        if (entry.target === element) {\n          this.fireDataEvent('resized', entry);\n          return true;\n        }\n        return false;\n      });\n    });\n  },\n\n  /*\n  ***********************************************\n    EVENTS\n  ***********************************************\n  */\n  events: {\n    resized: 'qx.event.type.Data'\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    resizeTarget: {\n      check: 'Element',\n      nullable: true,\n      apply: '_applyResizeTarget'\n    }\n  },\n\n  /*\n  ***********************************************\n    MEMBERS\n  ***********************************************\n  */\n  members: {\n    /**\n     * @var {ResizeObserver}\n     */\n    _observer: null,\n\n    _applyResizeTarget(element, oldElement) {\n      if (oldElement) {\n        this._observer.unobserve(oldElement);\n      }\n      if (element) {\n        this._observer.observe(element);\n      }\n    }\n  },\n\n  /*\n  ***********************************************\n    DESTRUCTOR\n  ***********************************************\n  */\n  destruct: function () {\n    this._observer.disconnect();\n    this._observer = null;\n  }\n});\n"
  ]
}