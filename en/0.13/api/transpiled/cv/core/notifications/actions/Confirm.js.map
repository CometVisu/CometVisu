{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "core",
    "notifications",
    "actions",
    "AbstractActionHandler",
    "implement",
    "IActionHandler",
    "construct",
    "props",
    "type",
    "constructor",
    "call",
    "setAccepted",
    "setTitle",
    "locale",
    "Manager",
    "tr",
    "set",
    "properties",
    "title",
    "check",
    "nullable",
    "accepted",
    "init",
    "action",
    "members",
    "handleAction",
    "ev",
    "stopPropagation",
    "preventDefault",
    "getAction",
    "getAccepted",
    "fireEvent",
    "getDomElement",
    "actionButton",
    "dom",
    "Element",
    "create",
    "_type",
    "text",
    "getTitle",
    "style",
    "getStyle",
    "$$handler",
    "event",
    "Registration",
    "addListener",
    "defer",
    "ActionRegistry",
    "registerActionHandler",
    "Confirm"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/core/notifications/actions/Confirm.js"
  ],
  "sourcesContent": [
    "/* Option.js\n *\n * copyright (c) 2010-2023, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Shows a button to confirm or decline somethinig.\n *\n * @author Tobias Br√§utigam\n * @since 0.13.0\n */\nqx.Class.define('cv.core.notifications.actions.Confirm', {\n  extend: cv.core.notifications.actions.AbstractActionHandler,\n  implement: cv.core.notifications.IActionHandler,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct(props, type) {\n    super(type);\n    this.setAccepted(type === 'confirm');\n    this.setTitle(type === 'confirm' ? qx.locale.Manager.tr('yes') : qx.locale.Manager.tr('no'));\n    this.set(props);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    title: {\n      check: 'String',\n      nullable: true\n    },\n\n    accepted: {\n      check: 'Boolean',\n      init: false\n    },\n\n    action: {\n      check: 'Function',\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    handleAction(ev) {\n      if (ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        if (this.getAction()) {\n          this.getAction()(this.getAccepted());\n        }\n\n        this.fireEvent('close');\n      }\n    },\n\n    getDomElement() {\n      const actionButton = qx.dom.Element.create('button', {\n        class: 'action ' + this._type,\n        text: this.getTitle(),\n        style: this.getStyle()\n      });\n\n      actionButton.$$handler = this;\n\n      qx.event.Registration.addListener(actionButton, 'tap', this.handleAction, this);\n\n      return actionButton;\n    }\n  },\n\n  defer() {\n    cv.core.notifications.ActionRegistry.registerActionHandler('confirm', cv.core.notifications.actions.Confirm);\n    cv.core.notifications.ActionRegistry.registerActionHandler('decline', cv.core.notifications.actions.Confirm);\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}