{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/core/notifications/actions/Link.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "core",
    "notifications",
    "actions",
    "AbstractActionHandler",
    "implement",
    "IActionHandler",
    "construct",
    "props",
    "set",
    "properties",
    "title",
    "check",
    "nullable",
    "url",
    "action",
    "transform",
    "hidden",
    "init",
    "members",
    "_transformAction",
    "value",
    "util",
    "Location",
    "reload",
    "error",
    "handleAction",
    "ev",
    "stopPropagation",
    "preventDefault",
    "getAction",
    "getUrl",
    "isHidden",
    "req",
    "io",
    "request",
    "Xhr",
    "send",
    "open",
    "isDeleteMessageAfterExecution",
    "fireEvent",
    "getDomElement",
    "actionButton",
    "dom",
    "Element",
    "create",
    "getTitle",
    "getStyle",
    "$$handler",
    "event",
    "Registration",
    "addListener",
    "defer",
    "ActionRegistry",
    "registerActionHandler",
    "Link"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Link.js \n * \n * copyright (c) 2010-2017, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Opens a link in a new window.\n *\n * @author Tobias Br√§utigam\n * @since 0.11.0\n */\nqx.Class.define('cv.core.notifications.actions.Link', {\n  extend: cv.core.notifications.actions.AbstractActionHandler,\n  implement: cv.core.notifications.IActionHandler,\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    this.base(arguments);\n    this.set(props);\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    title: {\n      check: 'String',\n      nullable: true\n    },\n    url: {\n      check: 'String',\n      nullable: true\n    },\n    action: {\n      check: 'Function',\n      nullable: true,\n      transform: '_transformAction'\n    },\n    hidden: {\n      check: 'Boolean',\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n\n    _transformAction: function(value) {\n      if (typeof value === 'function') {\n        return value;\n      }\n      switch (value) {\n        case 'reload':\n        case 'restart':\n          return cv.util.Location.reload;\n      }\n      if (value) {\n        this.error('Unknown action: ' + value);\n      }\n      return null;\n    },\n\n    handleAction: function(ev) {\n      if (ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n      if (this.getAction()) {\n        this.getAction()(ev);\n      }\n      if (this.getUrl()) {\n        if (this.isHidden()) {\n          // open link in background (fire and forget)\n          const req = new qx.io.request.Xhr(this.getUrl());\n          req.send();\n        } else {\n          cv.util.Location.open(this.getUrl(), '_blank');\n        }\n      }\n      if (this.isDeleteMessageAfterExecution) {\n        this.fireEvent('close');\n      }\n    },\n\n    getDomElement: function() {\n      const actionButton = qx.dom.Element.create('button', {\n        'class': 'action ' + this.getAction(),\n        'text': this.getTitle(),\n        'style': this.getStyle()\n      });\n      actionButton.$$handler = this;\n\n      qx.event.Registration.addListener(actionButton, 'tap', this.handleAction, this);\n      return actionButton;\n    }\n  },\n\n  defer: function() {\n    cv.core.notifications.ActionRegistry.registerActionHandler('link', cv.core.notifications.actions.Link);\n  }\n});\n"
  ]
}