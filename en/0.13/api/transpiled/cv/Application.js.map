{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "__appReady",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "pageVis",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "bind",
    "showConfigErrors",
    "xhr",
    "request",
    "Xhr",
    "set",
    "method",
    "check",
    "e",
    "req",
    "getTarget",
    "header",
    "getResponseHeader",
    "isOpenHAB",
    "startsWith",
    "setServedByOpenhab",
    "setServerChecked",
    "addListenerOnce",
    "error",
    "getStatus",
    "send",
    "statics",
    "consoleCommands",
    "__commandManager",
    "structureController",
    "_relResourcePath",
    "_fullResourcePath",
    "getRelativeResourcePath",
    "fullPath",
    "baseUrl",
    "location",
    "origin",
    "pathname",
    "split",
    "slice",
    "join",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "substring",
    "length",
    "createClient",
    "Client",
    "cv",
    "args",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "getStructure",
    "pluginsToLoad",
    "includes",
    "configSettings",
    "push",
    "endsWith",
    "indexOf",
    "mqtt",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "init",
    "event",
    "apply",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "managerDisabled",
    "managerDisabledReason",
    "managerChecked",
    "mobile",
    "serverChecked",
    "servedByOpenhab",
    "serverHasPhpSupport",
    "serverPhpVersion",
    "server",
    "members",
    "_blocker",
    "_isCached",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "_applyMobile",
    "value",
    "document",
    "body",
    "classList",
    "contains",
    "add",
    "remove",
    "_applyManagerChecked",
    "loadManager",
    "managerOptions",
    "action",
    "data",
    "main",
    "ConfigCache",
    "isServerChecked",
    "_checkBackend",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "registerServiceWorker",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "mobileDevice",
    "setMobile",
    "_onResize",
    "Registration",
    "hideManager",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "ManagerMain",
    "constructor",
    "$$instance",
    "setVisible",
    "isManagerDisabled",
    "notification",
    "topic",
    "target",
    "title",
    "tr",
    "message",
    "getManagerDisabledReason",
    "severity",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "states",
    "firstCall",
    "manager",
    "getVisible",
    "Timer",
    "once",
    "Bus",
    "dispatchByName",
    "_applyInManager",
    "History",
    "addToHistory",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "assign",
    "jumpToError",
    "isInManager",
    "condition",
    "validateConfig",
    "worker",
    "FileWorker",
    "displayConfigName",
    "unique",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "icon",
    "Logger",
    "actions",
    "link",
    "Init",
    "getApplication",
    "err",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "type",
    "ev",
    "parentNode",
    "id",
    "box",
    "querySelector",
    "href",
    "shift",
    "checked",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "Environment",
    "select",
    "onerror",
    "Error",
    "undefined",
    "innerWidth",
    "maxMobileScreenWidth",
    "_applyStructureLoaded",
    "cacheUsed",
    "innerHTML",
    "getHtmlStructure",
    "stopAll",
    "Lifecycle",
    "onReady",
    "enableCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "anchor",
    "getData",
    "onHistoryRequest",
    "xml",
    "engine",
    "loader",
    "ScriptLoader",
    "setConfigSource",
    "isValid",
    "getConfigHash",
    "cacheValid",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "BackendConnections",
    "initBackendClient",
    "structure",
    "loadParts",
    "loadPlugins",
    "getInitialPageId",
    "treePath",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "parse",
    "supports",
    "subscribe",
    "dump",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "getPartsLoaded",
    "allPluginsQueued",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "plugin",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "__constraintFails",
    "serverVersionId",
    "constraint",
    "match",
    "exec",
    "operator",
    "majorConstraint",
    "parseInt",
    "hasMinorVersion",
    "minorConstraint",
    "hasPatchVersion",
    "patchConstraint",
    "constraintId",
    "maxId",
    "setManagerChecked",
    "isOpenHab",
    "isServedByOpenhab",
    "rest",
    "getBaseUrl",
    "accept",
    "env",
    "getResponse",
    "setServerHasPhpSupport",
    "setManagerDisabled",
    "setManagerDisabledReason",
    "setServerPhpVersion",
    "phpversion",
    "setServer",
    "SERVER_SOFTWARE",
    "PHP_VERSION_ID",
    "orParts",
    "required_php_version",
    "map",
    "trim",
    "passed",
    "orConstraint",
    "andParts",
    "some",
    "enable",
    "configureScope",
    "scope",
    "setTag",
    "server_release",
    "server_branch",
    "server_id",
    "close",
    "client",
    "getClient",
    "terminate",
    "useServiceWorker",
    "workerFile",
    "navigator",
    "serviceWorker",
    "register",
    "reg",
    "configMessage",
    "postMessage",
    "ready",
    "getRegistrations",
    "registrations",
    "registration",
    "unregister"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "sourcesContent": [
    "/* Application.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(sentry/bundle.tracing.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application', {\n  extend: qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__appReady = false;\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n    const pageVis = qx.bom.PageVisibility.getInstance();\n    pageVis.addListener('change', () => {\n      this.setActive(pageVis.getVisibilityState() === 'visible');\n    });\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n\n    // check HTTP server by requesting a small file\n    const xhr = new qx.io.request.Xhr('version');\n    xhr.set({ method: 'GET'});\n\n    const check = e => {\n      const req = e.getTarget();\n      const header = req.getResponseHeader('Server');\n      const isOpenHAB = header ? header.startsWith('Jetty') : false;\n      this.setServedByOpenhab(isOpenHAB);\n      this.setServerChecked(true);\n    };\n    xhr.addListenerOnce('success', check, this);\n    xhr.addListenerOnce('statusError', check, this);\n    xhr.addListenerOnce('error', e => {\n      const req = e.getTarget();\n      this.error('error checking server environment needed to setup the REST url', req.getStatus());\n    });\n    xhr.send();\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    consoleCommands: [],\n    __commandManager: null,\n    /**\n     * Controller from the loaded structure injects itself here when loaded\n     */\n    structureController: null,\n    _relResourcePath: null,\n    _fullResourcePath: null,\n\n    getRelativeResourcePath(fullPath) {\n      if (!this._relResourcePath) {\n        const baseUrl = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n        this._relResourcePath =\n          qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')).substring(\n            baseUrl.length + 1\n          ) + '/';\n      }\n      if (fullPath === true) {\n        if (!this._fullResourcePath) {\n          this._fullResourcePath =\n            window.location.pathname.split('/').slice(0, -1).join('/') + '/' + this._relResourcePath;\n        }\n        return this._fullResourcePath;\n      }\n      return this._relResourcePath;\n    },\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient(...args) {\n      let Client = cv.io.Client;\n      if (\n        cv.Config.testMode === true ||\n        window.cvTestMode === true ||\n        args[0] === 'simulated'\n      ) {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        if (\n          cv.Config.getStructure() === 'structure-pure' &&\n          !cv.Config.pluginsToLoad.includes('plugin-openhab')\n        ) {\n          cv.Config.configSettings.pluginsToLoad.push('plugin-openhab');\n        }\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      return new Client(...args);\n    },\n\n    /**\n     * Register shortcuts to useful commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded',\n      apply: '_applyStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyInManager'\n    },\n\n    managerDisabled: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeManagerDisabled'\n    },\n\n    managerDisabledReason: {\n      check: 'String',\n      nullable: true\n    },\n\n    managerChecked: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyManagerChecked'\n    },\n\n    /**\n     * Mobile device detection (small screen)\n     */\n    mobile: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMobile',\n      apply: '_applyMobile'\n    },\n\n    serverChecked: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverCheckedChanged'\n    },\n\n    servedByOpenhab: {\n      check: 'Boolean',\n      init: false\n    },\n\n    serverHasPhpSupport: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverHasPhpSupportChanged'\n    },\n\n    serverPhpVersion: {\n      check: 'String',\n      nullable: true\n    },\n\n    server: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    _blocker: null,\n    __appReady: null,\n    _isCached: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    _applyMobile(value) {\n      // maintain old value for compatibility\n      if (value && !document.body.classList.contains('mobile')) {\n        document.body.classList.add('mobile');\n      } else if (!value && document.body.classList.contains('mobile')) {\n        document.body.classList.remove('mobile');\n      }\n    },\n\n    _applyManagerChecked(value) {\n      if (value && cv.Config.loadManager) {\n        this.showManager(cv.Config.managerOptions.action, cv.Config.managerOptions.data);\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main() {\n      cv.ConfigCache.init();\n      if (this.isServerChecked()) {\n        this._checkBackend();\n      } else {\n        this.addListenerOnce('serverCheckedChanged', this._checkBackend, this);\n      }\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n\n      document.body.classList.add('loading');\n\n      cv.report.Record.prepare();\n\n      let info =\n        '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' +\n        new Date().getFullYear() +\n        ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' +\n        cv.Version.VERSION +\n        '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n    ' + cv.Application.consoleCommands.join('\\n    ') + '\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager());\n      this.registerServiceWorker();\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      super.main();\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(\n        qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n          (cv.Config.forceReload === true ? '?' + Date.now() : '')\n      );\n\n      this.__init();\n      if (typeof cv.Config.mobileDevice === 'boolean') {\n        this.setMobile(cv.Config.mobileDevice);\n      }\n      this._onResize(null, true);\n      qx.event.Registration.addListener(window, 'resize', this._onResize, this);\n    },\n\n    hideManager() {\n      if (Object.prototype.hasOwnProperty.call(cv.ui, 'manager')) {\n        const ManagerMain = cv.ui['manager']['Main'];\n        // only do something when the singleton is already created\n        if (ManagerMain.constructor.$$instance) {\n          ManagerMain.getInstance().setVisible(false);\n        }\n      }\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager(action, data) {\n      if (this.isManagerDisabled()) {\n        const notification = {\n          topic: 'cv.manager.error',\n          target: 'popup',\n          title: qx.locale.Manager.tr('Manager is not available'),\n          message: this.getManagerDisabledReason(),\n          severity: 'high',\n          deletable: true\n        };\n\n        cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n      } else {\n        qx.io.PartLoader.require(\n          ['manager'],\n          function (states) {\n            // break dependency\n            const ManagerMain = cv.ui['manager']['Main'];\n            const firstCall = !ManagerMain.constructor.$$instance;\n            const manager = ManagerMain.getInstance();\n            if (!firstCall) {\n              manager.setVisible(!manager.getVisible());\n            } else {\n              // initially bind manager visibility\n              manager.bind('visible', this, 'inManager');\n            }\n\n            if (manager.getVisible() && action && data) {\n              // delay this a little bit, give the manager some time to settle\n              qx.event.Timer.once(\n                () => {\n                  qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n                },\n                this,\n                1000\n              );\n            }\n          },\n          this\n        );\n      }\n    },\n\n    _applyInManager(value) {\n      if (value) {\n        qx.bom.History.getInstance().addToHistory('manager', qx.locale.Manager.tr('Manager') + ' - CometVisu');\n\n        this.block(false);\n        if (document.body.classList.contains('loading')) {\n          document.body.classList.remove('loading');\n        }\n      } else {\n        qx.bom.History.getInstance().addToHistory('', 'CometVisu');\n      }\n    },\n\n    showConfigErrors(configName, options) {\n      configName = configName ? 'visu_config_' + configName + '.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign(\n          {\n            jumpToError: true\n          },\n\n          options ? options : {}\n        )\n      };\n\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig(configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n\n      cv.core.notifications.Router.dispatchMessage(\n        notification.topic,\n        Object.assign({}, notification, {\n          target: 'toast',\n          message: qx.locale.Manager.tr('Validating configuration file...')\n        })\n      );\n\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker\n        .validateConfig(url)\n        .then(res => {\n          // remove the toast information\n          cv.core.notifications.Router.dispatchMessage(\n            notification.topic,\n            Object.assign({}, notification, {\n              target: 'toast',\n              condition: false\n            })\n          );\n\n          if (res === true) {\n            // show result message as dialog\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n\n                icon: 'message_ok'\n              })\n            );\n          } else {\n            // show result message as dialog\n            qx.log.Logger.error(this, res);\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n\n                actions: {\n                  link: [\n                    {\n                      title: qx.locale.Manager.tr('Show errors'),\n                      action() {\n                        qx.core.Init.getApplication().showConfigErrors(configName);\n                      }\n                    }\n                  ]\n                },\n\n                severity: 'high',\n                icon: 'message_attention'\n              })\n            );\n          }\n        })\n        .catch(err => {\n          this.error(err);\n        });\n    },\n\n    __globalErrorHandler(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (exString || ex.stack) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              type: 'reload',\n              action(ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link =\n            ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push({\n            title: qx.locale.Manager.tr('Send error to sentry.io'),\n            type: 'sentry',\n            action() {\n              Sentry.captureException(ex);\n            },\n            needsConfirmation: false,\n            deleteMessageAfterExecution: true\n          });\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link =\n              ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      true() {\n        window.onerror(new Error('test error'));\n      },\n      false: null\n    }),\n\n    _onResize() {\n      if (cv.Config.mobileDevice === undefined) {\n        this.setMobile(window.innerWidth < cv.Config.maxMobileScreenWidth);\n      }\n    },\n\n    _applyStructureLoaded() {\n      if (!cv.Config.cacheUsed) {\n        let body = document.querySelector('body');\n        // load empty HTML structure\n        body.innerHTML = cv.Application.structureController.getHtmlStructure();\n      }\n    },\n\n    /**\n     * Internal initialization method\n     */\n    async __init() {\n      qx.event.Registration.addListener(\n        window,\n        'unload',\n        function () {\n          cv.io.Client.stopAll();\n        },\n        this\n      );\n\n      qx.bom.Lifecycle.onReady(async () => {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n\n        this._isCached = false;\n        if (cv.Config.enableCache) {\n          this._isCached = await cv.ConfigCache.isCached();\n        }\n        if (this._isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n        }\n        // initialize NotificationCenter\n        cv.ui.NotificationCenter.getInstance();\n        cv.ui.ToastManager.getInstance();\n        if (!window.cvTestMode && !cv.Config.loadManager) {\n          let configLoader = new cv.util.ConfigLoader();\n          configLoader.load(this.bootstrap, this);\n        }\n      });\n\n      // reaction on browser back button\n      qx.bom.History.getInstance().addListener('request', e => {\n        const anchor = e.getData();\n        if (this.isInManager() && anchor !== 'manager') {\n          this.hideManager();\n        } else if (!this.isInManager() && anchor === 'manager') {\n          this.showManager();\n        } else if (cv.Application.structureController) {\n          cv.Application.structureController.onHistoryRequest(anchor);\n        }\n      });\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    async bootstrap(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.setConfigSource(xml);\n      loader.bind('finished', engine, 'scriptsLoaded');\n\n      if (this._isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, engine.getConfigHash());\n\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          cv.io.BackendConnections.initBackendClient();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure ' + structure);\n          engine.loadParts([structure]).then(() => {\n            this.loadPlugins();\n          });\n          engine.addListenerOnce('changeReady', async () => {\n            // create the objects\n            cv.Config.treePath = await cv.Application.structureController.getInitialPageId();\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          });\n          // check if the current design settings overrides the cache one\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function (style) {\n              styles.push(\n                style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n              );\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function (style) {\n              scripts.push(\n                style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n              );\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('start parsing config file');\n        const engine = cv.TemplateEngine.getInstance();\n        await engine.parse();\n        this.loadPlugins();\n        this.loadStyles();\n        this.loadScripts();\n        this.debug('done');\n\n        if (cv.Config.enableCache && cv.Application.structureController.supports('cache')) {\n          // cache dom + data when everything is ready\n          qx.event.message.Bus.subscribe(\n            'setup.dom.finished',\n            function () {\n              cv.ConfigCache.dump(xml, engine.getConfigHash());\n            },\n            this\n          );\n        }\n      }\n      this.__appReady = true;\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        document.body.classList.add('loading-styles');\n        const loader = cv.util.ScriptLoader.getInstance();\n        loader.addListenerOnce('stylesLoaded', () => {\n          document.body.classList.remove('loading');\n          document.body.classList.remove('loading-styles');\n        });\n        loader.addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins() {\n      const plugins = cv.Config.configSettings.pluginsToLoad.slice();\n      cv.Config.pluginsToLoad.forEach(name => {\n        if (!plugins.includes(name)) {\n          plugins.push(name);\n        }\n      });\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        const engine = cv.TemplateEngine.getInstance();\n        let partsLoaded = engine.getPartsLoaded();\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        if (!partsLoaded) {\n          engine.addListener('changePartsLoaded', ev => {\n            if (ev.getData() === true) {\n              this.debug('plugins loaded');\n              partsLoaded = true;\n              if (allPluginsQueued) {\n                qx.event.Timer.once(\n                  function () {\n                    cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                  },\n                  this,\n                  0\n                );\n              }\n            }\n          });\n        }\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = cv.Application.getRelativeResourcePath();\n        plugins.forEach(function (plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(\n              path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js'\n            );\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', ev => {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            });\n          }\n        } else {\n          allPluginsQueued = true;\n          qx.event.Timer.once(\n            function () {\n              cv.util.ScriptLoader.getInstance().setAllQueued(true);\n            },\n            this,\n            0\n          );\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __constraintFails(serverVersionId, constraint) {\n      const match = /^(>=|<|>|<=|\\^)(\\d+)\\.(\\d+)\\.?(\\d+)?$/.exec(constraint);\n      if (match) {\n        const operator = match[1];\n        const majorConstraint = parseInt(match[2]);\n        const hasMinorVersion = match[3] !== undefined;\n        const minorConstraint = hasMinorVersion ? parseInt(match[3]) : 0;\n        const hasPatchVersion = match[4] !== undefined;\n        const patchConstraint = hasPatchVersion ? parseInt(match[4]) : 0;\n        const constraintId = 10000 * majorConstraint + 100 * minorConstraint + patchConstraint;\n        const maxId =\n          10000 * majorConstraint +\n          (hasMinorVersion ? 100 * minorConstraint : 999) +\n          (hasPatchVersion ? patchConstraint : 99);\n        // incomplete implementation of: https://getcomposer.org/doc/articles/versions.md#writing-version-constraints\n        switch (operator) {\n          case '>=':\n            if (serverVersionId < constraintId) {\n              return true;\n            }\n            break;\n          case '>':\n            if (serverVersionId <= constraintId) {\n              return true;\n            }\n            break;\n          case '<=':\n            if (serverVersionId > maxId) {\n              return true;\n            }\n            break;\n          case '<':\n            if (serverVersionId >= maxId) {\n              return true;\n            }\n            break;\n          case '^':\n            if (serverVersionId < constraintId || serverVersionId > 10000 * (majorConstraint + 1)) {\n              return true;\n            }\n            break;\n          case '~':\n            if (\n              serverVersionId < constraintId || hasPatchVersion\n                ? serverVersionId > 10000 * (majorConstraint + 1)\n                : serverVersionId > 10000 * majorConstraint + 100 * (patchConstraint + 1)\n            ) {\n              return true;\n            }\n            break;\n        }\n      }\n      return false;\n    },\n\n    _checkBackend() {\n      if (cv.Config.testMode === true) {\n        this.setManagerChecked(true);\n      } else {\n        const isOpenHab = this.isServedByOpenhab();\n        const url = isOpenHab ? cv.io.rest.Client.getBaseUrl() + '/environment'\n          : cv.io.rest.Client.getBaseUrl().split('/').slice(0, -1).join('/') + '/environment.php';\n        const xhr = new qx.io.request.Xhr(url);\n        xhr.set({\n          method: 'GET',\n          accept: 'application/json'\n        });\n\n        xhr.addListenerOnce('success', e => {\n          const req = e.getTarget();\n          const env = req.getResponse();\n          if (typeof env === 'string' && env.startsWith('<?php')) {\n            // no php support\n            this.setServerHasPhpSupport(false);\n            this.error('Disabling manager due to missing PHP support.');\n\n            this.setManagerDisabled(true);\n            this.setManagerDisabledReason(qx.locale.Manager.tr('Your server does not support PHP'));\n            this.setManagerChecked(true);\n          } else {\n            // is this is served by native openHAB server, we do not have native PHP support, only the basic\n            // rest api is available, but nothing else that needs PHP (like some plugin backend code)\n            this.setServerHasPhpSupport(!isOpenHab);\n\n            this.setServerPhpVersion(env.phpversion);\n            this.setServer(env.SERVER_SOFTWARE);\n\n            const serverVersionId = env.PHP_VERSION_ID;\n            const orParts = env.required_php_version\n              .split('||')\n              .map(e => e.trim());\n            const passed = orParts.map(orConstraint => {\n              const andParts = orConstraint\n                .split(/(\\s+|&{2})/)\n                .map(e => e.trim());\n              // pass when no failed andPart has been found\n              return !andParts.some(constraint =>\n                this.__constraintFails(serverVersionId, constraint)\n              );\n            });\n            // one of the OR constraints need to pass\n            const enable = passed.some(res => res === true);\n            if (enable) {\n              this.info('Manager available for PHP version', env.phpversion);\n            } else {\n              this.error(\n                'Disabling manager due to PHP version mismatch. Installed:',\n                env.phpversion,\n                'required:',\n                env.required_php_version\n              );\n\n              this.setManagerDisabled(true);\n              this.setManagerDisabledReason(\n                qx.locale.Manager.tr(\n                  'Your system does not provide the required PHP version for the manager. Installed: %1, required: %2',\n                  env.phpversion,\n                  env.required_php_version\n                )\n              );\n            }\n            this.setManagerChecked(true);\n\n            if (window.Sentry) {\n              Sentry.configureScope(function (scope) {\n                if ('server_release' in env) {\n                  scope.setTag('server.release', env.server_release);\n                }\n                if ('server_branch' in env) {\n                  scope.setTag('server.branch', env.server_branch);\n                }\n                if ('server_id' in env) {\n                  scope.setTag('server.id', env.server_id);\n                }\n              });\n            }\n          }\n        });\n        xhr.addListener('statusError', e => {\n          this.setManagerChecked(true);\n        });\n        xhr.send();\n      }\n    },\n\n    close() {\n      this.setActive(false);\n      const client = cv.io.BackendConnections.getClient();\n      if (client) {\n        client.terminate();\n      }\n    },\n\n    /**\n     * Install the service-worker if possible\n     */\n    registerServiceWorker() {\n      if (cv.Config.useServiceWorker === true) {\n        const workerFile = 'ServiceWorker.js';\n        navigator.serviceWorker\n          .register(workerFile)\n          .then(\n            function (reg) {\n              this.debug('ServiceWorker successfully registered for scope ' + reg.scope);\n\n              // configure service worker\n              var configMessage = {\n                command: 'configure',\n                message: {\n                  forceReload: cv.Config.forceReload,\n                  debug: qx.core.Environment.get('qx.debug')\n                }\n              };\n\n              if (reg.active) {\n                reg.active.postMessage(configMessage);\n              } else {\n                navigator.serviceWorker.ready.then(function (ev) {\n                  ev.active.postMessage(configMessage);\n                });\n              }\n            }.bind(this)\n          )\n          .catch(\n            function (err) {\n              this.error('Error registering service-worker: ', err);\n            }.bind(this)\n          );\n      } else if (navigator.serviceWorker) {\n        navigator.serviceWorker.getRegistrations().then(\n          function (registrations) {\n            this.debug('unregistering existing service workers');\n            registrations.forEach(function (registration) {\n              registration.unregister();\n            });\n          }.bind(this)\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}