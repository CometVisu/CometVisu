{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "_construct",
    "Parent",
    "Class",
    "_isNativeReflectConstruct",
    "Reflect",
    "construct",
    "bind",
    "a",
    "Constructor",
    "Function",
    "instance",
    "_setPrototypeOf",
    "sham",
    "Proxy",
    "Boolean",
    "valueOf",
    "e",
    "o",
    "p",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "extend",
    "application",
    "Native",
    "_this",
    "__appReady",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "pageVis",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "showConfigErrors",
    "xhr",
    "request",
    "Xhr",
    "set",
    "check",
    "req",
    "getTarget",
    "header",
    "getResponseHeader",
    "isOpenHAB",
    "startsWith",
    "setServedByOpenhab",
    "setServerChecked",
    "addListenerOnce",
    "getStatus",
    "send",
    "statics",
    "consoleCommands",
    "__commandManager",
    "structureController",
    "_relResourcePath",
    "_fullResourcePath",
    "getRelativeResourcePath",
    "fullPath",
    "baseUrl",
    "location",
    "origin",
    "pathname",
    "split",
    "join",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "substring",
    "createClient",
    "Client",
    "cv",
    "_len",
    "Array",
    "_key",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "getStructure",
    "pluginsToLoad",
    "includes",
    "configSettings",
    "endsWith",
    "indexOf",
    "mqtt",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "init",
    "event",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "managerDisabled",
    "managerDisabledReason",
    "managerChecked",
    "mobile",
    "serverChecked",
    "servedByOpenhab",
    "serverHasPhpSupport",
    "serverPhpVersion",
    "server",
    "members",
    "_blocker",
    "_isCached",
    "block",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "_applyMobile",
    "document",
    "body",
    "classList",
    "contains",
    "add",
    "remove",
    "isReady",
    "_applyManagerChecked",
    "loadManager",
    "managerOptions",
    "action",
    "data",
    "main",
    "_this2",
    "ConfigCache",
    "isServerChecked",
    "_checkBackend",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "registerServiceWorker",
    "superclass",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "mobileDevice",
    "setMobile",
    "_onResize",
    "Registration",
    "hideManager",
    "ManagerMain",
    "$$instance",
    "setVisible",
    "isManagerDisabled",
    "notification",
    "topic",
    "target",
    "title",
    "tr",
    "message",
    "getManagerDisabledReason",
    "severity",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "states",
    "firstCall",
    "manager",
    "getVisible",
    "Timer",
    "once",
    "Bus",
    "dispatchByName",
    "_applyInManager",
    "History",
    "addToHistory",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "assign",
    "jumpToError",
    "isInManager",
    "condition",
    "validateConfig",
    "_this3",
    "worker",
    "FileWorker",
    "displayConfigName",
    "unique",
    "res",
    "configPath",
    "concat",
    "url",
    "has",
    "icon",
    "Logger",
    "actions",
    "link",
    "Init",
    "getApplication",
    "__P_2_2",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "ev",
    "parentNode",
    "id",
    "box",
    "querySelector",
    "href",
    "shift",
    "checked",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "Environment",
    "select",
    "_true",
    "onerror",
    "innerWidth",
    "maxMobileScreenWidth",
    "_applyStructureLoaded",
    "cacheUsed",
    "innerHTML",
    "getHtmlStructure",
    "__P_2_3",
    "_this4",
    "_callee2",
    "_callee2$",
    "_context2",
    "stopAll",
    "Lifecycle",
    "onReady",
    "_callee",
    "configLoader",
    "_callee$",
    "_context",
    "enableCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "ConfigLoader",
    "load",
    "bootstrap",
    "anchor",
    "getData",
    "onHistoryRequest",
    "xml",
    "_this5",
    "_callee4",
    "engine",
    "loader",
    "cacheValid",
    "structure",
    "styles",
    "scripts",
    "_engine",
    "_callee4$",
    "_context4",
    "ScriptLoader",
    "setConfigSource",
    "isValid",
    "getConfigHash",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "BackendConnections",
    "initBackendClients",
    "loadParts",
    "loadPlugins",
    "_callee3",
    "_callee3$",
    "_context3",
    "getInitialPageId",
    "treePath",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "clientDesign",
    "stylesToLoad",
    "replace",
    "uri",
    "loadStyles",
    "scriptsToLoad",
    "loadScripts",
    "parse",
    "supports",
    "subscribe",
    "dump",
    "addStyles",
    "addScripts",
    "_this6",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "getPartsLoaded",
    "allPluginsQueued",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "plugin",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "__constraintFails",
    "__P_2_4",
    "serverVersionId",
    "constraint",
    "match",
    "exec",
    "operator",
    "majorConstraint",
    "parseInt",
    "hasMinorVersion",
    "minorConstraint",
    "hasPatchVersion",
    "patchConstraint",
    "constraintId",
    "maxId",
    "_this7",
    "setManagerChecked",
    "setServerHasPhpSupport",
    "isOpenHab",
    "isServedByOpenhab",
    "rest",
    "getBaseUrl",
    "accept",
    "failedCheck",
    "errorText",
    "disableReason",
    "setManagerDisabled",
    "setManagerDisabledReason",
    "env",
    "getResponse",
    "setServerPhpVersion",
    "phpversion",
    "setServer",
    "SERVER_SOFTWARE",
    "PHP_VERSION_ID",
    "orParts",
    "required_php_version",
    "map",
    "trim",
    "passed",
    "orConstraint",
    "andParts",
    "some",
    "enable",
    "configureScope",
    "scope",
    "setTag",
    "server_release",
    "server_branch",
    "server_id",
    "close",
    "clients",
    "getClients",
    "terminate",
    "useServiceWorker",
    "workerFile",
    "navigator",
    "serviceWorker",
    "register",
    "reg",
    "configMessage",
    "postMessage",
    "ready",
    "getRegistrations",
    "registrations",
    "registration",
    "unregister"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "sourcesContent": [
    "/* Application.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(sentry/bundle.tracing.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application', {\n  extend: qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__appReady = false;\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n    const pageVis = qx.bom.PageVisibility.getInstance();\n    pageVis.addListener('change', () => {\n      this.setActive(pageVis.getVisibilityState() === 'visible');\n    });\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n\n    // check HTTP server by requesting a small file\n    const xhr = new qx.io.request.Xhr('version');\n    xhr.set({ method: 'GET'});\n\n    const check = e => {\n      const req = e.getTarget();\n      const header = req.getResponseHeader('Server');\n      const isOpenHAB = header ? header.startsWith('Jetty') : false;\n      this.setServedByOpenhab(isOpenHAB);\n      this.setServerChecked(true);\n    };\n    xhr.addListenerOnce('success', check, this);\n    xhr.addListenerOnce('statusError', check, this);\n    xhr.addListenerOnce('error', e => {\n      const req = e.getTarget();\n      this.error('error checking server environment needed to setup the REST url', req.getStatus());\n    });\n    xhr.send();\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    consoleCommands: [],\n    __commandManager: null,\n    /**\n     * Controller from the loaded structure injects itself here when loaded\n     */\n    structureController: null,\n    _relResourcePath: null,\n    _fullResourcePath: null,\n\n    getRelativeResourcePath(fullPath) {\n      if (!this._relResourcePath) {\n        const baseUrl = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n        this._relResourcePath =\n          qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')).substring(\n            baseUrl.length + 1\n          ) + '/';\n      }\n      if (fullPath === true) {\n        if (!this._fullResourcePath) {\n          this._fullResourcePath =\n            window.location.pathname.split('/').slice(0, -1).join('/') + '/' + this._relResourcePath;\n        }\n        return this._fullResourcePath;\n      }\n      return this._relResourcePath;\n    },\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient(...args) {\n      let Client = cv.io.Client;\n      if (\n        cv.Config.testMode === true ||\n        window.cvTestMode === true ||\n        args[0] === 'simulated'\n      ) {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        if (\n          cv.Config.getStructure() === 'structure-pure' &&\n          !cv.Config.pluginsToLoad.includes('plugin-openhab')\n        ) {\n          cv.Config.configSettings.pluginsToLoad.push('plugin-openhab');\n        }\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      return new Client(...args);\n    },\n\n    /**\n     * Register shortcuts to useful commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded',\n      apply: '_applyStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyInManager'\n    },\n\n    managerDisabled: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeManagerDisabled'\n    },\n\n    managerDisabledReason: {\n      check: 'String',\n      nullable: true\n    },\n\n    managerChecked: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyManagerChecked'\n    },\n\n    /**\n     * Mobile device detection (small screen)\n     */\n    mobile: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMobile',\n      apply: '_applyMobile'\n    },\n\n    serverChecked: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverCheckedChanged'\n    },\n\n    servedByOpenhab: {\n      check: 'Boolean',\n      init: false\n    },\n\n    serverHasPhpSupport: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverHasPhpSupportChanged'\n    },\n\n    serverPhpVersion: {\n      check: 'String',\n      nullable: true\n    },\n\n    server: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    _blocker: null,\n    __appReady: null,\n    _isCached: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    _applyMobile(value) {\n      // maintain old value for compatibility\n      if (value && !document.body.classList.contains('mobile')) {\n        document.body.classList.add('mobile');\n      } else if (!value && document.body.classList.contains('mobile')) {\n        document.body.classList.remove('mobile');\n      }\n    },\n\n    isReady() {\n      return this.__appReady;\n    },\n\n    _applyManagerChecked(value) {\n      if (value && cv.Config.loadManager) {\n        this.showManager(cv.Config.managerOptions.action, cv.Config.managerOptions.data);\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main() {\n      cv.ConfigCache.init();\n      if (this.isServerChecked()) {\n        this._checkBackend();\n      } else {\n        this.addListenerOnce('serverCheckedChanged', this._checkBackend, this);\n      }\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n\n      document.body.classList.add('loading');\n\n      cv.report.Record.prepare();\n\n      let info =\n        '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' +\n        new Date().getFullYear() +\n        ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' +\n        cv.Version.VERSION +\n        '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n    ' + cv.Application.consoleCommands.join('\\n    ') + '\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager());\n      this.registerServiceWorker();\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      super.main();\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(\n        qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n          (cv.Config.forceReload === true ? '?' + Date.now() : '')\n      );\n\n      this.__init();\n      if (typeof cv.Config.mobileDevice === 'boolean') {\n        this.setMobile(cv.Config.mobileDevice);\n      }\n      this._onResize(null, true);\n      qx.event.Registration.addListener(window, 'resize', this._onResize, this);\n    },\n\n    hideManager() {\n      if (Object.prototype.hasOwnProperty.call(cv.ui, 'manager')) {\n        const ManagerMain = cv.ui['manager']['Main'];\n        // only do something when the singleton is already created\n        if (ManagerMain.constructor.$$instance) {\n          ManagerMain.getInstance().setVisible(false);\n        }\n      }\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager(action, data) {\n      if (this.isManagerDisabled()) {\n        const notification = {\n          topic: 'cv.manager.error',\n          target: 'popup',\n          title: qx.locale.Manager.tr('Manager is not available'),\n          message: this.getManagerDisabledReason(),\n          severity: 'high',\n          deletable: true\n        };\n\n        cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n      } else {\n        qx.io.PartLoader.require(\n          ['manager'],\n          function (states) {\n            // break dependency\n            const ManagerMain = cv.ui['manager']['Main'];\n            const firstCall = !ManagerMain.constructor.$$instance;\n            const manager = ManagerMain.getInstance();\n            if (!firstCall) {\n              manager.setVisible(!manager.getVisible());\n            } else {\n              // initially bind manager visibility\n              manager.bind('visible', this, 'inManager');\n            }\n\n            if (manager.getVisible() && action && data) {\n              // delay this a little bit, give the manager some time to settle\n              qx.event.Timer.once(\n                () => {\n                  qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n                },\n                this,\n                1000\n              );\n            }\n          },\n          this\n        );\n      }\n    },\n\n    _applyInManager(value) {\n      if (value) {\n        qx.bom.History.getInstance().addToHistory('manager', qx.locale.Manager.tr('Manager') + ' - CometVisu');\n\n        this.block(false);\n        if (document.body.classList.contains('loading')) {\n          document.body.classList.remove('loading');\n        }\n      } else {\n        qx.bom.History.getInstance().addToHistory('', 'CometVisu');\n      }\n    },\n\n    showConfigErrors(configName, options) {\n      configName = configName ? 'visu_config_' + configName + '.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign(\n          {\n            jumpToError: true\n          },\n\n          options ? options : {}\n        )\n      };\n\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig(configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n\n      cv.core.notifications.Router.dispatchMessage(\n        notification.topic,\n        Object.assign({}, notification, {\n          target: 'toast',\n          message: qx.locale.Manager.tr('Validating configuration file...')\n        })\n      );\n\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker\n        .validateConfig(url)\n        .then(res => {\n          // remove the toast information\n          cv.core.notifications.Router.dispatchMessage(\n            notification.topic,\n            Object.assign({}, notification, {\n              target: 'toast',\n              condition: false\n            })\n          );\n\n          if (res === true) {\n            // show result message as dialog\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n\n                icon: 'message_ok'\n              })\n            );\n          } else {\n            // show result message as dialog\n            qx.log.Logger.error(this, res);\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n\n                actions: {\n                  link: [\n                    {\n                      title: qx.locale.Manager.tr('Show errors'),\n                      action() {\n                        qx.core.Init.getApplication().showConfigErrors(configName);\n                      }\n                    }\n                  ]\n                },\n\n                severity: 'high',\n                icon: 'message_attention'\n              })\n            );\n          }\n        })\n        .catch(err => {\n          this.error(err);\n        });\n    },\n\n    __globalErrorHandler(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (exString || ex.stack) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              type: 'reload',\n              action(ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link =\n            ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push({\n            title: qx.locale.Manager.tr('Send error to sentry.io'),\n            type: 'sentry',\n            action() {\n              Sentry.captureException(ex);\n            },\n            needsConfirmation: false,\n            deleteMessageAfterExecution: true\n          });\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link =\n              ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      true() {\n        window.onerror(new Error('test error'));\n      },\n      false: null\n    }),\n\n    _onResize() {\n      if (cv.Config.mobileDevice === undefined) {\n        this.setMobile(window.innerWidth < cv.Config.maxMobileScreenWidth);\n      }\n    },\n\n    _applyStructureLoaded() {\n      if (!cv.Config.cacheUsed) {\n        let body = document.querySelector('body');\n        // load empty HTML structure\n        body.innerHTML = cv.Application.structureController.getHtmlStructure();\n      }\n    },\n\n    /**\n     * Internal initialization method\n     */\n    async __init() {\n      qx.event.Registration.addListener(\n        window,\n        'unload',\n        function () {\n          cv.io.Client.stopAll();\n        },\n        this\n      );\n\n      qx.bom.Lifecycle.onReady(async () => {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n\n        this._isCached = false;\n        if (cv.Config.enableCache) {\n          this._isCached = await cv.ConfigCache.isCached();\n        }\n        if (this._isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n        }\n        // initialize NotificationCenter\n        cv.ui.NotificationCenter.getInstance();\n        cv.ui.ToastManager.getInstance();\n        if (!window.cvTestMode && !cv.Config.loadManager) {\n          let configLoader = new cv.util.ConfigLoader();\n          configLoader.load(this.bootstrap, this);\n        }\n      });\n\n      // reaction on browser back button\n      qx.bom.History.getInstance().addListener('request', e => {\n        const anchor = e.getData();\n        if (this.isInManager() && anchor !== 'manager') {\n          this.hideManager();\n        } else if (!this.isInManager() && anchor === 'manager') {\n          this.showManager();\n        } else if (cv.Application.structureController) {\n          cv.Application.structureController.onHistoryRequest(anchor);\n        }\n      });\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    async bootstrap(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.setConfigSource(xml);\n      loader.bind('finished', engine, 'scriptsLoaded');\n\n      if (this._isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, engine.getConfigHash());\n\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          cv.io.BackendConnections.initBackendClients();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure ' + structure);\n          engine.loadParts([structure]).then(() => {\n            this.loadPlugins();\n          });\n          engine.addListenerOnce('changeReady', async () => {\n            // create the objects\n            cv.Config.treePath = await cv.Application.structureController.getInitialPageId();\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          });\n          // check if the current design settings overrides the cache one\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function (style) {\n              if (typeof style === 'string') {\n                styles.push(\n                  style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n                );\n              } else if (typeof style === 'object' && style.uri) {\n                style.uri = style.uri.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign);\n                styles.push(style);\n              }\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function (style) {\n              scripts.push(\n                style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n              );\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('start parsing config file');\n        const engine = cv.TemplateEngine.getInstance();\n        await engine.parse();\n        this.loadPlugins();\n        this.loadStyles();\n        this.loadScripts();\n        this.debug('done');\n\n        if (cv.Config.enableCache && cv.Application.structureController.supports('cache')) {\n          // cache dom + data when everything is ready\n          qx.event.message.Bus.subscribe(\n            'setup.dom.finished',\n            function () {\n              cv.ConfigCache.dump(xml, engine.getConfigHash());\n            },\n            this\n          );\n        }\n      }\n      this.__appReady = true;\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        document.body.classList.add('loading-styles');\n        const loader = cv.util.ScriptLoader.getInstance();\n        loader.addListenerOnce('stylesLoaded', () => {\n          document.body.classList.remove('loading');\n          document.body.classList.remove('loading-styles');\n        });\n        loader.addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins() {\n      const plugins = cv.Config.configSettings.pluginsToLoad.slice();\n      cv.Config.pluginsToLoad.forEach(name => {\n        if (!plugins.includes(name)) {\n          plugins.push(name);\n        }\n      });\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        const engine = cv.TemplateEngine.getInstance();\n        let partsLoaded = engine.getPartsLoaded();\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        if (!partsLoaded) {\n          engine.addListener('changePartsLoaded', ev => {\n            if (ev.getData() === true) {\n              this.debug('plugins loaded');\n              partsLoaded = true;\n              if (allPluginsQueued) {\n                qx.event.Timer.once(\n                  function () {\n                    cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                  },\n                  this,\n                  0\n                );\n              }\n            }\n          });\n        }\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = cv.Application.getRelativeResourcePath();\n        plugins.forEach(function (plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(\n              path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js'\n            );\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', ev => {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            });\n          }\n        } else {\n          allPluginsQueued = true;\n          qx.event.Timer.once(\n            function () {\n              cv.util.ScriptLoader.getInstance().setAllQueued(true);\n            },\n            this,\n            0\n          );\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __constraintFails(serverVersionId, constraint) {\n      const match = /^(>=|<|>|<=|\\^)(\\d+)\\.(\\d+)\\.?(\\d+)?$/.exec(constraint);\n      if (match) {\n        const operator = match[1];\n        const majorConstraint = parseInt(match[2]);\n        const hasMinorVersion = match[3] !== undefined;\n        const minorConstraint = hasMinorVersion ? parseInt(match[3]) : 0;\n        const hasPatchVersion = match[4] !== undefined;\n        const patchConstraint = hasPatchVersion ? parseInt(match[4]) : 0;\n        const constraintId = 10000 * majorConstraint + 100 * minorConstraint + patchConstraint;\n        const maxId =\n          10000 * majorConstraint +\n          (hasMinorVersion ? 100 * minorConstraint : 999) +\n          (hasPatchVersion ? patchConstraint : 99);\n        // incomplete implementation of: https://getcomposer.org/doc/articles/versions.md#writing-version-constraints\n        switch (operator) {\n          case '>=':\n            if (serverVersionId < constraintId) {\n              return true;\n            }\n            break;\n          case '>':\n            if (serverVersionId <= constraintId) {\n              return true;\n            }\n            break;\n          case '<=':\n            if (serverVersionId > maxId) {\n              return true;\n            }\n            break;\n          case '<':\n            if (serverVersionId >= maxId) {\n              return true;\n            }\n            break;\n          case '^':\n            if (serverVersionId < constraintId || serverVersionId > 10000 * (majorConstraint + 1)) {\n              return true;\n            }\n            break;\n          case '~':\n            if (\n              serverVersionId < constraintId || hasPatchVersion\n                ? serverVersionId > 10000 * (majorConstraint + 1)\n                : serverVersionId > 10000 * majorConstraint + 100 * (patchConstraint + 1)\n            ) {\n              return true;\n            }\n            break;\n        }\n      }\n      return false;\n    },\n\n    _checkBackend() {\n      if (cv.Config.testMode === true) {\n        this.setManagerChecked(true);\n        this.setServerHasPhpSupport(true);\n      } else {\n        const isOpenHab = this.isServedByOpenhab();\n        const url = isOpenHab ? cv.io.rest.Client.getBaseUrl() + '/environment'\n          : cv.io.rest.Client.getBaseUrl().split('/').slice(0, -1).join('/') + '/environment.php';\n        const xhr = new qx.io.request.Xhr(url);\n        xhr.set({\n          method: 'GET',\n          accept: 'application/json'\n        });\n        const failedCheck = (errorText, disableReason) => {\n          this.setServerHasPhpSupport(false);\n          this.error(errorText);\n\n          this.setManagerDisabled(true);\n          this.setManagerDisabledReason(disableReason);\n          this.setManagerChecked(true);\n        };\n\n        xhr.addListenerOnce('success', e => {\n          const req = e.getTarget();\n          const env = req.getResponse();\n          if (typeof env !== 'object') {\n            if (typeof env === 'string' && env.startsWith('<?php')) {\n              // no php support\n              failedCheck(\n                qx.locale.Manager.tr('Disabling manager due to missing PHP support.'),\n                qx.locale.Manager.tr('Your server does not support PHP.')\n              );\n            } else {\n              // generic php error\n              failedCheck(\n                qx.locale.Manager.tr('Disabling manager due to failed PHP request querying the environment.'),\n                qx.locale.Manager.tr('Failed PHP request querying the environment.')\n              );\n            }\n          } else {\n            // is this is served by native openHAB server, we do not have native PHP support, only the basic\n            // rest api is available, but nothing else that needs PHP (like some plugin backend code)\n            this.setServerHasPhpSupport(!isOpenHab);\n\n            this.setServerPhpVersion(env.phpversion);\n            this.setServer(env.SERVER_SOFTWARE);\n\n            const serverVersionId = env.PHP_VERSION_ID;\n            const orParts = env.required_php_version\n              .split('||')\n              .map(e => e.trim());\n            const passed = orParts.map(orConstraint => {\n              const andParts = orConstraint\n                .split(/(\\s+|&{2})/)\n                .map(e => e.trim());\n              // pass when no failed andPart has been found\n              return !andParts.some(constraint =>\n                this.__constraintFails(serverVersionId, constraint)\n              );\n            });\n            // one of the OR constraints need to pass\n            const enable = passed.some(res => res === true);\n            if (enable) {\n              this.info('Manager available for PHP version', env.phpversion);\n            } else {\n              this.error(\n                'Disabling manager due to PHP version mismatch. Installed:',\n                env.phpversion,\n                'required:',\n                env.required_php_version\n              );\n\n              this.setManagerDisabled(true);\n              this.setManagerDisabledReason(\n                qx.locale.Manager.tr(\n                  'Your system does not provide the required PHP version for the manager. Installed: %1, required: %2',\n                  env.phpversion,\n                  env.required_php_version\n                )\n              );\n            }\n            this.setManagerChecked(true);\n\n            if (window.Sentry) {\n              Sentry.configureScope(function (scope) {\n                if ('server_release' in env) {\n                  scope.setTag('server.release', env.server_release);\n                }\n                if ('server_branch' in env) {\n                  scope.setTag('server.branch', env.server_branch);\n                }\n                if ('server_id' in env) {\n                  scope.setTag('server.id', env.server_id);\n                }\n              });\n            }\n          }\n        });\n        xhr.addListener('statusError', e => {\n          failedCheck(\n            qx.locale.Manager.tr('Disabling manager due to failed PHP request querying the environment.'),\n            qx.locale.Manager.tr('Failed PHP request querying the environment.')\n          );\n        });\n        xhr.send();\n      }\n    },\n\n    close() {\n      this.setActive(false);\n      const clients = cv.io.BackendConnections.getClients();\n      for (const name in clients) {\n        clients[name].terminate();\n      }\n    },\n\n    /**\n     * Install the service-worker if possible\n     */\n    registerServiceWorker() {\n      if (cv.Config.useServiceWorker === true) {\n        const workerFile = 'ServiceWorker.js';\n        navigator.serviceWorker\n          .register(workerFile)\n          .then(\n            function (reg) {\n              this.debug('ServiceWorker successfully registered for scope ' + reg.scope);\n\n              // configure service worker\n              var configMessage = {\n                command: 'configure',\n                message: {\n                  forceReload: cv.Config.forceReload,\n                  debug: qx.core.Environment.get('qx.debug')\n                }\n              };\n\n              if (reg.active) {\n                reg.active.postMessage(configMessage);\n              } else {\n                navigator.serviceWorker.ready.then(function (ev) {\n                  ev.active.postMessage(configMessage);\n                });\n              }\n            }.bind(this)\n          )\n          .catch(\n            function (err) {\n              this.error('Error registering service-worker: ', err);\n            }.bind(this)\n          );\n      } else if (navigator.serviceWorker) {\n        navigator.serviceWorker.getRegistrations().then(\n          function (registrations) {\n            this.debug('unregistering existing service workers');\n            registrations.forEach(function (registration) {\n              registration.unregister();\n            });\n          }.bind(this)\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}