{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "__appReady",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "pageVis",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "bind",
    "showConfigErrors",
    "xhr",
    "request",
    "Xhr",
    "set",
    "method",
    "check",
    "e",
    "req",
    "getTarget",
    "header",
    "getResponseHeader",
    "isOpenHAB",
    "startsWith",
    "setServedByOpenhab",
    "setServerChecked",
    "addListenerOnce",
    "error",
    "getStatus",
    "send",
    "statics",
    "consoleCommands",
    "__commandManager",
    "structureController",
    "_relResourcePath",
    "_fullResourcePath",
    "getRelativeResourcePath",
    "fullPath",
    "baseUrl",
    "location",
    "origin",
    "pathname",
    "split",
    "slice",
    "join",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "substring",
    "length",
    "createClient",
    "Client",
    "cv",
    "args",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "getStructure",
    "pluginsToLoad",
    "includes",
    "configSettings",
    "push",
    "endsWith",
    "indexOf",
    "mqtt",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "init",
    "event",
    "apply",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "managerDisabled",
    "managerDisabledReason",
    "managerChecked",
    "mobile",
    "serverChecked",
    "servedByOpenhab",
    "serverHasPhpSupport",
    "serverPhpVersion",
    "server",
    "members",
    "_blocker",
    "_isCached",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "_applyMobile",
    "value",
    "document",
    "body",
    "classList",
    "contains",
    "add",
    "remove",
    "_applyManagerChecked",
    "loadManager",
    "managerOptions",
    "action",
    "data",
    "main",
    "ConfigCache",
    "isServerChecked",
    "_checkBackend",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "registerServiceWorker",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "mobileDevice",
    "setMobile",
    "_onResize",
    "Registration",
    "hideManager",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "ManagerMain",
    "constructor",
    "$$instance",
    "setVisible",
    "isManagerDisabled",
    "notification",
    "topic",
    "target",
    "title",
    "tr",
    "message",
    "getManagerDisabledReason",
    "severity",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "states",
    "firstCall",
    "manager",
    "getVisible",
    "Timer",
    "once",
    "Bus",
    "dispatchByName",
    "_applyInManager",
    "History",
    "addToHistory",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "assign",
    "jumpToError",
    "isInManager",
    "condition",
    "validateConfig",
    "worker",
    "FileWorker",
    "displayConfigName",
    "unique",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "icon",
    "Logger",
    "actions",
    "link",
    "Init",
    "getApplication",
    "err",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "type",
    "ev",
    "parentNode",
    "id",
    "box",
    "querySelector",
    "href",
    "shift",
    "checked",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "Environment",
    "select",
    "onerror",
    "Error",
    "undefined",
    "innerWidth",
    "maxMobileScreenWidth",
    "_applyStructureLoaded",
    "cacheUsed",
    "innerHTML",
    "getHtmlStructure",
    "stopAll",
    "Lifecycle",
    "onReady",
    "enableCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "anchor",
    "getData",
    "onHistoryRequest",
    "xml",
    "engine",
    "loader",
    "ScriptLoader",
    "setConfigSource",
    "isValid",
    "getConfigHash",
    "cacheValid",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "BackendConnections",
    "initBackendClients",
    "structure",
    "loadParts",
    "loadPlugins",
    "getInitialPageId",
    "treePath",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "parse",
    "supports",
    "subscribe",
    "dump",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "getPartsLoaded",
    "allPluginsQueued",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "plugin",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "__constraintFails",
    "serverVersionId",
    "constraint",
    "match",
    "exec",
    "operator",
    "majorConstraint",
    "parseInt",
    "hasMinorVersion",
    "minorConstraint",
    "hasPatchVersion",
    "patchConstraint",
    "constraintId",
    "maxId",
    "setManagerChecked",
    "isOpenHab",
    "isServedByOpenhab",
    "rest",
    "getBaseUrl",
    "accept",
    "env",
    "getResponse",
    "setServerHasPhpSupport",
    "setManagerDisabled",
    "setManagerDisabledReason",
    "setServerPhpVersion",
    "phpversion",
    "setServer",
    "SERVER_SOFTWARE",
    "PHP_VERSION_ID",
    "orParts",
    "required_php_version",
    "map",
    "trim",
    "passed",
    "orConstraint",
    "andParts",
    "some",
    "enable",
    "configureScope",
    "scope",
    "setTag",
    "server_release",
    "server_branch",
    "server_id",
    "close",
    "clients",
    "getClients",
    "terminate",
    "useServiceWorker",
    "workerFile",
    "navigator",
    "serviceWorker",
    "register",
    "reg",
    "configMessage",
    "postMessage",
    "ready",
    "getRegistrations",
    "registrations",
    "registration",
    "unregister"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "sourcesContent": [
    "/* Application.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(sentry/bundle.tracing.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application', {\n  extend: qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct() {\n    super();\n    this.__appReady = false;\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n    const pageVis = qx.bom.PageVisibility.getInstance();\n    pageVis.addListener('change', () => {\n      this.setActive(pageVis.getVisibilityState() === 'visible');\n    });\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n\n    // check HTTP server by requesting a small file\n    const xhr = new qx.io.request.Xhr('version');\n    xhr.set({ method: 'GET'});\n\n    const check = e => {\n      const req = e.getTarget();\n      const header = req.getResponseHeader('Server');\n      const isOpenHAB = header ? header.startsWith('Jetty') : false;\n      this.setServedByOpenhab(isOpenHAB);\n      this.setServerChecked(true);\n    };\n    xhr.addListenerOnce('success', check, this);\n    xhr.addListenerOnce('statusError', check, this);\n    xhr.addListenerOnce('error', e => {\n      const req = e.getTarget();\n      this.error('error checking server environment needed to setup the REST url', req.getStatus());\n    });\n    xhr.send();\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    consoleCommands: [],\n    __commandManager: null,\n    /**\n     * Controller from the loaded structure injects itself here when loaded\n     */\n    structureController: null,\n    _relResourcePath: null,\n    _fullResourcePath: null,\n\n    getRelativeResourcePath(fullPath) {\n      if (!this._relResourcePath) {\n        const baseUrl = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n        this._relResourcePath =\n          qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')).substring(\n            baseUrl.length + 1\n          ) + '/';\n      }\n      if (fullPath === true) {\n        if (!this._fullResourcePath) {\n          this._fullResourcePath =\n            window.location.pathname.split('/').slice(0, -1).join('/') + '/' + this._relResourcePath;\n        }\n        return this._fullResourcePath;\n      }\n      return this._relResourcePath;\n    },\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient(...args) {\n      let Client = cv.io.Client;\n      if (\n        cv.Config.testMode === true ||\n        window.cvTestMode === true ||\n        args[0] === 'simulated'\n      ) {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        if (\n          cv.Config.getStructure() === 'structure-pure' &&\n          !cv.Config.pluginsToLoad.includes('plugin-openhab')\n        ) {\n          cv.Config.configSettings.pluginsToLoad.push('plugin-openhab');\n        }\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      return new Client(...args);\n    },\n\n    /**\n     * Register shortcuts to useful commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded',\n      apply: '_applyStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyInManager'\n    },\n\n    managerDisabled: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeManagerDisabled'\n    },\n\n    managerDisabledReason: {\n      check: 'String',\n      nullable: true\n    },\n\n    managerChecked: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyManagerChecked'\n    },\n\n    /**\n     * Mobile device detection (small screen)\n     */\n    mobile: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMobile',\n      apply: '_applyMobile'\n    },\n\n    serverChecked: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverCheckedChanged'\n    },\n\n    servedByOpenhab: {\n      check: 'Boolean',\n      init: false\n    },\n\n    serverHasPhpSupport: {\n      check: 'Boolean',\n      init: false,\n      event: 'serverHasPhpSupportChanged'\n    },\n\n    serverPhpVersion: {\n      check: 'String',\n      nullable: true\n    },\n\n    server: {\n      check: 'String',\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    _blocker: null,\n    __appReady: null,\n    _isCached: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    _applyMobile(value) {\n      // maintain old value for compatibility\n      if (value && !document.body.classList.contains('mobile')) {\n        document.body.classList.add('mobile');\n      } else if (!value && document.body.classList.contains('mobile')) {\n        document.body.classList.remove('mobile');\n      }\n    },\n\n    _applyManagerChecked(value) {\n      if (value && cv.Config.loadManager) {\n        this.showManager(cv.Config.managerOptions.action, cv.Config.managerOptions.data);\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main() {\n      cv.ConfigCache.init();\n      if (this.isServerChecked()) {\n        this._checkBackend();\n      } else {\n        this.addListenerOnce('serverCheckedChanged', this._checkBackend, this);\n      }\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n\n      document.body.classList.add('loading');\n\n      cv.report.Record.prepare();\n\n      let info =\n        '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' +\n        new Date().getFullYear() +\n        ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' +\n        cv.Version.VERSION +\n        '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n    ' + cv.Application.consoleCommands.join('\\n    ') + '\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager());\n      this.registerServiceWorker();\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      super.main();\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(\n        qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') +\n          (cv.Config.forceReload === true ? '?' + Date.now() : '')\n      );\n\n      this.__init();\n      if (typeof cv.Config.mobileDevice === 'boolean') {\n        this.setMobile(cv.Config.mobileDevice);\n      }\n      this._onResize(null, true);\n      qx.event.Registration.addListener(window, 'resize', this._onResize, this);\n    },\n\n    hideManager() {\n      if (Object.prototype.hasOwnProperty.call(cv.ui, 'manager')) {\n        const ManagerMain = cv.ui['manager']['Main'];\n        // only do something when the singleton is already created\n        if (ManagerMain.constructor.$$instance) {\n          ManagerMain.getInstance().setVisible(false);\n        }\n      }\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager(action, data) {\n      if (this.isManagerDisabled()) {\n        const notification = {\n          topic: 'cv.manager.error',\n          target: 'popup',\n          title: qx.locale.Manager.tr('Manager is not available'),\n          message: this.getManagerDisabledReason(),\n          severity: 'high',\n          deletable: true\n        };\n\n        cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n      } else {\n        qx.io.PartLoader.require(\n          ['manager'],\n          function (states) {\n            // break dependency\n            const ManagerMain = cv.ui['manager']['Main'];\n            const firstCall = !ManagerMain.constructor.$$instance;\n            const manager = ManagerMain.getInstance();\n            if (!firstCall) {\n              manager.setVisible(!manager.getVisible());\n            } else {\n              // initially bind manager visibility\n              manager.bind('visible', this, 'inManager');\n            }\n\n            if (manager.getVisible() && action && data) {\n              // delay this a little bit, give the manager some time to settle\n              qx.event.Timer.once(\n                () => {\n                  qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n                },\n                this,\n                1000\n              );\n            }\n          },\n          this\n        );\n      }\n    },\n\n    _applyInManager(value) {\n      if (value) {\n        qx.bom.History.getInstance().addToHistory('manager', qx.locale.Manager.tr('Manager') + ' - CometVisu');\n\n        this.block(false);\n        if (document.body.classList.contains('loading')) {\n          document.body.classList.remove('loading');\n        }\n      } else {\n        qx.bom.History.getInstance().addToHistory('', 'CometVisu');\n      }\n    },\n\n    showConfigErrors(configName, options) {\n      configName = configName ? 'visu_config_' + configName + '.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign(\n          {\n            jumpToError: true\n          },\n\n          options ? options : {}\n        )\n      };\n\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig(configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n\n      cv.core.notifications.Router.dispatchMessage(\n        notification.topic,\n        Object.assign({}, notification, {\n          target: 'toast',\n          message: qx.locale.Manager.tr('Validating configuration file...')\n        })\n      );\n\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker\n        .validateConfig(url)\n        .then(res => {\n          // remove the toast information\n          cv.core.notifications.Router.dispatchMessage(\n            notification.topic,\n            Object.assign({}, notification, {\n              target: 'toast',\n              condition: false\n            })\n          );\n\n          if (res === true) {\n            // show result message as dialog\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n\n                icon: 'message_ok'\n              })\n            );\n          } else {\n            // show result message as dialog\n            qx.log.Logger.error(this, res);\n            cv.core.notifications.Router.dispatchMessage(\n              notification.topic,\n              Object.assign({}, notification, {\n                target: 'popup',\n                message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n\n                actions: {\n                  link: [\n                    {\n                      title: qx.locale.Manager.tr('Show errors'),\n                      action() {\n                        qx.core.Init.getApplication().showConfigErrors(configName);\n                      }\n                    }\n                  ]\n                },\n\n                severity: 'high',\n                icon: 'message_attention'\n              })\n            );\n          }\n        })\n        .catch(err => {\n          this.error(err);\n        });\n    },\n\n    __globalErrorHandler(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (exString || ex.stack) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              type: 'reload',\n              action(ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link =\n            ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push({\n            title: qx.locale.Manager.tr('Send error to sentry.io'),\n            type: 'sentry',\n            action() {\n              Sentry.captureException(ex);\n            },\n            needsConfirmation: false,\n            deleteMessageAfterExecution: true\n          });\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link =\n              ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      true() {\n        window.onerror(new Error('test error'));\n      },\n      false: null\n    }),\n\n    _onResize() {\n      if (cv.Config.mobileDevice === undefined) {\n        this.setMobile(window.innerWidth < cv.Config.maxMobileScreenWidth);\n      }\n    },\n\n    _applyStructureLoaded() {\n      if (!cv.Config.cacheUsed) {\n        let body = document.querySelector('body');\n        // load empty HTML structure\n        body.innerHTML = cv.Application.structureController.getHtmlStructure();\n      }\n    },\n\n    /**\n     * Internal initialization method\n     */\n    async __init() {\n      qx.event.Registration.addListener(\n        window,\n        'unload',\n        function () {\n          cv.io.Client.stopAll();\n        },\n        this\n      );\n\n      qx.bom.Lifecycle.onReady(async () => {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n\n        this._isCached = false;\n        if (cv.Config.enableCache) {\n          this._isCached = await cv.ConfigCache.isCached();\n        }\n        if (this._isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n        }\n        // initialize NotificationCenter\n        cv.ui.NotificationCenter.getInstance();\n        cv.ui.ToastManager.getInstance();\n        if (!window.cvTestMode && !cv.Config.loadManager) {\n          let configLoader = new cv.util.ConfigLoader();\n          configLoader.load(this.bootstrap, this);\n        }\n      });\n\n      // reaction on browser back button\n      qx.bom.History.getInstance().addListener('request', e => {\n        const anchor = e.getData();\n        if (this.isInManager() && anchor !== 'manager') {\n          this.hideManager();\n        } else if (!this.isInManager() && anchor === 'manager') {\n          this.showManager();\n        } else if (cv.Application.structureController) {\n          cv.Application.structureController.onHistoryRequest(anchor);\n        }\n      });\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    async bootstrap(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.setConfigSource(xml);\n      loader.bind('finished', engine, 'scriptsLoaded');\n\n      if (this._isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, engine.getConfigHash());\n\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          cv.io.BackendConnections.initBackendClients();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure ' + structure);\n          engine.loadParts([structure]).then(() => {\n            this.loadPlugins();\n          });\n          engine.addListenerOnce('changeReady', async () => {\n            // create the objects\n            cv.Config.treePath = await cv.Application.structureController.getInitialPageId();\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          });\n          // check if the current design settings overrides the cache one\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function (style) {\n              styles.push(\n                style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n              );\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function (style) {\n              scripts.push(\n                style.replace('designs/' + cv.Config.configSettings.clientDesign, 'designs/' + cv.Config.clientDesign)\n              );\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('start parsing config file');\n        const engine = cv.TemplateEngine.getInstance();\n        await engine.parse();\n        this.loadPlugins();\n        this.loadStyles();\n        this.loadScripts();\n        this.debug('done');\n\n        if (cv.Config.enableCache && cv.Application.structureController.supports('cache')) {\n          // cache dom + data when everything is ready\n          qx.event.message.Bus.subscribe(\n            'setup.dom.finished',\n            function () {\n              cv.ConfigCache.dump(xml, engine.getConfigHash());\n            },\n            this\n          );\n        }\n      }\n      this.__appReady = true;\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        document.body.classList.add('loading-styles');\n        const loader = cv.util.ScriptLoader.getInstance();\n        loader.addListenerOnce('stylesLoaded', () => {\n          document.body.classList.remove('loading');\n          document.body.classList.remove('loading-styles');\n        });\n        loader.addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins() {\n      const plugins = cv.Config.configSettings.pluginsToLoad.slice();\n      cv.Config.pluginsToLoad.forEach(name => {\n        if (!plugins.includes(name)) {\n          plugins.push(name);\n        }\n      });\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        const engine = cv.TemplateEngine.getInstance();\n        let partsLoaded = engine.getPartsLoaded();\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        if (!partsLoaded) {\n          engine.addListener('changePartsLoaded', ev => {\n            if (ev.getData() === true) {\n              this.debug('plugins loaded');\n              partsLoaded = true;\n              if (allPluginsQueued) {\n                qx.event.Timer.once(\n                  function () {\n                    cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                  },\n                  this,\n                  0\n                );\n              }\n            }\n          });\n        }\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = cv.Application.getRelativeResourcePath();\n        plugins.forEach(function (plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(\n              path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js'\n            );\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', ev => {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            });\n          }\n        } else {\n          allPluginsQueued = true;\n          qx.event.Timer.once(\n            function () {\n              cv.util.ScriptLoader.getInstance().setAllQueued(true);\n            },\n            this,\n            0\n          );\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __constraintFails(serverVersionId, constraint) {\n      const match = /^(>=|<|>|<=|\\^)(\\d+)\\.(\\d+)\\.?(\\d+)?$/.exec(constraint);\n      if (match) {\n        const operator = match[1];\n        const majorConstraint = parseInt(match[2]);\n        const hasMinorVersion = match[3] !== undefined;\n        const minorConstraint = hasMinorVersion ? parseInt(match[3]) : 0;\n        const hasPatchVersion = match[4] !== undefined;\n        const patchConstraint = hasPatchVersion ? parseInt(match[4]) : 0;\n        const constraintId = 10000 * majorConstraint + 100 * minorConstraint + patchConstraint;\n        const maxId =\n          10000 * majorConstraint +\n          (hasMinorVersion ? 100 * minorConstraint : 999) +\n          (hasPatchVersion ? patchConstraint : 99);\n        // incomplete implementation of: https://getcomposer.org/doc/articles/versions.md#writing-version-constraints\n        switch (operator) {\n          case '>=':\n            if (serverVersionId < constraintId) {\n              return true;\n            }\n            break;\n          case '>':\n            if (serverVersionId <= constraintId) {\n              return true;\n            }\n            break;\n          case '<=':\n            if (serverVersionId > maxId) {\n              return true;\n            }\n            break;\n          case '<':\n            if (serverVersionId >= maxId) {\n              return true;\n            }\n            break;\n          case '^':\n            if (serverVersionId < constraintId || serverVersionId > 10000 * (majorConstraint + 1)) {\n              return true;\n            }\n            break;\n          case '~':\n            if (\n              serverVersionId < constraintId || hasPatchVersion\n                ? serverVersionId > 10000 * (majorConstraint + 1)\n                : serverVersionId > 10000 * majorConstraint + 100 * (patchConstraint + 1)\n            ) {\n              return true;\n            }\n            break;\n        }\n      }\n      return false;\n    },\n\n    _checkBackend() {\n      if (cv.Config.testMode === true) {\n        this.setManagerChecked(true);\n      } else {\n        const isOpenHab = this.isServedByOpenhab();\n        const url = isOpenHab ? cv.io.rest.Client.getBaseUrl() + '/environment'\n          : cv.io.rest.Client.getBaseUrl().split('/').slice(0, -1).join('/') + '/environment.php';\n        const xhr = new qx.io.request.Xhr(url);\n        xhr.set({\n          method: 'GET',\n          accept: 'application/json'\n        });\n\n        xhr.addListenerOnce('success', e => {\n          const req = e.getTarget();\n          const env = req.getResponse();\n          if (typeof env === 'string' && env.startsWith('<?php')) {\n            // no php support\n            this.setServerHasPhpSupport(false);\n            this.error('Disabling manager due to missing PHP support.');\n\n            this.setManagerDisabled(true);\n            this.setManagerDisabledReason(qx.locale.Manager.tr('Your server does not support PHP'));\n            this.setManagerChecked(true);\n          } else {\n            // is this is served by native openHAB server, we do not have native PHP support, only the basic\n            // rest api is available, but nothing else that needs PHP (like some plugin backend code)\n            this.setServerHasPhpSupport(!isOpenHab);\n\n            this.setServerPhpVersion(env.phpversion);\n            this.setServer(env.SERVER_SOFTWARE);\n\n            const serverVersionId = env.PHP_VERSION_ID;\n            const orParts = env.required_php_version\n              .split('||')\n              .map(e => e.trim());\n            const passed = orParts.map(orConstraint => {\n              const andParts = orConstraint\n                .split(/(\\s+|&{2})/)\n                .map(e => e.trim());\n              // pass when no failed andPart has been found\n              return !andParts.some(constraint =>\n                this.__constraintFails(serverVersionId, constraint)\n              );\n            });\n            // one of the OR constraints need to pass\n            const enable = passed.some(res => res === true);\n            if (enable) {\n              this.info('Manager available for PHP version', env.phpversion);\n            } else {\n              this.error(\n                'Disabling manager due to PHP version mismatch. Installed:',\n                env.phpversion,\n                'required:',\n                env.required_php_version\n              );\n\n              this.setManagerDisabled(true);\n              this.setManagerDisabledReason(\n                qx.locale.Manager.tr(\n                  'Your system does not provide the required PHP version for the manager. Installed: %1, required: %2',\n                  env.phpversion,\n                  env.required_php_version\n                )\n              );\n            }\n            this.setManagerChecked(true);\n\n            if (window.Sentry) {\n              Sentry.configureScope(function (scope) {\n                if ('server_release' in env) {\n                  scope.setTag('server.release', env.server_release);\n                }\n                if ('server_branch' in env) {\n                  scope.setTag('server.branch', env.server_branch);\n                }\n                if ('server_id' in env) {\n                  scope.setTag('server.id', env.server_id);\n                }\n              });\n            }\n          }\n        });\n        xhr.addListener('statusError', e => {\n          this.setManagerChecked(true);\n        });\n        xhr.send();\n      }\n    },\n\n    close() {\n      this.setActive(false);\n      const clients = cv.io.BackendConnections.getClients();\n      for (const name in clients) {\n        clients[name].terminate();\n      }\n    },\n\n    /**\n     * Install the service-worker if possible\n     */\n    registerServiceWorker() {\n      if (cv.Config.useServiceWorker === true) {\n        const workerFile = 'ServiceWorker.js';\n        navigator.serviceWorker\n          .register(workerFile)\n          .then(\n            function (reg) {\n              this.debug('ServiceWorker successfully registered for scope ' + reg.scope);\n\n              // configure service worker\n              var configMessage = {\n                command: 'configure',\n                message: {\n                  forceReload: cv.Config.forceReload,\n                  debug: qx.core.Environment.get('qx.debug')\n                }\n              };\n\n              if (reg.active) {\n                reg.active.postMessage(configMessage);\n              } else {\n                navigator.serviceWorker.ready.then(function (ev) {\n                  ev.active.postMessage(configMessage);\n                });\n              }\n            }.bind(this)\n          )\n          .catch(\n            function (err) {\n              this.error('Error registering service-worker: ', err);\n            }.bind(this)\n          );\n      } else if (navigator.serviceWorker) {\n        navigator.serviceWorker.getRegistrations().then(\n          function (registrations) {\n            this.debug('unregistering existing service workers');\n            registrations.forEach(function (registration) {\n              registration.unregister();\n            });\n          }.bind(this)\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}