{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Native",
    "construct",
    "__appReady",
    "initCommandManager",
    "ui",
    "command",
    "GroupManager",
    "lang",
    "locale",
    "Manager",
    "getInstance",
    "getLanguage",
    "io",
    "PartLoader",
    "hasPart",
    "require",
    "pageVis",
    "bom",
    "PageVisibility",
    "addListener",
    "setActive",
    "getVisibilityState",
    "window",
    "parent",
    "showManager",
    "bind",
    "showConfigErrors",
    "statics",
    "consoleCommands",
    "__commandManager",
    "structureController",
    "_relResourcePath",
    "_fullResourcePath",
    "getRelativeResourcePath",
    "fullPath",
    "baseUrl",
    "location",
    "origin",
    "pathname",
    "split",
    "slice",
    "join",
    "util",
    "Uri",
    "getAbsolute",
    "LibraryManager",
    "get",
    "substring",
    "length",
    "createClient",
    "Client",
    "cv",
    "args",
    "Config",
    "testMode",
    "cvTestMode",
    "Mockup",
    "openhab",
    "Rest",
    "getStructure",
    "pluginsToLoad",
    "includes",
    "configSettings",
    "push",
    "endsWith",
    "indexOf",
    "mqtt",
    "registerConsoleCommand",
    "shortcutName",
    "help",
    "properties",
    "root",
    "nullable",
    "structureLoaded",
    "check",
    "init",
    "event",
    "apply",
    "commandManager",
    "deferredInit",
    "active",
    "inManager",
    "managerDisabled",
    "managerDisabledReason",
    "managerChecked",
    "mobile",
    "members",
    "_blocker",
    "_isCached",
    "block",
    "val",
    "Blocker",
    "setBlockerColor",
    "setBlockerOpacity",
    "unblock",
    "_applyMobile",
    "value",
    "document",
    "body",
    "classList",
    "contains",
    "add",
    "remove",
    "_applyManagerChecked",
    "loadManager",
    "managerOptions",
    "action",
    "data",
    "main",
    "ConfigCache",
    "_checkBackend",
    "GlobalError",
    "setErrorHandler",
    "__globalErrorHandler",
    "report",
    "Record",
    "prepare",
    "info",
    "Date",
    "getFullYear",
    "Version",
    "VERSION",
    "Application",
    "console",
    "log",
    "manCommand",
    "Command",
    "TemplateEngine",
    "getCommands",
    "registerServiceWorker",
    "svg4everybody",
    "appender",
    "Stylesheet",
    "includeFile",
    "ResourceManager",
    "toUri",
    "forceReload",
    "now",
    "__init",
    "mobileDevice",
    "setMobile",
    "_onResize",
    "Registration",
    "hideManager",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "ManagerMain",
    "constructor",
    "$$instance",
    "setVisible",
    "isManagerDisabled",
    "notification",
    "topic",
    "target",
    "title",
    "tr",
    "message",
    "getManagerDisabledReason",
    "severity",
    "deletable",
    "core",
    "notifications",
    "Router",
    "dispatchMessage",
    "states",
    "firstCall",
    "manager",
    "getVisible",
    "Timer",
    "once",
    "Bus",
    "dispatchByName",
    "_applyInManager",
    "History",
    "addToHistory",
    "configName",
    "options",
    "handlerId",
    "upgradeVersion",
    "file",
    "handler",
    "handlerOptions",
    "assign",
    "jumpToError",
    "isInManager",
    "condition",
    "validateConfig",
    "worker",
    "FileWorker",
    "displayConfigName",
    "unique",
    "res",
    "configPath",
    "url",
    "has",
    "then",
    "icon",
    "Logger",
    "error",
    "actions",
    "link",
    "Init",
    "getApplication",
    "err",
    "ex",
    "exString",
    "maxTraceLength",
    "getSourceException",
    "WindowError",
    "toString",
    "getUri",
    "getLineNumber",
    "name",
    "fileName",
    "lineNumber",
    "description",
    "lastLine",
    "repeated",
    "nStack",
    "dev",
    "StackTrace",
    "getStackTraceFromError",
    "forEach",
    "entry",
    "stack",
    "exc",
    "PopupHandler",
    "optionGroup",
    "type",
    "ev",
    "getTarget",
    "parentNode",
    "id",
    "box",
    "querySelector",
    "href",
    "shift",
    "checked",
    "appendParamsToUrl",
    "Location",
    "setHref",
    "needsConfirmation",
    "reporting",
    "Sentry",
    "captureException",
    "deleteMessageAfterExecution",
    "style",
    "throwError",
    "onerror",
    "Error",
    "undefined",
    "innerWidth",
    "maxMobileScreenWidth",
    "_applyStructureLoaded",
    "cacheUsed",
    "innerHTML",
    "getHtmlStructure",
    "stopAll",
    "Lifecycle",
    "onReady",
    "enableCache",
    "isCached",
    "debug",
    "restore",
    "NotificationCenter",
    "ToastManager",
    "configLoader",
    "ConfigLoader",
    "load",
    "bootstrap",
    "e",
    "anchor",
    "getData",
    "onHistoryRequest",
    "xml",
    "engine",
    "loader",
    "ScriptLoader",
    "setConfigSource",
    "isValid",
    "getConfigHash",
    "cacheValid",
    "clear",
    "Model",
    "resetWidgetDataModel",
    "resetAddressList",
    "logCache",
    "lazyLoading",
    "BackendConnections",
    "initBackendClient",
    "structure",
    "loadParts",
    "loadPlugins",
    "addListenerOnce",
    "getInitialPageId",
    "treePath",
    "getWidgetData",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "clientDesign",
    "styles",
    "stylesToLoad",
    "replace",
    "loadStyles",
    "scripts",
    "scriptsToLoad",
    "loadScripts",
    "parse",
    "supports",
    "subscribe",
    "dump",
    "addStyles",
    "addScripts",
    "plugins",
    "standalonePlugins",
    "partsLoaded",
    "getPartsLoaded",
    "allPluginsQueued",
    "setAllQueued",
    "parts",
    "Part",
    "getParts",
    "partPlugins",
    "path",
    "plugin",
    "startsWith",
    "getStructureLoaded",
    "lid",
    "removeListenerById",
    "__constraintFails",
    "serverVersionId",
    "constraint",
    "match",
    "exec",
    "operator",
    "majorConstraint",
    "parseInt",
    "hasMinorVersion",
    "minorConstraint",
    "hasPatchVersion",
    "patchConstraint",
    "constraintId",
    "maxId",
    "setManagerChecked",
    "rest",
    "getBaseUrl",
    "xhr",
    "request",
    "Xhr",
    "set",
    "method",
    "accept",
    "req",
    "env",
    "getResponse",
    "PHP_VERSION_ID",
    "orParts",
    "required_php_version",
    "map",
    "trim",
    "passed",
    "orConstraint",
    "andParts",
    "some",
    "enable",
    "phpversion",
    "setManagerDisabled",
    "setManagerDisabledReason",
    "configureScope",
    "scope",
    "setTag",
    "server_release",
    "server_branch",
    "server_id",
    "send",
    "close",
    "client",
    "getClient",
    "terminate",
    "useServiceWorker",
    "workerFile",
    "navigator",
    "serviceWorker",
    "register",
    "reg",
    "configMessage",
    "postMessage",
    "ready",
    "getRegistrations",
    "registrations",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Application.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * This is the main application class of the CometVisu.\n *\n * @asset(demo/*)\n * @asset(designs/*)\n * @asset(icons/*)\n * @asset(sentry/bundle.min.js)\n * @asset(sentry/bundle.tracing.min.js)\n * @asset(test/*)\n *\n * @require(qx.bom.Html,cv.ui.PopupHandler)\n */\nqx.Class.define('cv.Application',\n{\n  extend : qx.application.Native,\n\n  /*\n  ***********************************************\n    CONSTRUCTOR\n  ***********************************************\n  */\n  construct: function () {\n    this.base(arguments);\n    this.__appReady = false;\n    this.initCommandManager(new qx.ui.command.GroupManager());\n    const lang = qx.locale.Manager.getInstance().getLanguage();\n    if (qx.io.PartLoader.getInstance().hasPart(lang)) {\n      qx.io.PartLoader.require([lang]);\n    }\n    const pageVis = qx.bom.PageVisibility.getInstance();\n    pageVis.addListener('change', function () {\n      this.setActive(pageVis.getVisibilityState() === 'visible');\n    }, this);\n\n    // install global shortcut for opening the manager\n    if (window.parent && typeof window.parent.showManager === 'function') {\n      window.showManager = window.parent.showManager;\n    } else {\n      window.showManager = this.showManager.bind(this);\n    }\n    if (window.parent && typeof window.parent.showConfigErrors === 'function') {\n      window.showConfigErrors = window.parent.showConfigErrors;\n    } else {\n      window.showConfigErrors = this.showConfigErrors.bind(this);\n    }\n  },\n\n  /*\n   ******************************************************\n   STATICS\n   ******************************************************\n   */\n  statics: {\n    consoleCommands: [],\n    __commandManager: null,\n    /**\n     * Controller from the loaded structure injects itself here when loaded\n     */\n    structureController: null,\n    _relResourcePath: null,\n    _fullResourcePath: null,\n\n    getRelativeResourcePath(fullPath) {\n      if (!this._relResourcePath) {\n        const baseUrl = window.location.origin + window.location.pathname.split('/').slice(0, -1).join('/');\n        this._relResourcePath = qx.util.Uri.getAbsolute(qx.util.LibraryManager.getInstance().get('cv', 'resourceUri')).substring(baseUrl.length+1) + '/';\n      }\n      if (fullPath === true) {\n        if (!this._fullResourcePath) {\n          this._fullResourcePath = window.location.pathname.split('/').slice(0, -1).join('/') + '/' + this._relResourcePath;\n        }\n        return this._fullResourcePath;\n      }\n      return this._relResourcePath;\n    },\n\n    /**\n     * Client factory method -> create a client\n     * @param {...any} args\n     * @return {cv.io.Client|cv.io.Mockup}\n     */\n    createClient: function(...args) {\n      let Client = cv.io.Client;\n      if (cv.Config.testMode === true || window.cvTestMode === true || args[0] === 'simulated') {\n        Client = cv.io.Mockup;\n      } else if (args[0] === 'openhab') {\n        Client = cv.io.openhab.Rest;\n        if (cv.Config.getStructure() === 'structure-pure' && !cv.Config.pluginsToLoad.includes('plugin-openhab')) {\n          cv.Config.configSettings.pluginsToLoad.push('plugin-openhab');\n        }\n        if (args[1] && args[1].endsWith('/cv/l/')) {\n          // we only need the rest path not the login resource\n          args[1] = args[1].substring(0, args[1].indexOf('cv/'));\n        }\n      } else if (args[0] === 'mqtt') {\n        Client = cv.io.mqtt.Client;\n      }\n      return new Client(...args);\n    },\n\n    /**\n     * Register shortcuts to useful commands the user can execute in the browser console\n     * @param shortcutName {String} command name used to install the command in the global namespace\n     * @param command {Function} command to execute\n     * @param help {String} some documentation about the command\n     */\n    registerConsoleCommand: function(shortcutName, command, help) {\n      // install command\n      if (!(shortcutName in window)) {\n        window[shortcutName] = command;\n        this.consoleCommands.push(shortcutName + '() - ' + help);\n      }\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    root: {\n      nullable: true\n    },\n\n    /**\n     * true when structure part has been loaded\n     */\n    structureLoaded: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeStructureLoaded',\n      apply: '_applyStructureLoaded'\n    },\n\n    commandManager: {\n      check: 'qx.ui.command.GroupManager',\n      deferredInit: true\n    },\n\n    active: {\n      check: 'Boolean',\n      init: true,\n      event: 'changeActive'\n    },\n\n    inManager: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyInManager'\n    },\n\n    managerDisabled: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeManagerDisabled'\n    },\n\n    managerDisabledReason: {\n      check: 'String',\n      nullable: true\n    },\n    managerChecked: {\n      check: 'Boolean',\n      init: false,\n      apply: '_applyManagerChecked'\n    },\n    /**\n     * Mobile device detection (small screen)\n     */\n    mobile: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeMobile',\n      apply: '_applyMobile'\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    _blocker: null,\n    __appReady: null,\n    _isCached: null,\n\n    /**\n     * Toggle the {@link qx.bom.Blocker} visibility\n     * @param val {Boolean}\n     */\n    block: function(val) {\n      if (val) {\n        if (!this._blocker) {\n          this._blocker = new qx.bom.Blocker();\n          this._blocker.setBlockerColor('#000000');\n          this._blocker.setBlockerOpacity('0.2');\n        }\n        this._blocker.block();\n      } else if (this._blocker) {\n        this._blocker.unblock();\n      }\n    },\n\n    _applyMobile: function (value) {\n      // maintain old value for compatibility\n      if (value && !document.body.classList.contains('mobile')) {\n        document.body.classList.add('mobile');\n      } else if (!value && document.body.classList.contains('mobile')) {\n        document.body.classList.remove('mobile');\n      }\n    },\n\n    _applyManagerChecked: function(value) {\n      if (value && cv.Config.loadManager) {\n        this.showManager(cv.Config.managerOptions.action, cv.Config.managerOptions.data);\n      }\n    },\n\n    /**\n     * This method contains the initial application code and gets called\n     * during startup of the application\n     */\n    main : function() {\n      cv.ConfigCache.init();\n      this._checkBackend();\n      qx.event.GlobalError.setErrorHandler(this.__globalErrorHandler, this);\n      if (qx.core.Environment.get('qx.debug')) {\n        if (typeof replayLog !== 'undefined' && replayLog) {\n          cv.report.Replay.prepare(replayLog);\n        }\n      }\n\n      document.body.classList.add('loading');\n\n      cv.report.Record.prepare();\n\n      let info = '\\n' +\n        '  _____                     ___      ___\\n' +\n        ' / ____|                   | \\\\ \\\\    / (_)\\n' +\n        '| |     ___  _ __ ___   ___| |\\\\ \\\\  / / _ ___ _   _\\n' +\n        '| |    / _ \\\\| \\'_ ` _ \\\\ / _ \\\\ __\\\\ \\\\/ / | / __| | | |\\n' +\n        '| |___| (_) | | | | | |  __/ |_ \\\\  /  | \\\\__ \\\\ |_| |\\n' +\n        ' \\\\_____\\\\___/|_| |_| |_|\\\\___|\\\\__| \\\\/   |_|___/\\\\__,_|\\n' +\n        '-----------------------------------------------------------\\n' +\n        ' ©2010-' + (new Date().getFullYear()) + ' Christian Mayer and the CometVisu contributers.\\n' +\n        ' Version: ' + cv.Version.VERSION + '\\n';\n\n      if (cv.Application.consoleCommands.length) {\n        info += '\\n Available commands:\\n'+\n          '    '+cv.Application.consoleCommands.join('\\n    ')+'\\n';\n      }\n\n      info += '-----------------------------------------------------------\\n\\n';\n\n      // eslint-disable-next-line no-console\n      console.log(info);\n\n      // add command to load and open the manager\n      const manCommand = new qx.ui.command.Command('Ctrl+M');\n      cv.TemplateEngine.getInstance().getCommands().add('open-manager', manCommand);\n      manCommand.addListener('execute', () => this.showManager(), this);\n      this.registerServiceWorker();\n\n      if (qx.core.Environment.get('qx.aspects')) {\n        qx.dev.Profile.stop();\n        qx.dev.Profile.start();\n      }\n      // Call super class\n      this.base(arguments);\n      this.block(true);\n\n      // run svg4everybody to support SVG sprites in older browsers\n      svg4everybody();\n\n      // support native logging capabilities, e.g. Firebug for Firefox\n      //noinspection BadExpressionStatementJS,JSHint\n      cv.log.appender.Native;\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get('qx.debug')) {\n        // support additional cross-browser console. Press F7 to toggle visibility\n        //noinspection BadExpressionStatementJS,JSHint\n        qx.log.appender.Console;\n      }\n\n      /*\n       -------------------------------------------------------------------------\n       Below is your actual application code...\n       -------------------------------------------------------------------------\n       */\n      // in debug mode load the uncompressed unobfuscated scripts\n      qx.bom.Stylesheet.includeFile(qx.util.ResourceManager.getInstance().toUri('designs/designglobals.css') + (cv.Config.forceReload === true ? '?'+Date.now() : ''));\n\n      this.__init();\n      if (typeof cv.Config.mobileDevice === 'boolean') {\n        this.setMobile(cv.Config.mobileDevice);\n      }\n      this._onResize(null, true);\n      qx.event.Registration.addListener(window, 'resize', this._onResize, this);\n    },\n\n    hideManager: function () {\n      if (Object.prototype.hasOwnProperty.call(cv.ui, 'manager')) {\n        const ManagerMain = cv.ui['manager']['Main'];\n        // only do something when the singleton is already created\n        if (ManagerMain.constructor.$$instance) {\n          ManagerMain.getInstance().setVisible(false);\n        }\n      }\n    },\n\n    /**\n     * @param action {String} manager event that can be handled by cv.ui.manager.Main._onManagerEvent()\n     * @param data {String|Map} path of file that action should executed on or a Map of options\n     */\n    showManager: function (action, data) {\n      if (this.isManagerDisabled()) {\n        const notification = {\n          topic: 'cv.manager.error',\n          target: 'popup',\n          title: qx.locale.Manager.tr('Manager is not available'),\n          message: this.getManagerDisabledReason(),\n          severity: 'high',\n          deletable: true\n        };\n        cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n      } else {\n        qx.io.PartLoader.require(['manager'], function (states) {\n          // break dependency\n          const ManagerMain = cv.ui['manager']['Main'];\n          const firstCall = !ManagerMain.constructor.$$instance;\n          const manager = ManagerMain.getInstance();\n          if (!firstCall) {\n            manager.setVisible(!manager.getVisible());\n          } else {\n            // initially bind manager visibility\n            manager.bind('visible', this, 'inManager');\n          }\n\n          if (manager.getVisible() && action && data) {\n            // delay this a little bit, give the manager some time to settle\n            qx.event.Timer.once(() => {\n              qx.event.message.Bus.dispatchByName('cv.manager.' + action, data);\n            }, this, 1000);\n          }\n        }, this);\n      }\n    },\n\n    _applyInManager: function (value) {\n      if (value) {\n        qx.bom.History.getInstance().addToHistory('manager', qx.locale.Manager.tr('Manager') + ' - CometVisu');\n        this.block(false);\n        if (document.body.classList.contains('loading')) {\n          document.body.classList.remove('loading');\n        }\n      } else {\n        qx.bom.History.getInstance().addToHistory('', 'CometVisu');\n      }\n    },\n\n    showConfigErrors: function(configName, options) {\n      configName = configName ? 'visu_config_'+configName+'.xml' : 'visu_config.xml';\n      const handlerId = options && options.upgradeVersion ? 'cv.ui.manager.editor.Diff' : 'cv.ui.manager.editor.Source';\n      const data = {\n        file: configName,\n        handler: handlerId,\n        handlerOptions: Object.assign({\n          jumpToError: true\n        }, options ? options : {})\n      };\n      if (this.isInManager()) {\n        qx.event.message.Bus.dispatchByName('cv.manager.openWith', data);\n      } else {\n        this.showManager('openWith', data);\n      }\n      // remove any config error messages shown\n      cv.core.notifications.Router.dispatchMessage('cv.config.error', {\n        topic: 'cv.config.error',\n        condition: false\n      });\n    },\n\n    validateConfig: function (configName) {\n      const worker = cv.data.FileWorker.getInstance();\n      let displayConfigName = configName;\n      if (configName) {\n        configName = '_' + configName;\n      } else {\n        configName = '';\n        displayConfigName = 'default';\n      }\n      let notification = {\n        topic: 'cv.config.validation',\n        severity: 'normal',\n        deletable: true,\n        unique: true\n      };\n      cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n        target: 'toast',\n        message: qx.locale.Manager.tr('Validating configuration file...')\n      }));\n      const res = qx.util.ResourceManager.getInstance();\n      let configPath = `config/visu_config${configName}.xml`;\n      let url = '';\n      if (!res.has(configPath) && res.has(`demo/visu_config${configName}.xml`)) {\n        url = res.toUri(`demo/visu_config${configName}.xml`);\n      }\n      if (!url) {\n        url = res.toUri(configPath);\n      }\n      worker.validateConfig(url).then(res => {\n        // remove the toast information\n        cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n          target: 'toast',\n          condition: false\n        }));\n        if (res === true) {\n          // show result message as dialog\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has no errors!', displayConfigName),\n            icon: 'message_ok'\n          }));\n        } else {\n          // show result message as dialog\n          qx.log.Logger.error(this, res);\n          cv.core.notifications.Router.dispatchMessage(notification.topic, Object.assign({}, notification, {\n            target: 'popup',\n            message: qx.locale.Manager.tr('The %1 configuration has %2 errors!', displayConfigName, res.length),\n            actions: {\n              link: [\n                {\n                  title: qx.locale.Manager.tr('Show errors'),\n                  action: function () {\n                    qx.core.Init.getApplication().showConfigErrors(configName);\n                  }\n                }]\n            },\n            severity: 'high',\n            icon: 'message_attention'\n          }));\n        }\n      }).catch(err => {\n        this.error(err);\n      });\n    },\n\n    __globalErrorHandler: function(ex) {\n      // connect client data for Bug-Report\n      let exString = '';\n      const maxTraceLength = 2000;\n      if (ex.getSourceException && ex.getSourceException()) {\n        ex = ex.getSourceException();\n      } else if (ex instanceof qx.core.WindowError) {\n        exString = ex.toString() + '\\nin ' + ex.getUri() + ' line ' + ex.getLineNumber();\n      }\n      if (!exString) {\n        exString = ex.name + ': ' + ex.message;\n        if (ex.fileName) {\n          exString += '\\n in file ' + ex.fileName;\n        }\n        if (ex.lineNumber) {\n          exString += '\\n line ' + ex.lineNumber;\n        }\n        if (ex.description) {\n          exString += '\\n Description: ' + ex.description;\n        }\n        try {\n          let lastLine = '';\n          let repeated = 0;\n          let nStack = '';\n          qx.dev.StackTrace.getStackTraceFromError(ex).forEach(function (entry) {\n            if (lastLine === entry) {\n              if (repeated === 0) {\n                // count first occurance too\n                repeated = 2;\n              } else {\n                repeated++;\n              }\n            } else if (repeated > 0) {\n              nStack += ' [repeated ' + repeated + ' times]';\n              nStack += '\\n\\t' + entry;\n              repeated = 0;\n            } else {\n              nStack += '\\n\\t' + entry;\n              lastLine = entry;\n            }\n          }, this);\n          if (repeated > 0) {\n            nStack += ' [repeated ' + repeated + ' times]';\n          }\n          if (nStack) {\n            exString += '\\nNormalized Stack: ' + nStack.substring(0, maxTraceLength) + '\\n';\n            if (nStack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n          if (exString.length + ex.stack.length < maxTraceLength) {\n            exString += '\\nOriginal Stack: ' + ex.stack + '\\n';\n          }\n        } catch (exc) {\n          if (ex.stack) {\n            exString += '\\nStack: ' + ex.stack.substring(0, maxTraceLength) + '\\n';\n            if (ex.stack.length > maxTraceLength) {\n              exString += 'Stacktrace has been cut off\\n';\n            }\n          }\n        }\n      }\n\n      const notification = {\n        topic: 'cv.error',\n        target: cv.ui.PopupHandler,\n        title: qx.locale.Manager.tr('An error occured'),\n        message: '<pre>' + (exString || ex.stack) + '</pre>',\n        severity: 'urgent',\n        deletable: false,\n        actions: {\n          optionGroup: {\n            title: qx.locale.Manager.tr('Enable on reload:'),\n            options: []\n          },\n          link: [\n            {\n              title: qx.locale.Manager.tr('Reload'),\n              type: 'reload',\n              action: function (ev) {\n                let parent = ev.getTarget().parentNode;\n                while (parent) {\n                  if (parent.id === 'notification-center' || parent.classList.contains('popup')) {\n                    break;\n                  }\n                  parent = parent.parentNode;\n                }\n                let box = parent.querySelector('#enableReporting');\n                let url = window.location.href.split('#').shift();\n                if (box && box.checked) {\n                  // reload with reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reporting=true');\n                }\n                box = parent.querySelector('#reportErrors');\n                if (box && box.checked) {\n                  // reload with automatic error reporting enabled\n                  url = qx.util.Uri.appendParamsToUrl(url, 'reportErrors=true');\n                }\n                cv.util.Location.setHref(url);\n              },\n              needsConfirmation: false\n            }\n          ]\n        }\n      };\n      // reload with reporting checkbox\n      let link = '';\n      if (!cv.Config.reporting) {\n        if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n          link = ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reporting-session-aufzeichnen\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n        }\n        notification.actions.optionGroup.options.push({\n          title: qx.locale.Manager.tr('Action recording') + link,\n          name: 'enableReporting'\n        });\n      }\n\n      if (qx.core.Environment.get('cv.sentry')) {\n        if (window.Sentry) {\n          // Sentry has been loaded -> add option to send the error\n          notification.actions.link.push(\n            {\n              title: qx.locale.Manager.tr('Send error to sentry.io'),\n              type: 'sentry',\n              action: function () {\n                Sentry.captureException(ex);\n              },\n              needsConfirmation: false,\n              deleteMessageAfterExecution: true\n            }\n          );\n        } else {\n          link = '';\n          if (qx.locale.Manager.getInstance().getLanguage() === 'de') {\n            link = ' <a href=\"https://cometvisu.org/CometVisu/de/latest/manual/config/url-params.html#reportErrors\" target=\"_blank\" title=\"Hilfe\">(?)</a>';\n          }\n          notification.actions.optionGroup.options.push({\n            title: qx.locale.Manager.tr('Error reporting (on sentry.io)') + link,\n            name: 'reportErrors',\n            style: 'margin-left: 18px'\n          });\n        }\n      }\n      cv.core.notifications.Router.dispatchMessage(notification.topic, notification);\n    },\n\n    throwError: qx.core.Environment.select('qx.globalErrorHandling', {\n      'true':  function () {\n        window.onerror(new Error('test error'));\n      },\n      'false': null\n    }),\n\n    _onResize: function () {\n      if (cv.Config.mobileDevice === undefined) {\n        this.setMobile(window.innerWidth < cv.Config.maxMobileScreenWidth);\n      }\n    },\n\n    _applyStructureLoaded () {\n      if (!cv.Config.cacheUsed) {\n        let body = document.querySelector('body');\n        // load empty HTML structure\n        body.innerHTML = cv.Application.structureController.getHtmlStructure();\n      }\n    },\n\n    /**\n     * Internal initialization method\n     */\n    async __init() {\n      qx.event.Registration.addListener(window, 'unload', function () {\n        cv.io.Client.stopAll();\n      }, this);\n      qx.bom.Lifecycle.onReady(async () => {\n        // init notification router\n        cv.core.notifications.Router.getInstance();\n\n        this._isCached = false;\n        if (cv.Config.enableCache) {\n          this._isCached = await cv.ConfigCache.isCached();\n        }\n        if (this._isCached) {\n          // load settings\n          this.debug('using cache');\n          cv.ConfigCache.restore();\n        }\n        // initialize NotificationCenter\n        cv.ui.NotificationCenter.getInstance();\n        cv.ui.ToastManager.getInstance();\n        if (!window.cvTestMode && !cv.Config.loadManager) {\n          let configLoader = new cv.util.ConfigLoader();\n          configLoader.load(this.bootstrap, this);\n        }\n      });\n\n      // reaction on browser back button\n      qx.bom.History.getInstance().addListener('request', function(e) {\n        const anchor = e.getData();\n        if (this.isInManager() && anchor !== 'manager') {\n          this.hideManager();\n        } else if (!this.isInManager() && anchor === 'manager') {\n          this.showManager();\n        } else if (cv.Application.structureController) {\n          cv.Application.structureController.onHistoryRequest(anchor);\n        }\n      }, this);\n    },\n\n    /**\n     * Initialize the content\n     * @param xml {Document} XML configuration retrieved from backend\n     */\n    async bootstrap(xml) {\n      this.debug('bootstrapping');\n      const engine = cv.TemplateEngine.getInstance();\n      const loader = cv.util.ScriptLoader.getInstance();\n\n      engine.setConfigSource(xml);\n      loader.bind('finished', engine, 'scriptsLoaded');\n\n      if (this._isCached) {\n        // check if cache is still valid\n        const cacheValid = await cv.ConfigCache.isValid(null, engine.getConfigHash());\n        if (!cacheValid) {\n          this.debug('cache is invalid re-parse xml');\n          // cache invalid\n          cv.Config.cacheUsed = false;\n          cv.ConfigCache.clear();\n          //empty model\n          cv.data.Model.getInstance().resetWidgetDataModel();\n          cv.data.Model.getInstance().resetAddressList();\n        } else {\n          // loaded cache is still valid\n          cv.report.Record.logCache();\n          cv.Config.cacheUsed = true;\n          cv.Config.lazyLoading = true;\n          cv.io.BackendConnections.initBackendClient();\n\n          // load part for structure\n          const structure = cv.Config.getStructure();\n          this.debug('loading structure '+structure);\n          engine.loadParts([structure]).then(() => {\n            this.loadPlugins();\n          });\n          engine.addListenerOnce('changeReady', async () => {\n            // create the objects\n            cv.Config.treePath = await cv.Application.structureController.getInitialPageId();\n            const data = cv.data.Model.getInstance().getWidgetData('id_');\n            cv.ui.structure.WidgetFactory.createInstance(data.$$type, data);\n          }, this);\n          // check if the current design settings overrides the cache one\n          if (cv.Config.clientDesign && cv.Config.clientDesign !== cv.Config.configSettings.clientDesign) {\n            // we have to replace the cached design scripts styles to load\n            const styles = [];\n            cv.Config.configSettings.stylesToLoad.forEach(function(style) {\n              styles.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadStyles(styles);\n\n            const scripts = [];\n            cv.Config.configSettings.scriptsToLoad.forEach(function(style) {\n              scripts.push(style.replace('designs/'+cv.Config.configSettings.clientDesign, 'designs/'+cv.Config.clientDesign));\n            }, this);\n            this.loadScripts(scripts);\n          } else {\n            this.loadStyles();\n            this.loadScripts();\n          }\n        }\n      }\n      if (!cv.Config.cacheUsed) {\n        this.debug('start parsing config file');\n        const engine = cv.TemplateEngine.getInstance();\n        await engine.parse();\n        this.loadPlugins();\n        this.loadStyles();\n        this.loadScripts();\n        this.debug('done');\n\n        if (cv.Config.enableCache && cv.Application.structureController.supports('cache')) {\n          // cache dom + data when everything is ready\n          qx.event.message.Bus.subscribe('setup.dom.finished', function () {\n            cv.ConfigCache.dump(xml, engine.getConfigHash());\n          }, this);\n        }\n      }\n      this.__appReady = true;\n    },\n\n    /**\n     * Load CSS styles\n     * @param styles {Array?}\n     */\n    loadStyles: function(styles) {\n      if (!styles) {\n        styles = cv.Config.configSettings.stylesToLoad;\n      }\n      if (styles.length) {\n        document.body.classList.add('loading-styles');\n        const loader = cv.util.ScriptLoader.getInstance();\n        loader.addListenerOnce('stylesLoaded', () => {\n          document.body.classList.remove('loading');\n          document.body.classList.remove('loading-styles');\n        });\n        loader.addStyles(styles);\n      }\n    },\n\n    /**\n     * Load Javascript source files\n     * @param scripts {Array?}\n     */\n    loadScripts: function(scripts) {\n      if (!scripts) {\n        scripts = cv.Config.configSettings.scriptsToLoad;\n      }\n      if (scripts.length > 0) {\n        cv.util.ScriptLoader.getInstance().addScripts(scripts);\n      }\n    },\n\n    /**\n     * Load plugins\n     */\n    loadPlugins: function() {\n      const plugins = cv.Config.configSettings.pluginsToLoad.slice();\n      cv.Config.pluginsToLoad.forEach(name => {\n        if (!plugins.includes(name)) {\n          plugins.push(name);\n        }\n      });\n      if (plugins.length > 0) {\n        const standalonePlugins = [];\n        const engine = cv.TemplateEngine.getInstance();\n        let partsLoaded = engine.getPartsLoaded();\n        let allPluginsQueued = false;\n        this.debug('loading plugins');\n        if (!partsLoaded) {\n          engine.addListener('changePartsLoaded', function (ev) {\n            if (ev.getData() === true) {\n              this.debug('plugins loaded');\n              partsLoaded = true;\n              if (allPluginsQueued) {\n                qx.event.Timer.once(function () {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }, this, 0);\n              }\n            }\n          }, this);\n        }\n        const parts = qx.Part.getInstance().getParts();\n        const partPlugins = [];\n        const path = cv.Application.getRelativeResourcePath();\n        plugins.forEach(function(plugin) {\n          if (Object.prototype.hasOwnProperty.call(parts, plugin)) {\n            partPlugins.push(plugin);\n          } else if (!plugin.startsWith('plugin-')) {\n            // a real path\n            standalonePlugins.push(plugin);\n          } else {\n            standalonePlugins.push(path + '/plugins/' + plugin.replace('plugin-', '') + '/index.js');\n          }\n        });\n        // load part plugins\n        engine.loadParts(partPlugins);\n\n        if (standalonePlugins.length > 0) {\n          // load standalone plugins after the structure parts has been loaded\n          // because they need the classes provided by it\n          if (this.getStructureLoaded()) {\n            cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n          } else {\n            const lid = this.addListener('changeStructureLoaded', function (ev) {\n              if (ev.getData() === true) {\n                allPluginsQueued = true;\n                this.debug('loading standalone plugins');\n                cv.util.ScriptLoader.getInstance().addScripts(standalonePlugins);\n                if (partsLoaded) {\n                  cv.util.ScriptLoader.getInstance().setAllQueued(true);\n                }\n                this.removeListenerById(lid);\n              }\n            }, this);\n          }\n        } else {\n          allPluginsQueued = true;\n          qx.event.Timer.once(function () {\n            cv.util.ScriptLoader.getInstance().setAllQueued(true);\n          }, this, 0);\n        }\n      } else {\n        this.debug('no plugins to load => all scripts queued');\n        cv.util.ScriptLoader.getInstance().setAllQueued(true);\n      }\n    },\n\n    __constraintFails: function (serverVersionId, constraint) {\n      const match = /^(>=|<|>|<=|\\^)(\\d+)\\.(\\d+)\\.?(\\d+)?$/.exec(constraint);\n      if (match) {\n        const operator = match[1];\n        const majorConstraint = parseInt(match[2]);\n        const hasMinorVersion = match[3] !== undefined;\n        const minorConstraint = hasMinorVersion ? parseInt(match[3]) : 0;\n        const hasPatchVersion = match[4] !== undefined;\n        const patchConstraint = hasPatchVersion ? parseInt(match[4]) : 0;\n        const constraintId = 10000 * majorConstraint + 100 * minorConstraint + patchConstraint;\n        const maxId = 10000 * majorConstraint + (hasMinorVersion ? 100 * minorConstraint : 999) + (hasPatchVersion ? patchConstraint : 99);\n        // incomplete implementation of: https://getcomposer.org/doc/articles/versions.md#writing-version-constraints\n        switch (operator) {\n          case '>=':\n            if (serverVersionId < constraintId) {\n              return true;\n            }\n            break;\n          case '>':\n            if (serverVersionId <= constraintId) {\n              return true;\n            }\n            break;\n          case '<=':\n            if (serverVersionId > maxId) {\n              return true;\n            }\n            break;\n          case '<':\n            if (serverVersionId >= maxId) {\n              return true;\n            }\n            break;\n          case '^':\n            if (serverVersionId < constraintId || serverVersionId > 10000 *(majorConstraint+1)) {\n              return true;\n            }\n            break;\n          case '~':\n            if (serverVersionId < constraintId || hasPatchVersion ? serverVersionId > 10000 * (majorConstraint+1) : serverVersionId > (10000 *(majorConstraint) + 100 * (patchConstraint+1))) {\n              return true;\n            }\n            break;\n        }\n      }\n      return false;\n    },\n\n    _checkBackend: function () {\n      if (cv.Config.testMode === true) {\n        this.setManagerChecked(true);\n      } else {\n        const url = cv.io.rest.Client.getBaseUrl().split('/').slice(0, -1).join('/') + '/environment.php';\n        const xhr = new qx.io.request.Xhr(url);\n        xhr.set({\n          method: 'GET',\n          accept: 'application/json'\n        });\n\n        xhr.addListenerOnce('success', function (e) {\n          const req = e.getTarget();\n          const env = req.getResponse();\n          const serverVersionId = env.PHP_VERSION_ID;\n          const orParts = env.required_php_version.split('||').map(e => e.trim());\n          const passed = orParts.map(orConstraint => {\n            const andParts = orConstraint.split(/(\\s+|&{2})/).map(e => e.trim());\n            // pass when no failed andPart has been found\n            return !andParts.some(constraint => this.__constraintFails(serverVersionId, constraint));\n          });\n          // one of the OR constraints need to pass\n          const enable = passed.some(res => res === true);\n          if (enable) {\n            this.info('Manager available for PHP version', env.phpversion);\n          } else {\n            this.error('Disabling manager due to PHP version mismatch. Installed:', env.phpversion, 'required:', env.required_php_version);\n            this.setManagerDisabled(true);\n            this.setManagerDisabledReason(qx.locale.Manager.tr('Your system does not provide the required PHP version for the manager. Installed: %1, required: %2', env.phpversion, env.required_php_version));\n          }\n          this.setManagerChecked(true);\n\n          if (window.Sentry) {\n            Sentry.configureScope(function (scope) {\n              if ('server_release' in env) {\n                scope.setTag('server.release', env.server_release);\n              }\n              if ('server_branch' in env) {\n                scope.setTag('server.branch', env.server_branch);\n              }\n              if ('server_id' in env) {\n                scope.setTag('server.id', env.server_id);\n              }\n            });\n          }\n        }, this);\n        xhr.addListener('statusError', e => {\n          this.setManagerChecked(true);\n        });\n        xhr.send();\n      }\n    },\n\n    close: function () {\n      this.setActive(false);\n      const client = cv.io.BackendConnections.getClient();\n      if (client) {\n        client.terminate();\n      }\n    },\n\n    /**\n     * Install the service-worker if possible\n     */\n    registerServiceWorker: function() {\n      if (cv.Config.useServiceWorker === true) {\n        const workerFile = 'ServiceWorker.js';\n        navigator.serviceWorker.register(workerFile).then(function(reg) {\n          this.debug('ServiceWorker successfully registered for scope '+reg.scope);\n\n          // configure service worker\n          var configMessage = {\n            'command': 'configure',\n            'message': {\n              forceReload: cv.Config.forceReload,\n              debug: qx.core.Environment.get('qx.debug')\n            }\n          };\n\n          if (reg.active) {\n            reg.active.postMessage(configMessage);\n          } else {\n            navigator.serviceWorker.ready.then(function(ev) {\n              ev.active.postMessage(configMessage);\n            });\n          }\n        }.bind(this)).catch(function(err) {\n          this.error('Error registering service-worker: ', err);\n        }.bind(this));\n      } else if (navigator.serviceWorker) {\n        navigator.serviceWorker.getRegistrations().then(function(registrations) {\n          this.debug('unregistering existing service workers');\n          registrations.forEach(function (registration) {\n            registration.unregister();\n          });\n        }.bind(this));\n      }\n    }\n  }\n});\n"
  ]
}