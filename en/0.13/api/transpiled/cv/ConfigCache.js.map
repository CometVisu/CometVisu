{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "_cacheKey",
    "_parseCacheData",
    "_valid",
    "replayCache",
    "__initPromise",
    "failed",
    "DB",
    "init",
    "Promise",
    "resolve",
    "reject",
    "cv",
    "ConfigCache",
    "request",
    "indexedDB",
    "open",
    "onerror",
    "log",
    "Logger",
    "error",
    "onsuccess",
    "ev",
    "debug",
    "result",
    "event",
    "Error",
    "onupgradeneeded",
    "db",
    "target",
    "objectStore",
    "createObjectStore",
    "keyPath",
    "createIndex",
    "unique",
    "dump",
    "xml",
    "hash",
    "model",
    "data",
    "Model",
    "getInstance",
    "save",
    "toHash",
    "VERSION",
    "Version",
    "REV",
    "JSON",
    "stringify",
    "getWidgetDataModel",
    "addresses",
    "getAddressList",
    "configSettings",
    "Config",
    "config",
    "configSuffix",
    "body",
    "document",
    "querySelector",
    "innerHTML",
    "restore",
    "getData",
    "then",
    "cache",
    "iconsFromConfig",
    "forEach",
    "icon",
    "IconHandler",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "source",
    "mappings",
    "Object",
    "keys",
    "mapping",
    "formulaSource",
    "formula",
    "Function",
    "key",
    "range",
    "rangeMin",
    "valueElement",
    "i",
    "iconDefinition",
    "definition",
    "getIconElement",
    "Array",
    "isArray",
    "contents",
    "length",
    "setWidgetDataModel",
    "setAddressList",
    "widgetsToInitialize",
    "filter",
    "widgetId",
    "$$initOnCacheLoad",
    "TemplateEngine",
    "addListenerOnce",
    "widgetData",
    "ui",
    "structure",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "style",
    "visibility",
    "transaction",
    "put",
    "dataRequest",
    "get",
    "parse",
    "bind",
    "isCached",
    "cacheVersion",
    "isValid",
    "cachedHash",
    "hashCode",
    "XMLSerializer",
    "serializeToString",
    "clear",
    "string",
    "prototype",
    "reduce",
    "split",
    "a",
    "b",
    "charCodeAt",
    "l",
    "character"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ConfigCache.js"
  ],
  "sourcesContent": [
    "/* ConfigCache.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Handles caches for cometvisu configs\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.10.0\n */\nqx.Class.define('cv.ConfigCache', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    _cacheKey: 'data',\n    _parseCacheData: null,\n    _valid: null,\n    replayCache: null,\n    __initPromise: null,\n    failed: null,\n    DB: null,\n\n    init() {\n      if (!this.__initPromise) {\n        this.__initPromise = new Promise((resolve, reject) => {\n          if (!cv.ConfigCache.DB && !cv.ConfigCache.failed) {\n            const request = indexedDB.open('cvCache', 1);\n            request.onerror = function () {\n              cv.ConfigCache.failed = true;\n              qx.log.Logger.error(cv.ConfigCache, 'error opening cache database');\n\n              cv.ConfigCache.DB = null;\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onsuccess = function (ev) {\n              qx.log.Logger.debug(cv.ConfigCache, 'Success creating/accessing IndexedDB database');\n\n              cv.ConfigCache.DB = request.result;\n\n              cv.ConfigCache.DB.onerror = function (event) {\n                reject(new Error('Error creating/accessing IndexedDB database'));\n              };\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onupgradeneeded = function (event) {\n              const db = event.target.result;\n\n              db.onerror = function (event) {\n                qx.log.Logger.error(cv.ConfigCache, 'Error loading database.');\n              };\n              const objectStore = db.createObjectStore('data', {\n                keyPath: 'config'\n              });\n\n              objectStore.createIndex('config', 'config', { unique: true });\n            };\n          } else {\n            resolve(cv.ConfigCache.DB);\n          }\n        });\n      }\n      return this.__initPromise;\n    },\n\n    dump(xml, hash) {\n      const model = cv.data.Model.getInstance();\n      this.save({\n        hash: hash || this.toHash(xml),\n        VERSION: cv.Version.VERSION,\n        REV: cv.Version.REV,\n        data: JSON.stringify(model.getWidgetDataModel()),\n        addresses: model.getAddressList(),\n        configSettings: JSON.stringify(cv.Config.configSettings),\n        config: cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix,\n        body: document.querySelector('body').innerHTML\n      });\n    },\n\n    restore() {\n      const body = document.querySelector('body');\n      const model = cv.data.Model.getInstance();\n      this.getData().then(cache => {\n        cv.Config.configSettings = cache.configSettings;\n\n        // restore icons\n        cv.Config.configSettings.iconsFromConfig.forEach(function (icon) {\n          cv.IconHandler.getInstance().insert(\n            icon.name,\n            icon.uri,\n            icon.type,\n            icon.flavour,\n            icon.color,\n            icon.styling,\n            icon.dynamic,\n            icon.source\n          );\n        }, this);\n\n        // restore mappings\n        if (cv.Config.configSettings.mappings) {\n          Object.keys(cv.Config.configSettings.mappings).forEach(function (name) {\n            const mapping = cv.Config.configSettings.mappings[name];\n            if (mapping && mapping.formulaSource) {\n              mapping.formula = new Function('x', 'var y;' + mapping.formulaSource + '; return y;');\n            } else {\n              Object.keys(mapping).forEach(key => {\n                if (key === 'range') {\n                  Object.keys(mapping.range).forEach(rangeMin => {\n                    mapping.range[rangeMin][1].forEach((valueElement, i) => {\n                      const iconDefinition = valueElement.definition;\n                      if (iconDefinition) {\n                        let icon = cv.IconHandler.getInstance().getIconElement(\n                          iconDefinition.name,\n                          iconDefinition.type,\n                          iconDefinition.flavour,\n                          iconDefinition.color,\n                          iconDefinition.styling,\n                          iconDefinition['class']\n                        );\n\n                        icon.definition = iconDefinition;\n                        mapping.range[rangeMin][1][i] = icon;\n                      }\n                    });\n                  });\n                } else if (Array.isArray(mapping[key])) {\n                  const contents = mapping[key];\n                  for (let i = 0; i < contents.length; i++) {\n                    const iconDefinition = contents[i].definition;\n                    if (iconDefinition) {\n                      let icon = cv.IconHandler.getInstance().getIconElement(\n                        iconDefinition.name,\n                        iconDefinition.type,\n                        iconDefinition.flavour,\n                        iconDefinition.color,\n                        iconDefinition.styling,\n                        iconDefinition['class']\n                      );\n\n                      icon.definition = iconDefinition;\n                      contents[i] = icon;\n                    }\n                  }\n                } else {\n                  const iconDefinition = mapping[key].definition;\n                  if (iconDefinition) {\n                    let icon = cv.IconHandler.getInstance().getIconElement(\n                      iconDefinition.name,\n                      iconDefinition.type,\n                      iconDefinition.flavour,\n                      iconDefinition.color,\n                      iconDefinition.styling,\n                      iconDefinition['class']\n                    );\n\n                    icon.definition = iconDefinition;\n                    mapping[key] = icon;\n                  }\n                }\n              });\n            }\n          }, this);\n        }\n        model.setWidgetDataModel(cache.data);\n        model.setAddressList(cache.addresses);\n        const widgetsToInitialize = Object.keys(cache.data).filter(function (widgetId) {\n          return cache.data[widgetId].$$initOnCacheLoad === true;\n        });\n        if (widgetsToInitialize.length > 0) {\n          cv.TemplateEngine.getInstance().addListenerOnce('changeReady', () => {\n            widgetsToInitialize.forEach(function (widgetId) {\n              const widgetData = cache.data[widgetId];\n              cv.ui.structure.WidgetFactory.createInstance(widgetData.$$type, widgetData);\n            });\n          });\n        }\n        // hide body to prevent flickering\n        body.style.visibility = 'hidden';\n        body.innerHTML = cache.body;\n        qx.log.Logger.debug(this, 'content restored from cache');\n      });\n    },\n\n    save(data) {\n      if (cv.ConfigCache.DB) {\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        objectStore.put(data);\n      }\n    },\n\n    async getData(key) {\n      return new Promise((resolve, reject) => {\n        if (!cv.ConfigCache.DB) {\n          resolve(null);\n          return;\n        }\n        if (!this._parseCacheData) {\n          const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readonly').objectStore('data');\n          const dataRequest = objectStore.get(cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n\n          dataRequest.onsuccess = function (event) {\n            if (!dataRequest.result) {\n              resolve(null);\n            } else {\n              this._parseCacheData = dataRequest.result;\n              // parse stringified data\n              this._parseCacheData.data = JSON.parse(this._parseCacheData.data);\n              this._parseCacheData.configSettings = JSON.parse(this._parseCacheData.configSettings);\n\n              if (key) {\n                resolve(this._parseCacheData[key]);\n              } else {\n                resolve(this._parseCacheData);\n              }\n            }\n          }.bind(this);\n        } else if (key) {\n          resolve(this._parseCacheData[key]);\n        } else {\n          resolve(this._parseCacheData);\n        }\n      });\n    },\n\n    /**\n     * Returns true if there is an existing cache for the current config file\n     */\n    async isCached() {\n      await cv.ConfigCache.init();\n      const data = await this.getData();\n      if (!data) {\n        return false;\n      }\n      // compare versions\n      const cacheVersion = data.VERSION + '|' + data.REV;\n      qx.log.Logger.debug(\n        this,\n        'Cached version: ' + cacheVersion + ', CV-Version: ' + cv.Version.VERSION + '|' + cv.Version.REV\n      );\n\n      return cacheVersion === cv.Version.VERSION + '|' + cv.Version.REV;\n    },\n\n    async isValid(xml, hash) {\n      // cache the result, as the config stays the same until next reload\n      if (this._valid === null) {\n        const cachedHash = await this.getData('hash');\n        if (!cachedHash) {\n          this._valid = false;\n        } else {\n          if (!hash && xml) {\n            hash = this.toHash(xml);\n          }\n          qx.log.Logger.debug(this, 'Current hash: \\'' + hash + '\\', cached hash: \\'' + cachedHash + '\\'');\n\n          this._valid = hash === cachedHash;\n        }\n      }\n      return this._valid;\n    },\n\n    toHash(xml) {\n      return this.hashCode(new XMLSerializer().serializeToString(xml));\n    },\n\n    clear(configSuffix) {\n      if (cv.ConfigCache.DB) {\n        configSuffix = configSuffix || (cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        const dataRequest = objectStore.delete(configSuffix);\n        dataRequest.onsuccess = function () {\n          qx.log.Logger.debug('cache for ' + configSuffix + 'cleared');\n        };\n      }\n    },\n\n    /**\n     * @param string\n     * @see http://stackoverflow.com/q/7616461/940217\n     * @return {number}\n     */\n    hashCode(string) {\n      if (Array.prototype.reduce) {\n        return string.split('').reduce(function (a, b) {\n          a = (a << 5) - a + b.charCodeAt(0);\n          return a & a;\n        }, 0);\n      }\n      let hash = 0;\n      if (string.length === 0) {\n        return hash;\n      }\n      for (let i = 0, l = string.length; i < l; i++) {\n        let character = string.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash &= hash; // Convert to 32bit integer\n      }\n      return hash;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}