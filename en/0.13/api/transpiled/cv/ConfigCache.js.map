{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "_cacheKey",
    "_parseCacheData",
    "_valid",
    "replayCache",
    "__initPromise",
    "failed",
    "DB",
    "init",
    "Promise",
    "resolve",
    "reject",
    "cv",
    "ConfigCache",
    "request",
    "indexedDB",
    "open",
    "onerror",
    "log",
    "Logger",
    "error",
    "onsuccess",
    "ev",
    "debug",
    "result",
    "event",
    "Error",
    "onupgradeneeded",
    "db",
    "target",
    "objectStore",
    "createObjectStore",
    "keyPath",
    "createIndex",
    "unique",
    "dump",
    "xml",
    "hash",
    "model",
    "data",
    "Model",
    "getInstance",
    "save",
    "toHash",
    "VERSION",
    "Version",
    "REV",
    "JSON",
    "stringify",
    "getWidgetDataModel",
    "addresses",
    "getAddressList",
    "configSettings",
    "Config",
    "config",
    "configSuffix",
    "body",
    "document",
    "querySelector",
    "innerHTML",
    "restore",
    "getData",
    "then",
    "cache",
    "iconsFromConfig",
    "forEach",
    "icon",
    "IconHandler",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "source",
    "mappings",
    "Object",
    "keys",
    "mapping",
    "formulaSource",
    "formula",
    "Function",
    "key",
    "range",
    "rangeMin",
    "valueElement",
    "i",
    "iconDefinition",
    "definition",
    "getIconElement",
    "Array",
    "isArray",
    "contents",
    "length",
    "setWidgetDataModel",
    "setAddressList",
    "widgetsToInitialize",
    "filter",
    "widgetId",
    "$$initOnCacheLoad",
    "TemplateEngine",
    "addListenerOnce",
    "widgetData",
    "ui",
    "structure",
    "WidgetFactory",
    "createInstance",
    "$$type",
    "style",
    "visibility",
    "transaction",
    "put",
    "dataRequest",
    "get",
    "parse",
    "bind",
    "isCached",
    "cacheVersion",
    "isValid",
    "cachedHash",
    "hashCode",
    "XMLSerializer",
    "serializeToString",
    "clear",
    "string",
    "prototype",
    "reduce",
    "split",
    "a",
    "b",
    "charCodeAt",
    "l",
    "character"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/ConfigCache.js"
  ],
  "sourcesContent": [
    "/* ConfigCache.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Handles caches for cometvisu configs\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.10.0\n */\nqx.Class.define('cv.ConfigCache', {\n  type: 'static',\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    _cacheKey: 'data',\n    _parseCacheData: null,\n    _valid: null,\n    replayCache: null,\n    __initPromise: null,\n    failed: null,\n    DB: null,\n\n    init() {\n      if (!this.__initPromise) {\n        this.__initPromise = new Promise((resolve, reject) => {\n          if (!cv.ConfigCache.DB && !cv.ConfigCache.failed) {\n            const request = indexedDB.open('cvCache', 1);\n            request.onerror = function () {\n              cv.ConfigCache.failed = true;\n              qx.log.Logger.error(cv.ConfigCache, 'error opening cache database');\n\n              cv.ConfigCache.DB = null;\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onsuccess = function (ev) {\n              qx.log.Logger.debug(cv.ConfigCache, 'Success creating/accessing IndexedDB database');\n\n              cv.ConfigCache.DB = request.result;\n\n              cv.ConfigCache.DB.onerror = function (event) {\n                reject(new Error('Error creating/accessing IndexedDB database'));\n              };\n              resolve(cv.ConfigCache.DB);\n            };\n            request.onupgradeneeded = function (event) {\n              const db = event.target.result;\n\n              db.onerror = function (event) {\n                qx.log.Logger.error(cv.ConfigCache, 'Error loading database.');\n              };\n              const objectStore = db.createObjectStore('data', {\n                keyPath: 'config'\n              });\n\n              objectStore.createIndex('config', 'config', { unique: true });\n            };\n          } else {\n            resolve(cv.ConfigCache.DB);\n          }\n        });\n      }\n      return this.__initPromise;\n    },\n\n    dump(xml, hash) {\n      const model = cv.data.Model.getInstance();\n      this.save({\n        hash: hash || this.toHash(xml),\n        VERSION: cv.Version.VERSION,\n        REV: cv.Version.REV,\n        data: JSON.stringify(model.getWidgetDataModel()),\n        addresses: model.getAddressList(),\n        configSettings: JSON.stringify(cv.Config.configSettings),\n        config: cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix,\n        body: document.querySelector('body').innerHTML\n      });\n    },\n\n    restore() {\n      const body = document.querySelector('body');\n      const model = cv.data.Model.getInstance();\n      this.getData().then(cache => {\n        cv.Config.configSettings = cache.configSettings;\n\n        // restore icons\n        cv.Config.configSettings.iconsFromConfig.forEach(function (icon) {\n          cv.IconHandler.getInstance().insert(\n            icon.name,\n            icon.uri,\n            icon.type,\n            icon.flavour,\n            icon.color,\n            icon.styling,\n            icon.dynamic,\n            icon.source\n          );\n        }, this);\n\n        // restore mappings\n        if (cv.Config.configSettings.mappings) {\n          Object.keys(cv.Config.configSettings.mappings).forEach(function (name) {\n            const mapping = cv.Config.configSettings.mappings[name];\n            if (mapping && mapping.formulaSource) {\n              mapping.formula = new Function('x', 'var y;' + mapping.formulaSource + '; return y;');\n            } else {\n              Object.keys(mapping).forEach(key => {\n                if (key === 'range') {\n                  Object.keys(mapping.range).forEach(rangeMin => {\n                    mapping.range[rangeMin][1].forEach((valueElement, i) => {\n                      const iconDefinition = valueElement.definition;\n                      if (iconDefinition) {\n                        let icon = cv.IconHandler.getInstance().getIconElement(\n                          iconDefinition.name,\n                          iconDefinition.type,\n                          iconDefinition.flavour,\n                          iconDefinition.color,\n                          iconDefinition.styling,\n                          iconDefinition['class']\n                        );\n\n                        icon.definition = iconDefinition;\n                        mapping.range[rangeMin][1][i] = icon;\n                      }\n                    });\n                  });\n                } else if (Array.isArray(mapping[key])) {\n                  const contents = mapping[key];\n                  for (let i = 0; i < contents.length; i++) {\n                    const iconDefinition = contents[i].definition;\n                    if (iconDefinition) {\n                      let icon = cv.IconHandler.getInstance().getIconElement(\n                        iconDefinition.name,\n                        iconDefinition.type,\n                        iconDefinition.flavour,\n                        iconDefinition.color,\n                        iconDefinition.styling,\n                        iconDefinition['class']\n                      );\n\n                      icon.definition = iconDefinition;\n                      contents[i] = icon;\n                    }\n                  }\n                } else {\n                  const iconDefinition = mapping[key].definition;\n                  if (iconDefinition) {\n                    let icon = cv.IconHandler.getInstance().getIconElement(\n                      iconDefinition.name,\n                      iconDefinition.type,\n                      iconDefinition.flavour,\n                      iconDefinition.color,\n                      iconDefinition.styling,\n                      iconDefinition['class']\n                    );\n\n                    icon.definition = iconDefinition;\n                    mapping[key] = icon;\n                  }\n                }\n              });\n            }\n          }, this);\n        }\n        model.setWidgetDataModel(cache.data);\n        model.setAddressList(cache.addresses);\n        const widgetsToInitialize = Object.keys(cache.data).filter(function (widgetId) {\n          return cache.data[widgetId].$$initOnCacheLoad === true;\n        });\n        if (widgetsToInitialize.length > 0) {\n          cv.TemplateEngine.getInstance().addListenerOnce('changeReady', () => {\n            widgetsToInitialize.forEach(function (widgetId) {\n              const widgetData = cache.data[widgetId];\n              cv.ui.structure.WidgetFactory.createInstance(widgetData.$$type, widgetData);\n            });\n          });\n        }\n        // hide body to prevent flickering\n        body.style.visibility = 'hidden';\n        body.innerHTML = cache.body;\n        qx.log.Logger.debug(this, 'content restored from cache');\n      });\n    },\n\n    save(data) {\n      if (cv.ConfigCache.DB) {\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        objectStore.put(data);\n      }\n    },\n\n    async getData(key) {\n      return new Promise((resolve, reject) => {\n        if (!cv.ConfigCache.DB) {\n          resolve(null);\n          return;\n        }\n        if (!this._parseCacheData) {\n          const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readonly').objectStore('data');\n          const dataRequest = objectStore.get(cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n\n          dataRequest.onsuccess = function (event) {\n            if (!dataRequest.result) {\n              resolve(null);\n            } else {\n              this._parseCacheData = dataRequest.result;\n              // parse stringified data\n              this._parseCacheData.data = JSON.parse(this._parseCacheData.data);\n              this._parseCacheData.configSettings = JSON.parse(this._parseCacheData.configSettings);\n\n              if (key) {\n                resolve(this._parseCacheData[key]);\n              } else {\n                resolve(this._parseCacheData);\n              }\n            }\n          }.bind(this);\n        } else if (key) {\n          resolve(this._parseCacheData[key]);\n        } else {\n          resolve(this._parseCacheData);\n        }\n      });\n    },\n\n    /**\n     * Returns true if there is an existing cache for the current config file\n     */\n    async isCached() {\n      await cv.ConfigCache.init();\n      const data = await this.getData();\n      if (!data) {\n        return false;\n      }\n      // compare versions\n      const cacheVersion = data.VERSION + '|' + data.REV;\n      qx.log.Logger.debug(\n        this,\n        'Cached version: ' + cacheVersion + ', CV-Version: ' + cv.Version.VERSION + '|' + cv.Version.REV\n      );\n\n      return cacheVersion === cv.Version.VERSION + '|' + cv.Version.REV;\n    },\n\n    async isValid(xml, hash) {\n      // cache the result, as the config stays the same until next reload\n      if (this._valid === null) {\n        const cachedHash = await this.getData('hash');\n        if (!cachedHash) {\n          this._valid = false;\n        } else {\n          if (!hash && xml) {\n            hash = this.toHash(xml);\n          }\n          qx.log.Logger.debug(this, 'Current hash: \\'' + hash + '\\', cached hash: \\'' + cachedHash + '\\'');\n\n          this._valid = hash === cachedHash;\n        }\n      }\n      return this._valid;\n    },\n\n    toHash(xml) {\n      return this.hashCode(new XMLSerializer().serializeToString(xml));\n    },\n\n    clear(configSuffix) {\n      if (cv.ConfigCache.DB) {\n        configSuffix = configSuffix || (cv.Config.configSuffix === null ? 'NULL' : cv.Config.configSuffix);\n        const objectStore = cv.ConfigCache.DB.transaction(['data'], 'readwrite').objectStore('data');\n        const dataRequest = objectStore.delete(configSuffix);\n        dataRequest.onsuccess = function () {\n          qx.log.Logger.debug('cache for ' + configSuffix + 'cleared');\n        };\n      }\n    },\n\n    /**\n     * @param string\n     * @see http://stackoverflow.com/q/7616461/940217\n     * @return {number}\n     */\n    hashCode(string) {\n      if (Array.prototype.reduce) {\n        return string.split('').reduce(function (a, b) {\n          a = (a << 5) - a + b.charCodeAt(0);\n          return a & a;\n        }, 0);\n      }\n      let hash = 0;\n      if (string.length === 0) {\n        return hash;\n      }\n      for (let i = 0, l = string.length; i < l; i++) {\n        let character = string.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash &= hash; // Convert to 32bit integer\n      }\n      return hash;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}