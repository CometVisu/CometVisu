{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/PowerSpectrum.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "AbstractWidget",
    "include",
    "common",
    "Update",
    "construct",
    "props",
    "name1",
    "singlePhase",
    "name2",
    "name3",
    "setSpectrum",
    "isSinglePhase",
    "setupSpectrum",
    "setCurve",
    "setupCurve",
    "statics",
    "CURRENT",
    "VOLTAGE",
    "limitEN50160_1999",
    "limitEN61000_3_2",
    "referenceSin",
    "fixLimits",
    "entry",
    "index",
    "array",
    "lastShifted",
    "last",
    "length",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseFormat",
    "parseAddress",
    "makeAddressListFn",
    "target",
    "transform",
    "value",
    "plugins",
    "PowerSpectrum",
    "src",
    "mode",
    "variant",
    "properties",
    "displayType",
    "check",
    "init",
    "spectrum",
    "limitName",
    "curve",
    "showCurve",
    "showLegend",
    "current",
    "limitColor",
    "color1",
    "color2",
    "color3",
    "members",
    "__plot",
    "__plotCurve",
    "_getInnerDomString",
    "actor",
    "isShowCurve",
    "_onDomReady",
    "colors",
    "getLimitColor",
    "getColor1",
    "getColor2",
    "getColor3",
    "diagramCurve",
    "$",
    "getPath",
    "empty",
    "optionsCurve",
    "legend",
    "show",
    "isShowLegend",
    "xaxis",
    "yaxis",
    "diagramSpectrum",
    "optionsSpectrum",
    "series",
    "bars",
    "fill",
    "fillColor",
    "lineWidth",
    "align",
    "barWidth",
    "plot",
    "createDatasetCurve",
    "createDatasetSpectrum",
    "bind",
    "layout",
    "ResizeHandler",
    "states",
    "isPageSizeInvalid",
    "addListenerOnce",
    "_update",
    "ga",
    "undefined",
    "addressInfo",
    "getAddress",
    "phase",
    "variantInfo",
    "Transform",
    "encode",
    "getCurrent",
    "substr",
    "parseInt",
    "factor",
    "values",
    "i",
    "Math",
    "pow",
    "getSpectrum",
    "setData",
    "draw",
    "updateCurve",
    "getCurve",
    "offset",
    "ret_val",
    "push",
    "input",
    "inp",
    "out",
    "shift",
    "PI",
    "phi",
    "cos",
    "j",
    "label",
    "color",
    "getLimitName",
    "getDisplayType",
    "lines",
    "steps",
    "getName1",
    "getName2",
    "getName3",
    "defer",
    "loader",
    "util",
    "ScriptLoader",
    "getInstance",
    "addScripts",
    "addHandler",
    "WidgetFactory",
    "registerClass",
    "forEach",
    "time",
    "sin"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* PowerSpectrum.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * The powerspectrum plugin and widget creates a graph to show the power \n * spectral data that the Enertex Smartmeter can send on the KNX bus.\n * \n * @author Christian Mayer\n * @since 0.10.0\n * @asset(plugins/diagram/dep/flot/jquery.flot.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.canvas.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.resize.min.js)\n * @asset(plugins/diagram/dep/flot/jquery.flot.navigate.min.js)\n */\nqx.Class.define('cv.plugins.PowerSpectrum', {\n  extend: cv.ui.structure.AbstractWidget,\n  include: [cv.ui.common.Update],\n\n  /*\n  ******************************************************\n    CONSTRUCTOR\n  ******************************************************\n  */\n  construct: function(props) {\n    if (!props.name1) {\n      props.name1 = props.singlePhase === true ? 'L' : 'L1';\n    }\n    if (!props.name2) {\n      props.name2 = 'L2';\n    }\n    if (!props.name3) {\n      props.name3 = 'L3';\n    }\n    this.base(arguments, props);\n\n    // some initializations\n    this.setSpectrum(this.isSinglePhase() ? [ this.setupSpectrum() ] : [ this.setupSpectrum(-0.26), this.setupSpectrum(0), this.setupSpectrum(0.26) ]);\n    this.setCurve(this.isSinglePhase() ? [ this.setupCurve() ] : [ this.setupCurve(), this.setupCurve(), this.setupCurve() ]);\n  },\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    // Constants\n    CURRENT: 0,\n    VOLTAGE: 1,\n    limitEN50160_1999: [[2, 0.02], [3, 0.05], [4, 0.01], [5, 0.06], [6, 0.005], [7, 0.05],\n      [8, 0.005], [9, 0.015], [10, 0.005], [11, 0.035], [12, 0.005], [13, 0.03], [14, 0.005],\n      [15, 0.005], [16, 0.005], [17, 0.02], [18, 0.005], [19, 0.015], [20, 0.005],\n      [21, 0.005], [22, 0.005], [23, 0.015], [24, 0.005], [25, 0.015]\n    ], // limit for voltage in ratio\n    limitEN61000_3_2: [[2, 1.620], [3, 3.450], [4, 0.650], [5, 1.710], [6, 0.450],\n      [7, 1.160], [8, 0.350], [9, 0.600], [10, 0.280], [11, 0.500], [12, 0.233], [13, 0.320],\n      [14, 0.200], [15, 0.230], [16, 0.175], [17, 0.203], [18, 0.155], [19, 0.182],\n      [20, 0.140], [21, 0.164], [22, 0.127], [23, 0.150], [24, 0.117], [25, 0.139]\n    ], // limit for current in Ampere\n    referenceSin: [[], [], []],\n\n    // fix limits for better displaying\n    fixLimits: function(entry, index, array) {\n      array[index][0] -= 0.5;\n    },\n    lastShifted: function(array) {\n      const last = array[array.length - 1];\n      return [ last[0]+1, last[1] ];\n    },\n\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse: function (xml, path, flavour, pageType) {\n      const data = cv.parser.WidgetParser.parseElement(this, xml, path, flavour, pageType, this.getAttributeToPropertyMappings());\n      cv.parser.WidgetParser.parseFormat(xml, path);\n      cv.parser.WidgetParser.parseAddress(xml, path, this.makeAddressListFn);\n      return data;\n    },\n\n    getAttributeToPropertyMappings: function() {\n      return {\n        'type': {\n          target: 'displayType',\n          transform: function(value) {\n            return value === 'current' ? cv.plugins.PowerSpectrum.CURRENT : cv.plugins.PowerSpectrum.VOLTAGE;\n          }\n        },\n        'singlephase': {\n          target: 'singlePhase',\n          transform: function(value) {\n            return value === 'true';\n          }\n        },\n        'limitname': {\n          target: 'limitName',\n          'default': 'limit'\n        },\n        'name1': { },\n        'name2': { },\n        'name3': { },\n        'spectrumonly': {\n          target: 'showCurve',\n          transform: function(value) {\n            return value !== 'true';\n          }\n        },\n        'showlegend': {\n          target: 'showLegend',\n          transform: function(value) {\n            return value === 'true';\n          }\n        },\n        'limitcolor': {\n          target: 'limitColor',\n          'default': '#edc240' // default directly from flot code\n        },\n        'color1': {\n          'default': '#afd8f8'\n        },\n        'color2': {\n          'default': '#cb4b4b'\n        },\n        'color3': {\n          'default': '#4da74d'\n        }\n      };\n    },\n\n    makeAddressListFn: function(src, transform, mode, variant) {\n      if (!variant) {\n        variant = 'spectrum'; // the default\n      }\n      return [true, variant];\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    displayType: {\n      check: [0, 1],\n      init: 1\n    },\n    singlePhase: {\n      check: 'Boolean',\n      init: false\n    },\n    spectrum: {\n      check: 'Array',\n      init: []\n    },\n    limitName: {\n      check: 'String',\n      init: 'limit'\n    },\n    name1: {\n      check: 'String',\n      init: 'L1'\n    },\n    name2: {\n      check: 'String',\n      init: 'L2'\n    },\n    name3: {\n      check: 'String',\n      init: 'L3'\n    },\n    curve: {\n      check: 'Array',\n      init: []\n    },\n    showCurve: {\n      check: 'Boolean',\n      init: false\n    },\n    showLegend: {\n      check: 'Boolean',\n      init: false\n    },\n    current: {\n      check: 'Array',\n      init: []\n    },\n    limitColor: {\n      check: 'Color',\n      init: '#edc240'\n    },\n    color1: {\n      check: 'Color',\n      init: '#afd8f8'\n    },\n    color2: {\n      check: 'Color',\n      init: '#cb4b4b'\n    },\n    color3: {\n      check: 'Color',\n      init: '#4da74d'\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    __plot: null,\n    __plotCurve: null,\n    \n    _getInnerDomString: function() {\n      // create the actor\n      let actor = '<div class=\"actor clickable\">';\n      if (this.isShowCurve()) {\n        actor += '<div class=\"diagram_inline curve\">loading...</div>';\n      }\n      actor += '<div class=\"diagram_inline spectrum\">loading...</div></div>';\n      return actor;\n    },\n    \n    _onDomReady: function() {\n      this.base(arguments);\n      const colors = [this.getLimitColor(), this.getColor1(), this.getColor2(), this.getColor3()];\n\n      const diagramCurve = this.isShowCurve() && $('#' + this.getPath() + ' .actor div.curve').empty();\n      const optionsCurve = this.isShowCurve() && {\n        colors: colors,\n        legend: {\n          show: this.isShowLegend()\n        },\n        xaxis: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        }\n      };\n      const diagramSpectrum = $('#' + this.getPath() + ' .actor div.spectrum').empty();\n      const optionsSpectrum = {\n        colors: colors,\n        series: {\n          bars: {\n            show: true,\n            fill: 1,\n            fillColor: null,\n            lineWidth: 0\n          }\n        },\n        bars: {\n          align: 'center',\n          barWidth: this.isSinglePhase() ? 0.75 : 0.25\n        },\n        legend: {\n          show: this.isShowLegend()\n        },\n        xaxis: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        }\n      };\n\n      const init = function () {\n        this.__plotCurve = this.isShowCurve() && $.plot(diagramCurve, this.createDatasetCurve(), optionsCurve);\n        this.__plot = $.plot(diagramSpectrum, this.createDatasetSpectrum(), optionsSpectrum);\n      }.bind(this);\n\n      // check if sizes are set yet, otherwise wait some time\n      if (cv.ui.layout.ResizeHandler.states.isPageSizeInvalid()) {\n        cv.ui.layout.ResizeHandler.states.addListenerOnce('changePageSizeInvalid', init);\n      } else {\n        init();\n      }\n    },\n\n    _update: function(ga, data) {\n      if (ga === undefined) {\n return; \n}\n      const addressInfo = this.getAddress()[ga];\n\n      let phase;\n      if (addressInfo.variantInfo[0] === 'I') {\n        phase = this.isSinglePhase() ? 1 : +(addressInfo.variantInfo[1] || 1);\n        const value = cv.Transform.encode(addressInfo.transform, data);\n        this.getCurrent()[phase-1] = value / 1000; // transform mA to A\n      } else if (addressInfo.variantInfo.substr(0, 8) === 'spectrum' && data.length === 28) { // sanity check for 14 bytes\n        phase = this.isSinglePhase() ? 1 : +(addressInfo.variantInfo[8] || 1);\n        const index = parseInt(data.substr(0, 2), 16);\n        const factor = this.getCurrent()[phase - 1] || 1;\n        const values = [];\n\n        for (let i = 0; i < 13; i++) {\n          if (index + i < 2) {\n            continue;\n          }\n          values[i] = Math.pow(10, (parseInt(data.substr(i * 2 + 2, 2), 16) - 253) / 80);\n          this.getSpectrum()[phase - 1][index + i - 2][1] = values[i] * factor;\n        }\n        this.__plot.setData(this.createDatasetSpectrum());\n        this.__plot.draw();\n\n        if (this.__plotCurve) {\n          this.updateCurve(this.getSpectrum(), this.getCurve(), phase - 1);\n          this.__plotCurve.setData(this.createDatasetCurve());\n          this.__plotCurve.draw();\n        }\n      }\n    },\n    \n    /**\n     * Setup helper\n     */\n    setupCurve: function() {\n      return [[0, 0], [0.4, 0], [0.8, 0], [1.2, 0], [1.6, 0], [2, 0], [2.4, 0], [2.8, 0], [3.2, 0],\n        [3.6, 0], [4, 0], [4.4, 0], [4.8, 0], [5.2, 0], [5.6, 0], [6, 0], [6.4, 0], [6.8, 0], [7.2, 0],\n        [7.6, 0], [8, 0], [8.4, 0], [8.8, 0], [9.2, 0], [9.6, 0], [10, 0], [10.4, 0], [10.8, 0],\n        [11.2, 0], [11.6, 0], [12, 0], [12.4, 0], [12.8, 0], [13.2, 0], [13.6, 0], [14, 0],\n        [14.4, 0], [14.8, 0], [15.2, 0], [15.6, 0], [16, 0], [16.4, 0], [16.8, 0], [17.2, 0],\n        [17.6, 0], [18, 0], [18.4, 0], [18.8, 0], [19.2, 0], [19.6, 0]];\n    },\n    setupSpectrum: function(offset) {\n      const ret_val = [];\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n      for (let i = 2; i < 52; i++) {\n        ret_val.push([i + offset, 0]);\n      }\n      return ret_val;\n    },\n\n    /**\n     * Convert a spectrum to a curve\n     * @param input\n     * @param target\n     * @param phase\n     */\n    updateCurve: function(input, target, phase) {\n      const inp = input[phase];\n      const out = target[phase];\n      const shift = (phase * 2 / 3 - 0.5) * Math.PI;\n\n      for (let i = 0; i < 50; i++) {\n        const phi = i * Math.PI / 25;\n        let value = Math.cos(phi + shift); // the base with 50 Hz\n\n        // the harmonics\n        for (let j = 2; j < 50; j++) {\n          value += Math.cos((phi+shift) * j) * inp[j][1];\n        }\n\n        out[i][1] = value;\n      }\n    },\n\n    /**\n     * Little helper to setup the Flot dataset structure.\n     */\n    createDatasetCurve: function() {\n      return this.isSinglePhase()\n        ? [\n          { label: null, data: this.self(arguments).referenceSin[0], color:13 }, // trick flot to automatically make color darker\n          { label: 'L', data: this.getCurve()[0], color:1 }\n        ]\n        : [\n          { label: null, data: this.self(arguments).referenceSin[0], color:13 },\n          { label: null, data: this.self(arguments).referenceSin[1], color:14 },\n          { label: null, data: this.self(arguments).referenceSin[2], color:15 },\n          { label: 'L1', data: this.getCurve()[0], color:1 },\n          { label: 'L2', data: this.getCurve()[1], color:2 },\n          { label: 'L3', data: this.getCurve()[2], color:3 }\n        ];\n    },\n\n    /**\n     * Little helper to setup the Flot dataset structure.\n     */\n    createDatasetSpectrum: function() {\n      return this.isSinglePhase()\n        ? [\n          { label: this.getLimitName(), data: this.getDisplayType()===this.self(arguments).VOLTAGE ? this.self(arguments).limitEN50160_1999 : this.self(arguments).limitEN61000_3_2, bars:{show:false}, lines:{steps:true}, color:0 },\n          { label: this.getName1(), data:this.getSpectrum()[0], color:1}\n        ]\n        : [\n          { \n            label: this.getLimitName(), \n            data: this.getDisplayType() === this.self(arguments).VOLTAGE ? this.self(arguments).limitEN50160_1999 : this.self(arguments).limitEN61000_3_2, bars:{show:false}, lines:{steps:true}, color:0 },\n          { label: this.getName1(), data:this.getSpectrum()[0], color:1 },\n          { label: this.getName2(), data:this.getSpectrum()[1], color:2 },\n          { label: this.getName3(), data:this.getSpectrum()[2], color:3 }\n        ];\n    }\n  },\n\n  defer: function(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addScripts([\n      'plugins/diagram/dep/flot/jquery.flot.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.canvas.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.resize.min.js',\n      'plugins/diagram/dep/flot/jquery.flot.navigate.min.js'\n    ]);\n    cv.parser.WidgetParser.addHandler('powerspectrum', cv.plugins.PowerSpectrum);\n    cv.ui.structure.WidgetFactory.registerClass('powerspectrum', statics);\n    \n    // init\n    statics.limitEN50160_1999.forEach(statics.fixLimits);\n    statics.limitEN50160_1999.push(statics.lastShifted(statics.limitEN50160_1999));\n    statics.limitEN61000_3_2.forEach(statics.fixLimits);\n    statics.limitEN61000_3_2.push(statics.lastShifted(statics.limitEN61000_3_2));\n\n    // fill reference\n    for (let phi = 0; phi < 50; phi++) {\n      const time = phi * 20 / 50; // time in milliseconds\n\n      statics.referenceSin[0].push([ time, Math.sin((phi) * Math.PI / 25) ]);\n      statics.referenceSin[1].push([ time, Math.sin((phi+ 50/3) * Math.PI / 25) ]);\n      statics.referenceSin[2].push([ time, Math.sin((phi+100/3) * Math.PI / 25) ]);\n    }\n  }\n\n});\n"
  ]
}