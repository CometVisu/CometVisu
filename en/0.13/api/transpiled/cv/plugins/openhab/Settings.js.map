{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "_this",
    "constructor",
    "call",
    "_setLayout",
    "layout",
    "VBox",
    "set",
    "padding",
    "backgroundColor",
    "textColor",
    "getBounds",
    "addListenerOnce",
    "getContentElement",
    "setStyle",
    "__servicePid",
    "__uri",
    "_initConfigRestClient",
    "properties",
    "modified",
    "check",
    "init",
    "event",
    "members",
    "__configDescriptionResource",
    "__service",
    "__configDescription",
    "__inDom",
    "_store",
    "__initialValues",
    "_initStore",
    "pid",
    "_this2",
    "serviceDesc",
    "get",
    "method",
    "url",
    "put",
    "service",
    "io",
    "rest",
    "Resource",
    "client",
    "cv",
    "BackendConnections",
    "getClientByType",
    "data",
    "store",
    "Rest",
    "configureRequest",
    "req",
    "setRequestHeader",
    "openhab",
    "authorize",
    "manipulateData",
    "n",
    "Object",
    "getOwnPropertyNames",
    "forEach",
    "key",
    "replace",
    "prototype",
    "hasOwnProperty",
    "autoDownload",
    "JSON",
    "parse",
    "util",
    "Serializer",
    "toJson",
    "getModel",
    "_saveConfig",
    "close",
    "_this3",
    "description",
    "config",
    "addListener",
    "ev",
    "_createForm",
    "getRequest",
    "getResponse",
    "Array",
    "isArray",
    "parameters",
    "_createChildControl",
    "form",
    "getChildControl",
    "param",
    "field",
    "type",
    "TextField",
    "defaultValue",
    "setPlaceholder",
    "CheckBox",
    "setValue",
    "readOnly",
    "setReadOnly",
    "required",
    "setRequired",
    "setToolTipText",
    "_onFormFieldChange",
    "add",
    "label",
    "name",
    "renderer",
    "plugins",
    "Single",
    "Config",
    "guessIfProxied",
    "setBottomText",
    "tr",
    "textAlign",
    "font",
    "addButton",
    "_addAt",
    "controller",
    "Form",
    "bind",
    "setModified",
    "items",
    "getItems",
    "some",
    "getValue",
    "debug",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Label",
    "marginBottom",
    "allowGrowX",
    "decorator",
    "Button",
    "locale",
    "Manager",
    "Settings",
    "superclass",
    "setVisibility",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/Settings.js"
  ],
  "sourcesContent": [
    "/* Settings.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Show and edit openHAB CometVisu backends settings via openHAB api.\n *\n * @author Tobias BrÃ¤utigam\n * @since 0.11.0\n *\n */\nqx.Class.define('cv.plugins.openhab.Settings', {\n  extend: qx.ui.core.Widget,\n\n  /*\n  *****************************************************************************\n    CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct() {\n    super();\n    this._setLayout(new qx.ui.layout.VBox());\n    this.set({\n      padding: 10,\n      backgroundColor: 'rgba(216, 216, 216, 1.0)',\n      textColor: 'rgb(61, 61, 61)'\n    });\n\n    // override text-shadow setting\n    if (!this.getBounds()) {\n      this.addListenerOnce('appear', () => {\n        this.getContentElement().setStyle('text-shadow', 'none');\n      });\n    } else {\n      this.getContentElement().setStyle('text-shadow', 'none');\n    }\n\n    this.__servicePid = 'org.openhab.cometvisu';\n    this.__uri = 'ui:cometvisu';\n\n    this._initConfigRestClient();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __servicePid: null,\n    __uri: null,\n    __configDescriptionResource: null,\n    __service: null,\n    __configDescription: null,\n    __inDom: false,\n    _store: null,\n    __initialValues: null,\n\n    _initStore(pid) {\n      const serviceDesc = {\n        get: { method: 'GET', url: '/rest/services/' + pid + '/config' },\n        delete: { method: 'DELETE', url: '/rest/services/' + pid + '/config' },\n        put: { method: 'PUT', url: '/rest/services/' + pid + '/config' }\n      };\n\n      const service = (this.__service = new qx.io.rest.Resource(serviceDesc));\n      const client = cv.io.BackendConnections.getClientByType('openhab');\n\n      this._store = new qx.data.store.Rest(service, 'get', {\n        configureRequest(req) {\n          req.setRequestHeader('Content-Type', 'application/json');\n          if (client instanceof cv.io.openhab.Rest) {\n            client.authorize(req);\n          }\n        },\n        manipulateData(data) {\n          // normalize the keys (replace .> with _) for the marshaller\n          const n = {};\n          Object.getOwnPropertyNames(data).forEach(function (key) {\n            n[key.replace(/[\\.>]/g, '_')] = data[key];\n          });\n          if (!Object.prototype.hasOwnProperty.call(n, 'autoDownload')) {\n            n.autoDownload = false;\n          }\n          return n;\n        }\n      });\n\n      // load data\n      service.get();\n      this._store.addListenerOnce('changeModel', () => {\n        this.__initialValues = JSON.parse(qx.util.Serializer.toJson(this._store.getModel()));\n      });\n    },\n\n    _saveConfig() {\n      let data = qx.util.Serializer.toJson(this._store.getModel());\n      data = data.replace(/icons_mapping_/g, 'icons.mapping>');\n      data = JSON.parse(data.replace('icons_enableMapping', 'icons>enableMapping'));\n\n      this.__service.put(null, data);\n      this.__service.addListenerOnce('putSuccess', this.close, this);\n    },\n\n    _initConfigRestClient() {\n      const description = {\n        get: { method: 'GET', url: '/rest/config-descriptions/' + this.__uri }\n      };\n\n      const config = (this.__configDescriptionResource = new qx.io.rest.Resource(description));\n      const client = cv.io.BackendConnections.getClientByType('openhab');\n\n      config.addListener('getSuccess', ev => {\n        this._createForm(ev.getRequest().getResponse());\n      });\n      config.configureRequest(function (req) {\n        req.setRequestHeader('Content-Type', 'application/json');\n        if (client instanceof cv.io.openhab.Rest) {\n          client.authorize(req);\n        }\n      });\n      config.get();\n\n      this._initStore(this.__servicePid);\n    },\n\n    _createForm(config) {\n      if (config && Object.prototype.hasOwnProperty.call(config, 'parameters') && Array.isArray(config.parameters)) {\n        this._createChildControl('title');\n        const form = this.getChildControl('form');\n        config.parameters.forEach(function (param) {\n          let field;\n          switch (param.type) {\n            case 'TEXT':\n              field = new qx.ui.form.TextField();\n              if (param.defaultValue) {\n                field.setPlaceholder(param.defaultValue);\n              }\n              break;\n            case 'BOOLEAN':\n              field = new qx.ui.form.CheckBox();\n              field.setValue(param.defaultValue === 'true');\n              break;\n          }\n\n          if (param.readOnly) {\n            field.setReadOnly(true);\n          }\n          if (param.required) {\n            field.setRequired(true);\n          }\n          field.setToolTipText(param.description);\n          field.addListener('changeValue', this._onFormFieldChange, this);\n          form.add(field, param.label, null, param.name, null, param);\n        }, this);\n\n        const renderer = new cv.plugins.openhab.renderer.Single(form);\n        if (cv.Config.guessIfProxied()) {\n          renderer.setBottomText(\n            this.tr(\n              'The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing.'\n            )\n          );\n\n          renderer.getChildControl('bottom-text').set({\n            padding: 10,\n            textAlign: 'center',\n            font: 'bold'\n          });\n        }\n        renderer.addButton(this.getChildControl('cancel-button'));\n        renderer.addButton(this.getChildControl('save-button'));\n\n        this._addAt(renderer, 1);\n        const controller = new qx.data.controller.Form(null, form);\n\n        this._store.bind('model', controller, 'model');\n\n        this.setModified(false);\n      }\n    },\n\n    _onFormFieldChange() {\n      let modified = false;\n      const items = this.getChildControl('form').getItems();\n      Object.getOwnPropertyNames(items).some(function (name) {\n        // noinspection EqualityComparisonWithCoercionJS\n        if (this.__initialValues[name] != items[name].getValue()) {\n          this.debug(name + ' has changed from ' + this.__initialValues[name] + ' to ' + items[name].getValue());\n\n          modified = true;\n          return true;\n        }\n        return false;\n      }, this);\n      this.setModified(modified);\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      let control;\n      switch (id) {\n        case 'title':\n          control = new qx.ui.basic.Label(this.tr('openHAB backend settings'));\n          control.set({\n            font: 'bold',\n            marginBottom: 5,\n            allowGrowX: true,\n            decorator: 'window-caption'\n          });\n\n          this._addAt(control, 0);\n          break;\n\n        case 'form':\n          control = new qx.ui.form.Form();\n          break;\n\n        case 'cancel-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Cancel'));\n          control.addListener('execute', this.close, this);\n          break;\n\n        case 'save-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Save'));\n          control.addListener('execute', this._saveConfig, this);\n          this.bind('modified', control, 'enabled');\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    close() {\n      this.setVisibility('excluded');\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct() {\n    this._disposeObjects('__configDescriptionResource', '__service', '__root', '_store', '_window');\n  }\n});\n"
  ],
  "mappings": "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"
}