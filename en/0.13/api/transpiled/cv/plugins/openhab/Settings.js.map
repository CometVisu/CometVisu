{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/openhab/Settings.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "_setLayout",
    "layout",
    "VBox",
    "set",
    "padding",
    "backgroundColor",
    "textColor",
    "getBounds",
    "addListenerOnce",
    "getContentElement",
    "setStyle",
    "__servicePid",
    "__uri",
    "_initConfigRestClient",
    "properties",
    "modified",
    "check",
    "init",
    "event",
    "members",
    "__configDescriptionResource",
    "__service",
    "__configDescription",
    "__inDom",
    "_store",
    "__initialValues",
    "_initStore",
    "pid",
    "serviceDesc",
    "method",
    "url",
    "service",
    "io",
    "rest",
    "Resource",
    "client",
    "cv",
    "TemplateEngine",
    "getInstance",
    "visu",
    "data",
    "store",
    "Rest",
    "configureRequest",
    "req",
    "setRequestHeader",
    "openhab",
    "authorize",
    "manipulateData",
    "n",
    "Object",
    "getOwnPropertyNames",
    "forEach",
    "key",
    "replace",
    "prototype",
    "hasOwnProperty",
    "call",
    "autoDownload",
    "get",
    "JSON",
    "parse",
    "util",
    "Serializer",
    "toJson",
    "getModel",
    "_saveConfig",
    "put",
    "close",
    "description",
    "config",
    "addListener",
    "ev",
    "_createForm",
    "getRequest",
    "getResponse",
    "Array",
    "isArray",
    "parameters",
    "_createChildControl",
    "form",
    "getChildControl",
    "param",
    "field",
    "type",
    "TextField",
    "defaultValue",
    "setPlaceholder",
    "CheckBox",
    "setValue",
    "readOnly",
    "setReadOnly",
    "required",
    "setRequired",
    "setToolTipText",
    "_onFormFieldChange",
    "add",
    "label",
    "name",
    "renderer",
    "plugins",
    "Single",
    "Config",
    "guessIfProxied",
    "setBottomText",
    "tr",
    "textAlign",
    "font",
    "addButton",
    "_addAt",
    "controller",
    "Form",
    "bind",
    "setModified",
    "items",
    "getItems",
    "some",
    "getValue",
    "debug",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Label",
    "marginBottom",
    "allowGrowX",
    "decorator",
    "Button",
    "locale",
    "Manager",
    "setVisibility",
    "destruct",
    "_disposeObjects",
    "Settings"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Settings.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Show and edit openHAB CometVisu backends settings via openHAB api.\n *\n * @author Tobias Bräutigam\n * @since 0.11.0\n *\n */\nqx.Class.define('cv.plugins.openhab.Settings', {\n  extend: qx.ui.core.Widget,\n\n  /*\n *****************************************************************************\n    CONSTRUCTOR\n *****************************************************************************\n */\n  construct: function () {\n    this.base(arguments);\n    this._setLayout(new qx.ui.layout.VBox());\n    this.set({\n      padding: 10,\n      backgroundColor: 'rgba(216, 216, 216, 1.0)',\n      textColor: 'rgb(61, 61, 61)'\n    });\n    // override text-shadow setting\n    if (!this.getBounds()) {\n      this.addListenerOnce('appear', function() {\n        this.getContentElement().setStyle('text-shadow', 'none');\n      }, this);\n    } else {\n      this.getContentElement().setStyle('text-shadow', 'none');\n    }\n\n    this.__servicePid = 'org.openhab.cometvisu';\n    this.__uri = 'ui:cometvisu';\n\n    this._initConfigRestClient();\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n\n    modified: {\n      check: 'Boolean',\n      init: false,\n      event: 'changeModified'\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members: {\n    __servicePid: null,\n    __uri: null,\n    __configDescriptionResource: null,\n    __service: null,\n    __configDescription: null,\n    __inDom: false,\n    _store: null,\n    __initialValues: null,\n\n    _initStore: function(pid) {\n      const serviceDesc = {\n        'get': {method: 'GET', url: '/rest/services/' + pid + '/config'},\n        'delete': {method: 'DELETE', url: '/rest/services/' + pid + '/config'},\n        'put': {method: 'PUT', url: '/rest/services/' + pid + '/config'}\n      };\n      const service = this.__service = new qx.io.rest.Resource(serviceDesc);\n      const client = cv.TemplateEngine.getInstance().visu;\n\n      this._store = new qx.data.store.Rest(service, 'get', {\n        configureRequest: function(req) {\n          req.setRequestHeader('Content-Type', 'application/json');\n          if (client instanceof cv.io.openhab.Rest) {\n            client.authorize(req);\n          }\n        },\n        manipulateData: function(data) {\n          // normalize the keys (replace .> with _) for the marshaller\n          const n = {};\n          Object.getOwnPropertyNames(data).forEach(function(key) {\n            n[key.replace(/[\\.>]/g, '_')] = data[key];\n          });\n          if (!Object.prototype.hasOwnProperty.call(n, 'autoDownload')) {\n            n.autoDownload = false;\n          }\n          return n;\n        }\n      });\n      // load data\n      service.get();\n      this._store.addListenerOnce('changeModel', function() {\n        this.__initialValues = JSON.parse(qx.util.Serializer.toJson(this._store.getModel()));\n      }, this);\n    },\n\n    _saveConfig: function() {\n      let data = qx.util.Serializer.toJson(this._store.getModel());\n      data = data.replace(/icons_mapping_/g, 'icons.mapping>');\n      data = JSON.parse(data.replace('icons_enableMapping', 'icons>enableMapping'));\n      this.__service.put(null, data);\n      this.__service.addListenerOnce('putSuccess', this.close, this);\n    },\n\n    _initConfigRestClient: function() {\n      const description = {\n        'get': {method: 'GET', url: '/rest/config-descriptions/' + this.__uri}\n      };\n\n      const config = this.__configDescriptionResource = new qx.io.rest.Resource(description);\n      const client = cv.TemplateEngine.getInstance().visu;\n\n      config.addListener('getSuccess', function(ev) {\n        this._createForm(ev.getRequest().getResponse());\n      }, this);\n      config.configureRequest(function(req) {\n        req.setRequestHeader('Content-Type', 'application/json');\n        if (client instanceof cv.io.openhab.Rest) {\n          client.authorize(req);\n        }\n      });\n      config.get();\n\n      this._initStore(this.__servicePid);\n    },\n\n    _createForm: function(config) {\n      if (config && Object.prototype.hasOwnProperty.call(config, 'parameters') && Array.isArray(config.parameters)) {\n        this._createChildControl('title');\n        const form = this.getChildControl('form');\n        config.parameters.forEach(function (param) {\n          let field;\n          switch (param.type) {\n            case 'TEXT':\n              field = new qx.ui.form.TextField();\n              if (param.defaultValue) {\n                field.setPlaceholder(param.defaultValue);\n              }\n              break;\n            case 'BOOLEAN':\n              field = new qx.ui.form.CheckBox();\n              field.setValue(param.defaultValue === 'true');\n              break;\n          }\n          if (param.readOnly) {\n            field.setReadOnly(true);\n          }\n          if (param.required) {\n            field.setRequired(true);\n          }\n          field.setToolTipText(param.description);\n          field.addListener('changeValue', this._onFormFieldChange, this);\n          form.add(field, param.label, null, param.name, null, param);\n        }, this);\n\n        const renderer = new cv.plugins.openhab.renderer.Single(form);\n        if (cv.Config.guessIfProxied()) {\n          renderer.setBottomText(this.tr('The CometVisu seems to be delivered by a proxied webserver. Changing configuration values might not have the expected effect. Please proceed only if you know what you are doing.'));\n          renderer.getChildControl('bottom-text').set({\n            padding: 10,\n            textAlign: 'center',\n            font: 'bold'\n          });\n        }\n        renderer.addButton(this.getChildControl('cancel-button'));\n        renderer.addButton(this.getChildControl('save-button'));\n\n        this._addAt(renderer, 1);\n        const controller = new qx.data.controller.Form(null, form);\n\n        this._store.bind('model', controller, 'model');\n\n        this.setModified(false);\n      }\n    },\n\n    _onFormFieldChange: function() {\n      let modified = false;\n      const items = this.getChildControl('form').getItems();\n      Object.getOwnPropertyNames(items).some(function(name) {\n        // noinspection EqualityComparisonWithCoercionJS\n        if (this.__initialValues[name] != items[name].getValue()) { // jshint ignore:line\n          this.debug(name+' has changed from '+this.__initialValues[name]+' to '+items[name].getValue());\n          modified = true;\n          return true;\n        }\n        return false;\n      }, this);\n      this.setModified(modified);\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash) {\n      let control;\n      switch (id) {\n        case 'title':\n          control = new qx.ui.basic.Label(this.tr('openHAB backend settings'));\n          control.set({\n            font: 'bold',\n            marginBottom: 5,\n            allowGrowX: true,\n            decorator: 'window-caption'\n          });\n          this._addAt(control, 0);\n          break;\n\n        case 'form':\n          control = new qx.ui.form.Form();\n          break;\n\n        case 'cancel-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Cancel'));\n          control.addListener('execute', this.close, this);\n          break;\n\n        case 'save-button':\n          control = new qx.ui.form.Button(qx.locale.Manager.tr('Save'));\n          control.addListener('execute', this._saveConfig, this);\n          this.bind('modified', control, 'enabled');\n          break;\n      }\n      return control || this.base(arguments, id, hash);\n    },\n\n    close: function() {\n      this.setVisibility('excluded');\n    }\n  },\n\n  /*\n  ******************************************************\n    DESTRUCTOR\n  ******************************************************\n  */\n  destruct: function() {\n    this._disposeObjects('__configDescriptionResource', '__service', '__root', '_store', '_window');\n  }\n});\n"
  ]
}