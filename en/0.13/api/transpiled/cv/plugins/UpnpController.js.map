{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "pure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseRefresh",
    "debug",
    "target",
    "transform",
    "value",
    "label",
    "player_ip_addr",
    "player_port",
    "parseInt",
    "uniqid",
    "newDate",
    "Date",
    "getTime",
    "properties",
    "traceFlag",
    "check",
    "init",
    "playerIp",
    "nullable",
    "playerPort",
    "members",
    "upnpcontroller_uid",
    "upnpcontroller_song_process_rel",
    "_getInnerDomString",
    "id",
    "ret_val",
    "controller",
    "_onDomReady",
    "refreshUpnpcontroller",
    "initListeners",
    "Reg",
    "event",
    "Registration",
    "addListener",
    "document",
    "querySelector",
    "toggleMute",
    "togglePlay",
    "callNext",
    "callPrev",
    "callvolumedown",
    "callvolumeup",
    "callgetplaylists",
    "_setupRefreshAction",
    "getRefresh",
    "_timer",
    "Timer",
    "start",
    "getPlayerIp",
    "getPlayerPort",
    "traceLog",
    "isTraceFlag",
    "__callRemote",
    "ev",
    "getTarget",
    "getResponse",
    "JSON",
    "volume",
    "reltimeResponse",
    "durationResponse",
    "title",
    "__updateController",
    "muteState",
    "transportState",
    "artist",
    "album",
    "e",
    "error",
    "mute",
    "playMode",
    "reltime",
    "duration",
    "classList",
    "replace",
    "innerText",
    "calculateSongProcessed",
    "setAttribute",
    "type",
    "callback",
    "req",
    "io",
    "request",
    "Xhr",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Object",
    "assign",
    "port",
    "set",
    "requestData",
    "accept",
    "method",
    "send",
    "undefined",
    "durationParts",
    "split",
    "secondsTotal",
    "Number",
    "reltimeParts",
    "secondsProcessed",
    "Math",
    "floor",
    "playlist",
    "currentValue",
    "getAttribute",
    "playlists",
    "totalMatches",
    "i",
    "playLists",
    "length",
    "urlenc",
    "name",
    "url",
    "innerHTML",
    "currentVolume",
    "muteButton",
    "muteValue",
    "playValue",
    "cmd",
    "playButton",
    "msg",
    "defer",
    "loader",
    "ScriptLoader",
    "addStyles",
    "addHandler",
    "plugins",
    "UpnpController",
    "WidgetFactory",
    "registerClass"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/UpnpController.js"
  ],
  "sourcesContent": [
    "/* UpnpController.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n//noinspection JSUnusedGlobalSymbols\n/**\n * @author Mark K. [mr dot remy at gmx dot de]\n * @since 2012\n * @asset(plugins/upnpcontroller/upnpcontroller.css)\n * @asset(plugins/upnpcontroller/*.php)\n */\nqx.Class.define('cv.plugins.UpnpController', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        debug: {\n          target: 'traceFlag',\n          transform(value) {\n            return value === 'true';\n          }\n        },\n\n        label: {},\n        player_ip_addr: { target: 'playerIp' },\n        player_port: {\n          target: 'playerPort',\n          transform(value) {\n            return value ? parseInt(value) : 1440;\n          }\n        }\n      };\n    },\n\n    uniqid() {\n      const newDate = new Date();\n      return newDate.getTime();\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    traceFlag: {\n      check: 'Boolean',\n      init: false\n    },\n\n    playerIp: {\n      check: 'String',\n      nullable: true\n    },\n\n    playerPort: {\n      check: 'Number',\n      init: 1440\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    upnpcontroller_uid: null,\n    upnpcontroller_song_process_rel: null,\n\n    _getInnerDomString() {\n      const id = 'upnpcontroller_' + this.self(arguments).uniqid();\n      this.upnpcontroller_uid = id;\n      const ret_val = '<div class=\"actor\"><div class=\"upnpcontroller\" id=\"' + id + '\">';\n      let controller = '<div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_title\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Title</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_artist\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Artist</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_album\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Album</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_time\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'></div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><progress id=\\'' + id + '_progress\\'  max=\\'100\\' value=\\'0\\'></progress></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_volumedown\\' class=\\'actor center switchUnpressed\\'><div class=\\'value\\'>-</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_volume\\' class=\\'actor center switchInvisible\\' style=\\'text-align: center;\\'><div class=\\'value\\'>20</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_volumeup\\' class=\\'actor center switchUnpressed\\'><div class=\\'value\\'>+</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_playButton\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>-</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_muteButton\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>-</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_prev\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>prev</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_next\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>next</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_getplaylists\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>play lists</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' + id + '_playlistsresult\\'><div class=\\'value\\'></div></div></div>';\n\n      controller += '</div>';\n      return ret_val + controller;\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n      this.refreshUpnpcontroller();\n    },\n\n    /**\n     * Initialize the event listeners\n     */\n    initListeners() {\n      const Reg = qx.event.Registration;\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_muteButton'),\n        'tap',\n        this.toggleMute,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_playButton'),\n        'tap',\n        this.togglePlay,\n        this\n      );\n\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + '_next'), 'tap', this.callNext, this);\n\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + '_prev'), 'tap', this.callPrev, this);\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_volumedown'),\n        'tap',\n        this.callvolumedown,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_volumeup'),\n        'tap',\n        this.callvolumeup,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_getplaylists'),\n        'tap',\n        this.callgetplaylists,\n        this\n      );\n    },\n\n    _setupRefreshAction() {\n      if (this.getRefresh() && this.getRefresh() > 0) {\n        this._timer = new qx.event.Timer(this.getRefresh());\n        this._timer.addListener('interval', () => {\n          this.refreshUpnpcontroller();\n        });\n        this._timer.start();\n      }\n    },\n\n    refreshUpnpcontroller() {\n      const playerIp = this.getPlayerIp();\n      const playerPort = this.getPlayerPort();\n\n      this.traceLog('debug     : ' + this.isTraceFlag());\n      this.traceLog('playerIp  : ' + playerIp);\n      this.traceLog('playerPort: ' + playerPort);\n\n      this.__callRemote('status', {}, function (ev) {\n        let data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n          this.traceLog('volume          : ' + data.volume);\n          this.traceLog('reltime         : ' + data.reltimeResponse);\n          this.traceLog('durationResponse: ' + data.durationResponse);\n          this.traceLog('title           : ' + data.title);\n\n          this.__updateController(\n            data.volume,\n            data.muteState,\n            data.transportState,\n            data.title,\n            data.reltimeResponse,\n            data.durationResponse,\n            data.artist,\n            data.album\n          );\n        } catch (e) {\n          this.error(e);\n        }\n      });\n    },\n\n    __updateController(volume, mute, playMode, title, reltime, duration, artist, album) {\n      const id = this.upnpcontroller_uid;\n\n      if (mute === 0) {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchPressed', 'switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchUnpressed', 'switchPressed');\n      }\n\n      if (playMode === 'Play') {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchPressed', 'switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchUnpressed', 'switchPressed');\n      }\n\n      document.querySelector('#' + id + '_muteButton div.value').innerText = mute;\n      document.querySelector('#' + id + '_playButton div.value').innerText = playMode;\n      document.querySelector('#' + id + '_volume div.value').innerText = volume;\n      document.querySelector('#' + id + '_title div.value').innerText = title;\n      document.querySelector('#' + id + '_artist div.value').innerText = artist;\n      document.querySelector('#' + id + '_album div.value').innerText = album;\n      document.querySelector('#' + id + '_time div.value').innerText = reltime + ' of ' + duration;\n\n      this.upnpcontroller_song_process_rel = this.calculateSongProcessed(reltime, duration);\n\n      this.traceLog('song_process_rel: ' + this.upnpcontroller_song_process_rel);\n\n      document.querySelector('#' + id + '_progress').setAttribute('value', this.upnpcontroller_song_process_rel);\n    },\n\n    /**\n     * Internal helper method for remote calls to backend UPNP controller scripts\n     * @param type {String} type of backend controller\n     * @param data {Map|null} additional data to send to the backend\n     * @param callback {Function} callback that should be called in success\n     */\n    __callRemote(type, data, callback) {\n      const req = new qx.io.request.Xhr(\n        qx.util.ResourceManager.getInstance().toUri('plugins/upnpcontroller/' + type + '.php')\n      );\n\n      if (!data) {\n        data = {};\n      }\n      data = Object.assign(data, {\n        player_ip_addr: this.getPlayerIp(),\n        port: this.getPlayerPort()\n      });\n\n      req.set({\n        requestData: data,\n        accept: 'application/json',\n        method: 'GET'\n      });\n\n      req.addListener('success', callback, this);\n      req.send();\n    },\n\n    calculateSongProcessed(reltime, duration) {\n      if (reltime === undefined || duration === undefined) {\n        return 0;\n      }\n      this.traceLog('calculateSongProcessed');\n\n      const durationParts = duration.split(':');\n      const secondsTotal =\n        Number(durationParts[2]) + Number(durationParts[1]) * 60 + Number(durationParts[0]) * 60 * 60;\n      const reltimeParts = reltime.split(':');\n      const secondsProcessed =\n        Number(reltimeParts[2]) + Number(reltimeParts[1]) * 60 + Number(reltimeParts[0]) * 60 * 60;\n      this.traceLog('secondsTotal    : ' + secondsTotal);\n      this.traceLog('secondsProcessed: ' + secondsProcessed);\n\n      return Math.floor((secondsProcessed * 100) / secondsTotal);\n    },\n\n    callgetplaylists() {\n      this.traceLog('click callgetplaylists');\n      const playlist = document.querySelector('#' + this.upnpcontroller_uid + '_getplaylists');\n\n      const currentValue = playlist.getAttribute('value');\n      const playerIp = this.getPlayerIp();\n      const playerPort = this.getPlayerPort();\n\n      this.traceLog('currentValue: ' + currentValue);\n      this.traceLog('playerPort  : ' + playerPort);\n\n      this.__callRemote('playlists', {}, function (ev) {\n        let data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n        } catch (e) {\n          this.error(e);\n          return;\n        }\n        let playlists = '';\n\n        this.traceLog('totalMatches: ' + data.totalMatches);\n\n        for (let i = 0; i < data.playLists.length; i++) {\n          playlists +=\n            '<a href=\\'' +\n            'plugins/upnpcontroller/selectplaylist.php?player_ip_addr=' +\n            playerIp +\n            '&listurl=' +\n            data.playLists[i].urlenc +\n            '&port=' +\n            playerPort +\n            '\\'>' +\n            data.playLists[i].name +\n            '</a></br>';\n\n          if (this.isTraceFlag() === 'true') {\n            this.debug('name: ' + data.playLists[i].name);\n            this.debug('url: ' + data.playLists[i].url);\n          }\n        }\n\n        if (currentValue !== 'pressed') {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerHTML = playlists;\n          playlists.setAttribute('value', 'pressed');\n          playlists.classList.replace('switchUnpressed', 'switchPressed');\n        } else {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerText = '';\n          playlists.setAttribute('value', 'unpressed');\n          playlists.classList.replace('switchUnpressed', 'switchPressed');\n        }\n      });\n    },\n\n    callvolumedown() {\n      this.traceLog('click callvolumedown');\n      const currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n\n      this.traceLog('currentVolume: ' + currentVolume);\n      const volume = Number(currentVolume) - 5;\n      this.__callRemote('volume', { volume: volume }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callvolumeup() {\n      this.traceLog('click callvolumeup');\n      const currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n      this.traceLog('currentVolume: ' + currentVolume);\n      const volume = Number(currentVolume) + 5;\n\n      this.__callRemote('volume', { volume: volume }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callNext() {\n      this.traceLog('click next');\n      this.__callRemote('next', {}, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callPrev() {\n      this.traceLog('click prev');\n      this.__callRemote('prev', {}, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    toggleMute() {\n      this.traceLog('click mute');\n      const muteButton = document.querySelector('#' + this.upnpcontroller_uid + '_muteButton');\n\n      let muteValue = muteButton.querySelector('div.value').innerText;\n\n      this.traceLog('current muteValue: ' + muteValue);\n\n      if (muteValue === 0) {\n        muteValue = 1;\n        muteButton.classList.replace('switchUnpressed', 'switchPressed');\n      } else {\n        muteValue = 0;\n        muteButton.classList.replace('switchPressed', 'switchUnpressed');\n      }\n\n      this.__callRemote('mute', { mute: muteValue }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    togglePlay() {\n      this.traceLog('click play');\n      const playValue = document.querySelector('#' + this.upnpcontroller_uid + '_playButton div.value').innerText;\n      let cmd;\n\n      this.traceLog('current playValue: ' + playValue);\n\n      const playButton = document.querySelector('#' + this.upnpcontroller_uid + '_playButton');\n\n      if (playValue === 'Play') {\n        cmd = 'pause';\n        playButton.classList.replace('switchUnpressed', 'switchPressed');\n      } else {\n        cmd = 'play';\n        playButton.classList.replace('switchPressed', 'switchUnpressed');\n      }\n\n      this.__callRemote(cmd, {}, function (ev) {\n        this.traceLog('data: ' + ev.getTarget().getResponse());\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    traceLog(msg) {\n      if (this.isTraceFlag()) {\n        this.debug(msg);\n      }\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/upnpcontroller/upnpcontroller.css');\n    cv.parser.pure.WidgetParser.addHandler('upnpcontroller', cv.plugins.UpnpController);\n\n    cv.ui.structure.WidgetFactory.registerClass('upnpcontroller', statics);\n  }\n});\n"
  ],
  "mappings": "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"
}