{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "cv",
    "ui",
    "structure",
    "pure",
    "AbstractWidget",
    "include",
    "common",
    "Refresh",
    "statics",
    "parse",
    "xml",
    "path",
    "flavour",
    "pageType",
    "data",
    "parser",
    "WidgetParser",
    "parseElement",
    "getAttributeToPropertyMappings",
    "parseRefresh",
    "debug",
    "target",
    "transform",
    "value",
    "label",
    "player_ip_addr",
    "player_port",
    "parseInt",
    "uniqid",
    "newDate",
    "Date",
    "getTime",
    "properties",
    "traceFlag",
    "check",
    "init",
    "playerIp",
    "nullable",
    "playerPort",
    "members",
    "upnpcontroller_uid",
    "upnpcontroller_song_process_rel",
    "_getInnerDomString",
    "id",
    "ret_val",
    "controller",
    "_onDomReady",
    "refreshUpnpcontroller",
    "initListeners",
    "Reg",
    "event",
    "Registration",
    "addListener",
    "document",
    "querySelector",
    "toggleMute",
    "togglePlay",
    "callNext",
    "callPrev",
    "callvolumedown",
    "callvolumeup",
    "callgetplaylists",
    "_setupRefreshAction",
    "getRefresh",
    "_timer",
    "Timer",
    "start",
    "getPlayerIp",
    "getPlayerPort",
    "traceLog",
    "isTraceFlag",
    "__callRemote",
    "ev",
    "getTarget",
    "getResponse",
    "JSON",
    "volume",
    "reltimeResponse",
    "durationResponse",
    "title",
    "__updateController",
    "muteState",
    "transportState",
    "artist",
    "album",
    "e",
    "error",
    "mute",
    "playMode",
    "reltime",
    "duration",
    "classList",
    "replace",
    "innerText",
    "calculateSongProcessed",
    "setAttribute",
    "type",
    "callback",
    "req",
    "io",
    "request",
    "Xhr",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "Object",
    "assign",
    "port",
    "set",
    "requestData",
    "accept",
    "method",
    "send",
    "undefined",
    "durationParts",
    "split",
    "secondsTotal",
    "Number",
    "reltimeParts",
    "secondsProcessed",
    "Math",
    "floor",
    "playlist",
    "currentValue",
    "getAttribute",
    "playlists",
    "totalMatches",
    "i",
    "playLists",
    "length",
    "urlenc",
    "name",
    "url",
    "innerHTML",
    "currentVolume",
    "muteButton",
    "muteValue",
    "playValue",
    "cmd",
    "playButton",
    "msg",
    "defer",
    "loader",
    "ScriptLoader",
    "addStyles",
    "addHandler",
    "plugins",
    "UpnpController",
    "WidgetFactory",
    "registerClass"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/plugins/UpnpController.js"
  ],
  "sourcesContent": [
    "/* UpnpController.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n//noinspection JSUnusedGlobalSymbols\n/**\n * @author Mark K. [mr dot remy at gmx dot de]\n * @since 2012\n * @asset(plugins/upnpcontroller/upnpcontroller.css)\n * @asset(plugins/upnpcontroller/*.php)\n */\nqx.Class.define('cv.plugins.UpnpController', {\n  extend: cv.ui.structure.pure.AbstractWidget,\n  include: [cv.ui.common.Refresh],\n\n  /*\n  ******************************************************\n    STATICS\n  ******************************************************\n  */\n  statics: {\n    /**\n     * Parses the widgets XML configuration and extracts the given information\n     * to a simple key/value map.\n     *\n     * @param xml {Element} XML-Element\n     * @param path {String} internal path of the widget\n     * @param flavour {String} Flavour of the widget\n     * @param pageType {String} Page type (2d, 3d, ...)\n     * @return {Map} extracted data from config element as key/value map\n     */\n    parse(xml, path, flavour, pageType) {\n      const data = cv.parser.pure.WidgetParser.parseElement(\n        this,\n        xml,\n        path,\n        flavour,\n        pageType,\n        this.getAttributeToPropertyMappings()\n      );\n\n      cv.parser.pure.WidgetParser.parseRefresh(xml, path);\n      return data;\n    },\n\n    getAttributeToPropertyMappings() {\n      return {\n        debug: {\n          target: 'traceFlag',\n          transform(value) {\n            return value === 'true';\n          }\n        },\n\n        label: {},\n        player_ip_addr: { target: 'playerIp' },\n        player_port: {\n          target: 'playerPort',\n          transform(value) {\n            return value ? parseInt(value) : 1440;\n          }\n        }\n      };\n    },\n\n    uniqid() {\n      const newDate = new Date();\n      return newDate.getTime();\n    }\n  },\n\n  /*\n  ******************************************************\n    PROPERTIES\n  ******************************************************\n  */\n  properties: {\n    traceFlag: {\n      check: 'Boolean',\n      init: false\n    },\n\n    playerIp: {\n      check: 'String',\n      nullable: true\n    },\n\n    playerPort: {\n      check: 'Number',\n      init: 1440\n    }\n  },\n\n  /*\n  ******************************************************\n    MEMBERS\n  ******************************************************\n  */\n  members: {\n    upnpcontroller_uid: null,\n    upnpcontroller_song_process_rel: null,\n\n    _getInnerDomString() {\n      const id = 'upnpcontroller_' + this.self(arguments).uniqid();\n      this.upnpcontroller_uid = id;\n      const ret_val = '<div class=\"actor\"><div class=\"upnpcontroller\" id=\"' + id + '\">';\n      let controller = '<div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_title\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Title</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_artist\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Artist</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_album\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'>Album</div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div id=\\'' +\n        id +\n        '_time\\' class=\\'upnplabelgroup\\'><div class=\\'upnplabel\\'></div><div class=\\'value\\'>-</div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><progress id=\\'' + id + '_progress\\'  max=\\'100\\' value=\\'0\\'></progress></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_volumedown\\' class=\\'actor center switchUnpressed\\'><div class=\\'value\\'>-</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_volume\\' class=\\'actor center switchInvisible\\' style=\\'text-align: center;\\'><div class=\\'value\\'>20</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_volumeup\\' class=\\'actor center switchUnpressed\\'><div class=\\'value\\'>+</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_playButton\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>-</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_muteButton\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>-</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_prev\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>prev</div></div>' +\n        '<div id=\\'' +\n        id +\n        '_next\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>next</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' +\n        id +\n        '_getplaylists\\' class=\\'actor switchUnpressed center\\'><div class=\\'value\\'>play lists</div></div></div>';\n      controller +=\n        '<div style=\\'float: left;\\'><div id=\\'' + id + '_playlistsresult\\'><div class=\\'value\\'></div></div></div>';\n\n      controller += '</div>';\n      return ret_val + controller;\n    },\n\n    _onDomReady() {\n      super._onDomReady();\n      this.refreshUpnpcontroller();\n    },\n\n    /**\n     * Initialize the event listeners\n     */\n    initListeners() {\n      const Reg = qx.event.Registration;\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_muteButton'),\n        'tap',\n        this.toggleMute,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_playButton'),\n        'tap',\n        this.togglePlay,\n        this\n      );\n\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + '_next'), 'tap', this.callNext, this);\n\n      Reg.addListener(document.querySelector('#' + this.upnpcontroller_uid + '_prev'), 'tap', this.callPrev, this);\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_volumedown'),\n        'tap',\n        this.callvolumedown,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_volumeup'),\n        'tap',\n        this.callvolumeup,\n        this\n      );\n\n      Reg.addListener(\n        document.querySelector('#' + this.upnpcontroller_uid + '_getplaylists'),\n        'tap',\n        this.callgetplaylists,\n        this\n      );\n    },\n\n    _setupRefreshAction() {\n      if (this.getRefresh() && this.getRefresh() > 0) {\n        this._timer = new qx.event.Timer(this.getRefresh());\n        this._timer.addListener('interval', () => {\n          this.refreshUpnpcontroller();\n        });\n        this._timer.start();\n      }\n    },\n\n    refreshUpnpcontroller() {\n      const playerIp = this.getPlayerIp();\n      const playerPort = this.getPlayerPort();\n\n      this.traceLog('debug     : ' + this.isTraceFlag());\n      this.traceLog('playerIp  : ' + playerIp);\n      this.traceLog('playerPort: ' + playerPort);\n\n      this.__callRemote('status', {}, function (ev) {\n        let data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n          this.traceLog('volume          : ' + data.volume);\n          this.traceLog('reltime         : ' + data.reltimeResponse);\n          this.traceLog('durationResponse: ' + data.durationResponse);\n          this.traceLog('title           : ' + data.title);\n\n          this.__updateController(\n            data.volume,\n            data.muteState,\n            data.transportState,\n            data.title,\n            data.reltimeResponse,\n            data.durationResponse,\n            data.artist,\n            data.album\n          );\n        } catch (e) {\n          this.error(e);\n        }\n      });\n    },\n\n    __updateController(volume, mute, playMode, title, reltime, duration, artist, album) {\n      const id = this.upnpcontroller_uid;\n\n      if (mute === 0) {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchPressed', 'switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_muteButton').classList.replace('switchUnpressed', 'switchPressed');\n      }\n\n      if (playMode === 'Play') {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchPressed', 'switchUnpressed');\n      } else {\n        document.querySelector('#' + id + '_playButton').classList.replace('switchUnpressed', 'switchPressed');\n      }\n\n      document.querySelector('#' + id + '_muteButton div.value').innerText = mute;\n      document.querySelector('#' + id + '_playButton div.value').innerText = playMode;\n      document.querySelector('#' + id + '_volume div.value').innerText = volume;\n      document.querySelector('#' + id + '_title div.value').innerText = title;\n      document.querySelector('#' + id + '_artist div.value').innerText = artist;\n      document.querySelector('#' + id + '_album div.value').innerText = album;\n      document.querySelector('#' + id + '_time div.value').innerText = reltime + ' of ' + duration;\n\n      this.upnpcontroller_song_process_rel = this.calculateSongProcessed(reltime, duration);\n\n      this.traceLog('song_process_rel: ' + this.upnpcontroller_song_process_rel);\n\n      document.querySelector('#' + id + '_progress').setAttribute('value', this.upnpcontroller_song_process_rel);\n    },\n\n    /**\n     * Internal helper method for remote calls to backend UPNP controller scripts\n     * @param type {String} type of backend controller\n     * @param data {Map|null} additional data to send to the backend\n     * @param callback {Function} callback that should be called in success\n     */\n    __callRemote(type, data, callback) {\n      const req = new qx.io.request.Xhr(\n        qx.util.ResourceManager.getInstance().toUri('plugins/upnpcontroller/' + type + '.php')\n      );\n\n      if (!data) {\n        data = {};\n      }\n      data = Object.assign(data, {\n        player_ip_addr: this.getPlayerIp(),\n        port: this.getPlayerPort()\n      });\n\n      req.set({\n        requestData: data,\n        accept: 'application/json',\n        method: 'GET'\n      });\n\n      req.addListener('success', callback, this);\n      req.send();\n    },\n\n    calculateSongProcessed(reltime, duration) {\n      if (reltime === undefined || duration === undefined) {\n        return 0;\n      }\n      this.traceLog('calculateSongProcessed');\n\n      const durationParts = duration.split(':');\n      const secondsTotal =\n        Number(durationParts[2]) + Number(durationParts[1]) * 60 + Number(durationParts[0]) * 60 * 60;\n      const reltimeParts = reltime.split(':');\n      const secondsProcessed =\n        Number(reltimeParts[2]) + Number(reltimeParts[1]) * 60 + Number(reltimeParts[0]) * 60 * 60;\n      this.traceLog('secondsTotal    : ' + secondsTotal);\n      this.traceLog('secondsProcessed: ' + secondsProcessed);\n\n      return Math.floor((secondsProcessed * 100) / secondsTotal);\n    },\n\n    callgetplaylists() {\n      this.traceLog('click callgetplaylists');\n      const playlist = document.querySelector('#' + this.upnpcontroller_uid + '_getplaylists');\n\n      const currentValue = playlist.getAttribute('value');\n      const playerIp = this.getPlayerIp();\n      const playerPort = this.getPlayerPort();\n\n      this.traceLog('currentValue: ' + currentValue);\n      this.traceLog('playerPort  : ' + playerPort);\n\n      this.__callRemote('playlists', {}, function (ev) {\n        let data = ev.getTarget().getResponse();\n        try {\n          if (typeof data === 'string') {\n            data = JSON.parse(data);\n          }\n        } catch (e) {\n          this.error(e);\n          return;\n        }\n        let playlists = '';\n\n        this.traceLog('totalMatches: ' + data.totalMatches);\n\n        for (let i = 0; i < data.playLists.length; i++) {\n          playlists +=\n            '<a href=\\'' +\n            'plugins/upnpcontroller/selectplaylist.php?player_ip_addr=' +\n            playerIp +\n            '&listurl=' +\n            data.playLists[i].urlenc +\n            '&port=' +\n            playerPort +\n            '\\'>' +\n            data.playLists[i].name +\n            '</a></br>';\n\n          if (this.isTraceFlag() === 'true') {\n            this.debug('name: ' + data.playLists[i].name);\n            this.debug('url: ' + data.playLists[i].url);\n          }\n        }\n\n        if (currentValue !== 'pressed') {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerHTML = playlists;\n          playlists.setAttribute('value', 'pressed');\n          playlists.classList.replace('switchUnpressed', 'switchPressed');\n        } else {\n          document.querySelector('#' + this.upnpcontroller_uid + '_playlistsresult div.value').innerText = '';\n          playlists.setAttribute('value', 'unpressed');\n          playlists.classList.replace('switchUnpressed', 'switchPressed');\n        }\n      });\n    },\n\n    callvolumedown() {\n      this.traceLog('click callvolumedown');\n      const currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n\n      this.traceLog('currentVolume: ' + currentVolume);\n      const volume = Number(currentVolume) - 5;\n      this.__callRemote('volume', { volume: volume }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callvolumeup() {\n      this.traceLog('click callvolumeup');\n      const currentVolume = document.querySelector('#' + this.upnpcontroller_uid + '_volume div.value').innerText;\n      this.traceLog('currentVolume: ' + currentVolume);\n      const volume = Number(currentVolume) + 5;\n\n      this.__callRemote('volume', { volume: volume }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callNext() {\n      this.traceLog('click next');\n      this.__callRemote('next', {}, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    callPrev() {\n      this.traceLog('click prev');\n      this.__callRemote('prev', {}, function (data) {\n        this.traceLog('data: ' + data);\n      });\n    },\n\n    toggleMute() {\n      this.traceLog('click mute');\n      const muteButton = document.querySelector('#' + this.upnpcontroller_uid + '_muteButton');\n\n      let muteValue = muteButton.querySelector('div.value').innerText;\n\n      this.traceLog('current muteValue: ' + muteValue);\n\n      if (muteValue === 0) {\n        muteValue = 1;\n        muteButton.classList.replace('switchUnpressed', 'switchPressed');\n      } else {\n        muteValue = 0;\n        muteButton.classList.replace('switchPressed', 'switchUnpressed');\n      }\n\n      this.__callRemote('mute', { mute: muteValue }, function (data) {\n        this.traceLog('data: ' + data);\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    togglePlay() {\n      this.traceLog('click play');\n      const playValue = document.querySelector('#' + this.upnpcontroller_uid + '_playButton div.value').innerText;\n      let cmd;\n\n      this.traceLog('current playValue: ' + playValue);\n\n      const playButton = document.querySelector('#' + this.upnpcontroller_uid + '_playButton');\n\n      if (playValue === 'Play') {\n        cmd = 'pause';\n        playButton.classList.replace('switchUnpressed', 'switchPressed');\n      } else {\n        cmd = 'play';\n        playButton.classList.replace('switchPressed', 'switchUnpressed');\n      }\n\n      this.__callRemote(cmd, {}, function (ev) {\n        this.traceLog('data: ' + ev.getTarget().getResponse());\n      });\n\n      this.refreshUpnpcontroller();\n    },\n\n    traceLog(msg) {\n      if (this.isTraceFlag()) {\n        this.debug(msg);\n      }\n    }\n  },\n\n  defer(statics) {\n    const loader = cv.util.ScriptLoader.getInstance();\n    loader.addStyles('plugins/upnpcontroller/upnpcontroller.css');\n    cv.parser.pure.WidgetParser.addHandler('upnpcontroller', cv.plugins.UpnpController);\n\n    cv.ui.structure.WidgetFactory.registerClass('upnpcontroller', statics);\n  }\n});\n"
  ],
  "mappings": "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"
}