{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__db",
    "cv",
    "IconConfig",
    "DB",
    "members",
    "insert",
    "name",
    "uri",
    "flavour",
    "color",
    "styling",
    "undefined",
    "dynamic",
    "source",
    "window",
    "util",
    "IconTools",
    "get",
    "a",
    "b",
    "c",
    "asText",
    "document",
    "createTextNode",
    "all",
    "split",
    "length",
    "shift",
    "test",
    "assign",
    "getURI",
    "i",
    "apply",
    "arguments",
    "ResourceManager",
    "getInstance",
    "toUri",
    "getIconElement",
    "iconclass",
    "icon",
    "classes",
    "template",
    "createElement",
    "innerHTML",
    "content",
    "firstChild",
    "getIconSource",
    "res",
    "startsWith",
    "fillIcons",
    "array",
    "forEach",
    "fillRecoloredIcon",
    "list",
    "keys",
    "debug",
    "IconHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/IconHandler.js"
  ],
  "sourcesContent": [
    "/* IconHandler.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2012\n */\n\n/**\n * The object \"icon\" contains the whole API necessary to handle the icons.\n *\n */\nqx.Class.define('cv.IconHandler', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct() {\n    this.__db = cv.IconConfig.DB;\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    /**\n     * @typedef iconDBEntry\n     * @type {object}\n     * @property {string} uri\n     * @property {string} styling\n     * @property {(string|HTMLCanvasElement|SVGElement)} icon\n     */\n    /**\n     * @typedef iconDB\n     * Hierachy:      name,           type,                   flavour,                color,   URI\n     * @type {Object.<string, Object.<string, (string|Object.<string, (string|Object.<string, (iconDBEntry|recolorCallback)>)>)>>}\n     */\n\n    /**\n     * Internal database of the known icons.\n     * Initially filled with the default icons.\n     * @type {iconDB}\n     */\n    __db: null,\n\n    /**\n     * Insert or overwrite one or many icons into the database. The parameter\n     * might be a full hash of icon definitions or a single one consisting out of\n     * a name and a URI path. Optional further parameters are a \"type\" and a\n     * flavour.\n     * @param {string} name\n     * @param {string} uri\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color\n     * @param {string?} styling\n     * @param {string?} dynamic\n     * @param {string?} source\n     */\n    insert(name, uri, type = '*', flavour = '*', color = '*', styling = undefined, dynamic = '', source = undefined) {\n      if (!this.__db[name]) {\n        this.__db[name] = {};\n      }\n      if (source) {\n        this.__db[name].source = source;\n      }\n      if (!this.__db[name][type]) {\n        this.__db[name][type] = {};\n      }\n      if (!this.__db[name][type][flavour]) {\n        this.__db[name][type][flavour] = {};\n      }\n\n      if (dynamic && window[dynamic]) {\n        this.__db[name][type][flavour][color] = window[dynamic](uri);\n      } else if (dynamic && cv.util.IconTools[dynamic]) {\n        this.__db[name][type][flavour][color] = cv.util.IconTools[dynamic](uri);\n      } else {\n        this.__db[name][type][flavour][color] = {\n          uri: uri,\n          styling: styling\n        };\n      }\n    },\n\n    /**\n     * Get the icon information for a name.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @return {(string|recolorCallback|undefined)} The URI for the icon - or \"undefined\" if not known\n     */\n    get(name, type = '*', flavour = '*', color = '*') {\n      if (!this.__db[name]) {\n        return (a, b, c, asText) => (asText ? '[unknown]' : document.createTextNode('[unknown]'));\n      }\n      if (!this.__db[name][type]) {\n        type = '*'; // undefined -> use default\n      }\n      let all;\n      if (typeof this.__db[name][type] === 'string') {\n        type = this.__db[name][type]; // redirect link\n        if (type.split('/').length > 1) {\n          all = type.split('/');\n          type = all.shift();\n          if (flavour === undefined) {\n            flavour = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour]) {\n        flavour = '*'; // undefined -> use default\n      }\n      if (typeof this.__db[name][type][flavour] === 'string') {\n        flavour = this.__db[name][type][flavour]; // redirect link\n        if (flavour.split('/').length > 1) {\n          all = flavour.split('/');\n          flavour = all.shift();\n          if (!color) {\n            color = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour][color]) {\n        if (/\\.svg(#.+)?$/.test(this.__db[name][type][flavour]['*'].uri)) {\n          // SVGs can be dynamically recolored, so create new entry for this color\n          this.__db[name][type][flavour][color] = Object.assign({}, this.__db[name][type][flavour]['*']);\n        } else {\n          color = '*'; // undefined -> use default\n        }\n      }\n      // handle a generic mapping function\n      if (typeof this.__db[name][type][flavour]['*'] === 'function') {\n        return this.__db[name][type][flavour]['*'];\n      }\n      if (typeof this.__db[name][type][flavour][color] === 'string') {\n        color = this.__db[name][type][flavour][color];\n      } // redirect link\n      return this.__db[name][type][flavour][color];\n    },\n\n    getURI() {\n      const i = this.get.apply(this, arguments);\n      if (i) {\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Get the icon - either as DOM element (`asText = false`) or as string\n     * (`asText = true`).\n     * When it is returned as string and it was added to the DOM, the\n     * fillIcons method must be called to fill missing content (e.g. the\n     * <canvas> icons.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @param {string?} styling\n     * @param {string?} iconclass\n     * @param {boolean?} asText\n     */\n    getIconElement(name, type, flavour, color, styling = '', iconclass = '', asText = false) {\n      const i = this.get(name, type, flavour, color);\n      if (i) {\n        if (i.icon && !styling && typeof i !== 'function' && !asText) {\n          return i.icon;\n        }\n\n        // fetch and cache image\n        if (!styling) {\n          styling = i.styling;\n        }\n\n        let classes = 'icon';\n        if (iconclass) {\n          classes = classes + ' custom_' + iconclass;\n        }\n\n        if (typeof i === 'function') {\n          if (asText) {\n            return i(color, styling, classes, true);\n          }\n          i.icon = i(color, styling, classes, false);\n        } else {\n          if (color) {\n            styling += ';color:' + color;\n          }\n          let icon = /\\.svg#.*?$/.test(i.uri) // SVG with fragment identifier?\n            ? '<svg class=\"' +\n              classes +\n              '\" style=\"' +\n              (styling ? styling : '') +\n              '\"><use href=\"' +\n              qx.util.ResourceManager.getInstance().toUri(i.uri) +\n              '\"></use></svg>'\n            : '<img class=\"' +\n              classes +\n              '\" src=\"' +\n              qx.util.ResourceManager.getInstance().toUri(i.uri) +\n              '\" style=\"' +\n              (styling ? styling : '') +\n              '\"/>';\n          if (asText) {\n            return icon;\n          }\n          let template = document.createElement('template');\n          template.innerHTML = icon;\n          i.icon = template.content.firstChild;\n        }\n        return i.icon;\n      }\n      return asText ? '' : null;\n    },\n\n    /**\n     * Provide a value that can be used by cv.ui.manager.basic.Image to display the icon on an qooxdoo widget.\n     * @param {string} name\n     * @param {string?} classes - optional css classes used in the svg icon code (default is 'icon')\n     * @returns {string}\n     */\n    getIconSource(name, classes) {\n      const i = this.get(name);\n      if (i) {\n        if (!classes) {\n          classes = 'icon';\n        }\n        if (typeof i === 'function') {\n          const res = i(undefined, undefined, classes, true);\n          if (res.startsWith('<canvas')) {\n            // no support for canvas as icon preview\n            return '';\n          }\n          return res;\n        }\n        if (/\\.svg#.*?$/.test(i.uri)) {\n          return (\n            '<svg class=\"' +\n            classes +\n            '\"><use href=\"' +\n            qx.util.ResourceManager.getInstance().toUri(i.uri) +\n            '\"></use></svg>'\n          );\n        }\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Fill the icons in the array.\n     * @param array\n     */\n    fillIcons(array) {\n      array.forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n    },\n\n    /**\n     * List all known icons\n     *\n     *\n     * @return {string[]} List of all known icon names\n     */\n    list() {\n      return Object.keys(this.__db);\n    },\n\n    /**\n     * Return icon database for debuging purposes - use ONLY for debugging as it's\n     * circumventing the data hiding and exposes a writeable reference to the\n     * database object!\n     *\n     *\n     * @return {Object} The icon database\n     */\n    debug() {\n      return this.__db;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}