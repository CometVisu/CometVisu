{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__db",
    "cv",
    "IconConfig",
    "DB",
    "members",
    "insert",
    "name",
    "uri",
    "arguments",
    "length",
    "undefined",
    "flavour",
    "color",
    "styling",
    "dynamic",
    "source",
    "window",
    "util",
    "IconTools",
    "get",
    "a",
    "b",
    "c",
    "asText",
    "document",
    "createTextNode",
    "all",
    "split",
    "shift",
    "test",
    "assign",
    "getURI",
    "i",
    "apply",
    "ResourceManager",
    "getInstance",
    "toUri",
    "getIconElement",
    "iconclass",
    "icon",
    "classes",
    "template",
    "createElement",
    "innerHTML",
    "content",
    "firstChild",
    "getIconSource",
    "res",
    "startsWith",
    "fillIcons",
    "array",
    "forEach",
    "fillRecoloredIcon",
    "list",
    "keys",
    "debug",
    "IconHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/IconHandler.js"
  ],
  "sourcesContent": [
    "/* IconHandler.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * @author Christian Mayer\n * @since 2012\n */\n\n/**\n * The object \"icon\" contains the whole API necessary to handle the icons.\n *\n */\nqx.Class.define('cv.IconHandler', {\n  extend: qx.core.Object,\n  type: 'singleton',\n\n  /*\n   ******************************************************\n   CONSTRUCTOR\n   ******************************************************\n   */\n  construct() {\n    this.__db = cv.IconConfig.DB;\n  },\n\n  /*\n   ******************************************************\n   MEMBERS\n   ******************************************************\n   */\n  members: {\n    /**\n     * @typedef iconDBEntry\n     * @type {object}\n     * @property {string} uri\n     * @property {string} styling\n     * @property {(string|HTMLCanvasElement|SVGElement)} icon\n     */\n    /**\n     * @typedef iconDB\n     * Hierachy:      name,           type,                   flavour,                color,   URI\n     * @type {Object.<string, Object.<string, (string|Object.<string, (string|Object.<string, (iconDBEntry|recolorCallback)>)>)>>}\n     */\n\n    /**\n     * Internal database of the known icons.\n     * Initially filled with the default icons.\n     * @type {iconDB}\n     */\n    __db: null,\n\n    /**\n     * Insert or overwrite one or many icons into the database. The parameter\n     * might be a full hash of icon definitions or a single one consisting out of\n     * a name and a URI path. Optional further parameters are a \"type\" and a\n     * flavour.\n     * @param {string} name\n     * @param {string} uri\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color\n     * @param {string?} styling\n     * @param {string?} dynamic\n     * @param {string?} source\n     */\n    insert(name, uri, type = '*', flavour = '*', color = '*', styling = undefined, dynamic = '', source = undefined) {\n      if (!this.__db[name]) {\n        this.__db[name] = {};\n      }\n      if (source) {\n        this.__db[name].source = source;\n      }\n      if (!this.__db[name][type]) {\n        this.__db[name][type] = {};\n      }\n      if (!this.__db[name][type][flavour]) {\n        this.__db[name][type][flavour] = {};\n      }\n\n      if (dynamic && window[dynamic]) {\n        this.__db[name][type][flavour][color] = window[dynamic](uri);\n      } else if (dynamic && cv.util.IconTools[dynamic]) {\n        this.__db[name][type][flavour][color] = cv.util.IconTools[dynamic](uri);\n      } else {\n        this.__db[name][type][flavour][color] = {\n          uri: uri,\n          styling: styling\n        };\n      }\n    },\n\n    /**\n     * Get the icon information for a name.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @return {(string|recolorCallback|undefined)} The URI for the icon - or \"undefined\" if not known\n     */\n    get(name, type = '*', flavour = '*', color = '*') {\n      if (!this.__db[name]) {\n        return (a, b, c, asText) => (asText ? '[unknown]' : document.createTextNode('[unknown]'));\n      }\n      if (!this.__db[name][type]) {\n        type = '*'; // undefined -> use default\n      }\n      let all;\n      if (typeof this.__db[name][type] === 'string') {\n        type = this.__db[name][type]; // redirect link\n        if (type.split('/').length > 1) {\n          all = type.split('/');\n          type = all.shift();\n          if (flavour === undefined) {\n            flavour = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour]) {\n        flavour = '*'; // undefined -> use default\n      }\n      if (typeof this.__db[name][type][flavour] === 'string') {\n        flavour = this.__db[name][type][flavour]; // redirect link\n        if (flavour.split('/').length > 1) {\n          all = flavour.split('/');\n          flavour = all.shift();\n          if (!color) {\n            color = all.shift();\n          }\n        }\n      }\n      if (!this.__db[name][type][flavour][color]) {\n        if (/\\.svg(#.+)?$/.test(this.__db[name][type][flavour]['*'].uri)) {\n          // SVGs can be dynamically recolored, so create new entry for this color\n          this.__db[name][type][flavour][color] = Object.assign({}, this.__db[name][type][flavour]['*']);\n        } else {\n          color = '*'; // undefined -> use default\n        }\n      }\n      // handle a generic mapping function\n      if (typeof this.__db[name][type][flavour]['*'] === 'function') {\n        return this.__db[name][type][flavour]['*'];\n      }\n      if (typeof this.__db[name][type][flavour][color] === 'string') {\n        color = this.__db[name][type][flavour][color];\n      } // redirect link\n      return this.__db[name][type][flavour][color];\n    },\n\n    getURI() {\n      const i = this.get.apply(this, arguments);\n      if (i) {\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Get the icon - either as DOM element (`asText = false`) or as string\n     * (`asText = true`).\n     * When it is returned as string and it was added to the DOM, the\n     * fillIcons method must be called to fill missing content (e.g. the\n     * <canvas> icons.\n     *\n     * @param {string} name\n     * @param {string?} type\n     * @param {string?} flavour\n     * @param {string?} color (only relevant for monochrome icons)\n     * @param {string?} styling\n     * @param {string?} iconclass\n     * @param {boolean?} asText\n     */\n    getIconElement(name, type, flavour, color, styling = '', iconclass = '', asText = false) {\n      const i = this.get(name, type, flavour, color);\n      if (i) {\n        if (i.icon && !styling && typeof i !== 'function' && !asText) {\n          return i.icon;\n        }\n\n        // fetch and cache image\n        if (!styling) {\n          styling = i.styling;\n        }\n\n        let classes = 'icon';\n        if (iconclass) {\n          classes = classes + ' custom_' + iconclass;\n        }\n\n        if (typeof i === 'function') {\n          if (asText) {\n            return i(color, styling, classes, true);\n          }\n          i.icon = i(color, styling, classes, false);\n        } else {\n          if (color) {\n            styling += ';color:' + color;\n          }\n          let icon = /\\.svg#.*?$/.test(i.uri) // SVG with fragment identifier?\n            ? '<svg class=\"' +\n              classes +\n              '\" style=\"' +\n              (styling ? styling : '') +\n              '\"><use href=\"' +\n              qx.util.ResourceManager.getInstance().toUri(i.uri) +\n              '\"></use></svg>'\n            : '<img class=\"' +\n              classes +\n              '\" src=\"' +\n              qx.util.ResourceManager.getInstance().toUri(i.uri) +\n              '\" style=\"' +\n              (styling ? styling : '') +\n              '\"/>';\n          if (asText) {\n            return icon;\n          }\n          let template = document.createElement('template');\n          template.innerHTML = icon;\n          i.icon = template.content.firstChild;\n        }\n        return i.icon;\n      }\n      return asText ? '' : null;\n    },\n\n    /**\n     * Provide a value that can be used by cv.ui.manager.basic.Image to display the icon on an qooxdoo widget.\n     * @param {string} name\n     * @param {string?} classes - optional css classes used in the svg icon code (default is 'icon')\n     * @returns {string}\n     */\n    getIconSource(name, classes) {\n      const i = this.get(name);\n      if (i) {\n        if (!classes) {\n          classes = 'icon';\n        }\n        if (typeof i === 'function') {\n          const res = i(undefined, undefined, classes, true);\n          if (res.startsWith('<canvas')) {\n            // no support for canvas as icon preview\n            return '';\n          }\n          return res;\n        }\n        if (/\\.svg#.*?$/.test(i.uri)) {\n          return (\n            '<svg class=\"' +\n            classes +\n            '\"><use href=\"' +\n            qx.util.ResourceManager.getInstance().toUri(i.uri) +\n            '\"></use></svg>'\n          );\n        }\n        return qx.util.ResourceManager.getInstance().toUri(i.uri);\n      }\n      return '';\n    },\n\n    /**\n     * Fill the icons in the array.\n     * @param array\n     */\n    fillIcons(array) {\n      array.forEach(cv.util.IconTools.fillRecoloredIcon, cv.util.IconTools);\n    },\n\n    /**\n     * List all known icons\n     *\n     *\n     * @return {string[]} List of all known icon names\n     */\n    list() {\n      return Object.keys(this.__db);\n    },\n\n    /**\n     * Return icon database for debuging purposes - use ONLY for debugging as it's\n     * circumventing the data hiding and exposes a writeable reference to the\n     * database object!\n     *\n     *\n     * @return {Object} The icon database\n     */\n    debug() {\n      return this.__db;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}