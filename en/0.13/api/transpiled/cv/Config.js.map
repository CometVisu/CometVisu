{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "Maturity",
    "release",
    "development",
    "treePath",
    "currentPageId",
    "libraryCheck",
    "maxMobileScreenWidth",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "scrollSpeed",
    "defaultColumns",
    "minColumnWidth",
    "enableAddressQueue",
    "backend",
    "backendLoginUrl",
    "configSuffix",
    "clientDesign",
    "clientID",
    "use_maturity",
    "pluginsToLoad",
    "loadManager",
    "managerOptions",
    "server",
    "configSettings",
    "mappings",
    "stylings",
    "usedRowspans",
    "iconsFromConfig",
    "credentials",
    "username",
    "password",
    "bindClickToWidget",
    "rememberLastPage",
    "lazyLoading",
    "timeoutStructureLoad",
    "designStructureMap",
    "pure",
    "tile",
    "loadedStructure",
    "sentryEnabled",
    "reporting",
    "enableLogging",
    "configServer",
    "useServiceWorker",
    "enableServiceWorkerCache",
    "defaultManifest",
    "getStructure",
    "design",
    "getDesign",
    "structure",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "indexOf",
    "guessIfProxied",
    "cv",
    "io",
    "BackendConnections",
    "getClient",
    "getServer",
    "Error",
    "addMapping",
    "name",
    "mapping",
    "getMapping",
    "hasMapping",
    "clearMappings",
    "addStyling",
    "styling",
    "getStyling",
    "hasStyling",
    "defer",
    "req",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "queryKey",
    "Config",
    "parseInt",
    "enableQueue",
    "URL",
    "undefined",
    "startpage",
    "reportErrors",
    "Sentry",
    "transactionId",
    "Math",
    "random",
    "toString",
    "substr",
    "setTag",
    "Version",
    "DATE",
    "BRANCH",
    "keys",
    "TAGS",
    "forEach",
    "tag",
    "request",
    "testMode",
    "Client",
    "TEST_MODE",
    "config",
    "forceReload",
    "core",
    "Environment",
    "get",
    "enableCache",
    "log",
    "Logger",
    "warn",
    "ConfigCache",
    "clear",
    "manager",
    "hash",
    "action",
    "open",
    "data",
    "forceDevice",
    "mobileDevice",
    "maturity",
    "url_maturity",
    "isNaN",
    "navigator",
    "protocol",
    "host"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Config.js"
  ],
  "sourcesContent": [
    "/* Config.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Main settings that can be accessed from anywhere inside the Application\n */\nqx.Class.define('cv.Config', {\n  type: 'static',\n\n  statics: {\n    /**\n     * Define ENUM of maturity levels for features, so that e.g. the editor can\n     * ignore some widgets when they are not supported yet\n     */\n    Maturity: {\n      release: 0,\n      development: 1\n    },\n\n    /**\n     * The current path tree\n     * @type {String}\n     */\n    treePath: '',\n\n    /**\n     * Path to the current page\n     * @type {String}\n     */\n    currentPageId: null,\n\n    /**\n     * @type {Boolean}\n     */\n    libraryCheck: true,\n    /**\n     * Threshold where the mobile.css is loaded\n     * @type {Number}\n     */\n    maxMobileScreenWidth: 599,\n    /**\n     * Threshold where colspan-s is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanS: 599,\n    /**\n     * threshold where colspan-m is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanM: 839,\n    /**\n     * Default scrolling speed for page changes (in ms)\n     * @type {Number}\n     */\n    scrollSpeed: 400,\n\n    /**\n     * Default number of colums the layout should use\n     * @type {Number}\n     */\n    defaultColumns: 12,\n    /**\n     * Minimum column width\n     * @type {Number}\n     */\n    minColumnWidth: 120,\n\n    /**\n     * If true, the client only loads the states for the widgets that are part of the start page at first\n     * read request (should increase the performance when huge config files are used)\n     * @type {Boolean}\n     */\n    enableAddressQueue: false,\n\n    /**\n     * Type of the used backend (*default*, *openhab* or *openhab2*)\n     * @type {String}\n     */\n    backend: null,\n    /**\n     * Initial URL to the backend\n     * @type {String}\n     */\n    backendLoginUrl: null,\n    /**\n     * @type {String}\n     */\n    configSuffix: null,\n    /**\n     * The design currently used\n     * @type {String}\n     */\n    clientDesign: '',\n    /**\n     * The (optional) ID of this client instance\n     * @type {String|null}\n     */\n    clientID: null,\n    /**\n     * Maturity level\n     * @type {var}\n     */\n    use_maturity: false,\n\n    /**\n     * Default plugins to load, that are not controlled by the config (e.g. some backends can load own plugins)\n     */\n    pluginsToLoad: [],\n\n    /**\n     * Load the manager directly, no config\n     * @type {boolean}\n     */\n    loadManager: false,\n\n    /**\n     * Optional settings for manager loading\n     * @type {Map}\n     */\n    managerOptions: {},\n\n    /**\n     * Optional settings for backend defined by server\n     */\n    server: {},\n\n    /**\n     * All configuration and settings from the current configuration\n     * (Note: all settings that need to be cached must be put in here)\n     */\n    configSettings: {\n      mappings: {},\n      stylings: {},\n      /**\n       * Stores the rowspans used by the current confid\n       * @type {Map} of rowspan-value as key and true as value\n       */\n      usedRowspans: {},\n      pluginsToLoad: [],\n\n      /**\n       * Array with alls icons defined in the current config file\n       * @type {Array}\n       */\n      iconsFromConfig: [],\n      /**\n       * Credentials for Backend authentication, username/token and optional password\n       */\n      credentials: {\n        username: null,\n        password: null\n      },\n\n      bindClickToWidget: false\n    },\n\n    /**\n     * Store last visited page in LocalStorage\n     */\n    rememberLastPage: false,\n\n    /**\n     * If enabled the widget instances are created on demand. Note: this must only be used when\n     * cache is valid!\n     * @type {Boolean}\n     */\n    lazyLoading: false,\n\n    /**\n     * Timeout till when all structure parts should be loaded. Only very slow\n     * systems need to increase this value.\n     * @type {number}\n     */\n    timeoutStructureLoad: 2000,\n\n    /**\n     * Defines which structure is supported by which designs\n     */\n    designStructureMap: {\n      pure: [\n        // broken: 'alaska',\n        // broken: 'alaska_slim',\n        'discreet',\n        'discreet_sand',\n        'discreet_slim',\n        'metal',\n        'pitchblack',\n        // broken: 'planet',\n        'pure'\n      ],\n\n      tile: ['tile']\n    },\n\n    /**\n     * Currently loaded structure\n     */\n    loadedStructure: '',\n\n    /**\n     * Wether the error reporting with sentry is enabled or not\n     */\n    sentryEnabled: false,\n\n    /**\n     * If enabled the user interaction gets logged\n     */\n    reporting: false,\n\n    /**\n     * Set console logging\n     */\n    enableLogging: true,\n\n    /**\n     * The server that responded to the config request\n     */\n    configServer: null,\n\n    /**\n     * If the CometVisu can use service workers\n     */\n    useServiceWorker: false,\n\n    enableServiceWorkerCache: true,\n\n    defaultManifest: {\n      'short_name': 'CometVisu',\n      'name': 'CometVisu',\n      'start_url': 'index.html',\n      'theme_color': '#000',\n      'background_color': '#000',\n      'icons': [\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_36.png',\n          'sizes': '36x36',\n          'type': 'image/png',\n          'density': '0.75',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_48.png',\n          'sizes': '48x48',\n          'type': 'image/png',\n          'density': '1.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_72.png',\n          'sizes': '72x72',\n          'type': 'image/png',\n          'density': '1.5',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_96.png',\n          'sizes': '96x96',\n          'type': 'image/png',\n          'density': '2.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_144.png',\n          'sizes': '144x144',\n          'type': 'image/png',\n          'density': '3.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_192.png',\n          'sizes': '192x192',\n          'type': 'image/png',\n          'density': '4.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_512.png',\n          'sizes': '512x512',\n          'type': 'image/png',\n          'density': '4.0',\n          'purpose': 'any'\n        }\n      ],\n      'display': 'standalone',\n      'orientation': 'any'\n    },\n\n    /**\n     * Get the structure that is related to this design\n     * @param design {String?} name of the design\n     * @return {String} name of the structure\n     */\n    getStructure(design) {\n      if (!design) {\n        design = this.getDesign();\n      }\n      for (let structure in this.designStructureMap) {\n        if (Object.prototype.hasOwnProperty.call(this.designStructureMap, structure)) {\n          if (this.designStructureMap[structure].indexOf(design) >= 0) {\n            return 'structure-' + structure;\n          }\n        }\n      }\n      // fallback to pure\n      return 'structure-pure';\n    },\n\n    /**\n     * This method tries to guess if the CometVisu is running on a proxied webserver.\n     * (by comparing if the visu_config.xml-File has been delivered from another server than the\n     * loging response). As this is just an assumption, you should not treat this result as reliable.\n     */\n    guessIfProxied() {\n      if (this.configServer === null || cv.io.BackendConnections.getClient().getServer() === null) {\n        throw new Error('not ready yet');\n      }\n      return this.configServer !== cv.io.BackendConnections.getClient().getServer();\n    },\n\n    addMapping(name, mapping) {\n      this.configSettings.mappings[name] = mapping;\n    },\n\n    getMapping(name) {\n      return this.configSettings.mappings[name];\n    },\n\n    hasMapping(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.mappings, name);\n    },\n\n    clearMappings() {\n      this.configSettings.mappings = {};\n    },\n\n    addStyling(name, styling) {\n      this.configSettings.stylings[name] = styling;\n    },\n\n    getStyling(name) {\n      return this.configSettings.stylings[name];\n    },\n\n    hasStyling(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.stylings, name);\n    },\n\n    getDesign() {\n      return this.clientDesign || this.configSettings.clientDesign;\n    }\n  },\n\n  defer(statics) {\n    const req = qx.util.Uri.parseUri(window.location.href);\n\n    if (req.queryKey.timeoutStructureLoad) {\n      cv.Config.timeoutStructureLoad = parseInt(req.queryKey.timeoutStructureLoad, 10);\n    }\n\n    if (req.queryKey.enableQueue) {\n      cv.Config.enableAddressQueue = true;\n    }\n\n    if (req.queryKey.libraryCheck) {\n      cv.Config.libraryCheck = req.queryKey.libraryCheck !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.backend) {\n      cv.Config.URL = { backend: req.queryKey.backend };\n    } else {\n      cv.Config.URL = { backend: undefined };\n    }\n\n    if (req.queryKey.clientID) {\n      cv.Config.clientID = req.queryKey.clientID;\n    }\n\n    if (req.queryKey.design) {\n      cv.Config.clientDesign = req.queryKey.design;\n    }\n\n    if (req.queryKey.startpage) {\n      cv.Config.startpage = req.queryKey.startpage;\n    }\n\n    if (req.queryKey.reportErrors) {\n      if (window.Sentry) {\n        cv.Config.sentryEnabled = true;\n        // generate unique transactionId and set as Sentry tag\n        cv.Config.transactionId = Math.random().toString(36).substr(2, 9);\n        Sentry.setTag('transaction_id', cv.Config.transactionId);\n        Sentry.setTag('build.date', cv.Version.DATE);\n        Sentry.setTag('build.branch', cv.Version.BRANCH);\n        Object.keys(cv.Version.TAGS).forEach(function (tag) {\n          Sentry.setTag(tag, cv.Version.TAGS[tag]);\n        });\n      }\n    }\n\n    // store for later usage\n    cv.Config.request = req;\n\n    if (qx.core.Environment.get('cv.testMode') !== false) {\n      cv.Config.testMode = true;\n    } else if (req.queryKey.testMode) {\n      cv.Config.testMode = req.queryKey.testMode === 'true' || req.queryKey.testMode === '1';\n    }\n\n    // propagate to the client\n    cv.io.Client.TEST_MODE = cv.Config.testMode;\n\n    if (req.queryKey.config) {\n      cv.Config.configSuffix = req.queryKey.config;\n    }\n\n    if (req.queryKey.forceReload) {\n      cv.Config.forceReload = req.queryKey.forceReload !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.reporting) {\n      cv.Config.reporting = req.queryKey.reporting === 'true';\n    }\n\n    // caching is only possible when localStorage is available\n    if (qx.core.Environment.get('html.storage.local') === false) {\n      cv.Config.enableCache = false;\n      qx.log.Logger.warn(\n        statics,\n        'localStorage is not available in your browser. Some advanced features, like caching will not work!'\n      );\n    } else if (req.queryKey.enableCache === 'invalid') {\n      cv.ConfigCache.clear(cv.Config.configSuffix);\n      cv.Config.enableCache = true;\n    } else {\n      cv.Config.enableCache = req.queryKey.enableCache\n        ? req.queryKey.enableCache === 'true'\n        : !qx.core.Environment.get('qx.debug');\n    }\n\n    cv.Config.enableLogging = qx.core.Environment.get('html.console');\n    if (req.queryKey.log === 'false') {\n      cv.Config.enableLogging = false;\n    } else if (req.queryKey.log === 'true') {\n      cv.Config.enableLogging = true;\n    }\n\n    cv.Config.loadManager = cv.Config.request.queryKey.manager || window.location.hash === '#manager';\n    cv.Config.managerOptions = {\n      action: cv.Config.request.queryKey.open ? 'open' : '',\n      data: cv.Config.request.queryKey.open ? cv.Config.request.queryKey.open : undefined\n    };\n\n    // \"Bug\"-Fix for ID: 3204682 \"Caching on web server\"\n    // Config isn't a real fix for the problem as that's part of the web browser,\n    // but\n    // it helps to avoid the problems on the client, e.g. when the config file\n    // has changed but the browser doesn't even ask the server about it...\n    cv.Config.forceReload = true;\n\n    if (req.queryKey.forceDevice) {\n      // overwrite detection when set by URL\n      switch (req.queryKey.forceDevice) {\n        case 'mobile':\n          cv.Config.mobileDevice = true;\n          break;\n\n        case 'nonmobile':\n          cv.Config.mobileDevice = false;\n          break;\n      }\n    }\n\n    // Disable features that aren't ready yet\n    // Config can be overwritten in the URL with the parameter \"maturity\"\n\n    if (req.queryKey.maturity) {\n      cv.Config.url_maturity = req.queryKey.maturity;\n      if (!isNaN(cv.Config.url_maturity - 0)) {\n        cv.Config.use_maturity = cv.Config.url_maturity - 0; // given directly as number\n      } else {\n        cv.Config.use_maturity = statics.Maturity[cv.Config.url_maturity]; // or as the ENUM name\n      }\n    }\n\n    if (isNaN(cv.Config.use_maturity)) {\n      cv.Config.use_maturity = statics.Maturity.release; // default to release\n    }\n\n    cv.Config.useServiceWorker = 'serviceWorker' in navigator && (req.protocol === 'https' || req.host === 'localhost');\n\n    if (cv.Config.useServiceWorker) {\n      if (qx.core.Environment.get('qx.debug')) {\n        // disable service worker in dev environment unless the user wants it\n        cv.Config.useServiceWorker = req.queryKey.worker === 'true';\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}