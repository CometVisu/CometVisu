{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "Maturity",
    "release",
    "development",
    "treePath",
    "currentPageId",
    "libraryCheck",
    "maxMobileScreenWidth",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "scrollSpeed",
    "defaultColumns",
    "minColumnWidth",
    "enableAddressQueue",
    "backend",
    "backendLoginUrl",
    "configSuffix",
    "clientDesign",
    "use_maturity",
    "pluginsToLoad",
    "loadManager",
    "managerOptions",
    "server",
    "configSettings",
    "mappings",
    "stylings",
    "usedRowspans",
    "iconsFromConfig",
    "credentials",
    "username",
    "password",
    "bindClickToWidget",
    "rememberLastPage",
    "lazyLoading",
    "designStructureMap",
    "pure",
    "tile",
    "loadedStructure",
    "sentryEnabled",
    "reporting",
    "enableLogging",
    "configServer",
    "useServiceWorker",
    "enableServiceWorkerCache",
    "defaultManifest",
    "getStructure",
    "design",
    "getDesign",
    "structure",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "indexOf",
    "guessIfProxied",
    "cv",
    "io",
    "BackendConnections",
    "getClient",
    "getServer",
    "Error",
    "addMapping",
    "name",
    "mapping",
    "getMapping",
    "hasMapping",
    "clearMappings",
    "addStyling",
    "styling",
    "getStyling",
    "hasStyling",
    "defer",
    "req",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "queryKey",
    "enableQueue",
    "Config",
    "URL",
    "undefined",
    "startpage",
    "reportErrors",
    "Sentry",
    "transactionId",
    "Math",
    "random",
    "toString",
    "substr",
    "configureScope",
    "scope",
    "setTag",
    "Version",
    "DATE",
    "BRANCH",
    "keys",
    "TAGS",
    "forEach",
    "tag",
    "request",
    "testMode",
    "Client",
    "TEST_MODE",
    "config",
    "forceReload",
    "core",
    "Environment",
    "get",
    "enableCache",
    "log",
    "Logger",
    "warn",
    "ConfigCache",
    "clear",
    "manager",
    "hash",
    "action",
    "open",
    "data",
    "forceDevice",
    "mobileDevice",
    "maturity",
    "url_maturity",
    "isNaN",
    "navigator",
    "protocol",
    "host"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Config.js"
  ],
  "sourcesContent": [
    "/* Config.js\n *\n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n/**\n * Main settings that an be accessed from anywhere inside the Application\n */\nqx.Class.define('cv.Config', {\n  type: 'static',\n\n  statics: {\n    /**\n     * Define ENUM of maturity levels for features, so that e.g. the editor can\n     * ignore some widgets when they are not supported yet\n     */\n    Maturity: {\n      release: 0,\n      development: 1\n    },\n\n    /**\n     * The current path tree\n     * @type {String}\n     */\n    treePath: '',\n\n    /**\n     * Path to the current page\n     * @type {String}\n     */\n    currentPageId: null,\n\n    /**\n     * @type {Boolean}\n     */\n    libraryCheck: true,\n    /**\n     * Threshold where the mobile.css is loaded\n     * @type {Number}\n     */\n    maxMobileScreenWidth: 599,\n    /**\n     * Threshold where colspan-s is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanS: 599,\n    /**\n     * threshold where colspan-m is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanM: 839,\n    /**\n     * Default scrolling speed for page changes (in ms)\n     * @type {Number}\n     */\n    scrollSpeed: 400,\n\n    /**\n     * Default number of colums the layout should use\n     * @type {Number}\n     */\n    defaultColumns: 12,\n    /**\n     * Minimum column width\n     * @type {Number}\n     */\n    minColumnWidth: 120,\n\n    /**\n     * If true, the client only loads the states for the widgets that are part of the start page at first\n     * read request (should increase the performance when huge config files are used)\n     * @type {Boolean}\n     */\n    enableAddressQueue: false,\n\n    /**\n     * Type of the used backend (*default*, *openhab* or *openhab2*)\n     * @type {String}\n     */\n    backend: null,\n    /**\n     * Initial URL to the backend\n     * @type {String}\n     */\n    backendLoginUrl: null,\n    /**\n     * @type {String}\n     */\n    configSuffix: null,\n    /**\n     * The design currently used\n     * @type {String}\n     */\n    clientDesign: '',\n    /**\n     * Maturity level\n     * @type {var}\n     */\n    use_maturity: false,\n\n    /**\n     * Default plugins to load, that are not controlled by the config (e.g. some backends can load own plugins)\n     */\n    pluginsToLoad: [],\n\n    /**\n     * Load the manager directly, no config\n     * @type {boolean}\n     */\n    loadManager: false,\n\n    /**\n     * Optional settings for manager loading\n     * @type {Map}\n     */\n    managerOptions: {},\n\n    /**\n     * Optional settings for backend defined by server\n     */\n    server: {},\n\n    /**\n     * All configuration and settings from the current configuration\n     * (Note: all settings that need to be cached must be put in here)\n     */\n    configSettings: {\n      mappings: {},\n      stylings: {},\n      /**\n       * Stores the rowspans used by the current confid\n       * @type {Map} of rowspan-value as key and true as value\n       */\n      usedRowspans: {},\n      pluginsToLoad: [],\n\n      /**\n       * Array with alls icons defined in the current config file\n       * @type {Array}\n       */\n      iconsFromConfig: [],\n      /**\n       * Credentials for Backend authentication, username/token and optional password\n       */\n      credentials: {\n        username: null,\n        password: null\n      },\n\n      bindClickToWidget: false\n    },\n\n    /**\n     * Store last visited page in LocalStorage\n     */\n    rememberLastPage: false,\n\n    /**\n     * If enabled the widget instances are created on demand. Note: this must only be used when\n     * cache is valid!\n     * @type {Boolean}\n     */\n    lazyLoading: false,\n\n    /**\n     * Defines which structure is supported by which designs\n     */\n    designStructureMap: {\n      pure: [\n        // broken: 'alaska',\n        // broken: 'alaska_slim',\n        'discreet',\n        'discreet_sand',\n        'discreet_slim',\n        'metal',\n        'pitchblack',\n        // broken: 'planet',\n        'pure'\n      ],\n\n      tile: ['tile']\n    },\n\n    /**\n     * Currently loaded structure\n     */\n    loadedStructure: '',\n\n    /**\n     * Wether the error reporting with sentry is enabled or not\n     */\n    sentryEnabled: false,\n\n    /**\n     * If enabled the user interaction gets logged\n     */\n    reporting: false,\n\n    /**\n     * Set console logging\n     */\n    enableLogging: true,\n\n    /**\n     * The server that responded to the config request\n     */\n    configServer: null,\n\n    /**\n     * If the CometVisu can use service workers\n     */\n    useServiceWorker: false,\n\n    enableServiceWorkerCache: true,\n\n    defaultManifest: {\n      'short_name': 'CometVisu',\n      'name': 'CometVisu',\n      'start_url': 'index.html',\n      'theme_color': '#000',\n      'background_color': '#000',\n      'icons': [\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_36.png',\n          'sizes': '36x36',\n          'type': 'image/png',\n          'density': '0.75',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_48.png',\n          'sizes': '48x48',\n          'type': 'image/png',\n          'density': '1.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_72.png',\n          'sizes': '72x72',\n          'type': 'image/png',\n          'density': '1.5',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_96.png',\n          'sizes': '96x96',\n          'type': 'image/png',\n          'density': '2.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_144.png',\n          'sizes': '144x144',\n          'type': 'image/png',\n          'density': '3.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_192.png',\n          'sizes': '192x192',\n          'type': 'image/png',\n          'density': '4.0',\n          'purpose': 'any'\n        },\n        {\n          'src': 'resource/icons/comet_webapp_icon_android_512.png',\n          'sizes': '512x512',\n          'type': 'image/png',\n          'density': '4.0',\n          'purpose': 'any'\n        }\n      ],\n      'display': 'standalone',\n      'orientation': 'any'\n    },\n\n    /**\n     * Get the structure that is related to this design\n     * @param design {String?} name of the design\n     * @return {String} name of the structure\n     */\n    getStructure(design) {\n      if (!design) {\n        design = this.getDesign();\n      }\n      for (let structure in this.designStructureMap) {\n        if (Object.prototype.hasOwnProperty.call(this.designStructureMap, structure)) {\n          if (this.designStructureMap[structure].indexOf(design) >= 0) {\n            return 'structure-' + structure;\n          }\n        }\n      }\n      // fallback to pure\n      return 'structure-pure';\n    },\n\n    /**\n     * This method tries to guess if the CometVisu is running on a proxied webserver.\n     * (by comparing if the visu_config.xml-File has been delivered from another server than the\n     * loging response). As this is just an assumption, you should not treat this result as reliable.\n     */\n    guessIfProxied() {\n      if (this.configServer === null || cv.io.BackendConnections.getClient().getServer() === null) {\n        throw new Error('not ready yet');\n      }\n      return this.configServer !== cv.io.BackendConnections.getClient().getServer();\n    },\n\n    addMapping(name, mapping) {\n      this.configSettings.mappings[name] = mapping;\n    },\n\n    getMapping(name) {\n      return this.configSettings.mappings[name];\n    },\n\n    hasMapping(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.mappings, name);\n    },\n\n    clearMappings() {\n      this.configSettings.mappings = {};\n    },\n\n    addStyling(name, styling) {\n      this.configSettings.stylings[name] = styling;\n    },\n\n    getStyling(name) {\n      return this.configSettings.stylings[name];\n    },\n\n    hasStyling(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.stylings, name);\n    },\n\n    getDesign() {\n      return this.clientDesign || this.configSettings.clientDesign;\n    }\n  },\n\n  defer(statics) {\n    const req = qx.util.Uri.parseUri(window.location.href);\n\n    if (req.queryKey.enableQueue) {\n      cv.Config.enableAddressQueue = true;\n    }\n\n    if (req.queryKey.libraryCheck) {\n      cv.Config.libraryCheck = req.queryKey.libraryCheck !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.backend) {\n      cv.Config.URL = { backend: req.queryKey.backend };\n    } else {\n      cv.Config.URL = { backend: undefined };\n    }\n\n    if (req.queryKey.design) {\n      cv.Config.clientDesign = req.queryKey.design;\n    }\n\n    if (req.queryKey.startpage) {\n      cv.Config.startpage = req.queryKey.startpage;\n    }\n\n    if (req.queryKey.reportErrors) {\n      if (window.Sentry) {\n        cv.Config.sentryEnabled = true;\n        // generate unique transactionId and set as Sentry tag\n        cv.Config.transactionId = Math.random().toString(36).substr(2, 9);\n        Sentry.configureScope(function (scope) {\n          scope.setTag('transaction_id', cv.Config.transactionId);\n          scope.setTag('build.date', cv.Version.DATE);\n          scope.setTag('build.branch', cv.Version.BRANCH);\n          Object.keys(cv.Version.TAGS).forEach(function (tag) {\n            scope.setTag(tag, cv.Version.TAGS[tag]);\n          });\n        });\n      }\n    }\n\n    // store for later usage\n    cv.Config.request = req;\n\n    if (qx.core.Environment.get('cv.testMode') !== false) {\n      cv.Config.testMode = true;\n    } else if (req.queryKey.testMode) {\n      cv.Config.testMode = req.queryKey.testMode === 'true' || req.queryKey.testMode === '1';\n    }\n\n    // propagate to the client\n    cv.io.Client.TEST_MODE = cv.Config.testMode;\n\n    if (req.queryKey.config) {\n      cv.Config.configSuffix = req.queryKey.config;\n    }\n\n    if (req.queryKey.forceReload) {\n      cv.Config.forceReload = req.queryKey.forceReload !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.reporting) {\n      cv.Config.reporting = req.queryKey.reporting === 'true';\n    }\n\n    // caching is only possible when localStorage is available\n    if (qx.core.Environment.get('html.storage.local') === false) {\n      cv.Config.enableCache = false;\n      qx.log.Logger.warn(\n        statics,\n        'localStorage is not available in your browser. Some advanced features, like caching will not work!'\n      );\n    } else if (req.queryKey.enableCache === 'invalid') {\n      cv.ConfigCache.clear(cv.Config.configSuffix);\n      cv.Config.enableCache = true;\n    } else {\n      cv.Config.enableCache = req.queryKey.enableCache\n        ? req.queryKey.enableCache === 'true'\n        : !qx.core.Environment.get('qx.debug');\n    }\n\n    cv.Config.enableLogging = qx.core.Environment.get('html.console');\n    if (req.queryKey.log === 'false') {\n      cv.Config.enableLogging = false;\n    } else if (req.queryKey.log === 'true') {\n      cv.Config.enableLogging = true;\n    }\n\n    cv.Config.loadManager = cv.Config.request.queryKey.manager || window.location.hash === '#manager';\n    cv.Config.managerOptions = {\n      action: cv.Config.request.queryKey.open ? 'open' : '',\n      data: cv.Config.request.queryKey.open ? cv.Config.request.queryKey.open : undefined\n    };\n\n    // \"Bug\"-Fix for ID: 3204682 \"Caching on web server\"\n    // Config isn't a real fix for the problem as that's part of the web browser,\n    // but\n    // it helps to avoid the problems on the client, e.g. when the config file\n    // has changed but the browser doesn't even ask the server about it...\n    cv.Config.forceReload = true;\n\n    if (req.queryKey.forceDevice) {\n      // overwrite detection when set by URL\n      switch (req.queryKey.forceDevice) {\n        case 'mobile':\n          cv.Config.mobileDevice = true;\n          break;\n\n        case 'nonmobile':\n          cv.Config.mobileDevice = false;\n          break;\n      }\n    }\n\n    // Disable features that aren't ready yet\n    // Config can be overwritten in the URL with the parameter \"maturity\"\n\n    if (req.queryKey.maturity) {\n      cv.Config.url_maturity = req.queryKey.maturity;\n      if (!isNaN(cv.Config.url_maturity - 0)) {\n        cv.Config.use_maturity = cv.Config.url_maturity - 0; // given directly as number\n      } else {\n        cv.Config.use_maturity = statics.Maturity[cv.Config.url_maturity]; // or as the ENUM name\n      }\n    }\n\n    if (isNaN(cv.Config.use_maturity)) {\n      cv.Config.use_maturity = statics.Maturity.release; // default to release\n    }\n\n    cv.Config.useServiceWorker = 'serviceWorker' in navigator && (req.protocol === 'https' || req.host === 'localhost');\n\n    if (cv.Config.useServiceWorker) {\n      if (qx.core.Environment.get('qx.debug')) {\n        // disable service worker in dev environment unless the user wants it\n        cv.Config.useServiceWorker = req.queryKey.worker === 'true';\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,WAAhB,EAA6B;IAC3BC,IAAI,EAAE,QADqB;IAG3BC,OAAO,EAAE;MACP;AACJ;AACA;AACA;MACIC,QAAQ,EAAE;QACRC,OAAO,EAAE,CADD;QAERC,WAAW,EAAE;MAFL,CALH;;MAUP;AACJ;AACA;AACA;MACIC,QAAQ,EAAE,EAdH;;MAgBP;AACJ;AACA;AACA;MACIC,aAAa,EAAE,IApBR;;MAsBP;AACJ;AACA;MACIC,YAAY,EAAE,IAzBP;;MA0BP;AACJ;AACA;AACA;MACIC,oBAAoB,EAAE,GA9Bf;;MA+BP;AACJ;AACA;AACA;MACIC,sBAAsB,EAAE,GAnCjB;;MAoCP;AACJ;AACA;AACA;MACIC,sBAAsB,EAAE,GAxCjB;;MAyCP;AACJ;AACA;AACA;MACIC,WAAW,EAAE,GA7CN;;MA+CP;AACJ;AACA;AACA;MACIC,cAAc,EAAE,EAnDT;;MAoDP;AACJ;AACA;AACA;MACIC,cAAc,EAAE,GAxDT;;MA0DP;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,EAAE,KA/Db;;MAiEP;AACJ;AACA;AACA;MACIC,OAAO,EAAE,IArEF;;MAsEP;AACJ;AACA;AACA;MACIC,eAAe,EAAE,IA1EV;;MA2EP;AACJ;AACA;MACIC,YAAY,EAAE,IA9EP;;MA+EP;AACJ;AACA;AACA;MACIC,YAAY,EAAE,EAnFP;;MAoFP;AACJ;AACA;AACA;MACIC,YAAY,EAAE,KAxFP;;MA0FP;AACJ;AACA;MACIC,aAAa,EAAE,EA7FR;;MA+FP;AACJ;AACA;AACA;MACIC,WAAW,EAAE,KAnGN;;MAqGP;AACJ;AACA;AACA;MACIC,cAAc,EAAE,EAzGT;;MA2GP;AACJ;AACA;MACIC,MAAM,EAAE,EA9GD;;MAgHP;AACJ;AACA;AACA;MACIC,cAAc,EAAE;QACdC,QAAQ,EAAE,EADI;QAEdC,QAAQ,EAAE,EAFI;;QAGd;AACN;AACA;AACA;QACMC,YAAY,EAAE,EAPA;QAQdP,aAAa,EAAE,EARD;;QAUd;AACN;AACA;AACA;QACMQ,eAAe,EAAE,EAdH;;QAed;AACN;AACA;QACMC,WAAW,EAAE;UACXC,QAAQ,EAAE,IADC;UAEXC,QAAQ,EAAE;QAFC,CAlBC;QAuBdC,iBAAiB,EAAE;MAvBL,CApHT;;MA8IP;AACJ;AACA;MACIC,gBAAgB,EAAE,KAjJX;;MAmJP;AACJ;AACA;AACA;AACA;MACIC,WAAW,EAAE,KAxJN;;MA0JP;AACJ;AACA;MACIC,kBAAkB,EAAE;QAClBC,IAAI,EAAE,CACJ;QACA;QACA,UAHI,EAIJ,eAJI,EAKJ,eALI,EAMJ,OANI,EAOJ,YAPI,EAQJ;QACA,MATI,CADY;QAalBC,IAAI,EAAE,CAAC,MAAD;MAbY,CA7Jb;;MA6KP;AACJ;AACA;MACIC,eAAe,EAAE,EAhLV;;MAkLP;AACJ;AACA;MACIC,aAAa,EAAE,KArLR;;MAuLP;AACJ;AACA;MACIC,SAAS,EAAE,KA1LJ;;MA4LP;AACJ;AACA;MACIC,aAAa,EAAE,IA/LR;;MAiMP;AACJ;AACA;MACIC,YAAY,EAAE,IApMP;;MAsMP;AACJ;AACA;MACIC,gBAAgB,EAAE,KAzMX;MA2MPC,wBAAwB,EAAE,IA3MnB;MA6MPC,eAAe,EAAE;QACf,cAAc,WADC;QAEf,QAAQ,WAFO;QAGf,aAAa,YAHE;QAIf,eAAe,MAJA;QAKf,oBAAoB,MALL;QAMf,SAAS,CACP;UACE,OAAO,iDADT;UAEE,SAAS,OAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,MAJb;UAKE,WAAW;QALb,CADO,EAQP;UACE,OAAO,iDADT;UAEE,SAAS,OAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CARO,EAeP;UACE,OAAO,iDADT;UAEE,SAAS,OAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CAfO,EAsBP;UACE,OAAO,iDADT;UAEE,SAAS,OAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CAtBO,EA6BP;UACE,OAAO,kDADT;UAEE,SAAS,SAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CA7BO,EAoCP;UACE,OAAO,kDADT;UAEE,SAAS,SAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CApCO,EA2CP;UACE,OAAO,kDADT;UAEE,SAAS,SAFX;UAGE,QAAQ,WAHV;UAIE,WAAW,KAJb;UAKE,WAAW;QALb,CA3CO,CANM;QAyDf,WAAW,YAzDI;QA0Df,eAAe;MA1DA,CA7MV;;MA0QP;AACJ;AACA;AACA;AACA;MACIC,YA/QO,wBA+QMC,MA/QN,EA+Qc;QACnB,IAAI,CAACA,MAAL,EAAa;UACXA,MAAM,GAAG,KAAKC,SAAL,EAAT;QACD;;QACD,KAAK,IAAIC,SAAT,IAAsB,KAAKd,kBAA3B,EAA+C;UAC7C,IAAIe,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKlB,kBAA1C,EAA8Dc,SAA9D,CAAJ,EAA8E;YAC5E,IAAI,KAAKd,kBAAL,CAAwBc,SAAxB,EAAmCK,OAAnC,CAA2CP,MAA3C,KAAsD,CAA1D,EAA6D;cAC3D,OAAO,eAAeE,SAAtB;YACD;UACF;QACF,CAVkB,CAWnB;;;QACA,OAAO,gBAAP;MACD,CA5RM;;MA8RP;AACJ;AACA;AACA;AACA;MACIM,cAnSO,4BAmSU;QACf,IAAI,KAAKb,YAAL,KAAsB,IAAtB,IAA8Bc,EAAE,CAACC,EAAH,CAAMC,kBAAN,CAAyBC,SAAzB,GAAqCC,SAArC,OAAqD,IAAvF,EAA6F;UAC3F,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;QACD;;QACD,OAAO,KAAKnB,YAAL,KAAsBc,EAAE,CAACC,EAAH,CAAMC,kBAAN,CAAyBC,SAAzB,GAAqCC,SAArC,EAA7B;MACD,CAxSM;MA0SPE,UA1SO,sBA0SIC,IA1SJ,EA0SUC,OA1SV,EA0SmB;QACxB,KAAKxC,cAAL,CAAoBC,QAApB,CAA6BsC,IAA7B,IAAqCC,OAArC;MACD,CA5SM;MA8SPC,UA9SO,sBA8SIF,IA9SJ,EA8SU;QACf,OAAO,KAAKvC,cAAL,CAAoBC,QAApB,CAA6BsC,IAA7B,CAAP;MACD,CAhTM;MAkTPG,UAlTO,sBAkTIH,IAlTJ,EAkTU;QACf,OAAOb,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAK7B,cAAL,CAAoBC,QAAzD,EAAmEsC,IAAnE,CAAP;MACD,CApTM;MAsTPI,aAtTO,2BAsTS;QACd,KAAK3C,cAAL,CAAoBC,QAApB,GAA+B,EAA/B;MACD,CAxTM;MA0TP2C,UA1TO,sBA0TIL,IA1TJ,EA0TUM,OA1TV,EA0TmB;QACxB,KAAK7C,cAAL,CAAoBE,QAApB,CAA6BqC,IAA7B,IAAqCM,OAArC;MACD,CA5TM;MA8TPC,UA9TO,sBA8TIP,IA9TJ,EA8TU;QACf,OAAO,KAAKvC,cAAL,CAAoBE,QAApB,CAA6BqC,IAA7B,CAAP;MACD,CAhUM;MAkUPQ,UAlUO,sBAkUIR,IAlUJ,EAkUU;QACf,OAAOb,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAK7B,cAAL,CAAoBE,QAAzD,EAAmEqC,IAAnE,CAAP;MACD,CApUM;MAsUPf,SAtUO,uBAsUK;QACV,OAAO,KAAK9B,YAAL,IAAqB,KAAKM,cAAL,CAAoBN,YAAhD;MACD;IAxUM,CAHkB;IA8U3BsD,KA9U2B,iBA8UrBvE,OA9UqB,EA8UZ;MACb,IAAMwE,GAAG,GAAG/E,EAAE,CAACgF,IAAH,CAAQC,GAAR,CAAYC,QAAZ,CAAqBC,MAAM,CAACC,QAAP,CAAgBC,IAArC,CAAZ;;MAEA,IAAIN,GAAG,CAACO,QAAJ,CAAaC,WAAjB,EAA8B;QAC5BzB,EAAE,CAAC0B,MAAH,CAAUpE,kBAAV,GAA+B,IAA/B;MACD;;MAED,IAAI2D,GAAG,CAACO,QAAJ,CAAazE,YAAjB,EAA+B;QAC7BiD,EAAE,CAAC0B,MAAH,CAAU3E,YAAV,GAAyBkE,GAAG,CAACO,QAAJ,CAAazE,YAAb,KAA8B,OAAvD,CAD6B,CACmC;MACjE;;MAED,IAAIkE,GAAG,CAACO,QAAJ,CAAajE,OAAjB,EAA0B;QACxByC,EAAE,CAAC0B,MAAH,CAAUC,GAAV,GAAgB;UAAEpE,OAAO,EAAE0D,GAAG,CAACO,QAAJ,CAAajE;QAAxB,CAAhB;MACD,CAFD,MAEO;QACLyC,EAAE,CAAC0B,MAAH,CAAUC,GAAV,GAAgB;UAAEpE,OAAO,EAAEqE;QAAX,CAAhB;MACD;;MAED,IAAIX,GAAG,CAACO,QAAJ,CAAajC,MAAjB,EAAyB;QACvBS,EAAE,CAAC0B,MAAH,CAAUhE,YAAV,GAAyBuD,GAAG,CAACO,QAAJ,CAAajC,MAAtC;MACD;;MAED,IAAI0B,GAAG,CAACO,QAAJ,CAAaK,SAAjB,EAA4B;QAC1B7B,EAAE,CAAC0B,MAAH,CAAUG,SAAV,GAAsBZ,GAAG,CAACO,QAAJ,CAAaK,SAAnC;MACD;;MAED,IAAIZ,GAAG,CAACO,QAAJ,CAAaM,YAAjB,EAA+B;QAC7B,IAAIT,MAAM,CAACU,MAAX,EAAmB;UACjB/B,EAAE,CAAC0B,MAAH,CAAU3C,aAAV,GAA0B,IAA1B,CADiB,CAEjB;;UACAiB,EAAE,CAAC0B,MAAH,CAAUM,aAAV,GAA0BC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAA1B;UACAL,MAAM,CAACM,cAAP,CAAsB,UAAUC,KAAV,EAAiB;YACrCA,KAAK,CAACC,MAAN,CAAa,gBAAb,EAA+BvC,EAAE,CAAC0B,MAAH,CAAUM,aAAzC;YACAM,KAAK,CAACC,MAAN,CAAa,YAAb,EAA2BvC,EAAE,CAACwC,OAAH,CAAWC,IAAtC;YACAH,KAAK,CAACC,MAAN,CAAa,cAAb,EAA6BvC,EAAE,CAACwC,OAAH,CAAWE,MAAxC;YACAhD,MAAM,CAACiD,IAAP,CAAY3C,EAAE,CAACwC,OAAH,CAAWI,IAAvB,EAA6BC,OAA7B,CAAqC,UAAUC,GAAV,EAAe;cAClDR,KAAK,CAACC,MAAN,CAAaO,GAAb,EAAkB9C,EAAE,CAACwC,OAAH,CAAWI,IAAX,CAAgBE,GAAhB,CAAlB;YACD,CAFD;UAGD,CAPD;QAQD;MACF,CAvCY,CAyCb;;;MACA9C,EAAE,CAAC0B,MAAH,CAAUqB,OAAV,GAAoB9B,GAApB;;MAIO,IAAIA,GAAG,CAACO,QAAJ,CAAawB,QAAjB,EAA2B;QAChChD,EAAE,CAAC0B,MAAH,CAAUsB,QAAV,GAAqB/B,GAAG,CAACO,QAAJ,CAAawB,QAAb,KAA0B,MAA1B,IAAoC/B,GAAG,CAACO,QAAJ,CAAawB,QAAb,KAA0B,GAAnF;MACD,CAhDY,CAkDb;;;MACAhD,EAAE,CAACC,EAAH,CAAMgD,MAAN,CAAaC,SAAb,GAAyBlD,EAAE,CAAC0B,MAAH,CAAUsB,QAAnC;;MAEA,IAAI/B,GAAG,CAACO,QAAJ,CAAa2B,MAAjB,EAAyB;QACvBnD,EAAE,CAAC0B,MAAH,CAAUjE,YAAV,GAAyBwD,GAAG,CAACO,QAAJ,CAAa2B,MAAtC;MACD;;MAED,IAAIlC,GAAG,CAACO,QAAJ,CAAa4B,WAAjB,EAA8B;QAC5BpD,EAAE,CAAC0B,MAAH,CAAU0B,WAAV,GAAwBnC,GAAG,CAACO,QAAJ,CAAa4B,WAAb,KAA6B,OAArD,CAD4B,CACkC;MAC/D;;MAED,IAAInC,GAAG,CAACO,QAAJ,CAAaxC,SAAjB,EAA4B;QAC1BgB,EAAE,CAAC0B,MAAH,CAAU1C,SAAV,GAAsBiC,GAAG,CAACO,QAAJ,CAAaxC,SAAb,KAA2B,MAAjD;MACD,CA/DY,CAiEb;;;MACA,IAAI9C,EAAE,CAACmH,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,oBAAxB,MAAkD,KAAtD,EAA6D;QAC3DvD,EAAE,CAAC0B,MAAH,CAAU8B,WAAV,GAAwB,KAAxB;QACAtH,EAAE,CAACuH,GAAH,CAAOC,MAAP,CAAcC,IAAd,CACElH,OADF,EAEE,oGAFF;MAID,CAND,MAMO,IAAIwE,GAAG,CAACO,QAAJ,CAAagC,WAAb,KAA6B,SAAjC,EAA4C;QACjDxD,EAAE,CAAC4D,WAAH,CAAeC,KAAf,CAAqB7D,EAAE,CAAC0B,MAAH,CAAUjE,YAA/B;QACAuC,EAAE,CAAC0B,MAAH,CAAU8B,WAAV,GAAwB,IAAxB;MACD,CAHM,MAGA;QACLxD,EAAE,CAAC0B,MAAH,CAAU8B,WAAV,GAAwBvC,GAAG,CAACO,QAAJ,CAAagC,WAAb,GACpBvC,GAAG,CAACO,QAAJ,CAAagC,WAAb,KAA6B,MADT,OAAxB;MAGD;;MAEDxD,EAAE,CAAC0B,MAAH,CAAUzC,aAAV,GAA0B/C,EAAE,CAACmH,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,CAA1B;;MACA,IAAItC,GAAG,CAACO,QAAJ,CAAaiC,GAAb,KAAqB,OAAzB,EAAkC;QAChCzD,EAAE,CAAC0B,MAAH,CAAUzC,aAAV,GAA0B,KAA1B;MACD,CAFD,MAEO,IAAIgC,GAAG,CAACO,QAAJ,CAAaiC,GAAb,KAAqB,MAAzB,EAAiC;QACtCzD,EAAE,CAAC0B,MAAH,CAAUzC,aAAV,GAA0B,IAA1B;MACD;;MAEDe,EAAE,CAAC0B,MAAH,CAAU7D,WAAV,GAAwBmC,EAAE,CAAC0B,MAAH,CAAUqB,OAAV,CAAkBvB,QAAlB,CAA2BsC,OAA3B,IAAsCzC,MAAM,CAACC,QAAP,CAAgByC,IAAhB,KAAyB,UAAvF;MACA/D,EAAE,CAAC0B,MAAH,CAAU5D,cAAV,GAA2B;QACzBkG,MAAM,EAAEhE,EAAE,CAAC0B,MAAH,CAAUqB,OAAV,CAAkBvB,QAAlB,CAA2ByC,IAA3B,GAAkC,MAAlC,GAA2C,EAD1B;QAEzBC,IAAI,EAAElE,EAAE,CAAC0B,MAAH,CAAUqB,OAAV,CAAkBvB,QAAlB,CAA2ByC,IAA3B,GAAkCjE,EAAE,CAAC0B,MAAH,CAAUqB,OAAV,CAAkBvB,QAAlB,CAA2ByC,IAA7D,GAAoErC;MAFjD,CAA3B,CAzFa,CA8Fb;MACA;MACA;MACA;MACA;;MACA5B,EAAE,CAAC0B,MAAH,CAAU0B,WAAV,GAAwB,IAAxB;;MAEA,IAAInC,GAAG,CAACO,QAAJ,CAAa2C,WAAjB,EAA8B;QAC5B;QACA,QAAQlD,GAAG,CAACO,QAAJ,CAAa2C,WAArB;UACE,KAAK,QAAL;YACEnE,EAAE,CAAC0B,MAAH,CAAU0C,YAAV,GAAyB,IAAzB;YACA;;UAEF,KAAK,WAAL;YACEpE,EAAE,CAAC0B,MAAH,CAAU0C,YAAV,GAAyB,KAAzB;YACA;QAPJ;MASD,CAhHY,CAkHb;MACA;;;MAEA,IAAInD,GAAG,CAACO,QAAJ,CAAa6C,QAAjB,EAA2B;QACzBrE,EAAE,CAAC0B,MAAH,CAAU4C,YAAV,GAAyBrD,GAAG,CAACO,QAAJ,CAAa6C,QAAtC;;QACA,IAAI,CAACE,KAAK,CAACvE,EAAE,CAAC0B,MAAH,CAAU4C,YAAV,GAAyB,CAA1B,CAAV,EAAwC;UACtCtE,EAAE,CAAC0B,MAAH,CAAU/D,YAAV,GAAyBqC,EAAE,CAAC0B,MAAH,CAAU4C,YAAV,GAAyB,CAAlD,CADsC,CACe;QACtD,CAFD,MAEO;UACLtE,EAAE,CAAC0B,MAAH,CAAU/D,YAAV,GAAyBlB,OAAO,CAACC,QAAR,CAAiBsD,EAAE,CAAC0B,MAAH,CAAU4C,YAA3B,CAAzB,CADK,CAC8D;QACpE;MACF;;MAED,IAAIC,KAAK,CAACvE,EAAE,CAAC0B,MAAH,CAAU/D,YAAX,CAAT,EAAmC;QACjCqC,EAAE,CAAC0B,MAAH,CAAU/D,YAAV,GAAyBlB,OAAO,CAACC,QAAR,CAAiBC,OAA1C,CADiC,CACkB;MACpD;;MAEDqD,EAAE,CAAC0B,MAAH,CAAUvC,gBAAV,GAA6B,mBAAmBqF,SAAnB,KAAiCvD,GAAG,CAACwD,QAAJ,KAAiB,OAAjB,IAA4BxD,GAAG,CAACyD,IAAJ,KAAa,WAA1E,CAA7B;;MAEA,IAAI1E,EAAE,CAAC0B,MAAH,CAAUvC,gBAAd,EAAgC,CAK/B;IACF;EAxd0B,CAA7B;EAtBAa,EAAE,CAAC0B,MAAH,CAAUrF,aAAV,GAA0BA,aAA1B"
}