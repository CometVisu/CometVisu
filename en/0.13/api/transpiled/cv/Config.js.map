{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/source/class/cv/Config.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "statics",
    "Maturity",
    "release",
    "development",
    "treePath",
    "currentPageId",
    "libraryCheck",
    "maxMobileScreenWidth",
    "maxScreenWidthColspanS",
    "maxScreenWidthColspanM",
    "scrollSpeed",
    "defaultColumns",
    "minColumnWidth",
    "enableAddressQueue",
    "backend",
    "backendLoginUrl",
    "configSuffix",
    "clientDesign",
    "use_maturity",
    "pluginsToLoad",
    "loadManager",
    "managerOptions",
    "configSettings",
    "mappings",
    "stylings",
    "usedRowspans",
    "iconsFromConfig",
    "credentials",
    "username",
    "password",
    "rememberLastPage",
    "lazyLoading",
    "designStructureMap",
    "sentryEnabled",
    "reporting",
    "enableLogging",
    "configServer",
    "useServiceWorker",
    "enableServiceWorkerCache",
    "getStructure",
    "design",
    "getDesign",
    "structure",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "indexOf",
    "guessIfProxied",
    "cv",
    "TemplateEngine",
    "getInstance",
    "visu",
    "getServer",
    "Error",
    "addMapping",
    "name",
    "mapping",
    "getMapping",
    "hasMapping",
    "clearMappings",
    "addStyling",
    "styling",
    "getStyling",
    "hasStyling",
    "defer",
    "req",
    "util",
    "Uri",
    "parseUri",
    "window",
    "location",
    "href",
    "queryKey",
    "enableQueue",
    "Config",
    "URL",
    "undefined",
    "startpage",
    "reportErrors",
    "Sentry",
    "transactionId",
    "Math",
    "random",
    "toString",
    "substr",
    "configureScope",
    "scope",
    "setTag",
    "Version",
    "DATE",
    "BRANCH",
    "keys",
    "TAGS",
    "forEach",
    "tag",
    "request",
    "testMode",
    "io",
    "Client",
    "TEST_MODE",
    "config",
    "forceReload",
    "core",
    "Environment",
    "get",
    "enableCache",
    "log",
    "Logger",
    "warn",
    "ConfigCache",
    "clear",
    "manager",
    "hash",
    "action",
    "open",
    "data",
    "forceDevice",
    "mobileDevice",
    "maturity",
    "url_maturity",
    "isNaN",
    "navigator",
    "protocol",
    "host"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* Config.js \n * \n * copyright (c) 2010-2022, Christian Mayer and the CometVisu contributers.\n * \n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\n * more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n */\n\n\n/**\n * Main settings that an be accessed from anywhere inside the Application\n */\nqx.Class.define('cv.Config', {\n  type:'static',\n\n  statics: {\n    /**\n     * Define ENUM of maturity levels for features, so that e.g. the editor can\n     * ignore some widgets when they are not supported yet\n     */\n    Maturity : {\n      release: 0,\n      development: 1\n    },\n\n    /**\n     * The current path tree\n     * @type {String}\n     */\n    treePath: '',\n\n    /**\n     * Path to the current page\n     * @type {String}\n     */\n    currentPageId: null,\n\n    /**\n     * @type {Boolean}\n     */\n    libraryCheck: true,\n    /**\n     * Threshold where the mobile.css is loaded\n     * @type {Number}\n     */\n    maxMobileScreenWidth: 599,\n    /**\n     * Threshold where colspan-s is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanS: 599,\n    /**\n     * threshold where colspan-m is used\n     * @type {Number}\n     */\n    maxScreenWidthColspanM: 839,\n    /**\n     * Default scrolling speed for page changes (in ms)\n     * @type {Number}\n     */\n    scrollSpeed : 400,\n\n    /**\n     * Default number of colums the layout should use\n     * @type {Number}\n     */\n    defaultColumns : 12,\n    /**\n     * Minimum column width\n     * @type {Number}\n     */\n    minColumnWidth : 120,\n\n    /**\n     * If true, the client only loads the states for the widgets that are part of the start page at first\n     * read request (should increase the performance when huge config files are used)\n     * @type {Boolean}\n     */\n    enableAddressQueue : false,\n\n    /**\n     * Type of the used backend (*default*, *openhab* or *openhab2*)\n     * @type {String}\n     */\n    backend : null,\n    /**\n     * Initial URL to the backend\n     * @type {String}\n     */\n    backendLoginUrl : null,\n    /**\n     * @type {String}\n     */\n    configSuffix : null,\n    /**\n     * The design currently used\n     * @type {String}\n     */\n    clientDesign : '',\n    /**\n     * Maturity level\n     * @type {var}\n     */\n    use_maturity : false,\n\n    /**\n     * Default plugins to load, that are not controlled by the config (e.g. some backends can load own plugins)\n     */\n    pluginsToLoad: [],\n\n    /**\n     * Load the manager directly, no config\n     * @type {boolean}\n     */\n    loadManager: false,\n\n    /**\n     * Optional settings for manager loading\n     * @type {Map}\n     */\n    managerOptions: {},\n\n    /**\n     * All configuration and settings from the current configuration\n     * (Note: all settings that need to be cached must be put in here)\n     */\n    configSettings: {\n      mappings: {},\n      stylings: {},\n      /**\n       * Stores the rowspans used by the current confid\n       * @type {Map} of rowspan-value as key and true as value\n       */\n      usedRowspans: {},\n      pluginsToLoad: [],\n\n      /**\n       * Array with alls icons defined in the current config file\n       * @type {Array}\n       */\n      iconsFromConfig: [],\n      /**\n       * Credentials for Backend authentication, username/token and optional password\n       */\n      credentials: {\n        username: null,\n        password: null\n      }\n    },\n\n    /**\n     * Store last visited page in LocalStorage\n     */\n    rememberLastPage: false,\n\n    /**\n     * If enabled the widget instances are created on demand. Note: this must only be used when\n     * cache is valid!\n     * @type {Boolean}\n     */\n    lazyLoading: false,\n\n    /**\n     * Defines which structure is supported by which designs\n     */\n    designStructureMap: {\n      'pure': ['alaska', 'alaska_slim', 'discreet', 'discreet_sand', 'discreet_slim', 'metal', 'pitchblack', 'planet', 'pure']\n    },\n\n    /**\n     * Wether the error reporting with sentry is enabled or not\n     */\n    sentryEnabled: false,\n\n    /**\n     * If enabled the user interaction gets logged\n     */\n    reporting: false,\n\n    /**\n     * Set console logging\n     */\n    enableLogging: true,\n\n    /**\n     * The server that responded to the config request\n     */\n    configServer: null,\n\n    /**\n     * If the CometVisu can use service workers\n     */\n    useServiceWorker: false,\n\n    enableServiceWorkerCache : true,\n\n    /**\n     * Get the structure that is related to this design\n     * @param design {String?} name of the design\n     * @return {String} name of the structure\n     */\n    getStructure: function(design) {\n      if (!design) {\n        design = this.getDesign();\n      }\n      for (let structure in this.designStructureMap) {\n        if (Object.prototype.hasOwnProperty.call(this.designStructureMap, structure)) {\n          if (this.designStructureMap[structure].indexOf(design) >= 0) {\n            return 'structure-'+structure;\n          }\n        }\n      }\n      // fallback to pure\n      return 'structure-pure';\n    },\n\n    /**\n     * This method tries to guess if the CometVisu is running on a proxied webserver.\n     * (by comparing if the visu_config.xml-File has been delivered from another server than the\n     * loging response). As this is just an assumption, you should not treat this result as reliable.\n     */\n    guessIfProxied: function() {\n      if (this.configServer === null || cv.TemplateEngine.getInstance().visu.getServer() === null) {\n        throw new Error('not ready yet');\n      }\n      return this.configServer !== cv.TemplateEngine.getInstance().visu.getServer();\n    },\n\n    addMapping: function (name, mapping) {\n      this.configSettings.mappings[name] = mapping;\n    },\n\n    getMapping: function (name) {\n      return this.configSettings.mappings[name];\n    },\n\n    hasMapping: function(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.mappings, name);\n    },\n\n    clearMappings: function() {\n      this.configSettings.mappings = {};\n    },\n\n    addStyling: function (name, styling) {\n      this.configSettings.stylings[name] = styling;\n    },\n\n    getStyling: function (name) {\n      return this.configSettings.stylings[name];\n    },\n\n    hasStyling: function(name) {\n      return Object.prototype.hasOwnProperty.call(this.configSettings.stylings, name);\n    },\n\n    getDesign: function() {\n      return this.clientDesign || this.configSettings.clientDesign;\n    }\n  },\n\n  defer: function(statics) {\n    const req = qx.util.Uri.parseUri(window.location.href);\n\n    if (req.queryKey.enableQueue) {\n      cv.Config.enableAddressQueue = true;\n    }\n\n    if (req.queryKey.libraryCheck) {\n      cv.Config.libraryCheck = req.queryKey.libraryCheck !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.backend) {\n      cv.Config.URL = {backend: req.queryKey.backend};\n    } else {\n      cv.Config.URL = {backend: undefined};\n    }\n\n    if (req.queryKey.design) {\n      cv.Config.clientDesign = req.queryKey.design;\n    }\n\n    if (req.queryKey.startpage) {\n      cv.Config.startpage = req.queryKey.startpage;\n    }\n\n    if (req.queryKey.reportErrors) {\n      if (window.Sentry) {\n        cv.Config.sentryEnabled = true;\n        // generate unique transactionId and set as Sentry tag\n        cv.Config.transactionId = Math.random().toString(36).substr(2, 9);\n        Sentry.configureScope(function (scope) {\n          scope.setTag('transaction_id', cv.Config.transactionId);\n          scope.setTag('build.date', cv.Version.DATE);\n          scope.setTag('build.branch', cv.Version.BRANCH);\n          Object.keys(cv.Version.TAGS).forEach(function (tag) {\n            scope.setTag(tag, cv.Version.TAGS[tag]);\n          });\n        });\n      }\n    }\n\n    // store for later usage\n    cv.Config.request = req;\n\n    if (qx.core.Environment.get('cv.testMode') !== false) {\n      cv.Config.testMode = true;\n    } else if (req.queryKey.testMode) {\n      cv.Config.testMode = req.queryKey.testMode === 'true' || req.queryKey.testMode === '1';\n    }\n\n    // propagate to the client\n    cv.io.Client.TEST_MODE = cv.Config.testMode;\n\n    if (req.queryKey.config) {\n      cv.Config.configSuffix = req.queryKey.config;\n    }\n\n    if (req.queryKey.forceReload) {\n      cv.Config.forceReload = req.queryKey.forceReload !== 'false'; // true unless set to false\n    }\n\n    if (req.queryKey.reporting) {\n      cv.Config.reporting = req.queryKey.reporting === 'true';\n    }\n\n    // caching is only possible when localStorage is available\n    if (qx.core.Environment.get('html.storage.local') === false) {\n      cv.Config.enableCache = false;\n      qx.log.Logger.warn(statics, 'localStorage is not available in your browser. Some advanced features, like caching will not work!');\n    } else if (req.queryKey.enableCache === 'invalid') {\n        cv.ConfigCache.clear(cv.Config.configSuffix);\n        cv.Config.enableCache = true;\n      } else {\n        cv.Config.enableCache = req.queryKey.enableCache ? req.queryKey.enableCache === 'true' : !qx.core.Environment.get('qx.debug');\n      }\n\n    cv.Config.enableLogging = qx.core.Environment.get('html.console');\n    if (req.queryKey.log === 'false') {\n      cv.Config.enableLogging = false;\n    } else if (req.queryKey.log === 'true') {\n      cv.Config.enableLogging = true;\n    }\n\n    cv.Config.loadManager = cv.Config.request.queryKey.manager || window.location.hash === '#manager';\n    cv.Config.managerOptions = {\n      action: cv.Config.request.queryKey.open ? 'open' : '',\n      data: cv.Config.request.queryKey.open ? cv.Config.request.queryKey.open : undefined\n    };\n\n    // \"Bug\"-Fix for ID: 3204682 \"Caching on web server\"\n    // Config isn't a real fix for the problem as that's part of the web browser,\n    // but\n    // it helps to avoid the problems on the client, e.g. when the config file\n    // has changed but the browser doesn't even ask the server about it...\n    cv.Config.forceReload = true;\n\n    if (req.queryKey.forceDevice) { // overwrite detection when set by URL\n      switch (req.queryKey.forceDevice) {\n        case 'mobile':\n          cv.Config.mobileDevice = true;\n          break;\n\n        case 'nonmobile':\n          cv.Config.mobileDevice = false;\n          break;\n      }\n    }\n\n\n    // Disable features that aren't ready yet\n    // Config can be overwritten in the URL with the parameter \"maturity\"\n\n    if (req.queryKey.maturity) {\n      cv.Config.url_maturity = req.queryKey.maturity;\n      if (!isNaN(cv.Config.url_maturity - 0)) {\n        cv.Config.use_maturity = cv.Config.url_maturity - 0; // given directly as number\n      } else {\n        cv.Config.use_maturity = statics.Maturity[cv.Config.url_maturity]; // or as the ENUM name\n      }\n    }\n\n    if (isNaN(cv.Config.use_maturity)) {\n      cv.Config.use_maturity = statics.Maturity.release; // default to release\n    }\n\n    cv.Config.useServiceWorker = 'serviceWorker' in navigator && (req.protocol === 'https' || req.host === 'localhost');\n\n    if (cv.Config.useServiceWorker) {\n      if (qx.core.Environment.get('qx.debug')) {\n        // disable service worker in dev environment unless the user wants it\n        cv.Config.useServiceWorker = req.queryKey.worker === 'true';\n      }\n    }\n  }\n});\n"
  ]
}