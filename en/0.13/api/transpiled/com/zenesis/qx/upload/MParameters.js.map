{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "__params",
    "setParam",
    "name",
    "value",
    "getParam",
    "getParamNames",
    "result",
    "push",
    "com",
    "zenesis",
    "upload",
    "MParameters"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/MParameters.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * This mixin adds get/setParam methods used by UploadManager, AbstractHandler,\n * and UploadButton\n */\nqx.Mixin.define(\"com.zenesis.qx.upload.MParameters\", {\n  members: {\n    __params: null,\n\n    /**\n     * Sets a parameter value to be sent with the file\n     *\n     * @param name\n     *          {String} name of the parameter\n     * @param value\n     *          {String} the value of the parameter, or null to delete a\n     *          previous parameter\n     */\n    setParam(name, value) {\n      if (value !== null && typeof value != \"string\") value = \"\" + value;\n      if (!this.__params) this.__params = {};\n      this.__params[name] = value;\n    },\n\n    /**\n     * Returns a parameter value to be sent with the file\n     *\n     * @param name {String} Name of the parameter\n     * @returns {Boolean}\n     */\n    getParam(name) {\n      return this.__params && this.__params[name];\n    },\n\n    /**\n     * Returns a list of parameter names\n     *\n     * @returns {Array}\n     */\n    getParamNames() {\n      var result = [];\n      if (this.__params) for (var name in this.__params) result.push(name);\n      return result;\n    },\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;IACnDC,OAAO,EAAE;MACPC,SAAQ,EAAE,IADH;;MAGP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,QAZO,oBAYEC,IAZF,EAYQC,KAZR,EAYe;QACpB,IAAIA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,IAAgB,QAAtC,EAAgDA,KAAK,GAAG,KAAKA,KAAb;QAChD,IAAI,CAAC,KAAKH,SAAV,EAAoB,KAAKA,SAAL,GAAgB,EAAhB;QACpB,KAAKA,SAAL,CAAcE,IAAd,IAAsBC,KAAtB;MACD,CAhBM;;MAkBP;AACJ;AACA;AACA;AACA;AACA;MACIC,QAxBO,oBAwBEF,IAxBF,EAwBQ;QACb,OAAO,KAAKF,SAAL,IAAiB,KAAKA,SAAL,CAAcE,IAAd,CAAxB;MACD,CA1BM;;MA4BP;AACJ;AACA;AACA;AACA;MACIG,aAjCO,2BAiCS;QACd,IAAIC,MAAM,GAAG,EAAb;QACA,IAAI,KAAKN,SAAT,EAAmB,KAAK,IAAIE,IAAT,IAAiB,KAAKF,SAAtB,EAAgCM,MAAM,CAACC,IAAP,CAAYL,IAAZ;QACnD,OAAOI,MAAP;MACD;IArCM;EAD0C,CAArD;EA3BAE,GAAG,CAACC,OAAJ,CAAYhB,EAAZ,CAAeiB,MAAf,CAAsBC,WAAtB,CAAkCf,aAAlC,GAAkDA,aAAlD"
}