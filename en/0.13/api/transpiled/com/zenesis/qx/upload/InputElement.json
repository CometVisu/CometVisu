{
  "className": "com.zenesis.qx.upload.InputElement",
  "packageName": "com.zenesis.qx.upload",
  "name": "InputElement",
  "superClass": "qx.html.Element",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 1,
        "column": 0,
        "index": 0
      },
      "end": {
        "line": 106,
        "column": 3,
        "index": 3110
      }
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 4,
        "column": 2,
        "index": 86
      },
      "end": {
        "line": 60,
        "column": 3,
        "index": 2132
      }
    }
  },
  "properties": {
    "acceptUpload": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 2155
        },
        "end": {
          "line": 68,
          "column": 5,
          "index": 2274
        }
      },
      "name": "acceptUpload",
      "propertyType": "new",
      "apply": "_applyAcceptUpload",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "multiple": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 2281
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 2395
        }
      },
      "name": "multiple",
      "propertyType": "new",
      "apply": "_applyMultiple",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "directory": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 2402
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2518
        }
      },
      "name": "directory",
      "propertyType": "new",
      "apply": "_applyDirectory",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    }
  },
  "members": {
    "__relatedWidget": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2543
        },
        "end": {
          "line": 86,
          "column": 25,
          "index": 2564
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getWidget": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2571
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2625
        }
      },
      "type": "function",
      "access": "public"
    },
    "_applyAcceptUpload": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2632
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2773
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "acceptUpload"
      ]
    },
    "_applyDirectory": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2779
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2947
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "directory"
      ]
    },
    "_applyMultiple": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2954
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 3100
        }
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "multiple"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getVisible": {
      "type": "function",
      "name": "getVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "isVisible": {
      "type": "function",
      "name": "isVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for visible"
          }
        ]
      }
    },
    "setVisible": {
      "type": "function",
      "name": "setVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>visible</code>.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for visible"
          }
        ]
      }
    },
    "resetVisible": {
      "type": "function",
      "name": "resetVisible",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>visible</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #visible}."
          }
        ]
      }
    },
    "getCssClass": {
      "type": "function",
      "name": "getCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>cssClass</code>.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for cssClass"
          }
        ]
      }
    },
    "setCssClass": {
      "type": "function",
      "name": "setCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>cssClass</code>.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for cssClass"
          }
        ]
      }
    },
    "resetCssClass": {
      "type": "function",
      "name": "resetCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.html.Element",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>cssClass</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #cssClass}."
          }
        ]
      }
    },
    "getAcceptUpload": {
      "type": "function",
      "name": "getAcceptUpload",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>acceptUpload</code>.\n\nFor further details take a look at the property definition: {@link #acceptUpload}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for acceptUpload"
          }
        ]
      }
    },
    "setAcceptUpload": {
      "type": "function",
      "name": "setAcceptUpload",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>acceptUpload</code>.\n\nFor further details take a look at the property definition: {@link #acceptUpload}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for acceptUpload"
          }
        ]
      }
    },
    "resetAcceptUpload": {
      "type": "function",
      "name": "resetAcceptUpload",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>acceptUpload</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #acceptUpload}."
          }
        ]
      }
    },
    "getMultiple": {
      "type": "function",
      "name": "getMultiple",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>multiple</code>.\n\nFor further details take a look at the property definition: {@link #multiple}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for multiple"
          }
        ]
      }
    },
    "isMultiple": {
      "type": "function",
      "name": "isMultiple",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>multiple</code>.\n\nFor further details take a look at the property definition: {@link #multiple}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for multiple"
          }
        ]
      }
    },
    "setMultiple": {
      "type": "function",
      "name": "setMultiple",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>multiple</code>.\n\nFor further details take a look at the property definition: {@link #multiple}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for multiple"
          }
        ]
      }
    },
    "resetMultiple": {
      "type": "function",
      "name": "resetMultiple",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>multiple</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #multiple}."
          }
        ]
      }
    },
    "getDirectory": {
      "type": "function",
      "name": "getDirectory",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>directory</code>.\n\nFor further details take a look at the property definition: {@link #directory}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for directory"
          }
        ]
      }
    },
    "isDirectory": {
      "type": "function",
      "name": "isDirectory",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>directory</code>.\n\nFor further details take a look at the property definition: {@link #directory}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for directory"
          }
        ]
      }
    },
    "setDirectory": {
      "type": "function",
      "name": "setDirectory",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>directory</code>.\n\nFor further details take a look at the property definition: {@link #directory}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for directory"
          }
        ]
      }
    },
    "resetDirectory": {
      "type": "function",
      "name": "resetDirectory",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>directory</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #directory}."
          }
        ]
      }
    }
  },
  "descendants": []
}