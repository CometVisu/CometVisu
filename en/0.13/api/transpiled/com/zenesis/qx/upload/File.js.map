{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "browserObject",
    "filename",
    "id",
    "constructor",
    "call",
    "Assert",
    "assertNotNull",
    "__browserObject",
    "setFilename",
    "setId",
    "properties",
    "check",
    "nullable",
    "event",
    "size",
    "init",
    "progress",
    "state",
    "apply",
    "response",
    "uploadWidget",
    "status",
    "members",
    "__params",
    "setParam",
    "name",
    "value",
    "getParam",
    "getParamNames",
    "result",
    "push",
    "getBrowserObject",
    "_applyState",
    "oldValue",
    "assertTrue",
    "com",
    "zenesis",
    "upload",
    "File"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/File.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Represents a file that is to be or has been uploaded; this should be\n * instantiated by the _createFile method of AbstractHandler implementations and\n * is not expected to be used separately\n */\nqx.Class.define(\"com.zenesis.qx.upload.File\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param browserObject\n   *          {DOM} Anythign the AbstractHandler wants to store, typically an\n   *          input[type=file] or a File\n   * @param filename\n   *          {String} the name of the file\n   * @param id\n   *          {String} the unique id of the file\n   */\n  construct(browserObject, filename, id) {\n    super();\n    qx.core.Assert.assertNotNull(browserObject);\n    qx.core.Assert.assertNotNull(filename);\n    qx.core.Assert.assertNotNull(id);\n    this.__browserObject = browserObject;\n    this.setFilename(filename);\n    this.setId(id);\n  },\n\n  properties: {\n    /**\n     * The filename\n     */\n    filename: {\n      check: \"String\",\n      nullable: false,\n      event: \"changeFilename\",\n    },\n\n    /**\n     * A unique ID for the upload\n     */\n    id: {\n      check: \"String\",\n      nullable: false,\n      event: \"changeId\",\n    },\n\n    /**\n     * Size of the file, if known (not available on older browsers)\n     */\n    size: {\n      check: \"Integer\",\n      nullable: false,\n      init: -1,\n      event: \"changeSize\",\n    },\n\n    /**\n     * Progress of the upload, if known (not available on older browsers)\n     */\n    progress: {\n      check: \"Integer\",\n      nullable: false,\n      init: 0,\n      event: \"changeProgress\",\n    },\n\n    /**\n     * State of the file, re: uploading\n     */\n    state: {\n      check: [\"not-started\", \"uploading\", \"cancelled\", \"uploaded\"],\n      nullable: false,\n      init: \"not-started\",\n      event: \"changeState\",\n      apply: \"_applyState\",\n    },\n\n    /**\n     * The response string received from the server\n     */\n    response: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      event: \"changeResponse\",\n    },\n\n    /**\n     * The widget that triggered the upload\n     */\n    uploadWidget: {\n      init: null,\n      nullable: true,\n      event: \"changeUploadWidget\",\n    },\n\n    /**\n     * The status of an XHR request. This can be used to determine if the\n     * upload was successful.\n     */\n    status: {\n      init: null,\n      nullable: true,\n      event: \"changeStatus\",\n    },\n  },\n\n  members: {\n    __browserObject: null,\n    __params: null,\n\n    /**\n     * Sets a parameter value to be sent with the file\n     *\n     * @param name\n     *          {String} name of the parameter\n     * @param value\n     *          {String} the value of the parameter, or null to delete a\n     *          previous parameter\n     */\n    setParam(name, value) {\n      if (value !== null && typeof value != \"string\") value = \"\" + value;\n      if (!this.__params) this.__params = {};\n      this.__params[name] = value;\n    },\n\n    /**\n     * Returns a parameter value to be sent with the file\n     *\n     * @param name {String} Name of the parameter\n     * @returns {Boolean}\n     */\n    getParam(name) {\n      return this.__params && this.__params[name];\n    },\n\n    /**\n     * Returns a list of parameter names\n     *\n     * @returns {Array}\n     */\n    getParamNames() {\n      var result = [];\n      if (this.__params) for (var name in this.__params) result.push(name);\n      return result;\n    },\n\n    /**\n     * Returns the browser object\n     *\n     * @returns {DOM}\n     */\n    getBrowserObject() {\n      return this.__browserObject;\n    },\n\n    // property apply\n    _applyState(value, oldValue) {\n      qx.core.Assert.assertTrue(\n        (!oldValue && value == \"not-started\") ||\n          (oldValue == \"not-started\" &&\n            (value == \"cancelled\" || value == \"uploading\")) ||\n          (oldValue == \"uploading\" &&\n            (value == \"cancelled\" || value == \"uploaded\"))\n      );\n    },\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,4BAA4B,EAAE;IAC5CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,aAAa,EAAEC,QAAQ,EAAEC,EAAE,EAAE;MACrCZ,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAK,WAAA,CAAAC,IAAA;MACAd,EAAE,CAACO,IAAI,CAACQ,MAAM,CAACC,aAAa,CAACN,aAAa,CAAC;MAC3CV,EAAE,CAACO,IAAI,CAACQ,MAAM,CAACC,aAAa,CAACL,QAAQ,CAAC;MACtCX,EAAE,CAACO,IAAI,CAACQ,MAAM,CAACC,aAAa,CAACJ,EAAE,CAAC;MAChC,IAAI,CAACK,SAAe,GAAGP,aAAa;MACpC,IAAI,CAACQ,WAAW,CAACP,QAAQ,CAAC;MAC1B,IAAI,CAACQ,KAAK,CAACP,EAAE,CAAC;IAChB,CAAC;IAEDQ,UAAU,EAAE;MACV;AACJ;AACA;MACIT,QAAQ,EAAE;QACRU,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIX,EAAE,EAAE;QACFS,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIC,IAAI,EAAE;QACJH,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE,KAAK;QACfG,IAAI,EAAE,CAAC,CAAC;QACRF,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIG,QAAQ,EAAE;QACRL,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE,KAAK;QACfG,IAAI,EAAE,CAAC;QACPF,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACII,KAAK,EAAE;QACLN,KAAK,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,CAAC;QAC5DC,QAAQ,EAAE,KAAK;QACfG,IAAI,EAAE,aAAa;QACnBF,KAAK,EAAE,aAAa;QACpBK,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIC,QAAQ,EAAE;QACRJ,IAAI,EAAE,IAAI;QACVH,QAAQ,EAAE,IAAI;QACdD,KAAK,EAAE,QAAQ;QACfE,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIO,YAAY,EAAE;QACZL,IAAI,EAAE,IAAI;QACVH,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;MACIQ,MAAM,EAAE;QACNN,IAAI,EAAE,IAAI;QACVH,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;MACT;IACF,CAAC;IAEDS,OAAO,EAAE;MACPf,SAAe,EAAE,IAAI;MACrBgB,SAAQ,EAAE,IAAI;MAEd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACC,IAAI,EAAEC,KAAK,EAAE;QACpB,IAAIA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAEA,KAAK,GAAG,EAAE,GAAGA,KAAK;QAClE,IAAI,CAAC,IAAI,CAACH,SAAQ,EAAE,IAAI,CAACA,SAAQ,GAAG,CAAC,CAAC;QACtC,IAAI,CAACA,SAAQ,CAACE,IAAI,CAAC,GAAGC,KAAK;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACF,IAAI,EAAE;QACb,OAAO,IAAI,CAACF,SAAQ,IAAI,IAAI,CAACA,SAAQ,CAACE,IAAI,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,aAAa,WAAAA,cAAA,EAAG;QACd,IAAIC,MAAM,GAAG,EAAE;QACf,IAAI,IAAI,CAACN,SAAQ,EAAE,KAAK,IAAIE,IAAI,IAAI,IAAI,CAACF,SAAQ,EAAEM,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC;QACpE,OAAOI,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIE,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,OAAO,IAAI,CAACxB,SAAe;MAC7B,CAAC;MAED;MACAyB,WAAW,WAAAA,YAACN,KAAK,EAAEO,QAAQ,EAAE;QAC3B3C,EAAE,CAACO,IAAI,CAACQ,MAAM,CAAC6B,UAAU,CACtB,CAACD,QAAQ,IAAIP,KAAK,IAAI,aAAa,IACjCO,QAAQ,IAAI,aAAa,KACvBP,KAAK,IAAI,WAAW,IAAIA,KAAK,IAAI,WAAW,CAAE,IAChDO,QAAQ,IAAI,WAAW,KACrBP,KAAK,IAAI,WAAW,IAAIA,KAAK,IAAI,UAAU,CAClD,CAAC;MACH;IACF;EACF,CAAC,CAAC;EAhMFS,GAAG,CAACC,OAAO,CAAC9C,EAAE,CAAC+C,MAAM,CAACC,IAAI,CAAC7C,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}