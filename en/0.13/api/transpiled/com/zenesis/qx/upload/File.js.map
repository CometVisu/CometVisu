{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "browserObject",
    "filename",
    "id",
    "Assert",
    "assertNotNull",
    "__browserObject",
    "setFilename",
    "setId",
    "properties",
    "check",
    "nullable",
    "event",
    "size",
    "init",
    "progress",
    "state",
    "apply",
    "response",
    "uploadWidget",
    "status",
    "members",
    "__params",
    "setParam",
    "name",
    "value",
    "getParam",
    "getParamNames",
    "result",
    "push",
    "getBrowserObject",
    "_applyState",
    "oldValue",
    "assertTrue",
    "com",
    "zenesis",
    "upload",
    "File"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/File.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Represents a file that is to be or has been uploaded; this should be\n * instantiated by the _createFile method of AbstractHandler implementations and\n * is not expected to be used separately\n */\nqx.Class.define(\"com.zenesis.qx.upload.File\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param browserObject\n   *          {DOM} Anythign the AbstractHandler wants to store, typically an\n   *          input[type=file] or a File\n   * @param filename\n   *          {String} the name of the file\n   * @param id\n   *          {String} the unique id of the file\n   */\n  construct(browserObject, filename, id) {\n    super();\n    qx.core.Assert.assertNotNull(browserObject);\n    qx.core.Assert.assertNotNull(filename);\n    qx.core.Assert.assertNotNull(id);\n    this.__browserObject = browserObject;\n    this.setFilename(filename);\n    this.setId(id);\n  },\n\n  properties: {\n    /**\n     * The filename\n     */\n    filename: {\n      check: \"String\",\n      nullable: false,\n      event: \"changeFilename\",\n    },\n\n    /**\n     * A unique ID for the upload\n     */\n    id: {\n      check: \"String\",\n      nullable: false,\n      event: \"changeId\",\n    },\n\n    /**\n     * Size of the file, if known (not available on older browsers)\n     */\n    size: {\n      check: \"Integer\",\n      nullable: false,\n      init: -1,\n      event: \"changeSize\",\n    },\n\n    /**\n     * Progress of the upload, if known (not available on older browsers)\n     */\n    progress: {\n      check: \"Integer\",\n      nullable: false,\n      init: 0,\n      event: \"changeProgress\",\n    },\n\n    /**\n     * State of the file, re: uploading\n     */\n    state: {\n      check: [\"not-started\", \"uploading\", \"cancelled\", \"uploaded\"],\n      nullable: false,\n      init: \"not-started\",\n      event: \"changeState\",\n      apply: \"_applyState\",\n    },\n\n    /**\n     * The response string received from the server\n     */\n    response: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      event: \"changeResponse\",\n    },\n\n    /**\n     * The widget that triggered the upload\n     */\n    uploadWidget: {\n      init: null,\n      nullable: true,\n      event: \"changeUploadWidget\",\n    },\n\n    /**\n     * The status of an XHR request. This can be used to determine if the\n     * upload was successful.\n     */\n    status: {\n      init: null,\n      nullable: true,\n      event: \"changeStatus\",\n    },\n  },\n\n  members: {\n    __browserObject: null,\n    __params: null,\n\n    /**\n     * Sets a parameter value to be sent with the file\n     *\n     * @param name\n     *          {String} name of the parameter\n     * @param value\n     *          {String} the value of the parameter, or null to delete a\n     *          previous parameter\n     */\n    setParam(name, value) {\n      if (value !== null && typeof value != \"string\") value = \"\" + value;\n      if (!this.__params) this.__params = {};\n      this.__params[name] = value;\n    },\n\n    /**\n     * Returns a parameter value to be sent with the file\n     *\n     * @param name {String} Name of the parameter\n     * @returns {Boolean}\n     */\n    getParam(name) {\n      return this.__params && this.__params[name];\n    },\n\n    /**\n     * Returns a list of parameter names\n     *\n     * @returns {Array}\n     */\n    getParamNames() {\n      var result = [];\n      if (this.__params) for (var name in this.__params) result.push(name);\n      return result;\n    },\n\n    /**\n     * Returns the browser object\n     *\n     * @returns {DOM}\n     */\n    getBrowserObject() {\n      return this.__browserObject;\n    },\n\n    // property apply\n    _applyState(value, oldValue) {\n      qx.core.Assert.assertTrue(\n        (!oldValue && value == \"not-started\") ||\n          (oldValue == \"not-started\" &&\n            (value == \"cancelled\" || value == \"uploading\")) ||\n          (oldValue == \"uploading\" &&\n            (value == \"cancelled\" || value == \"uploaded\"))\n      );\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}