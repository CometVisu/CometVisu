{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "uploader",
    "Assert",
    "assertNotNull",
    "__queue",
    "__current",
    "__params",
    "__uploader",
    "properties",
    "maxConnections",
    "check",
    "init",
    "nullable",
    "event",
    "members",
    "__lastId",
    "addFile",
    "input",
    "widget",
    "files",
    "_createFile",
    "lang",
    "Type",
    "isArray",
    "setUploadWidget",
    "_addFile",
    "i",
    "length",
    "addBlob",
    "filename",
    "blob",
    "params",
    "file",
    "fireDataEvent",
    "push",
    "beginUploads",
    "getMaxConnections",
    "shift",
    "setState",
    "_doUpload",
    "cancel",
    "wasUploading",
    "_cancel",
    "getAutoUpload",
    "cancelAll",
    "current",
    "splice",
    "inCurrent",
    "queue",
    "_doCancel",
    "_onCompleted",
    "response",
    "setResponse",
    "getState",
    "_getUploader",
    "_getUniqueFileId",
    "addParam",
    "key",
    "value",
    "log",
    "Logger",
    "deprecatedMethodWarning",
    "arguments",
    "callee",
    "getParams",
    "_getMergedParams",
    "result",
    "name",
    "merge",
    "obj",
    "names",
    "getParamNames",
    "getParam",
    "getUploadWidget",
    "com",
    "zenesis",
    "upload",
    "AbstractHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/AbstractHandler.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Base class for upload implementations; operates a queue of pending and\n * current uploads, and restricts the number of simultaneous uploads.\n */\nqx.Class.define(\"com.zenesis.qx.upload.AbstractHandler\", {\n  type: \"abstract\",\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param uploader\n   *          {com.zenesis.qx.upload.UploadMgr} controller for uploading\n   */\n  construct(uploader) {\n    super();\n    qx.core.Assert.assertNotNull(uploader);\n    this.__queue = [];\n    this.__current = [];\n    this.__params = {};\n    this.__uploader = uploader;\n  },\n\n  properties: {\n    /**\n     * Maximum number of simultaneous uploads\n     */\n    maxConnections: {\n      check: \"Integer\",\n      init: 5,\n      nullable: false,\n      event: \"changeMaxConnections\",\n    },\n  },\n\n  members: {\n    // Last unique ID used\n    __lastId: 0,\n\n    // Uploader instance\n    __uploader: null,\n\n    // Queue of com.zenesis.qx.upload.File's to send\n    __queue: null,\n\n    // List of com.zenesis.qx.upload.File's currently being sent\n    __current: null,\n\n    // Parameters to post with the file\n    __params: null,\n\n    /**\n     * Adds a file to the upload queue; this does not start uploading until\n     * beginUploads is called.\n     *\n     * @param input\n     *          {DOM} either one input[type=file] or an array of\n     *          input[type=file]\n     * @param widget\n     *          {Widget} the widget that trigger the upload\n     */\n    addFile(input, widget) {\n      var files = this._createFile(input);\n      if (!qx.lang.Type.isArray(files)) {\n        files.setUploadWidget(widget);\n        this._addFile(files);\n      } else\n        for (var i = 0; i < files.length; i++) {\n          files[i].setUploadWidget(widget);\n          this._addFile(files[i]);\n        }\n    },\n\n    /**\n     * Adds a blob to the upload list\n     *\n     * @param filename    {String}  name of object\n     * @param blob        {Blob}    the blob to upload\n     * @param params      {Object}  List of params added to the upload params\n     */\n    addBlob(filename, blob, params) {\n      /* abstract */\n    },\n\n    /**\n     * Adds a file to the outbound queue\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to add\n     */\n    _addFile(file) {\n      if (this.__uploader.fireDataEvent(\"addFile\", file, null, true))\n        this.__queue.push(file);\n    },\n\n    /**\n     * Begins spooling uploads to the server, up to the maxConnections\n     */\n    beginUploads() {\n      while (\n        this.__queue.length > 0 &&\n        this.__current.length < this.getMaxConnections()\n      ) {\n        var file = this.__queue.shift();\n        this.__current.push(file);\n        this.__uploader.fireDataEvent(\"beginUpload\", file);\n        file.setState(\"uploading\");\n        this._doUpload(file);\n      }\n    },\n\n    /**\n     * Cancels a file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to cancel\n     */\n    cancel(file) {\n      var wasUploading = this.__current.length > 0;\n      // this.debug(\"cancelled: id=\" + file.getId() + \", fileName=\" +\n      // file.getFilename());\n      this._cancel(file);\n      if (wasUploading && this.__uploader.getAutoUpload()) this.beginUploads();\n    },\n\n    /**\n     * Cancels all uploads\n     */\n    cancelAll() {\n      for (var current = this.__current, i = 0; i < current.length; i++)\n        this._cancel(current[i]);\n      this.__current.splice(0, this.__current.length);\n      this.__queue.splice(0, this.__queue.length);\n    },\n\n    /**\n     * Cancels a file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to cancel\n     */\n    _cancel(file) {\n      var inCurrent = false;\n      for (var current = this.__current, i = 0; i < current.length; i++)\n        if (current[i] == file) {\n          current.splice(i, 1);\n          inCurrent = true;\n          break;\n        }\n      for (var queue = this.__queue, i = 0; i < queue.length; i++)\n        if (queue[i] == file) {\n          queue.splice(i, 1);\n          break;\n        }\n      file.setState(\"cancelled\");\n      if (inCurrent) this._doCancel(file);\n      this.__uploader.fireDataEvent(\"cancelUpload\", file);\n    },\n\n    /**\n     * Called by derived classes when a file has completed\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file which has finsihed\n     *          uploading\n     * @param response\n     *          {String} text received\n     */\n    _onCompleted(file, response) {\n      // this.debug(\"completed: id=\" + file.getId() + \", fileName=\" +\n      // file.getFilename() + \", response=\" + response);\n      var current = this.__current;\n      for (var i = 0; i < current.length; i++)\n        if (current[i] == file) {\n          current.splice(i, 1);\n          break;\n        }\n\n      file.setResponse(response);\n\n      // File state should be uploading or cancelled\n      if (file.getState() == \"uploading\") {\n        file.setState(\"uploaded\");\n        this.__uploader.fireDataEvent(\"completeUpload\", file);\n      }\n\n      // Start the next one\n      this.beginUploads();\n    },\n\n    /**\n     * Returns the uploader\n     *\n     * @returns {com.zenesis.qx.upload.UploadMgr}\n     */\n    _getUploader() {\n      return this.__uploader;\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @returns {Number}\n     */\n    _getUniqueFileId() {\n      return ++this.__lastId;\n    },\n\n    /**\n     * Adds a parameter to send to the client\n     *\n     * @param key\n     *          {String} the name of the parameter\n     * @param value\n     *          {String} the value of the parameter\n     * @deprecated {1.0} see com.zenesis.qx.upload.UploadMgr.setParam or\n     *             com.zenesis.qx.upload.File.setParam\n     */\n    addParam(key, value) {\n      qx.log.Logger.deprecatedMethodWarning(\n        arguments.callee,\n        \"see com.zenesis.qx.upload.UploadMgr.setParam or com.zenesis.qx.upload.File.setParam\"\n      );\n      this.__params[key] = value;\n    },\n\n    /**\n     * Returns the paramaters map\n     *\n     * @returns {Map}\n     * @deprecated {1.0} see com.zenesis.qx.upload.File.getParam\n     */\n    getParams() {\n      qx.log.Logger.deprecatedMethodWarning(\n        arguments.callee,\n        \"see com.zenesis.qx.upload.UploadMgr.getParam or com.zenesis.qx.upload.File.getParam\"\n      );\n      return this.__params;\n    },\n\n    /**\n     * Helper method that produces a final list of parameter values, by merging\n     * those set in this with those in the file.\n     *\n     * @param file\n     *          {File} the file object\n     * @returns {Map} map of parameters to sent to the server\n     */\n    _getMergedParams(file) {\n      var result = {};\n      for (var name in this.__params) {\n        var value = this.__params[name];\n        if (value !== null) result[name] = value;\n      }\n      function merge(obj) {\n        var names = obj.getParamNames();\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i],\n            value = obj.getParam(name);\n          if (value !== null) result[name] = value;\n          else delete result[name];\n        }\n      }\n      merge(this.__uploader);\n      var widget = file.getUploadWidget();\n      if (widget && typeof widget.getParamNames == \"function\") merge(widget);\n      if (typeof file.getParamNames == \"function\") merge(file);\n      return result;\n    },\n\n    /**\n     * Implementation must create a com.zenesis.qx.upload.File or array of\n     * com.zenesis.qx.upload.File\n     *\n     * @param input\n     *          {DOM} the DOM input[type=file]\n     * @return {com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]}\n     */\n    _createFile(input) {\n      /* abstract */\n    },\n\n    /**\n     * Called to do the real work of uploading the file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File}\n     */\n    _doUpload(file) {\n      /* abstract */\n    },\n\n    /**\n     * Called to cancel the upload\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} file to cancel uploading\n     */\n    _doCancel(file) {\n      /* abstract */\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}