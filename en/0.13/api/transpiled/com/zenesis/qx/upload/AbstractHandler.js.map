{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "uploader",
    "Assert",
    "assertNotNull",
    "__queue",
    "__current",
    "__params",
    "__uploader",
    "properties",
    "maxConnections",
    "check",
    "init",
    "nullable",
    "event",
    "members",
    "__lastId",
    "addFile",
    "input",
    "widget",
    "files",
    "_createFile",
    "lang",
    "Type",
    "isArray",
    "setUploadWidget",
    "_addFile",
    "i",
    "length",
    "addBlob",
    "filename",
    "blob",
    "params",
    "file",
    "fireDataEvent",
    "push",
    "beginUploads",
    "getMaxConnections",
    "shift",
    "setState",
    "_doUpload",
    "cancel",
    "wasUploading",
    "_cancel",
    "getAutoUpload",
    "cancelAll",
    "current",
    "splice",
    "inCurrent",
    "queue",
    "_doCancel",
    "_onCompleted",
    "response",
    "setResponse",
    "getState",
    "_getUploader",
    "_getUniqueFileId",
    "addParam",
    "key",
    "value",
    "log",
    "Logger",
    "deprecatedMethodWarning",
    "arguments",
    "callee",
    "getParams",
    "_getMergedParams",
    "result",
    "name",
    "merge",
    "obj",
    "names",
    "getParamNames",
    "getParam",
    "getUploadWidget",
    "com",
    "zenesis",
    "upload",
    "AbstractHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/AbstractHandler.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Base class for upload implementations; operates a queue of pending and\n * current uploads, and restricts the number of simultaneous uploads.\n */\nqx.Class.define(\"com.zenesis.qx.upload.AbstractHandler\", {\n  type: \"abstract\",\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param uploader\n   *          {com.zenesis.qx.upload.UploadMgr} controller for uploading\n   */\n  construct(uploader) {\n    super();\n    qx.core.Assert.assertNotNull(uploader);\n    this.__queue = [];\n    this.__current = [];\n    this.__params = {};\n    this.__uploader = uploader;\n  },\n\n  properties: {\n    /**\n     * Maximum number of simultaneous uploads\n     */\n    maxConnections: {\n      check: \"Integer\",\n      init: 5,\n      nullable: false,\n      event: \"changeMaxConnections\",\n    },\n  },\n\n  members: {\n    // Last unique ID used\n    __lastId: 0,\n\n    // Uploader instance\n    __uploader: null,\n\n    // Queue of com.zenesis.qx.upload.File's to send\n    __queue: null,\n\n    // List of com.zenesis.qx.upload.File's currently being sent\n    __current: null,\n\n    // Parameters to post with the file\n    __params: null,\n\n    /**\n     * Adds a file to the upload queue; this does not start uploading until\n     * beginUploads is called.\n     *\n     * @param input\n     *          {DOM} either one input[type=file] or an array of\n     *          input[type=file]\n     * @param widget\n     *          {Widget} the widget that trigger the upload\n     */\n    addFile(input, widget) {\n      var files = this._createFile(input);\n      if (!qx.lang.Type.isArray(files)) {\n        files.setUploadWidget(widget);\n        this._addFile(files);\n      } else\n        for (var i = 0; i < files.length; i++) {\n          files[i].setUploadWidget(widget);\n          this._addFile(files[i]);\n        }\n    },\n\n    /**\n     * Adds a blob to the upload list\n     *\n     * @param filename    {String}  name of object\n     * @param blob        {Blob}    the blob to upload\n     * @param params      {Object}  List of params added to the upload params\n     */\n    addBlob(filename, blob, params) {\n      /* abstract */\n    },\n\n    /**\n     * Adds a file to the outbound queue\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to add\n     */\n    _addFile(file) {\n      if (this.__uploader.fireDataEvent(\"addFile\", file, null, true))\n        this.__queue.push(file);\n    },\n\n    /**\n     * Begins spooling uploads to the server, up to the maxConnections\n     */\n    beginUploads() {\n      while (\n        this.__queue.length > 0 &&\n        this.__current.length < this.getMaxConnections()\n      ) {\n        var file = this.__queue.shift();\n        this.__current.push(file);\n        this.__uploader.fireDataEvent(\"beginUpload\", file);\n        file.setState(\"uploading\");\n        this._doUpload(file);\n      }\n    },\n\n    /**\n     * Cancels a file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to cancel\n     */\n    cancel(file) {\n      var wasUploading = this.__current.length > 0;\n      // this.debug(\"cancelled: id=\" + file.getId() + \", fileName=\" +\n      // file.getFilename());\n      this._cancel(file);\n      if (wasUploading && this.__uploader.getAutoUpload()) this.beginUploads();\n    },\n\n    /**\n     * Cancels all uploads\n     */\n    cancelAll() {\n      for (var current = this.__current, i = 0; i < current.length; i++)\n        this._cancel(current[i]);\n      this.__current.splice(0, this.__current.length);\n      this.__queue.splice(0, this.__queue.length);\n    },\n\n    /**\n     * Cancels a file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file to cancel\n     */\n    _cancel(file) {\n      var inCurrent = false;\n      for (var current = this.__current, i = 0; i < current.length; i++)\n        if (current[i] == file) {\n          current.splice(i, 1);\n          inCurrent = true;\n          break;\n        }\n      for (var queue = this.__queue, i = 0; i < queue.length; i++)\n        if (queue[i] == file) {\n          queue.splice(i, 1);\n          break;\n        }\n      file.setState(\"cancelled\");\n      if (inCurrent) this._doCancel(file);\n      this.__uploader.fireDataEvent(\"cancelUpload\", file);\n    },\n\n    /**\n     * Called by derived classes when a file has completed\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} the file which has finsihed\n     *          uploading\n     * @param response\n     *          {String} text received\n     */\n    _onCompleted(file, response) {\n      // this.debug(\"completed: id=\" + file.getId() + \", fileName=\" +\n      // file.getFilename() + \", response=\" + response);\n      var current = this.__current;\n      for (var i = 0; i < current.length; i++)\n        if (current[i] == file) {\n          current.splice(i, 1);\n          break;\n        }\n\n      file.setResponse(response);\n\n      // File state should be uploading or cancelled\n      if (file.getState() == \"uploading\") {\n        file.setState(\"uploaded\");\n        this.__uploader.fireDataEvent(\"completeUpload\", file);\n      }\n\n      // Start the next one\n      this.beginUploads();\n    },\n\n    /**\n     * Returns the uploader\n     *\n     * @returns {com.zenesis.qx.upload.UploadMgr}\n     */\n    _getUploader() {\n      return this.__uploader;\n    },\n\n    /**\n     * Allocates a unique ID\n     *\n     * @returns {Number}\n     */\n    _getUniqueFileId() {\n      return ++this.__lastId;\n    },\n\n    /**\n     * Adds a parameter to send to the client\n     *\n     * @param key\n     *          {String} the name of the parameter\n     * @param value\n     *          {String} the value of the parameter\n     * @deprecated {1.0} see com.zenesis.qx.upload.UploadMgr.setParam or\n     *             com.zenesis.qx.upload.File.setParam\n     */\n    addParam(key, value) {\n      qx.log.Logger.deprecatedMethodWarning(\n        arguments.callee,\n        \"see com.zenesis.qx.upload.UploadMgr.setParam or com.zenesis.qx.upload.File.setParam\"\n      );\n      this.__params[key] = value;\n    },\n\n    /**\n     * Returns the paramaters map\n     *\n     * @returns {Map}\n     * @deprecated {1.0} see com.zenesis.qx.upload.File.getParam\n     */\n    getParams() {\n      qx.log.Logger.deprecatedMethodWarning(\n        arguments.callee,\n        \"see com.zenesis.qx.upload.UploadMgr.getParam or com.zenesis.qx.upload.File.getParam\"\n      );\n      return this.__params;\n    },\n\n    /**\n     * Helper method that produces a final list of parameter values, by merging\n     * those set in this with those in the file.\n     *\n     * @param file\n     *          {File} the file object\n     * @returns {Map} map of parameters to sent to the server\n     */\n    _getMergedParams(file) {\n      var result = {};\n      for (var name in this.__params) {\n        var value = this.__params[name];\n        if (value !== null) result[name] = value;\n      }\n      function merge(obj) {\n        var names = obj.getParamNames();\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i],\n            value = obj.getParam(name);\n          if (value !== null) result[name] = value;\n          else delete result[name];\n        }\n      }\n      merge(this.__uploader);\n      var widget = file.getUploadWidget();\n      if (widget && typeof widget.getParamNames == \"function\") merge(widget);\n      if (typeof file.getParamNames == \"function\") merge(file);\n      return result;\n    },\n\n    /**\n     * Implementation must create a com.zenesis.qx.upload.File or array of\n     * com.zenesis.qx.upload.File\n     *\n     * @param input\n     *          {DOM} the DOM input[type=file]\n     * @return {com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]}\n     */\n    _createFile(input) {\n      /* abstract */\n    },\n\n    /**\n     * Called to do the real work of uploading the file\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File}\n     */\n    _doUpload(file) {\n      /* abstract */\n    },\n\n    /**\n     * Called to cancel the upload\n     *\n     * @param file\n     *          {com.zenesis.qx.upload.File} file to cancel uploading\n     */\n    _doCancel(file) {\n      /* abstract */\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}