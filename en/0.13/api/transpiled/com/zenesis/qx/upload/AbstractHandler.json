{
  "className": "com.zenesis.qx.upload.AbstractHandler",
  "packageName": "com.zenesis.qx.upload",
  "name": "AbstractHandler",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 885
      },
      "end": {
        "line": 326,
        "column": 3,
        "index": 8799
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Base class for upload implementations; operates a queue of pending and\n current uploads, and restricts the number of simultaneous uploads.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1121
      },
      "end": {
        "line": 45,
        "column": 3,
        "index": 1307
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "uploader\n          {com.zenesis.qx.upload.UploadMgr} controller for uploading",
          "paramName": "uploader",
          "description": " controller for uploading",
          "type": "com.zenesis.qx.upload.UploadMgr"
        }
      ]
    }
  },
  "properties": {
    "maxConnections": {
      "location": {
        "start": {
          "line": 51,
          "column": 4,
          "index": 1392
        },
        "end": {
          "line": 56,
          "column": 5,
          "index": 1514
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Maximum number of simultaneous uploads</p>"
          }
        ]
      },
      "name": "maxConnections",
      "propertyType": "new",
      "event": "changeMaxConnections",
      "nullable": false,
      "init": 5,
      "allowNull": false,
      "check": "Integer",
      "defaultValue": 5
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__lastId": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1566
        },
        "end": {
          "line": 61,
          "column": 15,
          "index": 1577
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "private"
    },
    "__uploader": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1609
        },
        "end": {
          "line": 64,
          "column": 20,
          "index": 1625
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "private"
    },
    "__queue": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1685
        },
        "end": {
          "line": 67,
          "column": 17,
          "index": 1698
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "private"
    },
    "__current": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1770
        },
        "end": {
          "line": 70,
          "column": 19,
          "index": 1785
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "private"
    },
    "__params": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1832
        },
        "end": {
          "line": 73,
          "column": 18,
          "index": 1846
        }
      },
      "jsdoc": {},
      "type": "variable",
      "access": "private"
    },
    "addFile": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2182
        },
        "end": {
          "line": 95,
          "column": 5,
          "index": 2517
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a file to the upload queue; this does not start uploading until\n beginUploads is called.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input\n          {DOM} either one input[type=file] or an array of\n          input[type=file]",
            "paramName": "input",
            "description": " either one input[type=file] or an array of\n          input[type=file]",
            "type": "DOM"
          },
          {
            "name": "@param",
            "body": "widget\n          {Widget} the widget that trigger the upload",
            "paramName": "widget",
            "description": " the widget that trigger the upload",
            "type": "Widget"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addBlob": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2769
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 2829
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a blob to the upload list</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename    {String}  name of object",
            "paramName": "filename",
            "description": "  name of object",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "blob        {Blob}    the blob to upload",
            "paramName": "blob",
            "description": "    the blob to upload",
            "type": "Blob"
          },
          {
            "name": "@param",
            "body": "params      {Object}  List of params added to the upload params",
            "paramName": "params",
            "description": "  List of params added to the upload params",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_addFile": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 2980
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 3105
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a file to the outbound queue</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} the file to add",
            "paramName": "file",
            "description": " the file to add",
            "type": "com.zenesis.qx.upload.File"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "beginUploads": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3199
        },
        "end": {
          "line": 133,
          "column": 5,
          "index": 3547
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Begins spooling uploads to the server, up to the maxConnections</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancel": {
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 3682
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 3960
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cancels a file</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} the file to cancel",
            "paramName": "file",
            "description": " the file to cancel",
            "type": "com.zenesis.qx.upload.File"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancelAll": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4010
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 4242
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cancels all uploads</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_cancel": {
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 4377
        },
        "end": {
          "line": 181,
          "column": 5,
          "index": 4913
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cancels a file</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} the file to cancel",
            "paramName": "file",
            "description": " the file to cancel",
            "type": "com.zenesis.qx.upload.File"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onCompleted": {
      "location": {
        "start": {
          "line": 192,
          "column": 4,
          "index": 5182
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 5816
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called by derived classes when a file has completed</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} the file which has finsihed\n          uploading",
            "paramName": "file",
            "description": " the file which has finsihed\n          uploading",
            "type": "com.zenesis.qx.upload.File"
          },
          {
            "name": "@param",
            "body": "response\n          {String} text received",
            "paramName": "response",
            "description": " text received",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getUploader": {
      "location": {
        "start": {
          "line": 219,
          "column": 4,
          "index": 5924
        },
        "end": {
          "line": 221,
          "column": 5,
          "index": 5976
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the uploader</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{com.zenesis.qx.upload.UploadMgr}",
            "type": "com.zenesis.qx.upload.UploadMgr",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getUniqueFileId": {
      "location": {
        "start": {
          "line": 228,
          "column": 4,
          "index": 6060
        },
        "end": {
          "line": 230,
          "column": 5,
          "index": 6116
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Allocates a unique ID</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number}",
            "type": "Number",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "addParam": {
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 6461
        },
        "end": {
          "line": 248,
          "column": 5,
          "index": 6697
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a parameter to send to the client</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key\n          {String} the name of the parameter",
            "paramName": "key",
            "description": " the name of the parameter",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value\n          {String} the value of the parameter",
            "paramName": "value",
            "description": " the value of the parameter",
            "type": "String"
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{1.0} see com.zenesis.qx.upload.UploadMgr.setParam or\n             com.zenesis.qx.upload.File.setParam"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getParams": {
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 6848
        },
        "end": {
          "line": 262,
          "column": 5,
          "index": 7069
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the paramaters map</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "description": ""
          }
        ],
        "@deprecated": [
          {
            "name": "@deprecated",
            "body": "{1.0} see com.zenesis.qx.upload.File.getParam"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getMergedParams": {
      "location": {
        "start": {
          "line": 272,
          "column": 4,
          "index": 7348
        },
        "end": {
          "line": 292,
          "column": 5,
          "index": 8071
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper method that produces a final list of parameter values, by merging\n those set in this with those in the file.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {File} the file object",
            "paramName": "file",
            "description": " the file object",
            "type": "com.zenesis.qx.upload.File"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} map of parameters to sent to the server",
            "type": "Map",
            "description": " map of parameters to sent to the server"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_createFile": {
      "location": {
        "start": {
          "line": 302,
          "column": 4,
          "index": 8350
        },
        "end": {
          "line": 304,
          "column": 5,
          "index": 8397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Implementation must create a com.zenesis.qx.upload.File or array of\n com.zenesis.qx.upload.File</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "input\n          {DOM} the DOM input[type=file]",
            "paramName": "input",
            "description": " the DOM input[type=file]",
            "type": "DOM"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]}",
            "type": "com.zenesis.qx.upload.File|com.zenesis.qx.upload.File[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_doUpload": {
      "location": {
        "start": {
          "line": 312,
          "column": 4,
          "index": 8547
        },
        "end": {
          "line": 314,
          "column": 5,
          "index": 8591
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called to do the real work of uploading the file</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File}"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_doCancel": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 8745
        },
        "end": {
          "line": 324,
          "column": 5,
          "index": 8789
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called to cancel the upload</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "file\n          {com.zenesis.qx.upload.File} file to cancel uploading",
            "paramName": "file",
            "description": " file to cancel uploading",
            "type": "com.zenesis.qx.upload.File"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getMaxConnections": {
      "type": "function",
      "name": "getMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxConnections</code>.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for maxConnections"
          }
        ]
      }
    },
    "setMaxConnections": {
      "type": "function",
      "name": "setMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxConnections</code>.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for maxConnections"
          }
        ]
      }
    },
    "resetMaxConnections": {
      "type": "function",
      "name": "resetMaxConnections",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxConnections</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxConnections}."
          }
        ]
      }
    }
  },
  "descendants": [
    "com.zenesis.qx.upload.XhrHandler",
    "com.zenesis.qx.upload.FormHandler"
  ]
}