{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "com",
    "zenesis",
    "upload",
    "AbstractHandler",
    "members",
    "addBlob",
    "filename",
    "blob",
    "params",
    "id",
    "_getUniqueFileId",
    "file",
    "File",
    "name",
    "value",
    "setParam",
    "_addFile",
    "_createFile",
    "input",
    "bomFiles",
    "files",
    "length",
    "debug",
    "i",
    "bomFile",
    "fileName",
    "fileSize",
    "size",
    "setSize",
    "push",
    "_doUpload",
    "sendAsMime",
    "binaryData",
    "body",
    "boundary",
    "xhr",
    "open",
    "action",
    "setRequestHeader",
    "encodeURIComponent",
    "getFilename",
    "send",
    "headerLength",
    "DEFAULT_HEADERS",
    "Accept",
    "Connection",
    "getSize",
    "Host",
    "document",
    "location",
    "host",
    "Pragma",
    "Referer",
    "href",
    "navigator",
    "userAgent",
    "origin",
    "Origin",
    "key",
    "XMLHttpRequest",
    "XhrHandler",
    "isWithCredentials",
    "withCredentials",
    "self",
    "setUserData",
    "onprogress",
    "e",
    "lengthComputable",
    "total",
    "loaded",
    "setProgress",
    "onreadystatechange",
    "readyState",
    "response",
    "responseText",
    "setStatus",
    "status",
    "_onCompleted",
    "FormData",
    "fd",
    "_getUploader",
    "getUploadUrl",
    "_getMergedParams",
    "append",
    "getBrowserObject",
    "browserFile",
    "Math",
    "random",
    "type",
    "getAsBinary",
    "reader",
    "FileReader",
    "onload",
    "evt",
    "target",
    "result",
    "readAsBinaryString",
    "_doCancel",
    "getUserData",
    "abort",
    "statics",
    "__withCredentials",
    "isSupported",
    "requireMultipartFormData",
    "createElement",
    "setWithCredentials"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/XhrHandler.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n     Parts of this code is based on the work by Andrew Valums (andrew@valums.com)\n     and is covered by the GNU GPL and GNU LGPL2 licenses; please see\n     http://valums.com/ajax-upload/.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n/**\n * @ignore(File)\n * @ignore(FileReader)\n * @ignore(FormData)\n */\n/**\n * Implementation of AbstractHandler that uses XMLHttpRequest; this is based on\n * work at http://valums.com/ajax-upload/.\n *\n * Call com.zenesis.qx.upload.XhrHandler.isSupported() to check whether this\n * class can be used (otherwise use FormHandler)\n */\nqx.Class.define(\"com.zenesis.qx.upload.XhrHandler\", {\n  extend: com.zenesis.qx.upload.AbstractHandler,\n\n  members: {\n    /*\n     * @Override\n     */\n    addBlob(filename, blob, params) {\n      var id = \"upload-\" + this._getUniqueFileId();\n      var file = new com.zenesis.qx.upload.File(blob, filename, id);\n      if (params) {\n        for (var name in params) {\n          var value = params[name];\n          if (value !== null) file.setParam(name, value);\n        }\n      }\n      this._addFile(file);\n    },\n\n    /*\n     * @Override\n     */\n    _createFile(input) {\n      var bomFiles = input.files;\n      if (!bomFiles || !bomFiles.length)\n        this.debug(\"No files found to upload via XhrHandler\");\n\n      var files = [];\n      for (var i = 0; i < bomFiles.length; i++) {\n        var bomFile = bomFiles[i];\n        var id = \"upload-\" + this._getUniqueFileId();\n        var filename =\n          typeof bomFile.name != \"undefined\" ? bomFile.name : bomFile.fileName;\n        var file = new com.zenesis.qx.upload.File(bomFile, filename, id);\n        var fileSize =\n          typeof bomFile.size != \"undefined\" ? bomFile.size : bomFile.fileSize;\n        file.setSize(fileSize);\n        files.push(file);\n      }\n\n      return files;\n    },\n\n    /*\n     * @Override\n     */\n    _doUpload(file) {\n      function sendAsMime(binaryData) {\n        body += binaryData + \"\\r\\n\";\n        body += \"--\" + boundary + \"--\";\n\n        xhr.open(\"POST\", action, true);\n        setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        setRequestHeader(\"X-File-Name\", encodeURIComponent(file.getFilename()));\n        setRequestHeader(\n          \"Content-Type\",\n          \"multipart/form-data; boundary=\" + boundary\n        );\n        xhr.send(body);\n      }\n\n      function setRequestHeader(name, value) {\n        xhr.setRequestHeader(name, value);\n        headerLength += name.length + 2 + value.length + 1;\n      }\n\n      /*\n       * The upload progress includes the size of the headers, but we cannot ask XMLHttpRequest what the\n       * headers were so we count the headers we set and also add these below.  This is never going to be\n       * completely accurate, but it gets us a lot closer.\n       */\n      var headerLength = 0;\n      var DEFAULT_HEADERS = {\n        Accept: \"*/*\",\n        \"Accept-Encoding\": \"gzip, deflate\",\n        \"Accept-Language\": \"en,en-US;q=0.8\",\n        \"Cache-Control\": \"no-cache\",\n        Connection: \"keep-alive\",\n        \"Content-Length\": \"\" + file.getSize(),\n        \"Content-Type\":\n          \"multipart/form-data; boundary=----WebKitFormBoundaryTfptZDRmE8C3dZmW\",\n        Host: document.location.host,\n        Pragma: \"no-cache\",\n        Referer: document.location.href,\n        \"User-Agent\": navigator.userAgent,\n      };\n\n      if (document.location.origin)\n        DEFAULT_HEADERS.Origin = document.location.origin;\n      for (var key in DEFAULT_HEADERS)\n        headerLength += DEFAULT_HEADERS[key].length + 1;\n\n      var xhr = new XMLHttpRequest();\n      if (com.zenesis.qx.upload.XhrHandler.isWithCredentials())\n        xhr.withCredentials = true;\n\n      var self = this;\n\n      file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", xhr);\n\n      xhr.upload.onprogress = function (e) {\n        self.debug(\n          \"onprogress: lengthComputable=\" +\n            e.lengthComputable +\n            \", total=\" +\n            e.total +\n            \", loaded=\" +\n            e.loaded +\n            \", headerLength=\" +\n            headerLength\n        );\n        if (e.lengthComputable) {\n          file.setSize(e.total - headerLength);\n          file.setProgress(e.loaded - headerLength);\n        }\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          var response = xhr.responseText;\n          // self.debug(\"xhr server status=\" + xhr.status + \", responseText=\" +\n          // response);\n          file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", null);\n          file.setStatus(xhr.status);\n          self._onCompleted(file, response);\n        }\n      };\n\n      if (typeof FormData == \"function\" || typeof FormData == \"object\") {\n        var fd = new FormData();\n\n        // build query string\n        var action = this._getUploader().getUploadUrl();\n        var params = this._getMergedParams(file);\n        for (var name in params)\n          fd.append(name, encodeURIComponent(params[name]));\n        fd.append(\"file\", file.getBrowserObject());\n\n        xhr.open(\"POST\", action, true);\n        setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        setRequestHeader(\"X-File-Name\", encodeURIComponent(file.getFilename()));\n        xhr.send(fd);\n      } else {\n        var browserFile = file.getBrowserObject();\n        var boundary = \"--------FormData\" + Math.random(),\n          body = \"\",\n          action = this._getUploader().getUploadUrl(),\n          params = this._getMergedParams(file);\n        for (var name in params) {\n          body += \"--\" + boundary + \"\\r\\n\";\n          body +=\n            'Content-Disposition: form-data; name=\"' + name + '\";\\r\\n\\r\\n';\n          body += params[name] + \"\\r\\n\";\n        }\n        body += \"--\" + boundary + \"\\r\\n\";\n        body +=\n          'Content-Disposition: form-data; name=\"file\"; filename=\"' +\n          file.getFilename() +\n          '\"\\r\\n';\n        body +=\n          \"Content-Type: \" +\n          (browserFile.type || \"application/octet-stream\") +\n          \"\\r\\n\\r\\n\";\n\n        if (typeof browserFile.getAsBinary == \"function\") {\n          sendAsMime(browserFile.getAsBinary());\n        } else {\n          var reader = new FileReader();\n          reader.onload = function (evt) {\n            sendAsMime(evt.target.result);\n          };\n          reader.readAsBinaryString(browserFile);\n        }\n      }\n    },\n\n    /*\n     * @Override\n     */\n    _doCancel(file) {\n      var xhr = file.getUserData(\"com.zenesis.qx.upload.XhrHandler\");\n      if (xhr) {\n        xhr.abort();\n        file.setUserData(\"com.zenesis.qx.upload.XhrHandler\", null);\n      }\n    },\n  },\n\n  statics: {\n    __withCredentials: false,\n\n    /**\n     * Detects whether this handler is support on the current browser\n     *\n     * @returns {Boolean}\n     */\n    isSupported(requireMultipartFormData) {\n      var input = document.createElement(\"input\");\n      input.type = \"file\";\n\n      var isSupported =\n        \"multiple\" in input &&\n        typeof File != \"undefined\" &&\n        typeof new XMLHttpRequest().upload != \"undefined\";\n\n      return isSupported;\n    },\n\n    /**\n     * Whether to set XMLHttpRequest.withCredentials (used for CORS uploads wth\n     * cookies)\n     */\n    setWithCredentials(value) {\n      this.__withCredentials = true;\n    },\n\n    /**\n     * Whether to set XMLHttpRequest.withCredentials (used for CORS uploads wth\n     * cookies)\n     */\n    isWithCredentials() {\n      return this.__withCredentials;\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}