{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "com",
    "zenesis",
    "upload",
    "MParameters",
    "construct",
    "widget",
    "uploadUrl",
    "constructor",
    "call",
    "__widgetsData",
    "addWidget",
    "setUploadUrl",
    "events",
    "addFile",
    "beginUpload",
    "completeUpload",
    "cancelUpload",
    "properties",
    "check",
    "nullable",
    "init",
    "event",
    "autoUpload",
    "apply",
    "multiple",
    "_defineProperty",
    "directory",
    "inputNamePrefix",
    "requireMultipartFormData",
    "members",
    "__inputSerial",
    "__uploadHandler",
    "__uploadId",
    "appearId",
    "addListenerOnce",
    "evt",
    "data",
    "toHashCode",
    "container",
    "getContentElement",
    "setStyle",
    "getEnabled",
    "inputElement",
    "addAt",
    "_createInputElement",
    "__fixupSize",
    "keydownId",
    "Environment",
    "get",
    "addListener",
    "dom",
    "getDomElement",
    "click",
    "getData",
    "_removeInputElement",
    "hasMixin",
    "MUploadButton",
    "bind",
    "removeWidget",
    "removeListener",
    "addBlob",
    "filename",
    "blob",
    "params",
    "getUploadHandler",
    "getAutoUpload",
    "beginUploads",
    "bounds",
    "getBounds",
    "setStyles",
    "width",
    "height",
    "_applyAutoUpload",
    "value",
    "oldValue",
    "_applyMultiple",
    "hash",
    "setMultiple",
    "_applyDirectory",
    "setDirectory",
    "_applyRequireMultipartFormData",
    "Error",
    "cancel",
    "file",
    "cancelAll",
    "name",
    "getInputNamePrefix",
    "Assert",
    "assertNull",
    "elem",
    "InputElement",
    "lang",
    "Function",
    "_onInputChange",
    "remove",
    "_resetInputElement",
    "getWidget",
    "XhrHandler",
    "isSupported",
    "isRequireMultipartFormData",
    "FormHandler",
    "setUploadHandler",
    "handler",
    "allocateUploadId",
    "UploadMgr"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/UploadMgr.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Manages uploading of files to the server; this class can use any suitable\n * widget to attach the input[type=file] to, provided the widget includes\n * com.zenesis.qx.upload.MUploadButton.\n *\n * Uploader will use XhrHandler to upload via XMLHttpRequest if supported or\n * will fall back to FormHandler.\n *\n * @require(qx.event.handler.Input)\n */\nqx.Class.define(\"com.zenesis.qx.upload.UploadMgr\", {\n  extend: qx.core.Object,\n  include: [com.zenesis.qx.upload.MParameters],\n\n  construct(widget, uploadUrl) {\n    super();\n    this.__widgetsData = {};\n    if (widget) this.addWidget(widget);\n    if (uploadUrl) this.setUploadUrl(uploadUrl);\n  },\n\n  events: {\n    /**\n     * Fired when a file is added to the queue; data is the\n     * com.zenesis.qx.upload.File\n     */\n    addFile: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file starts to be uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    beginUpload: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file has been uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    completeUpload: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file upload has been cancelled; data is the\n     * com.zenesis.qx.upload.File\n     */\n    cancelUpload: \"qx.event.type.Data\",\n  },\n\n  properties: {\n    /**\n     * The URL to upload to\n     */\n    uploadUrl: {\n      check: \"String\",\n      nullable: false,\n      init: \"\",\n      event: \"changeUploadUrl\",\n    },\n\n    /**\n     * Whether to automatically start uploading when a file is added\n     * (default=true)\n     */\n    autoUpload: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeAutoUpload\",\n      apply: \"_applyAutoUpload\",\n    },\n\n    /**\n     * Whether to support multiple files (default=true); this is not supported\n     * on older browsers\n     */\n    multiple: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeMultiple\",\n      apply: \"_applyMultiple\",\n      event: \"changeMultiple\",\n    },\n\n    directory: {\n      init: false,\n      check: \"Boolean\",\n      nullable: false,\n      apply: \"_applyDirectory\",\n      event: \"changeDirectory\",\n    },\n\n    /**\n     * Prefix to apply to the name of input fields\n     */\n    inputNamePrefix: {\n      check: \"String\",\n      init: \"uploadMgrInput\",\n      nullable: false,\n      event: \"changeInputNamePrefix\",\n    },\n\n    /**\n     * Whether the server can only handle multipart/form-data content type\n     */\n    requireMultipartFormData: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeRequireMultipartFormData\",\n      apply: \"_applyRequireMultipartFormData\",\n    },\n  },\n\n  members: {\n    __widgetsData: null,\n    __inputSerial: 0,\n    __uploadHandler: null,\n    __uploadId: 0,\n\n    /**\n     * Adds a widget which is to have an input[type=file] attached; this would\n     * typically be an instance of com.zenesis.qx.upload.UploadButton (see\n     * com.zenesis.qx.upload.MUploadButton for implementing for other widgets)\n     */\n    addWidget(widget) {\n      var appearId = widget.addListenerOnce(\n        \"appear\",\n        function (evt) {\n          var data = this.__widgetsData[widget.toHashCode()];\n          if (data) {\n            data.appearId = null;\n            var container = widget.getContentElement();\n            container.setStyle(\"overflow\", \"hidden\");\n            if (widget.getEnabled() && !data.inputElement)\n              container.addAt(this._createInputElement(widget), 0);\n            this.__fixupSize(widget);\n          }\n        },\n        this\n      );\n      var keydownId = null;\n      if (qx.core.Environment.get(\"engine.name\") != \"gecko\") {\n        keydownId = widget.addListener(\n          \"keydown\",\n          function (evt) {\n            var data = this.__widgetsData[widget.toHashCode()];\n            if (data && data.inputElement) {\n              var dom = data.inputElement.getDomElement();\n              if (dom && typeof dom.click == \"function\") {\n                // dom.focus();\n                dom.click();\n              }\n            }\n          },\n          this\n        );\n      }\n      this.__widgetsData[widget.toHashCode()] = {\n        appearId: appearId,\n        keydownId: keydownId,\n        widget: widget,\n        inputElement: null,\n      };\n\n      widget.addListener(\n        \"resize\",\n        function (evt) {\n          this.__fixupSize(widget);\n        },\n        this\n      );\n      widget.addListener(\n        \"changeEnabled\",\n        function (evt) {\n          if (evt.getData()) {\n            var container = widget.getContentElement();\n            container.addAt(this._createInputElement(widget), 0);\n          } else {\n            this._removeInputElement(widget);\n          }\n        },\n        this\n      );\n      if (\n        qx.Class.hasMixin(\n          widget.constructor,\n          com.zenesis.qx.upload.MUploadButton\n        )\n      ) {\n        this.bind(\"multiple\", widget, \"multiple\");\n        this.bind(\"directory\", widget, \"directory\");\n      }\n    },\n\n    /**\n     * Removes a widget\n     *\n     * @param widget {qx.ui.core.Widget} Widget to remvove\n     */\n    removeWidget(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data) {\n        if (data.appearId) widget.removeListener(data.appearId);\n        if (data.keydownId) widget.removeListener(data.keydownId);\n        delete this.__widgetsData[widget.toHashCode()];\n      }\n    },\n\n    /**\n     * Adds a blob to the upload list\n     *\n     * @param blob    {Blob}    the blob to upload\n     * @param params  {Object}  List of params added to the upload params\n     */\n    addBlob(filename, blob, params) {\n      this.getUploadHandler().addBlob(filename, blob, params);\n      if (this.getAutoUpload()) this.getUploadHandler().beginUploads();\n    },\n\n    /**\n     * Helper method that corrects the size of the input element to match the\n     * size of the widget\n     *\n     * @param widget {qx.ui.core.Widget} Widget to fixup size\n     */\n    __fixupSize(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data && data.inputElement) {\n        var bounds = widget.getBounds();\n        // It may be that if the widgets icon is styled\n        // through a theme, neither label nor icon are set yet.\n        // In this situation bounds calculation would fail.\n        if (bounds) {\n          data.inputElement.setStyles({\n            width: bounds.width + \"px\",\n            height: bounds.height + \"px\",\n          });\n        }\n      }\n    },\n\n    // property apply\n    _applyAutoUpload(value, oldValue) {\n      this.getUploadHandler().beginUploads();\n    },\n\n    // property apply\n    _applyMultiple(value, oldValue) {\n      for (var hash in this.__widgetsData) {\n        var data = this.__widgetsData[hash];\n        if (data.inputElement) data.inputElement.setMultiple(value);\n      }\n    },\n\n    // property directory\n    _applyDirectory(value, oldValue) {\n      for (var hash in this.__widgetsData) {\n        var data = this.__widgetsData[hash];\n        if (data.inputElement) data.inputElement.setDirectory(value);\n      }\n    },\n\n    // property apply\n    _applyRequireMultipartFormData(value, oldValue) {\n      if (this.__uploadHandler)\n        throw new Error(\n          \"Changing the requireMultipartFormData property of \" +\n            this +\n            \" has no effect once uploads have started\"\n        );\n    },\n\n    /**\n     * Cancels a file being uploaded\n     *\n     * @param file {String} Upload to cancel\n     */\n    cancel(file) {\n      this.getUploadHandler().cancel(file);\n    },\n\n    /**\n     * Cancels all files being uploaded\n     */\n    cancelAll() {\n      this.getUploadHandler().cancelAll();\n    },\n\n    /**\n     * Creates the input[type=file] element\n     *\n     * @returns\n     */\n    _createInputElement(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var name = this.getInputNamePrefix() + \"-\" + ++this.__inputSerial;\n      qx.core.Assert.assertNull(data.inputElement);\n      var elem = (data.inputElement = new com.zenesis.qx.upload.InputElement(\n        widget,\n        name\n      ));\n      elem.addListenerOnce(\n        \"change\",\n        qx.lang.Function.bind(this._onInputChange, this, elem)\n      );\n      return elem;\n    },\n\n    /**\n     * Removes the input element - ie discards the current one (which presumably\n     * has already been queued for uploading)\n     */\n    _removeInputElement(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var elem = data.inputElement;\n      var container = widget.getContentElement();\n      data.inputElement = null;\n      if (elem) container.remove(elem);\n    },\n\n    /**\n     * Resets the input element - ie discards the current one (which presumably\n     * has already been queued for uploading) and creates a new one\n     */\n    _resetInputElement(widget) {\n      this._removeInputElement(widget);\n      var container = widget.getContentElement();\n      container.addAt(this._createInputElement(widget), 0);\n    },\n\n    /**\n     * Callback for changes to the input[ty=file]'s value, ie this is called\n     * when the user has selected a file to upload\n     *\n     * @param elem {Element} Element which is affected\n     * @param evt {Event} Event data\n     */\n    _onInputChange(elem, evt) {\n      var widget = elem.getWidget();\n\n      this.getUploadHandler().addFile(elem.getDomElement(), widget);\n      if (this.getAutoUpload()) this.getUploadHandler().beginUploads();\n      this._resetInputElement(widget);\n    },\n\n    /**\n     * Returns the upload handler\n     *\n     * @returns\n     */\n    getUploadHandler() {\n      if (!this.__uploadHandler) {\n        if (\n          com.zenesis.qx.upload.XhrHandler.isSupported(\n            this.isRequireMultipartFormData()\n          )\n        )\n          this.__uploadHandler = new com.zenesis.qx.upload.XhrHandler(this);\n        else this.__uploadHandler = new com.zenesis.qx.upload.FormHandler(this);\n      }\n      return this.__uploadHandler;\n    },\n\n    /**\n     * Sets the upload handler\n     *\n     * @param elem {AbstractHandler} The upload handler\n     */\n    setUploadHandler(handler) {\n      this.__uploadHandler = handler;\n    },\n\n    /**\n     * Allocates a new upload ID; this is just a unique number that widgets or\n     * application code can use to uniquely identify themselves to the server\n     */\n    allocateUploadId() {\n      return \"uploadId:\" + ++this.__uploadId;\n    },\n  },\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}