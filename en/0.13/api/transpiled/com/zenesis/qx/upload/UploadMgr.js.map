{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "com",
    "zenesis",
    "upload",
    "MParameters",
    "construct",
    "widget",
    "uploadUrl",
    "__widgetsData",
    "addWidget",
    "setUploadUrl",
    "events",
    "addFile",
    "beginUpload",
    "completeUpload",
    "cancelUpload",
    "properties",
    "check",
    "nullable",
    "init",
    "event",
    "autoUpload",
    "apply",
    "multiple",
    "directory",
    "inputNamePrefix",
    "requireMultipartFormData",
    "members",
    "__inputSerial",
    "__uploadHandler",
    "__uploadId",
    "appearId",
    "addListenerOnce",
    "evt",
    "data",
    "toHashCode",
    "container",
    "getContentElement",
    "setStyle",
    "getEnabled",
    "inputElement",
    "addAt",
    "_createInputElement",
    "__fixupSize",
    "keydownId",
    "Environment",
    "get",
    "addListener",
    "dom",
    "getDomElement",
    "click",
    "getData",
    "_removeInputElement",
    "hasMixin",
    "constructor",
    "MUploadButton",
    "bind",
    "removeWidget",
    "removeListener",
    "addBlob",
    "filename",
    "blob",
    "params",
    "getUploadHandler",
    "getAutoUpload",
    "beginUploads",
    "bounds",
    "getBounds",
    "setStyles",
    "width",
    "height",
    "_applyAutoUpload",
    "value",
    "oldValue",
    "_applyMultiple",
    "hash",
    "setMultiple",
    "_applyDirectory",
    "setDirectory",
    "_applyRequireMultipartFormData",
    "Error",
    "cancel",
    "file",
    "cancelAll",
    "name",
    "getInputNamePrefix",
    "Assert",
    "assertNull",
    "elem",
    "InputElement",
    "lang",
    "Function",
    "_onInputChange",
    "remove",
    "_resetInputElement",
    "getWidget",
    "XhrHandler",
    "isSupported",
    "isRequireMultipartFormData",
    "FormHandler",
    "setUploadHandler",
    "handler",
    "allocateUploadId",
    "UploadMgr"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/johnspackman_UploadMgr_v2_0_0/source/class/com/zenesis/qx/upload/UploadMgr.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   UploadMgr - provides an API for uploading one or multiple files\n   with progress feedback (on modern browsers), does not block the user \n   interface during uploads, supports cancelling uploads.\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     \n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory \n     for details.\n\n   Authors:\n * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************/\n\n/**\n * Manages uploading of files to the server; this class can use any suitable\n * widget to attach the input[type=file] to, provided the widget includes\n * com.zenesis.qx.upload.MUploadButton.\n *\n * Uploader will use XhrHandler to upload via XMLHttpRequest if supported or\n * will fall back to FormHandler.\n *\n * @require(qx.event.handler.Input)\n */\nqx.Class.define(\"com.zenesis.qx.upload.UploadMgr\", {\n  extend: qx.core.Object,\n  include: [com.zenesis.qx.upload.MParameters],\n\n  construct(widget, uploadUrl) {\n    super();\n    this.__widgetsData = {};\n    if (widget) this.addWidget(widget);\n    if (uploadUrl) this.setUploadUrl(uploadUrl);\n  },\n\n  events: {\n    /**\n     * Fired when a file is added to the queue; data is the\n     * com.zenesis.qx.upload.File\n     */\n    addFile: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file starts to be uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    beginUpload: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file has been uploaded; data is the\n     * com.zenesis.qx.upload.File\n     */\n    completeUpload: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a file upload has been cancelled; data is the\n     * com.zenesis.qx.upload.File\n     */\n    cancelUpload: \"qx.event.type.Data\",\n  },\n\n  properties: {\n    /**\n     * The URL to upload to\n     */\n    uploadUrl: {\n      check: \"String\",\n      nullable: false,\n      init: \"\",\n      event: \"changeUploadUrl\",\n    },\n\n    /**\n     * Whether to automatically start uploading when a file is added\n     * (default=true)\n     */\n    autoUpload: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeAutoUpload\",\n      apply: \"_applyAutoUpload\",\n    },\n\n    /**\n     * Whether to support multiple files (default=true); this is not supported\n     * on older browsers\n     */\n    multiple: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeMultiple\",\n      apply: \"_applyMultiple\",\n      event: \"changeMultiple\",\n    },\n\n    directory: {\n      init: false,\n      check: \"Boolean\",\n      nullable: false,\n      apply: \"_applyDirectory\",\n      event: \"changeDirectory\",\n    },\n\n    /**\n     * Prefix to apply to the name of input fields\n     */\n    inputNamePrefix: {\n      check: \"String\",\n      init: \"uploadMgrInput\",\n      nullable: false,\n      event: \"changeInputNamePrefix\",\n    },\n\n    /**\n     * Whether the server can only handle multipart/form-data content type\n     */\n    requireMultipartFormData: {\n      check: \"Boolean\",\n      init: true,\n      nullable: false,\n      event: \"changeRequireMultipartFormData\",\n      apply: \"_applyRequireMultipartFormData\",\n    },\n  },\n\n  members: {\n    __widgetsData: null,\n    __inputSerial: 0,\n    __uploadHandler: null,\n    __uploadId: 0,\n\n    /**\n     * Adds a widget which is to have an input[type=file] attached; this would\n     * typically be an instance of com.zenesis.qx.upload.UploadButton (see\n     * com.zenesis.qx.upload.MUploadButton for implementing for other widgets)\n     */\n    addWidget(widget) {\n      var appearId = widget.addListenerOnce(\n        \"appear\",\n        function (evt) {\n          var data = this.__widgetsData[widget.toHashCode()];\n          if (data) {\n            data.appearId = null;\n            var container = widget.getContentElement();\n            container.setStyle(\"overflow\", \"hidden\");\n            if (widget.getEnabled() && !data.inputElement)\n              container.addAt(this._createInputElement(widget), 0);\n            this.__fixupSize(widget);\n          }\n        },\n        this\n      );\n      var keydownId = null;\n      if (qx.core.Environment.get(\"engine.name\") != \"gecko\") {\n        keydownId = widget.addListener(\n          \"keydown\",\n          function (evt) {\n            var data = this.__widgetsData[widget.toHashCode()];\n            if (data && data.inputElement) {\n              var dom = data.inputElement.getDomElement();\n              if (dom && typeof dom.click == \"function\") {\n                // dom.focus();\n                dom.click();\n              }\n            }\n          },\n          this\n        );\n      }\n      this.__widgetsData[widget.toHashCode()] = {\n        appearId: appearId,\n        keydownId: keydownId,\n        widget: widget,\n        inputElement: null,\n      };\n\n      widget.addListener(\n        \"resize\",\n        function (evt) {\n          this.__fixupSize(widget);\n        },\n        this\n      );\n      widget.addListener(\n        \"changeEnabled\",\n        function (evt) {\n          if (evt.getData()) {\n            var container = widget.getContentElement();\n            container.addAt(this._createInputElement(widget), 0);\n          } else {\n            this._removeInputElement(widget);\n          }\n        },\n        this\n      );\n      if (\n        qx.Class.hasMixin(\n          widget.constructor,\n          com.zenesis.qx.upload.MUploadButton\n        )\n      ) {\n        this.bind(\"multiple\", widget, \"multiple\");\n        this.bind(\"directory\", widget, \"directory\");\n      }\n    },\n\n    /**\n     * Removes a widget\n     *\n     * @param widget {qx.ui.core.Widget} Widget to remvove\n     */\n    removeWidget(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data) {\n        if (data.appearId) widget.removeListener(data.appearId);\n        if (data.keydownId) widget.removeListener(data.keydownId);\n        delete this.__widgetsData[widget.toHashCode()];\n      }\n    },\n\n    /**\n     * Adds a blob to the upload list\n     *\n     * @param blob    {Blob}    the blob to upload\n     * @param params  {Object}  List of params added to the upload params\n     */\n    addBlob(filename, blob, params) {\n      this.getUploadHandler().addBlob(filename, blob, params);\n      if (this.getAutoUpload()) this.getUploadHandler().beginUploads();\n    },\n\n    /**\n     * Helper method that corrects the size of the input element to match the\n     * size of the widget\n     *\n     * @param widget {qx.ui.core.Widget} Widget to fixup size\n     */\n    __fixupSize(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      if (data && data.inputElement) {\n        var bounds = widget.getBounds();\n        // It may be that if the widgets icon is styled\n        // through a theme, neither label nor icon are set yet.\n        // In this situation bounds calculation would fail.\n        if (bounds) {\n          data.inputElement.setStyles({\n            width: bounds.width + \"px\",\n            height: bounds.height + \"px\",\n          });\n        }\n      }\n    },\n\n    // property apply\n    _applyAutoUpload(value, oldValue) {\n      this.getUploadHandler().beginUploads();\n    },\n\n    // property apply\n    _applyMultiple(value, oldValue) {\n      for (var hash in this.__widgetsData) {\n        var data = this.__widgetsData[hash];\n        if (data.inputElement) data.inputElement.setMultiple(value);\n      }\n    },\n\n    // property directory\n    _applyDirectory(value, oldValue) {\n      for (var hash in this.__widgetsData) {\n        var data = this.__widgetsData[hash];\n        if (data.inputElement) data.inputElement.setDirectory(value);\n      }\n    },\n\n    // property apply\n    _applyRequireMultipartFormData(value, oldValue) {\n      if (this.__uploadHandler)\n        throw new Error(\n          \"Changing the requireMultipartFormData property of \" +\n            this +\n            \" has no effect once uploads have started\"\n        );\n    },\n\n    /**\n     * Cancels a file being uploaded\n     *\n     * @param file {String} Upload to cancel\n     */\n    cancel(file) {\n      this.getUploadHandler().cancel(file);\n    },\n\n    /**\n     * Cancels all files being uploaded\n     */\n    cancelAll() {\n      this.getUploadHandler().cancelAll();\n    },\n\n    /**\n     * Creates the input[type=file] element\n     *\n     * @returns\n     */\n    _createInputElement(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var name = this.getInputNamePrefix() + \"-\" + ++this.__inputSerial;\n      qx.core.Assert.assertNull(data.inputElement);\n      var elem = (data.inputElement = new com.zenesis.qx.upload.InputElement(\n        widget,\n        name\n      ));\n      elem.addListenerOnce(\n        \"change\",\n        qx.lang.Function.bind(this._onInputChange, this, elem)\n      );\n      return elem;\n    },\n\n    /**\n     * Removes the input element - ie discards the current one (which presumably\n     * has already been queued for uploading)\n     */\n    _removeInputElement(widget) {\n      var data = this.__widgetsData[widget.toHashCode()];\n      var elem = data.inputElement;\n      var container = widget.getContentElement();\n      data.inputElement = null;\n      if (elem) container.remove(elem);\n    },\n\n    /**\n     * Resets the input element - ie discards the current one (which presumably\n     * has already been queued for uploading) and creates a new one\n     */\n    _resetInputElement(widget) {\n      this._removeInputElement(widget);\n      var container = widget.getContentElement();\n      container.addAt(this._createInputElement(widget), 0);\n    },\n\n    /**\n     * Callback for changes to the input[ty=file]'s value, ie this is called\n     * when the user has selected a file to upload\n     *\n     * @param elem {Element} Element which is affected\n     * @param evt {Event} Event data\n     */\n    _onInputChange(elem, evt) {\n      var widget = elem.getWidget();\n\n      this.getUploadHandler().addFile(elem.getDomElement(), widget);\n      if (this.getAutoUpload()) this.getUploadHandler().beginUploads();\n      this._resetInputElement(widget);\n    },\n\n    /**\n     * Returns the upload handler\n     *\n     * @returns\n     */\n    getUploadHandler() {\n      if (!this.__uploadHandler) {\n        if (\n          com.zenesis.qx.upload.XhrHandler.isSupported(\n            this.isRequireMultipartFormData()\n          )\n        )\n          this.__uploadHandler = new com.zenesis.qx.upload.XhrHandler(this);\n        else this.__uploadHandler = new com.zenesis.qx.upload.FormHandler(this);\n      }\n      return this.__uploadHandler;\n    },\n\n    /**\n     * Sets the upload handler\n     *\n     * @param elem {AbstractHandler} The upload handler\n     */\n    setUploadHandler(handler) {\n      this.__uploadHandler = handler;\n    },\n\n    /**\n     * Allocates a new upload ID; this is just a unique number that widgets or\n     * application code can use to uniquely identify themselves to the server\n     */\n    allocateUploadId() {\n      return \"uploadId:\" + ++this.__uploadId;\n    },\n  },\n});\n"
  ],
  "mappings": "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"
}