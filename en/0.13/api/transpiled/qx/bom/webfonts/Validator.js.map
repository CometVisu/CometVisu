{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "exports",
    "Op",
    "Object",
    "prototype",
    "hasOwn",
    "hasOwnProperty",
    "defineProperty",
    "obj",
    "key",
    "desc",
    "value",
    "$Symbol",
    "Symbol",
    "iteratorSymbol",
    "iterator",
    "asyncIteratorSymbol",
    "asyncIterator",
    "toStringTagSymbol",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "err",
    "wrap",
    "innerFn",
    "outerFn",
    "self",
    "tryLocsList",
    "protoGenerator",
    "Generator",
    "generator",
    "create",
    "context",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "fn",
    "arg",
    "type",
    "call",
    "ContinueSentinel",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "IteratorPrototype",
    "getProto",
    "getPrototypeOf",
    "NativeIteratorPrototype",
    "values",
    "Gp",
    "defineIteratorMethods",
    "forEach",
    "method",
    "_invoke",
    "AsyncIterator",
    "PromiseImpl",
    "invoke",
    "resolve",
    "reject",
    "record",
    "result",
    "_typeof",
    "__await",
    "then",
    "unwrapped",
    "error",
    "previousPromise",
    "callInvokeWithMethodAndArg",
    "state",
    "Error",
    "doneResult",
    "delegate",
    "delegateResult",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "methodName",
    "undefined",
    "TypeError",
    "info",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "locs",
    "entry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "iterable",
    "iteratorMethod",
    "isNaN",
    "length",
    "i",
    "displayName",
    "isGeneratorFunction",
    "genFun",
    "ctor",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "iter",
    "keys",
    "val",
    "object",
    "reverse",
    "pop",
    "skipTempReset",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rootRecord",
    "rval",
    "exception",
    "handle",
    "loc",
    "caught",
    "hasCatch",
    "hasFinally",
    "finallyEntry",
    "complete",
    "finish",
    "_catch",
    "thrown",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "_next",
    "_throw",
    "_asyncToGenerator",
    "args",
    "arguments",
    "apply",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "construct",
    "fontFamily",
    "comparisonString",
    "fontWeight",
    "fontStyle",
    "setComparisonString",
    "setFontWeight",
    "setFontStyle",
    "setFontFamily",
    "__requestedHelpers",
    "_getRequestedHelpers",
    "__promiseValid",
    "statics",
    "COMPARISON_FONTS",
    "sans",
    "serif",
    "HELPER_CSS",
    "position",
    "margin",
    "padding",
    "top",
    "left",
    "fontSize",
    "width",
    "height",
    "lineHeight",
    "fontVariant",
    "visibility",
    "COMPARISON_STRING",
    "__defaultSizes",
    "__defaultHelpers",
    "removeDefaultHelperElements",
    "defaultHelpers",
    "bom",
    "webfonts",
    "Validator",
    "prop",
    "document",
    "body",
    "removeChild",
    "properties",
    "nullable",
    "init",
    "check",
    "timeout",
    "events",
    "changeStatus",
    "members",
    "__checkTimer",
    "__checkStarted",
    "validate",
    "_this",
    "setValidImpl",
    "valid",
    "_reset",
    "fireDataEvent",
    "family",
    "getFontFamily",
    "fonts",
    "load",
    "Date",
    "getTime",
    "fontExpr",
    "concat",
    "getFontStyle",
    "getFontWeight",
    "loadImpl",
    "_ref",
    "_callee",
    "_callee$",
    "_context",
    "ready",
    "Label",
    "getTextSize",
    "setTimeout",
    "_isFontValid",
    "t0",
    "warn",
    "timerCheck",
    "Environment",
    "get",
    "parseFloat",
    "now",
    "getTimeout",
    "event",
    "Timer",
    "once",
    "addListener",
    "start",
    "isValid",
    "_this2",
    "_callee2",
    "_callee2$",
    "_context2",
    "elem",
    "__init",
    "style",
    "requestedSans",
    "element",
    "Dimension",
    "getWidth",
    "requestedSerif",
    "cls",
    "fontsSans",
    "fontsSerif",
    "_getHelperElement",
    "getComparisonString",
    "styleMap",
    "lang",
    "clone",
    "join",
    "createElement",
    "innerHTML",
    "Style",
    "setStyles",
    "appendChild",
    "_applyFontFamily",
    "old",
    "_applyFontWeight",
    "_applyFontStyle",
    "__P_160_6",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/webfonts/Validator.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Checks whether a given font is available on the document and fires events\r\n * accordingly.\r\n *\r\n * This class does not need to be disposed, unless you want to abort the validation\r\n * early\r\n */\r\nqx.Class.define(\"qx.bom.webfonts.Validator\", {\r\n  extend: qx.core.Object,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param fontFamily {String} The name of the font to be verified\r\n   * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\r\n   * @param fontWeight {String?} the weight of the font to be verified\r\n   * @param fontStyle {String?} the style of the font to be verified\r\n   * whether the font has loaded properly\r\n   */\r\n  construct(fontFamily, comparisonString, fontWeight, fontStyle) {\r\n    super();\r\n\r\n    if (comparisonString) {\r\n      this.setComparisonString(comparisonString);\r\n    }\r\n\r\n    if (fontWeight) {\r\n      this.setFontWeight(fontWeight);\r\n    }\r\n    if (fontStyle) {\r\n      this.setFontStyle(fontStyle);\r\n    }\r\n    if (fontFamily) {\r\n      this.setFontFamily(fontFamily);\r\n      this.__requestedHelpers = this._getRequestedHelpers();\r\n    }\r\n    this.__promiseValid = new qx.Promise();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * Sets of serif and sans-serif fonts to be used for size comparisons.\r\n     * At least one of these fonts should be present on any system.\r\n     */\r\n    COMPARISON_FONTS: {\r\n      sans: [\"Arial\", \"Helvetica\", \"sans-serif\"],\r\n      serif: [\"Times New Roman\", \"Georgia\", \"serif\"]\r\n    },\r\n\r\n    /**\r\n     * Map of common CSS attributes to be used for all  size comparison elements\r\n     */\r\n    HELPER_CSS: {\r\n      position: \"absolute\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      top: \"-1000px\",\r\n      left: \"-1000px\",\r\n      fontSize: \"350px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      lineHeight: \"normal\",\r\n      fontVariant: \"normal\",\r\n      visibility: \"hidden\"\r\n    },\r\n\r\n    /**\r\n     * The string to be used in the size comparison elements. This is the default string\r\n     * which is used for the {@link #COMPARISON_FONTS} and the font to be validated. It\r\n     * can be overridden for the font to be validated using the {@link #comparisonString}\r\n     * property.\r\n     */\r\n    COMPARISON_STRING: \"WEei\",\r\n    __defaultSizes: null,\r\n    __defaultHelpers: null,\r\n\r\n    /**\r\n     * Removes the two common helper elements used for all size comparisons from\r\n     * the DOM\r\n     */\r\n    removeDefaultHelperElements() {\r\n      var defaultHelpers = qx.bom.webfonts.Validator.__defaultHelpers;\r\n      if (defaultHelpers) {\r\n        for (var prop in defaultHelpers) {\r\n          document.body.removeChild(defaultHelpers[prop]);\r\n        }\r\n      }\r\n      delete qx.bom.webfonts.Validator.__defaultHelpers;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * The font-family this validator should check\r\n     */\r\n    fontFamily: {\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyFontFamily\"\r\n    },\r\n\r\n    /** The font weight to check */\r\n    fontWeight: {\r\n      nullable: true,\r\n      check: \"String\",\r\n      apply: \"_applyFontWeight\"\r\n    },\r\n\r\n    /** The font style to check */\r\n    fontStyle: {\r\n      nullable: true,\r\n      check: \"String\",\r\n      apply: \"_applyFontStyle\"\r\n    },\r\n\r\n    /**\r\n     * Comparison string used to check whether the font has loaded or not.\r\n     */\r\n    comparisonString: {\r\n      nullable: true,\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * Time in milliseconds from the beginning of the check until it is assumed\r\n     * that a font is not available\r\n     */\r\n    timeout: {\r\n      check: \"Integer\",\r\n      init: 5000\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * Fired when the status of a web font has been determined. The event data\r\n     * is a map with the keys \"family\" (the font-family name) and \"valid\"\r\n     * (Boolean).\r\n     */\r\n    changeStatus: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __requestedHelpers: null,\r\n    __checkTimer: null,\r\n    __checkStarted: null,\r\n    __promiseValid: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Validates the font\r\n     */\r\n    validate() {\r\n      if (this.__checkStarted) {\r\n        return;\r\n      }\r\n\r\n      const setValidImpl = valid => {\r\n        if (this.__checkTimer) {\r\n          this.__checkTimer.stop();\r\n        }\r\n        this._reset();\r\n        this.__promiseValid.resolve(valid);\r\n        this.fireDataEvent(\"changeStatus\", {\r\n          family: this.getFontFamily(),\r\n          valid: valid\r\n        });\r\n      };\r\n\r\n      if (document.fonts && typeof document.fonts.load == \"function\") {\r\n        this.__checkStarted = new Date().getTime();\r\n        let fontExpr = `${this.getFontStyle() || \"normal\"} ${\r\n          this.getFontWeight() || \"normal\"\r\n        } 14px ${this.getFontFamily()}`;\r\n\r\n        const loadImpl = async () => {\r\n          try {\r\n            await document.fonts.load(fontExpr);\r\n            await document.fonts.ready;\r\n\r\n            qx.bom.Label.getTextSize(\"Hello World\", {\r\n              fontFamily: this.getFontFamily(),\r\n              fontStyle: this.getFontStyle(),\r\n              fontWeight: this.getFontWeight()\r\n            });\r\n\r\n            setTimeout(() => setValidImpl(this._isFontValid()), 100);\r\n          } catch (ex) {\r\n            this.warn(`Exception while loading font ${fontExpr}: ` + ex);\r\n            setValidImpl(false);\r\n          }\r\n        };\r\n        loadImpl();\r\n      } else {\r\n        this.__checkStarted = new Date().getTime();\r\n\r\n        let fontExpr = `${this.getFontStyle() || \"normal\"} ${\r\n          this.getFontWeight() || \"normal\"\r\n        } 14px ${this.getFontFamily()}`;\r\n\r\n        const timerCheck = () => {\r\n          if (this._isFontValid()) {\r\n            // safari has trouble resizing, adding it again fixed the issue [BUG #8786]\r\n            if (\r\n              qx.core.Environment.get(\"browser.name\") == \"safari\" &&\r\n              parseFloat(qx.core.Environment.get(\"browser.version\")) >= 8\r\n            ) {\r\n              setTimeout(() => setValidImpl(true), 100);\r\n            } else {\r\n              setValidImpl(true);\r\n            }\r\n          } else {\r\n            var now = new Date().getTime();\r\n            if (now - this.__checkStarted >= this.getTimeout()) {\r\n              setValidImpl(false);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Give the browser a chance to render the new elements\r\n        qx.event.Timer.once(\r\n          () => {\r\n            this.__checkTimer = new qx.event.Timer(100);\r\n            this.__checkTimer.addListener(\"interval\", timerCheck);\r\n            this.__checkTimer.start();\r\n          },\r\n          this,\r\n          0\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Waits for the font to become invalid or valid\r\n     *\r\n     * @returns {Boolean} whether valid or not\r\n     */\r\n    async isValid() {\r\n      return await this.__promiseValid;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROTECTED API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Removes the helper elements from the DOM\r\n     */\r\n    _reset() {\r\n      if (this.__requestedHelpers) {\r\n        for (var prop in this.__requestedHelpers) {\r\n          var elem = this.__requestedHelpers[prop];\r\n          document.body.removeChild(elem);\r\n        }\r\n        this.__requestedHelpers = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if the font is available by comparing the widths of the elements\r\n     * using the generic fonts to the widths of the elements using the font to\r\n     * be validated\r\n     *\r\n     * @return {Boolean} Whether or not the font caused the elements to differ\r\n     * in size\r\n     */\r\n    _isFontValid() {\r\n      if (!qx.bom.webfonts.Validator.__defaultSizes) {\r\n        this.__init();\r\n      }\r\n\r\n      if (!this.__requestedHelpers) {\r\n        this.__requestedHelpers = this._getRequestedHelpers();\r\n      }\r\n\r\n      // force rerendering for chrome\r\n      this.__requestedHelpers.sans.style.visibility = \"visible\";\r\n      this.__requestedHelpers.sans.style.visibility = \"hidden\";\r\n      this.__requestedHelpers.serif.style.visibility = \"visible\";\r\n      this.__requestedHelpers.serif.style.visibility = \"hidden\";\r\n\r\n      var requestedSans = qx.bom.element.Dimension.getWidth(\r\n        this.__requestedHelpers.sans\r\n      );\r\n\r\n      var requestedSerif = qx.bom.element.Dimension.getWidth(\r\n        this.__requestedHelpers.serif\r\n      );\r\n\r\n      var cls = qx.bom.webfonts.Validator;\r\n      if (\r\n        requestedSans !== cls.__defaultSizes.sans ||\r\n        requestedSerif !== cls.__defaultSizes.serif\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Creates the two helper elements styled with the font to be checked\r\n     *\r\n     * @return {Map} A map with the keys <pre>sans</pre> and <pre>serif</pre>\r\n     * and the created span elements as values\r\n     */\r\n    _getRequestedHelpers() {\r\n      var fontsSans = [this.getFontFamily()].concat(\r\n        qx.bom.webfonts.Validator.COMPARISON_FONTS.sans\r\n      );\r\n\r\n      var fontsSerif = [this.getFontFamily()].concat(\r\n        qx.bom.webfonts.Validator.COMPARISON_FONTS.serif\r\n      );\r\n\r\n      return {\r\n        sans: this._getHelperElement(fontsSans, this.getComparisonString()),\r\n        serif: this._getHelperElement(fontsSerif, this.getComparisonString())\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Creates a span element with the comparison text (either {@link #COMPARISON_STRING} or\r\n     * {@link #comparisonString}) and styled with the default CSS ({@link #HELPER_CSS}) plus\r\n     * the given font-family value and appends it to the DOM\r\n     *\r\n     * @param fontFamily {String} font-family string\r\n     * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\r\n     * @return {Element} the created DOM element\r\n     */\r\n    _getHelperElement(fontFamily, comparisonString) {\r\n      var styleMap = qx.lang.Object.clone(qx.bom.webfonts.Validator.HELPER_CSS);\r\n      if (fontFamily) {\r\n        if (styleMap.fontFamily) {\r\n          styleMap.fontFamily += \",\" + fontFamily.join(\",\");\r\n        } else {\r\n          styleMap.fontFamily = fontFamily.join(\",\");\r\n        }\r\n      }\r\n      if (this.getFontWeight()) {\r\n        styleMap.fontWeight = this.getFontWeight();\r\n      }\r\n      if (this.getFontStyle()) {\r\n        styleMap.fontStyle = this.getFontStyle();\r\n      }\r\n\r\n      var elem = document.createElement(\"span\");\r\n      elem.innerHTML =\r\n        comparisonString || qx.bom.webfonts.Validator.COMPARISON_STRING;\r\n      qx.bom.element.Style.setStyles(elem, styleMap);\r\n      document.body.appendChild(elem);\r\n      return elem;\r\n    },\r\n\r\n    // property apply\r\n    _applyFontFamily(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyFontWeight(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyFontStyle(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PRIVATE API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Creates the default helper elements and gets their widths\r\n     */\r\n    __init() {\r\n      var cls = qx.bom.webfonts.Validator;\r\n      if (!cls.__defaultHelpers) {\r\n        cls.__defaultHelpers = {\r\n          sans: this._getHelperElement(cls.COMPARISON_FONTS.sans),\r\n          serif: this._getHelperElement(cls.COMPARISON_FONTS.serif)\r\n        };\r\n      }\r\n\r\n      cls.__defaultSizes = {\r\n        sans: qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.sans),\r\n        serif: qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.serif)\r\n      };\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._reset();\r\n    if (this.__checkTimer != null) {\r\n      this.__checkTimer.stop();\r\n    }\r\n    this._disposeObjects(\"__checkTimer\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}