{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "gen",
    "reject",
    "_next",
    "_throw",
    "key",
    "info",
    "error",
    "_asyncToGenerator",
    "fn",
    "self",
    "args",
    "arguments",
    "apply",
    "err",
    "undefined",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "Class",
    "extend",
    "core",
    "construct",
    "fontFamily",
    "comparisonString",
    "fontWeight",
    "fontStyle",
    "setComparisonString",
    "setFontWeight",
    "setFontStyle",
    "setFontFamily",
    "__requestedHelpers",
    "_getRequestedHelpers",
    "__promiseValid",
    "statics",
    "COMPARISON_FONTS",
    "sans",
    "serif",
    "HELPER_CSS",
    "position",
    "margin",
    "padding",
    "top",
    "left",
    "fontSize",
    "width",
    "height",
    "lineHeight",
    "fontVariant",
    "visibility",
    "COMPARISON_STRING",
    "__defaultSizes",
    "__defaultHelpers",
    "removeDefaultHelperElements",
    "defaultHelpers",
    "bom",
    "webfonts",
    "Validator",
    "prop",
    "document",
    "body",
    "removeChild",
    "properties",
    "nullable",
    "init",
    "check",
    "timeout",
    "events",
    "changeStatus",
    "members",
    "__checkTimer",
    "__checkStarted",
    "validate",
    "_this",
    "setValidImpl",
    "valid",
    "_reset",
    "fireDataEvent",
    "family",
    "getFontFamily",
    "fonts",
    "load",
    "Date",
    "getTime",
    "fontExpr",
    "concat",
    "getFontStyle",
    "getFontWeight",
    "loadImpl",
    "_ref",
    "_callee",
    "_callee$",
    "_context",
    "ready",
    "Label",
    "getTextSize",
    "setTimeout",
    "_isFontValid",
    "t0",
    "warn",
    "timerCheck",
    "Environment",
    "get",
    "parseFloat",
    "now",
    "getTimeout",
    "event",
    "Timer",
    "once",
    "addListener",
    "start",
    "isValid",
    "_this2",
    "_callee2",
    "_callee2$",
    "_context2",
    "elem",
    "__init",
    "style",
    "requestedSans",
    "element",
    "Dimension",
    "getWidth",
    "requestedSerif",
    "cls",
    "fontsSans",
    "fontsSerif",
    "_getHelperElement",
    "getComparisonString",
    "styleMap",
    "lang",
    "clone",
    "join",
    "createElement",
    "innerHTML",
    "Style",
    "setStyles",
    "appendChild",
    "_applyFontFamily",
    "old",
    "_applyFontWeight",
    "_applyFontStyle",
    "__P_160_6",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/webfonts/Validator.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Checks whether a given font is available on the document and fires events\r\n * accordingly.\r\n *\r\n * This class does not need to be disposed, unless you want to abort the validation\r\n * early\r\n */\r\nqx.Class.define(\"qx.bom.webfonts.Validator\", {\r\n  extend: qx.core.Object,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param fontFamily {String} The name of the font to be verified\r\n   * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\r\n   * @param fontWeight {String?} the weight of the font to be verified\r\n   * @param fontStyle {String?} the style of the font to be verified\r\n   * whether the font has loaded properly\r\n   */\r\n  construct(fontFamily, comparisonString, fontWeight, fontStyle) {\r\n    super();\r\n\r\n    if (comparisonString) {\r\n      this.setComparisonString(comparisonString);\r\n    }\r\n\r\n    if (fontWeight) {\r\n      this.setFontWeight(fontWeight);\r\n    }\r\n    if (fontStyle) {\r\n      this.setFontStyle(fontStyle);\r\n    }\r\n    if (fontFamily) {\r\n      this.setFontFamily(fontFamily);\r\n      this.__requestedHelpers = this._getRequestedHelpers();\r\n    }\r\n    this.__promiseValid = new qx.Promise();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * Sets of serif and sans-serif fonts to be used for size comparisons.\r\n     * At least one of these fonts should be present on any system.\r\n     */\r\n    COMPARISON_FONTS: {\r\n      sans: [\"Arial\", \"Helvetica\", \"sans-serif\"],\r\n      serif: [\"Times New Roman\", \"Georgia\", \"serif\"]\r\n    },\r\n\r\n    /**\r\n     * Map of common CSS attributes to be used for all  size comparison elements\r\n     */\r\n    HELPER_CSS: {\r\n      position: \"absolute\",\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n      top: \"-1000px\",\r\n      left: \"-1000px\",\r\n      fontSize: \"350px\",\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      lineHeight: \"normal\",\r\n      fontVariant: \"normal\",\r\n      visibility: \"hidden\"\r\n    },\r\n\r\n    /**\r\n     * The string to be used in the size comparison elements. This is the default string\r\n     * which is used for the {@link #COMPARISON_FONTS} and the font to be validated. It\r\n     * can be overridden for the font to be validated using the {@link #comparisonString}\r\n     * property.\r\n     */\r\n    COMPARISON_STRING: \"WEei\",\r\n    __defaultSizes: null,\r\n    __defaultHelpers: null,\r\n\r\n    /**\r\n     * Removes the two common helper elements used for all size comparisons from\r\n     * the DOM\r\n     */\r\n    removeDefaultHelperElements() {\r\n      var defaultHelpers = qx.bom.webfonts.Validator.__defaultHelpers;\r\n      if (defaultHelpers) {\r\n        for (var prop in defaultHelpers) {\r\n          document.body.removeChild(defaultHelpers[prop]);\r\n        }\r\n      }\r\n      delete qx.bom.webfonts.Validator.__defaultHelpers;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * The font-family this validator should check\r\n     */\r\n    fontFamily: {\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyFontFamily\"\r\n    },\r\n\r\n    /** The font weight to check */\r\n    fontWeight: {\r\n      nullable: true,\r\n      check: \"String\",\r\n      apply: \"_applyFontWeight\"\r\n    },\r\n\r\n    /** The font style to check */\r\n    fontStyle: {\r\n      nullable: true,\r\n      check: \"String\",\r\n      apply: \"_applyFontStyle\"\r\n    },\r\n\r\n    /**\r\n     * Comparison string used to check whether the font has loaded or not.\r\n     */\r\n    comparisonString: {\r\n      nullable: true,\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * Time in milliseconds from the beginning of the check until it is assumed\r\n     * that a font is not available\r\n     */\r\n    timeout: {\r\n      check: \"Integer\",\r\n      init: 5000\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * Fired when the status of a web font has been determined. The event data\r\n     * is a map with the keys \"family\" (the font-family name) and \"valid\"\r\n     * (Boolean).\r\n     */\r\n    changeStatus: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __requestedHelpers: null,\r\n    __checkTimer: null,\r\n    __checkStarted: null,\r\n    __promiseValid: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Validates the font\r\n     */\r\n    validate() {\r\n      if (this.__checkStarted) {\r\n        return;\r\n      }\r\n\r\n      const setValidImpl = valid => {\r\n        if (this.__checkTimer) {\r\n          this.__checkTimer.stop();\r\n        }\r\n        this._reset();\r\n        this.__promiseValid.resolve(valid);\r\n        this.fireDataEvent(\"changeStatus\", {\r\n          family: this.getFontFamily(),\r\n          valid: valid\r\n        });\r\n      };\r\n\r\n      if (document.fonts && typeof document.fonts.load == \"function\") {\r\n        this.__checkStarted = new Date().getTime();\r\n        let fontExpr = `${this.getFontStyle() || \"normal\"} ${\r\n          this.getFontWeight() || \"normal\"\r\n        } 14px ${this.getFontFamily()}`;\r\n\r\n        const loadImpl = async () => {\r\n          try {\r\n            await document.fonts.load(fontExpr);\r\n            await document.fonts.ready;\r\n\r\n            qx.bom.Label.getTextSize(\"Hello World\", {\r\n              fontFamily: this.getFontFamily(),\r\n              fontStyle: this.getFontStyle(),\r\n              fontWeight: this.getFontWeight()\r\n            });\r\n\r\n            setTimeout(() => setValidImpl(this._isFontValid()), 100);\r\n          } catch (ex) {\r\n            this.warn(`Exception while loading font ${fontExpr}: ` + ex);\r\n            setValidImpl(false);\r\n          }\r\n        };\r\n        loadImpl();\r\n      } else {\r\n        this.__checkStarted = new Date().getTime();\r\n\r\n        let fontExpr = `${this.getFontStyle() || \"normal\"} ${\r\n          this.getFontWeight() || \"normal\"\r\n        } 14px ${this.getFontFamily()}`;\r\n\r\n        const timerCheck = () => {\r\n          if (this._isFontValid()) {\r\n            // safari has trouble resizing, adding it again fixed the issue [BUG #8786]\r\n            if (\r\n              qx.core.Environment.get(\"browser.name\") == \"safari\" &&\r\n              parseFloat(qx.core.Environment.get(\"browser.version\")) >= 8\r\n            ) {\r\n              setTimeout(() => setValidImpl(true), 100);\r\n            } else {\r\n              setValidImpl(true);\r\n            }\r\n          } else {\r\n            var now = new Date().getTime();\r\n            if (now - this.__checkStarted >= this.getTimeout()) {\r\n              setValidImpl(false);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Give the browser a chance to render the new elements\r\n        qx.event.Timer.once(\r\n          () => {\r\n            this.__checkTimer = new qx.event.Timer(100);\r\n            this.__checkTimer.addListener(\"interval\", timerCheck);\r\n            this.__checkTimer.start();\r\n          },\r\n          this,\r\n          0\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Waits for the font to become invalid or valid\r\n     *\r\n     * @returns {Boolean} whether valid or not\r\n     */\r\n    async isValid() {\r\n      return await this.__promiseValid;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROTECTED API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Removes the helper elements from the DOM\r\n     */\r\n    _reset() {\r\n      if (this.__requestedHelpers) {\r\n        for (var prop in this.__requestedHelpers) {\r\n          var elem = this.__requestedHelpers[prop];\r\n          document.body.removeChild(elem);\r\n        }\r\n        this.__requestedHelpers = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if the font is available by comparing the widths of the elements\r\n     * using the generic fonts to the widths of the elements using the font to\r\n     * be validated\r\n     *\r\n     * @return {Boolean} Whether or not the font caused the elements to differ\r\n     * in size\r\n     */\r\n    _isFontValid() {\r\n      if (!qx.bom.webfonts.Validator.__defaultSizes) {\r\n        this.__init();\r\n      }\r\n\r\n      if (!this.__requestedHelpers) {\r\n        this.__requestedHelpers = this._getRequestedHelpers();\r\n      }\r\n\r\n      // force rerendering for chrome\r\n      this.__requestedHelpers.sans.style.visibility = \"visible\";\r\n      this.__requestedHelpers.sans.style.visibility = \"hidden\";\r\n      this.__requestedHelpers.serif.style.visibility = \"visible\";\r\n      this.__requestedHelpers.serif.style.visibility = \"hidden\";\r\n\r\n      var requestedSans = qx.bom.element.Dimension.getWidth(\r\n        this.__requestedHelpers.sans\r\n      );\r\n\r\n      var requestedSerif = qx.bom.element.Dimension.getWidth(\r\n        this.__requestedHelpers.serif\r\n      );\r\n\r\n      var cls = qx.bom.webfonts.Validator;\r\n      if (\r\n        requestedSans !== cls.__defaultSizes.sans ||\r\n        requestedSerif !== cls.__defaultSizes.serif\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Creates the two helper elements styled with the font to be checked\r\n     *\r\n     * @return {Map} A map with the keys <pre>sans</pre> and <pre>serif</pre>\r\n     * and the created span elements as values\r\n     */\r\n    _getRequestedHelpers() {\r\n      var fontsSans = [this.getFontFamily()].concat(\r\n        qx.bom.webfonts.Validator.COMPARISON_FONTS.sans\r\n      );\r\n\r\n      var fontsSerif = [this.getFontFamily()].concat(\r\n        qx.bom.webfonts.Validator.COMPARISON_FONTS.serif\r\n      );\r\n\r\n      return {\r\n        sans: this._getHelperElement(fontsSans, this.getComparisonString()),\r\n        serif: this._getHelperElement(fontsSerif, this.getComparisonString())\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Creates a span element with the comparison text (either {@link #COMPARISON_STRING} or\r\n     * {@link #comparisonString}) and styled with the default CSS ({@link #HELPER_CSS}) plus\r\n     * the given font-family value and appends it to the DOM\r\n     *\r\n     * @param fontFamily {String} font-family string\r\n     * @param comparisonString {String?} String to be used to detect whether a font was loaded or not\r\n     * @return {Element} the created DOM element\r\n     */\r\n    _getHelperElement(fontFamily, comparisonString) {\r\n      var styleMap = qx.lang.Object.clone(qx.bom.webfonts.Validator.HELPER_CSS);\r\n      if (fontFamily) {\r\n        if (styleMap.fontFamily) {\r\n          styleMap.fontFamily += \",\" + fontFamily.join(\",\");\r\n        } else {\r\n          styleMap.fontFamily = fontFamily.join(\",\");\r\n        }\r\n      }\r\n      if (this.getFontWeight()) {\r\n        styleMap.fontWeight = this.getFontWeight();\r\n      }\r\n      if (this.getFontStyle()) {\r\n        styleMap.fontStyle = this.getFontStyle();\r\n      }\r\n\r\n      var elem = document.createElement(\"span\");\r\n      elem.innerHTML =\r\n        comparisonString || qx.bom.webfonts.Validator.COMPARISON_STRING;\r\n      qx.bom.element.Style.setStyles(elem, styleMap);\r\n      document.body.appendChild(elem);\r\n      return elem;\r\n    },\r\n\r\n    // property apply\r\n    _applyFontFamily(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyFontWeight(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyFontStyle(value, old) {\r\n      if (value !== old) {\r\n        this._reset();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PRIVATE API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Creates the default helper elements and gets their widths\r\n     */\r\n    __init() {\r\n      var cls = qx.bom.webfonts.Validator;\r\n      if (!cls.__defaultHelpers) {\r\n        cls.__defaultHelpers = {\r\n          sans: this._getHelperElement(cls.COMPARISON_FONTS.sans),\r\n          serif: this._getHelperElement(cls.COMPARISON_FONTS.serif)\r\n        };\r\n      }\r\n\r\n      cls.__defaultSizes = {\r\n        sans: qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.sans),\r\n        serif: qx.bom.element.Dimension.getWidth(cls.__defaultHelpers.serif)\r\n      };\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._reset();\r\n    if (this.__checkTimer != null) {\r\n      this.__checkTimer.stop();\r\n    }\r\n    this._disposeObjects(\"__checkTimer\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}