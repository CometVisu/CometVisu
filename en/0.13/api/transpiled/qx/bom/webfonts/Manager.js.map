{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__createdStyles",
    "__validators",
    "__queue",
    "__preferredFormats",
    "getPreferredFormats",
    "statics",
    "FONT_FORMATS",
    "VALIDATION_TIMEOUT",
    "members",
    "__styleSheet",
    "__queueInterval",
    "require",
    "familyName",
    "sourcesList",
    "callback",
    "context",
    "sourceUrls",
    "source",
    "comparisonString",
    "version",
    "fontWeight",
    "fontStyle",
    "sources",
    "i",
    "l",
    "length",
    "split",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "push",
    "Environment",
    "get",
    "parseInt",
    "event",
    "Timer",
    "addListener",
    "__flushQueue",
    "isEnabled",
    "start",
    "__require",
    "remove",
    "fontLookupKey",
    "__createFontLookupKey",
    "index",
    "__removeRule",
    "lang",
    "Array",
    "removeAt",
    "dispose",
    "preferredFormats",
    "browser",
    "browserVersion",
    "os",
    "osVersion",
    "removeStyleSheet",
    "bom",
    "Stylesheet",
    "removeSheet",
    "lookupKey",
    "includes",
    "sourcesMap",
    "__getSourcesMap",
    "rule",
    "__getRule",
    "Error",
    "createElement",
    "__addRule",
    "ex",
    "webfonts",
    "Validator",
    "setTimeout",
    "Manager",
    "addListenerOnce",
    "__onFontChangeStatus",
    "cbContext",
    "window",
    "validate",
    "stop",
    "next",
    "shift",
    "apply",
    "ev",
    "result",
    "getData",
    "valid",
    "once",
    "family",
    "formats",
    "reg",
    "RegExp",
    "join",
    "match",
    "exec",
    "rules",
    "formatList",
    "format",
    "__getSourceForFormat",
    "url",
    "completeRule",
    "cssText",
    "__fixCssText",
    "insertRule",
    "cssRules",
    "regtext",
    "document",
    "styleSheets",
    "sheet",
    "replace",
    "j",
    "m",
    "deleteRule",
    "destruct",
    "prop",
    "removeDefaultHelperElements"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/webfonts/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n/**\n * Manages font-face definitions, making sure that each rule is only applied\n * once. It supports adding fonts of the same family but with different style\n * and weight. For instance, the following declaration uses 4 different source\n * files and combine them in a single font family.\n *\n * <pre class='javascript'>\n *   sources: [\n *     {\n *       family: \"Sansation\",\n *       source: [\n *         \"fonts/Sansation-Regular.ttf\"\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       source: [\n *         \"fonts/Sansation-Bold.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-Italic.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-BoldItalic.ttf\",\n *       ]\n *     }\n *   ]\n * </pre>\n *\n * This class does not need to be disposed, except when you want to abort the loading\n * and validation process.\n */\nqx.Class.define(\"qx.bom.webfonts.Manager\", {\n  extend: qx.core.Object,\n\n  type: \"singleton\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n    this.__createdStyles = [];\n    this.__validators = {};\n    this.__queue = [];\n    this.__preferredFormats = this.getPreferredFormats();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * List of known font definition formats (i.e. file extensions). Used to\n     * identify the type of each font file configured for a web font.\n     */\n    FONT_FORMATS: [\"eot\", \"woff2\", \"woff\", \"ttf\", \"svg\"],\n\n    /**\n     * Timeout (in ms) to wait before deciding that a web font was not loaded.\n     */\n    VALIDATION_TIMEOUT: 5000\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __createdStyles: null,\n    __styleSheet: null,\n    __validators: null,\n    __preferredFormats: null,\n    __queue: null,\n    __queueInterval: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds the necessary font-face rule for a web font to the document. Also\n     * creates a web font Validator ({@link qx.bom.webfonts.Validator}) that\n     * checks if the webFont was applied correctly.\n     *\n     * @param familyName {String} Name of the web font\n     * @param sourcesList {Object} List of source URLs along with their style\n     * (e.g. fontStyle: \"italic\") and weight (e.g. fontWeight: \"bold\").\n     * For maximum compatibility, this should include EOT, WOFF and TTF versions\n     * of the font.\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * See {@link qx.bom.webfonts.Validator#changeStatus}\n     * @param context {Object?} Optional context for the callback function\n     */\n    require(familyName, sourcesList, callback, context) {\n      var sourceUrls = sourcesList.source;\n      var comparisonString = sourcesList.comparisonString;\n      var version = sourcesList.version;\n      var fontWeight = sourcesList.fontWeight;\n      var fontStyle = sourcesList.fontStyle;\n      var sources = [];\n      for (var i = 0, l = sourceUrls.length; i < l; i++) {\n        var split = sourceUrls[i].split(\"#\");\n        var src = qx.util.ResourceManager.getInstance().toUri(split[0]);\n        if (split.length > 1) {\n          src = src + \"#\" + split[1];\n        }\n        sources.push(src);\n      }\n\n      // old IEs need a break in between adding @font-face rules\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        (parseInt(qx.core.Environment.get(\"engine.version\")) < 9 ||\n          qx.core.Environment.get(\"browser.documentmode\") < 9)\n      ) {\n        if (!this.__queueInterval) {\n          this.__queueInterval = new qx.event.Timer(100);\n          this.__queueInterval.addListener(\"interval\", this.__flushQueue, this);\n        }\n\n        if (!this.__queueInterval.isEnabled()) {\n          this.__queueInterval.start();\n        }\n\n        this.__queue.push([\n          familyName,\n          sources,\n          fontWeight,\n          fontStyle,\n          comparisonString,\n          version,\n          callback,\n          context\n        ]);\n      } else {\n        this.__require(\n          familyName,\n          sources,\n          fontWeight,\n          fontStyle,\n          comparisonString,\n          version,\n          callback,\n          context\n        );\n      }\n    },\n\n    /**\n     * Removes a font's font-face definition from the style sheet. This means\n     * the font will no longer be available and any elements using it will\n     * fall back to the their regular font-families.\n     *\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     */\n    remove(familyName, fontWeight, fontStyle) {\n      var fontLookupKey = this.__createFontLookupKey(\n        familyName,\n        fontWeight,\n        fontStyle\n      );\n\n      var index = null;\n      for (var i = 0, l = this.__createdStyles.length; i < l; i++) {\n        if (this.__createdStyles[i] == fontLookupKey) {\n          index = i;\n          this.__removeRule(familyName, fontWeight, fontStyle);\n          break;\n        }\n      }\n      if (index !== null) {\n        qx.lang.Array.removeAt(this.__createdStyles, index);\n      }\n      if (fontLookupKey in this.__validators) {\n        this.__validators[fontLookupKey].dispose();\n        delete this.__validators[fontLookupKey];\n      }\n    },\n\n    /**\n     * Returns the preferred font format(s) for the currently used browser. Some\n     * browsers support multiple formats, e.g. WOFF and TTF or WOFF and EOT. In\n     * those cases, WOFF is considered the preferred format.\n     *\n     * @return {String[]} List of supported font formats ordered by preference\n     * or empty Array if none could be determined\n     */\n    getPreferredFormats() {\n      var preferredFormats = [];\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var browserVersion = qx.core.Environment.get(\"browser.version\");\n      var os = qx.core.Environment.get(\"os.name\");\n      var osVersion = qx.core.Environment.get(\"os.version\");\n\n      if (\n        (browser == \"edge\" && browserVersion >= 14) ||\n        (browser == \"firefox\" && browserVersion >= 69) ||\n        (browser == \"chrome\" && browserVersion >= 36)\n      ) {\n        preferredFormats.push(\"woff2\");\n      }\n\n      if (\n        (browser == \"ie\" &&\n          qx.core.Environment.get(\"browser.documentmode\") >= 9) ||\n        (browser == \"edge\" && browserVersion >= 12) ||\n        (browser == \"firefox\" && browserVersion >= 3.6) ||\n        (browser == \"chrome\" && browserVersion >= 6)\n      ) {\n        preferredFormats.push(\"woff\");\n      }\n\n      if (\n        (browser == \"edge\" && browserVersion >= 12) ||\n        (browser == \"opera\" && browserVersion >= 10) ||\n        (browser == \"safari\" && browserVersion >= 3.1) ||\n        (browser == \"firefox\" && browserVersion >= 3.5) ||\n        (browser == \"chrome\" && browserVersion >= 4) ||\n        (browser == \"mobile safari\" && os == \"ios\" && osVersion >= 4.2)\n      ) {\n        preferredFormats.push(\"ttf\");\n      }\n\n      if (browser == \"ie\" && browserVersion >= 4) {\n        preferredFormats.push(\"eot\");\n      }\n\n      if (browser == \"mobileSafari\" && os == \"ios\" && osVersion >= 4.1) {\n        preferredFormats.push(\"svg\");\n      }\n\n      return preferredFormats;\n    },\n\n    /**\n     * Removes the styleSheet element used for all web font definitions from the\n     * document. This means all web fonts declared by the manager will no longer\n     * be available and elements using them will fall back to their regular\n     * font-families\n     */\n    removeStyleSheet() {\n      this.__createdStyles = [];\n      if (this.__styleSheet) {\n        qx.bom.Stylesheet.removeSheet(this.__styleSheet);\n      }\n      this.__styleSheet = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates a lookup key to index the created fonts.\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     * @return {string} the font lookup key\n     */\n    __createFontLookupKey(familyName, fontWeight, fontStyle) {\n      var lookupKey =\n        familyName +\n        \"_\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \"_\" +\n        (fontStyle ? fontStyle : \"normal\");\n      return lookupKey;\n    },\n\n    /**\n     * Does the actual work of adding stylesheet rules and triggering font\n     * validation\n     *\n     * @param familyName {String} Name of the web font\n     * @param sources {String[]} List of source URLs. For maximum compatibility,\n     * this should include EOT, WOFF and TTF versions of the font.\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param comparisonString {String} String to check whether the font has loaded or not\n     * @param version {String?} Optional version that is appended to the font URL to be able to override caching\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * @param context {Object?} Optional context for the callback function\n     */\n    __require(\n      familyName,\n      sources,\n      fontWeight,\n      fontStyle,\n      comparisonString,\n      version,\n      callback,\n      context\n    ) {\n      var fontLookupKey = this.__createFontLookupKey(\n        familyName,\n        fontWeight,\n        fontStyle\n      );\n\n      if (!this.__createdStyles.includes(fontLookupKey)) {\n        var sourcesMap = this.__getSourcesMap(sources);\n        var rule = this.__getRule(\n          familyName,\n          fontWeight,\n          fontStyle,\n          sourcesMap,\n          version\n        );\n\n        if (!rule) {\n          throw new Error(\n            \"Couldn't create @font-face rule for WebFont \" + familyName + \"!\"\n          );\n        }\n\n        if (!this.__styleSheet) {\n          this.__styleSheet = qx.bom.Stylesheet.createElement();\n        }\n\n        try {\n          this.__addRule(rule);\n        } catch (ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Error while adding @font-face rule:\", ex.message);\n            return;\n          }\n        }\n        this.__createdStyles.push(fontLookupKey);\n      }\n\n      if (!this.__validators[fontLookupKey]) {\n        this.__validators[fontLookupKey] = new qx.bom.webfonts.Validator(\n          familyName,\n          comparisonString,\n          fontWeight,\n          fontStyle\n        );\n\n        this.__validators[fontLookupKey].setTimeout(\n          qx.bom.webfonts.Manager.VALIDATION_TIMEOUT\n        );\n\n        this.__validators[fontLookupKey].addListenerOnce(\n          \"changeStatus\",\n          this.__onFontChangeStatus,\n          this\n        );\n      }\n\n      if (callback) {\n        var cbContext = context || window;\n        this.__validators[fontLookupKey].addListenerOnce(\n          \"changeStatus\",\n          callback,\n          cbContext\n        );\n      }\n\n      this.__validators[fontLookupKey].validate();\n    },\n\n    /**\n     * Processes the next item in the queue\n     */\n    __flushQueue() {\n      if (this.__queue.length == 0) {\n        this.__queueInterval.stop();\n        return;\n      }\n      var next = this.__queue.shift();\n      this.__require.apply(this, next);\n    },\n\n    /**\n     * Removes the font-face declaration if a font could not be validated\n     *\n     * @param ev {qx.event.type.Data} qx.bom.webfonts.Validator#changeStatus\n     */\n    __onFontChangeStatus(ev) {\n      var result = ev.getData();\n      if (result.valid === false) {\n        qx.event.Timer.once(\n          function () {\n            this.remove(result.family);\n          },\n          this,\n          250\n        );\n      }\n    },\n\n    /**\n     * Uses a naive regExp match to determine the format of each defined source\n     * file for a webFont. Returns a map with the format names as keys and the\n     * corresponding source URLs as values.\n     *\n     * @param sources {String[]} Array of source URLs\n     * @return {Map} Map of formats and URLs\n     */\n    __getSourcesMap(sources) {\n      var formats = qx.bom.webfonts.Manager.FONT_FORMATS;\n      var sourcesMap = {};\n      var reg = new RegExp(\".(\" + formats.join(\"|\") + \")\");\n      for (var i = 0, l = sources.length; i < l; i++) {\n        var match = reg.exec(sources[i]);\n        if (match) {\n          var type = match[1];\n          sourcesMap[type] = sources[i];\n        }\n      }\n      return sourcesMap;\n    },\n\n    /**\n     * Assembles the body of a font-face rule for a single webFont.\n     *\n     * @param familyName {String} Font-family name\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param sourcesMap {Map} Map of font formats and sources\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The computed CSS rule\n     */\n    __getRule(familyName, fontWeight, fontStyle, sourcesMap, version) {\n      var rules = [];\n\n      var formatList =\n        this.__preferredFormats.length > 0\n          ? this.__preferredFormats\n          : qx.bom.webfonts.Manager.FONT_FORMATS;\n\n      for (var i = 0, l = formatList.length; i < l; i++) {\n        var format = formatList[i];\n        if (sourcesMap[format]) {\n          rules.push(\n            this.__getSourceForFormat(format, sourcesMap[format], version)\n          );\n        }\n      }\n\n      var rule = \"src: \" + rules.join(\",\\n\") + \";\";\n\n      rule = \"font-family: \" + familyName + \";\\n\" + rule;\n      rule = rule + \"\\nfont-style: \" + (fontStyle ? fontStyle : \"normal\") + \";\";\n      rule =\n        rule + \"\\nfont-weight: \" + (fontWeight ? fontWeight : \"normal\") + \";\";\n\n      return rule;\n    },\n\n    /**\n     * Returns the full src value for a given font URL depending on the type\n     * @param format {String} The font format, one of eot, woff2, woff, ttf, svg\n     * @param url {String} The font file's URL\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The src directive\n     */\n\n    __getSourceForFormat(format, url, version) {\n      if (version) {\n        url += \"?\" + version;\n      }\n\n      switch (format) {\n        case \"eot\":\n          return (\n            \"url('\" +\n            url +\n            \"');\" +\n            \"src: url('\" +\n            url +\n            \"?#iefix') format('embedded-opentype')\"\n          );\n\n        case \"woff2\":\n          return \"url('\" + url + \"') format('woff2')\";\n        case \"woff\":\n          return \"url('\" + url + \"') format('woff')\";\n        case \"ttf\":\n          return \"url('\" + url + \"') format('truetype')\";\n        case \"svg\":\n          return \"url('\" + url + \"') format('svg')\";\n        default:\n          return null;\n      }\n    },\n\n    /**\n     * Adds a font-face rule to the document\n     *\n     * @param rule {String} The body of the CSS rule\n     */\n    __addRule(rule) {\n      var completeRule = \"@font-face {\" + rule + \"}\\n\";\n\n      if (\n        qx.core.Environment.get(\"browser.name\") == \"ie\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        var cssText = this.__fixCssText(this.__styleSheet.cssText);\n        cssText += completeRule;\n        this.__styleSheet.cssText = cssText;\n      } else {\n        this.__styleSheet.insertRule(\n          completeRule,\n          this.__styleSheet.cssRules.length\n        );\n      }\n    },\n\n    /**\n     * Removes the font-face declaration for the given font-family from the\n     * stylesheet\n     *\n     * @param familyName {String} The font-family name\n     * @param fontWeight {String} fontWeight font-weight.\n     * @param fontStyle {String} fontStyle font-style.\n     */\n    __removeRule(familyName, fontWeight, fontStyle) {\n      // In IE and edge even if the rule was added with font-style first\n      // and font-weight second, it is not guaranteed that the attributes\n      // remain in that order. Therefore we check for both version,\n      // style first, weight second and weight first, style second.\n      // Without this fix the rule isn't found and removed reliable.\n      var regtext =\n        \"@font-face.*?\" +\n        familyName +\n        \"(.*font-style: *\" +\n        (fontStyle ? fontStyle : \"normal\") +\n        \".*font-weight: *\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \")|\" +\n        \"(.*font-weight: *\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \".*font-style: *\" +\n        (fontStyle ? fontStyle : \"normal\") +\n        \")\";\n\n      var reg = new RegExp(regtext, \"m\");\n      for (var i = 0, l = document.styleSheets.length; i < l; i++) {\n        var sheet = document.styleSheets[i];\n        if (sheet.cssText) {\n          var cssText = sheet.cssText.replace(/\\n/g, \"\").replace(/\\r/g, \"\");\n          cssText = this.__fixCssText(cssText);\n          if (reg.exec(cssText)) {\n            cssText = cssText.replace(reg, \"\");\n          }\n          sheet.cssText = cssText;\n        } else {\n          let cssRules = null;\n          try {\n            cssRules = sheet.cssRules;\n          } catch (ex) {\n            // Exception is thrown if there are no rules (eg a `<link>` tag inserted by the user)\n          }\n          if (cssRules) {\n            for (var j = 0, m = cssRules.length; j < m; j++) {\n              var cssText = cssRules[j].cssText\n                .replace(/\\n/g, \"\")\n                .replace(/\\r/g, \"\");\n              if (reg.exec(cssText)) {\n                this.__styleSheet.deleteRule(j);\n                return;\n              }\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * IE 6 and 7 omit the trailing quote after the format name when\n     * querying cssText. This needs to be fixed before cssText is replaced\n     * or all rules will be invalid and no web fonts will work any more.\n     *\n     * @param cssText {String} CSS text\n     * @return {String} Fixed CSS text\n     */\n    __fixCssText(cssText) {\n      return cssText\n        .replace(\"'eot)\", \"'eot')\")\n        .replace(\"('embedded-opentype)\", \"('embedded-opentype')\");\n    }\n  },\n\n  /*\n  *****************************************************************************\n    DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__queueInterval) {\n      this.__queueInterval.stop();\n      this.__queueInterval.dispose();\n    }\n    delete this.__createdStyles;\n    this.removeStyleSheet();\n    for (var prop in this.__validators) {\n      this.__validators[prop].dispose();\n    }\n    qx.bom.webfonts.Validator.removeDefaultHelperElements();\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtBC,IAAI,EAAE,WAAW;IAEjB;AACF;AACA;AACA;AACA;IAEEC,SAAS,uBAAG;MACV;MACA,IAAI,CAACC,SAAe,GAAG,EAAE;MACzB,IAAI,CAACC,SAAY,GAAG,CAAC,CAAC;MACtB,IAAI,CAACC,SAAO,GAAG,EAAE;MACjB,IAAI,CAACC,SAAkB,GAAG,IAAI,CAACC,mBAAmB,EAAE;IACtD,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;MACIC,YAAY,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;MAEpD;AACJ;AACA;MACIC,kBAAkB,EAAE;IACtB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPR,SAAe,EAAE,IAAI;MACrBS,SAAY,EAAE,IAAI;MAClBR,SAAY,EAAE,IAAI;MAClBE,SAAkB,EAAE,IAAI;MACxBD,SAAO,EAAE,IAAI;MACbQ,SAAe,EAAE,IAAI;MAErB;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,mBAACC,UAAU,EAA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"
}