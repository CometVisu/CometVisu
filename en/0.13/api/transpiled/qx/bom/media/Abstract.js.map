{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "type",
    "construct",
    "media",
    "constructor",
    "call",
    "_media",
    "_hasLoop",
    "loop",
    "Function",
    "lang",
    "_handlePlayEventBound",
    "bind",
    "_handlePlayEvent",
    "_handlePauseEventBound",
    "_handlePauseEvent",
    "_handleTimeUpdateEventBound",
    "_handleTimeUpdateEvent",
    "_handleEndedEventBound",
    "_handleEndedEvent",
    "_handleVolumeChangeEventBound",
    "_handleVolumeChangeEvent",
    "_handleLoadedDataEventBound",
    "_handleLoadedDataEvent",
    "_handleLoadedMetaDataEventBound",
    "_handleLoadedMetaDataEvent",
    "Event",
    "bom",
    "addNativeListener",
    "preload",
    "events",
    "play",
    "pause",
    "timeupdate",
    "ended",
    "volumechange",
    "loadeddata",
    "loadedmetadata",
    "members",
    "_loopId",
    "getMediaObject",
    "event",
    "Timer",
    "once",
    "isPaused",
    "paused",
    "isEnded",
    "setId",
    "id",
    "getId",
    "canPlayType",
    "setVolume",
    "volume",
    "getVolume",
    "setMuted",
    "muted",
    "isMuted",
    "getDuration",
    "duration",
    "setCurrentTime",
    "value",
    "currentTime",
    "getCurrentTime",
    "setSource",
    "source",
    "src",
    "getSource",
    "setSourceObject",
    "sourceObject",
    "srcObject",
    "getSourceObject",
    "hasControls",
    "controls",
    "showControls",
    "hideControls",
    "setAutoplay",
    "autoplay",
    "getAutoplay",
    "setPreload",
    "getPreload",
    "setLoop",
    "addListener",
    "removeListenerById",
    "isLoop",
    "fireEvent",
    "destruct",
    "removeNativeListener",
    "ex",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/media/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n *\n * Media element. Other media types can derive from this class.\n *\n * NOTE: Instances of this class must be disposed of to free resources\n */\nqx.Class.define(\"qx.bom.media.Abstract\", {\n  extend: qx.core.Object,\n  implement: [qx.core.IDisposable],\n  type: \"abstract\",\n\n  /**\n   * @param media {var} the media element.\n   */\n  construct(media) {\n    super();\n    this._media = media;\n    this._hasLoop = !!this._media.loop;\n\n    var Function = qx.lang.Function;\n    this._handlePlayEventBound = Function.bind(this._handlePlayEvent, this);\n    this._handlePauseEventBound = Function.bind(this._handlePauseEvent, this);\n    this._handleTimeUpdateEventBound = Function.bind(\n      this._handleTimeUpdateEvent,\n      this\n    );\n\n    this._handleEndedEventBound = Function.bind(this._handleEndedEvent, this);\n    this._handleVolumeChangeEventBound = Function.bind(\n      this._handleVolumeChangeEvent,\n      this\n    );\n\n    this._handleLoadedDataEventBound = Function.bind(\n      this._handleLoadedDataEvent,\n      this\n    );\n\n    this._handleLoadedMetaDataEventBound = Function.bind(\n      this._handleLoadedMetaDataEvent,\n      this\n    );\n\n    var Event = qx.bom.Event;\n    Event.addNativeListener(this._media, \"play\", this._handlePlayEventBound);\n    Event.addNativeListener(this._media, \"pause\", this._handlePauseEventBound);\n    Event.addNativeListener(\n      this._media,\n      \"timeupdate\",\n      this._handleTimeUpdateEventBound\n    );\n\n    Event.addNativeListener(this._media, \"ended\", this._handleEndedEventBound);\n    Event.addNativeListener(\n      this._media,\n      \"volumechange\",\n      this._handleVolumeChangeEventBound\n    );\n\n    Event.addNativeListener(\n      this._media,\n      \"loadeddata\",\n      this._handleLoadedDataEventBound\n    );\n\n    Event.addNativeListener(\n      this._media,\n      \"loadedmetadata\",\n      this._handleLoadedMetaDataEventBound\n    );\n\n    // set default value\n    this._media.preload = \"auto\";\n  },\n\n  //MORE HERE:\n  //http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#mediaevents\n  events: {\n    /** Fired when the media starts to play */\n    play: \"qx.event.type.Event\",\n\n    /** Fired when the media is paused */\n    pause: \"qx.event.type.Event\",\n\n    /** Fired when the current time of the media has changed */\n    timeupdate: \"qx.event.type.Event\",\n\n    /** Fired when the media has finished to play */\n    ended: \"qx.event.type.Event\",\n\n    /** Fired when the volume property is changed */\n    volumechange: \"qx.event.type.Event\",\n\n    /** Fired when the media is loaded enough to start play*/\n    loadeddata: \"qx.event.type.Event\",\n\n    /** Fired when the media is loaded enough to start play*/\n    loadedmetadata: \"qx.event.type.Event\"\n  },\n\n  members: {\n    _media: null,\n    _hasLoop: false,\n    _loopId: null,\n\n    /**\n     * Returns the media object, so that you can add it to the DOM.\n     *\n     * @return {Object} the native media object\n     */\n    getMediaObject() {\n      return this._media;\n    },\n\n    /**\n     * Starts playback of the media.\n     */\n    play() {\n      // Force asynchronous event firing for IE e.g.\n      qx.event.Timer.once(\n        function () {\n          this._media.play();\n        },\n        this,\n        0\n      );\n    },\n\n    /**\n     * Pauses playback of the media.\n     */\n    pause() {\n      this._media.pause();\n    },\n\n    /**\n     * Checks if the media is paused or not.\n     *\n     * @return {Boolean}\n     */\n    isPaused() {\n      return this._media.paused;\n    },\n\n    /**\n     * Checks if the media is ended or not.\n     *\n     * @return {Boolean}\n     */\n    isEnded() {\n      return this._media.ended;\n    },\n\n    /**\n     * Sets the id of the media.\n     *\n     * @param id {String} The new value of id\n     */\n    setId(id) {\n      this._media.id = id;\n    },\n\n    /**\n     * Gets the id of the media.\n     *\n     * @return {String} the id of the media element\n     */\n    getId() {\n      return this._media.id;\n    },\n\n    /**\n     * Whether the browser can play the file format.\n     *\n     * @param type {String} the file format\n     * @return {Boolean}\n     */\n    canPlayType(type) {\n      return this._media.canPlayType(type);\n    },\n\n    /**\n     * Sets the current playback volume, as a number in the range 0.0 to 1.0,\n     * where 0.0 is the quietest and 1.0 the loudest.\n     *\n     * @param volume {Number} 0.0 - 1.0\n     */\n    setVolume(volume) {\n      this._media.volume = volume;\n    },\n\n    /**\n     * Gets the current playback volume, as a number in the range 0.0 to 1.0,\n     * where 0.0 is the quietest and 1.0 the loudest.\n     *\n     * @return {Number} 0.0 - 1.0\n     */\n    getVolume() {\n      return this._media.volume;\n    },\n\n    /**\n     * Sets the media element to mute.\n     *\n     * @param muted {Boolean} new value for mute\n     */\n    setMuted(muted) {\n      this._media.muted = muted;\n    },\n\n    /**\n     * Checks if the media element is muted or not\n     *\n     * @return {Boolean}\n     */\n    isMuted() {\n      return this._media.muted;\n    },\n\n    /**\n     * Gets the duration of the loaded media file.\n     *\n     * @return {Number} the duration\n     */\n    getDuration() {\n      return this._media.duration;\n    },\n\n    /**\n     * Sets the value of current time.\n     *\n     * @param value {Number} the new value of current time\n     */\n    setCurrentTime(value) {\n      this._media.currentTime = value;\n    },\n\n    /**\n     * Gets current time of the playback.\n     *\n     * @return {Number} the current time\n     */\n    getCurrentTime() {\n      return this._media.currentTime;\n    },\n\n    /**\n     * Sets the source url of the media file.\n     *\n     * @param source {String} the source url to the media file.\n     */\n    setSource(source) {\n      this._media.src = source;\n    },\n\n    /**\n     * Gets the source url of the media file.\n     *\n     * @return {String} the source url to the media file.\n     */\n    getSource() {\n      return this._media.src;\n    },\n\n    /**\n     * Sets the source object of the media file.\n     *\n     * @param sourceObject {MediaStream} the source media stream.\n     */\n    setSourceObject(sourceObject) {\n      this._media.srcObject = sourceObject;\n    },\n\n    /**\n     * Gets the source object of the media file.\n     *\n     * @return {MediaStream|null} the source stream object to the media file, if it exists.\n     */\n    getSourceObject() {\n      return this._media.srcObject;\n    },\n\n    /**\n     * Checks if the media element shows its controls.\n     *\n     * @return {Boolean}\n     */\n    hasControls() {\n      return this._media.controls;\n    },\n\n    /**\n     * Shows the controls of the media element.\n     */\n    showControls() {\n      this._media.controls = true;\n    },\n\n    /**\n     * Hides the controls of the media element.\n     */\n    hideControls() {\n      this._media.controls = false;\n    },\n\n    /**\n     * Plays the media directly when it is loaded / the page is loaded.\n     *\n     *  @param autoplay {Boolean} To autoplay or not\n     */\n    setAutoplay(autoplay) {\n      this._media.autoplay = autoplay;\n    },\n\n    /**\n     * Whether the media is played directly when it is loaded / the page is loaded.\n     *\n     *  @return {Boolean} if autoplay is on or not\n     */\n    getAutoplay() {\n      return this._media.autoplay;\n    },\n\n    /**\n     * Hints how much buffering the media resource will likely need.\n     *\n     * @param preload {String} One of the following values:\n     *  \"none\": Hints to the user agent that either the author does not expect\n     *  the user to need the media resource, or that the server wants to minimize\n     *  unnecessary traffic.\n     *  \"metadata\": Hints to the user agent that the author does not expect the\n     *  user to need the media resource, but that fetching the resource metadata\n     *  (dimensions, first frame, track list, duration, etc) is reasonable.\n     *  \"auto\": Hints to the user agent that the user agent can put the user's needs\n     *  first without risk to the server, up to and including optimistically\n     *  downloading the entire resource.\n     */\n    setPreload(preload) {\n      if (preload == \"none\" || preload == \"metadata\" || preload == \"auto\") {\n        this._media.preload = preload;\n      } else {\n        // Set auto as default\n        this._media.preload = \"auto\";\n      }\n    },\n\n    /**\n     * Returns how much buffering the media resource will likely need.\n     *\n     * @return {String} hint how much buffering the media resource needs\n     */\n    getPreload() {\n      return this._media.preload;\n    },\n\n    /**\n     * Indicates that the media element is to seek back to the start of the media resource upon reaching the end.\n     *\n     * @param value {Boolean} To loop or not.\n     */\n    setLoop(value) {\n      //ff doesn't have loop\n      if (!this._hasLoop) {\n        if (value === true) {\n          this._loopId = this.addListener(\"ended\", this.play, this);\n        } else if (value === false && this._loopId) {\n          this.removeListenerById(this._loopId);\n          this._loopId = null;\n        }\n      }\n      this._media.loop = value;\n    },\n\n    /**\n     * Whether the media element is to seek back to the start of the media resource upon reaching the end.\n     *\n     * @return {Boolean} if loop is on or not\n     */\n    isLoop() {\n      return !!this._media.loop;\n    },\n\n    /**\n     * Play event handler.\n     */\n    _handlePlayEvent() {\n      this.fireEvent(\"play\");\n    },\n\n    /**\n     * Pause event handler.\n     */\n    _handlePauseEvent() {\n      this.fireEvent(\"pause\");\n    },\n\n    /**\n     * Time Update event handler.\n     */\n    _handleTimeUpdateEvent() {\n      this.fireEvent(\"timeupdate\");\n    },\n\n    /**\n     * Ended event handler.\n     */\n    _handleEndedEvent() {\n      this.fireEvent(\"ended\");\n    },\n\n    /**\n     * Volume Change event handler.\n     */\n    _handleVolumeChangeEvent() {\n      this.fireEvent(\"volumechange\");\n    },\n\n    /**\n     * Loaded Data event handler.\n     */\n    _handleLoadedDataEvent() {\n      this.fireEvent(\"loadeddata\");\n    },\n\n    /**\n     * Loaded Metadata event handler.\n     */\n    _handleLoadedMetaDataEvent() {\n      this.fireEvent(\"loadedmetadata\");\n    }\n  },\n\n  destruct() {\n    var Event = qx.bom.Event;\n\n    Event.removeNativeListener(this._media, \"play\", this._handlePlayEventBound);\n    Event.removeNativeListener(\n      this._media,\n      \"pause\",\n      this._handlePauseEventBound\n    );\n\n    Event.removeNativeListener(\n      this._media,\n      \"timeupdate\",\n      this._handleTimeUpdateEventBound\n    );\n\n    Event.removeNativeListener(\n      this._media,\n      \"ended\",\n      this._handleEndedEventBound\n    );\n\n    Event.removeNativeListener(\n      this._media,\n      \"volumechange\",\n      this._handleVolumeChangeEventBound\n    );\n\n    Event.removeNativeListener(\n      this._media,\n      \"loadeddata\",\n      this._handleLoadedDataEventBound\n    );\n\n    Event.removeNativeListener(\n      this._media,\n      \"loadedmetadata\",\n      this._handleLoadedMetaDataEventBound\n    );\n\n    try {\n      // IE9 sometimes throws an can't access error\n      this.pause();\n    } catch (ex) {}\n\n    this.setSource(\"\");\n    this._media = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}