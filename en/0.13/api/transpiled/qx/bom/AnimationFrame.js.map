{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "event",
    "Emitter",
    "events",
    "end",
    "undefined",
    "frame",
    "members",
    "__canceled",
    "startSequence",
    "duration",
    "start",
    "window",
    "performance",
    "now",
    "bom",
    "AnimationFrame",
    "__start",
    "Date",
    "cb",
    "time",
    "id",
    "emit",
    "timePassed",
    "Math",
    "max",
    "request",
    "cancelSequence",
    "statics",
    "TIMEOUT",
    "calculateTiming",
    "func",
    "x",
    "a",
    "y",
    "i",
    "length",
    "pow",
    "callback",
    "context",
    "req",
    "core",
    "Environment",
    "get",
    "call",
    "setTimeout",
    "defer",
    "timing",
    "navigationStart"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/AnimationFrame.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This is a cross browser wrapper for requestAnimationFrame. For further\r\n * information about the feature, take a look at spec:\r\n * http://www.w3.org/TR/animation-timing/\r\n *\r\n * This class offers two ways of using this feature. First, the plain\r\n * API the spec describes.\r\n *\r\n * Here is a sample usage:\r\n * <pre class='javascript'>var start = Date.now();\r\n * var cb = function(time) {\r\n *   if (time >= start + duration) {\r\n *     // ... do some last tasks\r\n *   } else {\r\n *     var timePassed = time - start;\r\n *     // ... calculate the current step and apply it\r\n *     qx.bom.AnimationFrame.request(cb, this);\r\n *   }\r\n * };\r\n * qx.bom.AnimationFrame.request(cb, this);\r\n * </pre>\r\n *\r\n * Another way of using it is to use it as an instance emitting events.\r\n *\r\n * Here is a sample usage of that API:\r\n * <pre class='javascript'>var frame = new qx.bom.AnimationFrame();\r\n * frame.on(\"end\", function() {\r\n *   // ... do some last tasks\r\n * }, this);\r\n * frame.on(\"frame\", function(timePassed) {\r\n *   // ... calculate the current step and apply it\r\n * }, this);\r\n * frame.startSequence(duration);\r\n * </pre>\r\n *\r\n * @require(qx.lang.normalize.Date)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.AnimationFrame\", {\r\n  extend: qx.event.Emitter,\r\n\r\n  events: {\r\n    /** Fired as soon as the animation has ended. */\r\n    end: undefined,\r\n\r\n    /**\r\n     * Fired on every frame having the passed time as value\r\n     * (might be a float for higher precision).\r\n     */\r\n    frame: \"Number\"\r\n  },\r\n\r\n  members: {\r\n    __canceled: false,\r\n\r\n    /**\r\n     * Method used to start a series of animation frames. The series will end as\r\n     * soon as the given duration is over.\r\n     *\r\n     * @param duration {Number} The duration the sequence should take.\r\n     *\r\n     * @ignore(performance.*)\r\n     */\r\n    startSequence(duration) {\r\n      this.__canceled = false;\r\n\r\n      var start =\r\n        window.performance && performance.now\r\n          ? performance.now() + qx.bom.AnimationFrame.__start\r\n          : Date.now();\r\n      var cb = function (time) {\r\n        if (this.__canceled) {\r\n          this.id = null;\r\n          return;\r\n        }\r\n\r\n        // final call\r\n        if (time >= start + duration) {\r\n          this.emit(\"end\");\r\n          this.id = null;\r\n        } else {\r\n          var timePassed = Math.max(time - start, 0);\r\n          this.emit(\"frame\", timePassed);\r\n          this.id = qx.bom.AnimationFrame.request(cb, this);\r\n        }\r\n      };\r\n\r\n      this.id = qx.bom.AnimationFrame.request(cb, this);\r\n    },\r\n\r\n    /**\r\n     * Cancels a started sequence of frames. It will do nothing if no\r\n     * sequence is running.\r\n     */\r\n    cancelSequence() {\r\n      this.__canceled = true;\r\n    }\r\n  },\r\n\r\n  statics: {\r\n    /**\r\n     * The default time in ms the timeout fallback implementation uses.\r\n     */\r\n    TIMEOUT: 30,\r\n\r\n    /**\r\n     * Calculation of the predefined timing functions. Approximation of the real\r\n     * bezier curves has been used for easier calculation. This is good and close\r\n     * enough for the predefined functions like <code>ease</code> or\r\n     * <code>linear</code>.\r\n     *\r\n     * @param func {String} The defined timing function. One of the following values:\r\n     *   <code>\"ease-in\"</code>, <code>\"ease-out\"</code>, <code>\"linear\"</code>,\r\n     *   <code>\"ease-in-out\"</code>, <code>\"ease\"</code>.\r\n     * @param x {Integer} The percent value of the function.\r\n     * @return {Integer} The calculated value\r\n     */\r\n    calculateTiming(func, x) {\r\n      if (func == \"ease-in\") {\r\n        var a = [3.1223e-7, 0.0757, 1.2646, -0.167, -0.4387, 0.2654];\r\n      } else if (func == \"ease-out\") {\r\n        var a = [-7.0198e-8, 1.652, -0.551, -0.0458, 0.1255, -0.1807];\r\n      } else if (func == \"linear\") {\r\n        return x;\r\n      } else if (func == \"ease-in-out\") {\r\n        var a = [2.482e-7, -0.2289, 3.3466, -1.0857, -1.7354, 0.7034];\r\n      } else {\r\n        // default is 'ease'\r\n        var a = [-0.0021, 0.2472, 9.8054, -21.6869, 17.7611, -5.1226];\r\n      }\r\n\r\n      // A 6th grade polynomial has been used as approximation of the original\r\n      // bezier curves  described in the transition spec\r\n      // http://www.w3.org/TR/css3-transitions/#transition-timing-function_tag\r\n      // (the same is used for animations as well)\r\n      var y = 0;\r\n      for (var i = 0; i < a.length; i++) {\r\n        y += a[i] * Math.pow(x, i);\r\n      }\r\n      return y;\r\n    },\r\n\r\n    /**\r\n     * Request for an animation frame. If the native <code>requestAnimationFrame</code>\r\n     * method is supported, it will be used. Otherwise, we use timeouts with a\r\n     * 30ms delay. The HighResolutionTime will be used if supported but the time given\r\n     * to the callback will still be a timestamp starting at 1 January 1970 00:00:00 UTC.\r\n     *\r\n     * @param callback {Function} The callback function which will get the current\r\n     *   time as argument (which could be a float for higher precision).\r\n     * @param context {var} The context of the callback.\r\n     * @return {Number} The id of the request.\r\n     */\r\n    request(callback, context) {\r\n      var req = qx.core.Environment.get(\"css.animation.requestframe\");\r\n\r\n      var cb = function (time) {\r\n        // check for high resolution time\r\n        if (time < 1e10) {\r\n          time = qx.bom.AnimationFrame.__start + time;\r\n        }\r\n\r\n        time = time || Date.now();\r\n        callback.call(context, time);\r\n      };\r\n      if (req) {\r\n        return window[req](cb);\r\n      } else {\r\n        // make sure to use an indirection because setTimeout passes a\r\n        // number as first argument as well\r\n        return window.setTimeout(function () {\r\n          cb();\r\n        }, qx.bom.AnimationFrame.TIMEOUT);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @ignore(performance.timing.*)\r\n   */\r\n  defer(statics) {\r\n    // check and use the high resolution start time if available\r\n    statics.__start =\r\n      window.performance &&\r\n      performance.timing &&\r\n      performance.timing.navigationStart;\r\n    // if not, simply use the current time\r\n    if (!statics.__start) {\r\n      statics.__start = Date.now();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}