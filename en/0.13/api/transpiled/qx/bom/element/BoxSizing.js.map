{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__nativeBorderBox",
    "tags",
    "button",
    "select",
    "types",
    "search",
    "submit",
    "reset",
    "checkbox",
    "radio",
    "__usesNativeBorderBox",
    "element",
    "map",
    "tagName",
    "toLowerCase",
    "type",
    "compile",
    "value",
    "core",
    "Environment",
    "get",
    "prop",
    "bom",
    "Style",
    "getCssName",
    "Document",
    "isStandardMode",
    "dom",
    "Node",
    "getWindow",
    "set",
    "style",
    "ex",
    "BoxSizing"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/BoxSizing.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Contains methods to control and query the element's box-sizing property.\n *\n * Supported values:\n *\n * * \"content-box\" = W3C model (dimensions are content specific)\n * * \"border-box\" = Microsoft model (dimensions are box specific incl. border and padding)\n */\nqx.Bootstrap.define(\"qx.bom.element.BoxSizing\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Map} Internal data structure for __usesNativeBorderBox() */\n    __nativeBorderBox: {\n      tags: {\n        button: true,\n        select: true\n      },\n\n      types: {\n        search: true,\n        button: true,\n        submit: true,\n        reset: true,\n        checkbox: true,\n        radio: true\n      }\n    },\n\n    /**\n     * Whether the given elements defaults to the \"border-box\" Microsoft model in all cases.\n     *\n     * @param element {Element} DOM element to query\n     * @return {Boolean} true when the element uses \"border-box\" independently from the doctype\n     */\n    __usesNativeBorderBox(element) {\n      var map = this.__nativeBorderBox;\n      return map.tags[element.tagName.toLowerCase()] || map.types[element.type];\n    },\n\n    /**\n     * Compiles the given box sizing into a CSS compatible string.\n     *\n     * @param value {String} Valid CSS box-sizing value\n     * @return {String} CSS string\n     */\n    compile(value) {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        var prop = qx.bom.Style.getCssName(\n          qx.core.Environment.get(\"css.boxsizing\")\n        );\n\n        return prop + \":\" + value + \";\";\n      } else {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.warn(\n            this,\n            \"This client does not support dynamic modification of the boxSizing property.\"\n          );\n\n          qx.log.Logger.trace();\n        }\n      }\n    },\n\n    /**\n     * Returns the box sizing for the given element.\n     *\n     * @param element {Element} The element to query\n     * @return {String} Box sizing value of the given element.\n     */\n    get(element) {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        return (\n          qx.bom.element.Style.get(element, \"boxSizing\", null, false) || \"\"\n        );\n      }\n\n      if (qx.bom.Document.isStandardMode(qx.dom.Node.getWindow(element))) {\n        if (!this.__usesNativeBorderBox(element)) {\n          return \"content-box\";\n        }\n      }\n\n      return \"border-box\";\n    },\n\n    /**\n     * Applies a new box sizing to the given element\n     *\n     * @param element {Element} The element to modify\n     * @param value {String} New box sizing value to set\n     */\n    set(element, value) {\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        // IE8 bombs when trying to apply an unsupported value\n        try {\n          element.style[qx.core.Environment.get(\"css.boxsizing\")] = value;\n        } catch (ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            qx.log.Logger.warn(\n              this,\n              \"This client does not support the boxSizing value\",\n              value\n            );\n          }\n        }\n      } else {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.warn(\n            this,\n            \"This client does not support dynamic modification of the boxSizing property.\"\n          );\n        }\n      }\n    },\n\n    /**\n     * Removes the local box sizing applied to the element\n     *\n     * @param element {Element} The element to modify\n     */\n    reset(element) {\n      this.set(element, \"\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}