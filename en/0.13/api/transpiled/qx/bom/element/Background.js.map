{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__tmpl",
    "__emptyStyles",
    "backgroundImage",
    "backgroundPosition",
    "backgroundRepeat",
    "__computePosition",
    "left",
    "top",
    "engine",
    "core",
    "Environment",
    "get",
    "version",
    "leftCss",
    "topCss",
    "compile",
    "source",
    "repeat",
    "position",
    "backgroundImageUrl",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "tmpl",
    "join",
    "getStyles",
    "backgroundImageCssString",
    "map",
    "set",
    "element",
    "styles",
    "prop",
    "style",
    "bom",
    "Background"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Background.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The background class contains methods to compute and set the background image\n * of a DOM element.\n *\n * It fixes a background position issue in Firefox 2.\n */\nqx.Class.define(\"qx.bom.element.Background\", {\n  statics: {\n    /** @type {Array} Internal helper to improve compile performance */\n    __tmpl: [\n      \"background-image:url(\",\n      null,\n      \");\",\n      \"background-position:\",\n      null,\n      \";\",\n      \"background-repeat:\",\n      null,\n      \";\"\n    ],\n\n    /** @type {Map} Empty styles when no image is given */\n    __emptyStyles: {\n      backgroundImage: null,\n      backgroundPosition: null,\n      backgroundRepeat: null\n    },\n\n    /**\n     * Computes the background position CSS value\n     *\n     * @param left {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @param top {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @return {String} The background position CSS value\n     */\n    __computePosition(left, top) {\n      // Correcting buggy Firefox background-position implementation\n      // Have problems with identical values\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"engine.version\");\n      if (\n        engine == \"gecko\" &&\n        version < 1.9 &&\n        left == top &&\n        typeof left == \"number\"\n      ) {\n        top += 0.01;\n      }\n\n      if (left) {\n        var leftCss = typeof left == \"number\" ? left + \"px\" : left;\n      } else {\n        leftCss = \"0\";\n      }\n      if (top) {\n        var topCss = typeof top == \"number\" ? top + \"px\" : top;\n      } else {\n        topCss = \"0\";\n      }\n\n      return leftCss + \" \" + topCss;\n    },\n\n    /**\n     * Compiles the background into a CSS compatible string.\n     *\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {String} CSS string\n     */\n    compile(source, repeat, left, top) {\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl =\n        qx.util.ResourceManager.getInstance().toUri(source);\n\n      // Updating template\n      var tmpl = this.__tmpl;\n\n      tmpl[1] = \"'\" + backgroundImageUrl + \"'\"; // Put in quotes so spaces work\n      tmpl[4] = position;\n      tmpl[7] = repeat;\n\n      return tmpl.join(\"\");\n    },\n\n    /**\n     * Get standard css background styles\n     *\n     * @param source {String} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {Map} A map of CSS styles\n     */\n    getStyles(source, repeat, left, top) {\n      if (!source) {\n        return this.__emptyStyles;\n      }\n\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl =\n        qx.util.ResourceManager.getInstance().toUri(source);\n\n      var backgroundImageCssString = \"url('\" + backgroundImageUrl + \"')\"; // Put in quotes so spaces work\n      var map = {\n        backgroundPosition: position,\n        backgroundImage: backgroundImageCssString\n      };\n\n      if (repeat != null) {\n        map.backgroundRepeat = repeat;\n      }\n      return map;\n    },\n\n    /**\n     * Set the background on the given DOM element\n     *\n     * @param element {Element} The element to modify\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer?null} The horizontal offset of the image inside of\n     *     the image element.\n     * @param top {Integer?null} The vertical offset of the image inside of\n     *     the image element.\n     */\n    set(element, source, repeat, left, top) {\n      var styles = this.getStyles(source, repeat, left, top);\n      for (var prop in styles) {\n        element.style[prop] = styles[prop];\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}