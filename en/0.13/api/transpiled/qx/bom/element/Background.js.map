{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__tmpl",
    "__emptyStyles",
    "backgroundImage",
    "backgroundPosition",
    "backgroundRepeat",
    "__computePosition",
    "left",
    "top",
    "engine",
    "core",
    "Environment",
    "get",
    "version",
    "leftCss",
    "topCss",
    "compile",
    "source",
    "repeat",
    "position",
    "backgroundImageUrl",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "tmpl",
    "join",
    "getStyles",
    "backgroundImageCssString",
    "map",
    "set",
    "element",
    "styles",
    "prop",
    "style",
    "bom",
    "Background"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Background.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The background class contains methods to compute and set the background image\n * of a DOM element.\n *\n * It fixes a background position issue in Firefox 2.\n */\nqx.Class.define(\"qx.bom.element.Background\", {\n  statics: {\n    /** @type {Array} Internal helper to improve compile performance */\n    __tmpl: [\n      \"background-image:url(\",\n      null,\n      \");\",\n      \"background-position:\",\n      null,\n      \";\",\n      \"background-repeat:\",\n      null,\n      \";\"\n    ],\n\n    /** @type {Map} Empty styles when no image is given */\n    __emptyStyles: {\n      backgroundImage: null,\n      backgroundPosition: null,\n      backgroundRepeat: null\n    },\n\n    /**\n     * Computes the background position CSS value\n     *\n     * @param left {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @param top {Integer|String} either an integer pixel value or a CSS\n     *    string value\n     * @return {String} The background position CSS value\n     */\n    __computePosition(left, top) {\n      // Correcting buggy Firefox background-position implementation\n      // Have problems with identical values\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"engine.version\");\n      if (\n        engine == \"gecko\" &&\n        version < 1.9 &&\n        left == top &&\n        typeof left == \"number\"\n      ) {\n        top += 0.01;\n      }\n\n      if (left) {\n        var leftCss = typeof left == \"number\" ? left + \"px\" : left;\n      } else {\n        leftCss = \"0\";\n      }\n      if (top) {\n        var topCss = typeof top == \"number\" ? top + \"px\" : top;\n      } else {\n        topCss = \"0\";\n      }\n\n      return leftCss + \" \" + topCss;\n    },\n\n    /**\n     * Compiles the background into a CSS compatible string.\n     *\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {String} CSS string\n     */\n    compile(source, repeat, left, top) {\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl =\n        qx.util.ResourceManager.getInstance().toUri(source);\n\n      // Updating template\n      var tmpl = this.__tmpl;\n\n      tmpl[1] = \"'\" + backgroundImageUrl + \"'\"; // Put in quotes so spaces work\n      tmpl[4] = position;\n      tmpl[7] = repeat;\n\n      return tmpl.join(\"\");\n    },\n\n    /**\n     * Get standard css background styles\n     *\n     * @param source {String} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer|String?null} The horizontal offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"center\", \"left\" and \"right\"\n     * @param top {Integer|String?null} The vertical offset of the image\n     *      inside of the image element. If the value is an integer it is\n     *      interpreted as pixel value otherwise the value is taken as CSS value.\n     *      CSS the values are \"top\", \"bottom\" and \"center\"\n     * @return {Map} A map of CSS styles\n     */\n    getStyles(source, repeat, left, top) {\n      if (!source) {\n        return this.__emptyStyles;\n      }\n\n      var position = this.__computePosition(left, top);\n      var backgroundImageUrl =\n        qx.util.ResourceManager.getInstance().toUri(source);\n\n      var backgroundImageCssString = \"url('\" + backgroundImageUrl + \"')\"; // Put in quotes so spaces work\n      var map = {\n        backgroundPosition: position,\n        backgroundImage: backgroundImageCssString\n      };\n\n      if (repeat != null) {\n        map.backgroundRepeat = repeat;\n      }\n      return map;\n    },\n\n    /**\n     * Set the background on the given DOM element\n     *\n     * @param element {Element} The element to modify\n     * @param source {String?null} The URL of the background image\n     * @param repeat {String?null} The background repeat property. valid values\n     *     are <code>repeat</code>, <code>repeat-x</code>,\n     *     <code>repeat-y</code>, <code>no-repeat</code>\n     * @param left {Integer?null} The horizontal offset of the image inside of\n     *     the image element.\n     * @param top {Integer?null} The vertical offset of the image inside of\n     *     the image element.\n     */\n    set(element, source, repeat, left, top) {\n      var styles = this.getStyles(source, repeat, left, top);\n      for (var prop in styles) {\n        element.style[prop] = styles[prop];\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}