{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__style",
    "__P_148_0",
    "elem",
    "style",
    "bom",
    "element",
    "Style",
    "get",
    "COMPUTED_MODE",
    "__num",
    "__P_148_1",
    "parseInt",
    "__computeScroll",
    "__P_148_2",
    "left",
    "top",
    "win",
    "dom",
    "Node",
    "getWindow",
    "Viewport",
    "getScrollLeft",
    "getScrollTop",
    "__computeBody",
    "core",
    "Environment",
    "select",
    "mshtml",
    "doc",
    "getDocument",
    "body",
    "clientLeft",
    "documentElement",
    "clientTop",
    "webkit",
    "offsetLeft",
    "offsetTop",
    "gecko",
    "BoxSizing",
    "_default",
    "__computeOffset",
    "__P_148_4",
    "rect",
    "getBoundingClientRect",
    "Math",
    "round",
    "mode",
    "tagName",
    "location",
    "__getBodyLocation",
    "offset",
    "scroll",
    "elementWidth",
    "elementHeight",
    "SVGElement",
    "width",
    "height",
    "offsetWidth",
    "offsetHeight",
    "right",
    "bottom",
    "overX",
    "scrollWidth",
    "overY",
    "scrollHeight",
    "scrollLeft",
    "scrollTop",
    "__P_148_5",
    "getLeft",
    "getTop",
    "getRight",
    "getBottom",
    "getRelative",
    "elem1",
    "elem2",
    "mode1",
    "mode2",
    "loc1",
    "loc2",
    "getPosition",
    "getOffsetParent",
    "document",
    "offsetParent",
    "test",
    "Location"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Location.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n\r\n   ======================================================================\r\n\r\n   This class contains code based on the following work:\r\n\r\n   * jQuery Dimension Plugin\r\n       http://jquery.com/\r\n       Version 1.1.3\r\n\r\n     Copyright:\r\n       (c) 2007, Paul Bakaus & Brandon Aaron\r\n\r\n     License:\r\n       MIT: http://www.opensource.org/licenses/mit-license.php\r\n\r\n     Authors:\r\n       Paul Bakaus\r\n       Brandon Aaron\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Query the location of an arbitrary DOM element in relation to its top\r\n * level body element. Works in all major browsers:\r\n *\r\n * * Mozilla 1.5 + 2.0\r\n * * Internet Explorer 6.0 + 7.0 (both standard & quirks mode)\r\n * * Opera 9.2\r\n * * Safari 3.0 beta\r\n *\r\n * @ignore(SVGElement)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.element.Location\", {\r\n  statics: {\r\n    /**\r\n     * Queries a style property for the given element\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param style {String} Style property\r\n     * @return {String} Value of given style property\r\n     */\r\n    __style(elem, style) {\r\n      return qx.bom.element.Style.get(\r\n        elem,\r\n        style,\r\n        qx.bom.element.Style.COMPUTED_MODE,\r\n        false\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Queries a style property for the given element and parses it to an integer value\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param style {String} Style property\r\n     * @return {Integer} Value of given style property\r\n     */\r\n    __num(elem, style) {\r\n      return (\r\n        parseInt(\r\n          qx.bom.element.Style.get(\r\n            elem,\r\n            style,\r\n            qx.bom.element.Style.COMPUTED_MODE,\r\n            false\r\n          ),\r\n\r\n          10\r\n        ) || 0\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Computes the scroll offset of the given element relative to the document\r\n     * <code>body</code>.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @return {Map} Map which contains the <code>left</code> and <code>top</code> scroll offsets\r\n     */\r\n    __computeScroll(elem) {\r\n      var left = 0,\r\n        top = 0;\r\n      // Find window\r\n      var win = qx.dom.Node.getWindow(elem);\r\n\r\n      left -= qx.bom.Viewport.getScrollLeft(win);\r\n      top -= qx.bom.Viewport.getScrollTop(win);\r\n\r\n      return {\r\n        left: left,\r\n        top: top\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Computes the offset of the given element relative to the document\r\n     * <code>body</code>.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @return {Map} Map which contains the <code>left</code> and <code>top</code> offsets\r\n     */\r\n    __computeBody: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(elem) {\r\n        // Find body element\r\n        var doc = qx.dom.Node.getDocument(elem);\r\n        var body = doc.body;\r\n\r\n        var left = 0;\r\n        var top = 0;\r\n\r\n        left -= body.clientLeft + doc.documentElement.clientLeft;\r\n        top -= body.clientTop + doc.documentElement.clientTop;\r\n\r\n        if (!qx.core.Environment.get(\"browser.quirksmode\")) {\r\n          left += this.__num(body, \"borderLeftWidth\");\r\n          top += this.__num(body, \"borderTopWidth\");\r\n        }\r\n\r\n        return {\r\n          left: left,\r\n          top: top\r\n        };\r\n      },\r\n\r\n      webkit(elem) {\r\n        // Find body element\r\n        var doc = qx.dom.Node.getDocument(elem);\r\n        var body = doc.body;\r\n\r\n        // Start with the offset\r\n        var left = body.offsetLeft;\r\n        var top = body.offsetTop;\r\n\r\n        return {\r\n          left: left,\r\n          top: top\r\n        };\r\n      },\r\n\r\n      gecko(elem) {\r\n        // Find body element\r\n        var body = qx.dom.Node.getDocument(elem).body;\r\n\r\n        // Start with the offset\r\n        var left = body.offsetLeft;\r\n        var top = body.offsetTop;\r\n\r\n        // Correct substracted border (only in content-box mode)\r\n        if (qx.bom.element.BoxSizing.get(body) !== \"border-box\") {\r\n          left += this.__num(body, \"borderLeftWidth\");\r\n          top += this.__num(body, \"borderTopWidth\");\r\n        }\r\n\r\n        return {\r\n          left: left,\r\n          top: top\r\n        };\r\n      },\r\n\r\n      // At the moment only correctly supported by Opera\r\n      default(elem) {\r\n        // Find body element\r\n        var body = qx.dom.Node.getDocument(elem).body;\r\n\r\n        // Start with the offset\r\n        var left = body.offsetLeft;\r\n        var top = body.offsetTop;\r\n\r\n        return {\r\n          left: left,\r\n          top: top\r\n        };\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Computes the sum of all offsets of the given element node.\r\n     *\r\n     * @signature function(elem)\r\n     * @param elem {Element} DOM element to query\r\n     * @return {Map} Map which contains the <code>left</code> and <code>top</code> offsets\r\n     */\r\n    __computeOffset(elem) {\r\n      var rect = elem.getBoundingClientRect();\r\n\r\n      // Firefox 3.0 alpha 6 (gecko 1.9) returns floating point numbers\r\n      // use Math.round() to round them to style compatible numbers\r\n      // MSHTML returns integer numbers\r\n      return {\r\n        left: Math.round(rect.left),\r\n        top: Math.round(rect.top)\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Computes the location of the given element in context of\r\n     * the document dimensions.\r\n     *\r\n     * Supported modes:\r\n     *\r\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\r\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\r\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\r\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\r\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param mode {String?box} A supported option. See comment above.\r\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\r\n     *   <code>right</code> and <code>bottom</code> which contains the distance\r\n     *   of the element relative to the document.\r\n     */\r\n    get(elem, mode) {\r\n      if (elem.tagName == \"BODY\") {\r\n        var location = this.__getBodyLocation(elem);\r\n        var left = location.left;\r\n        var top = location.top;\r\n      } else {\r\n        var body = this.__computeBody(elem);\r\n        var offset = this.__computeOffset(elem);\r\n        // Reduce by viewport scrolling.\r\n        // Hint: getBoundingClientRect returns the location of the\r\n        // element in relation to the viewport which includes\r\n        // the scrolling\r\n        var scroll = this.__computeScroll(elem);\r\n\r\n        var left = offset.left + body.left - scroll.left;\r\n        var top = offset.top + body.top - scroll.top;\r\n      }\r\n\r\n      var elementWidth;\r\n      var elementHeight;\r\n      if (elem instanceof SVGElement) {\r\n        var rect = elem.getBoundingClientRect();\r\n        elementWidth = rect.width;\r\n        elementHeight = rect.height;\r\n      } else {\r\n        elementWidth = elem.offsetWidth;\r\n        elementHeight = elem.offsetHeight;\r\n      }\r\n\r\n      var right = left + elementWidth;\r\n      var bottom = top + elementHeight;\r\n\r\n      if (mode) {\r\n        // In this modes we want the size as seen from a child what means that we want the full width/height\r\n        // which may be higher than the outer width/height when the element has scrollbars.\r\n        if (mode == \"padding\" || mode == \"scroll\") {\r\n          var overX = qx.bom.element.Style.get(elem, \"overflowX\");\r\n          if (overX == \"scroll\" || overX == \"auto\") {\r\n            right +=\r\n              elem.scrollWidth -\r\n              elementWidth +\r\n              this.__num(elem, \"borderLeftWidth\") +\r\n              this.__num(elem, \"borderRightWidth\");\r\n          }\r\n\r\n          var overY = qx.bom.element.Style.get(elem, \"overflowY\");\r\n          if (overY == \"scroll\" || overY == \"auto\") {\r\n            bottom +=\r\n              elem.scrollHeight -\r\n              elementHeight +\r\n              this.__num(elem, \"borderTopWidth\") +\r\n              this.__num(elem, \"borderBottomWidth\");\r\n          }\r\n        }\r\n\r\n        switch (mode) {\r\n          case \"padding\":\r\n            left += this.__num(elem, \"paddingLeft\");\r\n            top += this.__num(elem, \"paddingTop\");\r\n            right -= this.__num(elem, \"paddingRight\");\r\n            bottom -= this.__num(elem, \"paddingBottom\");\r\n          // no break here\r\n\r\n          case \"scroll\":\r\n            left -= elem.scrollLeft;\r\n            top -= elem.scrollTop;\r\n            right -= elem.scrollLeft;\r\n            bottom -= elem.scrollTop;\r\n          // no break here\r\n\r\n          case \"border\":\r\n            left += this.__num(elem, \"borderLeftWidth\");\r\n            top += this.__num(elem, \"borderTopWidth\");\r\n            right -= this.__num(elem, \"borderRightWidth\");\r\n            bottom -= this.__num(elem, \"borderBottomWidth\");\r\n            break;\r\n\r\n          case \"margin\":\r\n            left -= this.__num(elem, \"marginLeft\");\r\n            top -= this.__num(elem, \"marginTop\");\r\n            right += this.__num(elem, \"marginRight\");\r\n            bottom += this.__num(elem, \"marginBottom\");\r\n            break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        left: left,\r\n        top: top,\r\n        right: right,\r\n        bottom: bottom\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Get the location of the body element relative to the document.\r\n     * @param body {Element} The body element.\r\n     * @return {Map} map with the keys <code>left</code> and <code>top</code>\r\n     */\r\n    __getBodyLocation(body) {\r\n      var top = body.offsetTop;\r\n      var left = body.offsetLeft;\r\n\r\n      top += this.__num(body, \"marginTop\");\r\n      left += this.__num(body, \"marginLeft\");\r\n\r\n      if (qx.core.Environment.get(\"engine.name\") === \"gecko\") {\r\n        top += this.__num(body, \"borderLeftWidth\");\r\n        left += this.__num(body, \"borderTopWidth\");\r\n      }\r\n\r\n      return { left: left, top: top };\r\n    },\r\n\r\n    /**\r\n     * Computes the location of the given element in context of\r\n     * the document dimensions. For supported modes please\r\n     * have a look at the {@link qx.bom.element.Location#get} method.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param mode {String} A supported option. See comment above.\r\n     * @return {Integer} The left distance\r\n     *   of the element relative to the document.\r\n     */\r\n    getLeft(elem, mode) {\r\n      return this.get(elem, mode).left;\r\n    },\r\n\r\n    /**\r\n     * Computes the location of the given element in context of\r\n     * the document dimensions. For supported modes please\r\n     * have a look at the {@link qx.bom.element.Location#get} method.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param mode {String} A supported option. See comment above.\r\n     * @return {Integer} The top distance\r\n     *   of the element relative to the document.\r\n     */\r\n    getTop(elem, mode) {\r\n      return this.get(elem, mode).top;\r\n    },\r\n\r\n    /**\r\n     * Computes the location of the given element in context of\r\n     * the document dimensions. For supported modes please\r\n     * have a look at the {@link qx.bom.element.Location#get} method.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param mode {String} A supported option. See comment above.\r\n     * @return {Integer} The right distance\r\n     *   of the element relative to the document.\r\n     */\r\n    getRight(elem, mode) {\r\n      return this.get(elem, mode).right;\r\n    },\r\n\r\n    /**\r\n     * Computes the location of the given element in context of\r\n     * the document dimensions. For supported modes please\r\n     * have a look at the {@link qx.bom.element.Location#get} method.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @param mode {String} A supported option. See comment above.\r\n     * @return {Integer} The bottom distance\r\n     *   of the element relative to the document.\r\n     */\r\n    getBottom(elem, mode) {\r\n      return this.get(elem, mode).bottom;\r\n    },\r\n\r\n    /**\r\n     * Returns the distance between two DOM elements. For supported modes please\r\n     * have a look at the {@link qx.bom.element.Location#get} method.\r\n     *\r\n     * @param elem1 {Element} First element\r\n     * @param elem2 {Element} Second element\r\n     * @param mode1 {String?null} Mode for first element\r\n     * @param mode2 {String?null} Mode for second element\r\n     * @return {Map} Returns a map with <code>left</code> and <code>top</code>\r\n     *   which contains the distance of the elements from each other.\r\n     */\r\n    getRelative(elem1, elem2, mode1, mode2) {\r\n      var loc1 = this.get(elem1, mode1);\r\n      var loc2 = this.get(elem2, mode2);\r\n\r\n      return {\r\n        left: loc1.left - loc2.left,\r\n        top: loc1.top - loc2.top,\r\n        right: loc1.right - loc2.right,\r\n        bottom: loc1.bottom - loc2.bottom\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns the distance between the given element to its offset parent.\r\n     *\r\n     * @param elem {Element} DOM element to query\r\n     * @return {Map} Returns a map with <code>left</code> and <code>top</code>\r\n     *   which contains the distance of the elements from each other.\r\n     */\r\n    getPosition(elem) {\r\n      return this.getRelative(elem, this.getOffsetParent(elem));\r\n    },\r\n\r\n    /**\r\n     * Detects the offset parent of the given element\r\n     *\r\n     * @param element {Element} Element to query for offset parent\r\n     * @return {Element} Detected offset parent\r\n     */\r\n    getOffsetParent(element) {\r\n      // Ther is no offsetParent for SVG elements\r\n      if (element instanceof SVGElement) {\r\n        return document.body;\r\n      }\r\n\r\n      var offsetParent = element.offsetParent || document.body;\r\n      var Style = qx.bom.element.Style;\r\n\r\n      while (\r\n        offsetParent &&\r\n        !/^body|html$/i.test(offsetParent.tagName) &&\r\n        Style.get(offsetParent, \"position\") === \"static\"\r\n      ) {\r\n        offsetParent = offsetParent.offsetParent;\r\n      }\r\n\r\n      return offsetParent;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,yBAAyB,EAAE;IAC7CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,SAAO,WAAAC,UAACC,IAAI,EAAEC,KAAK,EAAE;QACnB,OAAOT,EAAE,CAACU,GAAG,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAC7BL,IAAI,EACJC,KAAK,EACLT,EAAE,CAACU,GAAG,CAACC,OAAO,CAACC,KAAK,CAACE,aAAa,EAClC,KACF,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,SAAK,WAAAC,UAACR,IAAI,EAAEC,KAAK,EAAE;QACjB,OACEQ,QAAQ,CACNjB,EAAE,CAACU,GAAG,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CACtBL,IAAI,EACJC,KAAK,EACLT,EAAE,CAACU,GAAG,CAACC,OAAO,CAACC,KAAK,CAACE,aAAa,EAClC,KACF,CAAC,EAED,EACF,CAAC,IAAI,CAAC;MAEV,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,SAAe,WAAAC,UAACX,IAAI,EAAE;QACpB,IAAIY,IAAI,GAAG,CAAC;UACVC,GAAG,GAAG,CAAC;QACT;QACA,IAAIC,GAAG,GAAGtB,EAAE,CAACuB,GAAG,CAACC,IAAI,CAACC,SAAS,CAACjB,IAAI,CAAC;QAErCY,IAAI,IAAIpB,EAAE,CAACU,GAAG,CAACgB,QAAQ,CAACC,aAAa,CAACL,GAAG,CAAC;QAC1CD,GAAG,IAA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"
}