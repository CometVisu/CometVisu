{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "DEBUG",
    "__warnings",
    "__alphaFixRepeats",
    "core",
    "Environment",
    "select",
    "mshtml",
    "scale",
    "__repeatToTagname",
    "repeat",
    "update",
    "element",
    "source",
    "style",
    "tag",
    "getTagName",
    "tagName",
    "toLowerCase",
    "Error",
    "ret",
    "getAttributes",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "backgroundPosition",
    "undefined",
    "clip",
    "bom",
    "Style",
    "setStyles",
    "get",
    "filters",
    "apply",
    "e",
    "create",
    "css",
    "compile",
    "isFontUri",
    "font",
    "theme",
    "manager",
    "Font",
    "resolve",
    "match",
    "styles",
    "lang",
    "Object",
    "clone",
    "getStyles",
    "width",
    "height",
    "parseInt",
    "display",
    "verticalAlign",
    "position",
    "_style",
    "hasOwnProperty",
    "getCssName",
    "charCode",
    "fromFontUriToCharCode",
    "String",
    "fromCharCode",
    "endsWith",
    "fontSize",
    "lineHeight",
    "WebkitUserDrag",
    "format",
    "getImageFormat",
    "io",
    "ImageLoader",
    "getFormat",
    "result",
    "dimension",
    "__getDimension",
    "__normalizeWidthHeight",
    "processAlphaFix",
    "__processScale",
    "__processScaleXScaleY",
    "__processRepeats",
    "getImageWidth",
    "getWidth",
    "getImageHeight",
    "getHeight",
    "sizingMethod",
    "filter",
    "backgroundImage",
    "backgroundRepeat",
    "uri",
    "sourceid",
    "clipped",
    "getCombinedFormat",
    "data",
    "getData",
    "combinedid",
    "toDataUri",
    "__getStylesForClippedScaleX",
    "__getStylesForClippedScaleY",
    "imageHeight",
    "top",
    "bottom",
    "imageWidth",
    "left",
    "right",
    "offx",
    "offy",
    "paddingTop",
    "paddingLeft",
    "paddingRight",
    "paddingBottom",
    "bg",
    "Background",
    "key",
    "__getStylesForSingleRepeat",
    "split",
    "isNaN",
    "__checkForPotentialClippedImage",
    "has",
    "indexOf",
    "log",
    "Logger",
    "debug",
    "Decoration"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Decoration.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Powerful creation and update features for images used for decoration\n * purposes like for rounded borders, icons, etc.\n *\n * Includes support for image clipping, PNG alpha channel support, additional\n * repeat options like <code>scale-x</code> or <code>scale-y</code>.\n */\nqx.Class.define(\"qx.bom.element.Decoration\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Boolean} Whether clipping hints should be logged */\n    DEBUG: false,\n\n    /** @type {Map} Collect warnings for potential clipped images */\n    __warnings: {},\n\n    /** @type {Map} List of repeat modes which supports the IE AlphaImageLoader */\n    __alphaFixRepeats: qx.core.Environment.select(\"engine.name\", {\n      mshtml: {\n        \"scale-x\": true,\n        \"scale-y\": true,\n        scale: true,\n        \"no-repeat\": true\n      },\n\n      default: null\n    }),\n\n    /** @type {Map} Mapping between background repeat and the tag to create */\n    __repeatToTagname: {\n      \"scale-x\": \"img\",\n      \"scale-y\": \"img\",\n      scale: \"img\",\n      repeat: \"div\",\n      \"no-repeat\": \"div\",\n      \"repeat-x\": \"div\",\n      \"repeat-y\": \"div\"\n    },\n\n    /**\n     * Updates the element to display the given source\n     * with the repeat option.\n     *\n     * @param element {Element} DOM element to update\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     */\n    update(element, source, repeat, style) {\n      var tag = this.getTagName(repeat, source);\n      if (tag != element.tagName.toLowerCase()) {\n        // The \"no-repeat\" means that `getTagName` will suggest a `div` as opposed to an `img` tag, preferring to use\n        //  `img` only for things that need scaling.  The Desktop `qx.ui.*` will always follow this rule, but it\n        //  is valid for virtual DOM (`qx.html.*`) to be used to create a no-repeat `img` tag.  Ignore the validation\n        //  for `no-repeat` `img`.\n        if (repeat != \"no-repeat\" || element.tagName.toLowerCase() != \"img\") {\n          throw new Error(\n            \"Image modification not possible because elements could not be replaced at runtime anymore!\"\n          );\n        }\n      }\n\n      var ret = this.getAttributes(source, repeat, style);\n\n      if (tag === \"img\") {\n        element.src =\n          ret.src ||\n          qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\");\n      }\n\n      // Fix for old background position\n      if (\n        element.style.backgroundPosition != \"\" &&\n        ret.style.backgroundPosition === undefined\n      ) {\n        ret.style.backgroundPosition = null;\n      }\n\n      // Fix for old clip\n      if (element.style.clip != \"\" && ret.style.clip === undefined) {\n        ret.style.clip = null;\n      }\n\n      // Apply new styles\n      qx.bom.element.Style.setStyles(element, ret.style);\n\n      // we need to apply the filter to prevent black rendering artifacts\n      // http://blog.hackedbrain.com/archive/2007/05/21/6110.aspx\n      if (qx.core.Environment.get(\"css.alphaimageloaderneeded\")) {\n        try {\n          element.filters[\n            \"DXImageTransform.Microsoft.AlphaImageLoader\"\n          ].apply();\n        } catch (e) {}\n      }\n    },\n\n    /**\n     * Creates the HTML for a decorator image element with the given options.\n     *\n     * @param source {String} Any valid URI\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param style {Map} Additional styles to apply\n     * @return {String} Decorator image HTML\n     */\n    create(source, repeat, style) {\n      var tag = this.getTagName(repeat, source);\n      var ret = this.getAttributes(source, repeat, style);\n      var css = qx.bom.element.Style.compile(ret.style);\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n\n      if (ResourceManager.isFontUri(source)) {\n        var font = qx.theme.manager.Font.getInstance().resolve(\n          source.match(/@([^/]+)/)[1]\n        );\n\n        var styles = qx.lang.Object.clone(font.getStyles());\n        styles[\"width\"] = style.width;\n        styles[\"height\"] = style.height;\n        styles[\"fontSize\"] =\n          parseInt(style.width) > parseInt(style.height)\n            ? style.height\n            : style.width;\n        styles[\"display\"] = style.display;\n        styles[\"verticalAlign\"] = style.verticalAlign;\n        styles[\"position\"] = style.position;\n\n        var css = \"\";\n        for (var _style in styles) {\n          if (styles.hasOwnProperty(_style)) {\n            css +=\n              qx.bom.Style.getCssName(_style) + \": \" + styles[_style] + \";\";\n          }\n        }\n\n        var charCode = ResourceManager.fromFontUriToCharCode(source);\n\n        return (\n          '<div style=\"' + css + '\">' + String.fromCharCode(charCode) + \"</div>\"\n        );\n      } else {\n        if (tag === \"img\") {\n          return '<img src=\"' + ret.src + '\" style=\"' + css + '\"/>';\n        } else {\n          return '<div style=\"' + css + '\"></div>';\n        }\n      }\n    },\n\n    /**\n     * Translates the given repeat option to a tag name. Useful\n     * for systems which depends on early information of the tag\n     * name to prepare element like {@link qx.html.Image}.\n     *\n     * @param repeat {String} One of <code>scale-x</code>, <code>scale-y</code>,\n     *   <code>scale</code>, <code>repeat</code>, <code>repeat-x</code>,\n     *   <code>repeat-y</code>, <code>repeat</code>\n     * @param source {String?null} Source used to identify the image format\n     * @return {String} The tag name: <code>div</code> or <code>img</code>\n     */\n    getTagName(repeat, source) {\n      if (\n        source &&\n        qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n        this.__alphaFixRepeats[repeat] &&\n        source.endsWith(\".png\")\n      ) {\n        return \"div\";\n      }\n\n      return this.__repeatToTagname[repeat];\n    },\n\n    /**\n     * This method is used to collect all needed attributes for\n     * the tag name detected by {@link #getTagName}.\n     *\n     * @param source {String} Image source\n     * @param repeat {String} Repeat mode of the image\n     * @param style {Map} Additional styles to apply\n     * @return {String} Markup for image\n     */\n    getAttributes(source, repeat, style) {\n      if (!style) {\n        style = {};\n      }\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        // Add a fix for small blocks where IE has a minHeight\n        // of the fontSize in quirks mode\n        style.fontSize = 0;\n        style.lineHeight = 0;\n      } else if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        // This stops images from being draggable in webkit\n        style.WebkitUserDrag = \"none\";\n      }\n\n      var format =\n        qx.util.ResourceManager.getInstance().getImageFormat(source) ||\n        qx.io.ImageLoader.getFormat(source);\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (source != null && format == null) {\n          qx.log.Logger.warn(\n            \"ImageLoader: Not recognized format of external image '\" +\n              source +\n              \"'!\"\n          );\n        }\n      }\n\n      var result;\n\n      // Enable AlphaImageLoader in IE6/IE7/IE8\n      if (\n        qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\n        this.__alphaFixRepeats[repeat] &&\n        format === \"png\"\n      ) {\n        var dimension = this.__getDimension(source);\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        result = this.processAlphaFix(style, repeat, source);\n      } else {\n        delete style.clip;\n        if (repeat === \"scale\") {\n          result = this.__processScale(style, repeat, source);\n        } else if (repeat === \"scale-x\" || repeat === \"scale-y\") {\n          result = this.__processScaleXScaleY(style, repeat, source);\n        } else {\n          // Native repeats or \"no-repeat\"\n          result = this.__processRepeats(style, repeat, source);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Normalize the given width and height values\n     *\n     * @param style {Map} style information\n     * @param width {Integer?null} width as number or null\n     * @param height {Integer?null} height as number or null\n     */\n    __normalizeWidthHeight(style, width, height) {\n      if (style.width == null && width != null) {\n        style.width = width + \"px\";\n      }\n\n      if (style.height == null && height != null) {\n        style.height = height + \"px\";\n      }\n    },\n\n    /**\n     * Returns the dimension of the image by calling\n     * {@link qx.util.ResourceManager} or {@link qx.io.ImageLoader}\n     * depending on if the image is a managed one.\n     *\n     * @param source {String} image source\n     * @return {Map} dimension of image\n     */\n    __getDimension(source) {\n      var width =\n        qx.util.ResourceManager.getInstance().getImageWidth(source) ||\n        qx.io.ImageLoader.getWidth(source);\n      var height =\n        qx.util.ResourceManager.getInstance().getImageHeight(source) ||\n        qx.io.ImageLoader.getHeight(source);\n\n      return {\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Get all styles for IE browser which need to load the image\n     * with the help of the AlphaImageLoader\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} style infos\n     */\n    processAlphaFix(style, repeat, source) {\n      if (repeat == \"repeat\" || repeat == \"repeat-x\" || repeat == \"repeat-y\") {\n        return style;\n      }\n      var sizingMethod = repeat == \"no-repeat\" ? \"crop\" : \"scale\";\n      var filter =\n        \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" +\n        qx.util.ResourceManager.getInstance().toUri(source) +\n        \"', sizingMethod='\" +\n        sizingMethod +\n        \"')\";\n\n      style.filter = filter;\n      style.backgroundImage = style.backgroundRepeat = \"\";\n      delete style[\"background-image\"];\n      delete style[\"background-repeat\"];\n\n      return {\n        style: style\n      };\n    },\n\n    /**\n     * Process scaled images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScale(style, repeat, source) {\n      var uri = qx.util.ResourceManager.getInstance().toUri(source);\n      var dimension = this.__getDimension(source);\n\n      this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n\n      return {\n        src: uri,\n        style: style\n      };\n    },\n\n    /**\n     * Process images which are either scaled horizontally or\n     * vertically.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processScaleXScaleY(style, repeat, sourceid) {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n      var uri;\n\n      if (clipped) {\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\") {\n          uri = ResourceManager.toDataUri(sourceid);\n        } else {\n          uri = ResourceManager.toUri(combinedid);\n        }\n\n        if (repeat === \"scale-x\") {\n          style = this.__getStylesForClippedScaleX(\n            style,\n            data,\n            dimension.height\n          );\n        } else {\n          style = this.__getStylesForClippedScaleY(\n            style,\n            data,\n            dimension.width\n          );\n        }\n\n        return {\n          src: uri,\n          style: style\n        };\n      }\n\n      // No clipped image available\n      else {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.__checkForPotentialClippedImage(sourceid);\n        }\n\n        if (repeat == \"scale-x\") {\n          style.height =\n            dimension.height == null ? null : dimension.height + \"px\";\n          // note: width is given by the user\n        } else if (repeat == \"scale-y\") {\n          style.width = dimension.width == null ? null : dimension.width + \"px\";\n          // note: height is given by the user\n        }\n\n        uri = ResourceManager.toUri(sourceid);\n        return {\n          src: uri,\n          style: style\n        };\n      }\n    },\n\n    /**\n     * Generates the style infos for horizontally scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param height {Integer} image height\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleX(style, data, height) {\n      // Use clipped image (multi-images on x-axis)\n      var imageHeight = qx.util.ResourceManager.getInstance().getImageHeight(\n        data[4]\n      );\n\n      // Add size and clipping\n      style.clip = { top: -data[6], height: height };\n      style.height = imageHeight + \"px\";\n\n      // note: width is given by the user\n\n      // Fix user given y-coordinate to include the combined image offset\n      if (style.top != null) {\n        style.top = parseInt(style.top, 10) + data[6] + \"px\";\n      } else if (style.bottom != null) {\n        style.bottom =\n          parseInt(style.bottom, 10) + height - imageHeight - data[6] + \"px\";\n      }\n\n      return style;\n    },\n\n    /**\n     * Generates the style infos for vertically scaled clipped images.\n     *\n     * @param style {Map} style infos\n     * @param data {Array} image data retrieved from the {@link qx.util.ResourceManager}\n     * @param width {Integer} image width\n     *\n     * @return {Map} style infos and image URI\n     */\n    __getStylesForClippedScaleY(style, data, width) {\n      // Use clipped image (multi-images on x-axis)\n      var imageWidth = qx.util.ResourceManager.getInstance().getImageWidth(\n        data[4]\n      );\n\n      // Add size and clipping\n      style.clip = { left: -data[5], width: width };\n      style.width = imageWidth + \"px\";\n\n      // note: height is given by the user\n\n      // Fix user given x-coordinate to include the combined image offset\n      if (style.left != null) {\n        style.left = parseInt(style.left, 10) + data[5] + \"px\";\n      } else if (style.right != null) {\n        style.right =\n          parseInt(style.right, 10) + width - imageWidth - data[5] + \"px\";\n      }\n\n      return style;\n    },\n\n    /**\n     * Process repeated images.\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param sourceid {String} image resource id\n     *\n     * @return {Map} image URI and style infos\n     */\n    __processRepeats(style, repeat, sourceid) {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var clipped = ResourceManager.getCombinedFormat(sourceid);\n      var dimension = this.__getDimension(sourceid);\n\n      // Double axis repeats cannot be clipped\n      if (clipped && repeat !== \"repeat\") {\n        // data = [ 8, 5, \"png\", \"qx\", \"qx/decoration/Modern/arrows-combined.png\", -36, 0]\n        var data = ResourceManager.getData(sourceid);\n        var combinedid = data[4];\n        if (clipped == \"b64\") {\n          var uri = ResourceManager.toDataUri(sourceid);\n          var offx = 0;\n          var offy = 0;\n        } else {\n          var uri = ResourceManager.toUri(combinedid);\n          var offx = data[5];\n          var offy = data[6];\n\n          // honor padding for combined images\n          if (\n            style.paddingTop ||\n            style.paddingLeft ||\n            style.paddingRight ||\n            style.paddingBottom\n          ) {\n            var top = style.paddingTop || 0;\n            var left = style.paddingLeft || 0;\n\n            offx += style.paddingLeft || 0;\n            offy += style.paddingTop || 0;\n\n            style.clip = {\n              left: left,\n              top: top,\n              width: dimension.width,\n              height: dimension.height\n            };\n          }\n        }\n\n        var bg = qx.bom.element.Background.getStyles(uri, repeat, offx, offy);\n        for (var key in bg) {\n          style[key] = bg[key];\n        }\n\n        if (\n          dimension.width != null &&\n          style.width == null &&\n          (repeat == \"repeat-y\" || repeat === \"no-repeat\")\n        ) {\n          style.width = dimension.width + \"px\";\n        }\n\n        if (\n          dimension.height != null &&\n          style.height == null &&\n          (repeat == \"repeat-x\" || repeat === \"no-repeat\")\n        ) {\n          style.height = dimension.height + \"px\";\n        }\n\n        return {\n          style: style\n        };\n      } else {\n        // honor padding\n        var top = style.paddingTop || 0;\n        var left = style.paddingLeft || 0;\n        style.backgroundPosition = left + \"px \" + top + \"px\";\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (repeat !== \"repeat\") {\n            this.__checkForPotentialClippedImage(sourceid);\n          }\n        }\n\n        this.__normalizeWidthHeight(style, dimension.width, dimension.height);\n        this.__getStylesForSingleRepeat(style, sourceid, repeat);\n\n        return {\n          style: style\n        };\n      }\n    },\n\n    /**\n     * Generate all style infos for single repeated images\n     *\n     * @param style {Map} style information\n     * @param repeat {String} repeat mode\n     * @param source {String} image source\n     */\n    __getStylesForSingleRepeat(style, source, repeat) {\n      // retrieve the \"backgroundPosition\" style if available to prevent\n      // overwriting with default values\n      var top = null;\n      var left = null;\n      if (style.backgroundPosition) {\n        var backgroundPosition = style.backgroundPosition.split(\" \");\n\n        left = parseInt(backgroundPosition[0], 10);\n        if (isNaN(left)) {\n          left = backgroundPosition[0];\n        }\n\n        top = parseInt(backgroundPosition[1], 10);\n        if (isNaN(top)) {\n          top = backgroundPosition[1];\n        }\n      }\n\n      var bg = qx.bom.element.Background.getStyles(source, repeat, left, top);\n      for (var key in bg) {\n        style[key] = bg[key];\n      }\n\n      // Reset the AlphaImageLoader filter if applied\n      // This prevents IE from setting BOTH CSS filter AND backgroundImage\n      // This is only a fallback if the image is not recognized as PNG\n      // If it's a Alpha-PNG file it *may* result in display problems\n      if (style.filter) {\n        style.filter = \"\";\n      }\n    },\n\n    /**\n     * Output a warning if the image can be clipped.\n     *\n     * @param source {String} image source\n     */\n    __checkForPotentialClippedImage(source) {\n      if (\n        this.DEBUG &&\n        qx.util.ResourceManager.getInstance().has(source) &&\n        source.indexOf(\"qx/icon\") == -1\n      ) {\n        if (!this.__warnings[source]) {\n          qx.log.Logger.debug(\"Potential clipped image candidate: \" + source);\n          this.__warnings[source] = true;\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}