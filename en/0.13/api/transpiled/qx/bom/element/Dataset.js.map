{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "set",
    "element",
    "name",
    "value",
    "dataset",
    "lang",
    "String",
    "camelCase",
    "undefined",
    "bom",
    "Attribute",
    "reset",
    "hyphenate",
    "get",
    "attrName",
    "hasAttribute",
    "getAll",
    "res",
    "attr",
    "attributes",
    "i",
    "length",
    "match",
    "RegExp",
    "key",
    "$1",
    "getAttribute",
    "hasData",
    "Object",
    "keys",
    "qxWeb",
    "getAllData",
    "remove",
    "Dataset"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Dataset.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Author:\r\n     * Gabriel Munteanu (gabios)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Data-* attribute handling for DOM HTML elements.\r\n *\r\n * This feature set is supported cross-browser\r\n * through one common interface and is independent of the differences between\r\n * the multiple implementations.\r\n *\r\n */\r\nqx.Bootstrap.define(\"qx.bom.element.Dataset\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * Sets a data attribute on the given DOM element.\r\n     *\r\n     * @param element {Element} The DOM element to modify\r\n     * @param name {String} Name of the attribute [CamelCase variant]\r\n     * @param value {var} New value of the attribute\r\n     */\r\n    set(element, name, value) {\r\n      if (element.dataset) {\r\n        name = qx.lang.String.camelCase(name);\r\n        if (value === null || value == undefined) {\r\n          delete element.dataset[name];\r\n        } else {\r\n          element.dataset[name] = value;\r\n        }\r\n      } else {\r\n        if (value === null || value == undefined) {\r\n          qx.bom.element.Attribute.reset(\r\n            element,\r\n            \"data-\" + qx.lang.String.hyphenate(name)\r\n          );\r\n        } else {\r\n          qx.bom.element.Attribute.set(\r\n            element,\r\n            \"data-\" + qx.lang.String.hyphenate(name),\r\n            value\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the value of the given HTML \"data-*\" attribute\r\n     *\r\n     * @param element {Element} The DOM element to query\r\n     * @param name {String} Name of the attribute [CamelCase variant]\r\n     * @return {var} The value of the attribute\r\n     *\r\n     */\r\n    get(element, name) {\r\n      if (element.dataset) {\r\n        name = qx.lang.String.camelCase(name);\r\n        return !element.dataset[name] ? undefined : element.dataset[name];\r\n      } else {\r\n        var attrName = \"data-\" + qx.lang.String.hyphenate(name);\r\n        return element.hasAttribute(attrName)\r\n          ? qx.bom.element.Attribute.get(element, attrName)\r\n          : undefined;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a map containing all the HTML \"data-*\" attributes of the specified element\r\n     *\r\n     * @param element {Element} The DOM element to query\r\n     * @return {Map} The map containing all the \"data-*\" attributes\r\n     */\r\n    getAll(element) {\r\n      if (element.dataset) {\r\n        return element.dataset;\r\n      } else {\r\n        var res = {},\r\n          attr = element.attributes;\r\n        for (var i = 0; i < attr.length; i++) {\r\n          if (attr[i].name.match(RegExp(\"^data-(.*)\"))) {\r\n            var key = RegExp.$1;\r\n            res[qx.lang.String.camelCase(key)] = element.getAttribute(\r\n              attr[i].name\r\n            );\r\n          }\r\n        }\r\n        return res;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if any element in the collection has a \"data-*\" attribute\r\n     * @param element {Element} The DOM Element to check the presence of data-* attributes on.\r\n     * @return {Boolean} True if any element in the collection has a \"data-*\" attribute\r\n     */\r\n    hasData(element) {\r\n      return Object.keys(qxWeb(element).getAllData()).length > 0;\r\n    },\r\n\r\n    /**\r\n     * Remove an HTML \"data-*\" attribute from the given DOM element\r\n     *\r\n     * @param element {Element} The DOM element to modify\r\n     * @param name {String} Name of the attribute\r\n     */\r\n    remove(element, name) {\r\n      this.set(element, name, undefined);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,wBAAwB,EAAE;IAC5C;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACC,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAE;QACxB,IAAIF,OAAO,CAACG,OAAO,EAAE;UACnBF,IAAI,GAAGR,EAAE,CAACW,IAAI,CAACC,MAAM,CAACC,SAAS,CAACL,IAAI,CAAC;UACrC,IAAIC,KAAK,KAAK,IAAI,IAAIA,KAAK,IAAIK,SAAS,EAAE;YACxC,OAAOP,OAAO,CAACG,OAAO,CAACF,IAAI,CAAC;UAC9B,CAAC,MAAM;YACLD,OAAO,CAACG,OAAO,CAACF,IAAI,CAAC,GAAGC,KAAK;UAC/B;QACF,CAAC,MAAM;UACL,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,IAAIK,SAAS,EAAE;YACxCd,EAAE,CAACe,GAAG,CAACR,OAAO,CAACS,SAAS,CAACC,KAAK,CAC5BV,OAAO,EACP,OAAO,GAAGP,EAAE,CAACW,IAAI,CAACC,MAAM,CAACM,SAAS,CAACV,IAAI,CACzC,CAAC;UACH,CAAC,MAAM;YACLR,EAAE,CAACe,GAAG,CAACR,OAAO,CAACS,SAAS,CAACV,GAAG,CAC1BC,OAAO,EACP,OAAO,GAAGP,EAAE,CAACW,IAAI,CAACC,MAAM,CAACM,SAAS,CAACV,IAAI,CAAC,EACxCC,KACF,CAAC;UACH;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIU,GAAG,WAAAA,IAACZ,OAAO,EAAEC,IAAI,EAAE;QACjB,IAAID,OAAO,CAACG,OAAO,EAAE;UACnBF,IAAI,GAAGR,EAAE,CAACW,IAAI,CAACC,MAAM,CAACC,SAAS,CAACL,IAAI,CAAC;UACrC,OAAO,CAACD,OAAO,CAACG,OAAO,CAACF,IAAI,CAAC,GAAGM,SAAS,GAAGP,OAAO,CAACG,OAAO,CAACF,IAAI,CAAC;QACnE,CAAC,MAAM;UACL,IAAIY,QAAQ,GAAG,OAAO,GAAGpB,EAAE,CAACW,IAAI,CAACC,MAAM,CAACM,SAAS,CAACV,IAAI,CAAC;UACvD,OAAOD,OAAO,CAACc,YAAY,CAACD,QAAQ,CAAC,GACjCpB,EAAE,CAACe,GAAG,CAACR,OAAO,CAACS,SAAS,CAACG,GAAG,CAACZ,OAAO,EAAEa,QAAQ,CAAC,GAC/CN,SAAS;QACf;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIQ,MAAM,WAAAA,OAACf,OAAO,EAAE;QACd,IAAIA,OAAO,CAACG,OAAO,EAAE;UACnB,OAAOH,OAAO,CAACG,OAAO;QACxB,CAAC,MAAM;UACL,IAAIa,GAAG,GAAG,CAAC,CAAC;YACVC,IAAI,GAAGjB,OAAO,CAACkB,UAAU;UAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;YACpC,IAAIF,IAAI,CAACE,CAAC,CAAC,CAAClB,IAAI,CAACoB,KAAK,CAACC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE;cAC5C,IAAIC,GAAG,GAAGD,MAAM,CAACE,EAAE;cACnBR,GAAG,CAACvB,EAAE,CAACW,IAAI,CAACC,MAAM,CAACC,SAAS,CAACiB,GAAG,CAAC,CAAC,GAAGvB,OAAO,CAACyB,YAAY,CACvDR,IAAI,CAACE,CAAC,CAAC,CAAClB,IACV,CAAC;YACH;UACF;UACA,OAAOe,GAAG;QACZ;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIU,OAAO,WAAAA,QAAC1B,OAAO,EAAE;QACf,OAAO2B,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC7B,OAAO,CAAC,CAAC8B,UAAU,CAAC,CAAC,CAAC,CAACV,MAAM,GAAG,CAAC;MAC5D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIW,MAAM,WAAAA,OAAC/B,OAAO,EAAEC,IAAI,EAAE;QACpB,IAAI,CAACF,GAAG,CAACC,OAAO,EAAEC,IAAI,EAAEM,SAAS,CAAC;MACpC;IACF;EACF,CAAC,CAAC;EAhIFd,EAAE,CAACe,GAAG,CAACR,OAAO,CAACgC,OAAO,CAACpC,aAAa,GAAGA,aAAa;AAAC"
}