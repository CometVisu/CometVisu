{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "animate",
    "el",
    "desc",
    "duration",
    "onlyCssKeys",
    "bom",
    "element",
    "Animation",
    "__hasOnlyCssKeys",
    "keyFrames",
    "core",
    "Environment",
    "get",
    "AnimationCss",
    "AnimationJs",
    "animateReverse",
    "__P_129_0",
    "keys",
    "nr",
    "frame",
    "key",
    "indexOf",
    "push",
    "transformKeys",
    "i",
    "length",
    "lang",
    "String",
    "camelCase",
    "style",
    "Style",
    "getPropertyName"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Animation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Wrapper for {@link qx.bom.element.AnimationCss} and\n * {@link qx.bom.element.AnimationJs}. It offers the public API and decides using\n * feature checks either to use CSS animations or JS animations.\n *\n * If you use this class, the restrictions of the JavaScript animations apply.\n * This means that you can not use transforms and custom bezier timing functions.\n */\nqx.Bootstrap.define(\"qx.bom.element.Animation\", {\n  statics: {\n    /**\n     * This function takes care of the feature check and starts the animation.\n     * It takes a DOM element to apply the animation to, and a description.\n     * The description should be a map, which could look like this:\n     *\n     * <pre class=\"javascript\">\n     * {\n     *   \"duration\": 1000,\n     *   \"keep\": 100,\n     *   \"keyFrames\": {\n     *     0 : {\"opacity\": 1, \"scale\": 1},\n     *     100 : {\"opacity\": 0, \"scale\": 0}\n     *   },\n     *   \"origin\": \"50% 50%\",\n     *   \"repeat\": 1,\n     *   \"timing\": \"ease-out\",\n     *   \"alternate\": false,\n     *   \"delay\" : 2000\n     * }\n     * </pre>\n     *\n     * *duration* is the time in milliseconds one animation cycle should take.\n     *\n     * *keep* is the key frame to apply at the end of the animation. (optional)\n     *   Keep in mind that the keep key is reversed in case you use an reverse\n     *   animation or set the alternate key and a even repeat count.\n     *\n     * *keyFrames* is a map of separate frames. Each frame is defined by a\n     *   number which is the percentage value of time in the animation. The value\n     *   is a map itself which holds css properties or transforms\n     *   {@link qx.bom.element.Transform} (Transforms only for CSS Animations).\n     *\n     * *origin* maps to the transform origin {@link qx.bom.element.Transform#setOrigin}\n     *   (Only for CSS animations).\n     *\n     * *repeat* is the amount of time the animation should be run in\n     *   sequence. You can also use \"infinite\".\n     *\n     * *timing* takes one of the predefined value:\n     *   <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n     *   | <code>ease-out</code> | <code>ease-in-out</code> |\n     *   <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>\n     *   (cubic-bezier only available for CSS animations)\n     *\n     * *alternate* defines if every other animation should be run in reverse order.\n     *\n     * *delay* is the time in milliseconds the animation should wait before start.\n     *\n     * @param el {Element} The element to animate.\n     * @param desc {Map} The animations description.\n     * @param duration {Integer?} The duration in milliseconds of the animation\n     *   which will override the duration given in the description.\n     * @return {qx.bom.element.AnimationHandle} AnimationHandle instance to control\n     *   the animation.\n     */\n    animate(el, desc, duration) {\n      var onlyCssKeys = qx.bom.element.Animation.__hasOnlyCssKeys(\n        el,\n        desc.keyFrames\n      );\n\n      if (qx.core.Environment.get(\"css.animation\") && onlyCssKeys) {\n        return qx.bom.element.AnimationCss.animate(el, desc, duration);\n      } else {\n        return qx.bom.element.AnimationJs.animate(el, desc, duration);\n      }\n    },\n\n    /**\n     * Starts an animation in reversed order. For further details, take a look at\n     * the {@link #animate} method.\n     * @param el {Element} The element to animate.\n     * @param desc {Map} The animations description.\n     * @param duration {Integer?} The duration in milliseconds of the animation\n     *   which will override the duration given in the description.\n     * @return {qx.bom.element.AnimationHandle} AnimationHandle instance to control\n     *   the animation.\n     */\n    animateReverse(el, desc, duration) {\n      var onlyCssKeys = qx.bom.element.Animation.__hasOnlyCssKeys(\n        el,\n        desc.keyFrames\n      );\n\n      if (qx.core.Environment.get(\"css.animation\") && onlyCssKeys) {\n        return qx.bom.element.AnimationCss.animateReverse(el, desc, duration);\n      } else {\n        return qx.bom.element.AnimationJs.animateReverse(el, desc, duration);\n      }\n    },\n\n    /**\n     * Detection helper which detects if only CSS keys are in\n     * the animations key frames.\n     * @param el {Element} The element to check for the styles.\n     * @param keyFrames {Map} The keyFrames of the animation.\n     * @return {Boolean} <code>true</code> if only css properties are included.\n     */\n    __hasOnlyCssKeys(el, keyFrames) {\n      var keys = [];\n      for (var nr in keyFrames) {\n        var frame = keyFrames[nr];\n        for (var key in frame) {\n          if (keys.indexOf(key) == -1) {\n            keys.push(key);\n          }\n        }\n      }\n\n      var transformKeys = [\"scale\", \"rotate\", \"skew\", \"translate\"];\n      for (var i = 0; i < keys.length; i++) {\n        var key = qx.lang.String.camelCase(keys[i]);\n        if (!(key in el.style)) {\n          // check for transform keys\n          if (transformKeys.indexOf(keys[i]) != -1) {\n            continue;\n          }\n          // check for prefixed keys\n          if (qx.bom.Style.getPropertyName(key)) {\n            continue;\n          }\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,0BAA0B,EAAE;IAC9CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,EAAE;QAC1B,IAAIC,WAAW,GAAGV,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,SAAS,CAACC,SAAgB,CACzDP,EAAE,EACFC,IAAI,CAACO,SAAS,CACf;QAED,IAAIf,EAAE,CAACgB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,eAAe,CAAC,IAAIR,WAAW,EAAE;UAC3D,OAAOV,EAAE,CAACW,GAAG,CAACC,OAAO,CAACO,YAAY,CAACb,OAAO,CAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,CAAC;QAChE,CAAC,MAAM;UACL,OAAOT,EAAE,CAACW,GAAG,CAACC,OAAO,CAACQ,WAAW,CAACd,OAAO,CAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,CAAC;QAC/D;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIY,cAAc,WAAAA,eAACd,EAAE,EAAEC,IAAI,EAAEC,QAAQ,EAAE;QACjC,IAAIC,WAAW,GAAGV,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,SAAS,CAACC,SAAgB,CACzDP,EAAE,EACFC,IAAI,CAACO,SAAS,CACf;QAED,IAAIf,EAAE,CAACgB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,eAAe,CAAC,IAAIR,WAAW,EAAE;UAC3D,OAAOV,EAAE,CAACW,GAAG,CAACC,OAAO,CAACO,YAAY,CAACE,cAAc,CAACd,EAAE,EAAEC,IAAI,EAAEC,QAAQ,CAAC;QACvE,CAAC,MAAM;UACL,OAAOT,EAAE,CAACW,GAAG,CAACC,OAAO,CAACQ,WAAW,CAACC,cAAc,CAACd,EAAE,EAAEC,IAAI,EAAEC,QAAQ,CAAC;QACtE;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIK,SAAgB,WAAAQ,UAACf,EAAE,EAAEQ,SAAS,EAAE;QAC9B,IAAIQ,IAAI,GAAG,EAAE;QACb,KAAK,IAAIC,EAAE,IAAIT,SAAS,EAAE;UACxB,IAAIU,KAAK,GAAGV,SAAS,CAACS,EAAE,CAAC;UACzB,KAAK,IAAIE,GAAG,IAAID,KAAK,EAAE;YACrB,IAAIF,IAAI,CAACI,OAAO,CAACD,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;cAC3BH,IAAI,CAACK,IAAI,CAACF,GAAG,CAAC;YAChB;UACF;QACF;QAEA,IAAIG,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC;QAC5D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,IAAI,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;UACpC,IAAIJ,GAAG,GAAG1B,EAAE,CAACgC,IAAI,CAACC,MAAM,CAACC,SAAS,CAACX,IAAI,CAACO,CAAC,CAAC,CAAC;UAC3C,IAAI,EAAEJ,GAAG,IAAInB,EAAE,CAAC4B,KAAK,CAAC,EAAE;YACtB;YACA,IAAIN,aAAa,CAACF,OAAO,CAACJ,IAAI,CAACO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;cACxC;YACF;YACA;YACA,IAAI9B,EAAE,CAACW,GAAG,CAACyB,KAAK,CAACC,eAAe,CAACX,GAAG,CAAC,EAAE;cACrC;YACF;YACA,OAAO,KAAK;UACd;QACF;QACA,OAAO,IAAI;MACb;IACF;EACF,CAAC,CAAC;EA3JF1B,EAAE,CAACW,GAAG,CAACC,OAAO,CAACC,SAAS,CAACV,aAAa,GAAGA,aAAa;AAAC"
}