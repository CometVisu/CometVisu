{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "addListener",
    "element",
    "type",
    "listener",
    "self",
    "capture",
    "event",
    "Registration",
    "removeListener",
    "removeListenerById",
    "target",
    "id",
    "hasListener",
    "focus",
    "getManager",
    "getHandler",
    "handler",
    "Focus",
    "blur",
    "activate",
    "deactivate",
    "containerCapture",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "activateCapture",
    "releaseCapture",
    "clone",
    "events",
    "core",
    "Environment",
    "get",
    "xml",
    "Document",
    "isXmlDocument",
    "mgr",
    "all",
    "dom",
    "Hierarchy",
    "getDescendants",
    "push",
    "i",
    "l",
    "length",
    "toggleAttachedEvents",
    "cloneNode",
    "cloneAll",
    "eventList",
    "cloneElem",
    "origElem",
    "eventEntry",
    "il",
    "serializeListeners",
    "j",
    "jl",
    "bom",
    "Element"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This class is mainly a convenience wrapper for DOM elements to\n * qooxdoo's event system.\n *\n * @require(qx.event.dispatch.Direct)\n * @require(qx.event.dispatch.DomBubbling)\n * @require(qx.event.handler.Keyboard)\n * @require(qx.event.handler.Mouse)\n * @require(qx.event.handler.Element)\n * @require(qx.event.handler.Appear)\n * @require(qx.event.handler.Touch)\n * @require(qx.event.handler.Offline)\n * @require(qx.event.handler.Input)\n * @require(qx.event.handler.Pointer)\n * @require(qx.event.handler.Gesture)\n * @require(qx.event.handler.Video)\n */\nqx.Class.define(\"qx.bom.Element\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add an event listener to a DOM element. The event listener is passed an\n     * instance of {@link Event} containing all relevant information\n     * about the event as parameter.\n     *\n     * @param element {Element} DOM element to attach the event on.\n     * @param type {String} Name of the event e.g. \"click\", \"keydown\", ...\n     * @param listener {Function} Event listener function\n     * @param self {Object ? null} Reference to the 'this' variable inside\n     *         the event listener. When not given, the corresponding dispatcher\n     *         usually falls back to a default, which is the target\n     *         by convention. Note this is not a strict requirement, i.e.\n     *         custom dispatchers can follow a different strategy.\n     * @param capture {Boolean} Whether to attach the event to the\n     *       capturing phase or the bubbling phase of the event. The default is\n     *       to attach the event handler to the bubbling phase.\n     * @return {String} An opaque id, which can be used to remove the event listener\n     *       using the {@link #removeListenerById} method.\n     */\n    addListener(element, type, listener, self, capture) {\n      return qx.event.Registration.addListener(\n        element,\n        type,\n        listener,\n        self,\n        capture\n      );\n    },\n\n    /**\n     * Remove an event listener from a from DOM node.\n     *\n     * Note: All registered event listeners will automatically be removed from\n     *   the DOM at page unload so it is not necessary to detach events yourself.\n     *\n     * @param element {Element} DOM Element\n     * @param type {String} Name of the event\n     * @param listener {Function} The pointer to the event listener\n     * @param self {Object ? null} Reference to the 'this' variable inside\n     *         the event listener.\n     * @param capture {Boolean} Whether to remove the event listener of\n     *       the bubbling or of the capturing phase.\n     * @return {Boolean} <code>true</code> if the listener was removed\n     */\n    removeListener(element, type, listener, self, capture) {\n      return qx.event.Registration.removeListener(\n        element,\n        type,\n        listener,\n        self,\n        capture\n      );\n    },\n\n    /**\n     * Removes an event listener from an event target by an id returned by\n     * {@link #addListener}\n     *\n     * @param target {Object} The event target\n     * @param id {String} The id returned by {@link #addListener}\n     * @return {Boolean} <code>true</code> if the listener was removed\n     */\n    removeListenerById(target, id) {\n      return qx.event.Registration.removeListenerById(target, id);\n    },\n\n    /**\n     * Check whether there are one or more listeners for an event type\n     * registered at the element.\n     *\n     * @param element {Element} DOM element\n     * @param type {String} The event type\n     * @param capture {Boolean ? false} Whether to check for listeners of\n     *       the bubbling or of the capturing phase.\n     * @return {Boolean} Whether the element has event listeners of the given type.\n     */\n    hasListener(element, type, capture) {\n      return qx.event.Registration.hasListener(element, type, capture);\n    },\n\n    /**\n     * Focuses the given element. The element needs to have a positive <code>tabIndex</code> value.\n     *\n     * @param element {Element} DOM element to focus\n     */\n    focus(element) {\n      qx.event.Registration.getManager(element)\n        .getHandler(qx.event.handler.Focus)\n        .focus(element);\n    },\n\n    /**\n     * Blurs the given element\n     *\n     * @param element {Element} DOM element to blur\n     */\n    blur(element) {\n      qx.event.Registration.getManager(element)\n        .getHandler(qx.event.handler.Focus)\n        .blur(element);\n    },\n\n    /**\n     * Activates the given element. The active element receives all key board events.\n     *\n     * @param element {Element} DOM element to focus\n     */\n    activate(element) {\n      qx.event.Registration.getManager(element)\n        .getHandler(qx.event.handler.Focus)\n        .activate(element);\n    },\n\n    /**\n     * Deactivates the given element. The active element receives all key board events.\n     *\n     * @param element {Element} DOM element to focus\n     */\n    deactivate(element) {\n      qx.event.Registration.getManager(element)\n        .getHandler(qx.event.handler.Focus)\n        .deactivate(element);\n    },\n\n    /**\n     * Captures the given element\n     *\n     * @param element {Element} DOM element to capture\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(element, containerCapture) {\n      qx.event.Registration.getManager(element)\n        .getDispatcher(qx.event.dispatch.MouseCapture)\n        .activateCapture(element, containerCapture);\n    },\n\n    /**\n     * Releases the given element (from a previous {@link #capture} call)\n     *\n     * @param element {Element} DOM element to release\n     */\n    releaseCapture(element) {\n      qx.event.Registration.getManager(element)\n        .getDispatcher(qx.event.dispatch.MouseCapture)\n        .releaseCapture(element);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Clone given DOM element. May optionally clone all attached\n     * events (recursively) as well.\n     *\n     * @param element {Element} Element to clone\n     * @param events {Boolean?false} Whether events should be copied as well\n     * @return {Element} The copied element\n     */\n    clone(element, events) {\n      var clone;\n\n      if (\n        events ||\n        (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          !qx.xml.Document.isXmlDocument(element))\n      ) {\n        var mgr = qx.event.Registration.getManager(element);\n        var all = qx.dom.Hierarchy.getDescendants(element);\n        all.push(element);\n      }\n\n      // IE copies events bound via attachEvent() when\n      // using cloneNode(). Calling detachEvent() on the\n      // clone will also remove the events from the original.\n      //\n      // In order to get around this, we detach all locally\n      // attached events first, do the cloning and recover\n      // them afterwards again.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        for (var i = 0, l = all.length; i < l; i++) {\n          mgr.toggleAttachedEvents(all[i], false);\n        }\n      }\n\n      // Do the native cloning\n      var clone = element.cloneNode(true);\n\n      // Recover events on original elements\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        for (var i = 0, l = all.length; i < l; i++) {\n          mgr.toggleAttachedEvents(all[i], true);\n        }\n      }\n\n      // Attach events from original element\n      if (events === true) {\n        // Produce recursive list of elements in the clone\n        var cloneAll = qx.dom.Hierarchy.getDescendants(clone);\n        cloneAll.push(clone);\n\n        // Process all elements and copy over listeners\n        var eventList, cloneElem, origElem, eventEntry;\n        for (var i = 0, il = all.length; i < il; i++) {\n          origElem = all[i];\n          eventList = mgr.serializeListeners(origElem);\n\n          if (eventList.length > 0) {\n            cloneElem = cloneAll[i];\n\n            for (var j = 0, jl = eventList.length; j < jl; j++) {\n              eventEntry = eventList[j];\n              mgr.addListener(\n                cloneElem,\n                eventEntry.type,\n                eventEntry.handler,\n                eventEntry.self,\n                eventEntry.capture\n              );\n            }\n          }\n        }\n      }\n\n      // Finally return the clone\n      return clone;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}