{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "DEFAULT_ATTRIBUTES",
    "frameBorder",
    "frameSpacing",
    "marginWidth",
    "marginHeight",
    "hspace",
    "vspace",
    "border",
    "allowTransparency",
    "create",
    "attributes",
    "win",
    "lang",
    "Object",
    "clone",
    "initValues",
    "bom",
    "Iframe",
    "key",
    "elem",
    "dom",
    "Element",
    "onload",
    "event",
    "handler",
    "onevent",
    "getWindow",
    "iframe",
    "contentWindow",
    "ex",
    "getDocument",
    "contentDocument",
    "document",
    "getBody",
    "doc",
    "getElementsByTagName",
    "setSource",
    "source",
    "Hierarchy",
    "isRendered",
    "core",
    "Environment",
    "get",
    "stop",
    "location",
    "replace",
    "src",
    "__rememberUrl",
    "log",
    "Logger",
    "warn",
    "queryCurrentUrl",
    "href",
    "__P_105_0",
    "callback",
    "Event",
    "removeNativeListener",
    "$$url",
    "addNativeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Iframe.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n     * Christian Hagendorn (Chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Cross browser abstractions to work with iframes.\r\n *\r\n * @require(qx.event.handler.Iframe)\r\n */\r\nqx.Class.define(\"qx.bom.Iframe\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * @type {Map} Default attributes for creation {@link #create}.\r\n     */\r\n    DEFAULT_ATTRIBUTES: {\r\n      frameBorder: 0,\r\n      frameSpacing: 0,\r\n      marginWidth: 0,\r\n      marginHeight: 0,\r\n      hspace: 0,\r\n      vspace: 0,\r\n      border: 0,\r\n      allowTransparency: true\r\n    },\r\n\r\n    /**\r\n     * Creates an DOM element.\r\n     *\r\n     * Attributes may be given directly with this call. This is critical\r\n     * for some attributes e.g. name, type, ... in many clients.\r\n     *\r\n     * @param attributes {Map?null} Map of attributes to apply\r\n     * @param win {Window?null} Window to create the element for\r\n     * @return {Element} The created iframe node\r\n     */\r\n    create(attributes, win) {\r\n      // Work on a copy to not modify given attributes map\r\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\r\n      var initValues = qx.bom.Iframe.DEFAULT_ATTRIBUTES;\r\n\r\n      for (var key in initValues) {\r\n        if (!(key in attributes)) {\r\n          attributes[key] = initValues[key];\r\n        }\r\n      }\r\n\r\n      var elem = qx.dom.Element.create(\"iframe\", attributes, win);\r\n      if (!(\"onload\" in attributes)) {\r\n        elem.onload = function () {\r\n          qx.event.handler.Iframe.onevent(elem);\r\n        };\r\n      }\r\n      return elem;\r\n    },\r\n\r\n    /**\r\n     * Get the DOM window object of an iframe.\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     * @return {Window?null} The DOM window object of the iframe or null.\r\n     * @signature function(iframe)\r\n     */\r\n    getWindow(iframe) {\r\n      try {\r\n        return iframe.contentWindow;\r\n      } catch (ex) {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the DOM document object of an iframe.\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     * @return {Document} The DOM document object of the iframe.\r\n     */\r\n    getDocument(iframe) {\r\n      if (\"contentDocument\" in iframe) {\r\n        try {\r\n          return iframe.contentDocument;\r\n        } catch (ex) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      try {\r\n        var win = this.getWindow(iframe);\r\n        return win ? win.document : null;\r\n      } catch (ex) {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the HTML body element of the iframe.\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\r\n     */\r\n    getBody(iframe) {\r\n      try {\r\n        var doc = this.getDocument(iframe);\r\n        return doc ? doc.getElementsByTagName(\"body\")[0] : null;\r\n      } catch (ex) {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets iframe's source attribute to given value\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     * @param source {String} URL to be set.\r\n     * @signature function(iframe, source)\r\n     */\r\n    setSource(iframe, source) {\r\n      try {\r\n        // the guru says ...\r\n        // it is better to use 'replace' than 'src'-attribute, since 'replace'\r\n        // does not interfere with the history (which is taken care of by the\r\n        // history manager), but there has to be a loaded document\r\n        if (this.getWindow(iframe) && qx.dom.Hierarchy.isRendered(iframe)) {\r\n          /*\r\n            Some gecko users might have an exception here:\r\n            Exception... \"Component returned failure code: 0x805e000a\r\n            [nsIDOMLocation.replace]\"  nsresult: \"0x805e000a (<unknown>)\"\r\n          */\r\n          try {\r\n            // Webkit on Mac can't set the source when the iframe is still\r\n            // loading its current page\r\n            if (\r\n              qx.core.Environment.get(\"engine.name\") == \"webkit\" &&\r\n              qx.core.Environment.get(\"os.name\") == \"osx\"\r\n            ) {\r\n              var contentWindow = this.getWindow(iframe);\r\n              if (contentWindow) {\r\n                contentWindow.stop();\r\n              }\r\n            }\r\n            this.getWindow(iframe).location.replace(source);\r\n          } catch (ex) {\r\n            iframe.src = source;\r\n          }\r\n        } else {\r\n          iframe.src = source;\r\n        }\r\n\r\n        // This is a programmer provided source. Remember URL for this source\r\n        // for later comparison with current URL. The current URL can diverge\r\n        // if the end-user navigates in the Iframe.\r\n        this.__rememberUrl(iframe);\r\n      } catch (ex) {\r\n        qx.log.Logger.warn(\"Iframe source could not be set!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the current (served) URL inside the iframe\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     * @return {String} Returns the location href or null (if a query is not possible/allowed)\r\n     */\r\n    queryCurrentUrl(iframe) {\r\n      var doc = this.getDocument(iframe);\r\n\r\n      try {\r\n        if (doc && doc.location) {\r\n          return doc.location.href;\r\n        }\r\n      } catch (ex) {}\r\n\r\n      return \"\";\r\n    },\r\n\r\n    /**\r\n     * Remember actual URL of iframe.\r\n     *\r\n     * @param iframe {Element} DOM element of the iframe.\r\n     */\r\n    __rememberUrl(iframe) {\r\n      // URL can only be detected after load. Retrieve and store URL once.\r\n      var callback = function () {\r\n        qx.bom.Event.removeNativeListener(iframe, \"load\", callback);\r\n        iframe.$$url = qx.bom.Iframe.queryCurrentUrl(iframe);\r\n      };\r\n\r\n      qx.bom.Event.addNativeListener(iframe, \"load\", callback);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,eAAe,EAAE;IAC/B;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,kBAAkB,EAAE;QAClBC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,CAAC;QACTC,MAAM,EAAE,CAAC;QACTC,MAAM,EAAE,CAAC;QACTC,iBAAiB,EAAE;MACrB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,UAAU,EAAEC,GAAG,EAAE;QACtB;QACA,IAAID,UAAU,GAAGA,UAAU,GAAGjB,EAAE,CAACmB,IAAI,CAACC,MAAM,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,CAAC,CAAC;QACnE,IAAIK,UAAU,GAAGtB,EAAE,CAACuB,GAAG,CAACC,MAAM,CAACjB,kBAAkB;QAEjD,KAAK,IAAIkB,GAAG,IAAIH,UAAU,EAAE;UAC1B,IAAI,EAAEG,GAAG,IAAIR,UAAU,CAAC,EAAE;YACxBA,UAAU,CAACQ,GAAG,CAAC,GAAGH,UAAU,CAACG,GAAG,CAAC;UACnC;QACF;QAEA,IAAIC,IAAI,GAAG1B,EAAE,CAAC2B,GAAG,CAACC,OAAO,CAACZ,MAAM,CAAC,QAAQ,EAAEC,UAAU,EAAEC,GAAG,CAAC;QAC3D,IAAI,EAAE,QAAQ,IAAID,UAAU,CAAC,EAAE;UAC7BS,IAAI,CAACG,MAAM,GAAG,YAAY;YACxB7B,EAAE,CAAC8B,KAAK,CAACC,OAAO,CAACP,MAAM,CAACQ,OAAO,CAACN,IAAI,CAAC;UACvC,CAAC;QACH;QACA,OAAOA,IAAI;MACb,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIO,SAAS,WAAAA,UAACC,MAAM,EAAE;QAChB,IAAI;UACF,OAAOA,MAAM,CAACC,aAAa;QAC7B,CAAC,CAAC,OAAOC,EAAE,EAAE;UACX,OAAO,IAAI;QACb;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAACH,MAAM,EAAE;QAClB,IAAI,iBAAiB,IAAIA,MAAM,EAAE;UAC/B,IAAI;YACF,OAAOA,MAAM,CAACI,eAAe;UAC/B,CAAC,CAAC,OAAOF,EAAE,EAAE;YACX,OAAO,IAAI;UACb;QACF;QAEA,IAAI;UACF,IAAIlB,GAAG,GAAG,IAAI,CAACe,SAAS,CAACC,MAAM,CAAC;UAChC,OAAOhB,GAAG,GAAGA,GAAG,CAACqB,QAAQ,GAAG,IAAI;QAClC,CAAC,CAAC,OAAOH,EAAE,EAAE;UACX,OAAO,IAAI;QACb;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACII,OAAO,WAAAA,QAACN,MAAM,EAAE;QACd,IAAI;UACF,IAAIO,GAAG,GAAG,IAAI,CAACJ,WAAW,CAACH,MAAM,CAAC;UAClC,OAAOO,GAAG,GAAGA,GAAG,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;QACzD,CAAC,CAAC,OAAON,EAAE,EAAE;UACX,OAAO,IAAI;QACb;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIO,SAAS,WAAAA,UAACT,MAAM,EAAEU,MAAM,EAAE;QACxB,IAAI;UACF;UACA;UACA;UACA;UACA,IAAI,IAAI,CAACX,SAAS,CAACC,MAAM,CAAC,IAAIlC,EAAE,CAAC2B,GAAG,CAACkB,SAAS,CAACC,UAAU,CAACZ,MAAM,CAAC,EAAE;YACjE;AACV;AACA;AACA;AACA;YACU,IAAI;cACF;cACA;cACA,IACElC,EAAE,CAAC+C,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,IAClDjD,EAAE,CAAC+C,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,EAC3C;gBACA,IAAId,aAAa,GAAG,IAAI,CAACF,SAAS,CAACC,MAAM,CAAC;gBAC1C,IAAIC,aAAa,EAAE;kBACjBA,aAAa,CAACe,IAAI,CAAC,CAAC;gBACtB;cACF;cACA,IAAI,CAACjB,SAAS,CAACC,MAAM,CAAC,CAACiB,QAAQ,CAACC,OAAO,CAACR,MAAM,CAAC;YACjD,CAAC,CAAC,OAAOR,EAAE,EAAE;cACXF,MAAM,CAACmB,GAAG,GAAGT,MAAM;YACrB;UACF,CAAC,MAAM;YACLV,MAAM,CAACmB,GAAG,GAAGT,MAAM;UACrB;;UAEA;UACA;UACA;UACA,IAAI,CAACU,SAAa,CAACpB,MAAM,CAAC;QAC5B,CAAC,CAAC,OAAOE,EAAE,EAAE;UACXpC,EAAE,CAACuD,GAAG,CAACC,MAAM,CAACC,IAAI,CAAC,iCAAiC,CAAC;QACvD;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,eAAe,WAAAA,gBAACxB,MAAM,EAAE;QACtB,IAAIO,GAAG,GAAG,IAAI,CAACJ,WAAW,CAACH,MAAM,CAAC;QAElC,IAAI;UACF,IAAIO,GAAG,IAAIA,GAAG,CAACU,QAAQ,EAAE;YACvB,OAAOV,GAAG,CAACU,QAAQ,CAACQ,IAAI;UAC1B;QACF,CAAC,CAAC,OAAOvB,EAAE,EAAE,CAAC;QAEd,OAAO,EAAE;MACX,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIkB,SAAa,WAAAM,UAAC1B,MAAM,EAAE;QACpB;QACA,IAAI2B,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAe;UACzB7D,EAAE,CAACuB,GAAG,CAACuC,KAAK,CAACC,oBAAoB,CAAC7B,MAAM,EAAE,MAAM,EAAE2B,QAAQ,CAAC;UAC3D3B,MAAM,CAAC8B,KAAK,GAAGhE,EAAE,CAACuB,GAAG,CAACC,MAAM,CAACkC,eAAe,CAACxB,MAAM,CAAC;QACtD,CAAC;QAEDlC,EAAE,CAACuB,GAAG,CAACuC,KAAK,CAACG,iBAAiB,CAAC/B,MAAM,EAAE,MAAM,EAAE2B,QAAQ,CAAC;MAC1D;IACF;EACF,CAAC,CAAC;EApNF7D,EAAE,CAACuB,GAAG,CAACC,MAAM,CAACrB,aAAa,GAAGA,aAAa;AAAC"
}