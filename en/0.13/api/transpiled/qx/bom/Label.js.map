{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__styles",
    "fontFamily",
    "fontSize",
    "fontWeight",
    "fontStyle",
    "lineHeight",
    "wordBreak",
    "letterSpacing",
    "__prepareText",
    "el",
    "__createMeasureElement",
    "document",
    "body",
    "insertBefore",
    "firstChild",
    "_textElement",
    "__prepareHtml",
    "_htmlElement",
    "html",
    "dom",
    "Element",
    "create",
    "style",
    "width",
    "height",
    "left",
    "top",
    "visibility",
    "position",
    "overflow",
    "display",
    "whiteSpace",
    "core",
    "Environment",
    "get",
    "inner",
    "createElementNS",
    "padding",
    "margin",
    "key",
    "appendChild",
    "__getStyles",
    "styles",
    "content",
    "win",
    "window",
    "createElement",
    "useHtml",
    "xulel",
    "cursor",
    "color",
    "maxWidth",
    "setAttribute",
    "bom",
    "element",
    "Style",
    "setStyles",
    "setValue",
    "__sanitizer",
    "setSanitizer",
    "func",
    "Label",
    "value",
    "innerHTML",
    "Attribute",
    "set",
    "getValue",
    "getAttribute",
    "getHtmlSize",
    "undefined",
    "__measureSize",
    "getTextSize",
    "text",
    "keys",
    "size",
    "Dimension",
    "getSize"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Label.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with labels.\n */\nqx.Bootstrap.define(\"qx.bom.Label\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Map} Contains all supported styles */\n    __styles: {\n      fontFamily: 1,\n      fontSize: 1,\n      fontWeight: 1,\n      fontStyle: 1,\n      lineHeight: 1,\n      wordBreak: 1,\n      letterSpacing: 1\n    },\n\n    /**\n     * Generates the helper DOM element for text measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareText() {\n      var el = this.__createMeasureElement(false);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return (this._textElement = el);\n    },\n\n    /**\n     * Generates the helper DOM element for HTML measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareHtml() {\n      var el = this.__createMeasureElement(true);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return (this._htmlElement = el);\n    },\n\n    /**\n     * Creates the measure element\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Element} The measure element\n     */\n    __createMeasureElement(html) {\n      var el = qx.dom.Element.create(\"div\");\n      var style = el.style;\n\n      style.width = style.height = \"auto\";\n      style.left = style.top = \"-1000px\";\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.overflow = \"visible\";\n      style.display = \"block\";\n\n      if (html) {\n        style.whiteSpace = \"normal\";\n      } else {\n        style.whiteSpace = \"nowrap\";\n\n        if (\n          !qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\")\n        ) {\n          var inner = document.createElementNS(\n            \"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\",\n            \"label\"\n          );\n\n          // Force style inheritance for font styles to omit usage of\n          // CSS \"label\" selector, See bug #1349 for details.\n          var style = inner.style;\n          style.padding = \"0\";\n          style.margin = \"0\";\n          style.width = \"auto\";\n\n          for (var key in this.__styles) {\n            style[key] = \"inherit\";\n          }\n\n          el.appendChild(inner);\n        }\n      }\n\n      return el;\n    },\n\n    /**\n     * Returns a map of all styles which should be applied as\n     * a basic set.\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Map} Initial styles which should be applied to a label element.\n     */\n    __getStyles(html) {\n      var styles = {};\n\n      styles.overflow = \"hidden\";\n      if (html) {\n        styles.whiteSpace = \"normal\";\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        styles.display = \"block\";\n      } else {\n        styles.whiteSpace = \"nowrap\";\n        styles[qx.core.Environment.get(\"css.textoverflow\")] = \"ellipsis\";\n      }\n\n      return styles;\n    },\n\n    /**\n     * Creates a label.\n     *\n     * The default mode is 'text' which means that the overlapping text is cut off\n     * using ellipsis automatically. Text wrapping is disabled in this mode\n     * as well. Spaces are normalized. Umlauts and other special symbols are only\n     * allowed in unicode mode as normal characters.\n     *\n     * In the HTML mode you can insert any HTML, but loose the capability to cut\n     * of overlapping text. Automatic text wrapping is enabled by default.\n     *\n     * It is not possible to modify the mode afterwards.\n     *\n     * @param content {String} Content of the label\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @param win {Window?null} Window to create the element for\n     * @return {Element} The created iframe node\n     */\n    create(content, html, win) {\n      if (!win) {\n        win = window;\n      }\n\n      var el = win.document.createElement(\"div\");\n\n      if (html) {\n        el.useHtml = true;\n      }\n\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        // Gecko as of Firefox 2.x and 3.0 does not support ellipsis\n        // for text overflow. We use this feature from XUL instead.\n        var xulel = win.document.createElementNS(\n          \"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\",\n          \"label\"\n        );\n\n        var style = xulel.style;\n        style.cursor = \"inherit\";\n        style.color = \"inherit\";\n        style.overflow = \"hidden\";\n        style.maxWidth = \"100%\";\n        style.padding = \"0\";\n        style.margin = \"0\";\n        style.width = \"auto\";\n\n        // Force style inheritance for font styles to omit usage of\n        // CSS \"label\" selector, See bug #1349 for details.\n        for (var key in this.__styles) {\n          xulel.style[key] = \"inherit\";\n        }\n\n        xulel.setAttribute(\"crop\", \"end\");\n\n        el.appendChild(xulel);\n      } else {\n        qx.bom.element.Style.setStyles(el, this.__getStyles(html));\n      }\n\n      if (content) {\n        this.setValue(el, content);\n      }\n\n      return el;\n    },\n\n    /** Sanitizer function */\n    __sanitizer: null,\n\n    /**\n     * Sets a function to sanitize values. It will be used by {@link #setValue}.\n     * The function to sanitize will get the <code>string</code> value and\n     * should return a sanitized / cleared <code>string</code>.\n     *\n     * @param func {Function | null} Function to sanitize / clean HTML code\n     *  from given string parameter\n     */\n    setSanitizer(func) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (func) {\n          qx.core.Assert.assertFunction(func);\n        }\n      }\n\n      qx.bom.Label.__sanitizer = func;\n    },\n\n    /**\n     * Sets the content of the element.\n     *\n     * The possibilities of the value depends on the mode\n     * defined using {@link #create}.\n     *\n     * @param element {Element} DOM element to modify.\n     * @param value {String} Content to insert.\n     */\n    setValue(element, value) {\n      value = value || \"\";\n\n      if (element.useHtml) {\n        if (\n          qx.bom.Label.__sanitizer &&\n          typeof qx.bom.Label.__sanitizer === \"function\"\n        ) {\n          value = qx.bom.Label.__sanitizer(value);\n        }\n        element.innerHTML = value;\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        element.firstChild.setAttribute(\"value\", value);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", value);\n      }\n    },\n\n    /**\n     * Returns the content of the element.\n     *\n     * @param element {Element} DOM element to query.\n     * @return {String} Content stored in the element.\n     */\n    getValue(element) {\n      if (element.useHtml) {\n        return element.innerHTML;\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        return element.firstChild.getAttribute(\"value\") || \"\";\n      } else {\n        return qx.bom.element.Attribute.get(element, \"text\");\n      }\n    },\n\n    /**\n     * Returns the preferred dimensions of the given HTML content.\n     *\n     * @param content {String} The HTML markup to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @param width {Integer} To support width for height it is possible to limit the width\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getHtmlSize(content, styles, width) {\n      var element = this._htmlElement || this.__prepareHtml();\n\n      // apply width\n      element.style.width = width != undefined ? width + \"px\" : \"auto\";\n      // insert content\n      element.innerHTML = content;\n\n      return this.__measureSize(element, styles);\n    },\n\n    /**\n     * Returns the preferred dimensions of the given text.\n     *\n     * @param text {String} The text to measure\n     * @param styles {Map} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getTextSize(text, styles) {\n      var element = this._textElement || this.__prepareText();\n\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        element.firstChild.setAttribute(\"value\", text);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", text);\n      }\n\n      return this.__measureSize(element, styles);\n    },\n\n    /**\n     * Measure the size of the given element\n     *\n     * @param element {Element} The element to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    __measureSize(element, styles) {\n      // sync styles\n      var keys = this.__styles;\n\n      if (!styles) {\n        styles = {};\n      }\n\n      for (var key in keys) {\n        element.style[key] = styles[key] || \"\";\n      }\n\n      // detect size\n      var size = qx.bom.element.Dimension.getSize(element);\n\n      // all modern browser are needing one more pixel for width\n      size.width++;\n\n      return size;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}