{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__styles",
    "fontFamily",
    "fontSize",
    "fontWeight",
    "fontStyle",
    "lineHeight",
    "wordBreak",
    "letterSpacing",
    "__prepareText",
    "el",
    "__createMeasureElement",
    "document",
    "body",
    "insertBefore",
    "firstChild",
    "_textElement",
    "__prepareHtml",
    "_htmlElement",
    "html",
    "dom",
    "Element",
    "create",
    "style",
    "width",
    "height",
    "left",
    "top",
    "visibility",
    "position",
    "overflow",
    "display",
    "whiteSpace",
    "core",
    "Environment",
    "get",
    "inner",
    "createElementNS",
    "padding",
    "margin",
    "key",
    "appendChild",
    "__getStyles",
    "styles",
    "content",
    "win",
    "window",
    "createElement",
    "useHtml",
    "xulel",
    "cursor",
    "color",
    "maxWidth",
    "setAttribute",
    "bom",
    "element",
    "Style",
    "setStyles",
    "setValue",
    "__sanitizer",
    "setSanitizer",
    "func",
    "Label",
    "value",
    "innerHTML",
    "Attribute",
    "set",
    "getValue",
    "getAttribute",
    "getHtmlSize",
    "undefined",
    "__measureSize",
    "getTextSize",
    "text",
    "keys",
    "size",
    "Dimension",
    "getSize"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Label.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with labels.\n */\nqx.Bootstrap.define(\"qx.bom.Label\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Map} Contains all supported styles */\n    __styles: {\n      fontFamily: 1,\n      fontSize: 1,\n      fontWeight: 1,\n      fontStyle: 1,\n      lineHeight: 1,\n      wordBreak: 1,\n      letterSpacing: 1\n    },\n\n    /**\n     * Generates the helper DOM element for text measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareText() {\n      var el = this.__createMeasureElement(false);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return (this._textElement = el);\n    },\n\n    /**\n     * Generates the helper DOM element for HTML measuring\n     *\n     * @return {Element} Helper DOM element\n     */\n    __prepareHtml() {\n      var el = this.__createMeasureElement(true);\n      document.body.insertBefore(el, document.body.firstChild);\n\n      return (this._htmlElement = el);\n    },\n\n    /**\n     * Creates the measure element\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Element} The measure element\n     */\n    __createMeasureElement(html) {\n      var el = qx.dom.Element.create(\"div\");\n      var style = el.style;\n\n      style.width = style.height = \"auto\";\n      style.left = style.top = \"-1000px\";\n      style.visibility = \"hidden\";\n      style.position = \"absolute\";\n      style.overflow = \"visible\";\n      style.display = \"block\";\n\n      if (html) {\n        style.whiteSpace = \"normal\";\n      } else {\n        style.whiteSpace = \"nowrap\";\n\n        if (\n          !qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\")\n        ) {\n          var inner = document.createElementNS(\n            \"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\",\n            \"label\"\n          );\n\n          // Force style inheritance for font styles to omit usage of\n          // CSS \"label\" selector, See bug #1349 for details.\n          var style = inner.style;\n          style.padding = \"0\";\n          style.margin = \"0\";\n          style.width = \"auto\";\n\n          for (var key in this.__styles) {\n            style[key] = \"inherit\";\n          }\n\n          el.appendChild(inner);\n        }\n      }\n\n      return el;\n    },\n\n    /**\n     * Returns a map of all styles which should be applied as\n     * a basic set.\n     *\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @return {Map} Initial styles which should be applied to a label element.\n     */\n    __getStyles(html) {\n      var styles = {};\n\n      styles.overflow = \"hidden\";\n      if (html) {\n        styles.whiteSpace = \"normal\";\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        styles.display = \"block\";\n      } else {\n        styles.whiteSpace = \"nowrap\";\n        styles[qx.core.Environment.get(\"css.textoverflow\")] = \"ellipsis\";\n      }\n\n      return styles;\n    },\n\n    /**\n     * Creates a label.\n     *\n     * The default mode is 'text' which means that the overlapping text is cut off\n     * using ellipsis automatically. Text wrapping is disabled in this mode\n     * as well. Spaces are normalized. Umlauts and other special symbols are only\n     * allowed in unicode mode as normal characters.\n     *\n     * In the HTML mode you can insert any HTML, but loose the capability to cut\n     * of overlapping text. Automatic text wrapping is enabled by default.\n     *\n     * It is not possible to modify the mode afterwards.\n     *\n     * @param content {String} Content of the label\n     * @param html {Boolean?false} Whether HTML markup should be used.\n     * @param win {Window?null} Window to create the element for\n     * @return {Element} The created iframe node\n     */\n    create(content, html, win) {\n      if (!win) {\n        win = window;\n      }\n\n      var el = win.document.createElement(\"div\");\n\n      if (html) {\n        el.useHtml = true;\n      }\n\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        // Gecko as of Firefox 2.x and 3.0 does not support ellipsis\n        // for text overflow. We use this feature from XUL instead.\n        var xulel = win.document.createElementNS(\n          \"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\",\n          \"label\"\n        );\n\n        var style = xulel.style;\n        style.cursor = \"inherit\";\n        style.color = \"inherit\";\n        style.overflow = \"hidden\";\n        style.maxWidth = \"100%\";\n        style.padding = \"0\";\n        style.margin = \"0\";\n        style.width = \"auto\";\n\n        // Force style inheritance for font styles to omit usage of\n        // CSS \"label\" selector, See bug #1349 for details.\n        for (var key in this.__styles) {\n          xulel.style[key] = \"inherit\";\n        }\n\n        xulel.setAttribute(\"crop\", \"end\");\n\n        el.appendChild(xulel);\n      } else {\n        qx.bom.element.Style.setStyles(el, this.__getStyles(html));\n      }\n\n      if (content) {\n        this.setValue(el, content);\n      }\n\n      return el;\n    },\n\n    /** Sanitizer function */\n    __sanitizer: null,\n\n    /**\n     * Sets a function to sanitize values. It will be used by {@link #setValue}.\n     * The function to sanitize will get the <code>string</code> value and\n     * should return a sanitized / cleared <code>string</code>.\n     *\n     * @param func {Function | null} Function to sanitize / clean HTML code\n     *  from given string parameter\n     */\n    setSanitizer(func) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (func) {\n          qx.core.Assert.assertFunction(func);\n        }\n      }\n\n      qx.bom.Label.__sanitizer = func;\n    },\n\n    /**\n     * Sets the content of the element.\n     *\n     * The possibilities of the value depends on the mode\n     * defined using {@link #create}.\n     *\n     * @param element {Element} DOM element to modify.\n     * @param value {String} Content to insert.\n     */\n    setValue(element, value) {\n      value = value || \"\";\n\n      if (element.useHtml) {\n        if (\n          qx.bom.Label.__sanitizer &&\n          typeof qx.bom.Label.__sanitizer === \"function\"\n        ) {\n          value = qx.bom.Label.__sanitizer(value);\n        }\n        element.innerHTML = value;\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        element.firstChild.setAttribute(\"value\", value);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", value);\n      }\n    },\n\n    /**\n     * Returns the content of the element.\n     *\n     * @param element {Element} DOM element to query.\n     * @return {String} Content stored in the element.\n     */\n    getValue(element) {\n      if (element.useHtml) {\n        return element.innerHTML;\n      } else if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        return element.firstChild.getAttribute(\"value\") || \"\";\n      } else {\n        return qx.bom.element.Attribute.get(element, \"text\");\n      }\n    },\n\n    /**\n     * Returns the preferred dimensions of the given HTML content.\n     *\n     * @param content {String} The HTML markup to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @param width {Integer} To support width for height it is possible to limit the width\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getHtmlSize(content, styles, width) {\n      var element = this._htmlElement || this.__prepareHtml();\n\n      // apply width\n      element.style.width = width != undefined ? width + \"px\" : \"auto\";\n      // insert content\n      element.innerHTML = content;\n\n      return this.__measureSize(element, styles);\n    },\n\n    /**\n     * Returns the preferred dimensions of the given text.\n     *\n     * @param text {String} The text to measure\n     * @param styles {Map} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    getTextSize(text, styles) {\n      var element = this._textElement || this.__prepareText();\n\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        element.firstChild.setAttribute(\"value\", text);\n      } else {\n        qx.bom.element.Attribute.set(element, \"text\", text);\n      }\n\n      return this.__measureSize(element, styles);\n    },\n\n    /**\n     * Measure the size of the given element\n     *\n     * @param element {Element} The element to measure\n     * @param styles {Map?null} Optional styles to apply\n     * @return {Map} A map with preferred <code>width</code> and <code>height</code>.\n     */\n    __measureSize(element, styles) {\n      // sync styles\n      var keys = this.__styles;\n\n      if (!styles) {\n        styles = {};\n      }\n\n      for (var key in keys) {\n        element.style[key] = styles[key] || \"\";\n      }\n\n      // detect size\n      var size = qx.bom.element.Dimension.getSize(element);\n\n      // all modern browser are needing one more pixel for width\n      size.width++;\n\n      return size;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}