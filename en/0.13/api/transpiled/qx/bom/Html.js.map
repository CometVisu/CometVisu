{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__fixNonDirectlyClosableHelper",
    "__P_104_0",
    "all",
    "front",
    "tag",
    "match",
    "__convertMap",
    "opt",
    "leg",
    "table",
    "tr",
    "td",
    "col",
    "def",
    "core",
    "Environment",
    "select",
    "mshtml",
    "fixEmptyTags",
    "html",
    "replace",
    "__convertHtmlString",
    "__P_104_2",
    "context",
    "div",
    "createElement",
    "bom",
    "Html",
    "tags",
    "substring",
    "toLowerCase",
    "wrap",
    "map",
    "indexOf",
    "innerHTML",
    "depth",
    "lastChild",
    "get",
    "hasBody",
    "test",
    "tbody",
    "firstChild",
    "childNodes",
    "j",
    "length",
    "tagName",
    "parentNode",
    "removeChild",
    "insertBefore",
    "createTextNode",
    "lang",
    "Array",
    "fromCollection",
    "clean",
    "objs",
    "fragment",
    "document",
    "ownerDocument",
    "exec",
    "obj",
    "ret",
    "i",
    "l",
    "nodeType",
    "push",
    "type",
    "BaseArray",
    "qxWeb",
    "apply",
    "prototype",
    "slice",
    "call",
    "toElement",
    "extractScripts",
    "elements",
    "scripts",
    "elem",
    "scriptList",
    "getElementsByTagName",
    "splice",
    "concat",
    "appendChild"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Html.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2009 Sebastian Werner, http://sebastian-werner.net\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n\r\n   ======================================================================\r\n\r\n   This class contains code based on the following work:\r\n\r\n   * jQuery\r\n     http://jquery.com\r\n     Version 1.3.1\r\n\r\n     Copyright:\r\n       2009 John Resig\r\n\r\n     License:\r\n       MIT: http://www.opensource.org/licenses/mit-license.php\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class is mainly a convenience wrapper for DOM elements to\r\n * qooxdoo's event system.\r\n *\r\n * @ignore(qxWeb)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.Html\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * Helper method for XHTML replacement.\r\n     *\r\n     * @param all {String} Complete string\r\n     * @param front {String} Front of the match\r\n     * @param tag {String} Tag name\r\n     * @return {String} XHTML corrected tag\r\n     */\r\n    __fixNonDirectlyClosableHelper(all, front, tag) {\r\n      return tag.match(\r\n        /^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i\r\n      )\r\n        ? all\r\n        : front + \"></\" + tag + \">\";\r\n    },\r\n\r\n    /** @type {Map} Contains wrap fragments for specific HTML matches */\r\n    __convertMap: {\r\n      opt: [1, \"<select multiple='multiple'>\", \"</select>\"], // option or optgroup\r\n      leg: [1, \"<fieldset>\", \"</fieldset>\"],\r\n      table: [1, \"<table>\", \"</table>\"],\r\n      tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\r\n      td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\r\n      col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\r\n      def: qx.core.Environment.select(\"engine.name\", {\r\n        mshtml: [1, \"div<div>\", \"</div>\"],\r\n        default: null\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Fixes \"XHTML\"-style tags in all browsers.\r\n     * Replaces tags which are not allowed to be closed directly such as\r\n     * <code>div</code> or <code>p</code>. They are patched to use opening and\r\n     * closing tags instead, e.g. <code>&lt;p&gt;</code> => <code>&lt;p&gt;&lt;/p&gt;</code>\r\n     *\r\n     * @param html {String} HTML to fix\r\n     * @return {String} Fixed HTML\r\n     */\r\n    fixEmptyTags(html) {\r\n      return html.replace(\r\n        /(<(\\w+)[^>]*?)\\/>/g,\r\n        this.__fixNonDirectlyClosableHelper\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Translates a HTML string into an array of elements.\r\n     *\r\n     * @param html {String} HTML string\r\n     * @param context {Document} Context document in which (helper) elements should be created\r\n     * @return {Array} List of resulting elements\r\n     */\r\n    __convertHtmlString(html, context) {\r\n      var div = context.createElement(\"div\");\r\n\r\n      html = qx.bom.Html.fixEmptyTags(html);\r\n\r\n      // Trim whitespace, otherwise indexOf won't work as expected\r\n      var tags = html.replace(/^\\s+/, \"\").substring(0, 5).toLowerCase();\r\n\r\n      // Auto-wrap content into required DOM structure\r\n      var wrap,\r\n        map = this.__convertMap;\r\n      if (!tags.indexOf(\"<opt\")) {\r\n        wrap = map.opt;\r\n      } else if (!tags.indexOf(\"<leg\")) {\r\n        wrap = map.leg;\r\n      } else if (tags.match(/^<(thead|tbody|tfoot|colg|cap)/)) {\r\n        wrap = map.table;\r\n      } else if (!tags.indexOf(\"<tr\")) {\r\n        wrap = map.tr;\r\n      } else if (!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\")) {\r\n        wrap = map.td;\r\n      } else if (!tags.indexOf(\"<col\")) {\r\n        wrap = map.col;\r\n      } else {\r\n        wrap = map.def;\r\n      }\r\n\r\n      // Omit string concat when no wrapping is needed\r\n      if (wrap) {\r\n        // Go to html and back, then peel off extra wrappers\r\n        div.innerHTML = wrap[1] + html + wrap[2];\r\n\r\n        // Move to the right depth\r\n        var depth = wrap[0];\r\n        while (depth--) {\r\n          div = div.lastChild;\r\n        }\r\n      } else {\r\n        div.innerHTML = html;\r\n      }\r\n\r\n      // Fix IE specific bugs\r\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n        // Remove IE's autoinserted <tbody> from table fragments\r\n        // String was a <table>, *may* have spurious <tbody>\r\n        var hasBody = /<tbody/i.test(html);\r\n\r\n        // String was a bare <thead> or <tfoot>\r\n        var tbody =\r\n          !tags.indexOf(\"<table\") && !hasBody\r\n            ? div.firstChild && div.firstChild.childNodes\r\n            : wrap[1] == \"<table>\" && !hasBody\r\n            ? div.childNodes\r\n            : [];\r\n\r\n        for (var j = tbody.length - 1; j >= 0; --j) {\r\n          if (\r\n            tbody[j].tagName.toLowerCase() === \"tbody\" &&\r\n            !tbody[j].childNodes.length\r\n          ) {\r\n            tbody[j].parentNode.removeChild(tbody[j]);\r\n          }\r\n        }\r\n\r\n        // IE completely kills leading whitespace when innerHTML is used\r\n        if (/^\\s/.test(html)) {\r\n          div.insertBefore(\r\n            context.createTextNode(html.match(/^\\s*/)[0]),\r\n            div.firstChild\r\n          );\r\n        }\r\n      }\r\n\r\n      return qx.lang.Array.fromCollection(div.childNodes);\r\n    },\r\n\r\n    /**\r\n     * Cleans-up the given HTML and append it to a fragment\r\n     *\r\n     * When no <code>context</code> is given the global document is used to\r\n     * create new DOM elements.\r\n     *\r\n     * When a <code>fragment</code> is given the nodes are appended to this\r\n     * fragment except the script tags. These are returned in a separate Array.\r\n     *\r\n     * Please note: HTML coming from user input must be validated prior\r\n     * to passing it to this method. HTML is temporarily inserted to the DOM\r\n     * using <code>innerHTML</code>. As a consequence, scripts included in\r\n     * attribute event handlers may be executed.\r\n     *\r\n     * @param objs {Element[]|String[]} Array of DOM elements or HTML strings\r\n     * @param context {Document?document} Context in which the elements should be created\r\n     * @param fragment {Element?null} Document fragment to appends elements to\r\n     * @return {Element[]} Array of elements (when a fragment is given it only contains script elements)\r\n     */\r\n    clean(objs, context, fragment) {\r\n      context = context || document;\r\n\r\n      // !context.createElement fails in IE with an error but returns typeof 'object'\r\n      if (typeof context.createElement === \"undefined\") {\r\n        context =\r\n          context.ownerDocument ||\r\n          (context[0] && context[0].ownerDocument) ||\r\n          document;\r\n      }\r\n\r\n      // Fast-Path:\r\n      // If a single string is passed in and it's a single tag\r\n      // just do a createElement and skip the rest\r\n      if (!fragment && objs.length === 1 && typeof objs[0] === \"string\") {\r\n        var match = /^<(\\w+)\\s*\\/?>$/.exec(objs[0]);\r\n        if (match) {\r\n          return [context.createElement(match[1])];\r\n        }\r\n      }\r\n\r\n      // Iterate through items in incoming array\r\n      var obj,\r\n        ret = [];\r\n      for (var i = 0, l = objs.length; i < l; i++) {\r\n        obj = objs[i];\r\n\r\n        // Convert HTML string into DOM nodes\r\n        if (typeof obj === \"string\") {\r\n          obj = this.__convertHtmlString(obj, context);\r\n        }\r\n\r\n        // Append or merge depending on type\r\n        if (obj.nodeType) {\r\n          ret.push(obj);\r\n        } else if (\r\n          obj instanceof qx.type.BaseArray ||\r\n          (typeof qxWeb !== \"undefined\" && obj instanceof qxWeb)\r\n        ) {\r\n          ret.push.apply(ret, Array.prototype.slice.call(obj, 0));\r\n        } else if (obj.toElement) {\r\n          ret.push(obj.toElement());\r\n        } else {\r\n          ret.push.apply(ret, obj);\r\n        }\r\n      }\r\n\r\n      // Append to fragment and filter out scripts... or...\r\n      if (fragment) {\r\n        return qx.bom.Html.extractScripts(ret, fragment);\r\n      }\r\n\r\n      // Otherwise return the array of all elements\r\n      return ret;\r\n    },\r\n\r\n    /**\r\n     * Extracts script elements from an element list. Optionally\r\n     * attaches them to a given document fragment\r\n     *\r\n     * @param elements {Element[]} list of elements\r\n     * @param fragment {Document?} document fragment\r\n     * @return {Element[]} Array containing the script elements\r\n     */\r\n    extractScripts(elements, fragment) {\r\n      var scripts = [],\r\n        elem;\r\n      for (var i = 0; elements[i]; i++) {\r\n        elem = elements[i];\r\n\r\n        if (\r\n          elem.nodeType == 1 &&\r\n          elem.tagName.toLowerCase() === \"script\" &&\r\n          (!elem.type || elem.type.toLowerCase() === \"text/javascript\")\r\n        ) {\r\n          // Trying to remove the element from DOM\r\n          if (elem.parentNode) {\r\n            elem.parentNode.removeChild(elements[i]);\r\n          }\r\n\r\n          // Store in script list\r\n          scripts.push(elem);\r\n        } else {\r\n          if (elem.nodeType === 1) {\r\n            // Recursively search for scripts and append them to the list of elements to process\r\n            var scriptList = qx.lang.Array.fromCollection(\r\n              elem.getElementsByTagName(\"script\")\r\n            );\r\n\r\n            elements.splice.apply(elements, [i + 1, 0].concat(scriptList));\r\n          }\r\n\r\n          // Finally append element to fragment\r\n          if (fragment) {\r\n            fragment.appendChild(elem);\r\n          }\r\n        }\r\n      }\r\n\r\n      return scripts;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}