{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "event",
    "Emitter",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "url",
    "method",
    "undefined",
    "setUrl",
    "useCaching",
    "setMethod",
    "_transport",
    "_registerTransportListener",
    "_createTransport",
    "ObjectRegistry",
    "register",
    "__requestHeaders",
    "__parser",
    "_createResponseParser",
    "members",
    "setRequestHeader",
    "key",
    "value",
    "getRequestHeader",
    "getResponseHeader",
    "header",
    "getAllResponseHeaders",
    "lang",
    "Type",
    "isString",
    "__url",
    "getUrl",
    "util",
    "Request",
    "isMethod",
    "__method",
    "getMethod",
    "setRequestData",
    "data",
    "isObject",
    "indexOf",
    "getClass",
    "__requestData",
    "getRequestData",
    "getResponse",
    "__response",
    "responseXML",
    "responseText",
    "getTransport",
    "setParser",
    "parser",
    "setTimeout",
    "millis",
    "isNumber",
    "__timeout",
    "getTimeout",
    "isBoolean",
    "__cache",
    "isCaching",
    "isDone",
    "readyState",
    "bom",
    "request",
    "Xhr",
    "DONE",
    "toHashCode",
    "$$hash",
    "isDisposed",
    "__disposed",
    "send",
    "curTimeout",
    "hasRequestData",
    "hasCacheControlHeader",
    "hasOwnProperty",
    "isBodyForMethodAllowed",
    "methodAllowsRequestBody",
    "curContentType",
    "serializedData",
    "_serializeData",
    "Uri",
    "appendParamsToUrl",
    "nocache",
    "Date",
    "valueOf",
    "timeout",
    "open",
    "abort",
    "dispose",
    "transport",
    "onreadystatechange",
    "Function",
    "bind",
    "_onReadyStateChange",
    "onloadend",
    "_onLoadEnd",
    "ontimeout",
    "_onTimeout",
    "onerror",
    "_onError",
    "onabort",
    "_onAbort",
    "onprogress",
    "_onProgress",
    "ResponseParser",
    "_setResponse",
    "response",
    "contentType",
    "isPost",
    "isJson",
    "test",
    "isArray",
    "Json",
    "stringify",
    "toParameter",
    "addListenerOnce",
    "name",
    "listener",
    "ctx",
    "once",
    "addListener",
    "_emitter",
    "on",
    "Environment",
    "get",
    "debug",
    "__onReadyStateDone",
    "status",
    "isSuccessful",
    "parse",
    "emit",
    "e",
    "SimpleXhr"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/request/SimpleXhr.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * This class is internal because it's tailored to {@link qx.io.rest.Resource}\n * which needs more functionality than {@link qx.bom.request.Xhr} provides.\n * The usage of {@link qx.io.request.Xhr} isn't possible either due to it's qx.Class nature.\n *\n * For alternatives to this class have a look at:\n *\n * * \"qx.bom.request.Xhr\" (low level, cross-browser XHR abstraction compatible with spec)\n * * \"qx.io.request.Xhr\" (high level XHR abstraction)\n *\n * A wrapper of {@link qx.bom.request.Xhr} which offers:\n *\n * * set/get HTTP method, URL, request data and headers\n * * retrieve the parsed response as object (content-type recognition)\n * * more fine-grained events such as success, fail, ...\n * * supports hash code for request identification\n *\n * It does *not* comply the interface defined by {@link qx.bom.request.IRequest}.\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.SimpleXhr(\"/some/path/file.json\");\n *  req.setRequestData({\"a\":\"b\"});\n *  req.once(\"success\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.once(\"fail\", function successHandler() {\n *    var response = req.getResponse();\n *  }, this);\n *  req.send();\n * </pre>\n * </div>\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.request.SimpleXhr\", {\n  extend: qx.event.Emitter,\n  implement: [qx.core.IDisposable],\n\n  /**\n   * @param url {String?} The URL of the resource to request.\n   * @param method {String?\"GET\"} The HTTP method.\n   */\n  construct(url, method) {\n    if (url !== undefined) {\n      this.setUrl(url);\n    }\n\n    this.useCaching(true);\n    this.setMethod(method !== undefined ? method : \"GET\");\n    this._transport = this._registerTransportListener(this._createTransport());\n\n    qx.core.ObjectRegistry.register(this);\n\n    this.__requestHeaders = {};\n    this.__parser = this._createResponseParser();\n  },\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @param value {String} Value of the header.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestHeader(key, value) {\n      this.__requestHeaders[key] = value;\n      return this;\n    },\n\n    /**\n     * Gets a request header.\n     *\n     * @param key {String} Key of the header.\n     * @return {String} The value of the header.\n     */\n    getRequestHeader(key) {\n      return this.__requestHeaders[key];\n    },\n\n    /**\n     * Returns a single response header\n     *\n     * @param header {String} Name of the header to get.\n     * @return {String} Response header\n     */\n    getResponseHeader(header) {\n      return this._transport.getResponseHeader(header);\n    },\n\n    /**\n     * Returns all response headers\n     * @return {String} String of response headers\n     */\n    getAllResponseHeaders() {\n      return this._transport.getAllResponseHeaders();\n    },\n\n    /**\n     * Sets the URL.\n     *\n     * @param url {String} URL to be requested.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setUrl(url) {\n      if (qx.lang.Type.isString(url)) {\n        this.__url = url;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the URL.\n     *\n     * @return {String} URL to be requested.\n     */\n    getUrl() {\n      return this.__url;\n    },\n\n    /**\n     * Sets the HTTP-Method.\n     *\n     * @param method {String} The method.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setMethod(method) {\n      if (qx.util.Request.isMethod(method)) {\n        this.__method = method;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the HTTP-Method.\n     *\n     * @return {String} The method.\n     */\n    getMethod() {\n      return this.__method;\n    },\n\n    /**\n     * Sets the request data to be send as part of the request.\n     *\n     * The request data is transparently included as URL query parameters or embedded in the\n     * request body as form data.\n     *\n     * @param data {String|Object} The request data.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setRequestData(data) {\n      if (\n        qx.lang.Type.isString(data) ||\n        qx.lang.Type.isObject(data) ||\n        [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(\n          qx.lang.Type.getClass(data)\n        ) !== -1\n      ) {\n        this.__requestData = data;\n      }\n      return this;\n    },\n\n    /**\n     * Gets the request data.\n     *\n     * @return {String} The request data.\n     */\n    getRequestData() {\n      return this.__requestData;\n    },\n\n    /**\n     * Gets parsed response.\n     *\n     * If problems occurred an empty string (\"\") is more likely to be returned (instead of null).\n     *\n     * @return {String|null} The parsed response of the request.\n     */\n    getResponse() {\n      if (this.__response !== null) {\n        return this.__response;\n      } else {\n        return this._transport.responseXML !== null\n          ? this._transport.responseXML\n          : this._transport.responseText;\n      }\n    },\n\n    /**\n     * Gets low-level transport.\n     *\n     * Note: To be used with caution!\n     *\n     * This method can be used to query the transport directly,\n     * but should be used with caution. Especially, it\n     * is not advisable to call any destructive methods\n     * such as <code>open</code> or <code>send</code>.\n     *\n     * @return {Object} An instance of a class found in\n     *  <code>qx.bom.request.*</code>\n     */\n    // This method mainly exists so that some methods found in the\n    // low-level transport can be deliberately omitted here,\n    // but still be accessed should it be absolutely necessary.\n    //\n    // Valid use cases include to query the transportâ€™s responseXML\n    // property if performance is critical and any extra parsing\n    // should be avoided at all costs.\n    //\n    getTransport() {\n      return this._transport;\n    },\n\n    /**\n     * Sets (i.e. override) the parser for the response parsing.\n     *\n     * @see qx.util.ResponseParser#setParser\n     *\n     * @param parser {String|Function}\n     * @return {Function} The parser function\n     */\n    setParser(parser) {\n      return this.__parser.setParser(parser);\n    },\n\n    /**\n     * Sets the timout limit in milliseconds.\n     *\n     * @param millis {Number} limit in milliseconds.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    setTimeout(millis) {\n      if (qx.lang.Type.isNumber(millis)) {\n        this.__timeout = millis;\n      }\n      return this;\n    },\n\n    /**\n     * The current timeout in milliseconds.\n     *\n     * @return {Number} The current timeout in milliseconds.\n     */\n    getTimeout() {\n      return this.__timeout;\n    },\n\n    /**\n     * Whether to allow request to be answered from cache.\n     *\n     * Allowed values:\n     *\n     * * <code>true</code>: Allow caching (Default)\n     * * <code>false</code>: Prohibit caching. Appends 'nocache' parameter to URL.\n     *\n     * Consider setting a Cache-Control header instead. A requestâ€™s Cache-Control\n     * header may contain a number of directives controlling the behavior of\n     * any caches in between client and origin server and allows therefore a more\n     * fine grained control over caching. If such a header is provided, the setting\n     * of setCache() will be ignored.\n     *\n     * * <code>\"no-cache\"</code>: Force caches to submit request in order to\n     * validate the freshness of the representation. Note that the requested\n     * resource may still be served from cache if the representation is\n     * considered fresh. Use this directive to ensure freshness but save\n     * bandwidth when possible.\n     * * <code>\"no-store\"</code>: Do not keep a copy of the representation under\n     * any conditions.\n     *\n     * See <a href=\"http://www.mnot.net/cache_docs/#CACHE-CONTROL\">\n     * Caching tutorial</a> for an excellent introduction to Caching in general.\n     * Refer to the corresponding section in the\n     * <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">\n     * HTTP 1.1 specification</a> for more details and advanced directives.\n     *\n     * It is recommended to choose an appropriate Cache-Control directive rather\n     * than prohibit caching using the nocache parameter.\n     *\n     * @param value {Boolean}\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    useCaching(value) {\n      if (qx.lang.Type.isBoolean(value)) {\n        this.__cache = value;\n      }\n      return this;\n    },\n\n    /**\n     * Whether requests are cached.\n     *\n     * @return {Boolean} Whether requests are cached.\n     */\n    isCaching() {\n      return this.__cache;\n    },\n\n    /**\n     * Whether request completed (is done).\n     * @return {Boolean} Whether request is completed.\n     */\n\n    isDone() {\n      return this._transport.readyState === qx.bom.request.Xhr.DONE;\n    },\n\n    /**\n     * Returns unique hash code of object.\n     *\n     * @return {Integer} unique hash code of the object\n     */\n    toHashCode() {\n      return this.$$hash;\n    },\n\n    /**\n     * Returns true if the object is disposed.\n     *\n     * @return {Boolean} Whether the object has been disposed\n     */\n    isDisposed() {\n      return !!this.__disposed;\n    },\n\n    /**\n     * Sends request.\n     *\n     * Relies on set before:\n     * * a HTTP method\n     * * an URL\n     * * optional request headers\n     * * optional request data\n     */\n    send() {\n      var curTimeout = this.getTimeout(),\n        hasRequestData = this.getRequestData() !== null,\n        hasCacheControlHeader =\n          this.__requestHeaders.hasOwnProperty(\"Cache-Control\"),\n        isBodyForMethodAllowed = qx.util.Request.methodAllowsRequestBody(\n          this.getMethod()\n        ),\n        curContentType = this.getRequestHeader(\"Content-Type\"),\n        serializedData = this._serializeData(\n          this.getRequestData(),\n          curContentType\n        );\n\n      // add GET params if needed\n      if (this.getMethod() === \"GET\" && hasRequestData) {\n        this.setUrl(\n          qx.util.Uri.appendParamsToUrl(this.getUrl(), serializedData)\n        );\n      }\n\n      // cache prevention\n      if (this.isCaching() === false && !hasCacheControlHeader) {\n        // Make sure URL cannot be served from cache and new request is made\n        this.setUrl(\n          qx.util.Uri.appendParamsToUrl(this.getUrl(), {\n            nocache: new Date().valueOf()\n          })\n        );\n      }\n\n      // set timeout\n      if (curTimeout) {\n        this._transport.timeout = curTimeout;\n      }\n\n      // initialize request\n      this._transport.open(this.getMethod(), this.getUrl(), true);\n\n      // set all previously stored headers on initialized request\n      for (var key in this.__requestHeaders) {\n        this._transport.setRequestHeader(key, this.__requestHeaders[key]);\n      }\n\n      // send\n      if (!isBodyForMethodAllowed) {\n        // GET & HEAD\n        this._transport.send();\n      } else {\n        // POST & PUT ...\n        if (\n          typeof curContentType === \"undefined\" &&\n          [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(\n            qx.Bootstrap.getClass(serializedData)\n          ) === -1\n        ) {\n          // by default, set content-type urlencoded for requests with body\n          this._transport.setRequestHeader(\n            \"Content-Type\",\n            \"application/x-www-form-urlencoded\"\n          );\n        }\n\n        this._transport.send(serializedData);\n      }\n    },\n\n    /**\n     * Aborts request.\n     *\n     * Cancels any network activity.\n     * @return {qx.bom.request.SimpleXhr} Self for chaining.\n     */\n    abort() {\n      this._transport.abort();\n      return this;\n    },\n\n    /**\n     * Disposes object and wrapped transport.\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\n     */\n    dispose() {\n      if (this._transport.dispose()) {\n        this.__parser = null;\n        this.__disposed = true;\n        return true;\n      }\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Holds transport.\n     */\n    _transport: null,\n\n    /**\n     * Creates XHR transport.\n     *\n     * May be overridden to change type of resource.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _createTransport() {\n      return new qx.bom.request.Xhr();\n    },\n\n    /**\n     * Registers common listeners on given transport.\n     *\n     * @param transport {qx.bom.request.IRequest} Transport.\n     * @return {qx.bom.request.IRequest} Transport.\n     */\n    _registerTransportListener(transport) {\n      transport.onreadystatechange = qx.lang.Function.bind(\n        this._onReadyStateChange,\n        this\n      );\n\n      transport.onloadend = qx.lang.Function.bind(this._onLoadEnd, this);\n      transport.ontimeout = qx.lang.Function.bind(this._onTimeout, this);\n      transport.onerror = qx.lang.Function.bind(this._onError, this);\n      transport.onabort = qx.lang.Function.bind(this._onAbort, this);\n      transport.onprogress = qx.lang.Function.bind(this._onProgress, this);\n      return transport;\n    },\n\n    /**\n     * Creates response parser.\n     *\n     * @return {qx.util.ResponseParser} parser.\n     */\n    _createResponseParser() {\n      return new qx.util.ResponseParser();\n    },\n\n    /**\n     * Sets the response.\n     *\n     * @param response {String} The parsed response of the request.\n     */\n    _setResponse(response) {\n      this.__response = response;\n    },\n\n    /**\n     * Serializes data.\n     *\n     * @param data {String|Map} Data to serialize.\n     * @param contentType {String?} Content-Type which influences the serialization.\n     * @return {String|null} Serialized data.\n     */\n    _serializeData(data, contentType) {\n      var isPost = this.getMethod() === \"POST\",\n        isJson = /application\\/.*\\+?json/.test(contentType);\n\n      if (!data) {\n        return null;\n      }\n\n      if (qx.lang.Type.isString(data)) {\n        return data;\n      }\n\n      if (\n        isJson &&\n        (qx.lang.Type.isObject(data) || qx.lang.Type.isArray(data))\n      ) {\n        return qx.lang.Json.stringify(data);\n      }\n\n      if (qx.lang.Type.isObject(data)) {\n        return qx.util.Uri.toParameter(data, isPost);\n      }\n\n      if (\n        [\"ArrayBuffer\", \"Blob\", \"FormData\"].indexOf(\n          qx.Bootstrap.getClass(data)\n        ) !== -1\n      ) {\n        return data;\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * {Array} Request headers.\n     */\n    __requestHeaders: null,\n    /**\n     * {Object} Request data (i.e. body).\n     */\n    __requestData: null,\n    /**\n     * {String} HTTP method to use for request.\n     */\n    __method: \"\",\n    /**\n     * {String} Requested URL.\n     */\n    __url: \"\",\n    /**\n     * {Object} Response data.\n     */\n    __response: null,\n    /**\n     * {Function} Parser.\n     */\n    __parser: null,\n    /**\n     * {Boolean} Whether caching will be enabled.\n     */\n    __cache: null,\n    /**\n     * {Number} The current timeout in milliseconds.\n     */\n    __timeout: null,\n    /**\n     * {Boolean} Whether object has been disposed.\n     */\n    __disposed: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds an event listener for the given event name which is executed only once.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListenerOnce(name, listener, ctx) {\n      this.once(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Adds an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    addListener(name, listener, ctx) {\n      this._transport._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Handles \"readyStateChange\" event.\n     */\n    _onReadyStateChange() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\"Fire readyState: \" + this._transport.readyState);\n      }\n\n      if (this.isDone()) {\n        this.__onReadyStateDone();\n      }\n    },\n\n    /**\n     * Called internally when readyState is DONE.\n     */\n    __onReadyStateDone() {\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\n          \"Request completed with HTTP status: \" + this._transport.status\n        );\n      }\n\n      var response = this._transport.responseText;\n      var contentType = this._transport.getResponseHeader(\"Content-Type\");\n\n      // Successful HTTP status\n      if (qx.util.Request.isSuccessful(this._transport.status)) {\n        // Parse response\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(\"Response is of type: '\" + contentType + \"'\");\n        }\n\n        this._setResponse(this.__parser.parse(response, contentType));\n\n        this.emit(\"success\");\n\n        // Erroneous HTTP status\n      } else {\n        try {\n          this._setResponse(this.__parser.parse(response, contentType));\n        } catch (e) {\n          // ignore if it does not work\n        }\n\n        // A remote error failure\n        if (this._transport.status !== 0) {\n          this.emit(\"fail\");\n        }\n      }\n    },\n\n    /**\n     * Handles \"loadEnd\" event.\n     */\n    _onLoadEnd() {\n      this.emit(\"loadEnd\");\n    },\n\n    /**\n     * Handles \"abort\" event.\n     */\n    _onAbort() {\n      this.emit(\"abort\");\n    },\n\n    /**\n     * Handles \"timeout\" event.\n     */\n    _onTimeout() {\n      this.emit(\"timeout\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onError() {\n      this.emit(\"error\");\n\n      // A network error failure\n      this.emit(\"fail\");\n    },\n\n    /**\n     * Handles \"error\" event.\n     */\n    _onProgress() {\n      this.emit(\"progress\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}