{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "transport",
    "readyState",
    "status",
    "statusText",
    "responseText",
    "timeout",
    "open",
    "method",
    "url",
    "async",
    "send",
    "data",
    "abort",
    "getAllResponseHeaders",
    "getResponseHeader",
    "header",
    "setRequestHeader",
    "key",
    "value",
    "onreadystatechange",
    "onload",
    "onloadend",
    "onerror",
    "onabort",
    "ontimeout",
    "bom",
    "request",
    "IRequest"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/request/IRequest.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tristan Koch (tristankoch)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Interface of a low-level transport compatible with\r\n * {@link qx.io.request.AbstractRequest}.\r\n *\r\n * Based on interface specified in\r\n * <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>. Also\r\n * borrows some methods as described in\r\n * <a href=\"http://www.w3.org/TR/XMLHttpRequest2/\">XmlHttpRequest2</a>.\r\n */\r\nqx.Interface.define(\"qx.bom.request.IRequest\", {\r\n  members: {\r\n    //\r\n    // Properties\r\n    // (Plain JavaScript)\r\n    //\r\n\r\n    /**\r\n     * @type {Object} Native transport.\r\n     */\r\n    transport: null,\r\n\r\n    /**\r\n     * @type {Number} Ready state.\r\n     *\r\n     * States can be:\r\n     * UNSENT:           0,\r\n     * OPENED:           1,\r\n     * HEADERS_RECEIVED: 2,\r\n     * LOADING:          3,\r\n     * DONE:             4\r\n     */\r\n    readyState: 0,\r\n\r\n    /**\r\n     * @type {Number} The status code.\r\n     */\r\n    status: 0,\r\n\r\n    /**\r\n     * @type {String} The status text.\r\n     */\r\n    statusText: \"\",\r\n\r\n    /**\r\n     * @type {String} The response of the request as text.\r\n     */\r\n    responseText: \"\",\r\n\r\n    /**\r\n     * @type {Number} Timeout limit in milliseconds.\r\n     *\r\n     * 0 (default) means no timeout.\r\n     */\r\n    timeout: 0,\r\n\r\n    //\r\n    // Methods\r\n    //\r\n\r\n    /**\r\n     * Initializes (prepares) request.\r\n     *\r\n     * @param method {String}\r\n     *  The method to use.\r\n     * @param url {String}\r\n     *  The URL to which to send the request.\r\n     * @param async {Boolean?true}\r\n     *  Whether or not to perform the operation asynchronously.\r\n     */\r\n    open(method, url, async) {},\r\n\r\n    /**\r\n     * Sends request.\r\n     *\r\n     * @param data {String|Document?null}\r\n     *  Optional data to send.\r\n     */\r\n    send(data) {},\r\n\r\n    /**\r\n     * Abort request\r\n     */\r\n    abort() {},\r\n\r\n    /**\r\n     * Get all response headers from response.\r\n     *\r\n     * @return {String} All response headers.\r\n     */\r\n    getAllResponseHeaders() {},\r\n\r\n    /**\r\n     * Get a single response header from response.\r\n     *\r\n     * @param header {String}\r\n     *  Key of the header to get the value from.\r\n     * @return {String}\r\n     *  Response header.\r\n     */\r\n    getResponseHeader(header) {},\r\n\r\n    /**\r\n     * Sets a request header to be used by the request.\r\n     *\r\n     * @param key {String}\r\n     *  The name of the header whose value is to be set.\r\n     * @param value {String}\r\n     *  The value to set as the body of the header.\r\n     */\r\n    setRequestHeader(key, value) {},\r\n\r\n    //\r\n    // Handlers\r\n    //\r\n\r\n    /**\r\n     * Event handler for event fired at every state change.\r\n     */\r\n    onreadystatechange() {},\r\n\r\n    /**\r\n     * Event handler for event fired on successful retrieval.\r\n     */\r\n    onload() {},\r\n\r\n    /**\r\n     * Event handler for event fired on retrieval.\r\n     */\r\n    onloadend() {},\r\n\r\n    /**\r\n     * Event handler for event fired on a network error.\r\n     */\r\n    onerror() {},\r\n\r\n    /**\r\n     * Event handler for event fired when request is aborted.\r\n     */\r\n    onabort() {},\r\n\r\n    /**\r\n     * Event handler for event fired when timeout interval has passed.\r\n     */\r\n    ontimeout() {}\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,yBAAyB,EAAE;IAC7CC,OAAO,EAAE;MACP;MACA;MACA;MACA;;MAEA;AACJ;AACA;MACIC,SAAS,EAAE,IAAI;MAEf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,UAAU,EAAE,CAAC;MAEb;AACJ;AACA;MACIC,MAAM,EAAE,CAAC;MAET;AACJ;AACA;MACIC,UAAU,EAAE,EAAE;MAEd;AACJ;AACA;MACIC,YAAY,EAAE,EAAE;MAEhB;AACJ;AACA;AACA;AACA;MACIC,OAAO,EAAE,CAAC;MAEV;MACA;MACA;MAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,WAAAA,KAACC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAE,CAAC,CAAC;MAE3B;AACJ;AACA;AACA;AACA;AACA;MACIC,IAAI,WAAAA,KAACC,IAAI,EAAE,CAAC,CAAC;MAEb;AACJ;AACA;MACIC,KAAK,WAAAA,MAAA,EAAG,CAAC,CAAC;MAEV;AACJ;AACA;AACA;AACA;MACIC,qBAAqB,WAAAA,sBAAA,EAAG,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,iBAAiB,WAAAA,kBAACC,MAAM,EAAE,CAAC,CAAC;MAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,gBAAgB,WAAAA,iBAACC,GAAG,EAAEC,KAAK,EAAE,CAAC,CAAC;MAE/B;MACA;MACA;MAEA;AACJ;AACA;MACIC,kBAAkB,WAAAA,mBAAA,EAAG,CAAC,CAAC;MAEvB;AACJ;AACA;MACIC,MAAM,WAAAA,OAAA,EAAG,CAAC,CAAC;MAEX;AACJ;AACA;MACIC,SAAS,WAAAA,UAAA,EAAG,CAAC,CAAC;MAEd;AACJ;AACA;MACIC,OAAO,WAAAA,QAAA,EAAG,CAAC,CAAC;MAEZ;AACJ;AACA;MACIC,OAAO,WAAAA,QAAA,EAAG,CAAC,CAAC;MAEZ;AACJ;AACA;MACIC,SAAS,WAAAA,UAAA,EAAG,CAAC;IACf;EACF,CAAC,CAAC;EAnKF/B,EAAE,CAACgC,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC/B,aAAa,GAAGA,aAAa;AAAC"
}