{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "boundFunc",
    "bind",
    "__onNativeReadyStateChange",
    "event",
    "GlobalError",
    "observeMethod",
    "__onNativeReadyStateChangeBound",
    "__onNativeAbortBound",
    "__onNativeAbort",
    "__onNativeProgressBound",
    "__onNativeProgress",
    "__onTimeoutBound",
    "__onTimeout",
    "__initNativeXhr",
    "_emitter",
    "Emitter",
    "window",
    "attachEvent",
    "__onUnloadBound",
    "__onUnload",
    "statics",
    "UNSENT",
    "OPENED",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "events",
    "readystatechange",
    "error",
    "loadend",
    "timeout",
    "abort",
    "load",
    "progress",
    "members",
    "readyState",
    "responseText",
    "response",
    "responseXML",
    "status",
    "statusText",
    "responseType",
    "open",
    "method",
    "url",
    "async",
    "user",
    "password",
    "__checkDisposed",
    "Error",
    "__abort",
    "__send",
    "__conditional",
    "__url",
    "__async",
    "__supportsManyRequests",
    "bom",
    "request",
    "Xhr",
    "dispose",
    "__nativeXhr",
    "onreadystatechange",
    "Environment",
    "get",
    "debug",
    "OpenError",
    "util",
    "Request",
    "isCrossDomain",
    "__openError",
    "XDomainRequest",
    "onerror",
    "_emit",
    "setTimeout",
    "__disposed",
    "setRequestHeader",
    "parseInt",
    "key",
    "value",
    "send",
    "data",
    "__timerId",
    "dataType",
    "getClass",
    "__dataTypeWhiteList",
    "indexOf",
    "toString",
    "SendError",
    "_getProtocol",
    "__readyStateChange",
    "that",
    "emit",
    "onload",
    "onloadend",
    "onabort",
    "ontimeout",
    "onprogress",
    "on",
    "name",
    "listener",
    "ctx",
    "getResponseHeader",
    "header",
    "aborted",
    "getAllResponseHeaders",
    "overrideMimeType",
    "mimeType",
    "getRequest",
    "clearTimeout",
    "detachEvent",
    "PropertiesNotAccessable",
    "noop",
    "isDisposed",
    "_createNativeXhr",
    "xhr",
    "XMLHttpRequest",
    "ActiveXObject",
    "protocolRe",
    "match",
    "location",
    "protocol",
    "__timeout",
    "lengthComputable",
    "loaded",
    "total",
    "e",
    "nxhr",
    "propertiesReadable",
    "XhrPropertiesNotReadable",
    "__normalizeStatus",
    "__normalizeResponseXML",
    "__readyStateChangeDone",
    "__isNetworkError",
    "isDone",
    "documentElement",
    "dom",
    "validateOnParse",
    "loadXML",
    "version",
    "defer",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/request/Xhr.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * A wrapper of the XMLHttpRequest host object (or equivalent). The interface is\n * similar to <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.\n *\n * Hides browser inconsistencies and works around bugs found in popular\n * implementations.\n *\n * <div class=\"desktop\">\n * Example:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.Xhr();\n *  req.onload = function() {\n *    // Handle data received\n *    req.responseText;\n *  }\n *\n *  req.open(\"GET\", url);\n *  req.send();\n * </pre>\n *\n * Example for binary data:\n *\n * <pre class=\"javascript\">\n *  var req = new qx.bom.request.Xhr();\n *  req.onload = function() {\n *    // Handle data received\n *    var blob = req.response;\n *    img.src = URL.createObjectURL(blob);\n *  }\n *\n *  req.open(\"GET\", url);\n *  req.responseType = \"blob\";\n *  req.send();\n * </pre>\n\n * </div>\n *\n * @ignore(XDomainRequest)\n * @ignore(qx.event, qx.event.GlobalError.*)\n *\n * @require(qx.bom.request.Xhr#open)\n * @require(qx.bom.request.Xhr#send)\n * @require(qx.bom.request.Xhr#on)\n * @require(qx.bom.request.Xhr#onreadystatechange)\n * @require(qx.bom.request.Xhr#onload)\n * @require(qx.bom.request.Xhr#onloadend)\n * @require(qx.bom.request.Xhr#onerror)\n * @require(qx.bom.request.Xhr#onabort)\n * @require(qx.bom.request.Xhr#ontimeout)\n * @require(qx.bom.request.Xhr#setRequestHeader)\n * @require(qx.bom.request.Xhr#getAllResponseHeaders)\n * @require(qx.bom.request.Xhr#getRequest)\n * @require(qx.bom.request.Xhr#overrideMimeType)\n * @require(qx.bom.request.Xhr#dispose)\n * @require(qx.bom.request.Xhr#isDisposed)\n *\n * @group (IO)\n */\nqx.Bootstrap.define(\"qx.bom.request.Xhr\", {\n  extend: Object,\n  implement: [qx.core.IDisposable],\n\n  construct() {\n    var boundFunc = qx.Bootstrap.bind(this.__onNativeReadyStateChange, this);\n\n    // GlobalError shouldn't be included in qx.Website builds so use it\n    // if it's available but otherwise ignore it (see ignore stated above).\n    if (\n      qx.event &&\n      qx.event.GlobalError &&\n      qx.event.GlobalError.observeMethod\n    ) {\n      this.__onNativeReadyStateChangeBound =\n        qx.event.GlobalError.observeMethod(boundFunc);\n    } else {\n      this.__onNativeReadyStateChangeBound = boundFunc;\n    }\n\n    this.__onNativeAbortBound = qx.Bootstrap.bind(this.__onNativeAbort, this);\n    this.__onNativeProgressBound = qx.Bootstrap.bind(\n      this.__onNativeProgress,\n      this\n    );\n\n    this.__onTimeoutBound = qx.Bootstrap.bind(this.__onTimeout, this);\n\n    this.__initNativeXhr();\n    this._emitter = new qx.event.Emitter();\n\n    // BUGFIX: IE\n    // IE keeps connections alive unless aborted on unload\n    if (window.attachEvent) {\n      this.__onUnloadBound = qx.Bootstrap.bind(this.__onUnload, this);\n      window.attachEvent(\"onunload\", this.__onUnloadBound);\n    }\n  },\n\n  statics: {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n  },\n\n  events: {\n    /** Fired at ready state changes. */\n    readystatechange: \"qx.bom.request.Xhr\",\n\n    /** Fired on error. */\n    error: \"qx.bom.request.Xhr\",\n\n    /** Fired at loadend. */\n    loadend: \"qx.bom.request.Xhr\",\n\n    /** Fired on timeouts. */\n    timeout: \"qx.bom.request.Xhr\",\n\n    /** Fired when the request is aborted. */\n    abort: \"qx.bom.request.Xhr\",\n\n    /** Fired on successful retrieval. */\n    load: \"qx.bom.request.Xhr\",\n\n    /** Fired on progress. */\n    progress: \"qx.bom.request.Xhr\"\n  },\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Number} Ready state.\n     *\n     * States can be:\n     * UNSENT:           0,\n     * OPENED:           1,\n     * HEADERS_RECEIVED: 2,\n     * LOADING:          3,\n     * DONE:             4\n     */\n    readyState: 0,\n\n    /**\n     * @type {String} The response of the request as text.\n     */\n    responseText: \"\",\n\n    /**\n     * @type {Object} The response of the request as a Document object.\n     */\n    response: null,\n\n    /**\n     * @type {Object} The response of the request as object.\n     */\n    responseXML: null,\n\n    /**\n     * @type {Number} The HTTP status code.\n     */\n    status: 0,\n\n    /**\n     * @type {String} The HTTP status text.\n     */\n    statusText: \"\",\n\n    /**\n     * @type {String} The response Type to use in the request\n     */\n    responseType: \"\",\n    /**\n     * @type {Number} Timeout limit in milliseconds.\n     *\n     * 0 (default) means no timeout. Not supported for synchronous requests.\n     */\n    timeout: 0,\n\n    /**\n     * @type {Object} Wrapper to store data of the progress event which contains the keys\n       <code>lengthComputable</code>, <code>loaded</code> and <code>total</code>\n     */\n    progress: null,\n\n    /**\n     * Initializes (prepares) request.\n     *\n     * @ignore(XDomainRequest)\n     *\n     * @param method {String?\"GET\"}\n     *  The HTTP method to use.\n     * @param url {String}\n     *  The URL to which to send the request.\n     * @param async {Boolean?true}\n     *  Whether or not to perform the operation asynchronously.\n     * @param user {String?null}\n     *  Optional user name to use for authentication purposes.\n     * @param password {String?null}\n     *  Optional password to use for authentication purposes.\n     */\n    open(method, url, async, user, password) {\n      this.__checkDisposed();\n\n      // Mimick native behavior\n      if (typeof url === \"undefined\") {\n        throw new Error(\"Not enough arguments\");\n      } else if (typeof method === \"undefined\") {\n        method = \"GET\";\n      }\n\n      // Reset flags that may have been set on previous request\n      this.__abort = false;\n      this.__send = false;\n      this.__conditional = false;\n\n      // Store URL for later checks\n      this.__url = url;\n\n      if (typeof async == \"undefined\") {\n        async = true;\n      }\n      this.__async = async;\n      // Default values according to spec.\n      this.status = 0;\n      this.statusText = this.responseText = \"\";\n      this.responseXML = null;\n      this.response = null;\n\n      // BUGFIX\n      // IE < 9 and FF < 3.5 cannot reuse the native XHR to issue many requests\n      if (\n        !this.__supportsManyRequests() &&\n        this.readyState > qx.bom.request.Xhr.UNSENT\n      ) {\n        // XmlHttpRequest Level 1 requires open() to abort any pending requests\n        // associated to the object. Since we're dealing with a new object here,\n        // we have to emulate this behavior. Moreover, allow old native XHR to be garbage collected\n        //\n        // Dispose and abort.\n        //\n        this.dispose();\n\n        // Replace the underlying native XHR with a new one that can\n        // be used to issue new requests.\n        this.__initNativeXhr();\n      }\n\n      // Restore handler in case it was removed before\n      this.__nativeXhr.onreadystatechange =\n        this.__onNativeReadyStateChangeBound;\n\n      try {\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(\n            qx.bom.request.Xhr,\n            \"Open native request with method: \" +\n              method +\n              \", url: \" +\n              url +\n              \", async: \" +\n              async\n          );\n        }\n\n        this.__nativeXhr.open(method, url, async, user, password);\n\n        // BUGFIX: IE, Firefox < 3.5\n        // Some browsers do not support Cross-Origin Resource Sharing (CORS)\n        // for XMLHttpRequest. Instead, an exception is thrown even for async requests\n        // if URL is cross-origin (as per XHR level 1). Use the proprietary XDomainRequest\n        // if available (supports CORS) and handle error (if there is one) this\n        // way. Otherwise just assume network error.\n        //\n        // Basically, this allows to detect network errors.\n      } catch (OpenError) {\n        // Only work around exceptions caused by cross domain request attempts\n        if (!qx.util.Request.isCrossDomain(url)) {\n          // Is same origin\n          throw OpenError;\n        }\n\n        if (!this.__async) {\n          this.__openError = OpenError;\n        }\n\n        if (this.__async) {\n          // Try again with XDomainRequest\n          // (Success case not handled on purpose)\n          // - IE 9\n          if (window.XDomainRequest) {\n            this.readyState = 4;\n            this.__nativeXhr = new window.XDomainRequest();\n            this.__nativeXhr.onerror = qx.Bootstrap.bind(function () {\n              this._emit(\"readystatechange\");\n              this._emit(\"error\");\n              this._emit(\"loadend\");\n            }, this);\n\n            if (qx.core.Environment.get(\"qx.debug.io\")) {\n              qx.Bootstrap.debug(\n                qx.bom.request.Xhr,\n                \"Retry open native request with method: \" +\n                  method +\n                  \", url: \" +\n                  url +\n                  \", async: \" +\n                  async\n              );\n            }\n            this.__nativeXhr.open(method, url, async, user, password);\n            return;\n          }\n\n          // Access denied\n          // - IE 6: -2146828218\n          // - IE 7: -2147024891\n          // - Legacy Firefox\n          window.setTimeout(\n            qx.Bootstrap.bind(function () {\n              if (this.__disposed) {\n                return;\n              }\n              this.readyState = 4;\n              this._emit(\"readystatechange\");\n              this._emit(\"error\");\n              this._emit(\"loadend\");\n            }, this)\n          );\n        }\n      }\n\n      // BUGFIX: IE < 9\n      // IE < 9 tends to cache overly aggressive. This may result in stale\n      // representations. Force validating freshness of cached representation.\n      if (\n        qx.core.Environment.get(\"engine.name\") === \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9 &&\n        this.__nativeXhr.readyState > 0\n      ) {\n        this.__nativeXhr.setRequestHeader(\"If-Modified-Since\", \"-1\");\n      }\n\n      // BUGFIX: Firefox\n      // Firefox < 4 fails to trigger onreadystatechange OPENED for sync requests\n      if (\n        qx.core.Environment.get(\"engine.name\") === \"gecko\" &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 2 &&\n        !this.__async\n      ) {\n        // Native XHR is already set to readyState DONE. Fake readyState\n        // and call onreadystatechange manually.\n        this.readyState = qx.bom.request.Xhr.OPENED;\n        this._emit(\"readystatechange\");\n      }\n    },\n\n    /**\n     * Sets an HTTP request header to be used by the request.\n     *\n     * Note: The request must be initialized before using this method.\n     *\n     * @param key {String}\n     *  The name of the header whose value is to be set.\n     * @param value {String}\n     *  The value to set as the body of the header.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    setRequestHeader(key, value) {\n      this.__checkDisposed();\n\n      // Detect conditional requests\n      if (\n        key == \"If-Match\" ||\n        key == \"If-Modified-Since\" ||\n        key == \"If-None-Match\" ||\n        key == \"If-Range\"\n      ) {\n        this.__conditional = true;\n      }\n\n      this.__nativeXhr.setRequestHeader(key, value);\n      return this;\n    },\n\n    /**\n     * Sends request.\n     *\n     * @param data {String|Document?null}\n     *  Optional data to send.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    send(data) {\n      this.__checkDisposed();\n\n      // BUGFIX: IE & Firefox < 3.5\n      // For sync requests, some browsers throw error on open()\n      // while it should be on send()\n      //\n      if (!this.__async && this.__openError) {\n        throw this.__openError;\n      }\n\n      // BUGFIX: Opera\n      // On network error, Opera stalls at readyState HEADERS_RECEIVED\n      // This violates the spec. See here http://www.w3.org/TR/XMLHttpRequest2/#send\n      // (Section: If there is a network error)\n      //\n      // To fix, assume a default timeout of 10 seconds. Note: The \"error\"\n      // event will be fired correctly, because the error flag is inferred\n      // from the statusText property. Of course, compared to other\n      // browsers there is an additional call to ontimeout(), but this call\n      // should not harm.\n      //\n      if (\n        qx.core.Environment.get(\"engine.name\") === \"opera\" &&\n        this.timeout === 0\n      ) {\n        this.timeout = 10000;\n      }\n\n      // Timeout\n      if (this.timeout > 0) {\n        this.__timerId = window.setTimeout(this.__onTimeoutBound, this.timeout);\n      }\n\n      // BUGFIX: Firefox 2\n      // \"NS_ERROR_XPC_NOT_ENOUGH_ARGS\" when calling send() without arguments\n      data = typeof data == \"undefined\" ? null : data;\n\n      // Whitelisting the allowed data types regarding the spec\n      // -> http://www.w3.org/TR/XMLHttpRequest2/#the-send-method\n      // All other data input will be transformed to a string to e.g. prevent\n      // an SendError in Firefox (at least <= 31) and to harmonize it with the\n      // behaviour of all other browsers (Chrome, IE and Safari)\n      var dataType = qx.Bootstrap.getClass(data);\n      data =\n        data !== null && this.__dataTypeWhiteList.indexOf(dataType) === -1\n          ? data.toString()\n          : data;\n\n      // Some browsers may throw an error when sending of async request fails.\n      // This violates the spec which states only sync requests should.\n      try {\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\n          qx.Bootstrap.debug(qx.bom.request.Xhr, \"Send native request\");\n        }\n        if (this.__async) {\n          this.__nativeXhr.responseType = this.responseType;\n        }\n        this.__nativeXhr.send(data);\n      } catch (SendError) {\n        if (!this.__async) {\n          throw SendError;\n        }\n\n        // BUGFIX\n        // Some browsers throws error when file not found via file:// protocol.\n        // Synthesize readyState changes.\n        if (this._getProtocol() === \"file:\") {\n          this.readyState = 2;\n          this.__readyStateChange();\n\n          var that = this;\n          window.setTimeout(function () {\n            if (that.__disposed) {\n              return;\n            }\n            that.readyState = 3;\n            that.__readyStateChange();\n\n            that.readyState = 4;\n            that.__readyStateChange();\n          });\n        }\n      }\n\n      // BUGFIX: Firefox\n      // Firefox fails to trigger onreadystatechange DONE for sync requests\n      if (qx.core.Environment.get(\"engine.name\") === \"gecko\" && !this.__async) {\n        // Properties all set, only missing native readystatechange event\n        this.__onNativeReadyStateChange();\n      }\n\n      // Set send flag\n      this.__send = true;\n      return this;\n    },\n\n    /**\n     * Abort request - i.e. cancels any network activity.\n     *\n     * Note:\n     *  On Windows 7 every browser strangely skips the loading phase\n     *  when this method is called (because readyState never gets 3).\n     *\n     *  So keep this in mind if you rely on the phases which are\n     *  passed through. They will be \"opened\", \"sent\", \"abort\"\n     *  instead of normally \"opened\", \"sent\", \"loading\", \"abort\".\n     *\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    abort() {\n      this.__checkDisposed();\n\n      this.__abort = true;\n      this.__nativeXhr.abort();\n\n      if (this.__nativeXhr && this.readyState !== qx.bom.request.Xhr.DONE) {\n        this.readyState = this.__nativeXhr.readyState;\n      }\n      return this;\n    },\n\n    /**\n     * Helper to emit events and call the callback methods.\n     * @param event {String} The name of the event.\n     */\n    _emit(event) {\n      if (this[\"on\" + event]) {\n        this[\"on\" + event]();\n      }\n      this._emitter.emit(event, this);\n    },\n\n    /**\n     * Event handler for XHR event that fires at every state change.\n     *\n     * Replace with custom method to get informed about the communication progress.\n     */\n    onreadystatechange() {},\n\n    /**\n     * Event handler for XHR event \"load\" that is fired on successful retrieval.\n     *\n     * Note: This handler is called even when the HTTP status indicates an error.\n     *\n     * Replace with custom method to listen to the \"load\" event.\n     */\n    onload() {},\n\n    /**\n     * Event handler for XHR event \"loadend\" that is fired on retrieval.\n     *\n     * Note: This handler is called even when a network error (or similar)\n     * occurred.\n     *\n     * Replace with custom method to listen to the \"loadend\" event.\n     */\n    onloadend() {},\n\n    /**\n     * Event handler for XHR event \"error\" that is fired on a network error.\n     *\n     * Replace with custom method to listen to the \"error\" event.\n     */\n    onerror() {},\n\n    /**\n     * Event handler for XHR event \"abort\" that is fired when request\n     * is aborted.\n     *\n     * Replace with custom method to listen to the \"abort\" event.\n     */\n    onabort() {},\n\n    /**\n     * Event handler for XHR event \"timeout\" that is fired when timeout\n     * interval has passed.\n     *\n     * Replace with custom method to listen to the \"timeout\" event.\n     */\n    ontimeout() {},\n\n    /**\n     * Event handler for XHR event \"progress\".\n     *\n     * Replace with custom method to listen to the \"progress\" event.\n     */\n    onprogress() {},\n\n    /**\n     * Add an event listener for the given event name.\n     *\n     * @param name {String} The name of the event to listen to.\n     * @param listener {Function} The function to execute when the event is fired\n     * @param ctx {var?} The context of the listener.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    on(name, listener, ctx) {\n      this._emitter.on(name, listener, ctx);\n      return this;\n    },\n\n    /**\n     * Get a single response header from response.\n     *\n     * @param header {String}\n     *  Key of the header to get the value from.\n     * @return {String}\n     *  Response header.\n     */\n    getResponseHeader(header) {\n      this.__checkDisposed();\n\n      if (\n        qx.core.Environment.get(\"browser.documentmode\") === 9 &&\n        this.__nativeXhr.aborted\n      ) {\n        return \"\";\n      }\n\n      return this.__nativeXhr.getResponseHeader(header);\n    },\n\n    /**\n     * Get all response headers from response.\n     *\n     * @return {String} All response headers.\n     */\n    getAllResponseHeaders() {\n      this.__checkDisposed();\n\n      if (\n        qx.core.Environment.get(\"browser.documentmode\") === 9 &&\n        this.__nativeXhr.aborted\n      ) {\n        return \"\";\n      }\n\n      return this.__nativeXhr.getAllResponseHeaders();\n    },\n\n    /**\n     * Overrides the MIME type returned by the server\n     * and must be called before @send()@.\n     *\n     * Note:\n     *\n     * * IE doesn't support this method so in this case an Error is thrown.\n     * * after calling this method @getResponseHeader(\"Content-Type\")@\n     *   may return the original (Firefox 23, IE 10, Safari 6) or\n     *   the overridden content type (Chrome 28+, Opera 15+).\n     *\n     *\n     * @param mimeType {String} The mimeType for overriding.\n     * @return {qx.bom.request.Xhr} Self for chaining.\n     */\n    overrideMimeType(mimeType) {\n      this.__checkDisposed();\n\n      if (this.__nativeXhr.overrideMimeType) {\n        this.__nativeXhr.overrideMimeType(mimeType);\n      } else {\n        throw new Error(\"Native XHR object doesn't support overrideMimeType.\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Get wrapped native XMLHttpRequest (or equivalent).\n     *\n     * Can be XMLHttpRequest or ActiveX.\n     *\n     * @return {Object} XMLHttpRequest or equivalent.\n     */\n    getRequest() {\n      return this.__nativeXhr;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Dispose object and wrapped native XHR.\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\n     */\n    dispose() {\n      if (this.__disposed) {\n        return false;\n      }\n\n      window.clearTimeout(this.__timerId);\n\n      // Remove unload listener in IE. Aborting on unload is no longer required\n      // for this instance.\n      if (window.detachEvent) {\n        window.detachEvent(\"onunload\", this.__onUnloadBound);\n      }\n\n      // May fail in IE\n      try {\n        this.__nativeXhr.onreadystatechange;\n      } catch (PropertiesNotAccessable) {\n        return false;\n      }\n\n      // Clear out listeners\n      var noop = function () {};\n      this.__nativeXhr.onreadystatechange = noop;\n      this.__nativeXhr.onload = noop;\n      this.__nativeXhr.onerror = noop;\n      this.__nativeXhr.onprogress = noop;\n\n      // Abort any network activity\n      this.abort();\n\n      // Remove reference to native XHR\n      this.__nativeXhr = null;\n      this.responseText = null;\n\n      this.__disposed = true;\n      return true;\n    },\n\n    /**\n     * Check if the request has already beed disposed.\n     * @return {Boolean} <code>true</code>, if the request has been disposed.\n     */\n    isDisposed() {\n      return !!this.__disposed;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create XMLHttpRequest (or equivalent).\n     *\n     * @return {Object} XMLHttpRequest or equivalent.\n     *\n     * @ignore(XMLHttpRequest)\n     */\n    _createNativeXhr() {\n      var xhr = qx.core.Environment.get(\"io.xhr\");\n\n      if (xhr === \"xhr\") {\n        return new XMLHttpRequest();\n      }\n\n      if (xhr == \"activex\") {\n        return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n\n      qx.Bootstrap.error(this, \"No XHR support available.\");\n    },\n\n    /**\n     * Get protocol of requested URL.\n     *\n     * @return {String} The used protocol.\n     */\n    _getProtocol() {\n      var url = this.__url;\n      var protocolRe = /^(\\w+:)\\/\\//;\n\n      // Could be http:// from file://\n      if (url !== null && url.match) {\n        var match = url.match(protocolRe);\n        if (match && match[1]) {\n          return match[1];\n        }\n      }\n\n      return window.location.protocol;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Object} XMLHttpRequest or equivalent.\n     */\n    __nativeXhr: null,\n\n    /**\n     * @type {Boolean} Whether request is async.\n     */\n    __async: null,\n\n    /**\n     * @type {Function} Bound __onNativeReadyStateChange handler.\n     */\n    __onNativeReadyStateChangeBound: null,\n\n    /**\n     * @type {Function} Bound __onNativeAbort handler.\n     */\n    __onNativeAbortBound: null,\n\n    /**\n     * @type {Function} Bound __onNativeProgress handler.\n     */\n    __onNativeProgressBound: null,\n\n    /**\n     * @type {Function} Bound __onUnload handler.\n     */\n    __onUnloadBound: null,\n\n    /**\n     * @type {Function} Bound __onTimeout handler.\n     */\n    __onTimeoutBound: null,\n\n    /**\n     * @type {Boolean} Send flag\n     */\n    __send: null,\n\n    /**\n     * @type {String} Requested URL\n     */\n    __url: null,\n\n    /**\n     * @type {Boolean} Abort flag\n     */\n    __abort: null,\n\n    /**\n     * @type {Boolean} Timeout flag\n     */\n    __timeout: null,\n\n    /**\n     * @type {Boolean} Whether object has been disposed.\n     */\n    __disposed: null,\n\n    /**\n     * @type {Number} ID of timeout timer.\n     */\n    __timerId: null,\n\n    /**\n     * @type {Error} Error thrown on open, if any.\n     */\n    __openError: null,\n\n    /**\n     * @type {Boolean} Conditional get flag\n     */\n    __conditional: null,\n\n    /**\n     * @type {Array} Whitelist with all allowed data types for the request payload\n     */\n    __dataTypeWhiteList: null,\n\n    /**\n     * Init native XHR.\n     */\n    __initNativeXhr() {\n      // Create native XHR or equivalent and hold reference\n      this.__nativeXhr = this._createNativeXhr();\n\n      // Track native ready state changes\n      this.__nativeXhr.onreadystatechange =\n        this.__onNativeReadyStateChangeBound;\n\n      // Track native abort, when supported\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onabort) !== \"Undefined\") {\n        this.__nativeXhr.onabort = this.__onNativeAbortBound;\n      }\n\n      // Track native progress, when supported\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onprogress) !== \"Undefined\") {\n        this.__nativeXhr.onprogress = this.__onNativeProgressBound;\n\n        this.progress = {\n          lengthComputable: false,\n          loaded: 0,\n          total: 0\n        };\n      }\n\n      // Reset flags\n      this.__disposed = this.__send = this.__abort = false;\n\n      // Initialize data white list\n      this.__dataTypeWhiteList = [\n        \"ArrayBuffer\",\n        \"Blob\",\n        \"File\",\n        \"HTMLDocument\",\n        \"String\",\n        \"FormData\"\n      ];\n    },\n\n    /**\n     * Track native abort.\n     *\n     * In case the end user cancels the request by other\n     * means than calling abort().\n     */\n    __onNativeAbort() {\n      // When the abort that triggered this method was not a result from\n      // calling abort()\n      if (!this.__abort) {\n        this.abort();\n      }\n    },\n\n    /**\n     * Track native progress event.\n     @param e {Event} The native progress event.\n     */\n    __onNativeProgress(e) {\n      this.progress.lengthComputable = e.lengthComputable;\n      this.progress.loaded = e.loaded;\n      this.progress.total = e.total;\n      this._emit(\"progress\");\n    },\n\n    /**\n     * Handle native onreadystatechange.\n     *\n     * Calls user-defined function onreadystatechange on each\n     * state change and syncs the XHR status properties.\n     */\n    __onNativeReadyStateChange() {\n      var nxhr = this.__nativeXhr,\n        propertiesReadable = true;\n\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\n        qx.Bootstrap.debug(\n          qx.bom.request.Xhr,\n          \"Received native readyState: \" + nxhr.readyState\n        );\n      }\n\n      // BUGFIX: IE, Firefox\n      // onreadystatechange() is called twice for readyState OPENED.\n      //\n      // Call onreadystatechange only when readyState has changed.\n      if (this.readyState == nxhr.readyState) {\n        return;\n      }\n\n      // Sync current readyState\n      this.readyState = nxhr.readyState;\n\n      // BUGFIX: IE\n      // Superfluous onreadystatechange DONE when aborting OPENED\n      // without send flag\n      if (\n        this.readyState === qx.bom.request.Xhr.DONE &&\n        this.__abort &&\n        !this.__send\n      ) {\n        return;\n      }\n\n      // BUGFIX: IE\n      // IE fires onreadystatechange HEADERS_RECEIVED and LOADING when sync\n      //\n      // According to spec, only onreadystatechange OPENED and DONE should\n      // be fired.\n      if (!this.__async && (nxhr.readyState == 2 || nxhr.readyState == 3)) {\n        return;\n      }\n\n      // Default values according to spec.\n      this.status = 0;\n      this.statusText = this.responseText = \"\";\n      this.responseXML = null;\n      this.response = null;\n\n      if (this.readyState >= qx.bom.request.Xhr.HEADERS_RECEIVED) {\n        // In some browsers, XHR properties are not readable\n        // while request is in progress.\n        try {\n          this.status = nxhr.status;\n          this.statusText = nxhr.statusText;\n          this.response = nxhr.response;\n          if (this.responseType === \"\" || this.responseType === \"text\") {\n            this.responseText = nxhr.responseText;\n          }\n          if (this.responseType === \"\" || this.responseType === \"document\") {\n            this.responseXML = nxhr.responseXML;\n          }\n        } catch (XhrPropertiesNotReadable) {\n          propertiesReadable = false;\n        }\n\n        if (propertiesReadable) {\n          this.__normalizeStatus();\n          this.__normalizeResponseXML();\n        }\n      }\n\n      this.__readyStateChange();\n\n      // BUGFIX: IE\n      // Memory leak in XMLHttpRequest (on-page)\n      if (this.readyState == qx.bom.request.Xhr.DONE) {\n        // Allow garbage collecting of native XHR\n        if (nxhr) {\n          nxhr.onreadystatechange = function () {};\n        }\n      }\n    },\n\n    /**\n     * Handle readystatechange. Called internally when readyState is changed.\n     */\n    __readyStateChange() {\n      // Cancel timeout before invoking handlers because they may throw\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\n        // Request determined DONE. Cancel timeout.\n        window.clearTimeout(this.__timerId);\n      }\n\n      // Always fire \"readystatechange\"\n      this._emit(\"readystatechange\");\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\n        this.__readyStateChangeDone();\n      }\n    },\n\n    /**\n     * Handle readystatechange. Called internally by\n     * {@link #__readyStateChange} when readyState is DONE.\n     */\n    __readyStateChangeDone() {\n      // Fire \"timeout\" if timeout flag is set\n      if (this.__timeout) {\n        this._emit(\"timeout\");\n\n        // BUGFIX: Opera\n        // Since Opera does not fire \"error\" on network error, fire additional\n        // \"error\" on timeout (may well be related to network error)\n        if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n          this._emit(\"error\");\n        }\n\n        this.__timeout = false;\n\n        // Fire either \"abort\", \"load\" or \"error\"\n      } else {\n        if (this.__abort) {\n          this._emit(\"abort\");\n        } else {\n          if (this.__isNetworkError()) {\n            this._emit(\"error\");\n          } else {\n            this._emit(\"load\");\n          }\n        }\n      }\n\n      // Always fire \"onloadend\" when DONE\n      this._emit(\"loadend\");\n    },\n\n    /**\n     * Check for network error.\n     *\n     * @return {Boolean} Whether a network error occurred.\n     */\n    __isNetworkError() {\n      var error;\n\n      // Infer the XHR internal error flag from statusText when not aborted.\n      // See http://www.w3.org/TR/XMLHttpRequest2/#error-flag and\n      // http://www.w3.org/TR/XMLHttpRequest2/#the-statustext-attribute\n      //\n      // With file://, statusText is always falsy. Assume network error when\n      // response is empty.\n      if (this._getProtocol() === \"file:\") {\n        error = !this.responseText;\n      } else {\n        error = this.status === 0;\n      }\n\n      return error;\n    },\n\n    /**\n     * Handle faked timeout.\n     */\n    __onTimeout() {\n      // Basically, mimick http://www.w3.org/TR/XMLHttpRequest2/#timeout-error\n      var nxhr = this.__nativeXhr;\n      this.readyState = qx.bom.request.Xhr.DONE;\n\n      // Set timeout flag\n      this.__timeout = true;\n\n      // No longer consider request. Abort.\n      nxhr.aborted = true;\n      nxhr.abort();\n      this.responseText = \"\";\n      this.responseXML = null;\n\n      // Signal readystatechange\n      this.__readyStateChange();\n    },\n\n    /**\n     * Normalize status property across browsers.\n     */\n    __normalizeStatus() {\n      var isDone = this.readyState === qx.bom.request.Xhr.DONE;\n\n      // BUGFIX: Most browsers\n      // Most browsers tell status 0 when it should be 200 for local files\n      if (this._getProtocol() === \"file:\" && this.status === 0 && isDone) {\n        if (!this.__isNetworkError()) {\n          this.status = 200;\n        }\n      }\n\n      // BUGFIX: IE\n      // IE sometimes tells 1223 when it should be 204\n      if (this.status === 1223) {\n        this.status = 204;\n      }\n\n      // BUGFIX: Opera\n      // Opera tells 0 for conditional requests when it should be 304\n      //\n      // Detect response to conditional request that signals fresh cache.\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n        if (\n          isDone && // Done\n          this.__conditional && // Conditional request\n          !this.__abort && // Not aborted\n          this.status === 0 // But status 0!\n        ) {\n          this.status = 304;\n        }\n      }\n    },\n\n    /**\n     * Normalize responseXML property across browsers.\n     */\n    __normalizeResponseXML() {\n      // BUGFIX: IE\n      // IE does not recognize +xml extension, resulting in empty responseXML.\n      //\n      // Check if Content-Type is +xml, verify missing responseXML then parse\n      // responseText as XML.\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        (this.getResponseHeader(\"Content-Type\") || \"\").match(\n          /[^\\/]+\\/[^\\+]+\\+xml/\n        ) &&\n        this.responseXML &&\n        !this.responseXML.documentElement\n      ) {\n        var dom = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n        dom.async = false;\n        dom.validateOnParse = false;\n        dom.loadXML(this.responseText);\n        this.responseXML = dom;\n      }\n    },\n\n    /**\n     * Handler for native unload event.\n     */\n    __onUnload() {\n      try {\n        // Abort and dispose\n        if (this) {\n          this.dispose();\n        }\n      } catch (e) {}\n    },\n\n    /**\n     * Helper method to determine whether browser supports reusing the\n     * same native XHR to send more requests.\n     * @return {Boolean} <code>true</code> if request object reuse is supported\n     */\n    __supportsManyRequests() {\n      var name = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"browser.version\");\n\n      return !(\n        (name == \"mshtml\" && version < 9) ||\n        (name == \"gecko\" && version < 3.5)\n      );\n    },\n\n    /**\n     * Throw when already disposed.\n     */\n    __checkDisposed() {\n      if (this.__disposed) {\n        throw new Error(\"Already disposed\");\n      }\n    }\n  },\n\n  defer() {\n    qx.core.Environment.add(\"qx.debug.io\", false);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,oBAApB,EAA0C;IACxCC,MAAM,EAAEC,MADgC;IAExCC,SAAS,EAAE,CAACP,EAAE,CAACQ,IAAH,CAAQC,WAAT,CAF6B;IAIxCC,SAJwC,uBAI5B;MACV,IAAIC,SAAS,GAAGX,EAAE,CAACC,SAAH,CAAaW,IAAb,CAAkB,KAAKC,SAAvB,EAAmD,IAAnD,CAAhB,CADU,CAGV;MACA;;MACA,IACEb,EAAE,CAACc,KAAH,IACAd,EAAE,CAACc,KAAH,CAASC,WADT,IAEAf,EAAE,CAACc,KAAH,CAASC,WAAT,CAAqBC,aAHvB,EAIE;QACA,KAAKC,SAAL,GACEjB,EAAE,CAACc,KAAH,CAASC,WAAT,CAAqBC,aAArB,CAAmCL,SAAnC,CADF;MAED,CAPD,MAOO;QACL,KAAKM,SAAL,GAAuCN,SAAvC;MACD;;MAED,KAAKO,SAAL,GAA4BlB,EAAE,CAACC,SAAH,CAAaW,IAAb,CAAkB,KAAKO,SAAvB,EAAwC,IAAxC,CAA5B;MACA,KAAKC,SAAL,GAA+BpB,EAAE,CAACC,SAAH,CAAaW,IAAb,CAC7B,KAAKS,SADwB,EAE7B,IAF6B,CAA/B;MAKA,KAAKC,SAAL,GAAwBtB,EAAE,CAACC,SAAH,CAAaW,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"
}