{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Object",
    "implement",
    "core",
    "IDisposable",
    "construct",
    "boundFunc",
    "bind",
    "__onNativeReadyStateChange",
    "event",
    "GlobalError",
    "observeMethod",
    "__onNativeReadyStateChangeBound",
    "__onNativeAbortBound",
    "__onNativeAbort",
    "__onNativeProgressBound",
    "__onNativeProgress",
    "__onTimeoutBound",
    "__onTimeout",
    "__initNativeXhr",
    "_emitter",
    "Emitter",
    "window",
    "attachEvent",
    "__onUnloadBound",
    "__onUnload",
    "statics",
    "UNSENT",
    "OPENED",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "events",
    "readystatechange",
    "error",
    "loadend",
    "timeout",
    "abort",
    "load",
    "progress",
    "members",
    "readyState",
    "responseText",
    "response",
    "responseXML",
    "status",
    "statusText",
    "responseType",
    "open",
    "method",
    "url",
    "async",
    "user",
    "password",
    "__checkDisposed",
    "Error",
    "__abort",
    "__send",
    "__conditional",
    "__url",
    "__async",
    "__supportsManyRequests",
    "bom",
    "request",
    "Xhr",
    "dispose",
    "__nativeXhr",
    "onreadystatechange",
    "Environment",
    "get",
    "debug",
    "OpenError",
    "util",
    "Request",
    "isCrossDomain",
    "__openError",
    "XDomainRequest",
    "onerror",
    "_emit",
    "setTimeout",
    "__disposed",
    "setRequestHeader",
    "parseInt",
    "key",
    "value",
    "send",
    "data",
    "__timerId",
    "dataType",
    "getClass",
    "__dataTypeWhiteList",
    "indexOf",
    "toString",
    "SendError",
    "_getProtocol",
    "__readyStateChange",
    "that",
    "emit",
    "onload",
    "onloadend",
    "onabort",
    "ontimeout",
    "onprogress",
    "on",
    "name",
    "listener",
    "ctx",
    "getResponseHeader",
    "header",
    "aborted",
    "getAllResponseHeaders",
    "overrideMimeType",
    "mimeType",
    "getRequest",
    "clearTimeout",
    "detachEvent",
    "PropertiesNotAccessable",
    "noop",
    "isDisposed",
    "_createNativeXhr",
    "xhr",
    "XMLHttpRequest",
    "ActiveXObject",
    "protocolRe",
    "match",
    "location",
    "protocol",
    "__timeout",
    "__P_147_8",
    "lengthComputable",
    "loaded",
    "total",
    "__P_147_3",
    "__P_147_5",
    "e",
    "__P_147_0",
    "nxhr",
    "propertiesReadable",
    "XhrPropertiesNotReadable",
    "__normalizeStatus",
    "__normalizeResponseXML",
    "__P_147_23",
    "__readyStateChangeDone",
    "__P_147_27",
    "__isNetworkError",
    "__P_147_28",
    "__P_147_7",
    "__P_147_25",
    "isDone",
    "__P_147_26",
    "documentElement",
    "dom",
    "validateOnParse",
    "loadXML",
    "__P_147_10",
    "__P_147_17",
    "version",
    "__P_147_11",
    "defer",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/request/Xhr.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tristan Koch (tristankoch)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A wrapper of the XMLHttpRequest host object (or equivalent). The interface is\r\n * similar to <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.\r\n *\r\n * Hides browser inconsistencies and works around bugs found in popular\r\n * implementations.\r\n *\r\n * <div class=\"desktop\">\r\n * Example:\r\n *\r\n * <pre class=\"javascript\">\r\n *  var req = new qx.bom.request.Xhr();\r\n *  req.onload = function() {\r\n *    // Handle data received\r\n *    req.responseText;\r\n *  }\r\n *\r\n *  req.open(\"GET\", url);\r\n *  req.send();\r\n * </pre>\r\n *\r\n * Example for binary data:\r\n *\r\n * <pre class=\"javascript\">\r\n *  var req = new qx.bom.request.Xhr();\r\n *  req.onload = function() {\r\n *    // Handle data received\r\n *    var blob = req.response;\r\n *    img.src = URL.createObjectURL(blob);\r\n *  }\r\n *\r\n *  req.open(\"GET\", url);\r\n *  req.responseType = \"blob\";\r\n *  req.send();\r\n * </pre>\r\n\r\n * </div>\r\n *\r\n * @ignore(XDomainRequest)\r\n * @ignore(qx.event, qx.event.GlobalError.*)\r\n *\r\n * @require(qx.bom.request.Xhr#open)\r\n * @require(qx.bom.request.Xhr#send)\r\n * @require(qx.bom.request.Xhr#on)\r\n * @require(qx.bom.request.Xhr#onreadystatechange)\r\n * @require(qx.bom.request.Xhr#onload)\r\n * @require(qx.bom.request.Xhr#onloadend)\r\n * @require(qx.bom.request.Xhr#onerror)\r\n * @require(qx.bom.request.Xhr#onabort)\r\n * @require(qx.bom.request.Xhr#ontimeout)\r\n * @require(qx.bom.request.Xhr#setRequestHeader)\r\n * @require(qx.bom.request.Xhr#getAllResponseHeaders)\r\n * @require(qx.bom.request.Xhr#getRequest)\r\n * @require(qx.bom.request.Xhr#overrideMimeType)\r\n * @require(qx.bom.request.Xhr#dispose)\r\n * @require(qx.bom.request.Xhr#isDisposed)\r\n *\r\n * @group (IO)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.request.Xhr\", {\r\n  extend: Object,\r\n  implement: [qx.core.IDisposable],\r\n\r\n  construct() {\r\n    var boundFunc = qx.Bootstrap.bind(this.__onNativeReadyStateChange, this);\r\n\r\n    // GlobalError shouldn't be included in qx.Website builds so use it\r\n    // if it's available but otherwise ignore it (see ignore stated above).\r\n    if (\r\n      qx.event &&\r\n      qx.event.GlobalError &&\r\n      qx.event.GlobalError.observeMethod\r\n    ) {\r\n      this.__onNativeReadyStateChangeBound =\r\n        qx.event.GlobalError.observeMethod(boundFunc);\r\n    } else {\r\n      this.__onNativeReadyStateChangeBound = boundFunc;\r\n    }\r\n\r\n    this.__onNativeAbortBound = qx.Bootstrap.bind(this.__onNativeAbort, this);\r\n    this.__onNativeProgressBound = qx.Bootstrap.bind(\r\n      this.__onNativeProgress,\r\n      this\r\n    );\r\n\r\n    this.__onTimeoutBound = qx.Bootstrap.bind(this.__onTimeout, this);\r\n\r\n    this.__initNativeXhr();\r\n    this._emitter = new qx.event.Emitter();\r\n\r\n    // BUGFIX: IE\r\n    // IE keeps connections alive unless aborted on unload\r\n    if (window.attachEvent) {\r\n      this.__onUnloadBound = qx.Bootstrap.bind(this.__onUnload, this);\r\n      window.attachEvent(\"onunload\", this.__onUnloadBound);\r\n    }\r\n  },\r\n\r\n  statics: {\r\n    UNSENT: 0,\r\n    OPENED: 1,\r\n    HEADERS_RECEIVED: 2,\r\n    LOADING: 3,\r\n    DONE: 4\r\n  },\r\n\r\n  events: {\r\n    /** Fired at ready state changes. */\r\n    readystatechange: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired on error. */\r\n    error: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired at loadend. */\r\n    loadend: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired on timeouts. */\r\n    timeout: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired when the request is aborted. */\r\n    abort: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired on successful retrieval. */\r\n    load: \"qx.bom.request.Xhr\",\r\n\r\n    /** Fired on progress. */\r\n    progress: \"qx.bom.request.Xhr\"\r\n  },\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * @type {Number} Ready state.\r\n     *\r\n     * States can be:\r\n     * UNSENT:           0,\r\n     * OPENED:           1,\r\n     * HEADERS_RECEIVED: 2,\r\n     * LOADING:          3,\r\n     * DONE:             4\r\n     */\r\n    readyState: 0,\r\n\r\n    /**\r\n     * @type {String} The response of the request as text.\r\n     */\r\n    responseText: \"\",\r\n\r\n    /**\r\n     * @type {Object} The response of the request as a Document object.\r\n     */\r\n    response: null,\r\n\r\n    /**\r\n     * @type {Object} The response of the request as object.\r\n     */\r\n    responseXML: null,\r\n\r\n    /**\r\n     * @type {Number} The HTTP status code.\r\n     */\r\n    status: 0,\r\n\r\n    /**\r\n     * @type {String} The HTTP status text.\r\n     */\r\n    statusText: \"\",\r\n\r\n    /**\r\n     * @type {String} The response Type to use in the request\r\n     */\r\n    responseType: \"\",\r\n    /**\r\n     * @type {Number} Timeout limit in milliseconds.\r\n     *\r\n     * 0 (default) means no timeout. Not supported for synchronous requests.\r\n     */\r\n    timeout: 0,\r\n\r\n    /**\r\n     * @type {Object} Wrapper to store data of the progress event which contains the keys\r\n       <code>lengthComputable</code>, <code>loaded</code> and <code>total</code>\r\n     */\r\n    progress: null,\r\n\r\n    /**\r\n     * Initializes (prepares) request.\r\n     *\r\n     * @ignore(XDomainRequest)\r\n     *\r\n     * @param method {String?\"GET\"}\r\n     *  The HTTP method to use.\r\n     * @param url {String}\r\n     *  The URL to which to send the request.\r\n     * @param async {Boolean?true}\r\n     *  Whether or not to perform the operation asynchronously.\r\n     * @param user {String?null}\r\n     *  Optional user name to use for authentication purposes.\r\n     * @param password {String?null}\r\n     *  Optional password to use for authentication purposes.\r\n     */\r\n    open(method, url, async, user, password) {\r\n      this.__checkDisposed();\r\n\r\n      // Mimick native behavior\r\n      if (typeof url === \"undefined\") {\r\n        throw new Error(\"Not enough arguments\");\r\n      } else if (typeof method === \"undefined\") {\r\n        method = \"GET\";\r\n      }\r\n\r\n      // Reset flags that may have been set on previous request\r\n      this.__abort = false;\r\n      this.__send = false;\r\n      this.__conditional = false;\r\n\r\n      // Store URL for later checks\r\n      this.__url = url;\r\n\r\n      if (typeof async == \"undefined\") {\r\n        async = true;\r\n      }\r\n      this.__async = async;\r\n      // Default values according to spec.\r\n      this.status = 0;\r\n      this.statusText = this.responseText = \"\";\r\n      this.responseXML = null;\r\n      this.response = null;\r\n\r\n      // BUGFIX\r\n      // IE < 9 and FF < 3.5 cannot reuse the native XHR to issue many requests\r\n      if (\r\n        !this.__supportsManyRequests() &&\r\n        this.readyState > qx.bom.request.Xhr.UNSENT\r\n      ) {\r\n        // XmlHttpRequest Level 1 requires open() to abort any pending requests\r\n        // associated to the object. Since we're dealing with a new object here,\r\n        // we have to emulate this behavior. Moreover, allow old native XHR to be garbage collected\r\n        //\r\n        // Dispose and abort.\r\n        //\r\n        this.dispose();\r\n\r\n        // Replace the underlying native XHR with a new one that can\r\n        // be used to issue new requests.\r\n        this.__initNativeXhr();\r\n      }\r\n\r\n      // Restore handler in case it was removed before\r\n      this.__nativeXhr.onreadystatechange =\r\n        this.__onNativeReadyStateChangeBound;\r\n\r\n      try {\r\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\r\n          qx.Bootstrap.debug(\r\n            qx.bom.request.Xhr,\r\n            \"Open native request with method: \" +\r\n              method +\r\n              \", url: \" +\r\n              url +\r\n              \", async: \" +\r\n              async\r\n          );\r\n        }\r\n\r\n        this.__nativeXhr.open(method, url, async, user, password);\r\n\r\n        // BUGFIX: IE, Firefox < 3.5\r\n        // Some browsers do not support Cross-Origin Resource Sharing (CORS)\r\n        // for XMLHttpRequest. Instead, an exception is thrown even for async requests\r\n        // if URL is cross-origin (as per XHR level 1). Use the proprietary XDomainRequest\r\n        // if available (supports CORS) and handle error (if there is one) this\r\n        // way. Otherwise just assume network error.\r\n        //\r\n        // Basically, this allows to detect network errors.\r\n      } catch (OpenError) {\r\n        // Only work around exceptions caused by cross domain request attempts\r\n        if (!qx.util.Request.isCrossDomain(url)) {\r\n          // Is same origin\r\n          throw OpenError;\r\n        }\r\n\r\n        if (!this.__async) {\r\n          this.__openError = OpenError;\r\n        }\r\n\r\n        if (this.__async) {\r\n          // Try again with XDomainRequest\r\n          // (Success case not handled on purpose)\r\n          // - IE 9\r\n          if (window.XDomainRequest) {\r\n            this.readyState = 4;\r\n            this.__nativeXhr = new window.XDomainRequest();\r\n            this.__nativeXhr.onerror = qx.Bootstrap.bind(function () {\r\n              this._emit(\"readystatechange\");\r\n              this._emit(\"error\");\r\n              this._emit(\"loadend\");\r\n            }, this);\r\n\r\n            if (qx.core.Environment.get(\"qx.debug.io\")) {\r\n              qx.Bootstrap.debug(\r\n                qx.bom.request.Xhr,\r\n                \"Retry open native request with method: \" +\r\n                  method +\r\n                  \", url: \" +\r\n                  url +\r\n                  \", async: \" +\r\n                  async\r\n              );\r\n            }\r\n            this.__nativeXhr.open(method, url, async, user, password);\r\n            return;\r\n          }\r\n\r\n          // Access denied\r\n          // - IE 6: -2146828218\r\n          // - IE 7: -2147024891\r\n          // - Legacy Firefox\r\n          window.setTimeout(\r\n            qx.Bootstrap.bind(function () {\r\n              if (this.__disposed) {\r\n                return;\r\n              }\r\n              this.readyState = 4;\r\n              this._emit(\"readystatechange\");\r\n              this._emit(\"error\");\r\n              this._emit(\"loadend\");\r\n            }, this)\r\n          );\r\n        }\r\n      }\r\n\r\n      // BUGFIX: IE < 9\r\n      // IE < 9 tends to cache overly aggressive. This may result in stale\r\n      // representations. Force validating freshness of cached representation.\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") === \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 9 &&\r\n        this.__nativeXhr.readyState > 0\r\n      ) {\r\n        this.__nativeXhr.setRequestHeader(\"If-Modified-Since\", \"-1\");\r\n      }\r\n\r\n      // BUGFIX: Firefox\r\n      // Firefox < 4 fails to trigger onreadystatechange OPENED for sync requests\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") === \"gecko\" &&\r\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 2 &&\r\n        !this.__async\r\n      ) {\r\n        // Native XHR is already set to readyState DONE. Fake readyState\r\n        // and call onreadystatechange manually.\r\n        this.readyState = qx.bom.request.Xhr.OPENED;\r\n        this._emit(\"readystatechange\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets an HTTP request header to be used by the request.\r\n     *\r\n     * Note: The request must be initialized before using this method.\r\n     *\r\n     * @param key {String}\r\n     *  The name of the header whose value is to be set.\r\n     * @param value {String}\r\n     *  The value to set as the body of the header.\r\n     * @return {qx.bom.request.Xhr} Self for chaining.\r\n     */\r\n    setRequestHeader(key, value) {\r\n      this.__checkDisposed();\r\n\r\n      // Detect conditional requests\r\n      if (\r\n        key == \"If-Match\" ||\r\n        key == \"If-Modified-Since\" ||\r\n        key == \"If-None-Match\" ||\r\n        key == \"If-Range\"\r\n      ) {\r\n        this.__conditional = true;\r\n      }\r\n\r\n      this.__nativeXhr.setRequestHeader(key, value);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sends request.\r\n     *\r\n     * @param data {String|Document?null}\r\n     *  Optional data to send.\r\n     * @return {qx.bom.request.Xhr} Self for chaining.\r\n     */\r\n    send(data) {\r\n      this.__checkDisposed();\r\n\r\n      // BUGFIX: IE & Firefox < 3.5\r\n      // For sync requests, some browsers throw error on open()\r\n      // while it should be on send()\r\n      //\r\n      if (!this.__async && this.__openError) {\r\n        throw this.__openError;\r\n      }\r\n\r\n      // BUGFIX: Opera\r\n      // On network error, Opera stalls at readyState HEADERS_RECEIVED\r\n      // This violates the spec. See here http://www.w3.org/TR/XMLHttpRequest2/#send\r\n      // (Section: If there is a network error)\r\n      //\r\n      // To fix, assume a default timeout of 10 seconds. Note: The \"error\"\r\n      // event will be fired correctly, because the error flag is inferred\r\n      // from the statusText property. Of course, compared to other\r\n      // browsers there is an additional call to ontimeout(), but this call\r\n      // should not harm.\r\n      //\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") === \"opera\" &&\r\n        this.timeout === 0\r\n      ) {\r\n        this.timeout = 10000;\r\n      }\r\n\r\n      // Timeout\r\n      if (this.timeout > 0) {\r\n        this.__timerId = window.setTimeout(this.__onTimeoutBound, this.timeout);\r\n      }\r\n\r\n      // BUGFIX: Firefox 2\r\n      // \"NS_ERROR_XPC_NOT_ENOUGH_ARGS\" when calling send() without arguments\r\n      data = typeof data == \"undefined\" ? null : data;\r\n\r\n      // Whitelisting the allowed data types regarding the spec\r\n      // -> http://www.w3.org/TR/XMLHttpRequest2/#the-send-method\r\n      // All other data input will be transformed to a string to e.g. prevent\r\n      // an SendError in Firefox (at least <= 31) and to harmonize it with the\r\n      // behaviour of all other browsers (Chrome, IE and Safari)\r\n      var dataType = qx.Bootstrap.getClass(data);\r\n      data =\r\n        data !== null && this.__dataTypeWhiteList.indexOf(dataType) === -1\r\n          ? data.toString()\r\n          : data;\r\n\r\n      // Some browsers may throw an error when sending of async request fails.\r\n      // This violates the spec which states only sync requests should.\r\n      try {\r\n        if (qx.core.Environment.get(\"qx.debug.io\")) {\r\n          qx.Bootstrap.debug(qx.bom.request.Xhr, \"Send native request\");\r\n        }\r\n        if (this.__async) {\r\n          this.__nativeXhr.responseType = this.responseType;\r\n        }\r\n        this.__nativeXhr.send(data);\r\n      } catch (SendError) {\r\n        if (!this.__async) {\r\n          throw SendError;\r\n        }\r\n\r\n        // BUGFIX\r\n        // Some browsers throws error when file not found via file:// protocol.\r\n        // Synthesize readyState changes.\r\n        if (this._getProtocol() === \"file:\") {\r\n          this.readyState = 2;\r\n          this.__readyStateChange();\r\n\r\n          var that = this;\r\n          window.setTimeout(function () {\r\n            if (that.__disposed) {\r\n              return;\r\n            }\r\n            that.readyState = 3;\r\n            that.__readyStateChange();\r\n\r\n            that.readyState = 4;\r\n            that.__readyStateChange();\r\n          });\r\n        }\r\n      }\r\n\r\n      // BUGFIX: Firefox\r\n      // Firefox fails to trigger onreadystatechange DONE for sync requests\r\n      if (qx.core.Environment.get(\"engine.name\") === \"gecko\" && !this.__async) {\r\n        // Properties all set, only missing native readystatechange event\r\n        this.__onNativeReadyStateChange();\r\n      }\r\n\r\n      // Set send flag\r\n      this.__send = true;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Abort request - i.e. cancels any network activity.\r\n     *\r\n     * Note:\r\n     *  On Windows 7 every browser strangely skips the loading phase\r\n     *  when this method is called (because readyState never gets 3).\r\n     *\r\n     *  So keep this in mind if you rely on the phases which are\r\n     *  passed through. They will be \"opened\", \"sent\", \"abort\"\r\n     *  instead of normally \"opened\", \"sent\", \"loading\", \"abort\".\r\n     *\r\n     * @return {qx.bom.request.Xhr} Self for chaining.\r\n     */\r\n    abort() {\r\n      this.__checkDisposed();\r\n\r\n      this.__abort = true;\r\n      this.__nativeXhr.abort();\r\n\r\n      if (this.__nativeXhr && this.readyState !== qx.bom.request.Xhr.DONE) {\r\n        this.readyState = this.__nativeXhr.readyState;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Helper to emit events and call the callback methods.\r\n     * @param event {String} The name of the event.\r\n     */\r\n    _emit(event) {\r\n      if (this[\"on\" + event]) {\r\n        this[\"on\" + event]();\r\n      }\r\n      this._emitter.emit(event, this);\r\n    },\r\n\r\n    /**\r\n     * Event handler for XHR event that fires at every state change.\r\n     *\r\n     * Replace with custom method to get informed about the communication progress.\r\n     */\r\n    onreadystatechange() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"load\" that is fired on successful retrieval.\r\n     *\r\n     * Note: This handler is called even when the HTTP status indicates an error.\r\n     *\r\n     * Replace with custom method to listen to the \"load\" event.\r\n     */\r\n    onload() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"loadend\" that is fired on retrieval.\r\n     *\r\n     * Note: This handler is called even when a network error (or similar)\r\n     * occurred.\r\n     *\r\n     * Replace with custom method to listen to the \"loadend\" event.\r\n     */\r\n    onloadend() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"error\" that is fired on a network error.\r\n     *\r\n     * Replace with custom method to listen to the \"error\" event.\r\n     */\r\n    onerror() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"abort\" that is fired when request\r\n     * is aborted.\r\n     *\r\n     * Replace with custom method to listen to the \"abort\" event.\r\n     */\r\n    onabort() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"timeout\" that is fired when timeout\r\n     * interval has passed.\r\n     *\r\n     * Replace with custom method to listen to the \"timeout\" event.\r\n     */\r\n    ontimeout() {},\r\n\r\n    /**\r\n     * Event handler for XHR event \"progress\".\r\n     *\r\n     * Replace with custom method to listen to the \"progress\" event.\r\n     */\r\n    onprogress() {},\r\n\r\n    /**\r\n     * Add an event listener for the given event name.\r\n     *\r\n     * @param name {String} The name of the event to listen to.\r\n     * @param listener {Function} The function to execute when the event is fired\r\n     * @param ctx {var?} The context of the listener.\r\n     * @return {qx.bom.request.Xhr} Self for chaining.\r\n     */\r\n    on(name, listener, ctx) {\r\n      this._emitter.on(name, listener, ctx);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get a single response header from response.\r\n     *\r\n     * @param header {String}\r\n     *  Key of the header to get the value from.\r\n     * @return {String}\r\n     *  Response header.\r\n     */\r\n    getResponseHeader(header) {\r\n      this.__checkDisposed();\r\n\r\n      if (\r\n        qx.core.Environment.get(\"browser.documentmode\") === 9 &&\r\n        this.__nativeXhr.aborted\r\n      ) {\r\n        return \"\";\r\n      }\r\n\r\n      return this.__nativeXhr.getResponseHeader(header);\r\n    },\r\n\r\n    /**\r\n     * Get all response headers from response.\r\n     *\r\n     * @return {String} All response headers.\r\n     */\r\n    getAllResponseHeaders() {\r\n      this.__checkDisposed();\r\n\r\n      if (\r\n        qx.core.Environment.get(\"browser.documentmode\") === 9 &&\r\n        this.__nativeXhr.aborted\r\n      ) {\r\n        return \"\";\r\n      }\r\n\r\n      return this.__nativeXhr.getAllResponseHeaders();\r\n    },\r\n\r\n    /**\r\n     * Overrides the MIME type returned by the server\r\n     * and must be called before @send()@.\r\n     *\r\n     * Note:\r\n     *\r\n     * * IE doesn't support this method so in this case an Error is thrown.\r\n     * * after calling this method @getResponseHeader(\"Content-Type\")@\r\n     *   may return the original (Firefox 23, IE 10, Safari 6) or\r\n     *   the overridden content type (Chrome 28+, Opera 15+).\r\n     *\r\n     *\r\n     * @param mimeType {String} The mimeType for overriding.\r\n     * @return {qx.bom.request.Xhr} Self for chaining.\r\n     */\r\n    overrideMimeType(mimeType) {\r\n      this.__checkDisposed();\r\n\r\n      if (this.__nativeXhr.overrideMimeType) {\r\n        this.__nativeXhr.overrideMimeType(mimeType);\r\n      } else {\r\n        throw new Error(\"Native XHR object doesn't support overrideMimeType.\");\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get wrapped native XMLHttpRequest (or equivalent).\r\n     *\r\n     * Can be XMLHttpRequest or ActiveX.\r\n     *\r\n     * @return {Object} XMLHttpRequest or equivalent.\r\n     */\r\n    getRequest() {\r\n      return this.__nativeXhr;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Dispose object and wrapped native XHR.\r\n     * @return {Boolean} <code>true</code> if the object was successfully disposed\r\n     */\r\n    dispose() {\r\n      if (this.__disposed) {\r\n        return false;\r\n      }\r\n\r\n      window.clearTimeout(this.__timerId);\r\n\r\n      // Remove unload listener in IE. Aborting on unload is no longer required\r\n      // for this instance.\r\n      if (window.detachEvent) {\r\n        window.detachEvent(\"onunload\", this.__onUnloadBound);\r\n      }\r\n\r\n      // May fail in IE\r\n      try {\r\n        this.__nativeXhr.onreadystatechange;\r\n      } catch (PropertiesNotAccessable) {\r\n        return false;\r\n      }\r\n\r\n      // Clear out listeners\r\n      var noop = function () {};\r\n      this.__nativeXhr.onreadystatechange = noop;\r\n      this.__nativeXhr.onload = noop;\r\n      this.__nativeXhr.onerror = noop;\r\n      this.__nativeXhr.onprogress = noop;\r\n\r\n      // Abort any network activity\r\n      this.abort();\r\n\r\n      // Remove reference to native XHR\r\n      this.__nativeXhr = null;\r\n      this.responseText = null;\r\n\r\n      this.__disposed = true;\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the request has already beed disposed.\r\n     * @return {Boolean} <code>true</code>, if the request has been disposed.\r\n     */\r\n    isDisposed() {\r\n      return !!this.__disposed;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROTECTED\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Create XMLHttpRequest (or equivalent).\r\n     *\r\n     * @return {Object} XMLHttpRequest or equivalent.\r\n     *\r\n     * @ignore(XMLHttpRequest)\r\n     */\r\n    _createNativeXhr() {\r\n      var xhr = qx.core.Environment.get(\"io.xhr\");\r\n\r\n      if (xhr === \"xhr\") {\r\n        return new XMLHttpRequest();\r\n      }\r\n\r\n      if (xhr == \"activex\") {\r\n        return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n      }\r\n\r\n      qx.Bootstrap.error(this, \"No XHR support available.\");\r\n    },\r\n\r\n    /**\r\n     * Get protocol of requested URL.\r\n     *\r\n     * @return {String} The used protocol.\r\n     */\r\n    _getProtocol() {\r\n      var url = this.__url;\r\n      var protocolRe = /^(\\w+:)\\/\\//;\r\n\r\n      // Could be http:// from file://\r\n      if (url !== null && url.match) {\r\n        var match = url.match(protocolRe);\r\n        if (match && match[1]) {\r\n          return match[1];\r\n        }\r\n      }\r\n\r\n      return window.location.protocol;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PRIVATE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * @type {Object} XMLHttpRequest or equivalent.\r\n     */\r\n    __nativeXhr: null,\r\n\r\n    /**\r\n     * @type {Boolean} Whether request is async.\r\n     */\r\n    __async: null,\r\n\r\n    /**\r\n     * @type {Function} Bound __onNativeReadyStateChange handler.\r\n     */\r\n    __onNativeReadyStateChangeBound: null,\r\n\r\n    /**\r\n     * @type {Function} Bound __onNativeAbort handler.\r\n     */\r\n    __onNativeAbortBound: null,\r\n\r\n    /**\r\n     * @type {Function} Bound __onNativeProgress handler.\r\n     */\r\n    __onNativeProgressBound: null,\r\n\r\n    /**\r\n     * @type {Function} Bound __onUnload handler.\r\n     */\r\n    __onUnloadBound: null,\r\n\r\n    /**\r\n     * @type {Function} Bound __onTimeout handler.\r\n     */\r\n    __onTimeoutBound: null,\r\n\r\n    /**\r\n     * @type {Boolean} Send flag\r\n     */\r\n    __send: null,\r\n\r\n    /**\r\n     * @type {String} Requested URL\r\n     */\r\n    __url: null,\r\n\r\n    /**\r\n     * @type {Boolean} Abort flag\r\n     */\r\n    __abort: null,\r\n\r\n    /**\r\n     * @type {Boolean} Timeout flag\r\n     */\r\n    __timeout: null,\r\n\r\n    /**\r\n     * @type {Boolean} Whether object has been disposed.\r\n     */\r\n    __disposed: null,\r\n\r\n    /**\r\n     * @type {Number} ID of timeout timer.\r\n     */\r\n    __timerId: null,\r\n\r\n    /**\r\n     * @type {Error} Error thrown on open, if any.\r\n     */\r\n    __openError: null,\r\n\r\n    /**\r\n     * @type {Boolean} Conditional get flag\r\n     */\r\n    __conditional: null,\r\n\r\n    /**\r\n     * @type {Array} Whitelist with all allowed data types for the request payload\r\n     */\r\n    __dataTypeWhiteList: null,\r\n\r\n    /**\r\n     * Init native XHR.\r\n     */\r\n    __initNativeXhr() {\r\n      // Create native XHR or equivalent and hold reference\r\n      this.__nativeXhr = this._createNativeXhr();\r\n\r\n      // Track native ready state changes\r\n      this.__nativeXhr.onreadystatechange =\r\n        this.__onNativeReadyStateChangeBound;\r\n\r\n      // Track native abort, when supported\r\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onabort) !== \"Undefined\") {\r\n        this.__nativeXhr.onabort = this.__onNativeAbortBound;\r\n      }\r\n\r\n      // Track native progress, when supported\r\n      if (qx.Bootstrap.getClass(this.__nativeXhr.onprogress) !== \"Undefined\") {\r\n        this.__nativeXhr.onprogress = this.__onNativeProgressBound;\r\n\r\n        this.progress = {\r\n          lengthComputable: false,\r\n          loaded: 0,\r\n          total: 0\r\n        };\r\n      }\r\n\r\n      // Reset flags\r\n      this.__disposed = this.__send = this.__abort = false;\r\n\r\n      // Initialize data white list\r\n      this.__dataTypeWhiteList = [\r\n        \"ArrayBuffer\",\r\n        \"Blob\",\r\n        \"File\",\r\n        \"HTMLDocument\",\r\n        \"String\",\r\n        \"FormData\"\r\n      ];\r\n    },\r\n\r\n    /**\r\n     * Track native abort.\r\n     *\r\n     * In case the end user cancels the request by other\r\n     * means than calling abort().\r\n     */\r\n    __onNativeAbort() {\r\n      // When the abort that triggered this method was not a result from\r\n      // calling abort()\r\n      if (!this.__abort) {\r\n        this.abort();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Track native progress event.\r\n     @param e {Event} The native progress event.\r\n     */\r\n    __onNativeProgress(e) {\r\n      this.progress.lengthComputable = e.lengthComputable;\r\n      this.progress.loaded = e.loaded;\r\n      this.progress.total = e.total;\r\n      this._emit(\"progress\");\r\n    },\r\n\r\n    /**\r\n     * Handle native onreadystatechange.\r\n     *\r\n     * Calls user-defined function onreadystatechange on each\r\n     * state change and syncs the XHR status properties.\r\n     */\r\n    __onNativeReadyStateChange() {\r\n      var nxhr = this.__nativeXhr,\r\n        propertiesReadable = true;\r\n\r\n      if (qx.core.Environment.get(\"qx.debug.io\")) {\r\n        qx.Bootstrap.debug(\r\n          qx.bom.request.Xhr,\r\n          \"Received native readyState: \" + nxhr.readyState\r\n        );\r\n      }\r\n\r\n      // BUGFIX: IE, Firefox\r\n      // onreadystatechange() is called twice for readyState OPENED.\r\n      //\r\n      // Call onreadystatechange only when readyState has changed.\r\n      if (this.readyState == nxhr.readyState) {\r\n        return;\r\n      }\r\n\r\n      // Sync current readyState\r\n      this.readyState = nxhr.readyState;\r\n\r\n      // BUGFIX: IE\r\n      // Superfluous onreadystatechange DONE when aborting OPENED\r\n      // without send flag\r\n      if (\r\n        this.readyState === qx.bom.request.Xhr.DONE &&\r\n        this.__abort &&\r\n        !this.__send\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // BUGFIX: IE\r\n      // IE fires onreadystatechange HEADERS_RECEIVED and LOADING when sync\r\n      //\r\n      // According to spec, only onreadystatechange OPENED and DONE should\r\n      // be fired.\r\n      if (!this.__async && (nxhr.readyState == 2 || nxhr.readyState == 3)) {\r\n        return;\r\n      }\r\n\r\n      // Default values according to spec.\r\n      this.status = 0;\r\n      this.statusText = this.responseText = \"\";\r\n      this.responseXML = null;\r\n      this.response = null;\r\n\r\n      if (this.readyState >= qx.bom.request.Xhr.HEADERS_RECEIVED) {\r\n        // In some browsers, XHR properties are not readable\r\n        // while request is in progress.\r\n        try {\r\n          this.status = nxhr.status;\r\n          this.statusText = nxhr.statusText;\r\n          this.response = nxhr.response;\r\n          if (this.responseType === \"\" || this.responseType === \"text\") {\r\n            this.responseText = nxhr.responseText;\r\n          }\r\n          if (this.responseType === \"\" || this.responseType === \"document\") {\r\n            this.responseXML = nxhr.responseXML;\r\n          }\r\n        } catch (XhrPropertiesNotReadable) {\r\n          propertiesReadable = false;\r\n        }\r\n\r\n        if (propertiesReadable) {\r\n          this.__normalizeStatus();\r\n          this.__normalizeResponseXML();\r\n        }\r\n      }\r\n\r\n      this.__readyStateChange();\r\n\r\n      // BUGFIX: IE\r\n      // Memory leak in XMLHttpRequest (on-page)\r\n      if (this.readyState == qx.bom.request.Xhr.DONE) {\r\n        // Allow garbage collecting of native XHR\r\n        if (nxhr) {\r\n          nxhr.onreadystatechange = function () {};\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handle readystatechange. Called internally when readyState is changed.\r\n     */\r\n    __readyStateChange() {\r\n      // Cancel timeout before invoking handlers because they may throw\r\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\r\n        // Request determined DONE. Cancel timeout.\r\n        window.clearTimeout(this.__timerId);\r\n      }\r\n\r\n      // Always fire \"readystatechange\"\r\n      this._emit(\"readystatechange\");\r\n      if (this.readyState === qx.bom.request.Xhr.DONE) {\r\n        this.__readyStateChangeDone();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handle readystatechange. Called internally by\r\n     * {@link #__readyStateChange} when readyState is DONE.\r\n     */\r\n    __readyStateChangeDone() {\r\n      // Fire \"timeout\" if timeout flag is set\r\n      if (this.__timeout) {\r\n        this._emit(\"timeout\");\r\n\r\n        // BUGFIX: Opera\r\n        // Since Opera does not fire \"error\" on network error, fire additional\r\n        // \"error\" on timeout (may well be related to network error)\r\n        if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\r\n          this._emit(\"error\");\r\n        }\r\n\r\n        this.__timeout = false;\r\n\r\n        // Fire either \"abort\", \"load\" or \"error\"\r\n      } else {\r\n        if (this.__abort) {\r\n          this._emit(\"abort\");\r\n        } else {\r\n          if (this.__isNetworkError()) {\r\n            this._emit(\"error\");\r\n          } else {\r\n            this._emit(\"load\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Always fire \"onloadend\" when DONE\r\n      this._emit(\"loadend\");\r\n    },\r\n\r\n    /**\r\n     * Check for network error.\r\n     *\r\n     * @return {Boolean} Whether a network error occurred.\r\n     */\r\n    __isNetworkError() {\r\n      var error;\r\n\r\n      // Infer the XHR internal error flag from statusText when not aborted.\r\n      // See http://www.w3.org/TR/XMLHttpRequest2/#error-flag and\r\n      // http://www.w3.org/TR/XMLHttpRequest2/#the-statustext-attribute\r\n      //\r\n      // With file://, statusText is always falsy. Assume network error when\r\n      // response is empty.\r\n      if (this._getProtocol() === \"file:\") {\r\n        error = !this.responseText;\r\n      } else {\r\n        error = this.status === 0;\r\n      }\r\n\r\n      return error;\r\n    },\r\n\r\n    /**\r\n     * Handle faked timeout.\r\n     */\r\n    __onTimeout() {\r\n      // Basically, mimick http://www.w3.org/TR/XMLHttpRequest2/#timeout-error\r\n      var nxhr = this.__nativeXhr;\r\n      this.readyState = qx.bom.request.Xhr.DONE;\r\n\r\n      // Set timeout flag\r\n      this.__timeout = true;\r\n\r\n      // No longer consider request. Abort.\r\n      nxhr.aborted = true;\r\n      nxhr.abort();\r\n      this.responseText = \"\";\r\n      this.responseXML = null;\r\n\r\n      // Signal readystatechange\r\n      this.__readyStateChange();\r\n    },\r\n\r\n    /**\r\n     * Normalize status property across browsers.\r\n     */\r\n    __normalizeStatus() {\r\n      var isDone = this.readyState === qx.bom.request.Xhr.DONE;\r\n\r\n      // BUGFIX: Most browsers\r\n      // Most browsers tell status 0 when it should be 200 for local files\r\n      if (this._getProtocol() === \"file:\" && this.status === 0 && isDone) {\r\n        if (!this.__isNetworkError()) {\r\n          this.status = 200;\r\n        }\r\n      }\r\n\r\n      // BUGFIX: IE\r\n      // IE sometimes tells 1223 when it should be 204\r\n      if (this.status === 1223) {\r\n        this.status = 204;\r\n      }\r\n\r\n      // BUGFIX: Opera\r\n      // Opera tells 0 for conditional requests when it should be 304\r\n      //\r\n      // Detect response to conditional request that signals fresh cache.\r\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\r\n        if (\r\n          isDone && // Done\r\n          this.__conditional && // Conditional request\r\n          !this.__abort && // Not aborted\r\n          this.status === 0 // But status 0!\r\n        ) {\r\n          this.status = 304;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Normalize responseXML property across browsers.\r\n     */\r\n    __normalizeResponseXML() {\r\n      // BUGFIX: IE\r\n      // IE does not recognize +xml extension, resulting in empty responseXML.\r\n      //\r\n      // Check if Content-Type is +xml, verify missing responseXML then parse\r\n      // responseText as XML.\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        (this.getResponseHeader(\"Content-Type\") || \"\").match(\r\n          /[^\\/]+\\/[^\\+]+\\+xml/\r\n        ) &&\r\n        this.responseXML &&\r\n        !this.responseXML.documentElement\r\n      ) {\r\n        var dom = new window.ActiveXObject(\"Microsoft.XMLDOM\");\r\n        dom.async = false;\r\n        dom.validateOnParse = false;\r\n        dom.loadXML(this.responseText);\r\n        this.responseXML = dom;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for native unload event.\r\n     */\r\n    __onUnload() {\r\n      try {\r\n        // Abort and dispose\r\n        if (this) {\r\n          this.dispose();\r\n        }\r\n      } catch (e) {}\r\n    },\r\n\r\n    /**\r\n     * Helper method to determine whether browser supports reusing the\r\n     * same native XHR to send more requests.\r\n     * @return {Boolean} <code>true</code> if request object reuse is supported\r\n     */\r\n    __supportsManyRequests() {\r\n      var name = qx.core.Environment.get(\"engine.name\");\r\n      var version = qx.core.Environment.get(\"browser.version\");\r\n\r\n      return !(\r\n        (name == \"mshtml\" && version < 9) ||\r\n        (name == \"gecko\" && version < 3.5)\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Throw when already disposed.\r\n     */\r\n    __checkDisposed() {\r\n      if (this.__disposed) {\r\n        throw new Error(\"Already disposed\");\r\n      }\r\n    }\r\n  },\r\n\r\n  defer() {\r\n    qx.core.Environment.add(\"qx.debug.io\", false);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,oBAAoB,EAAE;IACxCC,MAAM,EAAEC,MAAM;IACdC,SAAS,EAAE,CAACP,EAAE,CAACQ,IAAI,CAACC,WAAW,CAAC;IAEhCC,SAAS,WAAAA,UAAA,EAAG;MACV,IAAIC,SAAS,GAAGX,EAAE,CAACC,SAAS,CAACW,IAAI,CAAC,IAAI,CAACC,SAA0B,EAAE,IAAI,CAAC;;MAExE;MACA;MACA,IACEb,EAAE,CAACc,KAAK,IACRd,EAAE,CAACc,KAAK,CAACC,WAAW,IACpBf,EAAE,CAACc,KAAK,CAACC,WAAW,CAACC,aAAa,EAClC;QACA,IAAI,CAACC,SAA+B,GAClCjB,EAAE,CAACc,KAAK,CAACC,WAAW,CAACC,aAAa,CAACL,SAAS,CAAC;MACjD,CAAC,MAAM;QACL,IAAI,CAACM,SAA+B,GAAGN,SAAS;MAClD;MAEA,IAAI,CAACO,SAAoB,GAAGlB,EAAE,CAACC,SAAS,CAACW,IAAI,CAAC,IAAI,CAACO,SAAe,EAAE,IAAI,CAAC;MACzE,IAAI,CAACC,SAAuB,GAAGpB,EAAE,CAACC,SAAS,CAACW,IAAI,CAC9C,IAAI,CAACS,SAAkB,EACvB,IACF,CAAC;MAED,IAAI,CAACC,SAAg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"
}