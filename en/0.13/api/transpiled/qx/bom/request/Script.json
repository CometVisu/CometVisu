{
  "className": "qx.bom.request.Script",
  "packageName": "qx.bom.request",
  "name": "Script",
  "superClass": null,
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 57,
        "column": 0,
        "index": 1632
      },
      "end": {
        "line": 727,
        "column": 3,
        "index": 19538
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Script loader with interface similar to\n <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XmlHttpRequest</a>.\n The script loader can be used to load scripts from arbitrary sources.\n <span class=\"desktop\">\n For JSONP requests, consider the {@link qx.bom.request.Jsonp} transport\n that derives from the script loader.\n </span>\n </p>\n<div class=\"desktop\">\n Example:\n <pre class=\"javascript\">\n  var req = new qx.bom.request.Script();\n  req.onload = function() {\n\n\n  }\n  req.open(\"GET\", url);\n  req.send();\n </pre>\n </div>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.core, qx.core.Environment.*"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.request.Script#_success"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#abort"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#dispose"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#isDisposed"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#getAllResponseHeaders"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#getResponseHeader"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#setDetermineSuccess"
        },
        {
          "name": "@require",
          "body": "qx.bom.request.Script#setRequestHeader"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "IO"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 60,
        "column": 2,
        "index": 1721
      },
      "end": {
        "line": 79,
        "column": 3,
        "index": 2440
      }
    }
  },
  "events": {
    "readystatechange": {
      "location": {
        "start": {
          "line": 83,
          "column": 4,
          "index": 2504
        },
        "end": {
          "line": 83,
          "column": 45,
          "index": 2545
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired at ready state changes.</p>"
          }
        ]
      },
      "name": "readystatechange",
      "type": "qx.bom.request.Script"
    },
    "error": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2582
        },
        "end": {
          "line": 86,
          "column": 34,
          "index": 2612
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired on error.</p>"
          }
        ]
      },
      "name": "error",
      "type": "qx.bom.request.Script"
    },
    "loadend": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2651
        },
        "end": {
          "line": 89,
          "column": 36,
          "index": 2683
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired at loadend.</p>"
          }
        ]
      },
      "name": "loadend",
      "type": "qx.bom.request.Script"
    },
    "timeout": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2723
        },
        "end": {
          "line": 92,
          "column": 36,
          "index": 2755
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired on timeouts.</p>"
          }
        ]
      },
      "name": "timeout",
      "type": "qx.bom.request.Script"
    },
    "abort": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2811
        },
        "end": {
          "line": 95,
          "column": 34,
          "index": 2841
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the request is aborted.</p>"
          }
        ]
      },
      "name": "abort",
      "type": "qx.bom.request.Script"
    },
    "load": {
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2893
        },
        "end": {
          "line": 98,
          "column": 33,
          "index": 2922
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired on successful retrieval.</p>"
          }
        ]
      },
      "name": "load",
      "type": "qx.bom.request.Script"
    }
  },
  "members": {
    "readyState": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3416
        },
        "end": {
          "line": 116,
          "column": 20,
          "index": 3432
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Number} Ready state.\n States can be:\n UNSENT:           0,\n OPENED:           1,\n LOADING:          2,\n LOADING:          3,\n DONE:             4\n Contrary to {@link qx.bom.request.Xhr#readyState}, the script transport\n does not receive response headers. For compatibility, another LOADING\n state is implemented that replaces the HEADERS_RECEIVED state."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "status": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3581
        },
        "end": {
          "line": 123,
          "column": 16,
          "index": 3593
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Number} The status code.\n Note: The script transport cannot determine the HTTP status code."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "statusText": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3822
        },
        "end": {
          "line": 131,
          "column": 20,
          "index": 3838
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} The status text.\n The script transport does not receive response headers. For compatibility,\n the statusText property is set to the status casted to string."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "timeout": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3965
        },
        "end": {
          "line": 138,
          "column": 17,
          "index": 3978
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Number} Timeout limit in milliseconds.\n 0 (default) means no timeout."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "__determineSuccess": {
      "location": {
        "start": {
          "line": 143,
          "column": 4,
          "index": 4084
        },
        "end": {
          "line": 143,
          "column": 28,
          "index": 4108
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} Function that is executed once the script was loaded."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "on": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4461
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 4559
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Add an event listener for the given event name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name {String} The name of the event to listen to.",
            "paramName": "name",
            "description": " The name of the event to listen to.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "listener {Function} The function to execute when the event is fired",
            "paramName": "listener",
            "description": " The function to execute when the event is fired",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "ctx {var?} The context of the listener.",
            "paramName": "ctx",
            "description": " The context of the listener.",
            "optional": true,
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.request.Script} Self for chaining.",
            "type": "qx.bom.request.Script",
            "description": " Self for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "open": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4906
        },
        "end": {
          "line": 187,
          "column": 5,
          "index": 5382
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initializes (prepares) request.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "method {String}\n   The HTTP method to use.\n   This parameter exists for compatibility reasons. The script transport\n   does not support methods other than GET.",
            "paramName": "method",
            "description": "\n   The HTTP method to use.\n   This parameter exists for compatibility reasons. The script transport\n   does not support methods other than GET.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "url {String}\n   The URL to which to send the request.",
            "paramName": "url",
            "description": "\n   The URL to which to send the request.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setRequestHeader": {
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5968
        },
        "end": {
          "line": 218,
          "column": 5,
          "index": 6300
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Appends a query parameter to URL.\n This method exists for compatibility reasons. The script transport\n does not support request headers. However, many services parse query\n parameters like request headers.\n Note: The request must be initialized before using this method.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String}\n  The name of the header whose value is to be set.",
            "paramName": "key",
            "description": "\n  The name of the header whose value is to be set.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String}\n  The value to set as the body of the header.",
            "paramName": "value",
            "description": "\n  The value to set as the body of the header.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.request.Script} Self for chaining.",
            "type": "qx.bom.request.Script",
            "description": " Self for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "send": {
      "location": {
        "start": {
          "line": 224,
          "column": 4,
          "index": 6409
        },
        "end": {
          "line": 254,
          "column": 5,
          "index": 7245
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sends request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.request.Script} Self for chaining.",
            "type": "qx.bom.request.Script",
            "description": " Self for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "abort": {
      "location": {
        "start": {
          "line": 260,
          "column": 4,
          "index": 7355
        },
        "end": {
          "line": 269,
          "column": 5,
          "index": 7548
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Aborts request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.request.Script} Self for chaining.",
            "type": "qx.bom.request.Script",
            "description": " Self for chaining."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_emit": {
      "location": {
        "start": {
          "line": 275,
          "column": 4,
          "index": 7689
        },
        "end": {
          "line": 278,
          "column": 5,
          "index": 7779
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to emit events and call the callback methods.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {String} The name of the event.",
            "paramName": "event",
            "description": " The name of the event.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "onreadystatechange": {
      "location": {
        "start": {
          "line": 285,
          "column": 4,
          "index": 7968
        },
        "end": {
          "line": 285,
          "column": 27,
          "index": 7991
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for an event that fires at every state change.\n Replace with custom method to get informed about the communication progress.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onload": {
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 8836
        },
        "end": {
          "line": 303,
          "column": 15,
          "index": 8847
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for XHR event \"load\" that is fired on successful retrieval.\n Note: This handler is called even when an invalid script is returned.\n Warning: Internet Explorer &lt; 9 receives a false \"load\" for invalid URLs.\n This \"load\" is fired about 2 seconds after sending the request. To\n distinguish from a real \"load\", consider defining a custom check\n function using {@link #setDetermineSuccess} and query the status\n property. However, the script loaded needs to have a known impact on\n the global namespace. If this does not work for you, you may be able\n to set a timeout lower than 2 seconds, depending on script size,\n complexity and execution time.\n Replace with custom method to listen to the \"load\" event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onloadend": {
      "location": {
        "start": {
          "line": 313,
          "column": 4,
          "index": 9127
        },
        "end": {
          "line": 313,
          "column": 18,
          "index": 9141
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for XHR event \"loadend\" that is fired on retrieval.\n Note: This handler is called even when a network error (or similar)\n occurred.\n Replace with custom method to listen to the \"loadend\" event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onerror": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 9391
        },
        "end": {
          "line": 322,
          "column": 16,
          "index": 9403
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for XHR event \"error\" that is fired on a network error.\n Note: Some browsers do not support the \"error\" event.\n Replace with custom method to listen to the \"error\" event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "onabort": {
      "location": {
        "start": {
          "line": 330,
          "column": 4,
          "index": 9596
        },
        "end": {
          "line": 330,
          "column": 16,
          "index": 9608
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for XHR event \"abort\" that is fired when request\n is aborted.\n Replace with custom method to listen to the \"abort\" event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "ontimeout": {
      "location": {
        "start": {
          "line": 338,
          "column": 4,
          "index": 9814
        },
        "end": {
          "line": 338,
          "column": 18,
          "index": 9828
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for XHR event \"timeout\" that is fired when timeout\n interval has passed.\n Replace with custom method to listen to the \"timeout\" event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getResponseHeader": {
      "location": {
        "start": {
          "line": 351,
          "column": 4,
          "index": 10227
        },
        "end": {
          "line": 363,
          "column": 5,
          "index": 10553
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a single response header from response.\n Note: This method exists for compatibility reasons. The script\n transport does not receive response headers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String}\n  Key of the header to get the value from.",
            "paramName": "key",
            "description": "\n  Key of the header to get the value from.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} Warning message or <code>null</code> if the request\n is disposed",
            "type": "String|null",
            "description": " Warning message or <code>null</code> if the request\n is disposed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAllResponseHeaders": {
      "location": {
        "start": {
          "line": 373,
          "column": 4,
          "index": 10862
        },
        "end": {
          "line": 386,
          "column": 5,
          "index": 11208
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get all response headers from response.\n Note: This method exists for compatibility reasons. The script\n transport does not receive response headers.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} Warning message or <code>null</code> if the request\n is disposed",
            "type": "String|null",
            "description": " Warning message or <code>null</code> if the request\n is disposed"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setDetermineSuccess": {
      "location": {
        "start": {
          "line": 397,
          "column": 4,
          "index": 11564
        },
        "end": {
          "line": 399,
          "column": 5,
          "index": 11639
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Determine if loaded script has expected impact on global namespace.\n The function is called once the script was loaded and must return a\n boolean indicating if the response is to be considered successful.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "check {Function} Function executed once the script was loaded.",
            "paramName": "check",
            "description": " Function executed once the script was loaded.",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "dispose": {
      "location": {
        "start": {
          "line": 404,
          "column": 4,
          "index": 11690
        },
        "end": {
          "line": 420,
          "column": 5,
          "index": 12093
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Dispose object.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.core.IDisposable",
      "appearsIn": [
        "qx.core.IDisposable"
      ]
    },
    "isDisposed": {
      "location": {
        "start": {
          "line": 426,
          "column": 4,
          "index": 12255
        },
        "end": {
          "line": 428,
          "column": 5,
          "index": 12309
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Check if the request has already beed disposed.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code>, if the request has been disposed.",
            "type": "Boolean",
            "description": " <code>true</code>, if the request has been disposed."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getUrl": {
      "location": {
        "start": {
          "line": 441,
          "column": 4,
          "index": 12610
        },
        "end": {
          "line": 443,
          "column": 5,
          "index": 12654
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get URL of request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} URL of request.",
            "type": "String",
            "description": " URL of request."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getScriptElement": {
      "location": {
        "start": {
          "line": 450,
          "column": 4,
          "index": 12776
        },
        "end": {
          "line": 452,
          "column": 5,
          "index": 12840
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get script element used for request.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} Script element.",
            "type": "Element",
            "description": " Script element."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onTimeout": {
      "location": {
        "start": {
          "line": 457,
          "column": 4,
          "index": 12891
        },
        "end": {
          "line": 469,
          "column": 5,
          "index": 13143
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle timeout.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onNativeLoad": {
      "location": {
        "start": {
          "line": 474,
          "column": 4,
          "index": 13198
        },
        "end": {
          "line": 531,
          "column": 5,
          "index": 14884
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle native load.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onNativeError": {
      "location": {
        "start": {
          "line": 536,
          "column": 4,
          "index": 14940
        },
        "end": {
          "line": 540,
          "column": 5,
          "index": 15048
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle native error.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__scriptElement": {
      "location": {
        "start": {
          "line": 551,
          "column": 4,
          "index": 15309
        },
        "end": {
          "line": 551,
          "column": 25,
          "index": 15330
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Element} Script element"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__headElement": {
      "location": {
        "start": {
          "line": 556,
          "column": 4,
          "index": 15394
        },
        "end": {
          "line": 556,
          "column": 23,
          "index": 15413
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Element} Head element"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__url": {
      "location": {
        "start": {
          "line": 561,
          "column": 4,
          "index": 15467
        },
        "end": {
          "line": 561,
          "column": 13,
          "index": 15476
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} URL"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__onNativeLoadBound": {
      "location": {
        "start": {
          "line": 566,
          "column": 4,
          "index": 15557
        },
        "end": {
          "line": 566,
          "column": 29,
          "index": 15582
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} Bound _onNativeLoad handler."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__onNativeErrorBound": {
      "location": {
        "start": {
          "line": 571,
          "column": 4,
          "index": 15664
        },
        "end": {
          "line": 571,
          "column": 30,
          "index": 15690
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} Bound _onNativeError handler."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__onTimeoutBound": {
      "location": {
        "start": {
          "line": 576,
          "column": 4,
          "index": 15768
        },
        "end": {
          "line": 576,
          "column": 26,
          "index": 15790
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Function} Bound _onTimeout handler."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__timeoutId": {
      "location": {
        "start": {
          "line": 581,
          "column": 4,
          "index": 15858
        },
        "end": {
          "line": 581,
          "column": 21,
          "index": 15875
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Number} Timeout timer iD."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__abort": {
      "location": {
        "start": {
          "line": 586,
          "column": 4,
          "index": 15955
        },
        "end": {
          "line": 586,
          "column": 17,
          "index": 15968
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether request was aborted."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__disposed": {
      "location": {
        "start": {
          "line": 591,
          "column": 4,
          "index": 16049
        },
        "end": {
          "line": 591,
          "column": 20,
          "index": 16065
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether request was disposed."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__initXhrProperties": {
      "location": {
        "start": {
          "line": 602,
          "column": 4,
          "index": 16317
        },
        "end": {
          "line": 606,
          "column": 5,
          "index": 16428
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialize properties.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_readyStateChange": {
      "location": {
        "start": {
          "line": 613,
          "column": 4,
          "index": 16548
        },
        "end": {
          "line": 616,
          "column": 5,
          "index": 16662
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Change readyState.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "readyState {Number} The desired readyState",
            "paramName": "readyState",
            "description": " The desired readyState",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_success": {
      "location": {
        "start": {
          "line": 621,
          "column": 4,
          "index": 16713
        },
        "end": {
          "line": 631,
          "column": 5,
          "index": 16961
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle success.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__failure": {
      "location": {
        "start": {
          "line": 636,
          "column": 4,
          "index": 17012
        },
        "end": {
          "line": 641,
          "column": 5,
          "index": 17153
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle failure.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__supportsErrorHandler": {
      "location": {
        "start": {
          "line": 648,
          "column": 4,
          "index": 17311
        },
        "end": {
          "line": 656,
          "column": 5,
          "index": 17605
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Looks up whether browser supports error handler.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether browser supports error handler.",
            "type": "Boolean",
            "description": " Whether browser supports error handler."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__createScriptElement": {
      "location": {
        "start": {
          "line": 663,
          "column": 4,
          "index": 17738
        },
        "end": {
          "line": 681,
          "column": 5,
          "index": 18382
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Create and configure script element.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Element} Configured script element.",
            "type": "Element",
            "description": " Configured script element."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__disposeScriptElement": {
      "location": {
        "start": {
          "line": 686,
          "column": 4,
          "index": 18449
        },
        "end": {
          "line": 692,
          "column": 5,
          "index": 18626
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove script element from DOM.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__environmentGet": {
      "location": {
        "start": {
          "line": 701,
          "column": 4,
          "index": 18883
        },
        "end": {
          "line": 719,
          "column": 5,
          "index": 19397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Proxy Environment.get to guard against env not being present yet.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} Environment key.",
            "paramName": "key",
            "description": " Environment key.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} Value of the queried environment key",
            "type": "var",
            "description": " Value of the queried environment key"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "environmentNonLiteralKey(key)"
          }
        ]
      },
      "type": "function",
      "access": "private"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 722,
        "column": 2,
        "index": 19409
      },
      "end": {
        "line": 726,
        "column": 3,
        "index": 19533
      }
    }
  },
  "descendants": [
    "qx.bom.request.Jsonp"
  ]
}