{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__impl",
    "getLocal",
    "core",
    "Environment",
    "get",
    "bom",
    "storage",
    "Web",
    "UserData",
    "Memory",
    "getSession",
    "Storage"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Storage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * This is a cross browser storage implementation. The API is aligned with the\n * API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is also\n * the preferred implementation used. As fallback for IE < 8, we use user data.\n * If both techniques are unsupported, we supply a in memory storage, which is\n * of course, not persistent.\n */\nqx.Bootstrap.define(\"qx.bom.Storage\", {\n  statics: {\n    __impl: null,\n\n    /**\n     * Get an instance of a local storage.\n     * @return {qx.bom.storage.Web|qx.bom.storage.UserData|qx.bom.storage.Memory}\n     *   An instance of a storage implementation.\n     */\n    getLocal() {\n      // always use HTML5 web storage if available\n      if (qx.core.Environment.get(\"html.storage.local\")) {\n        return qx.bom.storage.Web.getLocal();\n      } else if (qx.core.Environment.get(\"html.storage.userdata\")) {\n        // IE <8 fallback\n        // as fallback,use the userdata storage for IE5.5 - 8\n        return qx.bom.storage.UserData.getLocal();\n      }\n      // as last fallback, use a in memory storage (this one is not persistent)\n      return qx.bom.storage.Memory.getLocal();\n    },\n\n    /**\n     * Get an instance of a session storage.\n     * @return {qx.bom.storage.Web|qx.bom.storage.UserData|qx.bom.storage.Memory}\n     *   An instance of a storage implementation.\n     */\n    getSession() {\n      // always use HTML5 web storage if available\n      if (qx.core.Environment.get(\"html.storage.local\")) {\n        return qx.bom.storage.Web.getSession();\n      } else if (qx.core.Environment.get(\"html.storage.userdata\")) {\n        // IE <8 fallback\n        // as fallback,use the userdata storage for IE5.5 - 8\n        return qx.bom.storage.UserData.getSession();\n      }\n      // as last fallback, use a in memory storage (this one is not persistent)\n      return qx.bom.storage.Memory.getSession();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,gBAApB,EAAsC;IACpCC,OAAO,EAAE;MACPC,SAAM,EAAE,IADD;;MAGP;AACJ;AACA;AACA;AACA;MACIC,QARO,sBAQI;QACT;QACA,IAAIP,EAAE,CAACQ,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,oBAAxB,CAAJ,EAAmD;UACjD,OAAOV,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,GAAf,CAAmBN,QAAnB,EAAP;QACD,CAFD,MAEO,IAAIP,EAAE,CAACQ,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,uBAAxB,CAAJ,EAAsD;UAC3D;UACA;UACA,OAAOV,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeE,QAAf,CAAwBP,QAAxB,EAAP;QACD,CARQ,CAST;;;QACA,OAAOP,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeG,MAAf,CAAsBR,QAAtB,EAAP;MACD,CAnBM;;MAqBP;AACJ;AACA;AACA;AACA;MACIS,UA1BO,wBA0BM;QACX;QACA,IAAIhB,EAAE,CAACQ,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,oBAAxB,CAAJ,EAAmD;UACjD,OAAOV,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeC,GAAf,CAAmBG,UAAnB,EAAP;QACD,CAFD,MAEO,IAAIhB,EAAE,CAACQ,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,uBAAxB,CAAJ,EAAsD;UAC3D;UACA;UACA,OAAOV,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeE,QAAf,CAAwBE,UAAxB,EAAP;QACD,CARU,CASX;;;QACA,OAAOhB,EAAE,CAACW,GAAH,CAAOC,OAAP,CAAeG,MAAf,CAAsBC,UAAtB,EAAP;MACD;IArCM;EAD2B,CAAtC;EAzBAhB,EAAE,CAACW,GAAH,CAAOM,OAAP,CAAed,aAAf,GAA+BA,aAA/B"
}