{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "create",
    "type",
    "attributes",
    "win",
    "window",
    "el",
    "document",
    "createElement",
    "key",
    "setAttribute",
    "createImage",
    "source",
    "width",
    "height",
    "xOffset",
    "yOffset",
    "imageWidth",
    "imageHeight",
    "shape",
    "bom",
    "Vml",
    "stroked",
    "fill",
    "appendChild",
    "updateImage",
    "image",
    "Style",
    "element",
    "Attribute",
    "set",
    "firstChild",
    "xOrigin",
    "yOrigin",
    "toFixed",
    "defer",
    "module",
    "Event",
    "ready",
    "core",
    "Environment",
    "get",
    "Stylesheet",
    "namespaces",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Vml.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Helper class to work with VML . If this class is used, it initialized VML\n * support.\n *\n *  <em>Note: This class is only available in Internet Explorer!</em>\n */\nqx.Class.define(\"qx.bom.Vml\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Create VML element\n     *\n     * @param type {String} The VML element type\n     * @param attributes {Map?null} An optional map of element attributes\n     * @param win {var?null} The browser window element, in which the element\n     *     should be created.\n     * @return {Element} The VML element\n     */\n    create(type, attributes, win) {\n      var win = win || window;\n      var el = win.document.createElement(\"v:\" + (type || \"shape\"));\n\n      if (attributes) {\n        for (var key in attributes) {\n          el.setAttribute(key, attributes[key]);\n        }\n      }\n\n      return el;\n    },\n\n    /**\n     * Creates an VML image and configures it. The image is always tiled.\n     *\n     * @param source {String?} The URL of the image to display\n     * @param width {Integer?} The desired width of the image element\n     * @param height {Integer?} The desired height of the image element\n     * @param xOffset {Integer?0} The horizontal offset of the image inside of\n     *     the image element.\n     * @param yOffset {Integer?0} The vertical offset of the image inside of\n     *     the image element.\n     * @param imageWidth {Integer?null} The full width of the image. This value\n     *     is required, when an xOffset is given.\n     * @param imageHeight {Integer?null} The full height of the image. This value\n     *     is required, when an yOffset is given.\n     * @return {Element} the VML element of the image\n     */\n    createImage(\n      source,\n      width,\n      height,\n      xOffset,\n      yOffset,\n      imageWidth,\n      imageHeight\n    ) {\n      var shape = qx.bom.Vml.create(\"rect\", {\n        stroked: \"False\"\n      });\n\n      var fill = qx.bom.Vml.create(\"fill\", {\n        type: \"tile\"\n      });\n\n      shape.appendChild(fill);\n\n      if (source || width || height) {\n        this.updateImage(\n          shape,\n          source,\n          width,\n          height,\n          xOffset,\n          yOffset,\n          imageWidth,\n          imageHeight\n        );\n      }\n\n      return shape;\n    },\n\n    /**\n     * Sets the image source and configures the image. The image element size\n     * resized to the given size and the image is always tiled.\n     *\n     * @signature function(image, source, width, height, xOffset, yOffset, imageWidth, imageHeight)\n     * @param image {Element} The image VML element created by {@link #createImage}.\n     * @param source {String} The URL of the image to display\n     * @param width {Integer} The desired width of the image element\n     * @param height {Integer} The desired height of the image element\n     * @param xOffset {Integer?0} The horizontal offset of the image inside of\n     *     the image element.\n     * @param yOffset {Integer?0} The vertical offset of the image inside of\n     *     the image element.\n     * @param imageWidth {Integer?null} The full width of the image. This value\n     *     is required, when an xOffset is given.\n     * @param imageHeight {Integer?null} The full height of the image. This value\n     *     is required, when an yOffset is given.\n     */\n    updateImage(\n      image,\n      source,\n      width,\n      height,\n      xOffset,\n      yOffset,\n      imageWidth,\n      imageHeight\n    ) {\n      var Style = qx.bom.element.Style;\n      var Attribute = qx.bom.element.Attribute;\n\n      Style.set(image, \"width\", width, false);\n      Style.set(image, \"height\", height, false);\n\n      var fill = image.firstChild;\n      Attribute.set(fill, \"src\", source, false);\n\n      var xOrigin = xOffset ? -xOffset / imageWidth : 0;\n      var yOrigin = yOffset ? -yOffset / imageHeight : 0;\n\n      Attribute.set(fill, \"origin\", xOrigin.toFixed(2) + \",\" + yOrigin, false);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer() {\n    qx.module.Event.ready(function () {\n      if (qx.core.Environment.get(\"html.vml\")) {\n        qx.bom.Stylesheet.createElement(\n          \"v\\\\: * { behavior:url(#default#VML);display:inline-block; }\"\n        );\n\n        if (!document.namespaces[\"v\"]) {\n          document.namespaces.add(\"v\", \"urn:schemas-microsoft-com:vml\");\n        }\n      }\n    });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,YAAhB,EAA8B;IAC5B;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAVO,kBAUAC,IAVA,EAUMC,UAVN,EAUkBC,GAVlB,EAUuB;QAC5B,IAAIA,GAAG,GAAGA,GAAG,IAAIC,MAAjB;QACA,IAAIC,EAAE,GAAGF,GAAG,CAACG,QAAJ,CAAaC,aAAb,CAA2B,QAAQN,IAAI,IAAI,OAAhB,CAA3B,CAAT;;QAEA,IAAIC,UAAJ,EAAgB;UACd,KAAK,IAAIM,GAAT,IAAgBN,UAAhB,EAA4B;YAC1BG,EAAE,CAACI,YAAH,CAAgBD,GAAhB,EAAqBN,UAAU,CAACM,GAAD,CAA/B;UACD;QACF;;QAED,OAAOH,EAAP;MACD,CArBM;;MAuBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIK,WAvCO,uBAwCLC,MAxCK,EAyCLC,KAzCK,EA0CLC,MA1CK,EA2CLC,OA3CK,EA4CLC,OA5CK,EA6CLC,UA7CK,EA8CLC,WA9CK,EA+CL;QACA,IAAIC,KAAK,GAAGzB,EAAE,CAAC0B,GAAH,CAAOC,GAAP,CAAWpB,MAAX,CAAkB,MAAlB,EAA0B;UACpCqB,OAAO,EAAE;QAD2B,CAA1B,CAAZ;QAIA,IAAIC,IAAI,GAAG7B,EAAE,CAAC0B,GAAH,CAAOC,GAAP,CAAWpB,MAAX,CAAkB,MAAlB,EAA0B;UACnCC,IAAI,EAAE;QAD6B,CAA1B,CAAX;QAIAiB,KAAK,CAACK,WAAN,CAAkBD,IAAlB;;QAEA,IAAIX,MAAM,IAAIC,KAAV,IAAmBC,MAAvB,EAA+B;UAC7B,KAAKW,WAAL,CACEN,KADF,EAEEP,MAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,WARF;QAUD;;QAED,OAAOC,KAAP;MACD,CAxEM;;MA0EP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIM,WA5FO,uBA6FLC,KA7FK,EA8FLd,MA9FK,EA+FLC,KA/FK,EAgGLC,MAhGK,EAiGLC,OAjGK,EAkGLC,OAlGK,EAmGLC,UAnGK,EAoGLC,WApGK,EAqGL;QACA,IAAIS,KAAK,GAAGjC,EAAE,CAAC0B,GAAH,CAAOQ,OAAP,CAAeD,KAA3B;QACA,IAAIE,SAAS,GAAGnC,EAAE,CAAC0B,GAAH,CAAOQ,OAAP,CAAeC,SAA/B;QAEAF,KAAK,CAACG,GAAN,CAAUJ,KAAV,EAAiB,OAAjB,EAA0Bb,KAA1B,EAAiC,KAAjC;QACAc,KAAK,CAACG,GAAN,CAAUJ,KAAV,EAAiB,QAAjB,EAA2BZ,MAA3B,EAAmC,KAAnC;QAEA,IAAIS,IAAI,GAAGG,KAAK,CAACK,UAAjB;QACAF,SAAS,CAACC,GAAV,CAAcP,IAAd,EAAoB,KAApB,EAA2BX,MAA3B,EAAmC,KAAnC;QAEA,IAAIoB,OAAO,GAAGjB,OAAO,GAAG,CAACA,OAAD,GAAWE,UAAd,GAA2B,CAAhD;QACA,IAAIgB,OAAO,GAAGjB,OAAO,GAAG,CAACA,OAAD,GAAWE,WAAd,GAA4B,CAAjD;QAEAW,SAAS,CAACC,GAAV,CAAcP,IAAd,EAAoB,QAApB,EAA8BS,OAAO,CAACE,OAAR,CAAgB,CAAhB,IAAqB,GAArB,GAA2BD,OAAzD,EAAkE,KAAlE;MACD;IAnHM,CAPmB;;IA6H5B;AACF;AACA;AACA;AACA;IAEEE,KAnI4B,mBAmIpB;MACNzC,EAAE,CAAC0C,MAAH,CAAUC,KAAV,CAAgBC,KAAhB,CAAsB,YAAY;QAChC,IAAI5C,EAAE,CAAC6C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CAAJ,EAAyC;UACvC/C,EAAE,CAAC0B,GAAH,CAAOsB,UAAP,CAAkBlC,aAAlB,CACE,6DADF;;UAIA,IAAI,CAACD,QAAQ,CAACoC,UAAT,CAAoB,GAApB,CAAL,EAA+B;YAC7BpC,QAAQ,CAACoC,UAAT,CAAoBC,GAApB,CAAwB,GAAxB,EAA6B,+BAA7B;UACD;QACF;MACF,CAVD;IAWD;EA/I2B,CAA9B;EAzBAlD,EAAE,CAAC0B,GAAH,CAAOC,GAAP,CAAWxB,aAAX,GAA2BA,aAA3B"
}