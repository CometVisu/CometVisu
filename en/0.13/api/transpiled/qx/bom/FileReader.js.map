{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "IDisposable",
    "construct",
    "_fileReader",
    "window",
    "FileReader",
    "_handleLoadStart",
    "lang",
    "Function",
    "bind",
    "_handleProgress",
    "_handleLoad",
    "_handleAbort",
    "_handleError",
    "_handleLoadEnd",
    "bom",
    "Event",
    "addNativeListener",
    "events",
    "loadstart",
    "progress",
    "error",
    "abort",
    "load",
    "loadend",
    "statics",
    "getNumFiles",
    "inputElement",
    "files",
    "length",
    "getFile",
    "index",
    "members",
    "readAsArrayBuffer",
    "fileObj",
    "readAsBinaryString",
    "readAsText",
    "encoding",
    "readAsDataURL",
    "e",
    "fireDataEvent",
    "data",
    "content",
    "target",
    "result",
    "destruct",
    "removeNativeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/FileReader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman(derrell)\n\n************************************************************************ */\n\n/**\n * FileReaders allow retrieving the data from a local file, after the file\n * name was selected by an &lt;input type=\"file\"&gt; element.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * For more information see:\n * http://www.w3.org/TR/FileAPI/\n */\nqx.Class.define(\"qx.bom.FileReader\", {\n  extend: qx.core.Object,\n  implement: [qx.core.IDisposable],\n\n  /**\n   * Create a new instance.\n   */\n  construct() {\n    // Call the superclass constructor\n    super();\n\n    // Get a FileReader object\n    this._fileReader = new window.FileReader();\n\n    // Bind native handlers to this instance\n    this._handleLoadStart = qx.lang.Function.bind(this._handleLoadStart, this);\n    this._handleProgress = qx.lang.Function.bind(this._handleProgress, this);\n    this._handleLoad = qx.lang.Function.bind(this._handleLoad, this);\n    this._handleAbort = qx.lang.Function.bind(this._handleAbort, this);\n    this._handleError = qx.lang.Function.bind(this._handleError, this);\n    this._handleLoadEnd = qx.lang.Function.bind(this._handleLoadEnd, this);\n\n    // Be notified of all events\n    qx.bom.Event.addNativeListener(\n      this._fileReader,\n      \"loadstart\",\n      this._handleLoadStart\n    );\n\n    qx.bom.Event.addNativeListener(\n      this._fileReader,\n      \"progress\",\n      this._handleProgress\n    );\n\n    qx.bom.Event.addNativeListener(this._fileReader, \"load\", this._handleLoad);\n\n    qx.bom.Event.addNativeListener(\n      this._fileReader,\n      \"abort\",\n      this._handleAbort\n    );\n\n    qx.bom.Event.addNativeListener(\n      this._fileReader,\n      \"error\",\n      this._handleError\n    );\n\n    qx.bom.Event.addNativeListener(\n      this._fileReader,\n      \"loadend\",\n      this._handleLoadEnd\n    );\n  },\n\n  events: {\n    /** Fired when progress has begun. */\n    loadstart: \"qx.event.type.Data\",\n\n    /** Fired while making progress, presumably at a minimum of every 50ms */\n    progress: \"qx.event.type.Data\",\n\n    /** Fired when an error occurs */\n    error: \"qx.event.type.Data\",\n\n    /**\n     * Fired when progression has failed, after the last \"progress\" has been\n     * dispatched, or after \"loadstart\" has been dispatched, if \"progress\" has\n     * not been dispatched\"\n     */\n    abort: \"qx.event.type.Data\",\n\n    /** Fired when progression is successful */\n    load: \"qx.event.type.Data\",\n\n    /**\n     * Fired when progress has stopped, after any of \"error\", \"abort\", or\n     * \"load\" have been dispatched.\n     */\n    loadend: \"qx.event.type.Data\"\n  },\n\n  statics: {\n    /**\n     * Return the number of files selected by the user, from an &lt;input\n     * type=\"file\"&gt; element.\n     *\n     * @param inputElement {Element}\n     *   The Element created as a result of an &lt;input type=\"file\"&gt; tag.\n     *\n     * @return {Integer}\n     *   The number of selected files.\n     */\n    getNumFiles(inputElement) {\n      return inputElement.files.length;\n    },\n\n    /**\n     * Return the native File object selected from an &lt;input type=\"file\"&gt;\n     * element.\n     *\n     * @param inputElement {Element}\n     *   The Element created as a result of an &lt;input type=\"file\"&gt; tag.\n     *\n     * @param index {Integer}\n     *   The index of the selected file to return.\n     *\n     * @return {File}\n     *   The File object associated with the selected file name.\n     */\n    getFile(inputElement, index) {\n      return inputElement.files[index];\n    }\n  },\n\n  members: {\n    /** The native FileReader object associated this instance */\n    _fileReader: null,\n\n    /**\n     * Begin reading from the file referenced by the specified file\n     * object. This is an asynchronous request. When the file is fully loaded,\n     * the \"load\" event will be fired.\n     *\n     * The data will be provided as an ArrayBuffer object.\n     *\n     * @param fileObj {File}\n     *   A File object, as obtained by calling {@link #getFile} with an\n     *   element of type &lt;input type=\"file\"&gt;.\n     */\n    readAsArrayBuffer(fileObj) {\n      this._fileReader.readAsArrayBuffer(fileObj);\n    },\n\n    /**\n     * Begin reading from the file referenced by the specified file\n     * object. This is an asynchronous request. When the file is fully loaded,\n     * the \"load\" event will be fired.\n     *\n     * The data will be provided in a binary format where each byte is in the\n     * range [0,255].\n     *\n     * NOTE: On FireFox, this method works if the page was loaded via the\n     * file:// protocol. In Chrome, it does not.\n     *\n     * @param fileObj {File}\n     *   A File object, as obtained by calling {@link #getFile} with an\n     *   element of type &lt;input type=\"file\"&gt;.\n     */\n    readAsBinaryString(fileObj) {\n      this._fileReader.readAsBinaryString(fileObj);\n    },\n\n    /**\n     * Begin reading from the file referenced by the specified file\n     * object. This is an asynchronous request. When the file is fully loaded,\n     * the \"load\" event will be fired.\n     *\n     * The data will be provided as text, in the specified encoding.\n     *\n     * NOTE: On FireFox, this method works if the page was loaded via the\n     * file:// protocol. In Chrome, it does not.\n     *\n     * @param fileObj {File}\n     *   A File object, as obtained by calling {@link #getFile} with an\n     *   element of type &lt;input type=\"file\"&gt;.\n     *\n     * @param encoding {String?\"UTF-8\"}\n     *   The encoding for the resulting string.\n     */\n    readAsText(fileObj, encoding) {\n      this._fileReader.readAsText(fileObj, encoding);\n    },\n\n    /**\n     * Begin reading from the file referenced by the specified file\n     * object. This is an asynchronous request. When the file is fully loaded,\n     * the \"load\" event will be fired.\n     *\n     * The data is returned in DataURL format.\n     *\n     * NOTE: On FireFox, this method works if the page was loaded via the\n     * file:// protocol. In Chrome, it does not.\n     *\n     * @param fileObj {File}\n     *   A File object, as obtained by calling {@link #getFile} with an\n     *   element of type &lt;input type=\"file\"&gt;.\n     */\n    readAsDataURL(fileObj) {\n      this._fileReader.readAsDataURL(fileObj);\n    },\n\n    /**\n     * \"loadstart\" handler\n     *\n     * @param e {Object}\n     *   Object which contains a 'progress' object which contains the members:\n     *   - lengthComputable {Boolean} True if length is known; false otherwise\n     *   - loaded {Number} The number of bytes transferred so far\n     *   - total {Number} The length of the entire body being transferred\n     */\n    _handleLoadStart(e) {\n      this.fireDataEvent(\"loadstart\", { progress: e.data });\n    },\n\n    /**\n     * \"progress\" handler\n     *\n     * @param e {Object}\n     *   Object which contains a 'progress' object which contains the members:\n     *   - lengthComputable {Boolean} True if length is known; false otherwise\n     *   - loaded {Number} The number of bytes transferred so far\n     *   - total {Number} The length of the entire body being transferred\n     */\n    _handleProgress(e) {\n      this.fireDataEvent(\"progress\", { progress: e.data });\n    },\n\n    /**\n     * \"error\" handler\n     *\n     * @param e {Object}\n     *   Object which contains a 'progress' object which contains the members:\n     *   - lengthComputable {Boolean} True if length is known; false otherwise\n     *   - loaded {Number} The number of bytes transferred so far\n     *   - total {Number} The length of the entire body being transferred\n     */\n    _handleError(e) {\n      this.fireDataEvent(\"error\", { progress: e.data });\n    },\n\n    /**\n     * \"abort\" handler\n     *\n     * @param e {Object}\n     *   Object which contains a 'progress' object which contains the members:\n     *   - lengthComputable {Boolean} True if length is known; false otherwise\n     *   - loaded {Number} The number of bytes transferred so far\n     *   - total {Number} The length of the entire body being transferred\n     */\n    _handleAbort(e) {\n      this.fireDataEvent(\"abort\", { progress: e.data });\n    },\n\n    /**\n     * \"load\" handler\n     *\n     * @param e {Object}\n     *   Object which contains:\n     *   - A 'progress' object which contains the members:\n     *     - lengthComputable {Boolean} True if length is known; false otherwise\n     *     - loaded {Number} The number of bytes transferred so far\n     *     - total {Number} The length of the entire body being transferred\n     *   - A 'content' member which contains the loaded file content\n     */\n    _handleLoad(e) {\n      // Add the result to the event data\n      this.fireDataEvent(\"load\", {\n        progress: e.data,\n        content: e.target.result\n      });\n    },\n\n    /**\n     * \"loadend\" handler\n     *\n     * @param e {Object}\n     *   Object which contains a 'progress' object which contains  the members:\n     *   - lengthComputable {Boolean} True if length is known; false otherwise\n     *   - loaded {Number} The number of bytes transferred so far\n     *   - total {Number} The length of the entire body being transferred\n     */\n    _handleLoadEnd(e) {\n      this.fireDataEvent(\"loadend\", { progress: e.data });\n    }\n  },\n\n  destruct() {\n    // Remove all listeners\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"loadstart\",\n      this._handleLoadStart\n    );\n\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"progress\",\n      this._handleProgress\n    );\n\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"load\",\n      this._handleLoad\n    );\n\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"abort\",\n      this._handleAbort\n    );\n\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"error\",\n      this._handleError\n    );\n\n    qx.bom.Event.removeNativeListener(\n      this._fileReader,\n      \"loadend\",\n      this._handleLoadEnd\n    );\n\n    this._fileReader = null;\n  }\n});\n"
  ],
  "mappings": "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"
}