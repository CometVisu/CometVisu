{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__types",
    "text",
    "textarea",
    "select",
    "checkbox",
    "radio",
    "password",
    "hidden",
    "submit",
    "image",
    "file",
    "search",
    "reset",
    "button",
    "create",
    "type",
    "attributes",
    "win",
    "lang",
    "Object",
    "clone",
    "tag",
    "dom",
    "Element",
    "setValue",
    "element",
    "value",
    "nodeName",
    "toLowerCase",
    "Type",
    "isArray",
    "checked",
    "includes",
    "options",
    "subel",
    "subval",
    "i",
    "l",
    "length",
    "getAttribute",
    "selected",
    "selectedIndex",
    "core",
    "Environment",
    "get",
    "$$inValueSet",
    "getValue",
    "specified",
    "index",
    "values",
    "one",
    "clazz",
    "bom",
    "Input",
    "max",
    "option",
    "push",
    "replace",
    "setWrap",
    "mshtml",
    "wrap",
    "wrapValue",
    "styleValue",
    "style",
    "overflowY",
    "gecko",
    "setAttribute",
    "overflow",
    "webkit",
    "_default",
    "whiteSpace"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Input.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n\r\n   ======================================================================\r\n\r\n   This class contains code based on the following work:\r\n\r\n   * jQuery\r\n     http://jquery.com\r\n     Version 1.3.1\r\n\r\n     Copyright:\r\n       2009 John Resig\r\n\r\n     License:\r\n       MIT: http://www.opensource.org/licenses/mit-license.php\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Cross browser abstractions to work with input elements.\r\n */\r\nqx.Bootstrap.define(\"qx.bom.Input\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Map} Internal data structures with all supported input types */\r\n    __types: {\r\n      text: 1,\r\n      textarea: 1,\r\n      select: 1,\r\n      checkbox: 1,\r\n      radio: 1,\r\n      password: 1,\r\n      hidden: 1,\r\n      submit: 1,\r\n      image: 1,\r\n      file: 1,\r\n      search: 1,\r\n      reset: 1,\r\n      button: 1\r\n    },\r\n\r\n    /**\r\n     * Creates an DOM input/textarea/select element.\r\n     *\r\n     * Attributes may be given directly with this call. This is critical\r\n     * for some attributes e.g. name, type, ... in many clients.\r\n     *\r\n     * Note: <code>select</code> and <code>textarea</code> elements are created\r\n     * using the identically named <code>type</code>.\r\n     *\r\n     * @param type {String} Any valid type for HTML, <code>select</code>\r\n     *   and <code>textarea</code>\r\n     * @param attributes {Map} Map of attributes to apply\r\n     * @param win {Window} Window to create the element for\r\n     * @return {Element} The created input node\r\n     */\r\n    create(type, attributes, win) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertKeyInMap(\r\n          type,\r\n          this.__types,\r\n          \"Unsupported input type.\"\r\n        );\r\n      }\r\n\r\n      // Work on a copy to not modify given attributes map\r\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\r\n\r\n      var tag;\r\n\r\n      if (type === \"textarea\" || type === \"select\") {\r\n        tag = type;\r\n      } else {\r\n        tag = \"input\";\r\n        attributes.type = type;\r\n      }\r\n\r\n      return qx.dom.Element.create(tag, attributes, win);\r\n    },\r\n\r\n    /**\r\n     * Applies the given value to the element.\r\n     *\r\n     * Normally the value is given as a string/number value and applied\r\n     * to the field content (textfield, textarea) or used to\r\n     * detect whether the field is checked (checkbox, radiobutton).\r\n     *\r\n     * Supports array values for selectboxes (multiple-selection)\r\n     * and checkboxes or radiobuttons (for convenience).\r\n     *\r\n     * Please note: To modify the value attribute of a checkbox or\r\n     * radiobutton use {@link qx.bom.element.Attribute#set} instead.\r\n     *\r\n     * @param element {Element} element to update\r\n     * @param value {String|Number|Array} the value to apply\r\n     */\r\n    setValue(element, value) {\r\n      var tag = element.nodeName.toLowerCase();\r\n      var type = element.type;\r\n      var Type = qx.lang.Type;\r\n\r\n      if (typeof value === \"number\") {\r\n        value += \"\";\r\n      }\r\n\r\n      if (type === \"checkbox\" || type === \"radio\") {\r\n        if (Type.isArray(value)) {\r\n          element.checked = value.includes(element.value);\r\n        } else {\r\n          element.checked = element.value == value;\r\n        }\r\n      } else if (tag === \"select\") {\r\n        var isArray = Type.isArray(value);\r\n        var options = element.options;\r\n        var subel, subval;\r\n\r\n        for (var i = 0, l = options.length; i < l; i++) {\r\n          subel = options[i];\r\n          subval = subel.getAttribute(\"value\");\r\n          if (subval == null) {\r\n            subval = subel.text;\r\n          }\r\n\r\n          subel.selected = isArray ? value.includes(subval) : value == subval;\r\n        }\r\n\r\n        if (isArray && value.length == 0) {\r\n          element.selectedIndex = -1;\r\n        }\r\n      } else if (\r\n        (type === \"text\" || type === \"textarea\") &&\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\"\r\n      ) {\r\n        // These flags are required to detect self-made property-change\r\n        // events during value modification. They are used by the Input\r\n        // event handler to filter events.\r\n        element.$$inValueSet = true;\r\n        element.value = value;\r\n        element.$$inValueSet = null;\r\n      } else {\r\n        element.value = value;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the currently configured value.\r\n     *\r\n     * Works with simple input fields as well as with\r\n     * select boxes or option elements.\r\n     *\r\n     * Returns an array in cases of multi-selection in\r\n     * select boxes but in all other cases a string.\r\n     *\r\n     * @param element {Element} DOM element to query\r\n     * @return {String|Array} The value of the given element\r\n     */\r\n    getValue(element) {\r\n      var tag = element.nodeName.toLowerCase();\r\n\r\n      if (tag === \"option\") {\r\n        return (element.attributes.value || {}).specified\r\n          ? element.value\r\n          : element.text;\r\n      }\r\n\r\n      if (tag === \"select\") {\r\n        var index = element.selectedIndex;\r\n\r\n        // Nothing was selected\r\n        if (index < 0) {\r\n          return null;\r\n        }\r\n\r\n        var values = [];\r\n        var options = element.options;\r\n        var one = element.type == \"select-one\";\r\n        var clazz = qx.bom.Input;\r\n        var value;\r\n\r\n        // Loop through all the selected options\r\n        for (\r\n          var i = one ? index : 0, max = one ? index + 1 : options.length;\r\n          i < max;\r\n          i++\r\n        ) {\r\n          var option = options[i];\r\n\r\n          if (option.selected) {\r\n            // Get the specific value for the option\r\n            value = clazz.getValue(option);\r\n\r\n            // We don't need an array for one selects\r\n            if (one) {\r\n              return value;\r\n            }\r\n\r\n            // Multi-Selects return an array\r\n            values.push(value);\r\n          }\r\n        }\r\n\r\n        return values;\r\n      } else {\r\n        return (element.value || \"\").replace(/\\r/g, \"\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets the text wrap behaviour of a text area element.\r\n     * This property uses the attribute \"wrap\" respectively\r\n     * the style property \"whiteSpace\"\r\n     *\r\n     * @signature function(element, wrap)\r\n     * @param element {Element} DOM element to modify\r\n     * @param wrap {Boolean} Whether to turn text wrap on or off.\r\n     */\r\n    setWrap: qx.core.Environment.select(\"engine.name\", {\r\n      mshtml(element, wrap) {\r\n        var wrapValue = wrap ? \"soft\" : \"off\";\r\n\r\n        // Explicitly set overflow-y CSS property to auto when wrapped,\r\n        // allowing the vertical scroll-bar to appear if necessary\r\n        var styleValue = wrap ? \"auto\" : \"\";\r\n\r\n        element.wrap = wrapValue;\r\n        element.style.overflowY = styleValue;\r\n      },\r\n\r\n      gecko(element, wrap) {\r\n        var wrapValue = wrap ? \"soft\" : \"off\";\r\n        var styleValue = wrap ? \"\" : \"auto\";\r\n\r\n        element.setAttribute(\"wrap\", wrapValue);\r\n        element.style.overflow = styleValue;\r\n      },\r\n\r\n      webkit(element, wrap) {\r\n        var wrapValue = wrap ? \"soft\" : \"off\";\r\n        var styleValue = wrap ? \"\" : \"auto\";\r\n\r\n        element.setAttribute(\"wrap\", wrapValue);\r\n        element.style.overflow = styleValue;\r\n      },\r\n\r\n      default(element, wrap) {\r\n        element.style.whiteSpace = wrap ? \"normal\" : \"nowrap\";\r\n      }\r\n    })\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}