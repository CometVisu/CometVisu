{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__types",
    "text",
    "textarea",
    "select",
    "checkbox",
    "radio",
    "password",
    "hidden",
    "submit",
    "image",
    "file",
    "search",
    "reset",
    "button",
    "create",
    "type",
    "attributes",
    "win",
    "lang",
    "Object",
    "clone",
    "tag",
    "dom",
    "Element",
    "setValue",
    "element",
    "value",
    "nodeName",
    "toLowerCase",
    "Type",
    "isArray",
    "checked",
    "includes",
    "options",
    "subel",
    "subval",
    "i",
    "l",
    "length",
    "getAttribute",
    "selected",
    "selectedIndex",
    "core",
    "Environment",
    "get",
    "$$inValueSet",
    "getValue",
    "specified",
    "index",
    "values",
    "one",
    "clazz",
    "bom",
    "Input",
    "max",
    "option",
    "push",
    "replace",
    "setWrap",
    "mshtml",
    "wrap",
    "wrapValue",
    "styleValue",
    "style",
    "overflowY",
    "gecko",
    "setAttribute",
    "overflow",
    "webkit",
    "whiteSpace"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Input.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * jQuery\n     http://jquery.com\n     Version 1.3.1\n\n     Copyright:\n       2009 John Resig\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with input elements.\n */\nqx.Bootstrap.define(\"qx.bom.Input\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Map} Internal data structures with all supported input types */\n    __types: {\n      text: 1,\n      textarea: 1,\n      select: 1,\n      checkbox: 1,\n      radio: 1,\n      password: 1,\n      hidden: 1,\n      submit: 1,\n      image: 1,\n      file: 1,\n      search: 1,\n      reset: 1,\n      button: 1\n    },\n\n    /**\n     * Creates an DOM input/textarea/select element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * Note: <code>select</code> and <code>textarea</code> elements are created\n     * using the identically named <code>type</code>.\n     *\n     * @param type {String} Any valid type for HTML, <code>select</code>\n     *   and <code>textarea</code>\n     * @param attributes {Map} Map of attributes to apply\n     * @param win {Window} Window to create the element for\n     * @return {Element} The created input node\n     */\n    create(type, attributes, win) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertKeyInMap(\n          type,\n          this.__types,\n          \"Unsupported input type.\"\n        );\n      }\n\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n\n      var tag;\n\n      if (type === \"textarea\" || type === \"select\") {\n        tag = type;\n      } else {\n        tag = \"input\";\n        attributes.type = type;\n      }\n\n      return qx.dom.Element.create(tag, attributes, win);\n    },\n\n    /**\n     * Applies the given value to the element.\n     *\n     * Normally the value is given as a string/number value and applied\n     * to the field content (textfield, textarea) or used to\n     * detect whether the field is checked (checkbox, radiobutton).\n     *\n     * Supports array values for selectboxes (multiple-selection)\n     * and checkboxes or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or\n     * radiobutton use {@link qx.bom.element.Attribute#set} instead.\n     *\n     * @param element {Element} element to update\n     * @param value {String|Number|Array} the value to apply\n     */\n    setValue(element, value) {\n      var tag = element.nodeName.toLowerCase();\n      var type = element.type;\n      var Type = qx.lang.Type;\n\n      if (typeof value === \"number\") {\n        value += \"\";\n      }\n\n      if (type === \"checkbox\" || type === \"radio\") {\n        if (Type.isArray(value)) {\n          element.checked = value.includes(element.value);\n        } else {\n          element.checked = element.value == value;\n        }\n      } else if (tag === \"select\") {\n        var isArray = Type.isArray(value);\n        var options = element.options;\n        var subel, subval;\n\n        for (var i = 0, l = options.length; i < l; i++) {\n          subel = options[i];\n          subval = subel.getAttribute(\"value\");\n          if (subval == null) {\n            subval = subel.text;\n          }\n\n          subel.selected = isArray ? value.includes(subval) : value == subval;\n        }\n\n        if (isArray && value.length == 0) {\n          element.selectedIndex = -1;\n        }\n      } else if (\n        (type === \"text\" || type === \"textarea\") &&\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\"\n      ) {\n        // These flags are required to detect self-made property-change\n        // events during value modification. They are used by the Input\n        // event handler to filter events.\n        element.$$inValueSet = true;\n        element.value = value;\n        element.$$inValueSet = null;\n      } else {\n        element.value = value;\n      }\n    },\n\n    /**\n     * Returns the currently configured value.\n     *\n     * Works with simple input fields as well as with\n     * select boxes or option elements.\n     *\n     * Returns an array in cases of multi-selection in\n     * select boxes but in all other cases a string.\n     *\n     * @param element {Element} DOM element to query\n     * @return {String|Array} The value of the given element\n     */\n    getValue(element) {\n      var tag = element.nodeName.toLowerCase();\n\n      if (tag === \"option\") {\n        return (element.attributes.value || {}).specified\n          ? element.value\n          : element.text;\n      }\n\n      if (tag === \"select\") {\n        var index = element.selectedIndex;\n\n        // Nothing was selected\n        if (index < 0) {\n          return null;\n        }\n\n        var values = [];\n        var options = element.options;\n        var one = element.type == \"select-one\";\n        var clazz = qx.bom.Input;\n        var value;\n\n        // Loop through all the selected options\n        for (\n          var i = one ? index : 0, max = one ? index + 1 : options.length;\n          i < max;\n          i++\n        ) {\n          var option = options[i];\n\n          if (option.selected) {\n            // Get the specific value for the option\n            value = clazz.getValue(option);\n\n            // We don't need an array for one selects\n            if (one) {\n              return value;\n            }\n\n            // Multi-Selects return an array\n            values.push(value);\n          }\n        }\n\n        return values;\n      } else {\n        return (element.value || \"\").replace(/\\r/g, \"\");\n      }\n    },\n\n    /**\n     * Sets the text wrap behaviour of a text area element.\n     * This property uses the attribute \"wrap\" respectively\n     * the style property \"whiteSpace\"\n     *\n     * @signature function(element, wrap)\n     * @param element {Element} DOM element to modify\n     * @param wrap {Boolean} Whether to turn text wrap on or off.\n     */\n    setWrap: qx.core.Environment.select(\"engine.name\", {\n      mshtml(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n\n        // Explicitly set overflow-y CSS property to auto when wrapped,\n        // allowing the vertical scroll-bar to appear if necessary\n        var styleValue = wrap ? \"auto\" : \"\";\n\n        element.wrap = wrapValue;\n        element.style.overflowY = styleValue;\n      },\n\n      gecko(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      webkit(element, wrap) {\n        var wrapValue = wrap ? \"soft\" : \"off\";\n        var styleValue = wrap ? \"\" : \"auto\";\n\n        element.setAttribute(\"wrap\", wrapValue);\n        element.style.overflow = styleValue;\n      },\n\n      default(element, wrap) {\n        element.style.whiteSpace = wrap ? \"normal\" : \"nowrap\";\n      }\n    })\n  }\n});\n"
  ],
  "mappings": "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"
}