{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getName",
    "process",
    "platform",
    "MAP",
    "win32",
    "darwin",
    "linux",
    "aix",
    "freebsd",
    "openbsd",
    "sunos",
    "android",
    "navigator",
    "input",
    "agent",
    "userAgent",
    "indexOf",
    "__ids",
    "Win98",
    "Win95",
    "getVersion",
    "version",
    "bom",
    "client",
    "OperatingSystem",
    "__getVersionForDesktopOs",
    "__getVersionForMobileOs",
    "__P_133_1",
    "str",
    "key",
    "push",
    "reg",
    "RegExp",
    "join",
    "replace",
    "match",
    "exec",
    "__P_133_2",
    "windows",
    "iOs",
    "windowsVersionRegExp",
    "windowsMatch",
    "androidVersionRegExp",
    "androidMatch",
    "iOsVersionRegExp",
    "iOsMatch",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/OperatingSystem.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n     * Sebastian Fastner (fastner)\r\n\r\n************************************************************************ */\r\n/**\r\n * This class is responsible for checking the operating systems name.\r\n *\r\n * This class is used by {@link qx.core.Environment} and should not be used\r\n * directly. Please check its class comment for details how to use it.\r\n *\r\n * @internal\r\n * @ignore(process.*)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.client.OperatingSystem\", {\r\n  statics: {\r\n    /**\r\n     * Checks for the name of the operating system.\r\n     * @return {String} The name of the operating system.\r\n     * @internal\r\n     * @ignore(process.*)\r\n     *\r\n     */\r\n    getName() {\r\n      if (typeof process != \"undefined\" && process.platform) {\r\n        const MAP = {\r\n          win32: \"win\",\r\n          darwin: \"osx\",\r\n          linux: \"linux\",\r\n          aix: \"unix\",\r\n          freebsd: \"unix\",\r\n          openbsd: \"unix\",\r\n          sunos: \"unix\",\r\n          android: \"android\"\r\n        };\r\n\r\n        return MAP[process.platform] || \"\";\r\n      }\r\n      if (!navigator) {\r\n        return \"\";\r\n      }\r\n      var input = navigator.platform || \"\";\r\n      var agent = navigator.userAgent || \"\";\r\n\r\n      if (\r\n        input.indexOf(\"Windows\") != -1 ||\r\n        input.indexOf(\"Win32\") != -1 ||\r\n        input.indexOf(\"Win64\") != -1 ||\r\n        agent.indexOf(\"Windows Phone\") != -1\r\n      ) {\r\n        return \"win\";\r\n      } else if (\r\n        input.indexOf(\"Macintosh\") != -1 ||\r\n        input.indexOf(\"MacPPC\") != -1 ||\r\n        input.indexOf(\"MacIntel\") != -1 ||\r\n        input.indexOf(\"Mac OS X\") != -1\r\n      ) {\r\n        return \"osx\";\r\n      } else if (agent.indexOf(\"RIM Tablet OS\") != -1) {\r\n        return \"rim_tabletos\";\r\n      } else if (agent.indexOf(\"webOS\") != -1) {\r\n        return \"webos\";\r\n      } else if (\r\n        input.indexOf(\"iPod\") != -1 ||\r\n        input.indexOf(\"iPhone\") != -1 ||\r\n        input.indexOf(\"iPad\") != -1\r\n      ) {\r\n        return \"ios\";\r\n      } else if (agent.indexOf(\"Android\") != -1) {\r\n        return \"android\";\r\n      } else if (input.indexOf(\"Linux\") != -1) {\r\n        return \"linux\";\r\n      } else if (\r\n        input.indexOf(\"X11\") != -1 ||\r\n        input.indexOf(\"BSD\") != -1 ||\r\n        input.indexOf(\"Darwin\") != -1\r\n      ) {\r\n        return \"unix\";\r\n      } else if (input.indexOf(\"SymbianOS\") != -1) {\r\n        return \"symbian\";\r\n      } else if (input.indexOf(\"BlackBerry\") != -1) {\r\n        return \"blackberry\";\r\n      }\r\n\r\n      // don't know\r\n      return \"\";\r\n    },\r\n\r\n    /** Maps user agent names to system IDs */\r\n    __ids: {\r\n      // Windows\r\n      \"Windows NT 10.0\": \"10\",\r\n      \"Windows NT 6.3\": \"8.1\",\r\n      \"Windows NT 6.2\": \"8\",\r\n      \"Windows NT 6.1\": \"7\",\r\n      \"Windows NT 6.0\": \"vista\",\r\n      \"Windows NT 5.2\": \"2003\",\r\n      \"Windows NT 5.1\": \"xp\",\r\n      \"Windows NT 5.0\": \"2000\",\r\n      \"Windows 2000\": \"2000\",\r\n      \"Windows NT 4.0\": \"nt4\",\r\n\r\n      \"Win 9x 4.90\": \"me\",\r\n      \"Windows CE\": \"ce\",\r\n      \"Windows 98\": \"98\",\r\n      Win98: \"98\",\r\n      \"Windows 95\": \"95\",\r\n      Win95: \"95\",\r\n\r\n      // OS X\r\n      \"Mac OS X 10_15\": \"10.15\",\r\n      \"Mac OS X 10_14\": \"10.14\",\r\n      \"Mac OS X 10_13\": \"10.13\",\r\n      \"Mac OS X 10.13\": \"10.13\",\r\n      \"Mac OS X 10_12\": \"10.12\",\r\n      \"Mac OS X 10.12\": \"10.12\",\r\n      \"Mac OS X 10_11\": \"10.11\",\r\n      \"Mac OS X 10.11\": \"10.11\",\r\n      \"Mac OS X 10_10\": \"10.10\",\r\n      \"Mac OS X 10.10\": \"10.10\",\r\n      \"Mac OS X 10_9\": \"10.9\",\r\n      \"Mac OS X 10.9\": \"10.9\",\r\n      \"Mac OS X 10_8\": \"10.8\",\r\n      \"Mac OS X 10.8\": \"10.8\",\r\n      \"Mac OS X 10_7\": \"10.7\",\r\n      \"Mac OS X 10.7\": \"10.7\",\r\n      \"Mac OS X 10_6\": \"10.6\",\r\n      \"Mac OS X 10.6\": \"10.6\",\r\n      \"Mac OS X 10_5\": \"10.5\",\r\n      \"Mac OS X 10.5\": \"10.5\",\r\n      \"Mac OS X 10_4\": \"10.4\",\r\n      \"Mac OS X 10.4\": \"10.4\",\r\n      \"Mac OS X 10_3\": \"10.3\",\r\n      \"Mac OS X 10.3\": \"10.3\",\r\n      \"Mac OS X 10_2\": \"10.2\",\r\n      \"Mac OS X 10.2\": \"10.2\",\r\n      \"Mac OS X 10_1\": \"10.1\",\r\n      \"Mac OS X 10.1\": \"10.1\",\r\n      \"Mac OS X 10_0\": \"10.0\",\r\n      \"Mac OS X 10.0\": \"10.0\"\r\n    },\r\n\r\n    /**\r\n     * Checks for the version of the operating system using the internal map.\r\n     *\r\n     * @internal\r\n     * @return {String} The version as strin or an empty string if the version\r\n     *   could not be detected.\r\n     */\r\n    getVersion() {\r\n      var version = qx.bom.client.OperatingSystem.__getVersionForDesktopOs(\r\n        navigator.userAgent\r\n      );\r\n\r\n      if (version == null) {\r\n        version = qx.bom.client.OperatingSystem.__getVersionForMobileOs(\r\n          navigator.userAgent\r\n        );\r\n      }\r\n\r\n      if (version != null) {\r\n        return version;\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Detect OS version for desktop devices\r\n     * @param userAgent {String} userAgent parameter, needed for detection.\r\n     * @return {String} version number as string or null.\r\n     */\r\n    __getVersionForDesktopOs(userAgent) {\r\n      var str = [];\r\n      for (var key in qx.bom.client.OperatingSystem.__ids) {\r\n        str.push(key);\r\n      }\r\n\r\n      var reg = new RegExp(\"(\" + str.join(\"|\").replace(/\\./g, \".\") + \")\", \"g\");\r\n      var match = reg.exec(userAgent);\r\n\r\n      if (match && match[1]) {\r\n        return qx.bom.client.OperatingSystem.__ids[match[1]];\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Detect OS version for mobile devices\r\n     * @param userAgent {String} userAgent parameter, needed for detection.\r\n     * @return {String} version number as string or null.\r\n     */\r\n    __getVersionForMobileOs(userAgent) {\r\n      var windows = userAgent.indexOf(\"Windows Phone\") != -1;\r\n      var android = userAgent.indexOf(\"Android\") != -1;\r\n      var iOs = userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false;\r\n\r\n      if (windows) {\r\n        var windowsVersionRegExp = new RegExp(/Windows Phone (\\d+(?:\\.\\d+)+)/i);\r\n        var windowsMatch = windowsVersionRegExp.exec(userAgent);\r\n\r\n        if (windowsMatch && windowsMatch[1]) {\r\n          return windowsMatch[1];\r\n        }\r\n      } else if (android) {\r\n        var androidVersionRegExp = new RegExp(/ Android (\\d+(?:\\.\\d+)+)/i);\r\n        var androidMatch = androidVersionRegExp.exec(userAgent);\r\n\r\n        if (androidMatch && androidMatch[1]) {\r\n          return androidMatch[1];\r\n        }\r\n      } else if (iOs) {\r\n        var iOsVersionRegExp = new RegExp(\r\n          /(CPU|iPhone|iPod) OS (\\d+)_(\\d+)(?:_(\\d+))*\\s+/\r\n        );\r\n\r\n        var iOsMatch = iOsVersionRegExp.exec(userAgent);\r\n\r\n        if (iOsMatch && iOsMatch[2] && iOsMatch[3]) {\r\n          if (iOsMatch[4]) {\r\n            return iOsMatch[2] + \".\" + iOsMatch[3] + \".\" + iOsMatch[4];\r\n          } else {\r\n            return iOsMatch[2] + \".\" + iOsMatch[3];\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qx.core.Environment.add(\"os.name\", statics.getName);\r\n    qx.core.Environment.add(\"os.version\", statics.getVersion);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}