{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "scrollBarOverlayed",
    "scrollBarWidth",
    "bom",
    "element",
    "Scroll",
    "getScrollbarWidth",
    "osx",
    "client",
    "OperatingSystem",
    "getName",
    "nativeScrollBars",
    "getNativeScroll",
    "core",
    "Environment",
    "get",
    "parseInt",
    "osVersion",
    "splitVersion",
    "split",
    "length",
    "defer",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Scroll.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * This class is responsible for checking the scrolling behavior of the client.\r\n *\r\n * This class is used by {@link qx.core.Environment} and should not be used\r\n * directly. Please check its class comment for details how to use it.\r\n *\r\n * @internal\r\n */\r\nqx.Bootstrap.define(\"qx.bom.client.Scroll\", {\r\n  statics: {\r\n    /**\r\n     * Check if the scrollbars should be positioned on top of the content. This\r\n     * is true of OSX Lion when the scrollbars disappear automatically.\r\n     *\r\n     * @internal\r\n     *\r\n     * @return {Boolean} <code>true</code> if the scrollbars should be\r\n     *   positioned on top of the content.\r\n     */\r\n    scrollBarOverlayed() {\r\n      var scrollBarWidth = qx.bom.element.Scroll.getScrollbarWidth();\r\n      var osx = qx.bom.client.OperatingSystem.getName() === \"osx\";\r\n      var nativeScrollBars = qx.core.Environment.get(\"qx.nativeScrollBars\");\r\n\r\n      return scrollBarWidth === 0 && osx && nativeScrollBars;\r\n    },\r\n\r\n    /**\r\n     * Checks if native scroll can be used for the current mobile device.\r\n     *\r\n     * @internal\r\n     *\r\n     * @return {Boolean} <code>true</code> if the current device is capable to\r\n     * use native scroll.\r\n     */\r\n    getNativeScroll() {\r\n      // iOS 8+\r\n      if (\r\n        qx.core.Environment.get(\"os.name\") == \"ios\" &&\r\n        parseInt(qx.core.Environment.get(\"browser.version\"), 10) > 7\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      // Firefox\r\n      if (qx.core.Environment.get(\"browser.name\") == \"firefox\") {\r\n        return true;\r\n      }\r\n\r\n      // Android 4.4+\r\n      if (qx.core.Environment.get(\"os.name\") == \"android\") {\r\n        var osVersion = qx.core.Environment.get(\"os.version\");\r\n        var splitVersion = osVersion.split(\".\");\r\n        if (\r\n          splitVersion[0] > 4 ||\r\n          (splitVersion.length > 1 &&\r\n            splitVersion[0] > 3 &&\r\n            splitVersion[1] > 3)\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // IE 10+\r\n      if (qx.core.Environment.get(\"event.mspointer\")) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qx.core.Environment.add(\r\n      \"os.scrollBarOverlayed\",\r\n      statics.scrollBarOverlayed\r\n    );\r\n\r\n    qx.core.Environment.add(\"qx.mobile.nativescroll\", statics.getNativeScroll);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,sBAAsB,EAAE;IAC1CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,IAAIC,cAAc,GAAGP,EAAE,CAACQ,GAAG,CAACC,OAAO,CAACC,MAAM,CAACC,iBAAiB,CAAC,CAAC;QAC9D,IAAIC,GAAG,GAAGZ,EAAE,CAACQ,GAAG,CAACK,MAAM,CAACC,eAAe,CAACC,OAAO,CAAC,CAAC,KAAK,KAAK;QAC3D,IAAIC,gBAAgB,QAAiD;QAErE,OAAOT,cAAc,KAAK,CAAC,IAAIK,GAAG,IAAII,gBAAgB;MACxD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,eAAe,WAAAA,gBAAA,EAAG;QAChB;QACA,IACEjB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,IAC3CC,QAAQ,CAACrB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAC5D;UACA,OAAO,IAAI;QACb;;QAEA;QACA,IAAIpB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,cAAc,CAAC,IAAI,SAAS,EAAE;UACxD,OAAO,IAAI;QACb;;QAEA;QACA,IAAIpB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,SAAS,CAAC,IAAI,SAAS,EAAE;UACnD,IAAIE,SAAS,GAAGtB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,YAAY,CAAC;UACrD,IAAIG,YAAY,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;UACvC,IACED,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,IAClBA,YAAY,CAACE,MAAM,GAAG,CAAC,IACtBF,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,IACnBA,YAAY,CAAC,CAAC,CAAC,GAAG,CAAE,EACtB;YACA,OAAO,IAAI;UACb;QACF;;QAEA;QACA,IAAIvB,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAAE;UAC9C,OAAO,IAAI;QACb;QAEA,OAAO,KAAK;MACd;IACF,CAAC;IAEDM,KAAK,WAAAA,MAACrB,OAAO,EAAE;MACbL,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACQ,GAAG,CACrB,uBAAuB,EACvBtB,OAAO,CAACC,kBACV,CAAC;MAEDN,EAAE,CAACkB,IAAI,CAACC,WAAW,CAACQ,GAAG,CAAC,wBAAwB,EAAEtB,OAAO,CAACY,eAAe,CAAC;IAC5E;EACF,CAAC,CAAC;EAjGFjB,EAAE,CAACQ,GAAG,CAACK,MAAM,CAACH,MAAM,CAACP,aAAa,GAAGA,aAAa;AAAC"
}