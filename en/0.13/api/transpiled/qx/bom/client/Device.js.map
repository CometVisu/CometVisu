{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__ids",
    "iPod",
    "iPad",
    "iPhone",
    "PSP",
    "XBOX",
    "Xbox",
    "getName",
    "str",
    "key",
    "bom",
    "client",
    "Device",
    "push",
    "reg",
    "RegExp",
    "join",
    "replace",
    "match",
    "exec",
    "navigator",
    "userAgent",
    "getType",
    "detectDeviceType",
    "userAgentString",
    "detectTabletDevice",
    "detectMobileDevice",
    "test",
    "iPadOS13Up",
    "platform",
    "maxTouchPoints",
    "isIE10Tablet",
    "isCommonTablet",
    "getDevicePixelRatio",
    "window",
    "devicePixelRatio",
    "getTouch",
    "msMaxTouchPoints",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Device.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The class is responsible for device detection. This is specially useful\n * if you are on a mobile device.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Device\", {\n  statics: {\n    /** Maps user agent names to device IDs */\n    __ids: {\n      \"Windows Phone\": \"iemobile\",\n      iPod: \"ipod\",\n      iPad: \"ipad\",\n      iPhone: \"iphone\",\n      PSP: \"psp\",\n      \"PLAYSTATION 3\": \"ps3\",\n      \"Nintendo Wii\": \"wii\",\n      \"Nintendo DS\": \"ds\",\n      XBOX: \"xbox\",\n      Xbox: \"xbox\"\n    },\n\n    /**\n     * Returns the name of the current device if detectable. It falls back to\n     * <code>pc</code> if the detection for other devices fails.\n     *\n     * @internal\n     * @return {String} The string of the device found.\n     */\n    getName() {\n      var str = [];\n      for (var key in qx.bom.client.Device.__ids) {\n        str.push(key);\n      }\n      var reg = new RegExp(\"(\" + str.join(\"|\").replace(/\\./g, \".\") + \")\", \"g\");\n      var match = reg.exec(navigator.userAgent);\n\n      if (match && match[1]) {\n        return qx.bom.client.Device.__ids[match[1]];\n      }\n\n      return \"pc\";\n    },\n\n    /**\n     * Determines on what type of device the application is running.\n     * Valid values are: \"mobile\", \"tablet\" or \"desktop\".\n     * @return {String} The device type name of determined device.\n     */\n    getType() {\n      return qx.bom.client.Device.detectDeviceType(navigator.userAgent);\n    },\n\n    /**\n     * Detects the device type, based on given userAgentString.\n     *\n     * @param userAgentString {String} userAgent parameter, needed for decision.\n     * @return {String} The device type name of determined device: \"mobile\",\"desktop\",\"tablet\"\n     */\n    detectDeviceType(userAgentString) {\n      if (qx.bom.client.Device.detectTabletDevice(userAgentString)) {\n        return \"tablet\";\n      } else if (qx.bom.client.Device.detectMobileDevice(userAgentString)) {\n        return \"mobile\";\n      }\n\n      return \"desktop\";\n    },\n\n    /**\n     * Detects if a device is a mobile phone. (Tablets excluded.)\n     * @param userAgentString {String} userAgent parameter, needed for decision.\n     * @return {Boolean} Flag which indicates whether it is a mobile device.\n     */\n    detectMobileDevice(userAgentString) {\n      return /android.+mobile|ip(hone|od)|bada\\/|blackberry|BB10|maemo|opera m(ob|in)i|fennec|NetFront|phone|psp|symbian|IEMobile|windows (ce|phone)|xda/i.test(\n        userAgentString\n      );\n    },\n\n    /**\n     * Detects if a device is a tablet device.\n     * @param userAgentString {String} userAgent parameter, needed for decision.\n     * @return {Boolean} Flag which indicates whether it is a tablet device.\n     */\n    detectTabletDevice(userAgentString) {\n      var iPadOS13Up =\n        navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n      var isIE10Tablet =\n        /MSIE 10/i.test(userAgentString) &&\n        /ARM/i.test(userAgentString) &&\n        !/windows phone/i.test(userAgentString);\n      var isCommonTablet =\n        !/android.+mobile|Tablet PC/i.test(userAgentString) &&\n        /Android|ipad|tablet|playbook|silk|kindle|psp/i.test(userAgentString);\n\n      return isIE10Tablet || isCommonTablet || iPadOS13Up;\n    },\n\n    /**\n     * Detects the device's pixel ratio. Returns 1 if detection is not possible.\n     *\n     * @return {Number} The device's pixel ratio\n     */\n    getDevicePixelRatio() {\n      if (typeof window.devicePixelRatio !== \"undefined\") {\n        return window.devicePixelRatio;\n      }\n\n      return 1;\n    },\n\n    /**\n     * Detects if either touch events or pointer events are supported.\n     * Additionally it checks if touch is enabled for pointer events.\n     *\n     * @return {Boolean} <code>true</code>, if the device supports touch\n     */\n    getTouch() {\n      return (\n        \"ontouchstart\" in window ||\n        window.navigator.maxTouchPoints > 0 ||\n        window.navigator.msMaxTouchPoints > 0\n      );\n    }\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"device.name\", statics.getName);\n    qx.core.Environment.add(\"device.touch\", statics.getTouch);\n    qx.core.Environment.add(\"device.type\", statics.getType);\n    qx.core.Environment.add(\"device.pixelRatio\", statics.getDevicePixelRatio);\n  }\n});\n"
  ],
  "mappings": "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"
}