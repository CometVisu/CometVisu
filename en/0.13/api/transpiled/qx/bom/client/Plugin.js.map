{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getGears",
    "window",
    "google",
    "gears",
    "getActiveX",
    "ActiveXObject",
    "undefined",
    "ex",
    "getSkype",
    "bom",
    "client",
    "Plugin",
    "e",
    "mimeTypes",
    "navigator",
    "i",
    "length",
    "desc",
    "type",
    "indexOf",
    "__db",
    "quicktime",
    "plugin",
    "control",
    "wmv",
    "divx",
    "silverlight",
    "pdf",
    "getQuicktimeVersion",
    "entry",
    "__getVersion",
    "getWindowsMediaVersion",
    "getDivXVersion",
    "getSilverlightVersion",
    "getPdfVersion",
    "getQuicktime",
    "__isAvailable",
    "getWindowsMedia",
    "getDivX",
    "getSilverlight",
    "getPdf",
    "activeXName",
    "pluginNames",
    "forceActiveX",
    "available",
    "Engine",
    "getName",
    "Browser",
    "getDocumentMode",
    "obj",
    "version",
    "GetVersions",
    "split",
    "versionInfo",
    "settings",
    "plugins",
    "verreg",
    "j",
    "name",
    "test",
    "description",
    "RegExp",
    "$1",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Plugin.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Contains detection for QuickTime, Windows Media, DivX, Silverlight and gears.\n * If no version could be detected the version is set to an empty string as\n * default.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Plugin\", {\n  statics: {\n    /**\n     * Checks for the availability of google gears plugin.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if gears is available\n     */\n    getGears() {\n      return !!(window.google && window.google.gears);\n    },\n\n    /**\n     * Checks for ActiveX availability.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if ActiveX is available\n     *\n     * @ignore(window.ActiveXObject)\n     */\n    getActiveX() {\n      if (typeof window.ActiveXObject === \"function\") {\n        return true;\n      }\n      try {\n        // in IE11 Preview, ActiveXObject is undefined but instances can\n        // still be created\n        return (\n          window.ActiveXObject !== undefined &&\n          (typeof new window.ActiveXObject(\"Microsoft.XMLHTTP\") === \"object\" ||\n            typeof new window.ActiveXObject(\"MSXML2.DOMDocument.6.0\") ===\n              \"object\")\n        );\n      } catch (ex) {\n        return false;\n      }\n    },\n\n    /**\n     * Checks for Skypes 'Click to call' availability.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if the plugin is available.\n     */\n    getSkype() {\n      // IE Support\n      if (qx.bom.client.Plugin.getActiveX()) {\n        try {\n          new window.ActiveXObject(\"Skype.Detection\");\n          return true;\n        } catch (e) {}\n      }\n\n      var mimeTypes = navigator.mimeTypes;\n      if (mimeTypes) {\n        // FF support\n        if (\"application/x-skype\" in mimeTypes) {\n          return true;\n        }\n        // webkit support\n        for (var i = 0; i < mimeTypes.length; i++) {\n          var desc = mimeTypes[i];\n          if (desc.type.indexOf(\"skype.click2call\") != -1) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Database of supported features.\n     * Filled with additional data at initialization\n     */\n    __db: {\n      quicktime: {\n        plugin: [\"QuickTime\"],\n        control: \"QuickTimeCheckObject.QuickTimeCheck.1\"\n        // call returns boolean: instance.IsQuickTimeAvailable(0)\n      },\n\n      wmv: {\n        plugin: [\"Windows Media\"],\n        control: \"WMPlayer.OCX.7\"\n        // version string in: instance.versionInfo\n      },\n\n      divx: {\n        plugin: [\"DivX Web Player\"],\n        control: \"npdivx.DivXBrowserPlugin.1\"\n      },\n\n      silverlight: {\n        plugin: [\"Silverlight\"],\n        control: \"AgControl.AgControl\"\n        // version string in: instance.version (Silverlight 1.0)\n        // version string in: instance.settings.version (Silverlight 1.1)\n        // version check possible using instance.IsVersionSupported\n      },\n\n      pdf: {\n        plugin: [\"Chrome PDF Viewer\", \"Adobe Acrobat\"],\n        control: \"AcroPDF.PDF\"\n        // this is detecting Acrobat PDF version > 7 and Chrome PDF Viewer\n      }\n    },\n\n    /**\n     * Fetches the version of the quicktime plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getQuicktimeVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"quicktime\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the windows media plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getWindowsMediaVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"wmv\"];\n      return qx.bom.client.Plugin.__getVersion(\n        entry.control,\n        entry.plugin,\n        true\n      );\n    },\n\n    /**\n     * Fetches the version of the divx plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getDivXVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"divx\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the silverlight plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getSilverlightVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"silverlight\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the pdf plugin.\n     *\n     * There are two built-in PDF viewer shipped with browsers:\n     *\n     * <ul>\n     *  <li>Chrome PDF Viewer</li>\n     *  <li>PDF.js (Firefox)</li>\n     * </ul>\n     *\n     * While the Chrome PDF Viewer is implemented as plugin and therefore\n     * detected by this method PDF.js is <strong>not</strong>.\n     *\n     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n     * which you might check additionally.\n     *\n     * @return {String} The version of the plugin, if available,\n     *  an empty string otherwise\n     * @internal\n     */\n    getPdfVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"pdf\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the quicktime plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getQuicktime() {\n      var entry = qx.bom.client.Plugin.__db[\"quicktime\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the windows media plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getWindowsMedia() {\n      var entry = qx.bom.client.Plugin.__db[\"wmv\"];\n      return qx.bom.client.Plugin.__isAvailable(\n        entry.control,\n        entry.plugin,\n        true\n      );\n    },\n\n    /**\n     * Checks if the divx plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getDivX() {\n      var entry = qx.bom.client.Plugin.__db[\"divx\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the silverlight plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getSilverlight() {\n      var entry = qx.bom.client.Plugin.__db[\"silverlight\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the pdf plugin is available.\n     *\n     * There are two built-in PDF viewer shipped with browsers:\n     *\n     * <ul>\n     *  <li>Chrome PDF Viewer</li>\n     *  <li>PDF.js (Firefox)</li>\n     * </ul>\n     *\n     * While the Chrome PDF Viewer is implemented as plugin and therefore\n     * detected by this method PDF.js is <strong>not</strong>.\n     *\n     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n     * which you might check additionally.\n     *\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getPdf() {\n      var entry = qx.bom.client.Plugin.__db[\"pdf\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Internal helper for getting the version of a given plugin.\n     *\n     * @param activeXName {String} The name which should be used to generate\n     *   the test ActiveX Object.\n     * @param pluginNames {Array} The names with which the plugins are listed in\n     *   the navigator.plugins list.\n     * @param forceActiveX {Boolean?false} Force detection using ActiveX\n     *   for IE11 plugins that aren't listed in navigator.plugins\n     * @return {String} The version of the plugin as string.\n     */\n    __getVersion(activeXName, pluginNames, forceActiveX) {\n      var available = qx.bom.client.Plugin.__isAvailable(\n        activeXName,\n        pluginNames,\n        forceActiveX\n      );\n\n      // don't check if the plugin is not available\n      if (!available) {\n        return \"\";\n      }\n\n      // IE checks\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        (qx.bom.client.Browser.getDocumentMode() < 11 || forceActiveX)\n      ) {\n        try {\n          var obj = new window.ActiveXObject(activeXName);\n          var version;\n\n          // pdf version detection\n          if (obj.GetVersions && obj.GetVersions()) {\n            version = obj.GetVersions().split(\",\");\n            if (version.length > 1) {\n              version = version[0].split(\"=\");\n              if (version.length === 2) {\n                return version[1];\n              }\n            }\n          }\n\n          version = obj.versionInfo;\n          if (version != undefined) {\n            return version;\n          }\n\n          version = obj.version;\n          if (version != undefined) {\n            return version;\n          }\n\n          version = obj.settings.version;\n          if (version != undefined) {\n            return version;\n          }\n        } catch (ex) {\n          return \"\";\n        }\n\n        return \"\";\n\n        // all other browsers\n      } else {\n        var plugins = navigator.plugins;\n\n        var verreg = /([0-9]\\.[0-9])/g;\n        for (var i = 0; i < plugins.length; i++) {\n          var plugin = plugins[i];\n\n          for (var j = 0; j < pluginNames.length; j++) {\n            if (plugin.name.indexOf(pluginNames[j]) !== -1) {\n              if (verreg.test(plugin.name) || verreg.test(plugin.description)) {\n                return RegExp.$1;\n              }\n            }\n          }\n        }\n\n        return \"\";\n      }\n    },\n\n    /**\n     * Internal helper for getting the availability of a given plugin.\n     *\n     * @param activeXName {String} The name which should be used to generate\n     *   the test ActiveX Object.\n     * @param pluginNames {Array} The names with which the plugins are listed in\n     *   the navigator.plugins list.\n     * @param forceActiveX {Boolean?false} Force detection using ActiveX\n     *   for IE11 plugins that aren't listed in navigator.plugins\n     * @return {Boolean} <code>true</code>, if the plugin available\n     */\n    __isAvailable(activeXName, pluginNames, forceActiveX) {\n      // IE checks\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        (qx.bom.client.Browser.getDocumentMode() < 11 || forceActiveX)\n      ) {\n        if (!this.getActiveX()) {\n          return false;\n        }\n\n        try {\n          new window.ActiveXObject(activeXName);\n        } catch (ex) {\n          return false;\n        }\n\n        return true;\n        // all other\n      } else {\n        var plugins = navigator.plugins;\n        if (!plugins) {\n          return false;\n        }\n\n        var name;\n        for (var i = 0; i < plugins.length; i++) {\n          name = plugins[i].name;\n\n          for (var j = 0; j < pluginNames.length; j++) {\n            if (name.indexOf(pluginNames[j]) !== -1) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"plugin.gears\", statics.getGears);\n    qx.core.Environment.add(\"plugin.quicktime\", statics.getQuicktime);\n    qx.core.Environment.add(\n      \"plugin.quicktime.version\",\n      statics.getQuicktimeVersion\n    );\n\n    qx.core.Environment.add(\"plugin.windowsmedia\", statics.getWindowsMedia);\n    qx.core.Environment.add(\n      \"plugin.windowsmedia.version\",\n      statics.getWindowsMediaVersion\n    );\n\n    qx.core.Environment.add(\"plugin.divx\", statics.getDivX);\n    qx.core.Environment.add(\"plugin.divx.version\", statics.getDivXVersion);\n    qx.core.Environment.add(\"plugin.silverlight\", statics.getSilverlight);\n    qx.core.Environment.add(\n      \"plugin.silverlight.version\",\n      statics.getSilverlightVersion\n    );\n\n    qx.core.Environment.add(\"plugin.pdf\", statics.getPdf);\n    qx.core.Environment.add(\"plugin.pdf.version\", statics.getPdfVersion);\n    qx.core.Environment.add(\"plugin.activex\", statics.getActiveX);\n    qx.core.Environment.add(\"plugin.skype\", statics.getSkype);\n  }\n});\n"
  ],
  "mappings": "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"
}