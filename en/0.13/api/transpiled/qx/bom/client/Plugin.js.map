{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getGears",
    "window",
    "google",
    "gears",
    "getActiveX",
    "ActiveXObject",
    "undefined",
    "ex",
    "getSkype",
    "bom",
    "client",
    "Plugin",
    "e",
    "mimeTypes",
    "navigator",
    "i",
    "length",
    "desc",
    "type",
    "indexOf",
    "__db",
    "quicktime",
    "plugin",
    "control",
    "wmv",
    "divx",
    "silverlight",
    "pdf",
    "getQuicktimeVersion",
    "entry",
    "__getVersion",
    "getWindowsMediaVersion",
    "getDivXVersion",
    "getSilverlightVersion",
    "getPdfVersion",
    "getQuicktime",
    "__isAvailable",
    "getWindowsMedia",
    "getDivX",
    "getSilverlight",
    "getPdf",
    "activeXName",
    "pluginNames",
    "forceActiveX",
    "available",
    "Engine",
    "getName",
    "Browser",
    "getDocumentMode",
    "obj",
    "version",
    "GetVersions",
    "split",
    "versionInfo",
    "settings",
    "plugins",
    "verreg",
    "j",
    "name",
    "test",
    "description",
    "RegExp",
    "$1",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Plugin.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Contains detection for QuickTime, Windows Media, DivX, Silverlight and gears.\n * If no version could be detected the version is set to an empty string as\n * default.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Plugin\", {\n  statics: {\n    /**\n     * Checks for the availability of google gears plugin.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if gears is available\n     */\n    getGears() {\n      return !!(window.google && window.google.gears);\n    },\n\n    /**\n     * Checks for ActiveX availability.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if ActiveX is available\n     *\n     * @ignore(window.ActiveXObject)\n     */\n    getActiveX() {\n      if (typeof window.ActiveXObject === \"function\") {\n        return true;\n      }\n      try {\n        // in IE11 Preview, ActiveXObject is undefined but instances can\n        // still be created\n        return (\n          window.ActiveXObject !== undefined &&\n          (typeof new window.ActiveXObject(\"Microsoft.XMLHTTP\") === \"object\" ||\n            typeof new window.ActiveXObject(\"MSXML2.DOMDocument.6.0\") ===\n              \"object\")\n        );\n      } catch (ex) {\n        return false;\n      }\n    },\n\n    /**\n     * Checks for Skypes 'Click to call' availability.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if the plugin is available.\n     */\n    getSkype() {\n      // IE Support\n      if (qx.bom.client.Plugin.getActiveX()) {\n        try {\n          new window.ActiveXObject(\"Skype.Detection\");\n          return true;\n        } catch (e) {}\n      }\n\n      var mimeTypes = navigator.mimeTypes;\n      if (mimeTypes) {\n        // FF support\n        if (\"application/x-skype\" in mimeTypes) {\n          return true;\n        }\n        // webkit support\n        for (var i = 0; i < mimeTypes.length; i++) {\n          var desc = mimeTypes[i];\n          if (desc.type.indexOf(\"skype.click2call\") != -1) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Database of supported features.\n     * Filled with additional data at initialization\n     */\n    __db: {\n      quicktime: {\n        plugin: [\"QuickTime\"],\n        control: \"QuickTimeCheckObject.QuickTimeCheck.1\"\n        // call returns boolean: instance.IsQuickTimeAvailable(0)\n      },\n\n      wmv: {\n        plugin: [\"Windows Media\"],\n        control: \"WMPlayer.OCX.7\"\n        // version string in: instance.versionInfo\n      },\n\n      divx: {\n        plugin: [\"DivX Web Player\"],\n        control: \"npdivx.DivXBrowserPlugin.1\"\n      },\n\n      silverlight: {\n        plugin: [\"Silverlight\"],\n        control: \"AgControl.AgControl\"\n        // version string in: instance.version (Silverlight 1.0)\n        // version string in: instance.settings.version (Silverlight 1.1)\n        // version check possible using instance.IsVersionSupported\n      },\n\n      pdf: {\n        plugin: [\"Chrome PDF Viewer\", \"Adobe Acrobat\"],\n        control: \"AcroPDF.PDF\"\n        // this is detecting Acrobat PDF version > 7 and Chrome PDF Viewer\n      }\n    },\n\n    /**\n     * Fetches the version of the quicktime plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getQuicktimeVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"quicktime\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the windows media plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getWindowsMediaVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"wmv\"];\n      return qx.bom.client.Plugin.__getVersion(\n        entry.control,\n        entry.plugin,\n        true\n      );\n    },\n\n    /**\n     * Fetches the version of the divx plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getDivXVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"divx\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the silverlight plugin.\n     * @return {String} The version of the plugin, if available,\n     *   an empty string otherwise\n     * @internal\n     */\n    getSilverlightVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"silverlight\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Fetches the version of the pdf plugin.\n     *\n     * There are two built-in PDF viewer shipped with browsers:\n     *\n     * <ul>\n     *  <li>Chrome PDF Viewer</li>\n     *  <li>PDF.js (Firefox)</li>\n     * </ul>\n     *\n     * While the Chrome PDF Viewer is implemented as plugin and therefore\n     * detected by this method PDF.js is <strong>not</strong>.\n     *\n     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n     * which you might check additionally.\n     *\n     * @return {String} The version of the plugin, if available,\n     *  an empty string otherwise\n     * @internal\n     */\n    getPdfVersion() {\n      var entry = qx.bom.client.Plugin.__db[\"pdf\"];\n      return qx.bom.client.Plugin.__getVersion(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the quicktime plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getQuicktime() {\n      var entry = qx.bom.client.Plugin.__db[\"quicktime\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the windows media plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getWindowsMedia() {\n      var entry = qx.bom.client.Plugin.__db[\"wmv\"];\n      return qx.bom.client.Plugin.__isAvailable(\n        entry.control,\n        entry.plugin,\n        true\n      );\n    },\n\n    /**\n     * Checks if the divx plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getDivX() {\n      var entry = qx.bom.client.Plugin.__db[\"divx\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the silverlight plugin is available.\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getSilverlight() {\n      var entry = qx.bom.client.Plugin.__db[\"silverlight\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Checks if the pdf plugin is available.\n     *\n     * There are two built-in PDF viewer shipped with browsers:\n     *\n     * <ul>\n     *  <li>Chrome PDF Viewer</li>\n     *  <li>PDF.js (Firefox)</li>\n     * </ul>\n     *\n     * While the Chrome PDF Viewer is implemented as plugin and therefore\n     * detected by this method PDF.js is <strong>not</strong>.\n     *\n     * See the dedicated environment key (<em>plugin.pdfjs</em>) instead,\n     * which you might check additionally.\n     *\n     * @return {Boolean} <code>true</code> if the plugin is available\n     * @internal\n     */\n    getPdf() {\n      var entry = qx.bom.client.Plugin.__db[\"pdf\"];\n      return qx.bom.client.Plugin.__isAvailable(entry.control, entry.plugin);\n    },\n\n    /**\n     * Internal helper for getting the version of a given plugin.\n     *\n     * @param activeXName {String} The name which should be used to generate\n     *   the test ActiveX Object.\n     * @param pluginNames {Array} The names with which the plugins are listed in\n     *   the navigator.plugins list.\n     * @param forceActiveX {Boolean?false} Force detection using ActiveX\n     *   for IE11 plugins that aren't listed in navigator.plugins\n     * @return {String} The version of the plugin as string.\n     */\n    __getVersion(activeXName, pluginNames, forceActiveX) {\n      var available = qx.bom.client.Plugin.__isAvailable(\n        activeXName,\n        pluginNames,\n        forceActiveX\n      );\n\n      // don't check if the plugin is not available\n      if (!available) {\n        return \"\";\n      }\n\n      // IE checks\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        (qx.bom.client.Browser.getDocumentMode() < 11 || forceActiveX)\n      ) {\n        try {\n          var obj = new window.ActiveXObject(activeXName);\n          var version;\n\n          // pdf version detection\n          if (obj.GetVersions && obj.GetVersions()) {\n            version = obj.GetVersions().split(\",\");\n            if (version.length > 1) {\n              version = version[0].split(\"=\");\n              if (version.length === 2) {\n                return version[1];\n              }\n            }\n          }\n\n          version = obj.versionInfo;\n          if (version != undefined) {\n            return version;\n          }\n\n          version = obj.version;\n          if (version != undefined) {\n            return version;\n          }\n\n          version = obj.settings.version;\n          if (version != undefined) {\n            return version;\n          }\n        } catch (ex) {\n          return \"\";\n        }\n\n        return \"\";\n\n        // all other browsers\n      } else {\n        var plugins = navigator.plugins;\n\n        var verreg = /([0-9]\\.[0-9])/g;\n        for (var i = 0; i < plugins.length; i++) {\n          var plugin = plugins[i];\n\n          for (var j = 0; j < pluginNames.length; j++) {\n            if (plugin.name.indexOf(pluginNames[j]) !== -1) {\n              if (verreg.test(plugin.name) || verreg.test(plugin.description)) {\n                return RegExp.$1;\n              }\n            }\n          }\n        }\n\n        return \"\";\n      }\n    },\n\n    /**\n     * Internal helper for getting the availability of a given plugin.\n     *\n     * @param activeXName {String} The name which should be used to generate\n     *   the test ActiveX Object.\n     * @param pluginNames {Array} The names with which the plugins are listed in\n     *   the navigator.plugins list.\n     * @param forceActiveX {Boolean?false} Force detection using ActiveX\n     *   for IE11 plugins that aren't listed in navigator.plugins\n     * @return {Boolean} <code>true</code>, if the plugin available\n     */\n    __isAvailable(activeXName, pluginNames, forceActiveX) {\n      // IE checks\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        (qx.bom.client.Browser.getDocumentMode() < 11 || forceActiveX)\n      ) {\n        if (!this.getActiveX()) {\n          return false;\n        }\n\n        try {\n          new window.ActiveXObject(activeXName);\n        } catch (ex) {\n          return false;\n        }\n\n        return true;\n        // all other\n      } else {\n        var plugins = navigator.plugins;\n        if (!plugins) {\n          return false;\n        }\n\n        var name;\n        for (var i = 0; i < plugins.length; i++) {\n          name = plugins[i].name;\n\n          for (var j = 0; j < pluginNames.length; j++) {\n            if (name.indexOf(pluginNames[j]) !== -1) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"plugin.gears\", statics.getGears);\n    qx.core.Environment.add(\"plugin.quicktime\", statics.getQuicktime);\n    qx.core.Environment.add(\n      \"plugin.quicktime.version\",\n      statics.getQuicktimeVersion\n    );\n\n    qx.core.Environment.add(\"plugin.windowsmedia\", statics.getWindowsMedia);\n    qx.core.Environment.add(\n      \"plugin.windowsmedia.version\",\n      statics.getWindowsMediaVersion\n    );\n\n    qx.core.Environment.add(\"plugin.divx\", statics.getDivX);\n    qx.core.Environment.add(\"plugin.divx.version\", statics.getDivXVersion);\n    qx.core.Environment.add(\"plugin.silverlight\", statics.getSilverlight);\n    qx.core.Environment.add(\n      \"plugin.silverlight.version\",\n      statics.getSilverlightVersion\n    );\n\n    qx.core.Environment.add(\"plugin.pdf\", statics.getPdf);\n    qx.core.Environment.add(\"plugin.pdf.version\", statics.getPdfVersion);\n    qx.core.Environment.add(\"plugin.activex\", statics.getActiveX);\n    qx.core.Environment.add(\"plugin.skype\", statics.getSkype);\n  }\n});\n"
  ],
  "mappings": "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"
}