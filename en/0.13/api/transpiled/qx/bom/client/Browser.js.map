{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getName",
    "bom",
    "client",
    "Browser",
    "detectName",
    "navigator",
    "userAgent",
    "agent",
    "reg",
    "RegExp",
    "__agents",
    "match",
    "name",
    "toLowerCase",
    "engine",
    "Engine",
    "indexOf",
    "OperatingSystem",
    "getVersion",
    "version",
    "$2",
    "$1",
    "getDocumentMode",
    "document",
    "documentMode",
    "getQuirksMode",
    "parseFloat",
    "DOCUMENT_MODE",
    "compatMode",
    "webkit",
    "gecko",
    "mshtml",
    "opera",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Browser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n   ======================================================================\n\n   This class contains code from:\n\n   * Unify Project\n\n     Homepage:\n       http://unify-project.org\n\n     Copyright:\n       2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n     Authors:\n       * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Basic browser detection for qooxdoo.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @require(qx.bom.client.OperatingSystem#getVersion)\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.Browser\", {\n  statics: {\n    /**\n     * Checks for the name of the browser and returns it.\n     * @return {String} The name of the current browser.\n     * @internal\n     */\n    getName() {\n      return qx.bom.client.Browser.detectName(navigator.userAgent);\n    },\n\n    /**\n     * Examines the user agent of the browser to determine the browser name\n     *\n     * @param agent {String} the user agent string\n     * @return {String} The name of the current browser.\n     */\n    detectName(agent) {\n      var reg = new RegExp(\n        \"(\" + qx.bom.client.Browser.__agents + \")(/|)?([0-9]+.[0-9])?\"\n      );\n\n      var match = agent.match(reg);\n      if (!match) {\n        return \"\";\n      }\n\n      var name = match[1].toLowerCase();\n\n      var engine = qx.bom.client.Engine.getName();\n      if (engine === \"webkit\") {\n        if (agent.match(/Edge\\/\\d+\\.\\d+/)) {\n          name = \"edge\";\n        } else if (name === \"android\") {\n          // Fix Chrome name (for instance wrongly defined in user agent on Android 1.6)\n          name = \"mobile chrome\";\n        } else if (\n          agent.indexOf(\"Mobile Safari\") !== -1 ||\n          agent.indexOf(\"Mobile/\") !== -1\n        ) {\n          // Fix Safari name\n          name = \"mobile safari\";\n        } else if (agent.indexOf(\" OPR/\") != -1) {\n          name = \"opera\";\n        }\n      } else if (engine === \"mshtml\") {\n        // IE 11's ua string no longer contains \"MSIE\" or even \"IE\"\n        if (name === \"msie\" || name === \"trident\") {\n          name = \"ie\";\n\n          // Fix IE mobile before Microsoft added IEMobile string\n          if (qx.bom.client.OperatingSystem.getVersion() === \"ce\") {\n            name = \"iemobile\";\n          }\n\n          var reg = new RegExp(\"IEMobile\");\n          if (agent.match(reg)) {\n            name = \"iemobile\";\n          }\n        }\n      } else if (engine === \"opera\") {\n        if (name === \"opera mobi\") {\n          name = \"operamobile\";\n        } else if (name === \"opera mini\") {\n          name = \"operamini\";\n        }\n      }\n\n      return name;\n    },\n\n    /**\n     * Determines the version of the current browser.\n     * @return {String} The name of the current browser.\n     * @internal\n     */\n    getVersion() {\n      var agent = navigator.userAgent;\n      var reg = new RegExp(\n        \"(\" + qx.bom.client.Browser.__agents + \")(/| )([0-9]+.[0-9])\"\n      );\n\n      var match = agent.match(reg);\n      if (!match) {\n        return \"\";\n      }\n\n      var name = match[1].toLowerCase();\n      var version = match[3];\n\n      // Support new style version string used by Opera and Safari\n      if (agent.match(/Version(\\/| )([0-9]+\\.[0-9])/)) {\n        version = RegExp.$2;\n      }\n\n      if (qx.bom.client.Engine.getName() == \"mshtml\") {\n        // Use the Engine version, because IE8 and higher change the user agent\n        // string to an older version in compatibility mode\n        version = qx.bom.client.Engine.getVersion();\n\n        if (\n          name === \"msie\" &&\n          qx.bom.client.OperatingSystem.getVersion() == \"ce\"\n        ) {\n          // Fix IE mobile before Microsoft added IEMobile string\n          version = \"5.0\";\n        }\n      }\n\n      if (\n        qx.bom.client.Engine.getName() == \"webkit\" ||\n        qx.bom.client.Browser.getName() == \"opera\"\n      ) {\n        if (agent.match(/OPR(\\/| )([0-9]+\\.[0-9])/)) {\n          version = RegExp.$2;\n        }\n        if (agent.match(/Edge\\/([\\d+\\.*]+)/)) {\n          version = RegExp.$1;\n        }\n      }\n\n      return version;\n    },\n\n    /**\n     * Returns in which document mode the current document is (only for IE).\n     *\n     * @internal\n     * @return {Number} The mode in which the browser is.\n     */\n    getDocumentMode() {\n      if (document.documentMode) {\n        return document.documentMode;\n      }\n      return 0;\n    },\n\n    /**\n     * Check if in quirks mode.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code>, if the environment is in quirks mode\n     */\n    getQuirksMode() {\n      if (\n        qx.bom.client.Engine.getName() == \"mshtml\" &&\n        parseFloat(qx.bom.client.Engine.getVersion()) >= 8\n      ) {\n        return qx.bom.client.Engine.DOCUMENT_MODE === 5;\n      } else {\n        return document.compatMode !== \"CSS1Compat\";\n      }\n    },\n\n    /**\n     * Internal helper map for picking the right browser names to check.\n     */\n    __agents: {\n      // Safari should be the last one to check, because some other Webkit-based browsers\n      // use this identifier together with their own one.\n      // \"Version\" is used in Safari 4 to define the Safari version. After \"Safari\" they place the\n      // Webkit version instead. Silly.\n      // Palm Pre uses both Safari (contains Webkit version) and \"Version\" contains the \"Pre\" version. But\n      // as \"Version\" is not Safari here, we better detect this as the Pre-Browser version. So place\n      // \"Pre\" in front of both \"Version\" and \"Safari\".\n      webkit:\n        \"AdobeAIR|Titanium|Fluid|Chrome|Android|Epiphany|Konqueror|iCab|iPad|iPhone|OmniWeb|Maxthon|Pre|PhantomJS|Mobile Safari|Safari\",\n\n      // Better security by keeping Firefox the last one to match\n      gecko:\n        \"prism|Fennec|Camino|Kmeleon|Galeon|Netscape|SeaMonkey|Namoroka|Firefox\",\n\n      // No idea what other browsers based on IE's engine\n      mshtml: \"IEMobile|Maxthon|MSIE|Trident\",\n\n      // Keep \"Opera\" the last one to correctly prefer/match the mobile clients\n      opera: \"Opera Mini|Opera Mobi|Opera\"\n    }[qx.bom.client.Engine.getName()]\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"browser.name\", statics.getName);\n    qx.core.Environment.add(\"browser.version\", statics.getVersion);\n    qx.core.Environment.add(\"browser.documentmode\", statics.getDocumentMode);\n    qx.core.Environment.add(\"browser.quirksmode\", statics.getQuirksMode);\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}