{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getName",
    "name",
    "Packages",
    "Object",
    "prototype",
    "toString",
    "call",
    "process",
    "Titanium",
    "userAgent",
    "bom",
    "client",
    "Browser",
    "defer",
    "core",
    "Environment",
    "add",
    "Runtime"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Runtime.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Basic runtime detection for qooxdoo.\n *\n * This class is used by {@link qx.core.Environment} and should not be used\n * directly. Please check its class comment for details how to use it.\n *\n * @internal\n *\n * @ignore(environment)\n * @ignore(process)\n * @ignore(Titanium.*)\n * @ignore(Packages)\n */\n/* global Packages, enviroment, process, Titanium */\nqx.Bootstrap.define(\"qx.bom.client.Runtime\", {\n  statics: {\n    /**\n     * Checks for the name of the runtime and returns it. In general, it checks\n     * for rhino and node.js and if that could not be detected, it falls back\n     * to the browser name defined by {@link qx.bom.client.Browser#getName}.\n     * @return {String} The name of the current runtime.\n     * @internal\n     */\n    getName() {\n      var name = \"\";\n\n      // check for the Rhino runtime\n      if (\n        typeof Packages === \"object\" &&\n        Object.prototype.toString.call(Packages) === \"[object JavaPackage]\"\n      ) {\n        name = \"rhino\";\n        // check for the Node.js runtime\n      } else if (typeof process !== \"undefined\") {\n        name = \"node.js\";\n      } else if (\n        typeof Titanium !== \"undefined\" &&\n        typeof Titanium.userAgent !== \"undefined\"\n      ) {\n        name = \"titanium\";\n      } else {\n        // otherwise, we think its a browser\n        name = qx.bom.client.Browser.getName();\n      }\n\n      return name;\n    }\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"runtime.name\", statics.getName);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,uBAApB,EAA6C;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,OARO,qBAQG;QACR,IAAIC,IAAI,GAAG,EAAX,CADQ,CAGR;;QACA,IACE,QAAOC,QAAP,yCAAOA,QAAP,OAAoB,QAApB,IACAC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,QAA/B,MAA6C,sBAF/C,EAGE;UACAD,IAAI,GAAG,OAAP,CADA,CAEA;QACD,CAND,MAMO,IAAI,OAAOM,OAAP,KAAmB,WAAvB,EAAoC;UACzCN,IAAI,GAAG,SAAP;QACD,CAFM,MAEA,IACL,OAAOO,QAAP,KAAoB,WAApB,IACA,OAAOA,QAAQ,CAACC,SAAhB,KAA8B,WAFzB,EAGL;UACAR,IAAI,GAAG,UAAP;QACD,CALM,MAKA;UACL;UACAA,IAAI,GAAGP,EAAE,CAACgB,GAAH,CAAOC,MAAP,CAAcC,OAAd,CAAsBZ,OAAtB,EAAP;QACD;;QAED,OAAOC,IAAP;MACD;IA/BM,CADkC;IAmC3CY,KAnC2C,iBAmCrCd,OAnCqC,EAmC5B;MACbL,EAAE,CAACoB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,cAAxB,EAAwCjB,OAAO,CAACC,OAAhD;IACD;EArC0C,CAA7C;EAhCAN,EAAE,CAACgB,GAAH,CAAOC,MAAP,CAAcM,OAAd,CAAsBpB,aAAtB,GAAsCA,aAAtC"
}