{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getName",
    "name",
    "Packages",
    "_typeof",
    "Object",
    "prototype",
    "toString",
    "call",
    "process",
    "Titanium",
    "userAgent",
    "bom",
    "client",
    "Browser",
    "defer",
    "core",
    "Environment",
    "add",
    "Runtime"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/Runtime.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Basic runtime detection for qooxdoo.\r\n *\r\n * This class is used by {@link qx.core.Environment} and should not be used\r\n * directly. Please check its class comment for details how to use it.\r\n *\r\n * @internal\r\n *\r\n * @ignore(environment)\r\n * @ignore(process)\r\n * @ignore(Titanium.*)\r\n * @ignore(Packages)\r\n */\r\n/* global Packages, enviroment, process, Titanium */\r\nqx.Bootstrap.define(\"qx.bom.client.Runtime\", {\r\n  statics: {\r\n    /**\r\n     * Checks for the name of the runtime and returns it. In general, it checks\r\n     * for rhino and node.js and if that could not be detected, it falls back\r\n     * to the browser name defined by {@link qx.bom.client.Browser#getName}.\r\n     * @return {String} The name of the current runtime.\r\n     * @internal\r\n     */\r\n    getName() {\r\n      var name = \"\";\r\n\r\n      // check for the Rhino runtime\r\n      if (\r\n        typeof Packages === \"object\" &&\r\n        Object.prototype.toString.call(Packages) === \"[object JavaPackage]\"\r\n      ) {\r\n        name = \"rhino\";\r\n        // check for the Node.js runtime\r\n      } else if (typeof process !== \"undefined\") {\r\n        name = \"node.js\";\r\n      } else if (\r\n        typeof Titanium !== \"undefined\" &&\r\n        typeof Titanium.userAgent !== \"undefined\"\r\n      ) {\r\n        name = \"titanium\";\r\n      } else {\r\n        // otherwise, we think its a browser\r\n        name = qx.bom.client.Browser.getName();\r\n      }\r\n\r\n      return name;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qx.core.Environment.add(\"runtime.name\", statics.getName);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,uBAAuB,EAAE;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAAA,EAAG;QACR,IAAIC,IAAI,GAAG,EAAE;;QAEb;QACA,IACE,QAAOC,QAAQ,iCAAAC,OAAA,CAARD,QAAQ,OAAK,QAAQ,IAC5BE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,QAAQ,CAAC,KAAK,sBAAsB,EACnE;UACAD,IAAI,GAAG,OAAO;UACd;QACF,CAAC,MAAM,IAAI,OAAOO,OAAO,KAAK,WAAW,EAAE;UACzCP,IAAI,GAAG,SAAS;QAClB,CAAC,MAAM,IACL,OAAOQ,QAAQ,KAAK,WAAW,IAC/B,OAAOA,QAAQ,CAACC,SAAS,KAAK,WAAW,EACzC;UACAT,IAAI,GAAG,UAAU;QACnB,CAAC,MAAM;UACL;UACAA,IAAI,GAAGP,EAAE,CAACiB,GAAG,CAACC,MAAM,CAACC,OAAO,CAACb,OAAO,CAAC,CAAC;QACxC;QAEA,OAAOC,IAAI;MACb;IACF,CAAC;IAEDa,KAAK,WAAAA,MAACf,OAAO,EAAE;MACbL,EAAE,CAACqB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,cAAc,EAAElB,OAAO,CAACC,OAAO,CAAC;IAC1D;EACF,CAAC,CAAC;EAtEFN,EAAE,CAACiB,GAAG,CAACC,MAAM,CAACM,OAAO,CAACrB,aAAa,GAAGA,aAAa;AAAC"
}