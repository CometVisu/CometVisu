{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getSupport",
    "name",
    "bom",
    "client",
    "CssTransform",
    "getName",
    "style",
    "getStyle",
    "origin",
    "getOrigin",
    "get3D",
    "perspective",
    "getPerspective",
    "getPerspectiveOrigin",
    "getBackFaceVisibility",
    "Style",
    "getPropertyName",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/client/CssTransform.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Responsible for checking all relevant CSS transform properties.\r\n *\r\n * Specs:\r\n * http://www.w3.org/TR/css3-2d-transforms/\r\n * http://www.w3.org/TR/css3-3d-transforms/\r\n *\r\n * @internal\r\n */\r\nqx.Bootstrap.define(\"qx.bom.client.CssTransform\", {\r\n  statics: {\r\n    /**\r\n     * Main check method which returns an object if CSS animations are\r\n     * supported. This object contains all necessary keys to work with CSS\r\n     * animations.\r\n     * <ul>\r\n     *  <li><code>name</code> The name of the css transform style</li>\r\n     *  <li><code>style</code> The name of the css transform-style style</li>\r\n     *  <li><code>origin</code> The name of the transform-origin style</li>\r\n     *  <li><code>3d</code> Whether 3d transforms are supported</li>\r\n     *  <li><code>perspective</code> The name of the perspective style</li>\r\n     *  <li><code>perspective-origin</code> The name of the perspective-origin style</li>\r\n     *  <li><code>backface-visibility</code> The name of the backface-visibility style</li>\r\n     * </ul>\r\n     *\r\n     * @internal\r\n     * @return {Object|null} The described object or null, if animations are\r\n     *   not supported.\r\n     */\r\n    getSupport() {\r\n      var name = qx.bom.client.CssTransform.getName();\r\n      if (name != null) {\r\n        return {\r\n          name: name,\r\n          style: qx.bom.client.CssTransform.getStyle(),\r\n          origin: qx.bom.client.CssTransform.getOrigin(),\r\n          \"3d\": qx.bom.client.CssTransform.get3D(),\r\n          perspective: qx.bom.client.CssTransform.getPerspective(),\r\n          \"perspective-origin\":\r\n            qx.bom.client.CssTransform.getPerspectiveOrigin(),\r\n          \"backface-visibility\":\r\n            qx.bom.client.CssTransform.getBackFaceVisibility()\r\n        };\r\n      }\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used to set the transform origin.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getStyle() {\r\n      return qx.bom.Style.getPropertyName(\"transformStyle\");\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used to set the transform origin.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getPerspective() {\r\n      return qx.bom.Style.getPropertyName(\"perspective\");\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used to set the perspective origin.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getPerspectiveOrigin() {\r\n      return qx.bom.Style.getPropertyName(\"perspectiveOrigin\");\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used to set the backface visibility.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getBackFaceVisibility() {\r\n      return qx.bom.Style.getPropertyName(\"backfaceVisibility\");\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used to set the transform origin.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getOrigin() {\r\n      return qx.bom.Style.getPropertyName(\"transformOrigin\");\r\n    },\r\n\r\n    /**\r\n     * Checks for the style name used for transforms.\r\n     * @internal\r\n     * @return {String|null} The name of the style or null, if the style is\r\n     *   not supported.\r\n     */\r\n    getName() {\r\n      return qx.bom.Style.getPropertyName(\"transform\");\r\n    },\r\n\r\n    /**\r\n     * Checks if 3D transforms are supported.\r\n     * @internal\r\n     * @return {Boolean} <code>true</code>, if 3D transformations are supported\r\n     */\r\n    get3D() {\r\n      return qx.bom.client.CssTransform.getPerspective() != null;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qx.core.Environment.add(\"css.transform\", statics.getSupport);\r\n    qx.core.Environment.add(\"css.transform.3d\", statics.get3D);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}