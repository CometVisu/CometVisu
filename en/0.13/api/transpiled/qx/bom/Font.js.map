{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "size",
    "family",
    "__lookupMap",
    "fontFamily",
    "fontSize",
    "fontWeight",
    "fontStyle",
    "textDecoration",
    "lineHeight",
    "color",
    "textShadow",
    "letterSpacing",
    "undefined",
    "setSize",
    "setFamily",
    "statics",
    "fromString",
    "str",
    "font",
    "bom",
    "Font",
    "parts",
    "split",
    "name",
    "part",
    "i",
    "length",
    "setBold",
    "setItalic",
    "setDecoration",
    "temp",
    "parseInt",
    "lang",
    "String",
    "contains",
    "push",
    "fromConfig",
    "config",
    "set",
    "__defaultStyles",
    "getDefaultStyles",
    "properties",
    "check",
    "nullable",
    "apply",
    "comparisonString",
    "init",
    "version",
    "value",
    "test",
    "bold",
    "italic",
    "decoration",
    "weight",
    "fontName",
    "members",
    "loadComplete",
    "_applySize",
    "old",
    "_applyLineHeight",
    "_applyFamily",
    "l",
    "indexOf",
    "_applyFontName",
    "data",
    "theme",
    "manager",
    "getInstance",
    "getManifestFonts",
    "warn",
    "toSet",
    "forEach",
    "_applyBold",
    "_applyItalic",
    "_applyDecoration",
    "_applyColor",
    "Color",
    "resolve",
    "_applyWeight",
    "_applyTextShadow",
    "_applyLetterSpacing",
    "getStyles"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Font.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * A wrapper for CSS font styles. Fond objects can be applied to instances\n * of {@link qx.html.Element}.\n */\nqx.Class.define(\"qx.bom.Font\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param size {String?} The font size (Unit: pixel)\n   * @param family {String[]?} A sorted list of font families\n   */\n  construct(size, family) {\n    super();\n\n    this.__lookupMap = {\n      fontFamily: \"\",\n      fontSize: null,\n      fontWeight: null,\n      fontStyle: null,\n      textDecoration: null,\n      lineHeight: null,\n      color: null,\n      textShadow: null,\n      letterSpacing: null\n    };\n\n    if (size !== undefined) {\n      this.setSize(size);\n    }\n\n    if (family !== undefined) {\n      this.setFamily(family);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Converts a typical CSS font definition string to an font object\n     *\n     * Example string: <code>bold italic 20px Arial</code>\n     *\n     * @param str {String} the CSS string\n     * @return {qx.bom.Font} the created instance\n     */\n    fromString(str) {\n      var font = new qx.bom.Font();\n      var parts = str.split(/\\s+/);\n      var name = [];\n      var part;\n\n      for (var i = 0; i < parts.length; i++) {\n        switch ((part = parts[i])) {\n          case \"bold\":\n            font.setBold(true);\n            break;\n\n          case \"italic\":\n            font.setItalic(true);\n            break;\n\n          case \"underline\":\n            font.setDecoration(\"underline\");\n            break;\n\n          default:\n            var temp = parseInt(part, 10);\n\n            if (temp == part || qx.lang.String.contains(part, \"px\")) {\n              font.setSize(temp);\n            } else {\n              name.push(part);\n            }\n\n            break;\n        }\n      }\n\n      if (name.length > 0) {\n        font.setFamily(name);\n      }\n\n      return font;\n    },\n\n    /**\n     * Converts a map property definition into a font object.\n     *\n     * @param config {Map} map of property values\n     * @return {qx.bom.Font} the created instance\n     */\n    fromConfig(config) {\n      var font = new qx.bom.Font();\n      font.set(config);\n      return font;\n    },\n\n    /** @type {Map} Default (empty) CSS styles */\n    __defaultStyles: {\n      fontFamily: \"\",\n      fontSize: \"\",\n      fontWeight: \"\",\n      fontStyle: \"\",\n      textDecoration: \"\",\n      lineHeight: 1.2,\n      color: \"\",\n      textShadow: \"\",\n      letterSpacing: \"\"\n    },\n\n    /**\n     * Returns a map of all properties in empty state.\n     *\n     * This is useful for resetting previously configured\n     * font styles.\n     *\n     * @return {Map} Default styles\n     */\n    getDefaultStyles() {\n      return this.__defaultStyles;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The font size (Unit: pixel) */\n    size: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applySize\"\n    },\n\n    /**\n     * The line height as scaling factor of the default line height. A value\n     * of 1 corresponds to the default line height\n     */\n    lineHeight: {\n      check: \"Number\",\n      nullable: true,\n      apply: \"_applyLineHeight\"\n    },\n\n    /**\n     * Characters that are used to test if the font has loaded properly. These\n     * default to \"WEei\" in `qx.bom.webfont.Validator` and can be overridden\n     * for certain cases like icon fonts that do not provide the predefined\n     * characters.\n     */\n    comparisonString: {\n      check: \"String\",\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * Version identifier that is appended to the URL to be loaded. Fonts\n     * that are defined thru themes may be managed by the resource manager.\n     * In this case updated fonts persist due to aggressive fontface caching\n     * of some browsers. To get around this, set the `version` property to\n     * the version of your font. It will be appended to the CSS URL and forces\n     * the browser to re-validate.\n     *\n     * The version needs to be URL friendly, so only characters, numbers,\n     * dash and dots are allowed here.\n     */\n    version: {\n      check(value) {\n        return (\n          value === null ||\n          (typeof value === \"string\" && /^[a-zA-Z0-9.-]+$/.test(value))\n        );\n      },\n      init: null,\n      nullable: true\n    },\n\n    /** A sorted list of font families */\n    family: {\n      check: \"Array\",\n      nullable: true,\n      apply: \"_applyFamily\"\n    },\n\n    /** Whether the font is bold */\n    bold: {\n      check: \"Boolean\",\n      nullable: true,\n      apply: \"_applyBold\"\n    },\n\n    /** Whether the font is italic */\n    italic: {\n      check: \"Boolean\",\n      nullable: true,\n      apply: \"_applyItalic\"\n    },\n\n    /** The text decoration for this font */\n    decoration: {\n      check: [\"underline\", \"line-through\", \"overline\"],\n      nullable: true,\n      apply: \"_applyDecoration\"\n    },\n\n    /** The text color for this font */\n    color: {\n      check: \"Color\",\n      nullable: true,\n      apply: \"_applyColor\"\n    },\n\n    /** The text shadow for this font */\n    textShadow: {\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyTextShadow\"\n    },\n\n    /** The weight property of the font as opposed to just setting it to 'bold' by setting the bold property to true */\n    weight: {\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyWeight\"\n    },\n\n    /** The Letter Spacing (Unit: pixel) */\n    letterSpacing: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyLetterSpacing\"\n    },\n\n    /**\n     * This specifies the name of the font defined in Manifest.json in `provides.fonts` - setting it will\n     * copy the values from the Manifest into this font definition\n     */\n    fontName: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyFontName\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __lookupMap: null,\n\n    /**\n     * Called by the theme manager when all the properties to be set, have been set\n     */\n    loadComplete() {\n      // Nothing\n    },\n\n    // property apply\n    _applySize(value, old) {\n      this.__lookupMap.fontSize = value === null ? null : value + \"px\";\n    },\n\n    _applyLineHeight(value, old) {\n      this.__lookupMap.lineHeight = value === null ? null : value;\n    },\n\n    // property apply\n    _applyFamily(value, old) {\n      var family = \"\";\n\n      for (var i = 0, l = value.length; i < l; i++) {\n        // in FireFox 2 and WebKit fonts like 'serif' or 'sans-serif' must\n        // not be quoted!\n        if (value[i].indexOf(\" \") > 0) {\n          family += '\"' + value[i] + '\"';\n        } else {\n          family += value[i];\n        }\n\n        if (i !== l - 1) {\n          family += \",\";\n        }\n      }\n\n      // font family is a special case. In order to render the labels correctly\n      // we have to return a font family - even if it's an empty string to prevent\n      // the browser from applying the element style\n      this.__lookupMap.fontFamily = family;\n    },\n\n    // property apply\n    _applyFontName(value) {\n      if (value) {\n        let data =\n          qx.theme.manager.Font.getInstance().getManifestFonts()[value];\n        if (!data) {\n          this.warn(\"Cannot find a font called \" + value);\n        } else {\n          let toSet = {};\n          [\"family\", \"comparisonString\"].forEach(name => {\n            if (data[name] !== undefined) {\n              toSet[name] = data[name];\n            }\n          });\n          this.set(toSet);\n        }\n      }\n    },\n\n    // property apply\n    _applyBold(value, old) {\n      this.__lookupMap.fontWeight =\n        value == null ? null : value ? \"bold\" : \"normal\";\n    },\n\n    // property apply\n    _applyItalic(value, old) {\n      this.__lookupMap.fontStyle =\n        value == null ? null : value ? \"italic\" : \"normal\";\n    },\n\n    // property apply\n    _applyDecoration(value, old) {\n      this.__lookupMap.textDecoration = value == null ? null : value;\n    },\n\n    // property apply\n    _applyColor(value, old) {\n      this.__lookupMap.color = null;\n      if (value) {\n        this.__lookupMap.color =\n          qx.theme.manager.Color.getInstance().resolve(value);\n      }\n    },\n\n    // property apply\n    _applyWeight(value, old) {\n      this.__lookupMap.fontWeight = value;\n    },\n\n    // property apply\n    _applyTextShadow(value, old) {\n      this.__lookupMap.textShadow = value == null ? null : value;\n    },\n\n    // property apply\n    _applyLetterSpacing(value, old) {\n      this.__lookupMap.letterSpacing = value === null ? null : value + \"px\";\n    },\n\n    /**\n     * Get a map of all CSS styles, which will be applied to the widget. Only\n     * the styles which are set are returned.\n     *\n     * @return {Map} Map containing the current styles. The keys are property\n     * names which can directly be used with the <code>set</code> method of each\n     * widget.\n     */\n    getStyles() {\n      return this.__lookupMap;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}