{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "size",
    "family",
    "constructor",
    "call",
    "__lookupMap",
    "fontFamily",
    "fontSize",
    "fontWeight",
    "fontStyle",
    "textDecoration",
    "lineHeight",
    "color",
    "textShadow",
    "letterSpacing",
    "undefined",
    "setSize",
    "setFamily",
    "statics",
    "fromString",
    "str",
    "font",
    "bom",
    "Font",
    "parts",
    "split",
    "name",
    "part",
    "i",
    "length",
    "setBold",
    "setItalic",
    "setDecoration",
    "temp",
    "parseInt",
    "lang",
    "String",
    "contains",
    "push",
    "fromConfig",
    "config",
    "set",
    "__defaultStyles",
    "getDefaultStyles",
    "properties",
    "check",
    "nullable",
    "apply",
    "comparisonString",
    "init",
    "version",
    "value",
    "test",
    "bold",
    "italic",
    "decoration",
    "weight",
    "members",
    "_applySize",
    "old",
    "_applyLineHeight",
    "_applyFamily",
    "l",
    "indexOf",
    "_applyBold",
    "_applyItalic",
    "_applyDecoration",
    "_applyColor",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "resolve",
    "_applyWeight",
    "_applyTextShadow",
    "_applyLetterSpacing",
    "getStyles"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Font.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * A wrapper for CSS font styles. Fond objects can be applied to instances\n * of {@link qx.html.Element}.\n */\nqx.Class.define(\"qx.bom.Font\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param size {String?} The font size (Unit: pixel)\n   * @param family {String[]?} A sorted list of font families\n   */\n  construct(size, family) {\n    super();\n\n    this.__lookupMap = {\n      fontFamily: \"\",\n      fontSize: null,\n      fontWeight: null,\n      fontStyle: null,\n      textDecoration: null,\n      lineHeight: null,\n      color: null,\n      textShadow: null,\n      letterSpacing: null\n    };\n\n    if (size !== undefined) {\n      this.setSize(size);\n    }\n\n    if (family !== undefined) {\n      this.setFamily(family);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Converts a typical CSS font definition string to an font object\n     *\n     * Example string: <code>bold italic 20px Arial</code>\n     *\n     * @param str {String} the CSS string\n     * @return {qx.bom.Font} the created instance\n     */\n    fromString(str) {\n      var font = new qx.bom.Font();\n      var parts = str.split(/\\s+/);\n      var name = [];\n      var part;\n\n      for (var i = 0; i < parts.length; i++) {\n        switch ((part = parts[i])) {\n          case \"bold\":\n            font.setBold(true);\n            break;\n\n          case \"italic\":\n            font.setItalic(true);\n            break;\n\n          case \"underline\":\n            font.setDecoration(\"underline\");\n            break;\n\n          default:\n            var temp = parseInt(part, 10);\n\n            if (temp == part || qx.lang.String.contains(part, \"px\")) {\n              font.setSize(temp);\n            } else {\n              name.push(part);\n            }\n\n            break;\n        }\n      }\n\n      if (name.length > 0) {\n        font.setFamily(name);\n      }\n\n      return font;\n    },\n\n    /**\n     * Converts a map property definition into a font object.\n     *\n     * @param config {Map} map of property values\n     * @return {qx.bom.Font} the created instance\n     */\n    fromConfig(config) {\n      var font = new qx.bom.Font();\n      font.set(config);\n      return font;\n    },\n\n    /** @type {Map} Default (empty) CSS styles */\n    __defaultStyles: {\n      fontFamily: \"\",\n      fontSize: \"\",\n      fontWeight: \"\",\n      fontStyle: \"\",\n      textDecoration: \"\",\n      lineHeight: 1.2,\n      color: \"\",\n      textShadow: \"\",\n      letterSpacing: \"\"\n    },\n\n    /**\n     * Returns a map of all properties in empty state.\n     *\n     * This is useful for resetting previously configured\n     * font styles.\n     *\n     * @return {Map} Default styles\n     */\n    getDefaultStyles() {\n      return this.__defaultStyles;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The font size (Unit: pixel) */\n    size: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applySize\"\n    },\n\n    /**\n     * The line height as scaling factor of the default line height. A value\n     * of 1 corresponds to the default line height\n     */\n    lineHeight: {\n      check: \"Number\",\n      nullable: true,\n      apply: \"_applyLineHeight\"\n    },\n\n    /**\n     * Characters that are used to test if the font has loaded properly. These\n     * default to \"WEei\" in `qx.bom.webfont.Validator` and can be overridden\n     * for certain cases like icon fonts that do not provide the predefined\n     * characters.\n     */\n    comparisonString: {\n      check: \"String\",\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * Version identifier that is appended to the URL to be loaded. Fonts\n     * that are defined thru themes may be managed by the resource manager.\n     * In this case updated fonts persist due to aggressive fontface caching\n     * of some browsers. To get around this, set the `version` property to\n     * the version of your font. It will be appended to the CSS URL and forces\n     * the browser to re-validate.\n     *\n     * The version needs to be URL friendly, so only characters, numbers,\n     * dash and dots are allowed here.\n     */\n    version: {\n      check(value) {\n        return (\n          value === null ||\n          (typeof value === \"string\" && /^[a-zA-Z0-9.-]+$/.test(value))\n        );\n      },\n      init: null,\n      nullable: true\n    },\n\n    /** A sorted list of font families */\n    family: {\n      check: \"Array\",\n      nullable: true,\n      apply: \"_applyFamily\"\n    },\n\n    /** Whether the font is bold */\n    bold: {\n      check: \"Boolean\",\n      nullable: true,\n      apply: \"_applyBold\"\n    },\n\n    /** Whether the font is italic */\n    italic: {\n      check: \"Boolean\",\n      nullable: true,\n      apply: \"_applyItalic\"\n    },\n\n    /** The text decoration for this font */\n    decoration: {\n      check: [\"underline\", \"line-through\", \"overline\"],\n      nullable: true,\n      apply: \"_applyDecoration\"\n    },\n\n    /** The text color for this font */\n    color: {\n      check: \"Color\",\n      nullable: true,\n      apply: \"_applyColor\"\n    },\n\n    /** The text shadow for this font */\n    textShadow: {\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyTextShadow\"\n    },\n\n    /** The weight property of the font as opposed to just setting it to 'bold' by setting the bold property to true */\n    weight: {\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyWeight\"\n    },\n\n    /** The Letter Spacing (Unit: pixel) */\n    letterSpacing: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyLetterSpacing\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __lookupMap: null,\n\n    // property apply\n    _applySize(value, old) {\n      this.__lookupMap.fontSize = value === null ? null : value + \"px\";\n    },\n\n    _applyLineHeight(value, old) {\n      this.__lookupMap.lineHeight = value === null ? null : value;\n    },\n\n    // property apply\n    _applyFamily(value, old) {\n      var family = \"\";\n\n      for (var i = 0, l = value.length; i < l; i++) {\n        // in FireFox 2 and WebKit fonts like 'serif' or 'sans-serif' must\n        // not be quoted!\n        if (value[i].indexOf(\" \") > 0) {\n          family += '\"' + value[i] + '\"';\n        } else {\n          family += value[i];\n        }\n\n        if (i !== l - 1) {\n          family += \",\";\n        }\n      }\n\n      // font family is a special case. In order to render the labels correctly\n      // we have to return a font family - even if it's an empty string to prevent\n      // the browser from applying the element style\n      this.__lookupMap.fontFamily = family;\n    },\n\n    // property apply\n    _applyBold(value, old) {\n      this.__lookupMap.fontWeight =\n        value == null ? null : value ? \"bold\" : \"normal\";\n    },\n\n    // property apply\n    _applyItalic(value, old) {\n      this.__lookupMap.fontStyle =\n        value == null ? null : value ? \"italic\" : \"normal\";\n    },\n\n    // property apply\n    _applyDecoration(value, old) {\n      this.__lookupMap.textDecoration = value == null ? null : value;\n    },\n\n    // property apply\n    _applyColor(value, old) {\n      this.__lookupMap.color = null;\n      if (value) {\n        this.__lookupMap.color =\n          qx.theme.manager.Color.getInstance().resolve(value);\n      }\n    },\n\n    // property apply\n    _applyWeight(value, old) {\n      this.__lookupMap.fontWeight = value;\n    },\n\n    // property apply\n    _applyTextShadow(value, old) {\n      this.__lookupMap.textShadow = value == null ? null : value;\n    },\n\n    // property apply\n    _applyLetterSpacing(value, old) {\n      this.__lookupMap.letterSpacing = value === null ? null : value + \"px\";\n    },\n\n    /**\n     * Get a map of all CSS styles, which will be applied to the widget. Only\n     * the styles which are set are returned.\n     *\n     * @return {Map} Map containing the current styles. The keys are property\n     * names which can directly be used with the <code>set</code> method of each\n     * widget.\n     */\n    getStyles() {\n      return this.__lookupMap;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}