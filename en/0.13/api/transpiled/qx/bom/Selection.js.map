{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getSelectionObject",
    "core",
    "Environment",
    "select",
    "selection",
    "documentNode",
    "default",
    "dom",
    "Node",
    "getWindow",
    "getSelection",
    "get",
    "node",
    "rng",
    "bom",
    "Range",
    "getDocument",
    "text",
    "__isInputOrTextarea",
    "value",
    "substring",
    "selectionStart",
    "selectionEnd",
    "toString",
    "getLength",
    "selectedValue",
    "split",
    "util",
    "StringSplit",
    "length",
    "selectedLength",
    "start",
    "end",
    "Selection",
    "getStart",
    "documentRange",
    "contains",
    "parentElement",
    "range",
    "len",
    "moveToBookmark",
    "getBookmark",
    "moveEnd",
    "elementRange",
    "moveToElementText",
    "ex",
    "bodyRange",
    "getBodyElement",
    "setEndPoint",
    "compareEndPoints",
    "moved",
    "steps",
    "moveStart",
    "documentElement",
    "documentSelection",
    "anchorOffset",
    "focusOffset",
    "getEnd",
    "isElement",
    "nodeName",
    "toLowerCase",
    "set",
    "isDocument",
    "body",
    "isText",
    "undefined",
    "collapse",
    "nodeValue",
    "parentNode",
    "childNodes",
    "newRng",
    "focus",
    "setSelectionRange",
    "validBoundaries",
    "sel",
    "isCollapsed",
    "collapseToStart",
    "setStart",
    "setEnd",
    "setEndAfter",
    "rangeCount",
    "removeAllRanges",
    "addRange",
    "setAll",
    "clear",
    "parent",
    "empty",
    "Element",
    "blur",
    "collapsed",
    "compareNode",
    "commonAncestor",
    "commonAncestorContainer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Selection.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Low-level selection API to select elements like input and textarea elements\n * as well as text nodes or elements which their child nodes.\n *\n * @ignore(qx.bom.Element, qx.bom.Element.blur)\n */\nqx.Bootstrap.define(\"qx.bom.Selection\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Returns the native selection object.\n     *\n     * @signature function(documentNode)\n     * @param documentNode {document} Document node to retrieve the connected selection from\n     * @return {Selection} native selection object\n     */\n    getSelectionObject: qx.core.Environment.select(\"html.selection\", {\n      selection(documentNode) {\n        return documentNode.selection;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >= 9\n      default(documentNode) {\n        return qx.dom.Node.getWindow(documentNode).getSelection();\n      }\n    }),\n\n    /**\n     * Returns the current selected text.\n     *\n     * @signature function(node)\n     * @param node {Node} node to retrieve the selection for\n     * @return {String|null} selected text as string\n     */\n    get: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        // to get the selected text in legacy IE you have to work with the TextRange\n        // of the selection object. So always pass the document node to the\n        // Range class to get this TextRange object.\n        var rng = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n        return rng.text;\n      },\n\n      // suitable for gecko, opera and webkit\n      default(node) {\n        if (this.__isInputOrTextarea(node)) {\n          return node.value.substring(node.selectionStart, node.selectionEnd);\n        } else {\n          return this.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).toString();\n        }\n      }\n    }),\n\n    /**\n     * Returns the length of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} Form node or document/window to check.\n     * @return {Integer|null} length of the selection or null\n     */\n    getLength: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        var selectedValue = this.get(node);\n        // get the selected part and split it by linebreaks\n        var split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n        // return the length substracted by the count of linebreaks\n        // legacy IE counts linebreaks as two chars\n        // -> harmonize this to one char per linebreak\n        return selectedValue.length - (split.length - 1);\n      },\n\n      default(node) {\n        if (qx.core.Environment.get(\"engine.name\") == \"opera\") {\n          var selectedValue, selectedLength, split;\n\n          if (this.__isInputOrTextarea(node)) {\n            var start = node.selectionStart;\n            var end = node.selectionEnd;\n\n            selectedValue = node.value.substring(start, end);\n            selectedLength = end - start;\n          } else {\n            selectedValue = qx.bom.Selection.get(node);\n            selectedLength = selectedValue.length;\n          }\n\n          // get the selected part and split it by linebreaks\n          split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n          // substract the count of linebreaks\n          // Opera counts each linebreak as two chars\n          // -> harmonize this to one char per linebreak\n          return selectedLength - (split.length - 1);\n        }\n\n        // suitable for gecko and webkit\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd - node.selectionStart;\n        } else {\n          return this.get(node).length;\n        }\n      }\n    }),\n\n    /**\n     * Returns the start of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check for\n     * @return {Integer} start of current selection or \"-1\" if the current\n     *                   selection is not within the given node\n     */\n    getStart: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        if (this.__isInputOrTextarea(node)) {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveEnd(\"character\", len);\n\n          return len - range.text.length;\n        } else {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch (ex) {\n            return 0;\n          }\n\n          // Move end points of full range so it starts at the user selection\n          // and ends at the end of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"StartToStart\", range);\n          bodyRange.setEndPoint(\"EndToEnd\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n            return 0;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true) {\n            moved = bodyRange.moveStart(\"character\", -1);\n\n            // Starting points of both ranges are equal\n            if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return ++steps;\n        }\n      },\n\n      default(node) {\n        if (\n          qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n          qx.core.Environment.get(\"engine.name\") === \"webkit\"\n        ) {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionStart;\n          } else {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (\n              documentSelection.anchorOffset < documentSelection.focusOffset\n            ) {\n              return documentSelection.anchorOffset;\n            } else {\n              return documentSelection.focusOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionStart;\n        } else {\n          return qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).anchorOffset;\n        }\n      }\n    }),\n\n    /**\n     * Returns the end of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check\n     * @return {Integer} end of current selection\n     */\n    getEnd: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        if (this.__isInputOrTextarea(node)) {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveStart(\"character\", -len);\n\n          return range.text.length;\n        } else {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch (ex) {\n            return 0;\n          }\n          var len = elementRange.text.length;\n\n          // Move end points of full range so it ends at the user selection\n          // and starts at the start of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"EndToEnd\", range);\n          bodyRange.setEndPoint(\"StartToStart\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n            return len - 1;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true) {\n            moved = bodyRange.moveEnd(\"character\", 1);\n\n            // Ending points of both ranges are equal\n            if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return len - ++steps;\n        }\n      },\n\n      default(node) {\n        if (\n          qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n          qx.core.Environment.get(\"engine.name\") === \"webkit\"\n        ) {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionEnd;\n          } else {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (\n              documentSelection.focusOffset > documentSelection.anchorOffset\n            ) {\n              return documentSelection.focusOffset;\n            } else {\n              return documentSelection.anchorOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd;\n        } else {\n          return qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).focusOffset;\n        }\n      }\n    }),\n\n    /**\n     * Utility method to check for an input or textarea element\n     *\n     * @param node {Node} node to check\n     * @return {Boolean} Whether the given node is an input or textarea element\n     */\n    __isInputOrTextarea(node) {\n      return (\n        qx.dom.Node.isElement(node) &&\n        (node.nodeName.toLowerCase() == \"input\" ||\n          node.nodeName.toLowerCase() == \"textarea\")\n      );\n    },\n\n    /**\n     * Sets a selection at the given node with the given start and end.\n     * For text nodes, input and textarea elements the start and end parameters\n     * set the boundaries at the text.\n     * For element nodes the start and end parameters are used to select the\n     * childNodes of the given element.\n     *\n     * @signature function(node, start, end)\n     * @param node {Node} node to set the selection at\n     * @param start {Integer} start of the selection\n     * @param end {Integer} end of the selection\n     * @return {Boolean} whether a selection is drawn\n     */\n    set: qx.core.Environment.select(\"html.selection\", {\n      selection(node, start, end) {\n        var rng;\n\n        // if the node is the document itself then work on with the body element\n        if (qx.dom.Node.isDocument(node)) {\n          node = node.body;\n        }\n\n        if (qx.dom.Node.isElement(node) || qx.dom.Node.isText(node)) {\n          switch (node.nodeName.toLowerCase()) {\n            case \"input\":\n            case \"textarea\":\n            case \"button\":\n              if (end === undefined) {\n                end = node.value.length;\n              }\n\n              if (\n                start >= 0 &&\n                start <= node.value.length &&\n                end >= 0 &&\n                end <= node.value.length\n              ) {\n                rng = qx.bom.Range.get(node);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            case \"#text\":\n              if (end === undefined) {\n                end = node.nodeValue.length;\n              }\n\n              if (\n                start >= 0 &&\n                start <= node.nodeValue.length &&\n                end >= 0 &&\n                end <= node.nodeValue.length\n              ) {\n                // get a range of the body element\n                rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n\n                // use the parent node -> \"moveToElementText\" expects an element\n                rng.moveToElementText(node.parentNode);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            default:\n              if (end === undefined) {\n                end = node.childNodes.length - 1;\n              }\n\n              // check start and end -> childNodes\n              if (node.childNodes[start] && node.childNodes[end]) {\n                // get the TextRange of the body element\n                // IMPORTANT: only with a range of the body the method \"moveElementToText\" is available\n                rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n                // position it at the given node\n                rng.moveToElementText(node.childNodes[start]);\n                rng.collapse(true);\n\n                // create helper range\n                var newRng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n                newRng.moveToElementText(node.childNodes[end]);\n\n                // set the end of the range to the end of the helper range\n                rng.setEndPoint(\"EndToEnd\", newRng);\n                rng.select();\n\n                return true;\n              }\n          }\n        }\n\n        return false;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >=9\n      default(node, start, end) {\n        // special handling for input and textarea elements\n        var nodeName = node.nodeName.toLowerCase();\n        if (\n          qx.dom.Node.isElement(node) &&\n          (nodeName == \"input\" || nodeName == \"textarea\")\n        ) {\n          // if \"end\" is not given set it to the end\n          if (end === undefined) {\n            end = node.value.length;\n          }\n\n          // check boundaries\n          if (\n            start >= 0 &&\n            start <= node.value.length &&\n            end >= 0 &&\n            end <= node.value.length\n          ) {\n            node.focus();\n            node.select();\n            // IE can throw \"Unspecified error\"\n            try {\n              node.setSelectionRange(start, end);\n            } catch (ex) {}\n            return true;\n          }\n        } else {\n          var validBoundaries = false;\n          var sel = qx.dom.Node.getWindow(node).getSelection();\n\n          var rng = qx.bom.Range.get(node);\n\n          // element or text node?\n          // for elements nodes the offsets are applied to childNodes\n          // for text nodes the offsets are applied to the text content\n          if (qx.dom.Node.isText(node)) {\n            if (end === undefined) {\n              end = node.length;\n            }\n\n            if (\n              start >= 0 &&\n              start < node.length &&\n              end >= 0 &&\n              end <= node.length\n            ) {\n              validBoundaries = true;\n            }\n          } else if (qx.dom.Node.isElement(node)) {\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (\n              start >= 0 &&\n              node.childNodes[start] &&\n              end >= 0 &&\n              node.childNodes[end]\n            ) {\n              validBoundaries = true;\n            }\n          } else if (qx.dom.Node.isDocument(node)) {\n            // work on with the body element\n            node = node.body;\n\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (\n              start >= 0 &&\n              node.childNodes[start] &&\n              end >= 0 &&\n              node.childNodes[end]\n            ) {\n              validBoundaries = true;\n            }\n          }\n\n          if (validBoundaries) {\n            // collapse the selection if needed\n            if (!sel.isCollapsed) {\n              sel.collapseToStart();\n            }\n\n            // set start and end of the range\n            rng.setStart(node, start);\n\n            // for element nodes set the end after the childNode\n            if (qx.dom.Node.isText(node)) {\n              rng.setEnd(node, end);\n            } else {\n              rng.setEndAfter(node.childNodes[end]);\n            }\n\n            // remove all existing ranges and add the new one\n            if (sel.rangeCount > 0) {\n              sel.removeAllRanges();\n            }\n\n            sel.addRange(rng);\n\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }),\n\n    /**\n     * Selects all content/childNodes of the given node\n     *\n     * @param node {Node} text, element or document node\n     * @return {Boolean} whether a selection is drawn\n     */\n    setAll(node) {\n      return qx.bom.Selection.set(node, 0);\n    },\n\n    /**\n     * Clears the selection on the given node.\n     *\n     * @param node {Node} node to clear the selection for\n     */\n    clear: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        var rng = qx.bom.Range.get(node);\n        var parent = rng.parentElement();\n\n        var documentRange = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n\n        // only collapse if the selection is really on the given node\n        // -> compare the two parent elements of the ranges with each other and\n        // the given node\n        if (qx.dom.Node.isText(node)) {\n          node = node.parentNode;\n        }\n        if (parent == documentRange.parentElement() && parent == node) {\n          var sel = qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          );\n\n          sel.empty();\n        }\n      },\n\n      default(node) {\n        var sel = qx.bom.Selection.getSelectionObject(\n          qx.dom.Node.getDocument(node)\n        );\n\n        var nodeName = node.nodeName.toLowerCase();\n\n        // if the node is an input or textarea element use the specialized methods\n        if (\n          qx.dom.Node.isElement(node) &&\n          (nodeName == \"input\" || nodeName == \"textarea\")\n        ) {\n          // IE can throw \"Unspecified error\"\n          try {\n            node.setSelectionRange(0, 0);\n          } catch (ex) {}\n          if (qx.bom.Element && qx.bom.Element.blur) {\n            qx.bom.Element.blur(node);\n          }\n        }\n        // if the given node is the body/document node -> collapse the selection\n        else if (qx.dom.Node.isDocument(node) || nodeName == \"body\") {\n          sel.collapse(node.body ? node.body : node, 0);\n        }\n        // if an element/text node is given the current selection has to\n        // encompass the node. Only then the selection is cleared.\n        else {\n          var rng = qx.bom.Range.get(node);\n          if (!rng.collapsed) {\n            var compareNode;\n            var commonAncestor = rng.commonAncestorContainer;\n\n            // compare the parentNode of the textNode with the given node\n            // (if this node is an element) to decide whether the selection\n            // is cleared or not.\n            if (\n              qx.dom.Node.isElement(node) &&\n              qx.dom.Node.isText(commonAncestor)\n            ) {\n              compareNode = commonAncestor.parentNode;\n            } else {\n              compareNode = commonAncestor;\n            }\n\n            if (compareNode == node) {\n              sel.collapse(node, 0);\n            }\n          }\n        }\n      }\n    })\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}