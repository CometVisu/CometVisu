{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getSelectionObject",
    "core",
    "Environment",
    "select",
    "selection",
    "documentNode",
    "dom",
    "Node",
    "getWindow",
    "getSelection",
    "get",
    "node",
    "rng",
    "bom",
    "Range",
    "getDocument",
    "text",
    "__isInputOrTextarea",
    "value",
    "substring",
    "selectionStart",
    "selectionEnd",
    "toString",
    "getLength",
    "selectedValue",
    "split",
    "util",
    "StringSplit",
    "length",
    "selectedLength",
    "start",
    "end",
    "Selection",
    "getStart",
    "documentRange",
    "contains",
    "parentElement",
    "range",
    "len",
    "moveToBookmark",
    "getBookmark",
    "moveEnd",
    "elementRange",
    "moveToElementText",
    "ex",
    "bodyRange",
    "getBodyElement",
    "setEndPoint",
    "compareEndPoints",
    "moved",
    "steps",
    "moveStart",
    "documentElement",
    "documentSelection",
    "anchorOffset",
    "focusOffset",
    "getEnd",
    "isElement",
    "nodeName",
    "toLowerCase",
    "set",
    "isDocument",
    "body",
    "isText",
    "undefined",
    "collapse",
    "nodeValue",
    "parentNode",
    "childNodes",
    "newRng",
    "focus",
    "setSelectionRange",
    "validBoundaries",
    "sel",
    "isCollapsed",
    "collapseToStart",
    "setStart",
    "setEnd",
    "setEndAfter",
    "rangeCount",
    "removeAllRanges",
    "addRange",
    "setAll",
    "clear",
    "parent",
    "empty",
    "Element",
    "blur",
    "collapsed",
    "compareNode",
    "commonAncestor",
    "commonAncestorContainer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Selection.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\n/**\n * Low-level selection API to select elements like input and textarea elements\n * as well as text nodes or elements which their child nodes.\n *\n * @ignore(qx.bom.Element, qx.bom.Element.blur)\n */\nqx.Bootstrap.define(\"qx.bom.Selection\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Returns the native selection object.\n     *\n     * @signature function(documentNode)\n     * @param documentNode {document} Document node to retrieve the connected selection from\n     * @return {Selection} native selection object\n     */\n    getSelectionObject: qx.core.Environment.select(\"html.selection\", {\n      selection(documentNode) {\n        return documentNode.selection;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >= 9\n      default(documentNode) {\n        return qx.dom.Node.getWindow(documentNode).getSelection();\n      }\n    }),\n\n    /**\n     * Returns the current selected text.\n     *\n     * @signature function(node)\n     * @param node {Node} node to retrieve the selection for\n     * @return {String|null} selected text as string\n     */\n    get: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        // to get the selected text in legacy IE you have to work with the TextRange\n        // of the selection object. So always pass the document node to the\n        // Range class to get this TextRange object.\n        var rng = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n        return rng.text;\n      },\n\n      // suitable for gecko, opera and webkit\n      default(node) {\n        if (this.__isInputOrTextarea(node)) {\n          return node.value.substring(node.selectionStart, node.selectionEnd);\n        } else {\n          return this.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).toString();\n        }\n      }\n    }),\n\n    /**\n     * Returns the length of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} Form node or document/window to check.\n     * @return {Integer|null} length of the selection or null\n     */\n    getLength: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        var selectedValue = this.get(node);\n        // get the selected part and split it by linebreaks\n        var split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n        // return the length substracted by the count of linebreaks\n        // legacy IE counts linebreaks as two chars\n        // -> harmonize this to one char per linebreak\n        return selectedValue.length - (split.length - 1);\n      },\n\n      default(node) {\n        if (qx.core.Environment.get(\"engine.name\") == \"opera\") {\n          var selectedValue, selectedLength, split;\n\n          if (this.__isInputOrTextarea(node)) {\n            var start = node.selectionStart;\n            var end = node.selectionEnd;\n\n            selectedValue = node.value.substring(start, end);\n            selectedLength = end - start;\n          } else {\n            selectedValue = qx.bom.Selection.get(node);\n            selectedLength = selectedValue.length;\n          }\n\n          // get the selected part and split it by linebreaks\n          split = qx.util.StringSplit.split(selectedValue, /\\r\\n/);\n\n          // substract the count of linebreaks\n          // Opera counts each linebreak as two chars\n          // -> harmonize this to one char per linebreak\n          return selectedLength - (split.length - 1);\n        }\n\n        // suitable for gecko and webkit\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd - node.selectionStart;\n        } else {\n          return this.get(node).length;\n        }\n      }\n    }),\n\n    /**\n     * Returns the start of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check for\n     * @return {Integer} start of current selection or \"-1\" if the current\n     *                   selection is not within the given node\n     */\n    getStart: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        if (this.__isInputOrTextarea(node)) {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveEnd(\"character\", len);\n\n          return len - range.text.length;\n        } else {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch (ex) {\n            return 0;\n          }\n\n          // Move end points of full range so it starts at the user selection\n          // and ends at the end of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"StartToStart\", range);\n          bodyRange.setEndPoint(\"EndToEnd\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n            return 0;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true) {\n            moved = bodyRange.moveStart(\"character\", -1);\n\n            // Starting points of both ranges are equal\n            if (elementRange.compareEndPoints(\"StartToStart\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return ++steps;\n        }\n      },\n\n      default(node) {\n        if (\n          qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n          qx.core.Environment.get(\"engine.name\") === \"webkit\"\n        ) {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionStart;\n          } else {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (\n              documentSelection.anchorOffset < documentSelection.focusOffset\n            ) {\n              return documentSelection.anchorOffset;\n            } else {\n              return documentSelection.focusOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionStart;\n        } else {\n          return qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).anchorOffset;\n        }\n      }\n    }),\n\n    /**\n     * Returns the end of the selection\n     *\n     * @signature function(node)\n     * @param node {Node} node to check\n     * @return {Integer} end of current selection\n     */\n    getEnd: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        if (this.__isInputOrTextarea(node)) {\n          var documentRange = qx.bom.Range.get();\n\n          // Check if the document.selection is the text range inside the input element\n          if (!node.contains(documentRange.parentElement())) {\n            return -1;\n          }\n\n          var range = qx.bom.Range.get(node);\n          var len = node.value.length;\n\n          // Synchronize range start and end points\n          range.moveToBookmark(documentRange.getBookmark());\n          range.moveStart(\"character\", -len);\n\n          return range.text.length;\n        } else {\n          var range = qx.bom.Range.get(node);\n          var parentElement = range.parentElement();\n\n          // get a range which holds the text of the parent element\n          var elementRange = qx.bom.Range.get();\n          try {\n            // IE throws an invalid argument error when the document has no selection\n            elementRange.moveToElementText(parentElement);\n          } catch (ex) {\n            return 0;\n          }\n          var len = elementRange.text.length;\n\n          // Move end points of full range so it ends at the user selection\n          // and starts at the start of the element text.\n          var bodyRange = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n          bodyRange.setEndPoint(\"EndToEnd\", range);\n          bodyRange.setEndPoint(\"StartToStart\", elementRange);\n\n          // selection is at beginning\n          if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n            return len - 1;\n          }\n\n          var moved;\n          var steps = 0;\n          while (true) {\n            moved = bodyRange.moveEnd(\"character\", 1);\n\n            // Ending points of both ranges are equal\n            if (elementRange.compareEndPoints(\"EndToEnd\", bodyRange) == 0) {\n              break;\n            }\n\n            // Moving had no effect -> range is at begin of body\n            if (moved == 0) {\n              break;\n            } else {\n              steps++;\n            }\n          }\n\n          return len - ++steps;\n        }\n      },\n\n      default(node) {\n        if (\n          qx.core.Environment.get(\"engine.name\") === \"gecko\" ||\n          qx.core.Environment.get(\"engine.name\") === \"webkit\"\n        ) {\n          if (this.__isInputOrTextarea(node)) {\n            return node.selectionEnd;\n          } else {\n            var documentElement = qx.dom.Node.getDocument(node);\n            var documentSelection = this.getSelectionObject(documentElement);\n\n            // gecko and webkit do differ how the user selected the text\n            // \"left-to-right\" or \"right-to-left\"\n            if (\n              documentSelection.focusOffset > documentSelection.anchorOffset\n            ) {\n              return documentSelection.focusOffset;\n            } else {\n              return documentSelection.anchorOffset;\n            }\n          }\n        }\n\n        if (this.__isInputOrTextarea(node)) {\n          return node.selectionEnd;\n        } else {\n          return qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          ).focusOffset;\n        }\n      }\n    }),\n\n    /**\n     * Utility method to check for an input or textarea element\n     *\n     * @param node {Node} node to check\n     * @return {Boolean} Whether the given node is an input or textarea element\n     */\n    __isInputOrTextarea(node) {\n      return (\n        qx.dom.Node.isElement(node) &&\n        (node.nodeName.toLowerCase() == \"input\" ||\n          node.nodeName.toLowerCase() == \"textarea\")\n      );\n    },\n\n    /**\n     * Sets a selection at the given node with the given start and end.\n     * For text nodes, input and textarea elements the start and end parameters\n     * set the boundaries at the text.\n     * For element nodes the start and end parameters are used to select the\n     * childNodes of the given element.\n     *\n     * @signature function(node, start, end)\n     * @param node {Node} node to set the selection at\n     * @param start {Integer} start of the selection\n     * @param end {Integer} end of the selection\n     * @return {Boolean} whether a selection is drawn\n     */\n    set: qx.core.Environment.select(\"html.selection\", {\n      selection(node, start, end) {\n        var rng;\n\n        // if the node is the document itself then work on with the body element\n        if (qx.dom.Node.isDocument(node)) {\n          node = node.body;\n        }\n\n        if (qx.dom.Node.isElement(node) || qx.dom.Node.isText(node)) {\n          switch (node.nodeName.toLowerCase()) {\n            case \"input\":\n            case \"textarea\":\n            case \"button\":\n              if (end === undefined) {\n                end = node.value.length;\n              }\n\n              if (\n                start >= 0 &&\n                start <= node.value.length &&\n                end >= 0 &&\n                end <= node.value.length\n              ) {\n                rng = qx.bom.Range.get(node);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            case \"#text\":\n              if (end === undefined) {\n                end = node.nodeValue.length;\n              }\n\n              if (\n                start >= 0 &&\n                start <= node.nodeValue.length &&\n                end >= 0 &&\n                end <= node.nodeValue.length\n              ) {\n                // get a range of the body element\n                rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n\n                // use the parent node -> \"moveToElementText\" expects an element\n                rng.moveToElementText(node.parentNode);\n                rng.collapse(true);\n\n                rng.moveStart(\"character\", start);\n                rng.moveEnd(\"character\", end - start);\n                rng.select();\n\n                return true;\n              }\n              break;\n\n            default:\n              if (end === undefined) {\n                end = node.childNodes.length - 1;\n              }\n\n              // check start and end -> childNodes\n              if (node.childNodes[start] && node.childNodes[end]) {\n                // get the TextRange of the body element\n                // IMPORTANT: only with a range of the body the method \"moveElementToText\" is available\n                rng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n                // position it at the given node\n                rng.moveToElementText(node.childNodes[start]);\n                rng.collapse(true);\n\n                // create helper range\n                var newRng = qx.bom.Range.get(qx.dom.Node.getBodyElement(node));\n                newRng.moveToElementText(node.childNodes[end]);\n\n                // set the end of the range to the end of the helper range\n                rng.setEndPoint(\"EndToEnd\", newRng);\n                rng.select();\n\n                return true;\n              }\n          }\n        }\n\n        return false;\n      },\n\n      // suitable for gecko, opera, webkit and mshtml >=9\n      default(node, start, end) {\n        // special handling for input and textarea elements\n        var nodeName = node.nodeName.toLowerCase();\n        if (\n          qx.dom.Node.isElement(node) &&\n          (nodeName == \"input\" || nodeName == \"textarea\")\n        ) {\n          // if \"end\" is not given set it to the end\n          if (end === undefined) {\n            end = node.value.length;\n          }\n\n          // check boundaries\n          if (\n            start >= 0 &&\n            start <= node.value.length &&\n            end >= 0 &&\n            end <= node.value.length\n          ) {\n            node.focus();\n            node.select();\n            // IE can throw \"Unspecified error\"\n            try {\n              node.setSelectionRange(start, end);\n            } catch (ex) {}\n            return true;\n          }\n        } else {\n          var validBoundaries = false;\n          var sel = qx.dom.Node.getWindow(node).getSelection();\n\n          var rng = qx.bom.Range.get(node);\n\n          // element or text node?\n          // for elements nodes the offsets are applied to childNodes\n          // for text nodes the offsets are applied to the text content\n          if (qx.dom.Node.isText(node)) {\n            if (end === undefined) {\n              end = node.length;\n            }\n\n            if (\n              start >= 0 &&\n              start < node.length &&\n              end >= 0 &&\n              end <= node.length\n            ) {\n              validBoundaries = true;\n            }\n          } else if (qx.dom.Node.isElement(node)) {\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (\n              start >= 0 &&\n              node.childNodes[start] &&\n              end >= 0 &&\n              node.childNodes[end]\n            ) {\n              validBoundaries = true;\n            }\n          } else if (qx.dom.Node.isDocument(node)) {\n            // work on with the body element\n            node = node.body;\n\n            if (end === undefined) {\n              end = node.childNodes.length - 1;\n            }\n\n            if (\n              start >= 0 &&\n              node.childNodes[start] &&\n              end >= 0 &&\n              node.childNodes[end]\n            ) {\n              validBoundaries = true;\n            }\n          }\n\n          if (validBoundaries) {\n            // collapse the selection if needed\n            if (!sel.isCollapsed) {\n              sel.collapseToStart();\n            }\n\n            // set start and end of the range\n            rng.setStart(node, start);\n\n            // for element nodes set the end after the childNode\n            if (qx.dom.Node.isText(node)) {\n              rng.setEnd(node, end);\n            } else {\n              rng.setEndAfter(node.childNodes[end]);\n            }\n\n            // remove all existing ranges and add the new one\n            if (sel.rangeCount > 0) {\n              sel.removeAllRanges();\n            }\n\n            sel.addRange(rng);\n\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }),\n\n    /**\n     * Selects all content/childNodes of the given node\n     *\n     * @param node {Node} text, element or document node\n     * @return {Boolean} whether a selection is drawn\n     */\n    setAll(node) {\n      return qx.bom.Selection.set(node, 0);\n    },\n\n    /**\n     * Clears the selection on the given node.\n     *\n     * @param node {Node} node to clear the selection for\n     */\n    clear: qx.core.Environment.select(\"html.selection\", {\n      selection(node) {\n        var rng = qx.bom.Range.get(node);\n        var parent = rng.parentElement();\n\n        var documentRange = qx.bom.Range.get(qx.dom.Node.getDocument(node));\n\n        // only collapse if the selection is really on the given node\n        // -> compare the two parent elements of the ranges with each other and\n        // the given node\n        if (qx.dom.Node.isText(node)) {\n          node = node.parentNode;\n        }\n        if (parent == documentRange.parentElement() && parent == node) {\n          var sel = qx.bom.Selection.getSelectionObject(\n            qx.dom.Node.getDocument(node)\n          );\n\n          sel.empty();\n        }\n      },\n\n      default(node) {\n        var sel = qx.bom.Selection.getSelectionObject(\n          qx.dom.Node.getDocument(node)\n        );\n\n        var nodeName = node.nodeName.toLowerCase();\n\n        // if the node is an input or textarea element use the specialized methods\n        if (\n          qx.dom.Node.isElement(node) &&\n          (nodeName == \"input\" || nodeName == \"textarea\")\n        ) {\n          // IE can throw \"Unspecified error\"\n          try {\n            node.setSelectionRange(0, 0);\n          } catch (ex) {}\n          if (qx.bom.Element && qx.bom.Element.blur) {\n            qx.bom.Element.blur(node);\n          }\n        }\n        // if the given node is the body/document node -> collapse the selection\n        else if (qx.dom.Node.isDocument(node) || nodeName == \"body\") {\n          sel.collapse(node.body ? node.body : node, 0);\n        }\n        // if an element/text node is given the current selection has to\n        // encompass the node. Only then the selection is cleared.\n        else {\n          var rng = qx.bom.Range.get(node);\n          if (!rng.collapsed) {\n            var compareNode;\n            var commonAncestor = rng.commonAncestorContainer;\n\n            // compare the parentNode of the textNode with the given node\n            // (if this node is an element) to decide whether the selection\n            // is cleared or not.\n            if (\n              qx.dom.Node.isElement(node) &&\n              qx.dom.Node.isText(commonAncestor)\n            ) {\n              compareNode = commonAncestor.parentNode;\n            } else {\n              compareNode = commonAncestor;\n            }\n\n            if (compareNode == node) {\n              sel.collapse(node, 0);\n            }\n          }\n        }\n      }\n    })\n  }\n});\n"
  ],
  "mappings": "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"
}