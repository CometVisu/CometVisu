{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "event",
    "Emitter",
    "construct",
    "query",
    "__mql",
    "window",
    "matchMedia",
    "matches",
    "__init",
    "events",
    "change",
    "statics",
    "version",
    "members",
    "getQuery",
    "isMatching",
    "__P_117_1",
    "addListener",
    "__changed",
    "bind",
    "__P_117_2",
    "emit",
    "defer",
    "win",
    "_doc",
    "document",
    "_viewport",
    "documentElement",
    "_queries",
    "_queryID",
    "_type",
    "_features",
    "_typeExpr",
    "_mediaExpr",
    "_timer",
    "_matches",
    "media",
    "mql",
    "indexOf",
    "split",
    "mqIndex",
    "length",
    "mqLength",
    "mq",
    "negateType",
    "negateTypeFound",
    "negateTypeIndex",
    "negate",
    "type",
    "exprListStr",
    "exprList",
    "exprIndex",
    "exprLength",
    "expr",
    "prefix",
    "unit",
    "value",
    "feature",
    "match",
    "_setFeature",
    "index",
    "substring",
    "input",
    "Number",
    "toFixed",
    "w",
    "innerWidth",
    "clientWidth",
    "h",
    "innerHeight",
    "clientHeight",
    "dw",
    "screen",
    "width",
    "dh",
    "height",
    "c",
    "colorDepth",
    "x",
    "devicePixelRatio",
    "color",
    "Math",
    "pow",
    "orientation",
    "resolution",
    "deviceXDPI",
    "_watch",
    "clearTimeout",
    "setTimeout",
    "qIndex",
    "qLength",
    "listeners",
    "i",
    "il",
    "call",
    "_init",
    "head",
    "getElementsByTagName",
    "style",
    "createElement",
    "info",
    "typeList",
    "typeIndex",
    "typeLength",
    "cssText",
    "eventPrefix",
    "addEvent",
    "addEventListener",
    "attachEvent",
    "id",
    "appendChild",
    "getComputedStyle",
    "currentStyle",
    "styleSheet",
    "textContent",
    "zIndex",
    "removeChild",
    "listener",
    "push",
    "removeListener",
    "splice",
    "bom",
    "MediaQuery"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/MediaQuery.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n qooxdoo - the new era of web development\r\n\r\n http://qooxdoo.org\r\n\r\n Copyright:\r\n 2013 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n See the LICENSE file in the project's top-level directory for details.\r\n\r\n Authors:\r\n * Romeo Kenfack Tsakem (rkenfack)\r\n\r\n ======================================================================\r\n\r\n This class contains code from:\r\n\r\n Copyright:\r\n 2012 WebLinc LLC, David Knight\r\n\r\n License:\r\n BSD: https://raw.github.com/weblinc/media-match/master/LICENSE.txt\r\n\r\n ----------------------------------------------------------------------\r\n\r\n Copyright (c) 2012 WebLinc LLC\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n\r\n ************************************************************************ */\r\n\r\n/**\r\n * This class is to test css media queries. It implements a polyfill for\r\n * window.matchMedia if not supported natively.\r\n */\r\nqx.Bootstrap.define(\"qx.bom.MediaQuery\", {\r\n  extend: qx.event.Emitter,\r\n\r\n  /**\r\n   * @param query {String} the media query to evaluate\r\n   */\r\n  construct(query) {\r\n    this.__mql = window.matchMedia(query);\r\n    this.query = query;\r\n    this.matches = this.__mql.matches;\r\n    this.__init();\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * Fires each time the media query state changes. The event data is a map\r\n     * with two keys:\r\n     *\r\n     * **query** The media query string\r\n     *\r\n     * **matches** A boolean that indicates whether the document\r\n     * matches the query\r\n     */\r\n    change: \"Map\"\r\n  },\r\n\r\n  statics: {\r\n    /**\r\n     * The media.match.js version\r\n     */\r\n    version: \"2.0.1\"\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * The mediaquery Listener\r\n     */\r\n    __mql: null,\r\n\r\n    /**\r\n     * Indicates if the document currently matches the media query list\r\n     */\r\n    matches: false,\r\n\r\n    /**\r\n     * The mediaquery list to be evaluated\r\n     */\r\n    query: null,\r\n\r\n    /**\r\n     * Returns the query string used to initialize the listener.\r\n     * @return {String} The given query string.\r\n     */\r\n    getQuery() {\r\n      return this.query;\r\n    },\r\n\r\n    /**\r\n     * Access the matching state of the media query.\r\n     * @return {Boolean} <code>true</code>, if the query matches.\r\n     */\r\n    isMatching() {\r\n      return this.matches;\r\n    },\r\n\r\n    /**\r\n     * Initialize the mediaquery listener\r\n     */\r\n    __init() {\r\n      this.__mql.addListener(this.__changed.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Callback for mediaqueries changes\r\n     */\r\n    __changed() {\r\n      this.matches = this.__mql.matches;\r\n      this.emit(\"change\", { matches: this.matches, query: this.query });\r\n    }\r\n  },\r\n\r\n  defer() {\r\n    /**\r\n     * Below is the original media.match.js.\r\n     * https://github.com/weblinc/media-match\r\n     */\r\n\r\n    /* MediaMatch v.2.0.1 - Testing css media queries in Javascript. Authors & copyright (c) 2013: WebLinc, David Knight. */\r\n\r\n    window.matchMedia ||\r\n      (window.matchMedia = (function (win) {\r\n        \"use strict\";\r\n\r\n        // Internal globals\r\n        var _doc = win.document,\r\n          _viewport = _doc.documentElement,\r\n          _queries = [],\r\n          _queryID = 0,\r\n          _type = \"\",\r\n          _features = {},\r\n          // only screen\r\n          // only screen and\r\n          // not screen\r\n          // not screen and\r\n          // screen\r\n          // screen and\r\n          _typeExpr = /\\s*(only|not)?\\s*(screen|print|[a-z\\-]+)\\s*(and)?\\s*/i,\r\n          // (-vendor-min-width: 300px)\r\n          // (min-width: 300px)\r\n          // (width: 300px)\r\n          // (width)\r\n          // (orientation: portrait|landscape)\r\n          _mediaExpr =\r\n            /^\\s*\\(\\s*(-[a-z]+-)?(min-|max-)?([a-z\\-]+)\\s*(:?\\s*([0-9]+(\\.[0-9]+)?|portrait|landscape)(px|em|dppx|dpcm|rem|%|in|cm|mm|ex|pt|pc|\\/([0-9]+(\\.[0-9]+)?))?)?\\s*\\)\\s*$/,\r\n          _timer = 0,\r\n          // Helper methods\r\n\r\n          /*\r\n      _matches\r\n      */\r\n          _matches = function (media) {\r\n            // screen and (min-width: 400px), screen and (max-width: 500px)\r\n            var mql = (media.indexOf(\",\") !== -1 && media.split(\",\")) || [\r\n                media\r\n              ],\r\n              mqIndex = mql.length - 1,\r\n              mqLength = mqIndex,\r\n              mq = null,\r\n              // not screen, screen\r\n              negateType = null,\r\n              negateTypeFound = \"\",\r\n              negateTypeIndex = 0,\r\n              negate = false,\r\n              type = \"\",\r\n              // (min-width: 400px), (min-width)\r\n              exprListStr = \"\",\r\n              exprList = null,\r\n              exprIndex = 0,\r\n              exprLength = 0,\r\n              expr = null,\r\n              prefix = \"\",\r\n              length = \"\",\r\n              unit = \"\",\r\n              value = \"\",\r\n              feature = \"\",\r\n              match = false;\r\n\r\n            if (media === \"\") {\r\n              return true;\r\n            }\r\n\r\n            //Updating features\r\n            _setFeature();\r\n\r\n            do {\r\n              mq = mql[mqLength - mqIndex];\r\n              negate = false;\r\n              negateType = mq.match(_typeExpr);\r\n\r\n              if (negateType) {\r\n                negateTypeFound = negateType[0];\r\n                negateTypeIndex = negateType.index;\r\n              }\r\n\r\n              if (\r\n                !negateType ||\r\n                (mq.substring(0, negateTypeIndex).indexOf(\"(\") === -1 &&\r\n                  (negateTypeIndex ||\r\n                    (!negateType[3] && negateTypeFound !== negateType.input)))\r\n              ) {\r\n                match = false;\r\n                continue;\r\n              }\r\n\r\n              exprListStr = mq;\r\n\r\n              negate = negateType[1] === \"not\";\r\n\r\n              if (!negateTypeIndex) {\r\n                type = negateType[2];\r\n                exprListStr = mq.substring(negateTypeFound.length);\r\n              }\r\n\r\n              // Test media type\r\n              // Test type against this device or if 'all' or empty ''\r\n              match = type === _type || type === \"all\" || type === \"\";\r\n\r\n              exprList = (exprListStr.indexOf(\" and \") !== -1 &&\r\n                exprListStr.split(\" and \")) || [exprListStr];\r\n              exprIndex = exprList.length - 1;\r\n              exprLength = exprIndex;\r\n\r\n              if (match && exprIndex >= 0 && exprListStr !== \"\") {\r\n                do {\r\n                  expr = exprList[exprIndex].match(_mediaExpr);\r\n\r\n                  if (!expr || !_features[expr[3]]) {\r\n                    match = false;\r\n                    break;\r\n                  }\r\n\r\n                  prefix = expr[2];\r\n                  length = expr[5];\r\n                  value = length;\r\n                  unit = expr[7];\r\n                  feature = _features[expr[3]];\r\n\r\n                  // Convert unit types\r\n                  if (unit) {\r\n                    if (unit === \"px\") {\r\n                      // If unit is px\r\n                      value = Number(length);\r\n                    } else if (unit === \"em\" || unit === \"rem\") {\r\n                      // Convert relative length unit to pixels\r\n                      // Assumed base font size is 16px\r\n                      value = 16 * length;\r\n                    } else if (expr[8]) {\r\n                      // Convert aspect ratio to decimal\r\n                      value = (length / expr[8]).toFixed(2);\r\n                    } else if (unit === \"dppx\") {\r\n                      // Convert resolution dppx unit to pixels\r\n                      value = length * 96;\r\n                    } else if (unit === \"dpcm\") {\r\n                      // Convert resolution dpcm unit to pixels\r\n                      value = length * 0.3937;\r\n                    } else {\r\n                      // default\r\n                      value = Number(length);\r\n                    }\r\n                  }\r\n\r\n                  // Test for prefix min or max\r\n                  // Test value against feature\r\n                  if (prefix === \"min-\" && value) {\r\n                    match = feature >= value;\r\n                  } else if (prefix === \"max-\" && value) {\r\n                    match = feature <= value;\r\n                  } else if (value) {\r\n                    match = feature === value;\r\n                  } else {\r\n                    match = !!feature;\r\n                  }\r\n\r\n                  // If 'match' is false, break loop\r\n                  // Continue main loop through query list\r\n                  if (!match) {\r\n                    break;\r\n                  }\r\n                } while (exprIndex--);\r\n              }\r\n\r\n              // If match is true, break loop\r\n              // Once matched, no need to check other queries\r\n              if (match) {\r\n                break;\r\n              }\r\n            } while (mqIndex--);\r\n\r\n            return negate ? !match : match;\r\n          },\r\n          /*\r\n      _setFeature\r\n      */\r\n          _setFeature = function () {\r\n            // Sets properties of '_features' that change on resize and/or orientation.\r\n            var w = win.innerWidth || _viewport.clientWidth,\r\n              h = win.innerHeight || _viewport.clientHeight,\r\n              dw = win.screen.width,\r\n              dh = win.screen.height,\r\n              c = win.screen.colorDepth,\r\n              x = win.devicePixelRatio;\r\n\r\n            _features.width = w;\r\n            _features.height = h;\r\n            _features[\"aspect-ratio\"] = (w / h).toFixed(2);\r\n            _features[\"device-width\"] = dw;\r\n            _features[\"device-height\"] = dh;\r\n            _features[\"device-aspect-ratio\"] = (dw / dh).toFixed(2);\r\n            _features.color = c;\r\n            _features[\"color-index\"] = Math.pow(2, c);\r\n            _features.orientation = h >= w ? \"portrait\" : \"landscape\";\r\n            _features.resolution = (x && x * 96) || win.screen.deviceXDPI || 96;\r\n            _features[\"device-pixel-ratio\"] = x || 1;\r\n          },\r\n          /*\r\n      _watch\r\n      */\r\n          _watch = function () {\r\n            clearTimeout(_timer);\r\n\r\n            _timer = setTimeout(function () {\r\n              var query = null,\r\n                qIndex = _queryID - 1,\r\n                qLength = qIndex,\r\n                match = false;\r\n\r\n              if (qIndex >= 0) {\r\n                _setFeature();\r\n\r\n                do {\r\n                  query = _queries[qLength - qIndex];\r\n\r\n                  if (query) {\r\n                    match = _matches(query.mql.media);\r\n\r\n                    if (\r\n                      (match && !query.mql.matches) ||\r\n                      (!match && query.mql.matches)\r\n                    ) {\r\n                      query.mql.matches = match;\r\n\r\n                      if (query.listeners) {\r\n                        for (\r\n                          var i = 0, il = query.listeners.length;\r\n                          i < il;\r\n                          i++\r\n                        ) {\r\n                          if (query.listeners[i]) {\r\n                            query.listeners[i].call(win, query.mql);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                } while (qIndex--);\r\n              }\r\n            }, 10);\r\n          },\r\n          /*\r\n      _init\r\n      */\r\n          _init = function () {\r\n            var head = _doc.getElementsByTagName(\"head\")[0],\r\n              style = _doc.createElement(\"style\"),\r\n              info = null,\r\n              typeList = [\r\n                \"screen\",\r\n                \"print\",\r\n                \"speech\",\r\n                \"projection\",\r\n                \"handheld\",\r\n                \"tv\",\r\n                \"braille\",\r\n                \"embossed\",\r\n                \"tty\"\r\n              ],\r\n              typeIndex = 0,\r\n              typeLength = typeList.length,\r\n              cssText = \"#mediamatchjs { position: relative; z-index: 0; }\",\r\n              eventPrefix = \"\",\r\n              addEvent =\r\n                win.addEventListener ||\r\n                ((eventPrefix = \"on\") && win.attachEvent);\r\n\r\n            style.type = \"text/css\";\r\n            style.id = \"mediamatchjs\";\r\n\r\n            head.appendChild(style);\r\n\r\n            // Must be placed after style is inserted into the DOM for IE\r\n            info =\r\n              (win.getComputedStyle && win.getComputedStyle(style)) ||\r\n              style.currentStyle;\r\n\r\n            // Create media blocks to test for media type\r\n            for (; typeIndex < typeLength; typeIndex++) {\r\n              cssText +=\r\n                \"@media \" +\r\n                typeList[typeIndex] +\r\n                \" { #mediamatchjs { z-index: \" +\r\n                typeIndex +\r\n                \" } }\";\r\n            }\r\n\r\n            // Add rules to style element\r\n            if (style.styleSheet) {\r\n              style.styleSheet.cssText = cssText;\r\n            } else {\r\n              style.textContent = cssText;\r\n            }\r\n\r\n            // Get media type\r\n            _type = typeList[info.zIndex * 1 || 0];\r\n\r\n            head.removeChild(style);\r\n\r\n            _setFeature();\r\n\r\n            // Set up listeners\r\n            addEvent(eventPrefix + \"resize\", _watch);\r\n            addEvent(eventPrefix + \"orientationchange\", _watch);\r\n          };\r\n\r\n        _init();\r\n\r\n        /*\r\n      A list of parsed media queries, ex. screen and (max-width: 400px), screen and (max-width: 800px)\r\n      */\r\n        return function (media) {\r\n          var id = _queryID,\r\n            mql = {\r\n              matches: false,\r\n              media: media,\r\n              addListener(listener) {\r\n                _queries[id].listeners || (_queries[id].listeners = []);\r\n                listener && _queries[id].listeners.push(listener);\r\n              },\r\n              removeListener(listener) {\r\n                var query = _queries[id],\r\n                  i = 0,\r\n                  il = 0;\r\n\r\n                if (!query) {\r\n                  return;\r\n                }\r\n\r\n                il = query.listeners.length;\r\n\r\n                for (; i < il; i++) {\r\n                  if (query.listeners[i] === listener) {\r\n                    query.listeners.splice(i, 1);\r\n                  }\r\n                }\r\n              }\r\n            };\r\n\r\n          if (media === \"\") {\r\n            mql.matches = true;\r\n            return mql;\r\n          }\r\n\r\n          mql.matches = _matches(media);\r\n\r\n          _queryID = _queries.push({\r\n            mql: mql,\r\n            listeners: null\r\n          });\r\n\r\n          return mql;\r\n        };\r\n      })(window));\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,mBAAmB,EAAE;IACvCC,MAAM,EAAEL,EAAE,CAACM,KAAK,CAACC,OAAO;IAExB;AACF;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAE;MACf,IAAI,CAACC,SAAK,GAAGC,MAAM,CAACC,UAAU,CAACH,KAAK,CAAC;MACrC,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACI,OAAO,GAAG,IAAI,CAACH,SAAK,CAACG,OAAO;MACjC,IAAI,CAACC,SAAM,CAAC,CAAC;IACf,CAAC;IAEDC,MAAM,EAAE;MACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,EAAE;IACV,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,OAAO,EAAE;IACX,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;MACIT,SAAK,EAAE,IAAI;MAEX;AACJ;AACA;MACIG,OAAO,EAAE,KAAK;MAEd;AACJ;AACA;MACIJ,KAAK,EAAE,IAAI;MAEX;AACJ;AACA;AACA;MACIW,QAAQ,WAAAA,SAAA,EAAG;QACT,OAAO,IAAI,CAACX,KAAK;MACnB,CAAC;MAED;AACJ;AACA;AACA;MACIY,UAAU,WAAAA,WAAA,EAAG;QACX,OAAO,IAAI,CAACR,OAAO;MACrB,CAAC;MAED;AACJ;AACA;MACIC,SAAM,WAAAQ,UAAA,EAAG;QACP,IAAI,CAACZ,SAAK,CAACa,WAAW,CAAC,IAAI,CAACC,SAAS,CAACC,I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"
}