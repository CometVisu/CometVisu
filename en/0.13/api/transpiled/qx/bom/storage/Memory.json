{
  "className": "qx.bom.storage.Memory",
  "packageName": "qx.bom.storage",
  "name": "Memory",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0,
        "index": 961
      },
      "end": {
        "line": 152,
        "column": 3,
        "index": 3878
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Fallback storage implementation which offers the same API as every other storage\n but is not persistent. Basically, its just a storage API on a JavaScript map.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#getLength"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#setItem"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#getItem"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#removeItem"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#clear"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#getKey"
        },
        {
          "name": "@require",
          "body": "qx.bom.storage.Memory#forEach"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "__local": {
      "location": {
        "start": {
          "line": 33,
          "column": 4,
          "index": 1025
        },
        "end": {
          "line": 33,
          "column": 17,
          "index": 1038
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__session": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 1044
        },
        "end": {
          "line": 34,
          "column": 19,
          "index": 1059
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getLocal": {
      "location": {
        "start": {
          "line": 41,
          "column": 4,
          "index": 1250
        },
        "end": {
          "line": 46,
          "column": 5,
          "index": 1390
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an instance of {@link qx.bom.storage.Memory} which is of course\n not persisted on reload.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.storage.Memory} A memory storage.",
            "type": "qx.bom.storage.Memory",
            "description": " A memory storage."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSession": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1581
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1729
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an instance of {@link qx.bom.storage.Memory} which is of course\n not persisted on reload.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.bom.storage.Memory} A memory storage.",
            "type": "qx.bom.storage.Memory",
            "description": " A memory storage."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 61,
        "column": 2,
        "index": 1738
      },
      "end": {
        "line": 63,
        "column": 3,
        "index": 1780
      }
    }
  },
  "members": {
    "__storage": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1800
        },
        "end": {
          "line": 66,
          "column": 19,
          "index": 1815
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getStorage": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1927
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 1976
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the internal used map.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The storage.",
            "type": "Map",
            "description": " The storage."
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLength": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 2104
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2172
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the amount of key-value pairs stored.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The length of the storage.",
            "type": "Integer",
            "description": " The length of the storage."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setItem": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2352
        },
        "end": {
          "line": 94,
          "column": 5,
          "index": 2459
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Store an item in the storage.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier key.",
            "paramName": "key",
            "description": " The identifier key.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {var} The data, which will be stored as JSON.",
            "paramName": "value",
            "description": " The data, which will be stored as JSON.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getItem": {
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2618
        },
        "end": {
          "line": 109,
          "column": 5,
          "index": 2786
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the stored item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier to get the data.",
            "paramName": "key",
            "description": " The identifier to get the data.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The stored data.",
            "type": "var",
            "description": " The stored data."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeItem": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 2893
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 2950
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes an item form the storage.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The identifier.",
            "paramName": "key",
            "description": " The identifier.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "clear": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 3022
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3064
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deletes every stored item in the storage.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getKey": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3251
        },
        "end": {
          "line": 134,
          "column": 5,
          "index": 3344
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the named key at the given index.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The index in the storage.",
            "paramName": "index",
            "description": " The index in the storage.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The key stored at the given index.",
            "type": "String",
            "description": " The key stored at the given index."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "forEach": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3664
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 3870
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper to access every stored item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "callback {Function} A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "paramName": "callback",
            "description": " A function which will be called for every item.\n   The function will have two arguments, first the key and second the value\n    of the stored data.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "scope {var} The scope of the function.",
            "paramName": "scope",
            "description": " The scope of the function.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}