{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__local",
    "__session",
    "getLocal",
    "bom",
    "storage",
    "Memory",
    "getSession",
    "construct",
    "__storage",
    "members",
    "getStorage",
    "getLength",
    "Object",
    "keys",
    "length",
    "setItem",
    "key",
    "value",
    "lang",
    "Json",
    "stringify",
    "getItem",
    "item",
    "Type",
    "isString",
    "parse",
    "removeItem",
    "clear",
    "getKey",
    "index",
    "forEach",
    "callback",
    "scope",
    "i",
    "call"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/storage/Memory.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Fallback storage implementation which offers the same API as every other storage\n * but is not persistent. Basically, its just a storage API on a JavaScript map.\n *\n * @require(qx.bom.storage.Memory#getLength)\n * @require(qx.bom.storage.Memory#setItem)\n * @require(qx.bom.storage.Memory#getItem)\n * @require(qx.bom.storage.Memory#removeItem)\n * @require(qx.bom.storage.Memory#clear)\n * @require(qx.bom.storage.Memory#getKey)\n * @require(qx.bom.storage.Memory#forEach)\n */\nqx.Bootstrap.define(\"qx.bom.storage.Memory\", {\n  statics: {\n    __local: null,\n    __session: null,\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.Memory} which is of course\n     * not persisted on reload.\n     * @return {qx.bom.storage.Memory} A memory storage.\n     */\n    getLocal() {\n      if (this.__local) {\n        return this.__local;\n      }\n      return (this.__local = new qx.bom.storage.Memory());\n    },\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.Memory} which is of course\n     * not persisted on reload.\n     * @return {qx.bom.storage.Memory} A memory storage.\n     */\n    getSession() {\n      if (this.__session) {\n        return this.__session;\n      }\n      return (this.__session = new qx.bom.storage.Memory());\n    }\n  },\n\n  construct() {\n    this.__storage = {};\n  },\n\n  members: {\n    __storage: null,\n\n    /**\n     * Returns the internal used map.\n     * @return {Map} The storage.\n     * @internal\n     */\n    getStorage() {\n      return this.__storage;\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @return {Integer} The length of the storage.\n     */\n    getLength() {\n      return Object.keys(this.__storage).length;\n    },\n\n    /**\n     * Store an item in the storage.\n     *\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setItem(key, value) {\n      value = qx.lang.Json.stringify(value);\n      this.__storage[key] = value;\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getItem(key) {\n      var item = this.__storage[key];\n\n      if (qx.lang.Type.isString(item)) {\n        item = qx.lang.Json.parse(item);\n      }\n      return item;\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @param key {String} The identifier.\n     */\n    removeItem(key) {\n      delete this.__storage[key];\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     */\n    clear() {\n      this.__storage = {};\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @param index {Integer} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getKey(index) {\n      var keys = Object.keys(this.__storage);\n      return keys[index];\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEach(callback, scope) {\n      var length = this.getLength();\n      for (var i = 0; i < length; i++) {\n        var key = this.getKey(i);\n        callback.call(scope, key, this.getItem(key));\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}