{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__local",
    "__session",
    "getLocal",
    "bom",
    "storage",
    "Memory",
    "getSession",
    "construct",
    "__storage",
    "members",
    "getStorage",
    "getLength",
    "Object",
    "keys",
    "length",
    "setItem",
    "key",
    "value",
    "lang",
    "Json",
    "stringify",
    "getItem",
    "item",
    "Type",
    "isString",
    "parse",
    "removeItem",
    "clear",
    "getKey",
    "index",
    "forEach",
    "callback",
    "scope",
    "i",
    "call"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/storage/Memory.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Fallback storage implementation which offers the same API as every other storage\n * but is not persistent. Basically, its just a storage API on a JavaScript map.\n *\n * @require(qx.bom.storage.Memory#getLength)\n * @require(qx.bom.storage.Memory#setItem)\n * @require(qx.bom.storage.Memory#getItem)\n * @require(qx.bom.storage.Memory#removeItem)\n * @require(qx.bom.storage.Memory#clear)\n * @require(qx.bom.storage.Memory#getKey)\n * @require(qx.bom.storage.Memory#forEach)\n */\nqx.Bootstrap.define(\"qx.bom.storage.Memory\", {\n  statics: {\n    __local: null,\n    __session: null,\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.Memory} which is of course\n     * not persisted on reload.\n     * @return {qx.bom.storage.Memory} A memory storage.\n     */\n    getLocal() {\n      if (this.__local) {\n        return this.__local;\n      }\n      return (this.__local = new qx.bom.storage.Memory());\n    },\n\n    /**\n     * Returns an instance of {@link qx.bom.storage.Memory} which is of course\n     * not persisted on reload.\n     * @return {qx.bom.storage.Memory} A memory storage.\n     */\n    getSession() {\n      if (this.__session) {\n        return this.__session;\n      }\n      return (this.__session = new qx.bom.storage.Memory());\n    }\n  },\n\n  construct() {\n    this.__storage = {};\n  },\n\n  members: {\n    __storage: null,\n\n    /**\n     * Returns the internal used map.\n     * @return {Map} The storage.\n     * @internal\n     */\n    getStorage() {\n      return this.__storage;\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @return {Integer} The length of the storage.\n     */\n    getLength() {\n      return Object.keys(this.__storage).length;\n    },\n\n    /**\n     * Store an item in the storage.\n     *\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setItem(key, value) {\n      value = qx.lang.Json.stringify(value);\n      this.__storage[key] = value;\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getItem(key) {\n      var item = this.__storage[key];\n\n      if (qx.lang.Type.isString(item)) {\n        item = qx.lang.Json.parse(item);\n      }\n      return item;\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @param key {String} The identifier.\n     */\n    removeItem(key) {\n      delete this.__storage[key];\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     */\n    clear() {\n      this.__storage = {};\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @param index {Integer} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getKey(index) {\n      var keys = Object.keys(this.__storage);\n      return keys[index];\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEach(callback, scope) {\n      var length = this.getLength();\n      for (var i = 0; i < length; i++) {\n        var key = this.getKey(i);\n        callback.call(scope, key, this.getItem(key));\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}