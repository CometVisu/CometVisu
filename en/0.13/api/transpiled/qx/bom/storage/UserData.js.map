{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__local",
    "__session",
    "__id",
    "getLocal",
    "bom",
    "storage",
    "UserData",
    "getSession",
    "construct",
    "storeName",
    "__el",
    "document",
    "createElement",
    "style",
    "getElementsByTagName",
    "appendChild",
    "addBehavior",
    "__storeName",
    "load",
    "__storage",
    "__reference",
    "value",
    "getAttribute",
    "undefined",
    "lang",
    "Json",
    "parse",
    "key",
    "members",
    "getStorage",
    "getLength",
    "Object",
    "keys",
    "length",
    "setItem",
    "storageKey",
    "storageValue",
    "stringify",
    "setAttribute",
    "save",
    "getItem",
    "removeItem",
    "storageName",
    "removeAttribute",
    "lastStoreName",
    "lastItem",
    "lastKey",
    "clear",
    "getKey",
    "index",
    "forEach",
    "callback",
    "scope",
    "i",
    "call"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/storage/UserData.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Fallback storage implementation usable in IE browsers. It is recommended to use\r\n * these implementation only in IE < 8 because IE >= 8 supports\r\n * {@link qx.bom.storage.Web}.\r\n *\r\n * @require(qx.bom.storage.UserData#getLength)\r\n * @require(qx.bom.storage.UserData#setItem)\r\n * @require(qx.bom.storage.UserData#getItem)\r\n * @require(qx.bom.storage.UserData#removeItem)\r\n * @require(qx.bom.storage.UserData#clear)\r\n * @require(qx.bom.storage.UserData#getKey)\r\n * @require(qx.bom.storage.UserData#forEach)\r\n */\r\nqx.Bootstrap.define(\"qx.bom.storage.UserData\", {\r\n  statics: {\r\n    __local: null,\r\n    __session: null,\r\n\r\n    // global id used as key for the storage\r\n    __id: 0,\r\n\r\n    /**\r\n     * Returns an instance of {@link qx.bom.storage.UserData} used to store\r\n     * data persistent.\r\n     * @return {qx.bom.storage.UserData} A storage instance.\r\n     */\r\n    getLocal() {\r\n      if (this.__local) {\r\n        return this.__local;\r\n      }\r\n      return (this.__local = new qx.bom.storage.UserData(\"local\"));\r\n    },\r\n\r\n    /**\r\n     * Returns an instance of {@link qx.bom.storage.UserData} used to store\r\n     * data persistent.\r\n     * @return {qx.bom.storage.UserData} A storage instance.\r\n     */\r\n    getSession() {\r\n      if (this.__session) {\r\n        return this.__session;\r\n      }\r\n      return (this.__session = new qx.bom.storage.UserData(\"session\"));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Create a new instance. Usually, you should take the static\r\n   * accessors to get your instance.\r\n   *\r\n   * @param storeName {String} type of storage.\r\n   */\r\n  construct(storeName) {\r\n    // create a dummy DOM element used for storage\r\n    this.__el = document.createElement(\"div\");\r\n    this.__el.style[\"display\"] = \"none\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(this.__el);\r\n    this.__el.addBehavior(\"#default#userdata\");\r\n    this.__storeName = storeName;\r\n    // load the inital data which might be stored\r\n    this.__el.load(this.__storeName);\r\n\r\n    // set up the internal reference maps\r\n    this.__storage = {};\r\n    this.__reference = {};\r\n\r\n    // initialize\r\n    var value = this.__el.getAttribute(\"qx\" + qx.bom.storage.UserData.__id);\r\n    while (value != undefined) {\r\n      value = qx.lang.Json.parse(value);\r\n      // save the data in the internal storage\r\n      this.__storage[value.key] = value.value;\r\n      // save the reference\r\n      this.__reference[value.key] = \"qx\" + qx.bom.storage.UserData.__id;\r\n      qx.bom.storage.UserData.__id++;\r\n      value = this.__el.getAttribute(\"qx\" + qx.bom.storage.UserData.__id);\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __el: null,\r\n    __storeName: \"qxtest\",\r\n\r\n    // storage which holds the key and the value\r\n    __storage: null,\r\n\r\n    // reference store which holds the key and the key used to store\r\n    __reference: null,\r\n\r\n    /**\r\n     * Returns the map used to keep a in memory copy of the stored data.\r\n     * @return {Map} The stored data.\r\n     * @internal\r\n     */\r\n    getStorage() {\r\n      return this.__storage;\r\n    },\r\n\r\n    /**\r\n     * Returns the amount of key-value pairs stored.\r\n     * @return {Integer} The length of the storage.\r\n     */\r\n    getLength() {\r\n      return Object.keys(this.__storage).length;\r\n    },\r\n\r\n    /**\r\n     * Store an item in the storage.\r\n     *\r\n     * @param key {String} The identifier key.\r\n     * @param value {var} The data, which will be stored as JSON.\r\n     */\r\n    setItem(key, value) {\r\n      // override case\r\n      if (this.__reference[key]) {\r\n        var storageKey = this.__reference[key];\r\n        // new case\r\n      } else {\r\n        var storageKey = \"qx\" + qx.bom.storage.UserData.__id;\r\n        qx.bom.storage.UserData.__id++;\r\n      }\r\n\r\n      // build and save the data used to store both, key and value\r\n      var storageValue = qx.lang.Json.stringify({ key: key, value: value });\r\n      this.__el.setAttribute(storageKey, storageValue);\r\n      this.__el.save(this.__storeName);\r\n\r\n      // also update the internal mappings\r\n      this.__storage[key] = value;\r\n      this.__reference[key] = storageKey;\r\n    },\r\n\r\n    /**\r\n     * Returns the stored item.\r\n     *\r\n     * @param key {String} The identifier to get the data.\r\n     * @return {var} The stored data.\r\n     */\r\n    getItem(key) {\r\n      return this.__storage[key] || null;\r\n    },\r\n\r\n    /**\r\n     * Removes an item form the storage.\r\n     * @param key {String} The identifier.\r\n     */\r\n    removeItem(key) {\r\n      // check if the item is available\r\n      var storageName = this.__reference[key];\r\n      if (storageName == undefined) {\r\n        return;\r\n      }\r\n\r\n      // remove the item\r\n      this.__el.removeAttribute(storageName);\r\n      // decrease the id because we removed one item\r\n      qx.bom.storage.UserData.__id--;\r\n\r\n      // update the internal maps\r\n      delete this.__storage[key];\r\n      delete this.__reference[key];\r\n\r\n      // check if we have deleted the last item\r\n      var lastStoreName = \"qx\" + qx.bom.storage.UserData.__id;\r\n      if (this.__el.getAttribute(lastStoreName)) {\r\n        // if not, move the last item to the deleted spot\r\n        var lastItem = this.__el.getAttribute(\r\n          \"qx\" + qx.bom.storage.UserData.__id\r\n        );\r\n\r\n        this.__el.removeAttribute(lastStoreName);\r\n        this.__el.setAttribute(storageName, lastItem);\r\n\r\n        // update the reference map\r\n        var lastKey = qx.lang.Json.parse(lastItem).key;\r\n        this.__reference[lastKey] = storageName;\r\n      }\r\n      this.__el.save(this.__storeName);\r\n    },\r\n\r\n    /**\r\n     * Deletes every stored item in the storage.\r\n     */\r\n    clear() {\r\n      // delete all entries from the storage\r\n      for (var key in this.__reference) {\r\n        this.__el.removeAttribute(this.__reference[key]);\r\n      }\r\n      this.__el.save(this.__storeName);\r\n      // reset the internal maps\r\n      this.__storage = {};\r\n      this.__reference = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the named key at the given index.\r\n     * @param index {Integer} The index in the storage.\r\n     * @return {String} The key stored at the given index.\r\n     */\r\n    getKey(index) {\r\n      return Object.keys(this.__storage)[index];\r\n    },\r\n\r\n    /**\r\n     * Helper to access every stored item.\r\n     *\r\n     * @param callback {Function} A function which will be called for every item.\r\n     *   The function will have two arguments, first the key and second the value\r\n     *    of the stored data.\r\n     * @param scope {var} The scope of the function.\r\n     */\r\n    forEach(callback, scope) {\r\n      var length = this.getLength();\r\n      for (var i = 0; i < length; i++) {\r\n        var key = this.getKey(i);\r\n        callback.call(scope, key, this.getItem(key));\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}