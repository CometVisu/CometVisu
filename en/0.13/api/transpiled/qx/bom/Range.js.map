{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "get",
    "core",
    "Environment",
    "select",
    "selection",
    "node",
    "dom",
    "Node",
    "isElement",
    "nodeName",
    "toLowerCase",
    "type",
    "createTextRange",
    "bom",
    "Selection",
    "getSelectionObject",
    "getDocument",
    "createRange",
    "window",
    "_default",
    "doc",
    "sel",
    "rangeCount",
    "getRangeAt",
    "Range"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Range.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Alexander Steitz (aback)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Low-level Range API which is used together with the low-level Selection API.\r\n * This is especially useful whenever a developer want to work on text level,\r\n * e.g. for an editor.\r\n */\r\nqx.Bootstrap.define(\"qx.bom.Range\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * Returns the range object of the given node.\r\n     *\r\n     * @signature function(node)\r\n     * @param node {Node} node to get the range of\r\n     * @return {Range} valid range of given selection\r\n     */\r\n    get: qx.core.Environment.select(\"html.selection\", {\r\n      selection(node) {\r\n        // check for the type of the given node\r\n        // for legacy IE the nodes input, textarea, button and body\r\n        // have access to own TextRange objects. Everything else is\r\n        // gathered via the selection object.\r\n        if (qx.dom.Node.isElement(node)) {\r\n          switch (node.nodeName.toLowerCase()) {\r\n            case \"input\":\r\n              switch (node.type) {\r\n                case \"text\":\r\n                case \"password\":\r\n                case \"hidden\":\r\n                case \"button\":\r\n                case \"reset\":\r\n                case \"file\":\r\n                case \"submit\":\r\n                  return node.createTextRange();\r\n\r\n                default:\r\n                  return qx.bom.Selection.getSelectionObject(\r\n                    qx.dom.Node.getDocument(node)\r\n                  ).createRange();\r\n              }\r\n\r\n            case \"textarea\":\r\n            case \"body\":\r\n            case \"button\":\r\n              return node.createTextRange();\r\n\r\n            default:\r\n              return qx.bom.Selection.getSelectionObject(\r\n                qx.dom.Node.getDocument(node)\r\n              ).createRange();\r\n          }\r\n        } else {\r\n          if (node == null) {\r\n            node = window;\r\n          }\r\n\r\n          // need to pass the document node to work with multi-documents\r\n          return qx.bom.Selection.getSelectionObject(\r\n            qx.dom.Node.getDocument(node)\r\n          ).createRange();\r\n        }\r\n      },\r\n\r\n      // suitable for gecko, opera and webkit\r\n      default(node) {\r\n        var doc = qx.dom.Node.getDocument(node);\r\n\r\n        // get the selection object of the corresponding document\r\n        var sel = qx.bom.Selection.getSelectionObject(doc);\r\n\r\n        if (sel.rangeCount > 0) {\r\n          return sel.getRangeAt(0);\r\n        } else {\r\n          return doc.createRange();\r\n        }\r\n      }\r\n    })\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,cAAc,EAAE;IAClC;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,EAAEN,EAAE,CAACO,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,gBAAgB,EAAE;QAChDC,SAAS,WAAAA,UAACC,IAAI,EAAE;UACd;UACA;UACA;UACA;UACA,IAAIX,EAAE,CAACY,GAAG,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE;YAC/B,QAAQA,IAAI,CAACI,QAAQ,CAACC,WAAW,CAAC,CAAC;cACjC,KAAK,OAAO;gBACV,QAAQL,IAAI,CAACM,IAAI;kBACf,KAAK,MAAM;kBACX,KAAK,UAAU;kBACf,KAAK,QAAQ;kBACb,KAAK,QAAQ;kBACb,KAAK,OAAO;kBACZ,KAAK,MAAM;kBACX,KAAK,QAAQ;oBACX,OAAON,IAAI,CAACO,eAAe,CAAC,CAAC;kBAE/B;oBACE,OAAOlB,EAAE,CAACmB,GAAG,CAACC,SAAS,CAACC,kBAAkB,CACxCrB,EAAE,CAACY,GAAG,CAACC,IAAI,CAACS,WAAW,CAACX,IAAI,CAC9B,CAAC,CAACY,WAAW,CAAC,CAAC;gBACnB;cAEF,KAAK,UAAU;cACf,KAAK,MAAM;cACX,KAAK,QAAQ;gBACX,OAAOZ,IAAI,CAACO,eAAe,CAAC,CAAC;cAE/B;gBACE,OAAOlB,EAAE,CAACmB,GAAG,CAACC,SAAS,CAACC,kBAAkB,CACxCrB,EAAE,CAACY,GAAG,CAACC,IAAI,CAACS,WAAW,CAACX,IAAI,CAC9B,CAAC,CAACY,WAAW,CAAC,CAAC;YACnB;UACF,CAAC,MAAM;YACL,IAAIZ,IAAI,IAAI,IAAI,EAAE;cAChBA,IAAI,GAAGa,MAAM;YACf;;YAEA;YACA,OAAOxB,EAAE,CAACmB,GAAG,CAACC,SAAS,CAACC,kBAAkB,CACxCrB,EAAE,CAACY,GAAG,CAACC,IAAI,CAACS,WAAW,CAACX,IAAI,CAC9B,CAAC,CAACY,WAAW,CAAC,CAAC;UACjB;QACF,CAAC;QAED;QAAA,oBAAAE,SACQd,IAAI,EAAE;UACZ,IAAIe,GAAG,GAAG1B,EAAE,CAACY,GAAG,CAACC,IAAI,CAACS,WAAW,CAACX,IAAI,CAAC;;UAEvC;UACA,IAAIgB,GAAG,GAAG3B,EAAE,CAACmB,GAAG,CAACC,SAAS,CAACC,kBAAkB,CAACK,GAAG,CAAC;UAElD,IAAIC,GAAG,CAACC,UAAU,GAAG,CAAC,EAAE;YACtB,OAAOD,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC;UAC1B,CAAC,MAAM;YACL,OAAOH,GAAG,CAACH,WAAW,CAAC,CAAC;UAC1B;QACF;MACF,CAAC;IACH;EACF,CAAC,CAAC;EApGFvB,EAAE,CAACmB,GAAG,CAACW,KAAK,CAAC3B,aAAa,GAAGA,aAAa;AAAC"
}