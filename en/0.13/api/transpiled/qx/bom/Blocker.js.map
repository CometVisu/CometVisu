{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "__init",
    "members",
    "__iframeElement",
    "__blockerElement",
    "__blockedElement",
    "__isActive",
    "__defaultZIndex",
    "__defaultBlockerOpacity",
    "__defaultBlockerColor",
    "block",
    "element",
    "event",
    "Registration",
    "addListener",
    "window",
    "__onResize",
    "styles",
    "__calculateStyles",
    "__styleAndInsertBlocker",
    "unblock",
    "__removeBlocker",
    "removeListener",
    "isBlocked",
    "getBlockerElement",
    "setBlockerColor",
    "color",
    "bom",
    "Style",
    "set",
    "getBlockerColor",
    "get",
    "setBlockerOpacity",
    "opacity",
    "Opacity",
    "getBlockerOpacity",
    "setBlockerZIndex",
    "zIndex",
    "getBlockerZIndex",
    "__P_100_0",
    "__setupBlockerElement",
    "Environment",
    "__setupIframeElement",
    "__P_100_12",
    "dom",
    "Element",
    "create",
    "setStyles",
    "display",
    "backgroundColor",
    "__P_100_13",
    "Iframe",
    "Attribute",
    "__P_100_9",
    "position",
    "__isWholeDocumentBlockTarget",
    "left",
    "top",
    "right",
    "bottom",
    "width",
    "Document",
    "getWidth",
    "height",
    "getHeight",
    "Dimension",
    "Location",
    "getLeft",
    "getTop",
    "__P_100_10",
    "target",
    "document",
    "body",
    "insertEnd",
    "__P_100_11",
    "remove",
    "__P_100_8",
    "e",
    "__resizeBlocker",
    "Timer",
    "once",
    "dimension",
    "__P_100_15",
    "__P_100_14",
    "Node",
    "isWindow",
    "isDocument",
    "Blocker"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/Blocker.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Alexander Steitz (aback)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides an unified blocker which offers three different modes.\r\n *\r\n * *Blocker modes*\r\n *\r\n * * block the whole document\r\n * * block the content of an element\r\n * * act as an underlying blocker for an element to shim native controls\r\n *\r\n *\r\n * The third mode is mainly necessary for IE browsers.\r\n *\r\n *\r\n * The first mode is the easiest to use. Just use the {@link #block} method\r\n * without a parameter.\r\n * The second and third mode are taking a DOM element as parameter for the\r\n * {@link #block} method. Additionally one need to setup the \"zIndex\" value\r\n * correctly to get the right results (see at {@link #setBlockerZIndex} method).\r\n *\r\n *\r\n * The zIndex value defaults to the value \"10000\". Either you set an appropriate\r\n * value for the blocker zIndex or for your DOM element to block. If you want\r\n * to block the content of your DOM element it has to have at least the zIndex\r\n * value of \"10001\" with default blocker values.\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n * @require(qx.bom.Element)\r\n * @require(qx.bom.Iframe)\r\n */\r\nqx.Class.define(\"qx.bom.Blocker\", {\r\n  extend: qx.core.Object,\r\n\r\n  construct() {\r\n    super();\r\n\r\n    this.__init();\r\n  },\r\n\r\n  members: {\r\n    __iframeElement: null,\r\n    __blockerElement: null,\r\n    __blockedElement: null,\r\n    __isActive: false,\r\n    __defaultZIndex: 10000,\r\n    __defaultBlockerOpacity: 0,\r\n    __defaultBlockerColor: \"transparent\",\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Blocks the whole document (if no parameter is given) or acts as an\r\n     * underlying blocker for native controls.\r\n     *\r\n     * @param element {element?null} If no element is given the whole document is blocked.\r\n     */\r\n    block(element) {\r\n      if (!this.__isActive) {\r\n        qx.event.Registration.addListener(\r\n          window,\r\n          \"resize\",\r\n          this.__onResize,\r\n          this\r\n        );\r\n\r\n        this.__blockedElement = element;\r\n\r\n        var styles = this.__calculateStyles();\r\n        this.__styleAndInsertBlocker(styles);\r\n        this.__isActive = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Releases the blocking\r\n     */\r\n    unblock() {\r\n      if (this.__isActive) {\r\n        this.__removeBlocker();\r\n        qx.event.Registration.removeListener(\r\n          window,\r\n          \"resize\",\r\n          this.__onResize,\r\n          this\r\n        );\r\n\r\n        this.__isActive = false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Whether the blocker is already active.\r\n     *\r\n     * @return {Boolean} Blocker active\r\n     */\r\n    isBlocked() {\r\n      return this.__isActive;\r\n    },\r\n\r\n    /**\r\n     * Returns the blocker element. Useful if the element should be animated.\r\n     *\r\n     * @return {Element} DOM element\r\n     */\r\n    getBlockerElement() {\r\n      return this.__blockerElement;\r\n    },\r\n\r\n    /**\r\n     * Sets the color of the blocker element. Be sure to set also a suitable\r\n     * opacity value to get the desired result.\r\n     *\r\n     * @param color {String} CSS color value\r\n     * @see #setBlockerOpacity\r\n     */\r\n    setBlockerColor(color) {\r\n      qx.bom.element.Style.set(this.__blockerElement, \"backgroundColor\", color);\r\n    },\r\n\r\n    /**\r\n     * Returns the current blocker color.\r\n     *\r\n     * @return {String} CSS color value\r\n     */\r\n    getBlockerColor() {\r\n      return qx.bom.element.Style.get(this.__blockerElement, \"backgroundColor\");\r\n    },\r\n\r\n    /**\r\n     * Sets the blocker opacity. Be sure to set also a suitable blocker color\r\n     * value to get the desired result.\r\n     *\r\n     * @param opacity {String} CSS opacity value\r\n     * @see #setBlockerColor\r\n     */\r\n    setBlockerOpacity(opacity) {\r\n      qx.bom.element.Opacity.set(this.__blockerElement, opacity);\r\n    },\r\n\r\n    /**\r\n     * Returns the blocker opacity value.\r\n     *\r\n     * @return {Integer} CSS opacity value\r\n     */\r\n    getBlockerOpacity() {\r\n      return qx.bom.element.Opacity.get(this.__blockerElement);\r\n    },\r\n\r\n    /**\r\n     * Set the zIndex of the blocker element. For most use cases you do not need\r\n     * to manipulate this value.\r\n     *\r\n     * @param zIndex {Integer} CSS zIndex value\r\n     */\r\n    setBlockerZIndex(zIndex) {\r\n      qx.bom.element.Style.set(this.__blockerElement, \"zIndex\", zIndex);\r\n    },\r\n\r\n    /**\r\n     * Returns the blocker zIndex value\r\n     *\r\n     * @return {Integer} CSS zIndex value\r\n     */\r\n    getBlockerZIndex() {\r\n      return qx.bom.element.Style.get(this.__blockerElement, \"zIndex\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PRIVATE API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Setups the elements and registers a \"resize\" event.\r\n     */\r\n    __init() {\r\n      this.__setupBlockerElement();\r\n\r\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n        this.__setupIframeElement();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Create blocker element and set initial styles.\r\n     */\r\n    __setupBlockerElement() {\r\n      this.__blockerElement = qx.dom.Element.create(\"div\");\r\n      qx.bom.element.Style.setStyles(this.__blockerElement, {\r\n        display: \"block\",\r\n        opacity: this.__defaultBlockerOpacity,\r\n        backgroundColor: this.__defaultBlockerColor\r\n      });\r\n\r\n      this.setBlockerZIndex(this.__defaultZIndex);\r\n    },\r\n\r\n    /**\r\n     * Create iframe blocker element and set initial styles.\r\n     *\r\n     * Needed to block native form elements\r\n     * // see: http://www.macridesweb.com/oltest/IframeShim.html\r\n     */\r\n    __setupIframeElement() {\r\n      this.__iframeElement = qx.bom.Iframe.create();\r\n\r\n      qx.bom.element.Attribute.set(\r\n        this.__iframeElement,\r\n        \"allowTransparency\",\r\n        false\r\n      );\r\n\r\n      /* eslint-disable no-script-url */\r\n      qx.bom.element.Attribute.set(\r\n        this.__iframeElement,\r\n        \"src\",\r\n        \"javascript:false;\"\r\n      );\r\n\r\n      /* eslint-enable no-script-url */\r\n      qx.bom.element.Style.setStyles(this.__iframeElement, {\r\n        display: \"block\",\r\n        opacity: this.__defaultBlockerOpacity\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Calculates the necessary styles for the blocker element.\r\n     * Either the values of the document or of the element to block are used.\r\n     *\r\n     * @return {Map} Object with necessary style infos\r\n     */\r\n    __calculateStyles() {\r\n      var styles = { position: \"absolute\" };\r\n\r\n      if (this.__isWholeDocumentBlockTarget()) {\r\n        styles.left = \"0px\";\r\n        styles.top = \"0px\";\r\n        styles.right = null;\r\n        styles.bottom = null;\r\n        styles.width = qx.bom.Document.getWidth() + \"px\";\r\n        styles.height = qx.bom.Document.getHeight() + \"px\";\r\n      } else {\r\n        styles.width =\r\n          qx.bom.element.Dimension.getWidth(this.__blockedElement) + \"px\";\r\n        styles.height =\r\n          qx.bom.element.Dimension.getHeight(this.__blockedElement) + \"px\";\r\n        styles.left =\r\n          qx.bom.element.Location.getLeft(this.__blockedElement) + \"px\";\r\n        styles.top =\r\n          qx.bom.element.Location.getTop(this.__blockedElement) + \"px\";\r\n      }\r\n\r\n      return styles;\r\n    },\r\n\r\n    /**\r\n     * Apply the given styles and inserts the blocker.\r\n     *\r\n     * @param styles {Object} styles to apply\r\n     */\r\n    __styleAndInsertBlocker(styles) {\r\n      var target = document.body;\r\n\r\n      qx.bom.element.Style.setStyles(this.__blockerElement, styles);\r\n      qx.dom.Element.insertEnd(this.__blockerElement, target);\r\n\r\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n        styles.zIndex = this.getBlockerZIndex() - 1;\r\n\r\n        qx.bom.element.Style.setStyles(this.__iframeElement, styles);\r\n        qx.dom.Element.insertEnd(this.__iframeElement, document.body);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove the blocker elements.\r\n     */\r\n    __removeBlocker() {\r\n      qx.dom.Element.remove(this.__blockerElement);\r\n\r\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n        qx.dom.Element.remove(this.__iframeElement);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Reacts on window resize and adapts the new size for the blocker element\r\n     * if the whole document is blocked.\r\n     *\r\n     * @param e {qx.event.type.Event} event instance\r\n     */\r\n    __onResize(e) {\r\n      if (this.__isWholeDocumentBlockTarget()) {\r\n        // reset the blocker to get the right calculated document dimension\r\n        this.__resizeBlocker({ width: \"0px\", height: \"0px\" });\r\n\r\n        // If the HTML document is very large, the getWidth() and getHeight()\r\n        // returns the old size (it seems that the rendering engine is to slow).\r\n        qx.event.Timer.once(\r\n          function () {\r\n            var dimension = {\r\n              width: qx.bom.Document.getWidth() + \"px\",\r\n              height: qx.bom.Document.getHeight() + \"px\"\r\n            };\r\n\r\n            this.__resizeBlocker(dimension);\r\n          },\r\n          this,\r\n          0\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Does the resizing for blocker element and blocker iframe element (IE)\r\n     *\r\n     * @param dimension {Object} Map with width and height as keys\r\n     */\r\n    __resizeBlocker(dimension) {\r\n      qx.bom.element.Style.setStyles(this.__blockerElement, dimension);\r\n\r\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n        qx.bom.element.Style.setStyles(this.__iframeElement, dimension);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks whether the whole document is be blocked.\r\n     *\r\n     * @return {Boolean} block mode\r\n     */\r\n    __isWholeDocumentBlockTarget() {\r\n      return (\r\n        this.__blockedElement == null ||\r\n        qx.dom.Node.isWindow(this.__blockedElement) ||\r\n        qx.dom.Node.isDocument(this.__blockedElement)\r\n      );\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,gBAAgB,EAAE;IAChCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtBC,SAAS,WAAAA,UAAA,EAAG;MACVT,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAE,WAAA,CAAAC,IAAA;MAEA,IAAI,CAACC,SAAM,CAAC,CAAC;IACf,CAAC;IAEDC,OAAO,EAAE;MACPC,SAAe,EAAE,IAAI;MACrBC,SAAgB,EAAE,IAAI;MACtBC,SAAgB,EAAE,IAAI;MACtBC,SAAU,EAAE,KAAK;MACjBC,SAAe,EAAE,KAAK;MACtBC,SAAuB,EAAE,CAAC;MAC1BC,SAAqB,EAAE,aAAa;MAEpC;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;MACIC,KAAK,WAAAA,MAACC,OAAO,EAAE;QACb,IAAI,CAAC,IAAI,CAACL,SAAU,EAAE;UACpBjB,EAAE,CAACuB,KAAK,CAACC,YAAY,CAACC,WAAW,CAC/BC,MAAM,EACN,QAAQ,EACR,IAAI,CAACC,SAAU,EACf,IACF,CAAC;UAED,IAAI,CAACX,SAAgB,GAAGM,OAAO;UAE/B,IAAIM,MAAM,GAAG,IAAI,CAACC,SAAiB,CAAC,CAAC;UACrC,IAAI,CAACC,UAAuB,CAACF,MAAM,CAAC;UACpC,IAAI,CAACX,SAAU,GAAG,IAAI;QACxB;MACF,CAAC;MAED;AACJ;AACA;MACIc,OAAO,WAAAA,QAAA,EAAG;QACR,IAAI,IAAI,CAACd,SAAU,EAAE;UACnB,IAAI,CAACe,UAAe,CAAC,CAAC;UACtBhC,EAAE,CAACuB,KAAK,CAACC,YAAY,CAACS,cAAc,CAClCP,MAAM,EACN,QAAQ,EACR,IAAI,CAACC,SAAU,EACf,IACF,CAAC;UAED,IAAI,CAACV,SAAU,GAAG,KAAK;QACzB;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIiB,SAAS,WAAAA,UAAA,EAAG;QACV,OAAO,IAAI,CAACjB,SAAU;MACxB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIkB,iBAAiB,WAAAA,kBAAA,EAAG;QAClB,OAAO,IAAI,CAACpB,SAAgB;MAC9B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIqB,eAAe,WAAAA,gBAACC,KAAK,EAAE;QACrBrC,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACC,GAAG,CAAC,IAAI,CAACzB,SAAgB,EAAE,iBAAiB,EAAEsB,KAAK,CAAC;MAC3E,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,eAAe,WAAAA,gBAAA,EAAG;QAChB,OAAOzC,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACG,GAAG,CAAC,IAAI,CAAC3B,SAAgB,EAAE,iBAAiB,CAAC;MAC3E,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACI4B,iBAAiB,WAAAA,kBAACC,OAAO,EAAE;QACzB5C,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACuB,OAAO,CAACL,GAAG,CAAC,IAAI,CAACzB,SAAgB,EAAE6B,OAAO,CAAC;MAC5D,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIE,iBAAiB,WAAAA,kBAAA,EAAG;QAClB,OAAO9C,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACuB,OAAO,CAACH,GAAG,CAAC,IAAI,CAAC3B,SAAgB,CAAC;MAC1D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIgC,gBAAgB,WAAAA,iBAACC,MAAM,EAAE;QACvBhD,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACC,GAAG,CAAC,IAAI,CAACzB,SAAgB,EAAE,QAAQ,EAAEiC,MAAM,CAAC;MACnE,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,OAAOjD,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACG,GAAG,CAAC,IAAI,CAAC3B,SAAgB,EAAE,QAAQ,CAAC;MAClE,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;MACIH,SAAM,WAAAsC,UAAA,EAAG;QACP,IAAI,CAACC,UAAqB,CAAC,CAAC;QAE5B,IAAInD,EAAE,CAACO,IAAI,CAAC6C,WAAW,CAACV,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,EAAE;UACtD,IAAI,CAACW,UAAoB,CAAC,CAAC;QAC7B;MACF,CAAC;MAED;AACJ;AACA;MACIF,UAAqB,WAAAG,WAAA,EAAG;QACtB,IAAI,CAACvC,SAAgB,GAAGf,EAAE,CAACuD,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC,KAAK,CAAC;QACpDzD,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC3C,SAAgB,EAAE;UACpD4C,OAAO,EAAE,OAAO;UAChBf,OAAO,EAAE,IAAI,CAACzB,SAAuB;UACrCyC,eAAe,EAAE,IAAI,CAACxC;QACxB,CAAC,CAAC;QAEF,IAAI,CAAC2B,gBAAgB,CAAC,IAAI,CAAC7B,SAAe,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACImC,UAAoB,WAAAQ,WAAA,EAAG;QACrB,IAAI,CAAC/C,SAAe,GAAGd,EAAE,CAACsC,GAAG,CAACwB,MAAM,CAACL,MAAM,CAAC,CAAC;QAE7CzD,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACyC,SAAS,CAACvB,GAAG,CAC1B,IAAI,CAAC1B,SAAe,EACpB,mBAAmB,EACnB,KACF,CAAC;;QAED;QACAd,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACyC,SAAS,CAACvB,GAAG,CAC1B,IAAI,CAAC1B,SAAe,EACpB,KAAK,EACL,mBACF,CAAC;;QAED;QACAd,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC5C,SAAe,EAAE;UACnD6C,OAAO,EAAE,OAAO;UAChBf,OAAO,EAAE,IAAI,CAACzB;QAChB,CAAC,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIU,SAAiB,WAAAmC,UAAA,EAAG;QAClB,IAAIpC,MAAM,GAAG;UAAEqC,QAAQ,EAAE;QAAW,CAAC;QAErC,IAAI,IAAI,CAACC,UAA4B,CAAC,CAAC,EAAE;UACvCtC,MAAM,CAACuC,IAAI,GAAG,KAAK;UACnBvC,MAAM,CAACwC,GAAG,GAAG,KAAK;UAClBxC,MAAM,CAACyC,KAAK,GAAG,IAAI;UACnBzC,MAAM,CAAC0C,MAAM,GAAG,IAAI;UACpB1C,MAAM,CAAC2C,KAAK,GAAGvE,EAAE,CAACsC,GAAG,CAACkC,QAAQ,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI;UAChD7C,MAAM,CAAC8C,MAAM,GAAG1E,EAAE,CAACsC,GAAG,CAACkC,QAAQ,CAACG,SAAS,CAAC,CAAC,GAAG,IAAI;QACpD,CAAC,MAAM;UACL/C,MAAM,CAAC2C,KAAK,GACVvE,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACsD,SAAS,CAACH,QAAQ,CAAC,IAAI,CAACzD,SAAgB,CAAC,GAAG,IAAI;UACjEY,MAAM,CAAC8C,MAAM,GACX1E,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACsD,SAAS,CAACD,SAAS,CAAC,IAAI,CAAC3D,SAAgB,CAAC,GAAG,IAAI;UAClEY,MAAM,CAACuC,IAAI,GACTnE,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACuD,QAAQ,CAACC,OAAO,CAAC,IAAI,CAAC9D,SAAgB,CAAC,GAAG,IAAI;UAC/DY,MAAM,CAACwC,GAAG,GACRpE,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACuD,QAAQ,CAACE,MAAM,CAAC,IAAI,CAAC/D,SAAgB,CAAC,GAAG,IAAI;QAChE;QAEA,OAAOY,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIE,UAAuB,WAAAkD,WAACpD,MAAM,EAAE;QAC9B,IAAIqD,MAAM,GAAGC,QAAQ,CAACC,IAAI;QAE1BnF,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC3C,SAAgB,EAAEa,MAAM,CAAC;QAC7D5B,EAAE,CAACuD,GAAG,CAACC,OAAO,CAAC4B,SAAS,CAAC,IAAI,CAACrE,SAAgB,EAAEkE,MAAM,CAAC;QAEvD,IAAIjF,EAAE,CAACO,IAAI,CAAC6C,WAAW,CAACV,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,EAAE;UACtDd,MAAM,CAACoB,MAAM,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG,CAAC;UAE3CjD,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC5C,SAAe,EAAEc,MAAM,CAAC;UAC5D5B,EAAE,CAACuD,GAAG,CAACC,OAAO,CAAC4B,SAAS,CAAC,IAAI,CAACtE,SAAe,EAAEoE,QAAQ,CAACC,IAAI,CAAC;QAC/D;MACF,CAAC;MAED;AACJ;AACA;MACInD,UAAe,WAAAqD,WAAA,EAAG;QAChBrF,EAAE,CAACuD,GAAG,CAACC,OAAO,CAAC8B,MAAM,CAAC,IAAI,CAACvE,SAAgB,CAAC;QAE5C,IAAIf,EAAE,CAACO,IAAI,CAAC6C,WAAW,CAACV,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,EAAE;UACtD1C,EAAE,CAACuD,GAAG,CAACC,OAAO,CAAC8B,MAAM,CAAC,IAAI,CAACxE,SAAe,CAAC;QAC7C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIa,SAAU,WAAA4D,UAACC,CAAC,EAAE;QACZ,IAAI,IAAI,CAACtB,UAA4B,CAAC,CAAC,EAAE;UACvC;UACA,IAAI,CAACuB,UAAe,CAAC;YAAElB,KAAK,EAAE,KAAK;YAAEG,MAAM,EAAE;UAAM,CAAC,CAAC;;UAErD;UACA;UACA1E,EAAE,CAACuB,KAAK,CAACmE,KAAK,CAACC,IAAI,CACjB,YAAY;YACV,IAAIC,SAAS,GAAG;cACdrB,KAAK,EAAEvE,EAAE,CAACsC,GAAG,CAACkC,QAAQ,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI;cACxCC,MAAM,EAAE1E,EAAE,CAACsC,GAAG,CAACkC,QAAQ,CAACG,SAAS,CAAC,CAAC,GAAG;YACxC,CAAC;YAED,IAAI,CAACc,UAAe,CAACG,SAAS,CAAC;UACjC,CAAC,EACD,IAAI,EACJ,CACF,CAAC;QACH;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIH,UAAe,WAAAI,WAACD,SAAS,EAAE;QACzB5F,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC3C,SAAgB,EAAE6E,SAAS,CAAC;QAEhE,IAAI5F,EAAE,CAACO,IAAI,CAAC6C,WAAW,CAACV,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,EAAE;UACtD1C,EAAE,CAACsC,GAAG,CAAChB,OAAO,CAACiB,KAAK,CAACmB,SAAS,CAAC,IAAI,CAAC5C,SAAe,EAAE8E,SAAS,CAAC;QACjE;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI1B,UAA4B,WAAA4B,WAAA,EAAG;QAC7B,OACE,IAAI,CAAC9E,SAAgB,IAAI,IAAI,IAC7BhB,EAAE,CAACuD,GAAG,CAACwC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAChF,SAAgB,CAAC,IAC3ChB,EAAE,CAACuD,GAAG,CAACwC,IAAI,CAACE,UAAU,CAAC,IAAI,CAACjF,SAAgB,CAAC;MAEjD;IACF;EACF,CAAC,CAAC;EA3WFhB,EAAE,CAACsC,GAAG,CAAC4D,OAAO,CAAC/F,aAAa,GAAGA,aAAa;AAAC"
}