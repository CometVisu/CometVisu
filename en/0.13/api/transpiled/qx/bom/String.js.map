{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TO_CHARCODE",
    "quot",
    "amp",
    "lt",
    "gt",
    "nbsp",
    "iexcl",
    "cent",
    "pound",
    "curren",
    "yen",
    "brvbar",
    "sect",
    "uml",
    "copy",
    "ordf",
    "laquo",
    "not",
    "shy",
    "reg",
    "macr",
    "deg",
    "plusmn",
    "sup2",
    "sup3",
    "acute",
    "micro",
    "para",
    "middot",
    "cedil",
    "sup1",
    "ordm",
    "raquo",
    "frac14",
    "frac12",
    "frac34",
    "iquest",
    "Agrave",
    "Aacute",
    "Acirc",
    "Atilde",
    "Auml",
    "Aring",
    "AElig",
    "Ccedil",
    "Egrave",
    "Eacute",
    "Ecirc",
    "Euml",
    "Igrave",
    "Iacute",
    "Icirc",
    "Iuml",
    "ETH",
    "Ntilde",
    "Ograve",
    "Oacute",
    "Ocirc",
    "Otilde",
    "Ouml",
    "times",
    "Oslash",
    "Ugrave",
    "Uacute",
    "Ucirc",
    "Uuml",
    "Yacute",
    "THORN",
    "szlig",
    "agrave",
    "aacute",
    "acirc",
    "atilde",
    "auml",
    "aring",
    "aelig",
    "ccedil",
    "egrave",
    "eacute",
    "ecirc",
    "euml",
    "igrave",
    "iacute",
    "icirc",
    "iuml",
    "eth",
    "ntilde",
    "ograve",
    "oacute",
    "ocirc",
    "otilde",
    "ouml",
    "divide",
    "oslash",
    "ugrave",
    "uacute",
    "ucirc",
    "uuml",
    "yacute",
    "thorn",
    "yuml",
    "fnof",
    "Alpha",
    "Beta",
    "Gamma",
    "Delta",
    "Epsilon",
    "Zeta",
    "Eta",
    "Theta",
    "Iota",
    "Kappa",
    "Lambda",
    "Mu",
    "Nu",
    "Xi",
    "Omicron",
    "Pi",
    "Rho",
    "Sigma",
    "Tau",
    "Upsilon",
    "Phi",
    "Chi",
    "Psi",
    "Omega",
    "alpha",
    "beta",
    "gamma",
    "delta",
    "epsilon",
    "zeta",
    "eta",
    "theta",
    "iota",
    "kappa",
    "lambda",
    "mu",
    "nu",
    "xi",
    "omicron",
    "pi",
    "rho",
    "sigmaf",
    "sigma",
    "tau",
    "upsilon",
    "phi",
    "chi",
    "psi",
    "omega",
    "thetasym",
    "upsih",
    "piv",
    "bull",
    "hellip",
    "prime",
    "Prime",
    "oline",
    "frasl",
    "weierp",
    "image",
    "real",
    "trade",
    "alefsym",
    "larr",
    "uarr",
    "rarr",
    "darr",
    "harr",
    "crarr",
    "lArr",
    "uArr",
    "rArr",
    "dArr",
    "hArr",
    "forall",
    "part",
    "exist",
    "empty",
    "nabla",
    "isin",
    "notin",
    "ni",
    "prod",
    "sum",
    "minus",
    "lowast",
    "radic",
    "prop",
    "infin",
    "ang",
    "and",
    "or",
    "cap",
    "cup",
    "there4",
    "sim",
    "cong",
    "asymp",
    "ne",
    "equiv",
    "le",
    "ge",
    "sub",
    "sup",
    "sube",
    "supe",
    "oplus",
    "otimes",
    "perp",
    "sdot",
    "lceil",
    "rceil",
    "lfloor",
    "rfloor",
    "lang",
    "rang",
    "loz",
    "spades",
    "clubs",
    "hearts",
    "diams",
    "OElig",
    "oelig",
    "Scaron",
    "scaron",
    "Yuml",
    "circ",
    "tilde",
    "ensp",
    "emsp",
    "thinsp",
    "zwnj",
    "zwj",
    "lrm",
    "rlm",
    "ndash",
    "mdash",
    "lsquo",
    "rsquo",
    "sbquo",
    "ldquo",
    "rdquo",
    "bdquo",
    "dagger",
    "Dagger",
    "permil",
    "lsaquo",
    "rsaquo",
    "euro",
    "escape",
    "str",
    "util",
    "StringEscape",
    "bom",
    "String",
    "FROM_CHARCODE",
    "unescape",
    "fromText",
    "replace",
    "chr",
    "map",
    "toText",
    "indexOf",
    "length",
    "defer",
    "Object",
    "invert"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/bom/String.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A Collection of utility functions to escape and unescape strings.\n */\nqx.Bootstrap.define(\"qx.bom.String\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** Mapping of HTML entity names to the corresponding char code */\n    TO_CHARCODE: {\n      quot: 34, // \" - double-quote\n      amp: 38, // &\n      lt: 60, // <\n      gt: 62, // >\n\n      // http://www.w3.org/TR/REC-html40/sgml/entities.html\n      // ISO 8859-1 characters\n      nbsp: 160, // no-break space\n      iexcl: 161, // inverted exclamation mark\n      cent: 162, // cent sign\n      pound: 163, // pound sterling sign\n      curren: 164, // general currency sign\n      yen: 165, // yen sign\n      brvbar: 166, // broken (vertical) bar\n      sect: 167, // section sign\n      uml: 168, // umlaut (dieresis)\n      copy: 169, // copyright sign\n      ordf: 170, // ordinal indicator, feminine\n      laquo: 171, // angle quotation mark, left\n      not: 172, // not sign\n      shy: 173, // soft hyphen\n      reg: 174, // registered sign\n      macr: 175, // macron\n      deg: 176, // degree sign\n      plusmn: 177, // plus-or-minus sign\n      sup2: 178, // superscript two\n      sup3: 179, // superscript three\n      acute: 180, // acute accent\n      micro: 181, // micro sign\n      para: 182, // pilcrow (paragraph sign)\n      middot: 183, // middle dot\n      cedil: 184, // cedilla\n      sup1: 185, // superscript one\n      ordm: 186, // ordinal indicator, masculine\n      raquo: 187, // angle quotation mark, right\n      frac14: 188, // fraction one-quarter\n      frac12: 189, // fraction one-half\n      frac34: 190, // fraction three-quarters\n      iquest: 191, // inverted question mark\n      Agrave: 192, // capital A, grave accent\n      Aacute: 193, // capital A, acute accent\n      Acirc: 194, // capital A, circumflex accent\n      Atilde: 195, // capital A, tilde\n      Auml: 196, // capital A, dieresis or umlaut mark\n      Aring: 197, // capital A, ring\n      AElig: 198, // capital AE diphthong (ligature)\n      Ccedil: 199, // capital C, cedilla\n      Egrave: 200, // capital E, grave accent\n      Eacute: 201, // capital E, acute accent\n      Ecirc: 202, // capital E, circumflex accent\n      Euml: 203, // capital E, dieresis or umlaut mark\n      Igrave: 204, // capital I, grave accent\n      Iacute: 205, // capital I, acute accent\n      Icirc: 206, // capital I, circumflex accent\n      Iuml: 207, // capital I, dieresis or umlaut mark\n      ETH: 208, // capital Eth, Icelandic\n      Ntilde: 209, // capital N, tilde\n      Ograve: 210, // capital O, grave accent\n      Oacute: 211, // capital O, acute accent\n      Ocirc: 212, // capital O, circumflex accent\n      Otilde: 213, // capital O, tilde\n      Ouml: 214, // capital O, dieresis or umlaut mark\n      times: 215, // multiply sign\n      Oslash: 216, // capital O, slash\n      Ugrave: 217, // capital U, grave accent\n      Uacute: 218, // capital U, acute accent\n      Ucirc: 219, // capital U, circumflex accent\n      Uuml: 220, // capital U, dieresis or umlaut mark\n      Yacute: 221, // capital Y, acute accent\n      THORN: 222, // capital THORN, Icelandic\n      szlig: 223, // small sharp s, German (sz ligature)\n      agrave: 224, // small a, grave accent\n      aacute: 225, // small a, acute accent\n      acirc: 226, // small a, circumflex accent\n      atilde: 227, // small a, tilde\n      auml: 228, // small a, dieresis or umlaut mark\n      aring: 229, // small a, ring\n      aelig: 230, // small ae diphthong (ligature)\n      ccedil: 231, // small c, cedilla\n      egrave: 232, // small e, grave accent\n      eacute: 233, // small e, acute accent\n      ecirc: 234, // small e, circumflex accent\n      euml: 235, // small e, dieresis or umlaut mark\n      igrave: 236, // small i, grave accent\n      iacute: 237, // small i, acute accent\n      icirc: 238, // small i, circumflex accent\n      iuml: 239, // small i, dieresis or umlaut mark\n      eth: 240, // small eth, Icelandic\n      ntilde: 241, // small n, tilde\n      ograve: 242, // small o, grave accent\n      oacute: 243, // small o, acute accent\n      ocirc: 244, // small o, circumflex accent\n      otilde: 245, // small o, tilde\n      ouml: 246, // small o, dieresis or umlaut mark\n      divide: 247, // divide sign\n      oslash: 248, // small o, slash\n      ugrave: 249, // small u, grave accent\n      uacute: 250, // small u, acute accent\n      ucirc: 251, // small u, circumflex accent\n      uuml: 252, // small u, dieresis or umlaut mark\n      yacute: 253, // small y, acute accent\n      thorn: 254, // small thorn, Icelandic\n      yuml: 255, // small y, dieresis or umlaut mark\n\n      // Latin Extended-B\n      fnof: 402, // latin small f with hook = function= florin, U+0192 ISOtech\n\n      // Greek\n      Alpha: 913, // greek capital letter alpha, U+0391\n      Beta: 914, // greek capital letter beta, U+0392\n      Gamma: 915, // greek capital letter gamma,U+0393 ISOgrk3\n      Delta: 916, // greek capital letter delta,U+0394 ISOgrk3\n      Epsilon: 917, // greek capital letter epsilon, U+0395\n      Zeta: 918, // greek capital letter zeta, U+0396\n      Eta: 919, // greek capital letter eta, U+0397\n      Theta: 920, // greek capital letter theta,U+0398 ISOgrk3\n      Iota: 921, // greek capital letter iota, U+0399\n      Kappa: 922, // greek capital letter kappa, U+039A\n      Lambda: 923, // greek capital letter lambda,U+039B ISOgrk3\n      Mu: 924, // greek capital letter mu, U+039C\n      Nu: 925, // greek capital letter nu, U+039D\n      Xi: 926, // greek capital letter xi, U+039E ISOgrk3\n      Omicron: 927, // greek capital letter omicron, U+039F\n      Pi: 928, // greek capital letter pi, U+03A0 ISOgrk3\n      Rho: 929, // greek capital letter rho, U+03A1\n\n      // there is no Sigmaf, and no U+03A2 character either\n      Sigma: 931, // greek capital letter sigma,U+03A3 ISOgrk3\n      Tau: 932, // greek capital letter tau, U+03A4\n      Upsilon: 933, // greek capital letter upsilon,U+03A5 ISOgrk3\n      Phi: 934, // greek capital letter phi,U+03A6 ISOgrk3\n      Chi: 935, // greek capital letter chi, U+03A7\n      Psi: 936, // greek capital letter psi,U+03A8 ISOgrk3\n      Omega: 937, // greek capital letter omega,U+03A9 ISOgrk3\n      alpha: 945, // greek small letter alpha,U+03B1 ISOgrk3\n      beta: 946, // greek small letter beta, U+03B2 ISOgrk3\n      gamma: 947, // greek small letter gamma,U+03B3 ISOgrk3\n      delta: 948, // greek small letter delta,U+03B4 ISOgrk3\n      epsilon: 949, // greek small letter epsilon,U+03B5 ISOgrk3\n      zeta: 950, // greek small letter zeta, U+03B6 ISOgrk3\n      eta: 951, // greek small letter eta, U+03B7 ISOgrk3\n      theta: 952, // greek small letter theta,U+03B8 ISOgrk3\n      iota: 953, // greek small letter iota, U+03B9 ISOgrk3\n      kappa: 954, // greek small letter kappa,U+03BA ISOgrk3\n      lambda: 955, // greek small letter lambda,U+03BB ISOgrk3\n      mu: 956, // greek small letter mu, U+03BC ISOgrk3\n      nu: 957, // greek small letter nu, U+03BD ISOgrk3\n      xi: 958, // greek small letter xi, U+03BE ISOgrk3\n      omicron: 959, // greek small letter omicron, U+03BF NEW\n      pi: 960, // greek small letter pi, U+03C0 ISOgrk3\n      rho: 961, // greek small letter rho, U+03C1 ISOgrk3\n      sigmaf: 962, // greek small letter final sigma,U+03C2 ISOgrk3\n      sigma: 963, // greek small letter sigma,U+03C3 ISOgrk3\n      tau: 964, // greek small letter tau, U+03C4 ISOgrk3\n      upsilon: 965, // greek small letter upsilon,U+03C5 ISOgrk3\n      phi: 966, // greek small letter phi, U+03C6 ISOgrk3\n      chi: 967, // greek small letter chi, U+03C7 ISOgrk3\n      psi: 968, // greek small letter psi, U+03C8 ISOgrk3\n      omega: 969, // greek small letter omega,U+03C9 ISOgrk3\n      thetasym: 977, // greek small letter theta symbol,U+03D1 NEW\n      upsih: 978, // greek upsilon with hook symbol,U+03D2 NEW\n      piv: 982, // greek pi symbol, U+03D6 ISOgrk3\n\n      // General Punctuation\n      bull: 8226, // bullet = black small circle,U+2022 ISOpub\n\n      // bullet is NOT the same as bullet operator, U+2219\n      hellip: 8230, // horizontal ellipsis = three dot leader,U+2026 ISOpub\n      prime: 8242, // prime = minutes = feet, U+2032 ISOtech\n      Prime: 8243, // double prime = seconds = inches,U+2033 ISOtech\n      oline: 8254, // overline = spacing overscore,U+203E NEW\n      frasl: 8260, // fraction slash, U+2044 NEW\n\n      // Letterlike Symbols\n      weierp: 8472, // script capital P = power set= Weierstrass p, U+2118 ISOamso\n      image: 8465, // blackletter capital I = imaginary part,U+2111 ISOamso\n      real: 8476, // blackletter capital R = real part symbol,U+211C ISOamso\n      trade: 8482, // trade mark sign, U+2122 ISOnum\n      alefsym: 8501, // alef symbol = first transfinite cardinal,U+2135 NEW\n\n      // alef symbol is NOT the same as hebrew letter alef,U+05D0 although the same glyph could be used to depict both characters\n      // Arrows\n      larr: 8592, // leftwards arrow, U+2190 ISOnum\n      uarr: 8593, // upwards arrow, U+2191 ISOnum-->\n      rarr: 8594, // rightwards arrow, U+2192 ISOnum\n      darr: 8595, // downwards arrow, U+2193 ISOnum\n      harr: 8596, // left right arrow, U+2194 ISOamsa\n      crarr: 8629, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW\n      lArr: 8656, // leftwards double arrow, U+21D0 ISOtech\n\n      // ISO 10646 does not say that lArr is the same as the 'is implied by' arrow but also does not have any other character for that function. So ? lArr can be used for 'is implied by' as ISOtech suggests\n      uArr: 8657, // upwards double arrow, U+21D1 ISOamsa\n      rArr: 8658, // rightwards double arrow,U+21D2 ISOtech\n\n      // ISO 10646 does not say this is the 'implies' character but does not have another character with this function so ?rArr can be used for 'implies' as ISOtech suggests\n      dArr: 8659, // downwards double arrow, U+21D3 ISOamsa\n      hArr: 8660, // left right double arrow,U+21D4 ISOamsa\n\n      // Mathematical Operators\n      forall: 8704, // for all, U+2200 ISOtech\n      part: 8706, // partial differential, U+2202 ISOtech\n      exist: 8707, // there exists, U+2203 ISOtech\n      empty: 8709, // empty set = null set = diameter,U+2205 ISOamso\n      nabla: 8711, // nabla = backward difference,U+2207 ISOtech\n      isin: 8712, // element of, U+2208 ISOtech\n      notin: 8713, // not an element of, U+2209 ISOtech\n      ni: 8715, // contains as member, U+220B ISOtech\n\n      // should there be a more memorable name than 'ni'?\n      prod: 8719, // n-ary product = product sign,U+220F ISOamsb\n\n      // prod is NOT the same character as U+03A0 'greek capital letter pi' though the same glyph might be used for both\n      sum: 8721, // n-ary summation, U+2211 ISOamsb\n\n      // sum is NOT the same character as U+03A3 'greek capital letter sigma' though the same glyph might be used for both\n      minus: 8722, // minus sign, U+2212 ISOtech\n      lowast: 8727, // asterisk operator, U+2217 ISOtech\n      radic: 8730, // square root = radical sign,U+221A ISOtech\n      prop: 8733, // proportional to, U+221D ISOtech\n      infin: 8734, // infinity, U+221E ISOtech\n      ang: 8736, // angle, U+2220 ISOamso\n      and: 8743, // logical and = wedge, U+2227 ISOtech\n      or: 8744, // logical or = vee, U+2228 ISOtech\n      cap: 8745, // intersection = cap, U+2229 ISOtech\n      cup: 8746, // union = cup, U+222A ISOtech\n      int: 8747, // integral, U+222B ISOtech\n      there4: 8756, // therefore, U+2234 ISOtech\n      sim: 8764, // tilde operator = varies with = similar to,U+223C ISOtech\n\n      // tilde operator is NOT the same character as the tilde, U+007E,although the same glyph might be used to represent both\n      cong: 8773, // approximately equal to, U+2245 ISOtech\n      asymp: 8776, // almost equal to = asymptotic to,U+2248 ISOamsr\n      ne: 8800, // not equal to, U+2260 ISOtech\n      equiv: 8801, // identical to, U+2261 ISOtech\n      le: 8804, // less-than or equal to, U+2264 ISOtech\n      ge: 8805, // greater-than or equal to,U+2265 ISOtech\n      sub: 8834, // subset of, U+2282 ISOtech\n      sup: 8835, // superset of, U+2283 ISOtech\n\n      // note that nsup, 'not a superset of, U+2283' is not covered by the Symbol font encoding and is not included. Should it be, for symmetry?It is in ISOamsn  --> <!ENTITY nsub\": 8836,  //not a subset of, U+2284 ISOamsn\n      sube: 8838, // subset of or equal to, U+2286 ISOtech\n      supe: 8839, // superset of or equal to,U+2287 ISOtech\n      oplus: 8853, // circled plus = direct sum,U+2295 ISOamsb\n      otimes: 8855, // circled times = vector product,U+2297 ISOamsb\n      perp: 8869, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech\n      sdot: 8901, // dot operator, U+22C5 ISOamsb\n\n      // dot operator is NOT the same character as U+00B7 middle dot\n      // Miscellaneous Technical\n      lceil: 8968, // left ceiling = apl upstile,U+2308 ISOamsc\n      rceil: 8969, // right ceiling, U+2309 ISOamsc\n      lfloor: 8970, // left floor = apl downstile,U+230A ISOamsc\n      rfloor: 8971, // right floor, U+230B ISOamsc\n      lang: 9001, // left-pointing angle bracket = bra,U+2329 ISOtech\n\n      // lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation mark'\n      rang: 9002, // right-pointing angle bracket = ket,U+232A ISOtech\n\n      // rang is NOT the same character as U+003E 'greater than' or U+203A 'single right-pointing angle quotation mark'\n      // Geometric Shapes\n      loz: 9674, // lozenge, U+25CA ISOpub\n\n      // Miscellaneous Symbols\n      spades: 9824, // black spade suit, U+2660 ISOpub\n\n      // black here seems to mean filled as opposed to hollow\n      clubs: 9827, // black club suit = shamrock,U+2663 ISOpub\n      hearts: 9829, // black heart suit = valentine,U+2665 ISOpub\n      diams: 9830, // black diamond suit, U+2666 ISOpub\n\n      // Latin Extended-A\n      OElig: 338, //  -- latin capital ligature OE,U+0152 ISOlat2\n      oelig: 339, //  -- latin small ligature oe, U+0153 ISOlat2\n\n      // ligature is a misnomer, this is a separate character in some languages\n      Scaron: 352, //  -- latin capital letter S with caron,U+0160 ISOlat2\n      scaron: 353, //  -- latin small letter s with caron,U+0161 ISOlat2\n      Yuml: 376, //  -- latin capital letter Y with diaeresis,U+0178 ISOlat2\n\n      // Spacing Modifier Letters\n      circ: 710, //  -- modifier letter circumflex accent,U+02C6 ISOpub\n      tilde: 732, // small tilde, U+02DC ISOdia\n\n      // General Punctuation\n      ensp: 8194, // en space, U+2002 ISOpub\n      emsp: 8195, // em space, U+2003 ISOpub\n      thinsp: 8201, // thin space, U+2009 ISOpub\n      zwnj: 8204, // zero width non-joiner,U+200C NEW RFC 2070\n      zwj: 8205, // zero width joiner, U+200D NEW RFC 2070\n      lrm: 8206, // left-to-right mark, U+200E NEW RFC 2070\n      rlm: 8207, // right-to-left mark, U+200F NEW RFC 2070\n      ndash: 8211, // en dash, U+2013 ISOpub\n      mdash: 8212, // em dash, U+2014 ISOpub\n      lsquo: 8216, // left single quotation mark,U+2018 ISOnum\n      rsquo: 8217, // right single quotation mark,U+2019 ISOnum\n      sbquo: 8218, // single low-9 quotation mark, U+201A NEW\n      ldquo: 8220, // left double quotation mark,U+201C ISOnum\n      rdquo: 8221, // right double quotation mark,U+201D ISOnum\n      bdquo: 8222, // double low-9 quotation mark, U+201E NEW\n      dagger: 8224, // dagger, U+2020 ISOpub\n      Dagger: 8225, // double dagger, U+2021 ISOpub\n      permil: 8240, // per mille sign, U+2030 ISOtech\n      lsaquo: 8249, // single left-pointing angle quotation mark,U+2039 ISO proposed\n      // lsaquo is proposed but not yet ISO standardized\n      rsaquo: 8250, // single right-pointing angle quotation mark,U+203A ISO proposed\n      // rsaquo is proposed but not yet ISO standardized\n      euro: 8364 //  -- euro sign, U+20AC NEW\n    },\n\n    /**\n     * Escapes the characters in a <code>String</code> using HTML entities.\n     *\n     * For example: <tt>\"bread\" & \"butter\"</tt> => <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.\n     * Supports all known HTML 4.0 entities, including funky accents.\n     *\n     * * <a href=\"http://www.w3.org/TR/REC-html32#latin1\">HTML 3.2 Character Entities for ISO Latin-1</a>\n     * * <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html\">HTML 4.0 Character entity references</a>\n     * * <a href=\"http://www.w3.org/TR/html401/charset.html#h-5.3\">HTML 4.01 Character References</a>\n     * * <a href=\"http://www.w3.org/TR/html401/charset.html#code-position\">HTML 4.01 Code positions</a>\n     *\n     * @param str {String} the String to escape\n     * @return {String} a new escaped String\n     * @see #unescape\n     */\n    escape(str) {\n      return qx.util.StringEscape.escape(str, qx.bom.String.FROM_CHARCODE);\n    },\n\n    /**\n     * Unescapes a string containing entity escapes to a string\n     * containing the actual Unicode characters corresponding to the\n     * escapes. Supports HTML 4.0 entities.\n     *\n     * For example, the string \"&amp;lt;Fran&amp;ccedil;ais&amp;gt;\"\n     * will become \"&lt;Fran&ccedil;ais&gt;\"\n     *\n     * If an entity is unrecognized, it is left alone, and inserted\n     * verbatim into the result string. e.g. \"&amp;gt;&amp;zzzz;x\" will\n     * become \"&gt;&amp;zzzz;x\".\n     *\n     * @param str {String} the String to unescape, may be null\n     * @return {var} a new unescaped String\n     * @see #escape\n     */\n    unescape(str) {\n      return qx.util.StringEscape.unescape(str, qx.bom.String.TO_CHARCODE);\n    },\n\n    /**\n     * Converts a plain text string into HTML.\n     * This is similar to {@link #escape} but converts new lines to\n     * <tt>&lt:br&gt:</tt> and preserves whitespaces.\n     *\n     * @param str {String} the String to convert\n     * @return {String} a new converted String\n     * @see #escape\n     */\n    fromText(str) {\n      return qx.bom.String.escape(str).replace(/(  |\\n)/g, function (chr) {\n        var map = {\n          \"  \": \" &nbsp;\",\n          \"\\n\": \"<br>\"\n        };\n\n        return map[chr] || chr;\n      });\n    },\n\n    /**\n     * Converts HTML to plain text.\n     *\n     * * Strips all HTML tags\n     * * converts <tt>&lt:br&gt:</tt> to new line\n     * * unescapes HTML entities\n     *\n     * @param str {String} HTML string to converts\n     * @return {String} plain text representation of the HTML string\n     */\n    toText(str) {\n      return qx.bom.String.unescape(\n        str.replace(\n          /\\s+|<([^>])+>/gi,\n          function (\n            chr\n          ) //return qx.bom.String.unescape(str.replace(/<\\/?[^>]+(>|$)/gi, function(chr)\n          {\n            if (chr.indexOf(\"<br\") === 0) {\n              return \"\\n\";\n            } else if (\n              chr.length > 0 &&\n              chr.replace(/^\\s*/, \"\").replace(/\\s*$/, \"\") == \"\"\n            ) {\n              return \" \";\n            } else {\n              return \"\";\n            }\n          }\n        )\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    /** Mapping of char codes to HTML entity names */\n    statics.FROM_CHARCODE = qx.lang.Object.invert(statics.TO_CHARCODE);\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}