{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "__libs",
    "$$libraries",
    "members",
    "has",
    "namespace",
    "util",
    "LibraryManager",
    "get",
    "key",
    "set",
    "value"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/LibraryManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Author:\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Provides read/write access to library-specific information such as\r\n * source/resource URIs.\r\n */\r\nqx.Class.define(\"qx.util.LibraryManager\", {\r\n  extend: qx.core.Object,\r\n\r\n  type: \"singleton\",\r\n\r\n  statics: {\r\n    /** @type {Map} The libraries used by this application */\r\n    __libs: qx.$$libraries || {}\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Checks whether the library with the given namespace is known to the\r\n     * application.\r\n     * @param namespace {String} The library's namespace\r\n     * @return {Boolean} <code>true</code> if the given library is known\r\n     */\r\n    has(namespace) {\r\n      return !!this.self(arguments).__libs[namespace];\r\n    },\r\n\r\n    /**\r\n     * Returns the value of an attribute of the given library\r\n     * @param namespace {String} The library's namespace\r\n     * @param key {String} Name of the attribute\r\n     * @return {var|null} The attribute's value or <code>null</code> if it's not defined\r\n     */\r\n    get(namespace, key) {\r\n      return this.self(arguments).__libs[namespace][key]\r\n        ? this.self(arguments).__libs[namespace][key]\r\n        : null;\r\n    },\r\n\r\n    /**\r\n     * Sets an attribute on the given library.\r\n     *\r\n     * @param namespace {String} The library's namespace\r\n     * @param key {String} Name of the attribute\r\n     * @param value {var} Value of the attribute\r\n     */\r\n    set(namespace, key, value) {\r\n      this.self(arguments).__libs[namespace][key] = value;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wBAAwB,EAAE;IACxCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtBC,IAAI,EAAE,WAAW;IAEjBC,OAAO,EAAE;MACP;MACAC,SAAM,EAAEX,EAAE,CAACY,WAAW,IAAI,CAAC;IAC7B,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACC,SAAS,EAAE;QACb,OAAO,CAAC,CAACf,EAAA,CAAAgB,IAAA,CAAAC,cAAA,CAAqBN,SAAM,CAACI,SAAS,CAAC;MACjD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIG,GAAG,WAAAA,IAACH,SAAS,EAAEI,GAAG,EAAE;QAClB,OAAOnB,EAAA,CAAAgB,IAAA,CAAAC,cAAA,CAAqBN,SAAM,CAACI,SAAS,CAAC,CAACI,GAAG,CAAC,GAC9CnB,EAAA,CAAAgB,IAAA,CAAAC,cAAA,CAAqBN,SAAM,CAACI,SAAS,CAAC,CAACI,GAAG,CAAC,GAC3C,IAAI;MACV,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACL,SAAS,EAAEI,GAAG,EAAEE,KAAK,EAAE;QACzBrB,EAAA,CAAAgB,IAAA,CAAAC,cAAA,CAAqBN,SAAM,CAACI,SAAS,CAAC,CAACI,GAAG,CAAC,GAAGE,KAAK;MACrD;IACF;EACF,CAAC,CAAC;EAlEFrB,EAAE,CAACgB,IAAI,CAACC,cAAc,CAACd,aAAa,GAAGA,aAAa;AAAC"
}