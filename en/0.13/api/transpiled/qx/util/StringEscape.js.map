{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "escape",
    "str",
    "charCodeToEntities",
    "entity",
    "result",
    "i",
    "l",
    "length",
    "chr",
    "charAt",
    "code",
    "codePointAt",
    "String",
    "fromCodePoint",
    "unescape",
    "entitiesToCharCode",
    "replace",
    "substring",
    "fromCharCode",
    "toUpperCase",
    "match",
    "parseInt",
    "util",
    "StringEscape"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/StringEscape.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Generic escaping and unescaping of DOM strings.\r\n *\r\n * {@link qx.bom.String} for (un)escaping of HTML strings.\r\n * {@link qx.xml.String} for (un)escaping of XML strings.\r\n */\r\nqx.Bootstrap.define(\"qx.util.StringEscape\", {\r\n  statics: {\r\n    /**\r\n     * generic escaping method\r\n     *\r\n     * @param str {String} string to escape\r\n     * @param charCodeToEntities {Map} entity to charcode map\r\n     * @return {String} escaped string\r\n     */\r\n    escape(str, charCodeToEntities) {\r\n      var entity,\r\n        result = \"\";\r\n\r\n      for (var i = 0, l = str.length; i < l; i++) {\r\n        var chr = str.charAt(i);\r\n        var code = str.codePointAt(i);\r\n\r\n        i += String.fromCodePoint(code).length - 1;\r\n\r\n        if (charCodeToEntities[code]) {\r\n          entity = \"&\" + charCodeToEntities[code] + \";\";\r\n        } else {\r\n          if (code > 0x7f) {\r\n            entity = \"&#\" + code + \";\";\r\n          } else {\r\n            entity = chr;\r\n          }\r\n        }\r\n\r\n        result += entity;\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * generic unescaping method\r\n     *\r\n     * @param str {String} string to unescape\r\n     * @param entitiesToCharCode {Map} charcode to entity map\r\n     * @return {String} unescaped string\r\n     */\r\n    unescape(str, entitiesToCharCode) {\r\n      return str.replace(/&[#\\w]+;/gi, function (entity) {\r\n        var chr = entity;\r\n        var entity = entity.substring(1, entity.length - 1);\r\n        var code = entitiesToCharCode[entity];\r\n\r\n        if (code) {\r\n          chr = String.fromCharCode(code);\r\n        } else {\r\n          if (entity.charAt(0) == \"#\") {\r\n            if (entity.charAt(1).toUpperCase() == \"X\") {\r\n              code = entity.substring(2);\r\n\r\n              // match hex number\r\n              if (code.match(/^[0-9A-Fa-f]+$/gi)) {\r\n                chr = String.fromCodePoint(parseInt(code, 16));\r\n              }\r\n            } else {\r\n              code = entity.substring(1);\r\n\r\n              // match integer\r\n              if (code.match(/^\\d+$/gi)) {\r\n                chr = String.fromCodePoint(parseInt(code, 10));\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return chr;\r\n      });\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,sBAAsB,EAAE;IAC1CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,GAAG,EAAEC,kBAAkB,EAAE;QAC9B,IAAIC,MAAM;UACRC,MAAM,GAAG,EAAE;QAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,GAAG,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;UAC1C,IAAIG,GAAG,GAAGP,GAAG,CAACQ,MAAM,CAACJ,CAAC,CAAC;UACvB,IAAIK,IAAI,GAAGT,GAAG,CAACU,WAAW,CAACN,CAAC,CAAC;UAE7BA,CAAC,IAAIO,MAAM,CAACC,aAAa,CAACH,IAAI,CAAC,CAACH,MAAM,GAAG,CAAC;UAE1C,IAAIL,kBAAkB,CAACQ,IAAI,CAAC,EAAE;YAC5BP,MAAM,GAAG,GAAG,GAAGD,kBAAkB,CAACQ,IAAI,CAAC,GAAG,GAAG;UAC/C,CAAC,MAAM;YACL,IAAIA,IAAI,GAAG,IAAI,EAAE;cACfP,MAAM,GAAG,IAAI,GAAGO,IAAI,GAAG,GAAG;YAC5B,CAAC,MAAM;cACLP,MAAM,GAAGK,GAAG;YACd;UACF;UAEAJ,MAAM,IAAID,MAAM;QAClB;QAEA,OAAOC,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIU,QAAQ,WAAAA,SAACb,GAAG,EAAEc,kBAAkB,EAAE;QAChC,OAAOd,GAAG,CAACe,OAAO,CAAC,YAAY,EAAE,UAAUb,MAAM,EAAE;UACjD,IAAIK,GAAG,GAAGL,MAAM;UAChB,IAAIA,MAAM,GAAGA,MAAM,CAACc,SAAS,CAAC,CAAC,EAAEd,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;UACnD,IAAIG,IAAI,GAAGK,kBAAkB,CAACZ,MAAM,CAAC;UAErC,IAAIO,IAAI,EAAE;YACRF,GAAG,GAAGI,MAAM,CAACM,YAAY,CAACR,IAAI,CAAC;UACjC,CAAC,MAAM;YACL,IAAIP,MAAM,CAACM,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;cAC3B,IAAIN,MAAM,CAACM,MAAM,CAAC,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC,IAAI,GAAG,EAAE;gBACzCT,IAAI,GAAGP,MAAM,CAACc,SAAS,CAAC,CAAC,CAAC;;gBAE1B;gBACA,IAAIP,IAAI,CAACU,KAAK,CAAC,kBAAkB,CAAC,EAAE;kBAClCZ,GAAG,GAAGI,MAAM,CAACC,aAAa,CAACQ,QAAQ,CAACX,IAAI,EAAE,EAAE,CAAC,CAAC;gBAChD;cACF,CAAC,MAAM;gBACLA,IAAI,GAAGP,MAAM,CAACc,SAAS,CAAC,CAAC,CAAC;;gBAE1B;gBACA,IAAIP,IAAI,CAACU,KAAK,CAAC,SAAS,CAAC,EAAE;kBACzBZ,GAAG,GAAGI,MAAM,CAACC,aAAa,CAACQ,QAAQ,CAACX,IAAI,EAAE,EAAE,CAAC,CAAC;gBAChD;cACF;YACF;UACF;UAEA,OAAOF,GAAG;QACZ,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;EAlGFd,EAAE,CAAC4B,IAAI,CAACC,YAAY,CAAC1B,aAAa,GAAGA,aAAa;AAAC"
}