{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_moveToEdgeAndAlign",
    "util",
    "placement",
    "AbstractAxis",
    "_isInRange",
    "computeStart",
    "size",
    "target",
    "offsets",
    "areaSize",
    "position",
    "start",
    "range1End",
    "range2Start",
    "end",
    "Math",
    "max",
    "KeepAlignAxis"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/placement/KeepAlignAxis.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Places the object to the target. If parts of the object are outside of the\r\n * range this class places the object at the best \"edge\", \"alignment\"\r\n * combination so that the overlap between object and range is maximized.\r\n */\r\nqx.Bootstrap.define(\"qx.util.placement.KeepAlignAxis\", {\r\n  statics: {\r\n    /**\r\n     * Computes the start of the object by taking only the attachment and\r\n     * alignment into account. The object by be not fully visible.\r\n     *\r\n     * @param size {Integer} Size of the object to align\r\n     * @param target {Map} Location of the object to align the object to. This map\r\n     *   should have the keys <code>start</code> and <code>end</code>.\r\n     * @param offsets {Map} Map with all offsets on each side.\r\n     *   Comes with the keys <code>start</code> and <code>end</code>.\r\n     * @param position {String} Accepts the same values as the <code> position</code>\r\n     *   argument of {@link #computeStart}.\r\n     * @return {Integer} The computed start position of the object.\r\n     */\r\n    _moveToEdgeAndAlign: qx.util.placement.AbstractAxis._moveToEdgeAndAlign,\r\n\r\n    /**\r\n     * Whether the object specified by <code>start</code> and <code>size</code>\r\n     * is completely inside of the axis' range..\r\n     *\r\n     * @param start {Integer} Computed start position of the object\r\n     * @param size {Integer} Size of the object\r\n     * @param areaSize {Integer} The size of the axis\r\n     * @return {Boolean} Whether the object is inside of the axis' range\r\n     */\r\n    _isInRange: qx.util.placement.AbstractAxis._isInRange,\r\n\r\n    /**\r\n     * Computes the start of the object on the axis\r\n     *\r\n     * @param size {Integer} Size of the object to align\r\n     * @param target {Map} Location of the object to align the object to. This map\r\n     *   should have the keys <code>start</code> and <code>end</code>.\r\n     * @param offsets {Map} Map with all offsets on each side.\r\n     *   Comes with the keys <code>start</code> and <code>end</code>.\r\n     * @param areaSize {Integer} Size of the axis.\r\n     * @param position {String} Alignment of the object on the target. Valid values are\r\n     *   <ul>\r\n     *   <li><code>edge-start</code> The object is placed before the target</li>\r\n     *   <li><code>edge-end</code> The object is placed after the target</li>\r\n     *   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\r\n     *   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\r\n     *   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\r\n     *   </ul>\r\n     * @return {Integer} The computed start position of the object.\r\n     */\r\n    computeStart(size, target, offsets, areaSize, position) {\r\n      var start = this._moveToEdgeAndAlign(size, target, offsets, position);\r\n      var range1End, range2Start;\r\n\r\n      if (this._isInRange(start, size, areaSize)) {\r\n        return start;\r\n      }\r\n\r\n      if (position == \"edge-start\" || position == \"edge-end\") {\r\n        range1End = target.start - offsets.end;\r\n        range2Start = target.end + offsets.start;\r\n      } else {\r\n        range1End = target.end - offsets.end;\r\n        range2Start = target.start + offsets.start;\r\n      }\r\n\r\n      if (range1End > areaSize - range2Start) {\r\n        start = Math.max(0, range1End - size);\r\n      } else {\r\n        start = range2Start;\r\n      }\r\n\r\n      return start;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,iCAAiC,EAAE;IACrDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,mBAAmB,EAAEN,EAAE,CAACO,IAAI,CAACC,SAAS,CAACC,YAAY,CAACH,mBAAmB;MAEvE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,UAAU,EAAEV,EAAE,CAACO,IAAI,CAACC,SAAS,CAACC,YAAY,CAACC,UAAU;MAErD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;QACtD,IAAIC,KAAK,GAAG,IAAI,CAACX,mBAAmB,CAACM,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEE,QAAQ,CAAC;QACrE,IAAIE,SAAS,EAAEC,WAAW;QAE1B,IAAI,IAAI,CAACT,UAAU,CAACO,KAAK,EAAEL,IAAI,EAAEG,QAAQ,CAAC,EAAE;UAC1C,OAAOE,KAAK;QACd;QAEA,IAAID,QAAQ,IAAI,YAAY,IAAIA,QAAQ,IAAI,UAAU,EAAE;UACtDE,SAAS,GAAGL,MAAM,CAACI,KAAK,GAAGH,OAAO,CAACM,GAAG;UACtCD,WAAW,GAAGN,MAAM,CAACO,GAAG,GAAGN,OAAO,CAACG,KAAK;QAC1C,CAAC,MAAM;UACLC,SAAS,GAAGL,MAAM,CAACO,GAAG,GAAGN,OAAO,CAACM,GAAG;UACpCD,WAAW,GAAGN,MAAM,CAACI,KAAK,GAAGH,OAAO,CAACG,KAAK;QAC5C;QAEA,IAAIC,SAAS,GAAGH,QAAQ,GAAGI,WAAW,EAAE;UACtCF,KAAK,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,SAAS,GAAGN,IAAI,CAAC;QACvC,CAAC,MAAM;UACLK,KAAK,GAAGE,WAAW;QACrB;QAEA,OAAOF,KAAK;MACd;IACF;EACF,CAAC,CAAC;EAhGFjB,EAAE,CAACO,IAAI,CAACC,SAAS,CAACe,aAAa,CAACpB,aAAa,GAAGA,aAAa;AAAC"
}