{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_moveToEdgeAndAlign",
    "util",
    "placement",
    "AbstractAxis",
    "computeStart",
    "size",
    "target",
    "offsets",
    "areaSize",
    "position",
    "DirectAxis"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/placement/DirectAxis.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Places the object directly at the specified position. It is not moved if\r\n * parts of the object are outside of the axis' range.\r\n */\r\nqx.Bootstrap.define(\"qx.util.placement.DirectAxis\", {\r\n  statics: {\r\n    /**\r\n     * Computes the start of the object by taking only the attachment and\r\n     * alignment into account. The object by be not fully visible.\r\n     *\r\n     * @param size {Integer} Size of the object to align\r\n     * @param target {Map} Location of the object to align the object to. This map\r\n     *   should have the keys <code>start</code> and <code>end</code>.\r\n     * @param offsets {Map} Map with all offsets on each side.\r\n     *   Comes with the keys <code>start</code> and <code>end</code>.\r\n     * @param position {String} Accepts the same values as the <code> position</code>\r\n     *   argument of {@link #computeStart}.\r\n     * @return {Integer} The computed start position of the object.\r\n     */\r\n    _moveToEdgeAndAlign: qx.util.placement.AbstractAxis._moveToEdgeAndAlign,\r\n\r\n    /**\r\n     * Computes the start of the object on the axis\r\n     *\r\n     * @param size {Integer} Size of the object to align\r\n     * @param target {Map} Location of the object to align the object to. This map\r\n     *   should have the keys <code>start</code> and <code>end</code>.\r\n     * @param offsets {Map} Map with all offsets on each side.\r\n     *   Comes with the keys <code>start</code> and <code>end</code>.\r\n     * @param areaSize {Integer} Size of the axis.\r\n     * @param position {String} Alignment of the object on the target. Valid values are\r\n     *   <ul>\r\n     *   <li><code>edge-start</code> The object is placed before the target</li>\r\n     *   <li><code>edge-end</code> The object is placed after the target</li>\r\n     *   <li><code>align-start</code>The start of the object is aligned with the start of the target</li>\r\n     *   <li><code>align-center</code>The center of the object is aligned with the center of the target</li>\r\n     *   <li><code>align-end</code>The end of the object is aligned with the end of the object</li>\r\n     *   </ul>\r\n     * @return {Integer} The computed start position of the object.\r\n     */\r\n    computeStart(size, target, offsets, areaSize, position) {\r\n      return this._moveToEdgeAndAlign(size, target, offsets, position);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,8BAA8B,EAAE;IAClDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,mBAAmB,EAAEN,EAAE,CAACO,IAAI,CAACC,SAAS,CAACC,YAAY,CAACH,mBAAmB;MAEvE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,YAAY,WAAAA,aAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;QACtD,OAAO,IAAI,CAACT,mBAAmB,CAACK,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEE,QAAQ,CAAC;MAClE;IACF;EACF,CAAC,CAAC;EA/DFf,EAAE,CAACO,IAAI,CAACC,SAAS,CAACQ,UAAU,CAACb,aAAa,GAAGA,aAAa;AAAC"
}