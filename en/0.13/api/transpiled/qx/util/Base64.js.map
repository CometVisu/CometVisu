{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__base64Chars",
    "encode",
    "input",
    "is8bit",
    "isMultiByte",
    "charSet",
    "document",
    "characterSet",
    "charset",
    "toLowerCase",
    "indexOf",
    "window",
    "btoa",
    "Function",
    "padding",
    "base64Chars",
    "length",
    "output",
    "result",
    "i",
    "translateUTF8",
    "__translateUTF8",
    "charCodeAt",
    "k",
    "l",
    "push",
    "join",
    "characterCode",
    "__getUTF8StringFromBytes",
    "bytes",
    "charString",
    "utfByte",
    "nextByte",
    "nextBytes",
    "String",
    "fromCharCode",
    "decode",
    "atob",
    "ilength",
    "stringBytes",
    "base64Byte1",
    "charAt",
    "base64Byte2",
    "c1",
    "specialChar",
    "base64Byte3",
    "c2",
    "base64Byte4",
    "c3",
    "util",
    "Base64"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/Base64.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * Base64 encoder\n */\nqx.Class.define(\"qx.util.Base64\", {\n  statics: {\n    /** Characters allowed in a Base 64 encoded string */\n    __base64Chars: [\n      \"A\",\n      \"B\",\n      \"C\",\n      \"D\",\n      \"E\",\n      \"F\",\n      \"G\",\n      \"H\",\n      \"I\",\n      \"J\",\n      \"K\",\n      \"L\",\n      \"M\",\n      \"N\",\n      \"O\",\n      \"P\",\n      \"Q\",\n      \"R\",\n      \"S\",\n      \"T\",\n      \"U\",\n      \"V\",\n      \"W\",\n      \"X\",\n      \"Y\",\n      \"Z\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"+\",\n      \"/\"\n    ],\n\n    /**\n     * Encode a string using base64 encoding (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to encode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The base64 encoded input string.\n     */\n    encode(input, is8bit) {\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\") {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf(\"utf\") != -1;\n\n        if (!isMultiByte && window.btoa instanceof Function) {\n          return btoa(input);\n        }\n      } else {\n        isMultiByte = !is8bit;\n      }\n\n      var padding = \"=\";\n      var base64Chars = this.__base64Chars;\n      var length = input.length;\n      var output = [];\n      var result = [];\n      var i = 0;\n\n      var translateUTF8 = this.__translateUTF8;\n\n      while (i < length) {\n        translateUTF8(input.charCodeAt(i++), output, !isMultiByte);\n      }\n\n      for (var k = 0, l = output.length; k < l; k += 3) {\n        if (k + 1 === l) {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4]);\n          result.push(padding + padding);\n          break;\n        }\n\n        if (k + 2 === l) {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(\n            base64Chars[((output[k] & 3) << 4) | (output[k + 1] >> 4)]\n          );\n\n          result.push(base64Chars[(output[k + 1] & 15) << 2]);\n          result.push(padding);\n          break;\n        }\n\n        result.push(base64Chars[output[k] >> 2]);\n        result.push(base64Chars[((output[k] & 3) << 4) | (output[k + 1] >> 4)]);\n        result.push(\n          base64Chars[((output[k + 1] & 15) << 2) | (output[k + 2] >> 6)]\n        );\n\n        result.push(base64Chars[output[k + 2] & 63]);\n      }\n\n      return result.join(\"\");\n    },\n\n    /**\n     * Adds to output array the UTF-8 bytes needed to represent the character (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param characterCode {Integer} the code of the character\n     * @param output {Array} the array of bytes to be filled\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     */\n    __translateUTF8(characterCode, output, is8bit) {\n      if (characterCode < 128) {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 256 && is8bit) {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 2048) {\n        output.push(192 | (characterCode >> 6));\n        output.push(128 | (characterCode & 63));\n        return;\n      }\n\n      if (characterCode < 65536) {\n        output.push(224 | (characterCode >> 12));\n        output.push(128 | ((characterCode >> 6) & 63));\n        output.push(128 | (characterCode & 63));\n        return;\n      } else {\n        output.push(240 | (characterCode >> 18));\n        output.push(128 | ((characterCode >> 12) & 63));\n        output.push(128 | ((characterCode >> 6) & 63));\n        output.push(128 | (characterCode & 63));\n        return;\n      }\n    },\n\n    /**\n     * Returns a String from an array of bytes, with special treatment\n     * if the bytes are UTF-8 bytes (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param bytes {Array} the byte array [8it integers]\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     * @return {String} the string backed by the byte array\n     */\n    __getUTF8StringFromBytes(bytes, is8bit) {\n      var charString = \"\";\n      var result = [];\n\n      if (is8bit) {\n        result = bytes;\n      } else {\n        for (var i = 0; i < bytes.length; i++) {\n          var utfByte = bytes[i];\n\n          if (utfByte >> 7 === 0) {\n            result.push(utfByte);\n          }\n\n          if (utfByte >> 5 === 6) {\n            var nextByte = bytes[++i];\n            result.push(\n              (((utfByte & 28) >> 2) << 8) |\n                ((utfByte & 3) << 6) |\n                (nextByte & 63)\n            );\n          }\n\n          if (utfByte >> 4 === 14) {\n            var nextBytes = [bytes[++i], bytes[++i]];\n            result.push(\n              ((utfByte & 15) << 12) |\n                (((nextBytes[0] & 60) >> 2) << 8) |\n                ((nextBytes[0] & 3) << 6) |\n                (nextBytes[1] & 63)\n            );\n          }\n\n          if (utfByte >> 3 === 30) {\n            var nextBytes = [bytes[++i], bytes[++i], bytes[++i]];\n            result.push(\n              ((utfByte & 7) << 18) |\n                ((utfByte & 48) << 16) |\n                ((nextBytes[0] & 15) << 12) |\n                (((nextBytes[1] & 60) >> 2) << 8) |\n                ((nextBytes[1] & 3) << 6) |\n                (nextBytes[2] & 63)\n            );\n          }\n        }\n      }\n\n      for (var i = 0, l = result.length; i < l; i++) {\n        charString += String.fromCharCode(result[i]);\n      }\n\n      return charString;\n    },\n\n    /**\n     * Decode a base64 string (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to decode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The decoded input string.\n     */\n    decode(input, is8bit) {\n      var base64Chars = this.__base64Chars;\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\") {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf(\"utf\") != -1;\n\n        if (!isMultiByte && window.atob instanceof Function) {\n          return atob(input);\n        }\n      } else {\n        isMultiByte = !is8bit;\n      }\n\n      var ilength = input.length;\n      var stringBytes = [],\n        i = 0;\n\n      while (i < ilength) {\n        var base64Byte1 = base64Chars.indexOf(input.charAt(i++));\n        var base64Byte2 = base64Chars.indexOf(input.charAt(i++));\n        var c1 = (base64Byte1 << 2) | (base64Byte2 >> 4);\n        stringBytes.push(c1);\n        var specialChar = input.charAt(i++);\n\n        if (specialChar !== \"=\") {\n          var base64Byte3 = base64Chars.indexOf(specialChar);\n          var c2 = ((base64Byte2 & 15) << 4) | ((base64Byte3 & 60) >> 2);\n          stringBytes.push(c2);\n        }\n\n        specialChar = input.charAt(i++);\n\n        if (specialChar !== \"=\") {\n          var base64Byte4 = base64Chars.indexOf(specialChar);\n          var c3 = ((base64Byte3 & 3) << 6) | base64Byte4;\n          stringBytes.push(c3);\n        }\n      }\n\n      return this.__getUTF8StringFromBytes(stringBytes, !isMultiByte);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}