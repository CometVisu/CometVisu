{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__base64Chars",
    "encode",
    "input",
    "is8bit",
    "isMultiByte",
    "charSet",
    "document",
    "characterSet",
    "charset",
    "toLowerCase",
    "indexOf",
    "window",
    "btoa",
    "Function",
    "padding",
    "base64Chars",
    "length",
    "output",
    "result",
    "i",
    "translateUTF8",
    "__translateUTF8",
    "charCodeAt",
    "k",
    "l",
    "push",
    "join",
    "__P_499_1",
    "characterCode",
    "__getUTF8StringFromBytes",
    "__P_499_2",
    "bytes",
    "charString",
    "utfByte",
    "nextByte",
    "nextBytes",
    "String",
    "fromCharCode",
    "decode",
    "atob",
    "ilength",
    "stringBytes",
    "base64Byte1",
    "charAt",
    "base64Byte2",
    "c1",
    "specialChar",
    "base64Byte3",
    "c2",
    "base64Byte4",
    "c3",
    "util",
    "Base64"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/Base64.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * Base64 encoder\n */\nqx.Class.define(\"qx.util.Base64\", {\n  statics: {\n    /** Characters allowed in a Base 64 encoded string */\n    __base64Chars: [\n      \"A\",\n      \"B\",\n      \"C\",\n      \"D\",\n      \"E\",\n      \"F\",\n      \"G\",\n      \"H\",\n      \"I\",\n      \"J\",\n      \"K\",\n      \"L\",\n      \"M\",\n      \"N\",\n      \"O\",\n      \"P\",\n      \"Q\",\n      \"R\",\n      \"S\",\n      \"T\",\n      \"U\",\n      \"V\",\n      \"W\",\n      \"X\",\n      \"Y\",\n      \"Z\",\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"+\",\n      \"/\"\n    ],\n\n    /**\n     * Encode a string using base64 encoding (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to encode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The base64 encoded input string.\n     */\n    encode(input, is8bit) {\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\") {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf(\"utf\") != -1;\n\n        if (!isMultiByte && window.btoa instanceof Function) {\n          return btoa(input);\n        }\n      } else {\n        isMultiByte = !is8bit;\n      }\n\n      var padding = \"=\";\n      var base64Chars = this.__base64Chars;\n      var length = input.length;\n      var output = [];\n      var result = [];\n      var i = 0;\n\n      var translateUTF8 = this.__translateUTF8;\n\n      while (i < length) {\n        translateUTF8(input.charCodeAt(i++), output, !isMultiByte);\n      }\n\n      for (var k = 0, l = output.length; k < l; k += 3) {\n        if (k + 1 === l) {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(base64Chars[(output[k] & 3) << 4]);\n          result.push(padding + padding);\n          break;\n        }\n\n        if (k + 2 === l) {\n          result.push(base64Chars[output[k] >> 2]);\n          result.push(\n            base64Chars[((output[k] & 3) << 4) | (output[k + 1] >> 4)]\n          );\n\n          result.push(base64Chars[(output[k + 1] & 15) << 2]);\n          result.push(padding);\n          break;\n        }\n\n        result.push(base64Chars[output[k] >> 2]);\n        result.push(base64Chars[((output[k] & 3) << 4) | (output[k + 1] >> 4)]);\n        result.push(\n          base64Chars[((output[k + 1] & 15) << 2) | (output[k + 2] >> 6)]\n        );\n\n        result.push(base64Chars[output[k + 2] & 63]);\n      }\n\n      return result.join(\"\");\n    },\n\n    /**\n     * Adds to output array the UTF-8 bytes needed to represent the character (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param characterCode {Integer} the code of the character\n     * @param output {Array} the array of bytes to be filled\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     */\n    __translateUTF8(characterCode, output, is8bit) {\n      if (characterCode < 128) {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 256 && is8bit) {\n        output.push(characterCode);\n        return;\n      }\n\n      if (characterCode < 2048) {\n        output.push(192 | (characterCode >> 6));\n        output.push(128 | (characterCode & 63));\n        return;\n      }\n\n      if (characterCode < 65536) {\n        output.push(224 | (characterCode >> 12));\n        output.push(128 | ((characterCode >> 6) & 63));\n        output.push(128 | (characterCode & 63));\n        return;\n      } else {\n        output.push(240 | (characterCode >> 18));\n        output.push(128 | ((characterCode >> 12) & 63));\n        output.push(128 | ((characterCode >> 6) & 63));\n        output.push(128 | (characterCode & 63));\n        return;\n      }\n    },\n\n    /**\n     * Returns a String from an array of bytes, with special treatment\n     * if the bytes are UTF-8 bytes (http://en.wikipedia.org/wiki/UTF8)\n     *\n     * @param bytes {Array} the byte array [8it integers]\n     * @param is8bit {Boolean} specifies whether we should not treat the array as a multi byte string\n     * @return {String} the string backed by the byte array\n     */\n    __getUTF8StringFromBytes(bytes, is8bit) {\n      var charString = \"\";\n      var result = [];\n\n      if (is8bit) {\n        result = bytes;\n      } else {\n        for (var i = 0; i < bytes.length; i++) {\n          var utfByte = bytes[i];\n\n          if (utfByte >> 7 === 0) {\n            result.push(utfByte);\n          }\n\n          if (utfByte >> 5 === 6) {\n            var nextByte = bytes[++i];\n            result.push(\n              (((utfByte & 28) >> 2) << 8) |\n                ((utfByte & 3) << 6) |\n                (nextByte & 63)\n            );\n          }\n\n          if (utfByte >> 4 === 14) {\n            var nextBytes = [bytes[++i], bytes[++i]];\n            result.push(\n              ((utfByte & 15) << 12) |\n                (((nextBytes[0] & 60) >> 2) << 8) |\n                ((nextBytes[0] & 3) << 6) |\n                (nextBytes[1] & 63)\n            );\n          }\n\n          if (utfByte >> 3 === 30) {\n            var nextBytes = [bytes[++i], bytes[++i], bytes[++i]];\n            result.push(\n              ((utfByte & 7) << 18) |\n                ((utfByte & 48) << 16) |\n                ((nextBytes[0] & 15) << 12) |\n                (((nextBytes[1] & 60) >> 2) << 8) |\n                ((nextBytes[1] & 3) << 6) |\n                (nextBytes[2] & 63)\n            );\n          }\n        }\n      }\n\n      for (var i = 0, l = result.length; i < l; i++) {\n        charString += String.fromCharCode(result[i]);\n      }\n\n      return charString;\n    },\n\n    /**\n     * Decode a base64 string (http://en.wikipedia.org/wiki/Base64).\n     *\n     * @param input {String} the input string to decode\n     *\n     * @param is8bit {Boolean?} Whether the character set is 8-bit, not\n     *   multi-byte.  If this parameter is not provided, the character set is\n     *   determined from the 'document' object.\n     *\n     * @return {String} The decoded input string.\n     */\n    decode(input, is8bit) {\n      var base64Chars = this.__base64Chars;\n      var isMultiByte;\n\n      if (typeof is8bit == \"undefined\") {\n        var charSet = document.characterSet || document.charset;\n        isMultiByte = charSet.toLowerCase().indexOf(\"utf\") != -1;\n\n        if (!isMultiByte && window.atob instanceof Function) {\n          return atob(input);\n        }\n      } else {\n        isMultiByte = !is8bit;\n      }\n\n      var ilength = input.length;\n      var stringBytes = [],\n        i = 0;\n\n      while (i < ilength) {\n        var base64Byte1 = base64Chars.indexOf(input.charAt(i++));\n        var base64Byte2 = base64Chars.indexOf(input.charAt(i++));\n        var c1 = (base64Byte1 << 2) | (base64Byte2 >> 4);\n        stringBytes.push(c1);\n        var specialChar = input.charAt(i++);\n\n        if (specialChar !== \"=\") {\n          var base64Byte3 = base64Chars.indexOf(specialChar);\n          var c2 = ((base64Byte2 & 15) << 4) | ((base64Byte3 & 60) >> 2);\n          stringBytes.push(c2);\n        }\n\n        specialChar = input.charAt(i++);\n\n        if (specialChar !== \"=\") {\n          var base64Byte4 = base64Chars.indexOf(specialChar);\n          var c3 = ((base64Byte3 & 3) << 6) | base64Byte4;\n          stringBytes.push(c3);\n        }\n      }\n\n      return this.__getUTF8StringFromBytes(stringBytes, !isMultiByte);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,gBAAgB,EAAE;IAChCC,OAAO,EAAE;MACP;MACAC,SAAa,EAAE,CACb,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,KAAK,EAAEC,MAAM,EAAE;QACpB,IAAIC,WAAW;QAEf,IAAI,OAAOD,MAAM,IAAI,WAAW,EAAE;UAChC,IAAIE,OAAO,GAAGC,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,OAAO;UACvDJ,WAAW,GAAGC,OAAO,CAACI,WAAW,EAAE,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;UAExD,IAAI,CAACN,WAAW,IAAIO,MAAM,CAACC,IAAI,YAAYC,QAAQ,EAAE;YACnD,OAAOD,IAAI,CAACV,KAAK,CAAC;UACpB;QACF,CAAC,MAAM;UACLE,WAAW,GAAG,CAACD,MAAM;QACvB;QAEA,IAAIW,OAAO,GAAG,GAAG;QACjB,IAAIC,WAAW,GAAG,IAAI,CAACf,SAAa;QACpC,IAAIgB,MAAM,GAAGd,KAAK,CAACc,MAAM;QACzB,IAAIC,MAAM,GAAG,EAAE;QACf,IAAIC,MAAM,GAAG,EAAE;QACf,IAAIC,CAAC,GAAG,CAAC;QAET,IAAIC,aAAa,GAAG,IAAI,CAACC,SAAe;QAExC,OAAOF,CAAC,GAAGH,MAAM,EAAE;UACjBI,aAAa,CAAClB,KAAK,CAACoB,UAAU,CAACH,CAAC,EAAE,CAAC,EAAEF,MAAM,EAAE,CAACb,WAAW,CAAC;QAC5D;QAEA,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGP,MAAM,CAACD,MAAM,EAAEO,CAAC,GAAGC,CAAC,EAAED,CAAC,IAAI,CAAC,EAAE;UAChD,IAAIA,CAAC,GAAG,CAAC,KAAKC,CAAC,EAAE;YACfN,MAAM,CAACO,IAAI,CAACV,WAAW,CAACE,MAAM,CAACM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACxCL,MAAM,CAACO,IAAI,CAACV,WAAW,CAAC,CAACE,MAAM,CAACM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9CL,MAAM,CAACO,IAAI,CAACX,OAAO,GAAGA,OAAO,CAAC;YAC9B;UACF;UAEA,IAAIS,CAAC,GAAG,CAAC,KAAKC,CAAC,EAAE;YACfN,MAAM,CAACO,IAAI,CAACV,WAAW,CAACE,MAAM,CAACM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACxCL,MAAM,CAACO,IAAI,CACTV,WAAW,CAAE,CAACE,MAAM,CAACM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAKN,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAC3D;YAEDL,MAAM,CAACO,IAAI,CAACV,WAAW,CAAC,CAACE,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACnDL,MAAM,CAACO,IAAI,CAACX,OAAO,CAAC;YACpB;UACF;UAEAI,MAAM,CAACO,IAAI,CAACV,WAAW,CAACE,MAAM,CAACM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;UACxCL,MAAM,CAACO,IAAI,CAACV,WAAW,CAAE,CAACE,MAAM,CAACM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAKN,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC;UACvEL,MAAM,CAACO,IAAI,CACTV,WAAW,CAAE,CAACE,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAKN,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAChE;UAEDL,MAAM,CAACO,IAAI,CAACV,WAAW,CAACE,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9C;QAEA,OAAOL,MAAM,CAACQ,IAAI,CAAC,EAAE,CAAC;MACxB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIL,SAAe,WAAAM,UAACC,aAAa,EAAEX,MAAM,EAAEd,MAAM,EAAE;QAC7C,IAAIyB,aAAa,GAAG,GAAG,EAAE;UACvBX,MAAM,CAACQ,IAAI,CAACG,aAAa,CAAC;UAC1B;QACF;QAEA,IAAIA,aAAa,GAAG,GAAG,IAAIzB,MAAM,EAAE;UACjCc,MAAM,CAACQ,IAAI,CAACG,aAAa,CAAC;UAC1B;QACF;QAEA,IAAIA,aAAa,GAAG,IAAI,EAAE;UACxBX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,IAAI,CAAE,CAAC;UACvCX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,GAAG,EAAG,CAAC;UACvC;QACF;QAEA,IAAIA,aAAa,GAAG,KAAK,EAAE;UACzBX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,IAAI,EAAG,CAAC;UACxCX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAKG,aAAa,IAAI,CAAC,GAAI,EAAG,CAAC;UAC9CX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,GAAG,EAAG,CAAC;UACvC;QACF,CAAC,MAAM;UACLX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,IAAI,EAAG,CAAC;UACxCX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAKG,aAAa,IAAI,EAAE,GAAI,EAAG,CAAC;UAC/CX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAKG,aAAa,IAAI,CAAC,GAAI,EAAG,CAAC;UAC9CX,MAAM,CAACQ,IAAI,CAAC,GAAG,GAAIG,aAAa,GAAG,EAAG,CAAC;UACvC;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAwB,WAAAC,UAACC,KAAK,EAAE5B,MAAM,EAAE;QACtC,IAAI6B,UAAU,GAAG,EAAE;QACnB,IAAId,MAAM,GAAG,EAAE;QAEf,IAAIf,MAAM,EAAE;UACVe,MAAM,GAAGa,KAAK;QAChB,CAAC,MAAM;UACL,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,KAAK,CAACf,MAAM,EAAEG,CAAC,EAAE,EAAE;YACrC,IAAIc,OAAO,GAAGF,KAAK,CAACZ,CAAC,CAAC;YAEtB,IAAIc,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;cACtBf,MAAM,CAACO,IAAI,CAACQ,OAAO,CAAC;YACtB;YAEA,IAAIA,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;cACtB,IAAIC,QAAQ,GAAGH,KAAK,CAAC,EAAEZ,CAAC,CAAC;cACzBD,MAAM,CAACO,IAAI,CACP,CAACQ,OAAO,GAAG,EAAE,KAAK,CAAC,IAAK,CAAC,GACxB,CAACA,OAAO,GAAG,CAAC,KAAK,CAAE,GACnBC,QAAQ,GAAG,EAAG,CAClB;YACH;YAEA,IAAID,OAAO,IAAI,CAAC,KAAK,EAAE,EAAE;cACvB,IAAIE,SAAS,GAAG,CAACJ,KAAK,CAAC,EAAEZ,CAAC,CAAC,EAAEY,KAAK,CAAC,EAAEZ,CAAC,CAAC,CAAC;cACxCD,MAAM,CAACO,IAAI,CACR,CAACQ,OAAO,GAAG,EAAE,KAAK,EAAE,GACjB,CAACE,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAK,CAAE,GAChC,CAACA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAE,GACxBA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAG,CACtB;YACH;YAEA,IAAIF,OAAO,IAAI,CAAC,KAAK,EAAE,EAAE;cACvB,IAAIE,SAAS,GAAG,CAACJ,KAAK,CAAC,EAAEZ,CAAC,CAAC,EAAEY,KAAK,CAAC,EAAEZ,CAAC,CAAC,EAAEY,KAAK,CAAC,EAAEZ,CAAC,CAAC,CAAC;cACpDD,MAAM,CAACO,IAAI,CACR,CAACQ,OAAO,GAAG,CAAC,KAAK,EAAE,GACjB,CAACA,OAAO,GAAG,EAAE,KAAK,EAAG,GACrB,CAACE,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAG,GACzB,CAACA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAK,CAAE,GAChC,CAACA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAE,GACxBA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAG,CACtB;YACH;UACF;QACF;QAEA,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEK,CAAC,GAAGN,MAAM,CAACF,MAAM,EAAEG,CAAC,GAAGK,CAAC,EAAEL,CAAC,EAAE,EAAE;UAC7Ca,UAAU,IAAII,MAAM,CAACC,YAAY,CAACnB,MAAM,CAACC,CAAC,CAAC,CAAC;QAC9C;QAEA,OAAOa,UAAU;MACnB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIM,MAAM,WAAAA,OAACpC,KAAK,EAAEC,MAAM,EAAE;QACpB,IAAIY,WAAW,GAAG,IAAI,CAACf,SAAa;QACpC,IAAII,WAAW;QAEf,IAAI,OAAOD,MAAM,IAAI,WAAW,EAAE;UAChC,IAAIE,OAAO,GAAGC,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,OAAO;UACvDJ,WAAW,GAAGC,OAAO,CAACI,WAAW,EAAE,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;UAExD,IAAI,CAACN,WAAW,IAAIO,MAAM,CAAC4B,IAAI,YAAY1B,QAAQ,EAAE;YACnD,OAAO0B,IAAI,CAACrC,KAAK,CAAC;UACpB;QACF,CAAC,MAAM;UACLE,WAAW,GAAG,CAACD,MAAM;QACvB;QAEA,IAAIqC,OAAO,GAAGtC,KAAK,CAACc,MAAM;QAC1B,IAAIyB,WAAW,GAAG,EAAE;UAClBtB,CAAC,GAAG,CAAC;QAEP,OAAOA,CAAC,GAAGqB,OAAO,EAAE;UAClB,IAAIE,WAAW,GAAG3B,WAAW,CAACL,OAAO,CAACR,KAAK,CAACyC,MAAM,CAACxB,CAAC,EAAE,CAAC,CAAC;UACxD,IAAIyB,WAAW,GAAG7B,WAAW,CAACL,OAAO,CAACR,KAAK,CAACyC,MAAM,CAACxB,CAAC,EAAE,CAAC,CAAC;UACxD,IAAI0B,EAAE,GAAIH,WAAW,IAAI,CAAC,GAAKE,WAAW,IAAI,CAAE;UAChDH,WAAW,CAAChB,IAAI,CAACoB,EAAE,CAAC;UACpB,IAAIC,WAAW,GAAG5C,KAAK,CAACyC,MAAM,CAACxB,CAAC,EAAE,CAAC;UAEnC,IAAI2B,WAAW,KAAK,GAAG,EAAE;YACvB,IAAIC,WAAW,GAAGhC,WAAW,CAACL,OAAO,CAACoC,WAAW,CAAC;YAClD,IAAIE,EAAE,GAAI,CAACJ,WAAW,GAAG,EAAE,KAAK,CAAC,GAAK,CAACG,WAAW,GAAG,EAAE,KAAK,CAAE;YAC9DN,WAAW,CAAChB,IAAI,CAACuB,EAAE,CAAC;UACtB;UAEAF,WAAW,GAAG5C,KAAK,CAACyC,MAAM,CAACxB,CAAC,EAAE,CAAC;UAE/B,IAAI2B,WAAW,KAAK,GAAG,EAAE;YACvB,IAAIG,WAAW,GAAGlC,WAAW,CAACL,OAAO,CAACoC,WAAW,CAAC;YAClD,IAAII,EAAE,GAAI,CAACH,WAAW,GAAG,CAAC,KAAK,CAAC,GAAIE,WAAW;YAC/CR,WAAW,CAAChB,IAAI,CAACyB,EAAE,CAAC;UACtB;QACF;QAEA,OAAO,IAAI,CAACrB,SAAwB,CAACY,WAAW,EAAE,CAACrC,WAAW,CAAC;MACjE;IACF;EACF,CAAC,CAAC;EA5TFX,EAAE,CAAC0D,IAAI,CAACC,MAAM,CAACxD,aAAa,GAAGA,aAAa;AAAC"
}