{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "scriptArr",
    "constructor",
    "call",
    "__started",
    "__QUEUE",
    "lang",
    "Type",
    "isString",
    "Array",
    "clone",
    "events",
    "loaded",
    "failed",
    "ready",
    "statics",
    "__IN_PROGRESS",
    "__LOADED",
    "members",
    "start",
    "Environment",
    "select",
    "_true",
    "Promise",
    "resolve",
    "reject",
    "addListenerOnce",
    "e",
    "Error",
    "getData",
    "isDisposed",
    "__loadScripts",
    "_false",
    "__P_504_4",
    "_this",
    "DynamicScriptLoader",
    "util",
    "script",
    "dynLoader",
    "id1",
    "id2",
    "uri",
    "loader",
    "shift",
    "fireEvent",
    "fireDataEvent",
    "status",
    "addListener",
    "data",
    "removeListenerById",
    "ResourceManager",
    "getInstance",
    "toUri",
    "bom",
    "request",
    "Script",
    "on",
    "onError",
    "open",
    "send",
    "destruct",
    "key",
    "undefined"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/DynamicScriptLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2016 Visionet GmbH, http://www.visionet.de\n     2016 OETIKER+PARTNER AG, https://www.oetiker.ch\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Dietrich Streifert (level420)\n     * Tobias Oetiker (oetiker)\n\n************************************************************************ */\n\n/**\n * Dynamically load non qx scripts. This class is aware of all scripts that have\n * been loaded using its instances, so if two instances load jquery, it will only\n * be loaded once, and the second instance will wait for the jquery to be loaded\n * before continuing to load additional scripts.\n *\n * Usage example:\n *\n * <pre>\n *  ... assets ...\n * /**\n *  * @asset(myapp/jquery/*)\n *  * @asset(myapp/highcharts/*)\n *  *\n *  * @ignore(jQuery.*)\n *  * @ignore(Highcharts.*)\n *  ...\n *\n *\n *    // in debug mode load the uncompressed unobfuscated scripts\n *    var src = '';\n *    var min = '.min';\n *    if (qx.core.Environment.get(\"qx.debug\")) {\n *      src = '.src';\n *      min = '';\n *    }\n *\n *    // initialize the script loading\n *    var dynLoader = new qx.util.DynamicScriptLoader([\n *        \"myapp/jquery/jquery\"+min+\".js\",\n *        \"myapp/highcharts/highcharts\"+src+\".js\",\n *        \"myapp/highcharts/highcharts-more\"+src+\".js\",\n *        \"myapp/highcharts/highcharts-modifications.js\"\n *    ]);\n *\n *\n *    dynLoader.addListenerOnce('ready',function(e){\n *      console.log(\"all scripts have been loaded!\");\n *    });\n *\n *    dynLoader.addListener('failed',function(e){\n *      var data = e.getData();\n *      console.log(\"failed to load \"+data.script);\n *    });\n *\n *    dynLoader.start();\n *\n * </pre>\n */\nqx.Class.define(\"qx.util.DynamicScriptLoader\", {\n  extend: qx.core.Object,\n\n  /**\n   * Create a loader for the given scripts.\n   *\n   * @param scriptArr {Array|String} the uri name(s) of the script(s) to load\n   */\n\n  construct(scriptArr) {\n    super();\n    this.__started = false;\n    this.__QUEUE = qx.lang.Type.isString(scriptArr)\n      ? [scriptArr]\n      : qx.lang.Array.clone(scriptArr);\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * fired when a script is loaded successfully. The data contains 'script' and 'status' keys.\n     */\n    loaded: \"qx.event.type.Data\",\n\n    /**\n     * fired when a specific script fails loading.  The data contains 'script' and 'status' keys.\n     */\n    failed: \"qx.event.type.Data\",\n\n    /**\n     * fired when all given scripts are loaded, each time loadScriptsDynamic is called.\n     */\n    ready: \"qx.event.type.Event\"\n  },\n\n  statics: {\n    /**\n     * Map of scripts being added at the present time. Key is script name; value is instance of this class which\n     * is loading it.\n     */\n    __IN_PROGRESS: {},\n    /**\n     * Map of scripts that have fully loaded. Key is script name; value is true\n     */\n    __LOADED: {}\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Array of the scripts to be loaded\n     */\n    __QUEUE: null,\n\n    /**\n     * True if start has been called.\n     */\n    __started: null,\n\n    /**\n     * Start loading scripts. This may only be called once!\n     * @return {Promise?} a promise which will be resolved after load of all scripts if promise support is enabled; nothing (undefined) if promises are not enabled.\n     */\n    start: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        return new qx.Promise(function (resolve, reject) {\n          this.addListenerOnce(\"ready\", resolve, this);\n          this.addListenerOnce(\"failed\", e => {\n            reject(new Error(e.getData()));\n          });\n\n          if (this.isDisposed()) {\n            reject(new Error(\"disposed\"));\n          }\n          if (this.__started) {\n            reject(new Error(\"you can only call start once per instance\"));\n          }\n          this.__started = true;\n          this.__loadScripts();\n        }, this);\n      },\n      false() {\n        if (this.isDisposed()) {\n          return;\n        }\n        if (this.__started) {\n          throw new Error(\"you can only call start once per instance\");\n        }\n        this.__started = true;\n        this.__loadScripts();\n      }\n    }),\n\n    /**\n     * Chain loading scripts.\n     *\n     * Recursively called until the array of scripts is consumed\n     *\n     */\n    __loadScripts() {\n      var DynamicScriptLoader = qx.util.DynamicScriptLoader;\n      var script;\n      var dynLoader;\n      var id1, id2;\n      var uri;\n      var loader;\n\n      script = this.__QUEUE.shift();\n      if (!script) {\n        this.fireEvent(\"ready\");\n        return;\n      }\n\n      if (DynamicScriptLoader.__LOADED[script]) {\n        this.fireDataEvent(\"loaded\", {\n          script: script,\n          status: \"preloaded\"\n        });\n\n        this.__loadScripts();\n        return;\n      }\n\n      dynLoader = DynamicScriptLoader.__IN_PROGRESS[script];\n      if (dynLoader) {\n        id1 = dynLoader.addListener(\"loaded\", e => {\n          if (this.isDisposed()) {\n            return;\n          }\n          var data = e.getData();\n          if (data.script === script) {\n            dynLoader.removeListenerById(id2);\n            dynLoader.removeListenerById(id1);\n            this.fireDataEvent(\"loaded\", data);\n            this.__loadScripts();\n          }\n        });\n\n        id2 = dynLoader.addListener(\"failed\", e => {\n          if (this.isDisposed()) {\n            return;\n          }\n          var data = e.getData();\n          dynLoader.removeListenerById(id1);\n          dynLoader.removeListenerById(id2);\n          this.fireDataEvent(\"failed\", {\n            script: script,\n            status:\n              \"loading of \" +\n              data.script +\n              \" failed while waiting for \" +\n              script\n          });\n        });\n\n        return;\n      }\n\n      uri = qx.util.ResourceManager.getInstance().toUri(script);\n\n      loader = new qx.bom.request.Script();\n\n      loader.on(\n        \"load\",\n        function (request) {\n          if (this.isDisposed()) {\n            return;\n          }\n          DynamicScriptLoader.__LOADED[script] = true;\n          delete DynamicScriptLoader.__IN_PROGRESS[script];\n          this.fireDataEvent(\"loaded\", {\n            script: script,\n            status: request.status\n          });\n\n          this.__loadScripts();\n        },\n        this\n      );\n\n      var onError = function (request) {\n        if (this.isDisposed()) {\n          return;\n        }\n        delete DynamicScriptLoader.__IN_PROGRESS[script];\n        this.fireDataEvent(\"failed\", {\n          script: script,\n          status: request.status\n        });\n      };\n\n      loader.on(\"error\", onError, this);\n      loader.on(\"timeout\", onError, this);\n\n      // this.debug(\"Loading \" + script + \" started\");\n      loader.open(\"GET\", uri);\n      DynamicScriptLoader.__IN_PROGRESS[script] = this;\n      loader.send();\n    }\n  },\n\n  destruct() {\n    var DynamicScriptLoader = qx.util.DynamicScriptLoader;\n    for (var key in DynamicScriptLoader.__IN_PROGRESS) {\n      if (DynamicScriptLoader.__IN_PROGRESS[key] === this) {\n        delete DynamicScriptLoader.__IN_PROGRESS[key];\n      }\n    }\n    this.__QUEUE = undefined;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;IAEEC,SAAS,WAAAA,UAACC,SAAS,EAAE;MACnBV,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAG,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,SAAO,GAAGd,EAAE,CAACe,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACP,SAAS,CAAC,GAC3C,CAACA,SAAS,CAAC,GACXV,EAAE,CAACe,IAAI,CAACG,KAAK,CAACC,KAAK,CAACT,SAAS,CAAC;IACpC,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEU,MAAM,EAAE;MACN;AACJ;AACA;MACIC,MAAM,EAAE,oBAAoB;MAE5B;AACJ;AACA;MACIC,MAAM,EAAE,oBAAoB;MAE5B;AACJ;AACA;MACIC,KAAK,EAAE;IACT,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;MACIC,SAAa,EAAE,CAAC,CAAC;MACjB;AACJ;AACA;MACIC,SAAQ,EAAE,CAAC;IACb,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;MACIb,SAAO,EAAE,IAAI;MAEb;AACJ;AACA;MACID,SAAS,EAAE,IAAI;MAEf;AACJ;AACA;AACA;MACIe,KAAK,EAAE5B,EAAE,CAACO,IAAI,CAACsB,WAAW,CAACC,MAAM,CAAC,YAAY,EAAE;QAAA,iBAAAC,MAAA,EACvC;UACL,OAAO,IAAI/B,EAAE,CAACgC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;YAC/C,IAAI,CAACC,eAAe,CAAC,OAAO,EAAEF,OAAO,EAAE,IAAI,CAAC;YAC5C,IAAI,CAACE,eAAe,CAAC,QAAQ,EAAE,UAAAC,CAAC,EAAI;cAClCF,MAAM,CAAC,IAAIG,KAAK,CAACD,CAAC,CAACE,OAAO,EAAE,CAAC,CAAC;YAChC,CAAC,CAAC;YAEF,IAAI,IAAI,CAACC,UAAU,EAAE,EAAE;cACrBL,MAAM,CAAC,IAAIG,KAAK,CAAC,UAAU,CAAC,CAAC;YAC/B;YACA,IAAI,IAAI,CAACxB,SAAS,EAAE;cAClBqB,MAAM,CAAC,IAAIG,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAChE;YACA,IAAI,CAACxB,SAAS,GAAG,IAAI;YACrB,IAAI,CAAC2B,SAAa,EAAE;UACtB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;QAAA,kBAAAC,OAAA,EACO;UACN,IAAI,IAAI,CAACF,UAAU,EAAE,EAAE;YACrB;UACF;UACA,IAAI,IAAI,CAAC1B,SAAS,EAAE;YAClB,MAAM,IAAIwB,KAAK,CAAC,2CAA2C,CAAC;UAC9D;UACA,IAAI,CAACxB,SAAS,GAAG,IAAI;UACrB,IAAI,CAAC2B,SAAa,EAAE;QACtB;MACF,CAAC,CAAC;MAEF;AACJ;AACA;AACA;AACA;AACA;MACIA,SAAa,WAAAE,UAAA,EAAG;QAAA,IAAAC,KAAA;QACd,IAAIC,mBAAmB,GAAG5C,EAAE,CAAC6C,IAAI,CAACD,mBAAmB;QACrD,IAAIE,MAAM;QACV,IAAIC,SAAS;QACb,IAAIC,GAAG,EAAEC,GAAG;QACZ,IAAIC,GAAG;QACP,IAAIC,MAAM;QAEVL,MAAM,GAAG,IAAI,CAAChC,SAAO,CAACsC,KAAK,EAAE;QAC7B,IAAI,CAACN,MAAM,EAAE;UACX,IAAI,CAACO,SAAS,CAAC,OAAO,CAAC;UACvB;QACF;QAEA,IAAIT,mBAAmB,CAAClB,SAAQ,CAACoB,MAAM,CAAC,EAAE;UACxC,IAAI,CAACQ,aAAa,CAAC,QAAQ,EAAE;YAC3BR,MAAM,EAAEA,MAAM;YACdS,MAAM,EAAE;UACV,CAAC,CAAC;UAEF,IAAI,CAACf,SAAa,EAAE;UACpB;QACF;QAEAO,SAAS,GAAGH,mBAAmB,CAACnB,SAAa,CAACqB,MAAM,CAAC;QACrD,IAAIC,SAAS,EAAE;UACbC,GAAG,GAAGD,SAAS,CAACS,WAAW,CAAC,QAAQ,EAAE,UAAApB,CAAC,EAAI;YACzC,IAAIO,KAAI,CAACJ,UAAU,EAAE,EAAE;cACrB;YACF;YACA,IAAIkB,IAAI,GAAGrB,CAAC,CAACE,OAAO,EAAE;YACtB,IAAImB,IAAI,CAACX,MAAM,KAAKA,MAAM,EAAE;cAC1BC,SAAS,CAACW,kBAAkB,CAACT,GAAG,CAAC;cACjCF,SAAS,CAACW,kBAAkB,CAACV,GAAG,CAAC;cACjCL,KAAI,CAACW,aAAa,CAAC,QAAQ,EAAEG,IAAI,CAAC;cAClCd,KAAI,CAACH,SAAa,EAAE;YACtB;UACF,CAAC,CAAC;UAEFS,GAAG,GAAGF,SAAS,CAACS,WAAW,CAAC,QAAQ,EAAE,UAAApB,CAAC,EAAI;YACzC,IAAIO,KAAI,CAACJ,UAAU,EAAE,EAAE;cACrB;YACF;YACA,IAAIkB,IAAI,GAAGrB,CAAC,CAACE,OAAO,EAAE;YACtBS,SAAS,CAACW,kBAAkB,CAACV,GAAG,CAAC;YACjCD,SAAS,CAACW,kBAAkB,CAACT,GAAG,CAAC;YACjCN,KAAI,CAACW,aAAa,CAAC,QAAQ,EAAE;cAC3BR,MAAM,EAAEA,MAAM;cACdS,MAAM,EACJ,aAAa,GACbE,IAAI,CAACX,MAAM,GACX,4BAA4B,GAC5BA;YACJ,CAAC,CAAC;UACJ,CAAC,CAAC;UAEF;QACF;QAEAI,GAAG,GAAGlD,EAAE,CAAC6C,IAAI,CAACc,eAAe,CAACC,WAAW,EAAE,CAACC,KAAK,CAACf,MAAM,CAAC;QAEzDK,MAAM,GAAG,IAAInD,EAAE,CAAC8D,GAAG,CAACC,OAAO,CAACC,MAAM,EAAE;QAEpCb,MAAM,CAACc,EAAE,CACP,MAAM,EACN,UAAUF,OAAO,EAAE;UACjB,IAAI,IAAI,CAACxB,UAAU,EAAE,EAAE;YACrB;UACF;UACAK,mBAAmB,CAAClB,SAAQ,CAACoB,MAAM,CAAC,GAAG,IAAI;UAC3C,OAAOF,mBAAmB,CAACnB,SAAa,CAACqB,MAAM,CAAC;UAChD,IAAI,CAACQ,aAAa,CAAC,QAAQ,EAAE;YAC3BR,MAAM,EAAEA,MAAM;YACdS,MAAM,EAAEQ,OAAO,CAACR;UAClB,CAAC,CAAC;UAEF,IAAI,CAACf,SAAa,EAAE;QACtB,CAAC,EACD,IAAI,CACL;QAED,IAAI0B,OAAO,GAAG,SAAVA,OAAOA,CAAaH,OAAO,EAAE;UAC/B,IAAI,IAAI,CAACxB,UAAU,EAAE,EAAE;YACrB;UACF;UACA,OAAOK,mBAAmB,CAACnB,SAAa,CAACqB,MAAM,CAAC;UAChD,IAAI,CAACQ,aAAa,CAAC,QAAQ,EAAE;YAC3BR,MAAM,EAAEA,MAAM;YACdS,MAAM,EAAEQ,OAAO,CAACR;UAClB,CAAC,CAAC;QACJ,CAAC;QAEDJ,MAAM,CAACc,EAAE,CAAC,OAAO,EAAEC,OAAO,EAAE,IAAI,CAAC;QACjCf,MAAM,CAACc,EAAE,CAAC,SAAS,EAAEC,OAAO,EAAE,IAAI,CAAC;;QAEnC;QACAf,MAAM,CAACgB,IAAI,CAAC,KAAK,EAAEjB,GAAG,CAAC;QACvBN,mBAAmB,CAACnB,SAAa,CAACqB,MAAM,CAAC,GAAG,IAAI;QAChDK,MAAM,CAACiB,IAAI,EAAE;MACf;IACF,CAAC;IAEDC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAIzB,mBAAmB,GAAG5C,EAAE,CAAC6C,IAAI,CAACD,mBAAmB;MACrD,KAAK,IAAI0B,GAAG,IAAI1B,mBAAmB,CAACnB,SAAa,EAAE;QACjD,IAAImB,mBAAmB,CAACnB,SAAa,CAAC6C,GAAG,CAAC,KAAK,IAAI,EAAE;UACnD,OAAO1B,mBAAmB,CAACnB,SAAa,CAAC6C,GAAG,CAAC;QAC/C;MACF;MACA,IAAI,CAACxD,SAAO,GAAGyD,SAAS;IAC1B;EACF,CAAC,CAAC;EAjSFvE,EAAE,CAAC6C,IAAI,CAACD,mBAAmB,CAACzC,aAAa,GAAGA,aAAa;AAAC"
}