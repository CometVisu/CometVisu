{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "scriptArr",
    "constructor",
    "call",
    "__started",
    "__QUEUE",
    "lang",
    "Type",
    "isString",
    "Array",
    "clone",
    "events",
    "loaded",
    "failed",
    "ready",
    "statics",
    "__IN_PROGRESS",
    "__LOADED",
    "members",
    "start",
    "Environment",
    "select",
    "_true",
    "Promise",
    "resolve",
    "reject",
    "addListenerOnce",
    "e",
    "Error",
    "getData",
    "isDisposed",
    "__loadScripts",
    "_false",
    "__P_504_4",
    "_this",
    "DynamicScriptLoader",
    "util",
    "script",
    "dynLoader",
    "id1",
    "id2",
    "uri",
    "loader",
    "shift",
    "fireEvent",
    "fireDataEvent",
    "status",
    "addListener",
    "data",
    "removeListenerById",
    "ResourceManager",
    "getInstance",
    "toUri",
    "bom",
    "request",
    "Script",
    "on",
    "onError",
    "open",
    "send",
    "destruct",
    "key",
    "undefined"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/DynamicScriptLoader.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2016 Visionet GmbH, http://www.visionet.de\r\n     2016 OETIKER+PARTNER AG, https://www.oetiker.ch\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Dietrich Streifert (level420)\r\n     * Tobias Oetiker (oetiker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Dynamically load non qx scripts. This class is aware of all scripts that have\r\n * been loaded using its instances, so if two instances load jquery, it will only\r\n * be loaded once, and the second instance will wait for the jquery to be loaded\r\n * before continuing to load additional scripts.\r\n *\r\n * Usage example:\r\n *\r\n * <pre>\r\n *  ... assets ...\r\n * /**\r\n *  * @asset(myapp/jquery/*)\r\n *  * @asset(myapp/highcharts/*)\r\n *  *\r\n *  * @ignore(jQuery.*)\r\n *  * @ignore(Highcharts.*)\r\n *  ...\r\n *\r\n *\r\n *    // in debug mode load the uncompressed unobfuscated scripts\r\n *    var src = '';\r\n *    var min = '.min';\r\n *    if (qx.core.Environment.get(\"qx.debug\")) {\r\n *      src = '.src';\r\n *      min = '';\r\n *    }\r\n *\r\n *    // initialize the script loading\r\n *    var dynLoader = new qx.util.DynamicScriptLoader([\r\n *        \"myapp/jquery/jquery\"+min+\".js\",\r\n *        \"myapp/highcharts/highcharts\"+src+\".js\",\r\n *        \"myapp/highcharts/highcharts-more\"+src+\".js\",\r\n *        \"myapp/highcharts/highcharts-modifications.js\"\r\n *    ]);\r\n *\r\n *\r\n *    dynLoader.addListenerOnce('ready',function(e){\r\n *      console.log(\"all scripts have been loaded!\");\r\n *    });\r\n *\r\n *    dynLoader.addListener('failed',function(e){\r\n *      var data = e.getData();\r\n *      console.log(\"failed to load \"+data.script);\r\n *    });\r\n *\r\n *    dynLoader.start();\r\n *\r\n * </pre>\r\n */\r\nqx.Class.define(\"qx.util.DynamicScriptLoader\", {\r\n  extend: qx.core.Object,\r\n\r\n  /**\r\n   * Create a loader for the given scripts.\r\n   *\r\n   * @param scriptArr {Array|String} the uri name(s) of the script(s) to load\r\n   */\r\n\r\n  construct(scriptArr) {\r\n    super();\r\n    this.__started = false;\r\n    this.__QUEUE = qx.lang.Type.isString(scriptArr)\r\n      ? [scriptArr]\r\n      : qx.lang.Array.clone(scriptArr);\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * fired when a script is loaded successfully. The data contains 'script' and 'status' keys.\r\n     */\r\n    loaded: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * fired when a specific script fails loading.  The data contains 'script' and 'status' keys.\r\n     */\r\n    failed: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * fired when all given scripts are loaded, each time loadScriptsDynamic is called.\r\n     */\r\n    ready: \"qx.event.type.Event\"\r\n  },\r\n\r\n  statics: {\r\n    /**\r\n     * Map of scripts being added at the present time. Key is script name; value is instance of this class which\r\n     * is loading it.\r\n     */\r\n    __IN_PROGRESS: {},\r\n    /**\r\n     * Map of scripts that have fully loaded. Key is script name; value is true\r\n     */\r\n    __LOADED: {}\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /**\r\n     * Array of the scripts to be loaded\r\n     */\r\n    __QUEUE: null,\r\n\r\n    /**\r\n     * True if start has been called.\r\n     */\r\n    __started: null,\r\n\r\n    /**\r\n     * Start loading scripts. This may only be called once!\r\n     * @return {Promise?} a promise which will be resolved after load of all scripts if promise support is enabled; nothing (undefined) if promises are not enabled.\r\n     */\r\n    start: qx.core.Environment.select(\"qx.promise\", {\r\n      true() {\r\n        return new qx.Promise(function (resolve, reject) {\r\n          this.addListenerOnce(\"ready\", resolve, this);\r\n          this.addListenerOnce(\"failed\", e => {\r\n            reject(new Error(e.getData()));\r\n          });\r\n\r\n          if (this.isDisposed()) {\r\n            reject(new Error(\"disposed\"));\r\n          }\r\n          if (this.__started) {\r\n            reject(new Error(\"you can only call start once per instance\"));\r\n          }\r\n          this.__started = true;\r\n          this.__loadScripts();\r\n        }, this);\r\n      },\r\n      false() {\r\n        if (this.isDisposed()) {\r\n          return;\r\n        }\r\n        if (this.__started) {\r\n          throw new Error(\"you can only call start once per instance\");\r\n        }\r\n        this.__started = true;\r\n        this.__loadScripts();\r\n      }\r\n    }),\r\n\r\n    /**\r\n     * Chain loading scripts.\r\n     *\r\n     * Recursively called until the array of scripts is consumed\r\n     *\r\n     */\r\n    __loadScripts() {\r\n      var DynamicScriptLoader = qx.util.DynamicScriptLoader;\r\n      var script;\r\n      var dynLoader;\r\n      var id1, id2;\r\n      var uri;\r\n      var loader;\r\n\r\n      script = this.__QUEUE.shift();\r\n      if (!script) {\r\n        this.fireEvent(\"ready\");\r\n        return;\r\n      }\r\n\r\n      if (DynamicScriptLoader.__LOADED[script]) {\r\n        this.fireDataEvent(\"loaded\", {\r\n          script: script,\r\n          status: \"preloaded\"\r\n        });\r\n\r\n        this.__loadScripts();\r\n        return;\r\n      }\r\n\r\n      dynLoader = DynamicScriptLoader.__IN_PROGRESS[script];\r\n      if (dynLoader) {\r\n        id1 = dynLoader.addListener(\"loaded\", e => {\r\n          if (this.isDisposed()) {\r\n            return;\r\n          }\r\n          var data = e.getData();\r\n          if (data.script === script) {\r\n            dynLoader.removeListenerById(id2);\r\n            dynLoader.removeListenerById(id1);\r\n            this.fireDataEvent(\"loaded\", data);\r\n            this.__loadScripts();\r\n          }\r\n        });\r\n\r\n        id2 = dynLoader.addListener(\"failed\", e => {\r\n          if (this.isDisposed()) {\r\n            return;\r\n          }\r\n          var data = e.getData();\r\n          dynLoader.removeListenerById(id1);\r\n          dynLoader.removeListenerById(id2);\r\n          this.fireDataEvent(\"failed\", {\r\n            script: script,\r\n            status:\r\n              \"loading of \" +\r\n              data.script +\r\n              \" failed while waiting for \" +\r\n              script\r\n          });\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      uri = qx.util.ResourceManager.getInstance().toUri(script);\r\n\r\n      loader = new qx.bom.request.Script();\r\n\r\n      loader.on(\r\n        \"load\",\r\n        function (request) {\r\n          if (this.isDisposed()) {\r\n            return;\r\n          }\r\n          DynamicScriptLoader.__LOADED[script] = true;\r\n          delete DynamicScriptLoader.__IN_PROGRESS[script];\r\n          this.fireDataEvent(\"loaded\", {\r\n            script: script,\r\n            status: request.status\r\n          });\r\n\r\n          this.__loadScripts();\r\n        },\r\n        this\r\n      );\r\n\r\n      var onError = function (request) {\r\n        if (this.isDisposed()) {\r\n          return;\r\n        }\r\n        delete DynamicScriptLoader.__IN_PROGRESS[script];\r\n        this.fireDataEvent(\"failed\", {\r\n          script: script,\r\n          status: request.status\r\n        });\r\n      };\r\n\r\n      loader.on(\"error\", onError, this);\r\n      loader.on(\"timeout\", onError, this);\r\n\r\n      // this.debug(\"Loading \" + script + \" started\");\r\n      loader.open(\"GET\", uri);\r\n      DynamicScriptLoader.__IN_PROGRESS[script] = this;\r\n      loader.send();\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    var DynamicScriptLoader = qx.util.DynamicScriptLoader;\r\n    for (var key in DynamicScriptLoader.__IN_PROGRESS) {\r\n      if (DynamicScriptLoader.__IN_PROGRESS[key] === this) {\r\n        delete DynamicScriptLoader.__IN_PROGRESS[key];\r\n      }\r\n    }\r\n    this.__QUEUE = undefined;\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;IAEEC,SAAS,WAAAA,UAACC,SAAS,EAAE;MACnBV,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAG,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,SAAO,GAAGd,EAAE,CAACe,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACP,SAAS,CAAC,GAC3C,CAACA,SAAS,CAAC,GACXV,EAAE,CAACe,IAAI,CAACG,KAAK,CAACC,KAAK,CAACT,SAAS,CAAC;IACpC,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEU,MAAM,EAAE;MACN;AACJ;AACA;MACIC,MAAM,EAAE,oBAAoB;MAE5B;AACJ;AACA;MACIC,MAAM,EAAE,oBAAoB;MAE5B;AACJ;AACA;MACIC,KAAK,EAAE;IACT,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;MACIC,SAAa,EAAE,CAAC,CAAC;MACjB;AACJ;AACA;MACIC,SAAQ,EAAE,CAAC;IACb,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;MACIb,SAAO,EAAE,IAAI;MAEb;AAC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"
}