{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "disposeObjects",
    "obj",
    "arr",
    "disposeSingletons",
    "name",
    "i",
    "l",
    "length",
    "hasOwnProperty",
    "core",
    "ObjectRegistry",
    "inShutDown",
    "dispose",
    "constructor",
    "$$instance",
    "Error",
    "disposeArray",
    "field",
    "data",
    "entry",
    "ex",
    "disposeMap",
    "key",
    "disposeTriggeredBy",
    "disposeMe",
    "trigger",
    "triggerDispose",
    "call",
    "destroyContainer",
    "container",
    "_collectContainerChildren",
    "len",
    "destroy",
    "children",
    "getChildren",
    "item",
    "push",
    "__isChildrenContainer",
    "__P_511_0",
    "classes",
    "ui",
    "mobile",
    "Widget",
    "Composite",
    "Scroll",
    "SlideBar",
    "Stack",
    "isSubClassOf",
    "util",
    "DisposeUtil"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/DisposeUtil.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Methods to cleanup fields from maps/objects.\r\n *\r\n * @ignore(qx.log.Logger)\r\n * @ignore(qx.log)\r\n * @ignore(qx.ui.container.Composite)\r\n * @ignore(qx.ui.container.Scroll)\r\n * @ignore(qx.ui.container.SlideBar)\r\n * @ignore(qx.ui.container.Stack)\r\n * @ignore(qx.ui.mobile)\r\n * @ignore(qx.ui.mobile.container.Composite)\r\n * @ignore(qx.ui.mobile.core.Widget)\r\n */\r\nqx.Class.define(\"qx.util.DisposeUtil\", {\r\n  statics: {\r\n    /**\r\n     * Disconnects and disposes given objects from instance.\r\n     * Only works with qx.core.Object based objects e.g. Widgets.\r\n     *\r\n     * @param obj {Object} Object which contains the fields\r\n     * @param arr {Array} List of fields (which store objects) to dispose\r\n     * @param disposeSingletons {Boolean?} true, if singletons should be disposed\r\n     */\r\n    disposeObjects(obj, arr, disposeSingletons) {\r\n      var name;\r\n      for (var i = 0, l = arr.length; i < l; i++) {\r\n        name = arr[i];\r\n        if (obj[name] == null || !obj.hasOwnProperty(name)) {\r\n          continue;\r\n        }\r\n\r\n        if (!qx.core.ObjectRegistry.inShutDown) {\r\n          if (obj[name].dispose) {\r\n            // singletons\r\n            if (!disposeSingletons && obj[name].constructor.$$instance) {\r\n              throw new Error(\r\n                \"The object stored in key \" +\r\n                  name +\r\n                  \" is a singleton! Please use disposeSingleton instead.\"\r\n              );\r\n            } else {\r\n              obj[name].dispose();\r\n            }\r\n          } else {\r\n            throw new Error(\r\n              \"Has no disposable object under key: \" + name + \"!\"\r\n            );\r\n          }\r\n        }\r\n\r\n        obj[name] = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Disposes all members of the given array and deletes\r\n     * the field which refers to the array afterwards.\r\n     *\r\n     * @param obj {Object} Object which contains the field\r\n     * @param field {String} Name of the field which refers to the array\r\n     */\r\n    disposeArray(obj, field) {\r\n      var data = obj[field];\r\n      if (!data) {\r\n        return;\r\n      }\r\n\r\n      // Fast path for application shutdown\r\n      if (qx.core.ObjectRegistry.inShutDown) {\r\n        obj[field] = null;\r\n        return;\r\n      }\r\n\r\n      // Dispose all content\r\n      try {\r\n        var entry;\r\n        for (var i = data.length - 1; i >= 0; i--) {\r\n          entry = data[i];\r\n          if (entry) {\r\n            entry.dispose();\r\n          }\r\n        }\r\n      } catch (ex) {\r\n        throw new Error(\r\n          \"The array field: \" +\r\n            field +\r\n            \" of object: \" +\r\n            obj +\r\n            \" has non disposable entries: \" +\r\n            ex\r\n        );\r\n      }\r\n\r\n      // Reduce array size to zero\r\n      data.length = 0;\r\n\r\n      // Finally remove field\r\n      obj[field] = null;\r\n    },\r\n\r\n    /**\r\n     * Disposes all members of the given map and deletes\r\n     * the field which refers to the map afterwards.\r\n     *\r\n     * @param obj {Object} Object which contains the field\r\n     * @param field {String} Name of the field which refers to the array\r\n     */\r\n    disposeMap(obj, field) {\r\n      var data = obj[field];\r\n      if (!data) {\r\n        return;\r\n      }\r\n\r\n      // Fast path for application shutdown\r\n      if (qx.core.ObjectRegistry.inShutDown) {\r\n        obj[field] = null;\r\n        return;\r\n      }\r\n\r\n      // Dispose all content\r\n      try {\r\n        var entry;\r\n        for (var key in data) {\r\n          entry = data[key];\r\n          if (data.hasOwnProperty(key) && entry) {\r\n            entry.dispose();\r\n          }\r\n        }\r\n      } catch (ex) {\r\n        throw new Error(\r\n          \"The map field: \" +\r\n            field +\r\n            \" of object: \" +\r\n            obj +\r\n            \" has non disposable entries: \" +\r\n            ex\r\n        );\r\n      }\r\n\r\n      // Finally remove field\r\n      obj[field] = null;\r\n    },\r\n\r\n    /**\r\n     * Disposes a given object when another object is disposed\r\n     *\r\n     * @param disposeMe {Object} Object to dispose when other object is disposed\r\n     * @param trigger {Object} Other object\r\n     *\r\n     */\r\n    disposeTriggeredBy(disposeMe, trigger) {\r\n      var triggerDispose = trigger.dispose;\r\n      trigger.dispose = function () {\r\n        triggerDispose.call(trigger);\r\n        disposeMe.dispose();\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Destroys a container and all of its children recursively.\r\n     * @param container {qx.ui.container.Composite | qx.ui.container.Scroll |\r\n     *   qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed\r\n     */\r\n    destroyContainer(container) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.ui.mobile && container instanceof qx.ui.mobile.core.Widget) {\r\n          qx.core.Assert.assertTrue(\r\n            this.__isChildrenContainer(container),\r\n            \"Container must be an instance of qx.ui.mobile.container.Composite.\"\r\n          );\r\n        } else {\r\n          qx.core.Assert.assertQxWidget(\r\n            container,\r\n            \"First argument must be a container widget!\"\r\n          );\r\n\r\n          qx.core.Assert.assertTrue(\r\n            this.__isChildrenContainer(container),\r\n            \"Container must be an instance of qx.ui.container.Composite or \" +\r\n              \"qx.ui.container.Scroll or qx.ui.container.Resizer or \" +\r\n              \"qx.ui.container.SlideBar or qx.ui.container.Stack!\"\r\n          );\r\n        }\r\n      }\r\n\r\n      var arr = [];\r\n      this._collectContainerChildren(container, arr);\r\n\r\n      var len = arr.length;\r\n      for (var i = len - 1; i >= 0; i--) {\r\n        arr[i].destroy();\r\n      }\r\n      container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Helper function to collect all children widgets of an container recursively.\r\n     * @param container {qx.ui.container.Composite | qx.ui.container.Scroll | qx.ui.container.SlideBar | qx.ui.container.Stack} Container to be destroyed\r\n     * @param arr {Array} Array which holds all children widgets\r\n     */\r\n    _collectContainerChildren(container, arr) {\r\n      var children = container.getChildren();\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        var item = children[i];\r\n        arr.push(item);\r\n\r\n        if (this.__isChildrenContainer(item)) {\r\n          this._collectContainerChildren(item, arr);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if the given object is a qx container widget\r\n     *\r\n     * @param obj {Object} The object to check\r\n     * @return {Boolean} <code>true</code> if the object is a container for\r\n     * child widgets\r\n     */\r\n    __isChildrenContainer(obj) {\r\n      var classes = [];\r\n      if (qx.ui.mobile && obj instanceof qx.ui.mobile.core.Widget) {\r\n        classes = [qx.ui.mobile.container.Composite];\r\n      } else {\r\n        classes = [\r\n          qx.ui.container.Composite,\r\n          qx.ui.container.Scroll,\r\n          qx.ui.container.SlideBar,\r\n          qx.ui.container.Stack\r\n        ];\r\n      }\r\n\r\n      for (var i = 0, l = classes.length; i < l; i++) {\r\n        if (\r\n          typeof classes[i] !== \"undefined\" &&\r\n          qx.Class.isSubClassOf(obj.constructor, classes[i])\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}