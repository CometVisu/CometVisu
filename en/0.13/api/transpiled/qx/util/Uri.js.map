{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "parseUri",
    "str",
    "strict",
    "options",
    "key",
    "q",
    "name",
    "parser",
    "loose",
    "o",
    "m",
    "exec",
    "uri",
    "i",
    "replace",
    "$0",
    "$1",
    "$2",
    "appendParamsToUrl",
    "url",
    "params",
    "undefined",
    "lang",
    "Type",
    "isObject",
    "util",
    "Uri",
    "toParameter",
    "test",
    "obj",
    "post",
    "parts",
    "hasOwnProperty",
    "value",
    "Array",
    "length",
    "__toParameterPair",
    "join",
    "__P_513_0",
    "encode",
    "window",
    "encodeURIComponent",
    "push",
    "getAbsolute",
    "div",
    "document",
    "createElement",
    "innerHTML",
    "firstChild",
    "href"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/Uri.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tristan Koch (tristankoch)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Static helpers for parsing and modifying URIs.\r\n */\r\nqx.Bootstrap.define(\"qx.util.Uri\", {\r\n  statics: {\r\n    /**\r\n     * Split URL\r\n     *\r\n     * Code taken from:\r\n     *   parseUri 1.2.2\r\n     *   (c) Steven Levithan <stevenlevithan.com>\r\n     *   MIT License\r\n     *\r\n     *\r\n     * @param str {String} String to parse as URI\r\n     * @param strict {Boolean} Whether to parse strictly by the rules\r\n     * @return {Object} Map with parts of URI as properties\r\n     */\r\n    parseUri(str, strict) {\r\n      var options = {\r\n        key: [\r\n          \"source\",\r\n          \"protocol\",\r\n          \"authority\",\r\n          \"userInfo\",\r\n          \"user\",\r\n          \"password\",\r\n          \"host\",\r\n          \"port\",\r\n          \"relative\",\r\n          \"path\",\r\n          \"directory\",\r\n          \"file\",\r\n          \"query\",\r\n          \"anchor\"\r\n        ],\r\n\r\n        q: {\r\n          name: \"queryKey\",\r\n          parser: /(?:^|&)([^&=]*)=?([^&]*)/g\r\n        },\r\n\r\n        parser: {\r\n          strict:\r\n            /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@?]*)(?::([^:@?]*))?)?@)?((?:\\[[0-9A-Fa-f:]+\\])|(?:[^:\\/?#\\[\\]]*))(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\r\n          loose:\r\n            /^(?:(?![^:@?]+:[^:@?\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@?]*)(?::([^:@?]*))?)?@)?((?:\\[[0-9A-Fa-f:]+\\])|(?:[^:\\/?#\\[\\]]*))(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\r\n        }\r\n      };\r\n\r\n      var o = options,\r\n        m = options.parser[strict ? \"strict\" : \"loose\"].exec(str),\r\n        uri = {},\r\n        i = 14;\r\n\r\n      while (i--) {\r\n        uri[o.key[i]] = m[i] || \"\";\r\n      }\r\n      uri[o.q.name] = {};\r\n      uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\r\n        if ($1) {\r\n          uri[o.q.name][$1] = $2;\r\n        }\r\n      });\r\n\r\n      return uri;\r\n    },\r\n\r\n    /**\r\n     * Append string to query part of URL. Respects existing query.\r\n     *\r\n     * @param url {String} URL to append string to.\r\n     * @param params {String} Parameters to append to URL.\r\n     * @return {String} URL with string appended in query part.\r\n     */\r\n    appendParamsToUrl(url, params) {\r\n      if (params === undefined) {\r\n        return url;\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (!(qx.lang.Type.isString(params) || qx.lang.Type.isObject(params))) {\r\n          throw new Error(\"params must be either string or object\");\r\n        }\r\n      }\r\n\r\n      if (qx.lang.Type.isObject(params)) {\r\n        params = qx.util.Uri.toParameter(params);\r\n      }\r\n\r\n      if (!params) {\r\n        return url;\r\n      }\r\n\r\n      return (url += /\\?/.test(url) ? \"&\" + params : \"?\" + params);\r\n    },\r\n\r\n    /**\r\n     * Serializes an object to URI parameters (also known as query string).\r\n     *\r\n     * Escapes characters that have a special meaning in URIs as well as\r\n     * umlauts. Uses the global function encodeURIComponent, see\r\n     * https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\r\n     *\r\n     * Note: For URI parameters that are to be sent as\r\n     * application/x-www-form-urlencoded (POST), spaces should be encoded\r\n     * with \"+\".\r\n     *\r\n     * @param obj {Object}   Object to serialize.\r\n     * @param post {Boolean} Whether spaces should be encoded with \"+\".\r\n     * @return {String}      Serialized object. Safe to append to URIs or send as\r\n     *                       URL encoded string.\r\n     */\r\n    toParameter(obj, post) {\r\n      var key,\r\n        parts = [];\r\n\r\n      for (key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          var value = obj[key];\r\n          if (value instanceof Array) {\r\n            for (var i = 0; i < value.length; i++) {\r\n              this.__toParameterPair(key, value[i], parts, post);\r\n            }\r\n          } else {\r\n            this.__toParameterPair(key, value, parts, post);\r\n          }\r\n        }\r\n      }\r\n\r\n      return parts.join(\"&\");\r\n    },\r\n\r\n    /**\r\n     * Encodes key/value to URI safe string and pushes to given array.\r\n     *\r\n     * @param key {String} Key.\r\n     * @param value {String} Value.\r\n     * @param parts {Array} Array to push to.\r\n     * @param post {Boolean} Whether spaces should be encoded with \"+\".\r\n     */\r\n    __toParameterPair(key, value, parts, post) {\r\n      var encode = window.encodeURIComponent;\r\n      if (post) {\r\n        parts.push(\r\n          encode(key).replace(/%20/g, \"+\") +\r\n            \"=\" +\r\n            encode(value).replace(/%20/g, \"+\")\r\n        );\r\n      } else {\r\n        parts.push(encode(key) + \"=\" + encode(value));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Takes a relative URI and returns an absolute one.\r\n     *\r\n     * @param uri {String} relative URI\r\n     * @return {String} absolute URI\r\n     */\r\n    getAbsolute(uri) {\r\n      var div = document.createElement(\"div\");\r\n      div.innerHTML = '<a href=\"' + uri + '\">0</a>';\r\n      return div.firstChild.href;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}