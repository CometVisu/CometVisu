{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "split",
    "str",
    "separator",
    "limit",
    "Object",
    "prototype",
    "toString",
    "call",
    "String",
    "output",
    "lastLastIndex",
    "flags",
    "ignoreCase",
    "multiline",
    "sticky",
    "RegExp",
    "source",
    "separator2",
    "match",
    "lastIndex",
    "lastLength",
    "compliantExecNpcg",
    "exec",
    "undefined",
    "Infinity",
    "Math",
    "floor",
    "index",
    "length",
    "push",
    "slice",
    "replace",
    "i",
    "arguments",
    "Array",
    "apply",
    "test",
    "util",
    "StringSplit"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/StringSplit.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Cross-Browser Split\n     http://blog.stevenlevithan.com/archives/cross-browser-split\n     Version 1.0.1\n\n     Copyright:\n       (c) 2006-2007, Steven Levithan <http://stevenlevithan.com>\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n     Authors:\n       * Steven Levithan\n\n************************************************************************ */\n\n/**\n * Implements an ECMA-compliant, uniform cross-browser split method\n */\nqx.Bootstrap.define(\"qx.util.StringSplit\", {\n  statics: {\n    /**\n     * ECMA-compliant, uniform cross-browser split method\n     *\n     * @param str {String} Incoming string to split\n     * @param separator {RegExp} Specifies the character to use for separating the string.\n     *   The separator is treated as a string or a  regular expression. If separator is\n     *   omitted, the array returned contains one element consisting of the entire string.\n     * @param limit {Integer?} Integer specifying a limit on the number of splits to be found.\n     * @return {String[]} split string\n     */\n    split(str, separator, limit) {\n      // if `separator` is not a regex, use the native `split`\n      if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n        return String.prototype.split.call(str, separator, limit);\n      }\n\n      var output = [],\n        lastLastIndex = 0,\n        flags =\n          (separator.ignoreCase ? \"i\" : \"\") +\n          (separator.multiline ? \"m\" : \"\") +\n          (separator.sticky ? \"y\" : \"\"),\n        separator = RegExp(separator.source, flags + \"g\"), // make `global` and avoid `lastIndex` issues by working with a copy\n        separator2,\n        match,\n        lastIndex,\n        lastLength,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undefined; // NPCG: nonparticipating capturing group\n\n      str = str + \"\"; // type conversion\n\n      if (!compliantExecNpcg) {\n        separator2 = RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags); // doesn't need /g or /y, but they don't hurt\n      }\n\n      /* behavior for `limit`: if it's...\n      - `undefined`: no limit.\n      - `NaN` or zero: return an empty array.\n      - a positive number: use `Math.floor(limit)`.\n      - a negative number: no limit.\n      - other: type-convert, then use the above rules. */\n      if (limit === undefined || +limit < 0) {\n        limit = Infinity;\n      } else {\n        limit = Math.floor(+limit);\n        if (!limit) {\n          return [];\n        }\n      }\n\n      while ((match = separator.exec(str))) {\n        lastIndex = match.index + match[0].length; // `separator.lastIndex` is not reliable cross-browser\n\n        if (lastIndex > lastLastIndex) {\n          output.push(str.slice(lastLastIndex, match.index));\n\n          // fix browsers whose `exec` methods don't consistently return `undefined` for nonparticipating capturing groups\n          if (!compliantExecNpcg && match.length > 1) {\n            match[0].replace(separator2, function () {\n              for (var i = 1; i < arguments.length - 2; i++) {\n                if (arguments[i] === undefined) {\n                  match[i] = undefined;\n                }\n              }\n            });\n          }\n\n          if (match.length > 1 && match.index < str.length) {\n            Array.prototype.push.apply(output, match.slice(1));\n          }\n\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n\n          if (output.length >= limit) {\n            break;\n          }\n        }\n\n        if (separator.lastIndex === match.index) {\n          separator.lastIndex++; // avoid an infinite loop\n        }\n      }\n\n      if (lastLastIndex === str.length) {\n        if (lastLength || !separator.test(\"\")) {\n          output.push(\"\");\n        }\n      } else {\n        output.push(str.slice(lastLastIndex));\n      }\n\n      return output.length > limit ? output.slice(0, limit) : output;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}