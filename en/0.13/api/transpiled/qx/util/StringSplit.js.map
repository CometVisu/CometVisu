{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "split",
    "str",
    "separator",
    "limit",
    "Object",
    "prototype",
    "toString",
    "call",
    "String",
    "output",
    "lastLastIndex",
    "flags",
    "ignoreCase",
    "multiline",
    "sticky",
    "RegExp",
    "source",
    "separator2",
    "match",
    "lastIndex",
    "lastLength",
    "compliantExecNpcg",
    "exec",
    "undefined",
    "Infinity",
    "Math",
    "floor",
    "index",
    "length",
    "push",
    "slice",
    "replace",
    "i",
    "arguments",
    "Array",
    "apply",
    "test",
    "util",
    "StringSplit"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/StringSplit.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Adrian Olaru (adrianolaru)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Cross-Browser Split\n     http://blog.stevenlevithan.com/archives/cross-browser-split\n     Version 1.0.1\n\n     Copyright:\n       (c) 2006-2007, Steven Levithan <http://stevenlevithan.com>\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n     Authors:\n       * Steven Levithan\n\n************************************************************************ */\n\n/**\n * Implements an ECMA-compliant, uniform cross-browser split method\n */\nqx.Bootstrap.define(\"qx.util.StringSplit\", {\n  statics: {\n    /**\n     * ECMA-compliant, uniform cross-browser split method\n     *\n     * @param str {String} Incoming string to split\n     * @param separator {RegExp} Specifies the character to use for separating the string.\n     *   The separator is treated as a string or a  regular expression. If separator is\n     *   omitted, the array returned contains one element consisting of the entire string.\n     * @param limit {Integer?} Integer specifying a limit on the number of splits to be found.\n     * @return {String[]} split string\n     */\n    split(str, separator, limit) {\n      // if `separator` is not a regex, use the native `split`\n      if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n        return String.prototype.split.call(str, separator, limit);\n      }\n\n      var output = [],\n        lastLastIndex = 0,\n        flags =\n          (separator.ignoreCase ? \"i\" : \"\") +\n          (separator.multiline ? \"m\" : \"\") +\n          (separator.sticky ? \"y\" : \"\"),\n        separator = RegExp(separator.source, flags + \"g\"), // make `global` and avoid `lastIndex` issues by working with a copy\n        separator2,\n        match,\n        lastIndex,\n        lastLength,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undefined; // NPCG: nonparticipating capturing group\n\n      str = str + \"\"; // type conversion\n\n      if (!compliantExecNpcg) {\n        separator2 = RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags); // doesn't need /g or /y, but they don't hurt\n      }\n\n      /* behavior for `limit`: if it's...\n      - `undefined`: no limit.\n      - `NaN` or zero: return an empty array.\n      - a positive number: use `Math.floor(limit)`.\n      - a negative number: no limit.\n      - other: type-convert, then use the above rules. */\n      if (limit === undefined || +limit < 0) {\n        limit = Infinity;\n      } else {\n        limit = Math.floor(+limit);\n        if (!limit) {\n          return [];\n        }\n      }\n\n      while ((match = separator.exec(str))) {\n        lastIndex = match.index + match[0].length; // `separator.lastIndex` is not reliable cross-browser\n\n        if (lastIndex > lastLastIndex) {\n          output.push(str.slice(lastLastIndex, match.index));\n\n          // fix browsers whose `exec` methods don't consistently return `undefined` for nonparticipating capturing groups\n          if (!compliantExecNpcg && match.length > 1) {\n            match[0].replace(separator2, function () {\n              for (var i = 1; i < arguments.length - 2; i++) {\n                if (arguments[i] === undefined) {\n                  match[i] = undefined;\n                }\n              }\n            });\n          }\n\n          if (match.length > 1 && match.index < str.length) {\n            Array.prototype.push.apply(output, match.slice(1));\n          }\n\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n\n          if (output.length >= limit) {\n            break;\n          }\n        }\n\n        if (separator.lastIndex === match.index) {\n          separator.lastIndex++; // avoid an infinite loop\n        }\n      }\n\n      if (lastLastIndex === str.length) {\n        if (lastLength || !separator.test(\"\")) {\n          output.push(\"\");\n        }\n      } else {\n        output.push(str.slice(lastLastIndex));\n      }\n\n      return output.length > limit ? output.slice(0, limit) : output;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}