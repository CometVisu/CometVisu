{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "toUriParameter",
    "object",
    "qxSerializer",
    "dateFormat",
    "result",
    "properties",
    "util",
    "PropertyUtil",
    "getAllProperties",
    "constructor",
    "name",
    "group",
    "undefined",
    "value",
    "lang",
    "String",
    "firstUp",
    "Type",
    "isArray",
    "isdataArray",
    "data",
    "IListData",
    "hasInterface",
    "i",
    "length",
    "valueAtI",
    "getItem",
    "__toUriParameter",
    "isDate",
    "format",
    "substring",
    "$$type",
    "classname",
    "core",
    "Object",
    "encValue",
    "encodeURIComponent",
    "toNativeObject",
    "getLength",
    "push",
    "Serializer",
    "returnValue",
    "locale",
    "LocalizedString",
    "toString",
    "isObject",
    "key",
    "toJson",
    "isString",
    "replace",
    "isRegExp"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/util/Serializer.js"
  ],
  "sourcesContent": [
    "/* ***********************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This is an util class responsible for serializing qooxdoo objects.\n *\n * @ignore(qx.data, qx.data.IListData)\n * @ignore(qx.locale, qx.locale.LocalizedString)\n */\nqx.Class.define(\"qx.util.Serializer\", {\n  statics: {\n    /**\n     * Serializes the properties of the given qooxdoo object. To get the\n     * serialization working, every property needs to have a string\n     * representation because the value of the property will be concatenated to the\n     * serialized string.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes <ou want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toUriParameter(object, qxSerializer, dateFormat) {\n      var result = \"\";\n      var properties = qx.util.PropertyUtil.getAllProperties(\n        object.constructor\n      );\n\n      for (var name in properties) {\n        // ignore property groups\n        if (properties[name].group != undefined) {\n          continue;\n        }\n        var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n\n        // handle arrays\n        if (qx.lang.Type.isArray(value)) {\n          var isdataArray =\n            qx.data &&\n            qx.data.IListData &&\n            qx.Class.hasInterface(\n              value && value.constructor,\n              qx.data.IListData\n            );\n\n          for (var i = 0; i < value.length; i++) {\n            var valueAtI = isdataArray ? value.getItem(i) : value[i];\n            result += this.__toUriParameter(name, valueAtI, qxSerializer);\n          }\n        } else if (qx.lang.Type.isDate(value) && dateFormat != null) {\n          result += this.__toUriParameter(\n            name,\n            dateFormat.format(value),\n            qxSerializer\n          );\n        } else {\n          result += this.__toUriParameter(name, value, qxSerializer);\n        }\n      }\n      return result.substring(0, result.length - 1);\n    },\n\n    /**\n     * Helper method for {@link #toUriParameter}. Check for qooxdoo objects\n     * and returns the serialized name value pair for the given parameter.\n     *\n     * @param name {String} The name of the value\n     * @param value {var} The value itself\n     * @param qxSerializer {Function?} The serializer for qooxdoo objects.\n     * @return {String} The serialized name value pair.\n     */\n    __toUriParameter(name, value, qxSerializer) {\n      if (value && value.$$type == \"Class\") {\n        value = value.classname;\n      }\n\n      if (value && (value.$$type == \"Interface\" || value.$$type == \"Mixin\")) {\n        value = value.name;\n      }\n\n      if (value instanceof qx.core.Object && qxSerializer != null) {\n        var encValue = encodeURIComponent(qxSerializer(value));\n        if (encValue === undefined) {\n          var encValue = encodeURIComponent(value);\n        }\n      } else {\n        var encValue = encodeURIComponent(value);\n      }\n      return encodeURIComponent(name) + \"=\" + encValue + \"&\";\n    },\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a native\n     * object.\n     *\n     * @param object {qx.core.Object}\n     *   Any qooxdoo object\n     *\n     * @param qxSerializer {Function?}\n     *   Function used for serializing qooxdoo objects stored in the properties\n     *   of the object. Check for the type of classes you want to serialize\n     *   and return the serialized value. In all other cases, just return\n     *   nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {null|Array|String|Object}\n     *   The serialized object. Depending on the input qooxdoo object, the returning\n     *   type will vary.\n     */\n    toNativeObject(object, qxSerializer, dateFormat) {\n      var result;\n\n      // null or undefined\n      if (object == null) {\n        return null;\n      }\n\n      // data array\n      if (\n        qx.data &&\n        qx.data.IListData &&\n        qx.Class.hasInterface(object.constructor, qx.data.IListData)\n      ) {\n        result = [];\n        for (var i = 0; i < object.getLength(); i++) {\n          result.push(\n            qx.util.Serializer.toNativeObject(\n              object.getItem(i),\n              qxSerializer,\n              dateFormat\n            )\n          );\n        }\n\n        return result;\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object)) {\n        result = [];\n        for (var i = 0; i < object.length; i++) {\n          result.push(\n            qx.util.Serializer.toNativeObject(\n              object[i],\n              qxSerializer,\n              dateFormat\n            )\n          );\n        }\n\n        return result;\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return object.classname;\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return object.name;\n      }\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object) {\n        if (qxSerializer != null) {\n          var returnValue = qxSerializer(object);\n\n          // if we have something returned, return that\n          if (returnValue != undefined) {\n            return returnValue;\n          }\n\n          // continue otherwise\n        }\n\n        result = {};\n\n        var properties = qx.util.PropertyUtil.getAllProperties(\n          object.constructor\n        );\n\n        for (var name in properties) {\n          // ignore property groups\n          if (properties[name].group != undefined) {\n            continue;\n          }\n\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result[name] = qx.util.Serializer.toNativeObject(\n            value,\n            qxSerializer,\n            dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // date objects with date format\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return dateFormat.format(object);\n      }\n\n      // localized strings\n      if (\n        qx.locale &&\n        qx.locale.LocalizedString &&\n        object instanceof qx.locale.LocalizedString\n      ) {\n        return object.toString();\n      }\n\n      // JavaScript objects\n      if (qx.lang.Type.isObject(object)) {\n        result = {};\n\n        for (var key in object) {\n          result[key] = qx.util.Serializer.toNativeObject(\n            object[key],\n            qxSerializer,\n            dateFormat\n          );\n        }\n\n        return result;\n      }\n\n      // all other stuff, including String, Date, RegExp\n      return object;\n    },\n\n    /**\n     * Serializes the properties of the given qooxdoo object into a json object.\n     *\n     * @param object {qx.core.Object} Any qooxdoo object\n     * @param qxSerializer {Function?} Function used for serializing qooxdoo\n     *   objects stored in the properties of the object. Check for the type of\n     *   classes you want to serialize and return the serialized value. In all\n     *   other cases, just return nothing.\n     * @param dateFormat {qx.util.format.DateFormat?} If a date formater is given,\n     *   the format method of this given formater is used to convert date\n     *   objects into strings.\n     * @return {String} The serialized object.\n     */\n    toJson(object, qxSerializer, dateFormat) {\n      var result = \"\";\n\n      // null or undefined\n      if (object == null) {\n        return \"null\";\n      }\n\n      // data array\n      if (\n        qx.data &&\n        qx.data.IListData &&\n        qx.Class.hasInterface(object.constructor, qx.data.IListData)\n      ) {\n        result += \"[\";\n        for (var i = 0; i < object.getLength(); i++) {\n          result +=\n            qx.util.Serializer.toJson(\n              object.getItem(i),\n              qxSerializer,\n              dateFormat\n            ) + \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // other arrays\n      if (qx.lang.Type.isArray(object)) {\n        result += \"[\";\n        for (var i = 0; i < object.length; i++) {\n          result +=\n            qx.util.Serializer.toJson(object[i], qxSerializer, dateFormat) +\n            \",\";\n        }\n        if (result != \"[\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"]\";\n      }\n\n      // return names for qooxdoo classes\n      if (object.$$type == \"Class\") {\n        return '\"' + object.classname + '\"';\n      }\n\n      // return names for qooxdoo interfaces and mixins\n      if (object.$$type == \"Interface\" || object.$$type == \"Mixin\") {\n        return '\"' + object.name + '\"';\n      }\n\n      // qooxdoo object\n      if (object instanceof qx.core.Object) {\n        if (qxSerializer != null) {\n          var returnValue = qxSerializer(object);\n          // if we have something returned, return that\n          if (returnValue != undefined) {\n            return '\"' + returnValue + '\"';\n          }\n          // continue otherwise\n        }\n        result += \"{\";\n        var properties = qx.util.PropertyUtil.getAllProperties(\n          object.constructor\n        );\n\n        for (var name in properties) {\n          // ignore property groups\n          if (properties[name].group != undefined) {\n            continue;\n          }\n          var value = object[\"get\" + qx.lang.String.firstUp(name)]();\n          result +=\n            '\"' +\n            name +\n            '\":' +\n            qx.util.Serializer.toJson(value, qxSerializer, dateFormat) +\n            \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // localized strings\n      if (\n        qx.locale &&\n        qx.locale.LocalizedString &&\n        object instanceof qx.locale.LocalizedString\n      ) {\n        object = object.toString();\n        // no return here because we want to have the string checks as well!\n      }\n\n      // date objects with formater\n      if (qx.lang.Type.isDate(object) && dateFormat != null) {\n        return '\"' + dateFormat.format(object) + '\"';\n      }\n\n      // javascript objects\n      if (qx.lang.Type.isObject(object)) {\n        result += \"{\";\n        for (var key in object) {\n          result +=\n            '\"' +\n            key +\n            '\":' +\n            qx.util.Serializer.toJson(object[key], qxSerializer, dateFormat) +\n            \",\";\n        }\n        if (result != \"{\") {\n          result = result.substring(0, result.length - 1);\n        }\n        return result + \"}\";\n      }\n\n      // strings\n      if (qx.lang.Type.isString(object)) {\n        // escape\n        object = object.replace(/([\\\\])/g, \"\\\\\\\\\");\n        object = object.replace(/([\"])/g, '\\\\\"');\n        object = object.replace(/([\\r])/g, \"\\\\r\");\n        object = object.replace(/([\\f])/g, \"\\\\f\");\n        object = object.replace(/([\\n])/g, \"\\\\n\");\n        object = object.replace(/([\\t])/g, \"\\\\t\");\n        object = object.replace(/([\\b])/g, \"\\\\b\");\n\n        return '\"' + object + '\"';\n      }\n\n      // Date and RegExp\n      if (qx.lang.Type.isDate(object) || qx.lang.Type.isRegExp(object)) {\n        return '\"' + object + '\"';\n      }\n\n      // all other stuff\n      return object + \"\";\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}