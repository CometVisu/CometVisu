{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "properties",
    "verbose",
    "init",
    "check",
    "machineReadable",
    "writer",
    "nullable",
    "colorOn",
    "members",
    "print",
    "msgId",
    "_len",
    "arguments",
    "length",
    "args",
    "Array",
    "_key",
    "i",
    "arg",
    "String",
    "isMachineReadable",
    "str",
    "JSON",
    "stringify",
    "console",
    "log",
    "getWriter",
    "decode",
    "apply",
    "concat",
    "msg",
    "tool",
    "compiler",
    "Console",
    "MESSAGE_IDS",
    "_len2",
    "_key2",
    "lang",
    "format",
    "message",
    "getMessageType",
    "type",
    "_len3",
    "_key3",
    "getColorOn",
    "join",
    "debug",
    "_len4",
    "_key4",
    "info",
    "_len5",
    "_key5",
    "trace",
    "isVerbose",
    "_len6",
    "_key6",
    "warn",
    "_len7",
    "_key7",
    "error",
    "_len8",
    "_key8",
    "defer",
    "statics",
    "addMessageIds",
    "__INSTANCE",
    "getInstance",
    "_this$getInstance",
    "_this$getInstance2",
    "_this$getInstance3",
    "_this$getInstance4",
    "_this$getInstance5",
    "_this$getInstance6",
    "_this$getInstance7",
    "_this$getInstance8",
    "obj",
    "id",
    "decodeMarker",
    "marker",
    "showPosition",
    "pos",
    "start",
    "line",
    "column",
    "end",
    "e",
    "Error"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/Console.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/**\n * The Console handles output of compiler messages for the end user (i.e. not debugging output).\n * The output is based around message IDs, which relate to translatable strings, plus arguments.\n */\nqx.Class.define(\"qx.tool.compiler.Console\", {\n  extend: qx.core.Object,\n\n  properties: {\n    /** Whether verbose logging is enabled */\n    verbose: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /** Whether to output all messages as machine readable data structures */\n    machineReadable: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Function that is used to output console messages; called with:\n     *   str {String} complete message to output\n     *   msgId {String} original message ID\n     *   ...args {Object...} original arguments to message\n     */\n    writer: {\n      init: null,\n      nullable: true,\n      check: \"Function\"\n    },\n\n    /** Colour prefix for console output */\n    colorOn: {\n      init: \"\",\n      nullable: false,\n      check: \"String\"\n    }\n  },\n\n  members: {\n    /**\n     * Prints the message\n     *\n     * @param msgId {String} translatable message ID\n     * @param args {Object...} arguments\n     */\n    print(msgId, ...args) {\n      for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        if (\n          typeof arg !== \"string\" &&\n          typeof arg !== \"number\" &&\n          arg !== null\n        ) {\n          args[i] = String(arg);\n        }\n      }\n      if (this.isMachineReadable()) {\n        let str = \"##\" + msgId + \":\" + JSON.stringify(args);\n        console.log(str);\n      } else {\n        var writer = this.getWriter();\n        let str = this.decode(msgId, ...args);\n        if (writer) {\n          writer(str, msgId, ...args);\n        } else {\n          this.log(str);\n        }\n      }\n    },\n\n    /**\n     * Decodes the message ID and arguments into a string to be presented in the output\n     *\n     * @param msgId {String} translatable message ID\n     * @param args {Object...} arguments\n     * @return {String} complete message\n     */\n    decode(msgId, ...args) {\n      var msg = qx.tool.compiler.Console.MESSAGE_IDS[msgId];\n      if (msg) {\n        let str = qx.lang.String.format(msg.message, args || []);\n        return str;\n      }\n      let str = msgId + JSON.stringify(args);\n      return str;\n    },\n\n    /**\n     * Returns the type of the message, eg error, warning, etc\n     *\n     * @param msgId {String} the message ID to lookup\n     * @return {String} the type of message, can be one of \"message\" (default) or \"error\", \"warning\"\n     */\n    getMessageType(msgId) {\n      let msg = qx.tool.compiler.Console.MESSAGE_IDS[msgId];\n      return msg ? msg.type : null;\n    },\n\n    /**\n     * console.log equivalent, with colorization\n     */\n    log(...args) {\n      console.log(this.getColorOn() + args.join(\" \"));\n    },\n\n    /**\n     * console.debug equivalent, with colorization\n     */\n    debug(...args) {\n      console.debug(this.getColorOn() + args.join(\" \"));\n    },\n\n    /**\n     * console.info equivalent, with colorization\n     */\n    info(...args) {\n      console.info(this.getColorOn() + args.join(\" \"));\n    },\n\n    /**\n     * console.warn equivalent, with colorization, only operates if `verbose` is true\n     */\n    trace(...args) {\n      if (this.isVerbose()) {\n        console.warn(this.getColorOn() + args.join(\" \"));\n      }\n    },\n\n    /**\n     * console.warn equivalent, with colorization\n     */\n    warn(...args) {\n      console.warn(this.getColorOn() + args.join(\" \"));\n    },\n\n    /**\n     * console.error equivalent, with colorization\n     */\n    error(...args) {\n      console.error(this.getColorOn() + args.join(\" \"));\n    }\n  },\n\n  defer(statics) {\n    /*\n     * Errors\n     */\n    statics.addMessageIds(\n      {\n        // Compiler errors (@see {ClassFile})\n        \"qx.tool.compiler.class.invalidProperties\":\n          \"Invalid 'properties' key in class definition\",\n        \"qx.tool.compiler.compiler.missingClassDef\":\n          \"FATAL Missing class definition - no call to qx.Class.define (or qx.Mixin.define etc)\",\n        \"qx.tool.compiler.compiler.syntaxError\": \"FATAL Syntax error: %1\",\n        \"qx.tool.compiler.compiler.invalidExtendClause\":\n          \"FATAL Invalid `extend` clause - expected to find a class name (without quotes or `new`)\",\n        \"qx.tool.compiler.compiler.invalidClassDefinitionEntry\":\n          \"Unexpected property %2 in %1 definition\",\n        \"qx.tool.compiler.compiler.wrongClassName\":\n          \"Wrong class name or filename - expected to find at least %1 but only found [%2]\",\n        \"qx.tool.compiler.compiler.membersNotAnObject\":\n          \"The members property of class %1 is not an object\",\n\n        // Application errors (@see {Application})\n        \"qx.tool.compiler.application.partRecursive\":\n          \"Part %1 has recursive dependencies on other parts\",\n        \"qx.tool.compiler.application.duplicatePartNames\":\n          \"Duplicate parts named '%1'\",\n        \"qx.tool.compiler.application.noBootPart\": \"Cannot find a boot part\",\n        \"qx.tool.compiler.application.conflictingExactPart\":\n          \"Conflicting exact match for %1, could be %2 or %3\",\n        \"qx.tool.compiler.application.conflictingBestPart\":\n          \"Conflicting best match for %1, could be %2 or %3\",\n        \"qx.tool.compiler.application.missingRequiredLibrary\":\n          \"Cannot find required library %1\",\n        \"qx.tool.compiler.application.missingScriptResource\":\n          \"Cannot find script resource: %1\",\n        \"qx.tool.compiler.application.missingCssResource\":\n          \"Cannot find CSS resource: %1\",\n\n        // Target errors (@see {Target})\n        \"qx.tool.compiler.target.missingAppLibrary\":\n          \"Cannot find library required to create application for %1\",\n\n        // Library errors (@see {Library})\n        \"qx.tool.compiler.library.emptyManifest\":\n          \"Empty Manifest.json in library at %1\",\n        \"qx.tool.compiler.library.cannotCorrectCase\":\n          \"Unable to correct case for library in %1 because it uses source/resource directories which are outside the library\",\n        \"qx.tool.compiler.library.cannotFindPath\":\n          \"Cannot find path %2 required by library %1\",\n\n        // Targets\n        \"qx.tool.compiler.build.uglifyParseError\":\n          \"Parse error in output file %4, line %1 column %2: %3\",\n\n        // Fonts\n        \"qx.tool.compiler.webfonts.error\":\n          \"Error compiling webfont %1, error=%2\",\n\n        // Progress\n        \"qx.tool.compiler.maker.appFatalError\":\n          \"Cannot write application '%1' because it has fatal errors\"\n      },\n\n      \"error\"\n    );\n\n    /*\n     * Warnings\n     */\n    statics.addMessageIds(\n      {\n        \"qx.tool.compiler.class.blockedMangle\":\n          \"The mangling of private variable '%1' has been blocked because it is referenced as a string before it is declared\",\n        \"qx.tool.compiler.translate.invalidMessageId\":\n          \"Cannot interpret message ID %1\",\n        \"qx.tool.compiler.translate.invalidMessageIds\":\n          \"Cannot interpret message ID %1, %2\",\n        \"qx.tool.compiler.translate.invalidMessageIds3\":\n          \"Cannot interpret message ID %1, %2, %3\",\n\n        \"qx.tool.compiler.testForUnresolved\":\n          \"Unexpected termination when testing for unresolved symbols, node type %1\",\n        \"qx.tool.compiler.testForFunctionParameterType\":\n          \"Unexpected type of function parameter, node type %1\",\n        \"qx.tool.compiler.defer.unsafe\":\n          \"Unsafe use of 'defer' method to access external class: %1\",\n        \"qx.tool.compiler.symbol.unresolved\": \"Unresolved use of symbol %1\",\n        \"qx.tool.compiler.environment.unreachable\":\n          \"Environment check '%1' may be indeterminable, add to Manifest/provides/environment or use class name prefix\",\n        \"qx.tool.compiler.compiler.requireLiteralArguments\":\n          \"Wrong class name or filename - expected to find at least %1 but only found [%2]\",\n\n        \"qx.tool.compiler.target.missingAppLibrary\":\n          \"Cannot find the application library for %1\",\n        \"qx.tool.compiler.webfonts.noResources\":\n          \"Assets required for webfont %1 are not available in application %2, consider using @asset to include %3\",\n        \"qx.tool.compiler.target.missingBootJs\":\n          \"There is no reference to index.js script in the index.html copied from %1 (see https://git.io/fh7NI)\",\n        /* eslint-disable no-template-curly-in-string */\n        \"qx.tool.compiler.target.missingPreBootJs\":\n          \"There is no reference to ${preBootJs} in the index.html copied from %1 (see https://git.io/fh7NI)\",\n        /* eslint-enable no-template-curly-in-string */\n        \"qx.tool.compiler.compiler.mixinQxObjectImpl\":\n          \"%1: Mixins should not use `_createQxObjectImpl`, consider using top-level objects instead\",\n\n        \"qx.tool.compiler.maker.appNotHeadless\":\n          \"Compiling application '%1' but the target supports non-headless output, you may find unwanted dependencies are loaded during startup\",\n\n        // Fonts\n        \"qx.tool.compiler.webfonts.deprecated\":\n          \"Manifest uses deprecated provides.webfonts, consider switching to provides.font\",\n        \"qx.tool.compiler.fonts.unresolved\": \"Cannot find font with name %1\"\n      },\n\n      \"warning\"\n    );\n  },\n\n  statics: {\n    __INSTANCE: null,\n\n    /**\n     * Returns the singleton instance\n     */\n    getInstance() {\n      if (!this.__INSTANCE) {\n        this.__INSTANCE = new qx.tool.compiler.Console();\n      }\n      return this.__INSTANCE;\n    },\n\n    /**\n     * Prints the message\n     *\n     * @param args {Object...} arguments\n     */\n    print(...args) {\n      return this.getInstance().print(...args);\n    },\n\n    /**\n     * Decodes the message ID and arguments into a string to be presented in the output\n     *\n     * @param args {Object...} arguments\n     * @return {String} complete message\n     */\n    decode(...args) {\n      return this.getInstance().decode(...args);\n    },\n\n    /**\n     * console.log equivalent, with colorization\n     */\n    log(...args) {\n      return this.getInstance().log(...args);\n    },\n\n    /**\n     * console.debug equivalent, with colorization\n     */\n    debug(...args) {\n      return this.getInstance().debug(...args);\n    },\n\n    /**\n     * console.info equivalent, with colorization\n     */\n    info(...args) {\n      return this.getInstance().info(...args);\n    },\n\n    /**\n     * console.warn equivalent, with colorization\n     */\n    warn(...args) {\n      return this.getInstance().warn(...args);\n    },\n\n    /**\n     * console.warn equivalent, with colorization, only operates if `verbose` is true\n     */\n    trace(...args) {\n      return this.getInstance().trace(...args);\n    },\n\n    /**\n     * console.error equivalent, with colorization\n     */\n    error(...args) {\n      return this.getInstance().error(...args);\n    },\n\n    /**\n     * Message strings for markers, ie errors and warnings.  The strings are stored as statics\n     * here, but that's because the CLI is currently assembled by hand and therefore does not\n     * support translations.  When the CLI is itself compiled by `qx compile`, these strings\n     * will move into translation files.\n     */\n    MESSAGE_IDS: {},\n\n    /**\n     * Adds message IDs; this is a method because it allows other components (eg qxoodoo-cli) to\n     * use it\n     *\n     * @param obj {Object} map of id strings to message text\n     * @param type {String?} the type of message, can be one of \"message\" (default) or \"error\", \"warning\"\n     */\n    addMessageIds(obj, type) {\n      for (var id in obj) {\n        this.MESSAGE_IDS[id] = {\n          id: id,\n          message: obj[id],\n          type: type || \"message\"\n        };\n      }\n    },\n\n    /**\n     * Decodes a marker into a String description\n     * @param marker {Map} containing:\n     *    msgId {String}\n     *    start {Map} containing:\n     *        line {Integer}\n     *        column? {Integer}\n     *    end? {Map} containing:\n     *        line {Integer}\n     *        column? {Integer}\n     *    args? {Object[]}\n     * @param showPosition {Boolean?} whether to include line/column info (default is true)\n     * @return {String}\n     */\n    decodeMarker(marker, showPosition) {\n      var msg =\n        qx.tool.compiler.Console.MESSAGE_IDS[marker.msgId] || marker.msgId;\n      var type = msg.type ? msg.type + \": \" : \"\";\n      var str = \"\";\n      var pos = marker.pos;\n      if (showPosition !== false && pos && pos.start && pos.start.line) {\n        str += \"[\" + pos.start.line;\n        if (pos.start.column) {\n          str += \",\" + pos.start.column;\n        }\n        if (\n          pos.end &&\n          pos.end.line &&\n          pos.end.line !== pos.start.line &&\n          pos.end.column !== pos.start.column\n        ) {\n          str += \" to \" + pos.end.line;\n          if (pos.end.column) {\n            str += \",\" + pos.end.column;\n          }\n        }\n        str += \"] \";\n      }\n      try {\n        str += type + qx.lang.String.format(msg.message, marker.args || []);\n      } catch (e) {\n        throw new Error(`Unknown message id ${marker.msgId}.`);\n      }\n      return str;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}