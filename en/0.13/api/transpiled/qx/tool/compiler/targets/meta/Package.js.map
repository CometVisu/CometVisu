{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "fs",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "appMeta",
    "packageIndex",
    "constructor",
    "call",
    "__appMeta",
    "__packageIndex",
    "__assets",
    "__locales",
    "__translations",
    "__javascriptMetas",
    "__classnames",
    "__javascript",
    "tool",
    "compiler",
    "targets",
    "meta",
    "PackageJavascript",
    "properties",
    "embedAllJavascript",
    "init",
    "check",
    "needsWriteToDisk",
    "apply",
    "members",
    "isEmpty",
    "length",
    "localeId",
    "isEmbedAllJavascript",
    "getPackageIndex",
    "addAsset",
    "asset",
    "push",
    "getAssets",
    "addLocale",
    "localeData",
    "getLocales",
    "addTranslationEntry",
    "entry",
    "translations",
    "msgstr",
    "lang",
    "Type",
    "isArray",
    "msgid",
    "msgid_plural",
    "getTranslations",
    "addJavascriptMeta",
    "jsMeta",
    "getJavascriptMetas",
    "removeJavascriptMeta",
    "Array",
    "remove",
    "addClassname",
    "classname",
    "getClassnames",
    "getJavascript",
    "serializeInto",
    "packages",
    "_this",
    "data",
    "String",
    "uris",
    "appRoot",
    "getApplicationRoot",
    "target",
    "getTarget",
    "privateArtifacts",
    "isPrivateArtifacts",
    "getApplication",
    "getType",
    "transpiledDir",
    "join",
    "getOutputDir",
    "resourceDir",
    "toUri",
    "filename",
    "startsWith",
    "uri",
    "relative",
    "isAddTimestampsToUrls",
    "stat",
    "statSync",
    "throwIfNoEntry",
    "mtimeMs",
    "map",
    "js",
    "getFilename",
    "isNeedsWriteToDisk",
    "unshift",
    "_applyNeedsWriteToDisk",
    "value",
    "setNeedsWriteToDisk",
    "Package"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/targets/meta/Package.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo-compiler\n *\n *    Copyright:\n *      2011-2021 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * ************************************************************************/\n\nconst path = require(\"upath\");\nconst fs = require(\"fs\");\n\n/**\n * A Package is a collection of files and resources, used by either the boot process\n * or by one or more Parts\n */\nqx.Class.define(\"qx.tool.compiler.targets.meta.Package\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   */\n  construct(appMeta, packageIndex) {\n    super();\n    this.__appMeta = appMeta;\n    this.__packageIndex = packageIndex;\n    this.__assets = [];\n    this.__locales = {};\n    this.__translations = {};\n    this.__javascriptMetas = [];\n    this.__classnames = [];\n    this.__javascript = new qx.tool.compiler.targets.meta.PackageJavascript(\n      this.__appMeta,\n      this\n    );\n  },\n\n  properties: {\n    /** Whether to embed all the javascript into the one, main package .js file */\n    embedAllJavascript: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /** If true, this is generated on the fly and needs to be output */\n    needsWriteToDisk: {\n      init: true,\n      check: \"Boolean\",\n      apply: \"_applyNeedsWriteToDisk\"\n    }\n  },\n\n  members: {\n    /** @type {AppMeta} the AppMeta instance */\n    __appMeta: null,\n\n    /** @type {Integer} the package index, 0 == boot package */\n    __packageIndex: -1,\n\n    /** @type {qx.tool.compiler.resources.Asset[]} assets to be included in this package */\n    __assets: null,\n\n    /** @type {Map} locale data, indexed by locale ID */\n    __locales: null,\n\n    /** @type {Map} translations, indexed by message ID */\n    __translations: null,\n\n    /** @type {String[]} array of class names loaded by this package */\n    __classnames: null,\n\n    /** @type {AbstractJavascriptMeta[]} array of Javascript sources loaded by this package */\n    __javascriptMetas: null,\n\n    /** @type {AbstractJavascriptMeta} the javascript generated by this package */\n    __javascript: null,\n\n    /**\n     * Detects whether this package is empty; packages can be added for a number\n     * of reasons, but sometimes they don't actually end up with anything in them.\n     *\n     * Note that this is used to suppress the generation of an additional `package-*.js`\n     * file in the output, and just means that the content of the file should be embedded\n     * (or ignored) instead of written into that package file; however, there can still\n     * be script files which need to be loaded by this package (and that is handled by\n     * the index.js file)\n     *\n     * @return {Boolean}\n     */\n    isEmpty() {\n      if (this.__assets.length > 0) {\n        return false;\n      }\n      for (let localeId in this.__locales) {\n        if (this.__locales[localeId]) {\n          return false;\n        }\n      }\n      for (let localeId in this.__translations) {\n        if (this.__translations[localeId]) {\n          return false;\n        }\n      }\n      if (this.isEmbedAllJavascript()) {\n        if (this.__javascriptMetas.length > 0) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns the package index\n     *\n     * @return {Integer}\n     */\n    getPackageIndex() {\n      return this.__packageIndex;\n    },\n\n    /**\n     * Adds an asset, expected to be unique\n     *\n     * @param asset {qx.tool.compiler.resources.Asset}\n     */\n    addAsset(asset) {\n      this.__assets.push(asset);\n    },\n\n    /**\n     * Returns the array of assets\n     *\n     * @return {qx.tool.compiler.resources.Asset[]}\n     */\n    getAssets() {\n      return this.__assets;\n    },\n\n    /**\n     * Adds locale data\n     *\n     * @param localeId {String}\n     * @param localeData {Object}\n     */\n    addLocale(localeId, localeData) {\n      this.__locales[localeId] = localeData;\n    },\n\n    /**\n     * Returns locale data, as a map where the key is the locale ID\n     *\n     * @return {Map}\n     */\n    getLocales() {\n      return this.__locales;\n    },\n\n    /**\n     * Adds a translation\n     *\n     * @param localeId {String} locale ID\n     * @param entry {Object} translation\n     */\n    addTranslationEntry(localeId, entry) {\n      let translations = this.__translations[localeId];\n      if (!translations) {\n        this.__translations[localeId] = translations = {};\n      }\n      var msgstr = entry.msgstr;\n      if (!qx.lang.Type.isArray(msgstr)) {\n        msgstr = [msgstr];\n      }\n      if (msgstr[0]) {\n        translations[entry.msgid] = msgstr[0];\n      }\n      if (entry.msgid_plural && msgstr[1]) {\n        translations[entry.msgid_plural] = msgstr[1];\n      }\n    },\n\n    /**\n     * Returns a map of all translations, indexed by Locale ID\n     *\n     * @return {Object}\n     */\n    getTranslations() {\n      return this.__translations;\n    },\n\n    /**\n     * Adds a Javascript to be loaded by this package.  You typically need to\n     * call `addClassname` also.\n     *\n     * @param jsMeta {AbstractJavascriptMeta}\n     */\n    addJavascriptMeta(jsMeta) {\n      this.__javascriptMetas.push(jsMeta);\n    },\n\n    /**\n     * Returns a list of all Javascripts to be loaded by this package\n     *\n     * @return {AbstractJavascriptMeta[]}\n     */\n    getJavascriptMetas() {\n      return this.__javascriptMetas;\n    },\n\n    /**\n     * Removes a Javascript\n     *\n     * @param jsMeta {AbstractJavascriptMeta} the javascript to remove\n     */\n    removeJavascriptMeta(jsMeta) {\n      qx.lang.Array.remove(this.__javascriptMetas, jsMeta);\n    },\n\n    /**\n     * Adds a classname to the list which is loaded by this package; this does not\n     * cause the code to be loaded, @see {addJavascriptMeta}.\n     *\n     * @param classname {String}\n     */\n    addClassname(classname) {\n      this.__classnames.push(classname);\n    },\n\n    /**\n     * Returns a list of all classnames\n     *\n     * @return {String[]}\n     */\n    getClassnames() {\n      return this.__classnames;\n    },\n\n    /**\n     * Returns the AbstractJavascriptMeta for this Package\n     *\n     * @return {AbstractJavascriptMeta}\n     */\n    getJavascript() {\n      return this.__javascript;\n    },\n\n    /**\n     * Writes the data into the configuration which is passed to the loader template\n     *\n     * @param packages {Object} the `qx.$$packages` object data\n     */\n    serializeInto(packages) {\n      let data = (packages[String(this.__packageIndex)] = {\n        uris: []\n      });\n\n      let appRoot = this.__appMeta.getApplicationRoot();\n      let target = this.__appMeta.getTarget();\n      let privateArtifacts =\n        target.isPrivateArtifacts() &&\n        this.__appMeta.getApplication().getType() == \"browser\";\n      let transpiledDir = path.join(target.getOutputDir(), \"transpiled\");\n      let resourceDir = path.join(target.getOutputDir(), \"resource\");\n      const toUri = filename => {\n        if (\n          privateArtifacts &&\n          (filename.startsWith(transpiledDir) ||\n            filename.startsWith(resourceDir))\n        ) {\n          let uri = path.relative(target.getOutputDir(), filename);\n          return uri;\n        }\n        let uri = path.relative(appRoot, filename);\n        if (this.__appMeta.isAddTimestampsToUrls()) {\n          let stat = fs.statSync(filename, { throwIfNoEntry: false });\n          if (stat) {\n            uri += \"?\" + stat.mtimeMs;\n          }\n          return uri;\n        } else {\n          return uri;\n        }\n      };\n      if (!this.isEmbedAllJavascript()) {\n        data.uris = this.__javascriptMetas.map(js => toUri(js.getFilename()));\n      }\n      if (this.isNeedsWriteToDisk()) {\n        data.uris.unshift(toUri(this.__javascript.getFilename()));\n      }\n    },\n\n    /**\n     * Apply for needsWriteToDisk property\n     */\n    _applyNeedsWriteToDisk(value) {\n      this.__javascript.setNeedsWriteToDisk(value);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}