{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "babelCore",
    "types",
    "babylon",
    "async",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "collapseMemberExpression",
    "node",
    "done",
    "doCollapse",
    "type",
    "name",
    "result",
    "elements",
    "forEach",
    "element",
    "push",
    "isIdentifier",
    "object",
    "str",
    "property",
    "computed",
    "isCollapsibleLiteral",
    "nodeType",
    "expandMemberExpression",
    "segs",
    "split",
    "expr",
    "memberExpression",
    "identifier",
    "i",
    "length",
    "literalValueToExpression",
    "value",
    "undefined",
    "nullLiteral",
    "booleanLiteral",
    "numericLiteral",
    "stringLiteral",
    "lang",
    "Type",
    "isRegExp",
    "regExpLiteral",
    "toString",
    "isDate",
    "isArray",
    "arr",
    "item",
    "arrayExpression",
    "_typeof",
    "error",
    "properties",
    "key",
    "prop",
    "objectProperty",
    "objectExpression",
    "formatValueAsCode",
    "JSON",
    "stringify",
    "Date",
    "getTime",
    "map",
    "join",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "analyser",
    "className",
    "library",
    "_this",
    "constructor",
    "call",
    "__analyser",
    "__className",
    "__metaStack",
    "__metaDefinitions",
    "__library",
    "__sourceFilename",
    "getClassSourcePath",
    "__requiredClasses",
    "__environmentChecks",
    "provided",
    "required",
    "__requiredAssets",
    "__requiredFonts",
    "__translations",
    "__markers",
    "__haveMarkersFor",
    "__scope",
    "parent",
    "vars",
    "unresolved",
    "__externals",
    "__commonjsModules",
    "__taskQueueDrains",
    "__taskQueue",
    "queue",
    "task",
    "cb",
    "drain",
    "_onTaskQueueDrain",
    "err",
    "compiler",
    "Console",
    "stack",
    "getIgnores",
    "s",
    "addIgnore",
    "__globalSymbols",
    "__privates",
    "__blockedPrivates",
    "__privateMangling",
    "getManglePrivates",
    "CF",
    "ClassFile",
    "addSymbols",
    "getGlobalSymbols",
    "QX_GLOBALS",
    "COMMON_GLOBALS",
    "BROWSER_GLOBALS",
    "members",
    "__numClassesDefined",
    "__translateMessageIds",
    "__inDefer",
    "__inConstruct",
    "__classMeta",
    "__fatalCompileError",
    "__dbClassInfo",
    "__hasDefer",
    "__definingType",
    "__taskQueueDrain",
    "cbs",
    "_waitForTaskQueueDrain",
    "_queueTask",
    "getSourcePath",
    "getOutputPath",
    "getClassOutputPath",
    "load",
    "callback",
    "t",
    "readFile",
    "encoding",
    "src",
    "babelConfig",
    "getBabelConfig",
    "options",
    "clone",
    "modules",
    "extraPreset",
    "plugins",
    "resolve",
    "myPlugins",
    "_babelClassPlugins",
    "config",
    "babelrc",
    "sourceFileName",
    "filename",
    "sourceMaps",
    "presets",
    "CodeElimination",
    "Compiler",
    "JSX_OPTIONS",
    "generatorOpts",
    "compact",
    "parserOpts",
    "allowSuperOutsideMethod",
    "sourceType",
    "passPerPreset",
    "blacklist",
    "transform",
    "ex",
    "addMarker",
    "loc",
    "message",
    "_compileDbClassInfo",
    "keys",
    "pos",
    "lastIndexOf",
    "substring",
    "outputPath",
    "Utils",
    "mkParentPath",
    "mappingUrl",
    "Array",
    "contains",
    "getApplicationTypes",
    "writeFile",
    "code",
    "writeDbInfo",
    "dbClassInfo",
    "dependsOn",
    "assets",
    "translations",
    "markers",
    "fatalCompileError",
    "commonjsModules",
    "deps",
    "getRequiredClasses",
    "__usesJsx",
    "JSX",
    "classname",
    "pragma",
    "dep",
    "ignore",
    "fixAnnos",
    "section",
    "meta",
    "annotations",
    "getOuterClassMeta",
    "events",
    "statics",
    "pm",
    "apply",
    "fm",
    "applyFor",
    "superClass",
    "include",
    "mixins",
    "slice",
    "implement",
    "interfaces",
    "environment",
    "hasDefer",
    "info",
    "getSymbolType",
    "_requireClass",
    "defer",
    "symbolType",
    "deleteReference",
    "j",
    "locations",
    "start",
    "getAssets",
    "fontNames",
    "fonts",
    "fontName",
    "getFont",
    "aliases",
    "aliasMap",
    "themeMeta",
    "themeMetaMap",
    "externals",
    "moduleName",
    "_toConsumableArray",
    "dest",
    "filter",
    "getKeyName",
    "keyName",
    "checkNodeJsDocDirectives",
    "jsdoc",
    "getJsDoc",
    "leadingComments",
    "checkJsDocDirectives",
    "elem",
    "body",
    "where",
    "location",
    "addExternal",
    "_requireAsset",
    "_requireFont",
    "enterFunction",
    "path",
    "idNode",
    "_node$key",
    "id",
    "isClassMember",
    "_topLevel",
    "parentPath",
    "addDeclaration",
    "pushScope",
    "addDecl",
    "param",
    "left",
    "argument",
    "params",
    "_t$__P_479_26$classNa",
    "print",
    "injectCode",
    "concat",
    "injectBlockAst",
    "parse",
    "errorRecovery",
    "program",
    "bodyLines",
    "skip",
    "exitFunction",
    "popScope",
    "FUNCTION_DECL_OR_EXPR",
    "enter",
    "exit",
    "comment",
    "tmp",
    "Parser",
    "parseComment",
    "append",
    "makeMeta",
    "sectionName",
    "functionName",
    "startsWith",
    "access",
    "es6ClassDeclarations",
    "needsQxCoreEnvironment",
    "COLLECT_CLASS_NAMES_VISITOR",
    "MemberExpression",
    "self",
    "collectedClasses",
    "CODE_ELIMINATION_VISITOR",
    "ClassBody",
    "CallExpression",
    "callee",
    "isLiteral",
    "arguments",
    "arg",
    "env",
    "getEnvironment",
    "envValue",
    "replaceWithSourceString",
    "subPath",
    "get",
    "option",
    "find",
    "replaceWith",
    "IfStatement",
    "test",
    "consequent",
    "alternate",
    "remove",
    "LogicalExpression",
    "right",
    "operator",
    "BinaryExpression",
    "indexOf",
    "Boolean",
    "UnaryExpression",
    "collectJson",
    "isProperties",
    "jsonPath",
    "nextJsonPath",
    "encodePrivate",
    "Function",
    "warn",
    "line",
    "column",
    "ALLOWED_KEYS",
    "normal",
    "destruct",
    "objects",
    "mixin",
    "theme",
    "title",
    "colors",
    "borders",
    "decorations",
    "icons",
    "widgets",
    "appearances",
    "patch",
    "boot",
    "isValidExtendClause",
    "every",
    "FUNCTION_NAMES",
    "ensureCreateQxObjectImpl",
    "membersPropertyPath",
    "_membersPropertyNode$",
    "some",
    "p",
    "_p$key",
    "membersPropertyNode",
    "memberNames",
    "it",
    "includes",
    "functionBody",
    "functionBlock",
    "objectMethod",
    "checkValidTopLevel",
    "allowedKeys",
    "isStatic",
    "handleTopLevelMethods",
    "functionNode",
    "isSpecialFunctionName",
    "traverse",
    "VISITOR",
    "CLASS_DEF_VISITOR",
    "ObjectMethod",
    "classDefPath",
    "ObjectProperty",
    "val",
    "isAbstract",
    "isSingleton",
    "pdNode",
    "propName",
    "data",
    "propertyType",
    "nullable",
    "allowNull",
    "check",
    "checks",
    "possibleValues",
    "SYSTEM_CHECKS",
    "symbolData",
    "usage",
    "init",
    "defaultValue",
    "eventNode",
    "eventName",
    "aliasNode",
    "aliasName",
    "aliasValue",
    "TYPE",
    "NewExpression",
    "isAddCreatedAt",
    "fn",
    "callExpression",
    "replace",
    "isVerboseCreatedAt",
    "ExpressionStatement",
    "EmptyStatement",
    "JSXElement",
    "Program",
    "copyInfo",
    "hasLoadDeps",
    "assign",
    "variableDeclaration",
    "variableDeclarator",
    "inject",
    "block",
    "blockStatement",
    "rootFn",
    "expressionStatement",
    "functionExpression",
    "splice",
    "Literal",
    "Identifier",
    "CHECK_FOR_UNDEFINED",
    "FunctionExpression",
    "FunctionStatement",
    "ArrowFunctionExpression",
    "VariableDeclarator",
    "FunctionDeclaration",
    "CatchClause",
    "AssignmentPattern",
    "RestElement",
    "ArrayPattern",
    "SpreadElement",
    "ClassDeclaration",
    "ClassMethod",
    "LabeledStatement",
    "BreakStatement",
    "DO_NOT_WARN_TYPES",
    "AssignmentExpression",
    "BooleanExpression",
    "WhileStatement",
    "ReturnStatement",
    "ConditionalExpression",
    "ForInStatement",
    "ArrayExpression",
    "SwitchStatement",
    "SwitchCase",
    "ThrowStatement",
    "UpdateExpression",
    "SequenceExpression",
    "ContinueStatement",
    "ForStatement",
    "TemplateLiteral",
    "AwaitExpression",
    "DoWhileStatement",
    "ForOfStatement",
    "TaggedTemplateExpression",
    "ClassExpression",
    "OptionalCallExpression",
    "JSXExpressionContainer",
    "JSXSpreadAttribute",
    "root",
    "parentType",
    "addReference",
    "_path$node",
    "_path$node$arguments",
    "_path$node$callee$obj",
    "getStringArg",
    "index",
    "addTranslation",
    "entry",
    "lineNo",
    "cur",
    "msgid",
    "scope",
    "applicationTypes",
    "getInstance",
    "getVerbose",
    "addCommonjsModule",
    "isMemberExpression",
    "_path$node$callee$obj2",
    "thisAlias",
    "originalAlias",
    "alias",
    "aliasIsThis",
    "match",
    "classDef",
    "__pushMeta",
    "typeProp",
    "classDefPojo",
    "objectsNode",
    "membersNode",
    "membersProperty",
    "__popMeta",
    "prototype",
    "hasOwnProperty",
    "ENVIRONMENT_CONSTANTS",
    "symbol",
    "addEnvCheck",
    "thisArgument",
    "thisExpression",
    "unshift",
    "callExpr",
    "methodName",
    "exprSplice",
    "exprUnshift",
    "arg0",
    "arg1",
    "msgid_plural",
    "arg2",
    "hasDeclaration",
    "container",
    "RESERVED_WORDS",
    "Property",
    "functionId",
    "VariableDeclaration",
    "declarations",
    "decl",
    "visitor",
    "packageName",
    "Error",
    "pop",
    "old",
    "isLoadScope",
    "valueName",
    "re",
    "RegExp",
    "isIgnored",
    "DO_NOT_ENCODE",
    "__proto__",
    "__iterator__",
    "__dirname",
    "__filename",
    "coded",
    "db",
    "getDatabase",
    "manglePrefixes",
    "nextPrefix",
    "classPrefixes",
    "prefixes",
    "prefix",
    "stub",
    "linenum",
    "Set",
    "add",
    "trim",
    "endsWith",
    "removeIgnore",
    "requiredOpts",
    "msgId",
    "fragment",
    "marker",
    "end",
    "args",
    "fromArguments",
    "opts",
    "_this2",
    "requireOpts",
    "DEFER_SAFE_SYMBOLS",
    "__findProperty",
    "props",
    "getUnresolvedSymbols",
    "getClassName",
    "word",
    "getNamespace",
    "m",
    "pragmaFrag",
    "throwIfNamespace",
    "NODE_GLOBALS",
    "RHINO_GLOBALS"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/ClassFile.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/* eslint-disable padded-blocks */\n\nvar fs = require(\"fs\");\nvar babelCore = require(\"@babel/core\");\n\nvar types = require(\"@babel/types\");\nvar babylon = require(\"@babel/parser\");\nvar async = require(\"async\");\n\nvar log = qx.tool.utils.LogManager.createLog(\"analyser\");\n\n/**\n * Helper method that collapses the MemberExpression into a string\n * @param node\n * @returns {string}\n */\nfunction collapseMemberExpression(node) {\n  var done = false;\n  function doCollapse(node) {\n    if (node.type == \"ThisExpression\") {\n      return \"this\";\n    }\n    if (node.type == \"Super\") {\n      return \"super\";\n    }\n    if (node.type == \"Identifier\") {\n      return node.name;\n    }\n    if (node.type == \"ArrayExpression\") {\n      var result = [];\n      node.elements.forEach(element => result.push(doCollapse(element)));\n      return result;\n    }\n    if (node.type != \"MemberExpression\") {\n      return \"(\" + node.type + \")\";\n    }\n    if (types.isIdentifier(node.object)) {\n      let str = node.object.name;\n      if (node.property.name) {\n        str += \".\" + node.property.name;\n      } else {\n        done = true;\n      }\n      return str;\n    }\n    var str;\n    if (node.object.type == \"ArrayExpression\") {\n      str = \"[]\";\n    } else {\n      str = doCollapse(node.object);\n    }\n    if (done) {\n      return str;\n    }\n    // `computed` is set if the expression is a subscript, eg `abc[def]`\n    if (node.computed) {\n      done = true;\n    } else if (node.property.name) {\n      str += \".\" + node.property.name;\n    } else {\n      done = true;\n    }\n    return str;\n  }\n\n  return doCollapse(node);\n}\n\nfunction isCollapsibleLiteral(node) {\n  let nodeType = node.type;\n  return (\n    nodeType === \"Literal\" ||\n    nodeType === \"StringLiteral\" ||\n    nodeType === \"NumericLiteral\" ||\n    nodeType === \"BooleanLiteral\" ||\n    nodeType === \"BigIntLiteral\"\n  );\n}\n\n/**\n * Helper method that expands a dotted string into MemberExpression\n * @param str\n * @returns {*}\n */\nfunction expandMemberExpression(str) {\n  var segs = str.split(\".\");\n  var expr = types.memberExpression(\n    types.identifier(segs[0]),\n    types.identifier(segs[1])\n  );\n\n  for (var i = 2; i < segs.length; i++) {\n    expr = types.memberExpression(expr, types.identifier(segs[i]));\n  }\n  return expr;\n}\n\nfunction literalValueToExpression(value) {\n  if (value === null || value === undefined) {\n    return types.nullLiteral();\n  }\n  if (typeof value == \"boolean\") {\n    return types.booleanLiteral(value);\n  }\n  if (typeof value == \"number\") {\n    return types.numericLiteral(value);\n  }\n  if (typeof value == \"string\") {\n    return types.stringLiteral(value);\n  }\n  if (qx.lang.Type.isRegExp(value)) {\n    return types.regExpLiteral(value.toString());\n  }\n  if (qx.lang.Type.isDate(value)) {\n    return types.stringLiteral(value.toString());\n  }\n\n  if (qx.lang.Type.isArray(value)) {\n    var arr = [];\n    value.forEach(function (item) {\n      arr.push(literalValueToExpression(item));\n    });\n    return types.arrayExpression(arr);\n  }\n\n  if (typeof value != \"object\") {\n    log.error(\"Cannot serialise value \" + value + \" into AST\");\n    return types.nullLiteral();\n  }\n\n  var properties = [];\n  for (var key in value) {\n    var expr = literalValueToExpression(value[key]);\n    var prop = types.objectProperty(types.stringLiteral(key), expr);\n    properties.push(prop);\n  }\n  return types.objectExpression(properties);\n}\n\nfunction formatValueAsCode(value) {\n  if (value === undefined) {\n    return \"undefined\";\n  }\n  if (value === null) {\n    return \"null\";\n  }\n  if (typeof value === \"string\") {\n    return JSON.stringify(value);\n  }\n  if (typeof value === \"object\" && value instanceof Date) {\n    return \"new Date(\" + value.getTime() + \")\";\n  }\n  if (qx.lang.Type.isArray(value)) {\n    return \"[\" + value.map(formatValueAsCode).join(\", \") + \"]\";\n  }\n  return value.toString();\n}\n\n/**\n * A class file is parsed and anaysed into an instance of ClassFile; it is\n * connected to the Analyser that found the class so that dependencies can be\n * identified.\n */\nqx.Class.define(\"qx.tool.compiler.ClassFile\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param analyser {Analyser} the Analyser that found the file\n   * @param className {String} the full name of the class\n   * @param library {Library} the Library the class belongs to (note that the class name is\n   *  not always enough to identify the library, eg private source files such as qxWeb.js)\n   */\n  construct(analyser, className, library) {\n    super();\n\n    this.__analyser = analyser;\n    this.__className = className;\n    this.__metaStack = [];\n    this.__metaDefinitions = {};\n    this.__library = library;\n    this.__sourceFilename = analyser.getClassSourcePath(library, className);\n\n    this.__requiredClasses = {};\n    this.__environmentChecks = {\n      provided: {},\n      required: {}\n    };\n\n    this.__requiredAssets = [];\n    this.__requiredFonts = {};\n    this.__translations = [];\n    this.__markers = [];\n    this.__haveMarkersFor = {};\n\n    this.__scope = {\n      parent: null,\n      vars: {},\n      unresolved: {}\n    };\n\n    this.__externals = [];\n    this.__commonjsModules = {};\n\n    this.__taskQueueDrains = [];\n    this.__taskQueue = async.queue(function (task, cb) {\n      task(cb);\n    });\n    this.__taskQueue.drain = this._onTaskQueueDrain;\n    this.__taskQueue.error = err => {\n      qx.tool.compiler.Console.error(err.stack || err);\n    };\n\n    analyser.getIgnores().forEach(s => this.addIgnore(s));\n    this.__globalSymbols = {};\n    this.__privates = {};\n    this.__blockedPrivates = {};\n    this.__privateMangling = analyser.getManglePrivates();\n\n    const CF = qx.tool.compiler.ClassFile;\n    const addSymbols = arr =>\n      arr.forEach(s => (this.__globalSymbols[s] = true));\n    if (analyser.getGlobalSymbols().length) {\n      addSymbols(analyser.getGlobalSymbols());\n    } else {\n      addSymbols(CF.QX_GLOBALS);\n      addSymbols(CF.COMMON_GLOBALS);\n      addSymbols(CF.BROWSER_GLOBALS);\n    }\n  },\n\n  members: {\n    __analyser: null,\n    __className: null,\n    __numClassesDefined: 0,\n    __library: null,\n    __requiredClasses: null,\n    __environmentChecks: null,\n    __requiredAssets: null,\n\n    /** @type{Map<String,Object>} list of fonts indexed by name; the value is an object with `name` and `loc` */\n    __requiredFonts: null,\n\n    __translateMessageIds: null,\n    __scope: null,\n    __inDefer: false,\n    __inConstruct: false,\n    __taskQueue: null,\n    __taskQueueDrains: null,\n    __markers: null,\n    __haveMarkersFor: null,\n    __classMeta: null,\n    __metaStack: null,\n    __metaDefinitions: null,\n    __fatalCompileError: false,\n    __translations: null,\n    __dbClassInfo: null,\n    __hasDefer: null,\n    __definingType: null,\n    __sourceFilename: null,\n    __taskQueueDrain: null,\n    __globalSymbols: null,\n    __privates: null,\n    __blockedPrivates: null,\n    __externals: null,\n    __commonjsModules: null,\n\n    _onTaskQueueDrain() {\n      var cbs = this.__taskQueueDrain;\n      this.__taskQueueDrain = [];\n      cbs.forEach(function (cb) {\n        cb();\n      });\n    },\n\n    _waitForTaskQueueDrain(cb) {\n      if (this.__taskQueue.length() == 0) {\n        cb();\n      } else {\n        this.__taskQueueDrains.push(cb);\n      }\n    },\n\n    _queueTask(cb) {\n      this.__taskQueue.push(cb);\n    },\n\n    /**\n     * Returns the absolute path to the class file\n     * @returns {string}\n     */\n    getSourcePath() {\n      return this.__sourceFilename;\n    },\n\n    /**\n     * Returns the path to the rewritten class file\n     * @returns {string}\n     */\n    getOutputPath() {\n      return this.__analyser.getClassOutputPath(this.__className);\n    },\n\n    /**\n     * Loads the source, transpiles and analyses the code, storing the result in outputPath\n     *\n     * @param callback\n     *          {Function} callback for when the load is completed\n     */\n    load(callback) {\n      var t = this;\n      var className = this.__className;\n      t.__fatalCompileError = false;\n      t.__numClassesDefined = 0;\n\n      fs.readFile(\n        this.getSourcePath(),\n        { encoding: \"utf-8\" },\n        function (err, src) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          var result;\n          try {\n            let babelConfig = t.__analyser.getBabelConfig() || {};\n            let options = qx.lang.Object.clone(babelConfig.options || {}, true);\n            options.modules = false;\n            let extraPreset = [\n              {\n                plugins: []\n              }\n            ];\n\n            if (babelConfig.plugins) {\n              for (let key in babelConfig.plugins) {\n                if (babelConfig.plugins[key] === true) {\n                  extraPreset[0].plugins.push(require.resolve(key));\n                } else if (babelConfig.plugins[key]) {\n                  extraPreset[0].plugins.push([\n                    require.resolve(key),\n                    babelConfig.plugins[key]\n                  ]);\n                }\n              }\n            }\n            let myPlugins = t._babelClassPlugins();\n            var config = {\n              babelrc: false,\n              sourceFileName: t.getSourcePath(),\n              filename: t.getSourcePath(),\n              sourceMaps: true,\n              presets: [\n                [\n                  {\n                    plugins: [myPlugins.CodeElimination]\n                  }\n                ],\n\n                [\n                  {\n                    plugins: [myPlugins.Compiler]\n                  }\n                ],\n\n                [require.resolve(\"@babel/preset-env\"), options],\n                [require.resolve(\"@babel/preset-typescript\")],\n                [\n                  require.resolve(\"@babel/preset-react\"),\n                  qx.tool.compiler.ClassFile.JSX_OPTIONS\n                ]\n              ],\n\n              generatorOpts: {\n                compact: false\n              },\n\n              parserOpts: {\n                allowSuperOutsideMethod: true,\n                sourceType: \"script\"\n              },\n\n              passPerPreset: true\n            };\n\n            if (extraPreset[0].plugins.length) {\n              config.presets.push(extraPreset);\n            }\n            if (this.__privateMangling == \"unreadable\") {\n              config.blacklist = [\"spec.functionName\"];\n            }\n            result = babelCore.transform(src, config);\n          } catch (ex) {\n            qx.tool.compiler.Console.log(ex);\n            t.addMarker(\"compiler.syntaxError\", ex.loc, ex.message);\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__numClassesDefined) {\n            t.addMarker(\"compiler.missingClassDef\");\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__metaDefinitions[className]) {\n            t.addMarker(\n              \"compiler.wrongClassName\",\n              null,\n              className,\n              Object.keys(t.__metaDefinitions).join(\", \")\n            );\n\n            t._compileDbClassInfo();\n          }\n\n          var pos = className.lastIndexOf(\".\");\n          var name = pos > -1 ? className.substring(pos + 1) : className;\n          var outputPath = t.getOutputPath();\n          qx.tool.utils.Utils.mkParentPath(outputPath, function (err) {\n            if (err) {\n              callback(err);\n              return;\n            }\n            let mappingUrl = name + \".js.map\";\n            if (\n              qx.lang.Array.contains(\n                t.__analyser.getApplicationTypes(),\n                \"browser\"\n              )\n            ) {\n              mappingUrl += \"?dt=\" + new Date().getTime();\n            }\n            fs.writeFile(\n              outputPath,\n              result.code + \"\\n\\n//# sourceMappingURL=\" + mappingUrl,\n              { encoding: \"utf-8\" },\n              function (err) {\n                if (err) {\n                  callback(err);\n                  return;\n                }\n                fs.writeFile(\n                  outputPath + \".map\",\n                  JSON.stringify(result.map, null, 2),\n                  { encoding: \"utf-8\" },\n                  function (err) {\n                    if (err) {\n                      callback(err);\n                      return;\n                    }\n                    t._waitForTaskQueueDrain(function () {\n                      callback();\n                    });\n                  }\n                );\n              }\n            );\n          });\n        }\n      );\n    },\n\n    /**\n     * Writes the data for the database; updates the record, which may have been previously\n     * used (so needs to be zero'd out)\n     * @param dbClassInfo {Map}\n     */\n    writeDbInfo(dbClassInfo) {\n      delete dbClassInfo.unresolved;\n      delete dbClassInfo.dependsOn;\n      delete dbClassInfo.assets;\n      delete dbClassInfo.translations;\n      delete dbClassInfo.markers;\n      delete dbClassInfo.fatalCompileError;\n      delete dbClassInfo.commonjsModules;\n      for (var key in this.__dbClassInfo) {\n        dbClassInfo[key] = this.__dbClassInfo[key];\n      }\n    },\n\n    /**\n     * Compiles the DbInfo POJO to be stored in the database about this class\n     * */\n    _compileDbClassInfo() {\n      var t = this;\n      var dbClassInfo = (this.__dbClassInfo = {});\n\n      // Collect the dependencies on other classes\n      var deps = this.getRequiredClasses();\n      if (t.__usesJsx) {\n        let JSX = qx.tool.compiler.ClassFile.JSX_OPTIONS;\n        let classname = JSX.pragma;\n        let pos = classname.lastIndexOf(\".\");\n        classname = classname.substring(0, pos);\n        if (!deps[classname]) {\n          deps[classname] = {};\n        }\n      }\n      for (var name in deps) {\n        var dep = deps[name];\n        if (!dep.ignore) {\n          if (!dbClassInfo.dependsOn) {\n            dbClassInfo.dependsOn = {};\n          }\n          dbClassInfo.dependsOn[name] = dep;\n        }\n      }\n\n      function fixAnnos(section) {\n        if (!section) {\n          return;\n        }\n        Object.keys(section).forEach(name => {\n          if (name[0] == \"@\") {\n            var value = section[name];\n            delete section[name];\n            name = name.substring(1);\n            var meta = section[name];\n            if (meta) {\n              if (!meta.annotations) {\n                meta.annotations = [];\n              }\n              meta.annotations.push(value);\n            }\n          }\n        });\n      }\n\n      var meta = this.getOuterClassMeta();\n      if (meta) {\n        fixAnnos(meta.events);\n        fixAnnos(meta.members);\n        fixAnnos(meta.statics);\n\n        if (meta.properties && meta.members) {\n          Object.keys(meta.properties).forEach(name => {\n            let pm = meta.properties[name];\n            if (pm.apply) {\n              let fm = meta.members[pm.apply];\n              if (fm) {\n                if (!fm.applyFor) {\n                  fm.applyFor = [];\n                }\n                fm.applyFor.push(name);\n              }\n            }\n          });\n        }\n\n        // Class heirararchy\n        dbClassInfo.extends = meta.superClass;\n        dbClassInfo.include = meta.mixins.slice(0);\n        dbClassInfo.implement = meta.interfaces.slice(0);\n      }\n\n      // Environment Checks\n      if (\n        Object.keys(this.__environmentChecks.provided).length ||\n        Object.keys(this.__environmentChecks.required).length\n      ) {\n        dbClassInfo.environment = { provided: [], required: {} };\n        for (let key in this.__environmentChecks.provided) {\n          dbClassInfo.environment.provided.push(key);\n        }\n        for (let key in this.__environmentChecks.required) {\n          dbClassInfo.environment.required[key] =\n            this.__environmentChecks.required[key];\n        }\n      }\n\n      // Save whether the class has a defer method\n      dbClassInfo.hasDefer = this.hasDefer();\n\n      // Unresolved symbols\n      dbClassInfo.unresolved = [];\n      for (let name in this.__scope.unresolved) {\n        let item = this.__scope.unresolved[name];\n        // item is undefined if it has already been removed from the list\n        if (item === undefined) {\n          continue;\n        }\n        // One of multiple classes defined in this file\n        if (this.__metaDefinitions[name]) {\n          continue;\n        }\n        var info = t.__analyser.getSymbolType(name);\n        if (info && info.className) {\n          t._requireClass(info.className, {\n            load: item.load,\n            defer: item.defer\n          });\n        } else if (info && info.symbolType == \"package\") {\n          t.deleteReference(name);\n        } else {\n          dbClassInfo.unresolved.push(item);\n          for (var j = 0; j < item.locations.length; j++) {\n            t.addMarker(\n              \"symbol.unresolved#\" + name,\n              item.locations[j].start,\n              name\n            );\n          }\n        }\n      }\n      if (!dbClassInfo.unresolved.length) {\n        delete dbClassInfo.unresolved;\n      }\n\n      // Assets\n      var assets = this.getAssets();\n      if (assets.length) {\n        dbClassInfo.assets = assets;\n      }\n\n      // Fonts\n      var fontNames = Object.keys(this.__requiredFonts);\n      if (fontNames.length) {\n        dbClassInfo.fonts = fontNames;\n        for (let fontName in this.__requiredFonts) {\n          if (!this.__analyser.getFont(fontName)) {\n            t.addMarker(\n              \"fonts.unresolved#\" + fontName,\n              this.__requiredFonts[fontName].loc.start,\n              fontName\n            );\n          }\n        }\n      }\n\n      if (meta) {\n        if (meta.aliases) {\n          dbClassInfo.aliases = {};\n          for (let name in meta.aliases.aliasMap) {\n            dbClassInfo.aliases[name] = meta.aliases.aliasMap[name];\n          }\n        }\n        if (meta.themeMeta) {\n          dbClassInfo.themeMeta = {};\n          for (let name in meta.themeMeta.themeMetaMap) {\n            dbClassInfo.themeMeta[name] = meta.themeMeta.themeMetaMap[name];\n          }\n        }\n      }\n      if (this.__externals.length) {\n        dbClassInfo.externals = this.__externals;\n      }\n\n      // Translation\n      if (this.__translations.length) {\n        dbClassInfo.translations = this.__translations.slice(0);\n      }\n\n      // Markers\n      if (this.__markers.length) {\n        dbClassInfo.markers = qx.lang.Array.clone(this.__markers);\n      }\n\n      // Errors\n      if (this.__fatalCompileError) {\n        dbClassInfo.fatalCompileError = true;\n      }\n\n      // CommonJS modules\n      if (Object.keys(this.__commonjsModules).length > 0) {\n        dbClassInfo.commonjsModules = {};\n        for (let moduleName in this.__commonjsModules) {\n          dbClassInfo.commonjsModules[moduleName] = [\n            ...this.__commonjsModules[moduleName]\n          ];\n        }\n      }\n\n      return dbClassInfo;\n    },\n\n    /**\n     * Returns the loaded meta data\n     */\n    getOuterClassMeta() {\n      let src = this.__metaDefinitions[this.__className] || null;\n      if (!src) {\n        return src;\n      }\n      let dest = {};\n      Object.keys(src)\n        .filter(key => key[0] != \"_\")\n        .forEach(key => (dest[key] = src[key]));\n      return dest;\n    },\n\n    /**\n     * Babel plugin\n     */\n    _babelClassPlugins() {\n      var t = this;\n\n      function getKeyName(key) {\n        var keyName = key.type == \"StringLiteral\" ? key.value : key.name;\n        return keyName;\n      }\n\n      function checkNodeJsDocDirectives(node) {\n        var jsdoc = getJsDoc(node.leadingComments);\n        if (jsdoc) {\n          checkJsDocDirectives(jsdoc, node.loc);\n        }\n        return jsdoc;\n      }\n\n      function checkJsDocDirectives(jsdoc, loc) {\n        if (!jsdoc) {\n          return jsdoc;\n        }\n        if (jsdoc[\"@use\"]) {\n          jsdoc[\"@use\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"use\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@require\"]) {\n          jsdoc[\"@require\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"require\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@optional\"]) {\n          jsdoc[\"@optional\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@ignore\"]) {\n          jsdoc[\"@ignore\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@external\"]) {\n          jsdoc[\"@external\"].forEach(function (elem) {\n            t.addExternal(elem.body);\n            t._requireAsset(elem.body);\n          });\n        }\n        if (jsdoc[\"@asset\"]) {\n          jsdoc[\"@asset\"].forEach(function (elem) {\n            t._requireAsset(elem.body);\n          });\n        }\n        if (jsdoc[\"@usefont\"]) {\n          jsdoc[\"@usefont\"].forEach(function (elem) {\n            t._requireFont(elem.body, loc);\n          });\n        }\n        return jsdoc;\n      }\n\n      function enterFunction(path, node, idNode) {\n        node = node || path.node;\n        idNode = idNode || node.id || null;\n\n        let isClassMember =\n          t.__classMeta &&\n          t.__classMeta._topLevel &&\n          t.__classMeta._topLevel.keyName == \"members\" &&\n          path.parentPath.parentPath.parentPath == t.__classMeta._topLevel.path;\n        if (idNode) {\n          t.addDeclaration(idNode.name);\n        }\n        t.pushScope(idNode ? idNode.name : null, node, isClassMember);\n\n        function addDecl(param) {\n          if (param.type == \"AssignmentPattern\") {\n            addDecl(param.left);\n          } else if (param.type == \"RestElement\") {\n            t.addDeclaration(param.argument.name);\n          } else if (param.type == \"Identifier\") {\n            t.addDeclaration(param.name);\n          } else if (param.type == \"ArrayPattern\") {\n            param.elements.forEach(elem => addDecl(elem));\n          } else if (param.type == \"ObjectPattern\") {\n            param.properties.forEach(prop => addDecl(prop.value));\n          } else {\n            t.addMarker(\"testForFunctionParameterType\", node.loc, param.type);\n          }\n        }\n        node.params.forEach(param => {\n          addDecl(param);\n        });\n        checkNodeJsDocDirectives(node);\n\n        if (\n          node.key?.name === \"_createQxObjectImpl\" &&\n          t.__classMeta.type !== \"interface\"\n        ) {\n          if (t.__classMeta.type === \"mixin\") {\n            if (t.__classMeta.className === \"qx.core.MObjectId\") {\n              return;\n            }\n            qx.tool.compiler.Console.print(\n              \"qx.tool.compiler.compiler.mixinQxObjectImpl\",\n              t.__classMeta.className\n            );\n          }\n\n          const injectCode = `{\n            let object = qx.core.MObjectId.handleObjects(${\n              t.__classMeta.className ?? \"this.constructor\"\n            }, this, ...arguments);\n            if (object !== undefined) {\n              return object;\n            }\n          }`;\n\n          const injectBlockAst = babylon.parse(injectCode, {\n            errorRecovery: true\n          }).program.body[0];\n          const bodyLines = node.body.body;\n          node.body.body = [injectBlockAst].concat(bodyLines);\n          path.skip();\n        }\n      }\n\n      function exitFunction(path, node) {\n        node = node || path.node;\n        t.popScope(node);\n      }\n\n      var FUNCTION_DECL_OR_EXPR = {\n        enter: path => enterFunction(path),\n        exit: path => exitFunction(path)\n      };\n\n      function getJsDoc(comment) {\n        if (!comment) {\n          return null;\n        }\n        if (!qx.lang.Type.isArray(comment)) {\n          comment = [comment];\n        }\n        var result = {};\n        comment.forEach(comment => {\n          var tmp = qx.tool.compiler.jsdoc.Parser.parseComment(comment.value);\n          for (var key in tmp) {\n            var value = tmp[key];\n            if (!result[key]) {\n              result[key] = value;\n            } else {\n              qx.lang.Array.append(result[key], value);\n            }\n          }\n        });\n\n        return result;\n      }\n\n      function makeMeta(sectionName, functionName, node) {\n        var meta;\n        if (functionName) {\n          var section = t.__classMeta[sectionName];\n          if (section === undefined) {\n            section = t.__classMeta[sectionName] = {};\n          }\n          meta = section[functionName];\n          if (meta === undefined) {\n            meta = section[functionName] = {};\n          }\n        } else {\n          meta = t.__classMeta[sectionName];\n          if (meta === undefined) {\n            meta = t.__classMeta[sectionName] = {};\n          }\n        }\n        meta.location = node.loc;\n\n        if (node.leadingComments) {\n          let jsdoc = checkNodeJsDocDirectives(node);\n          if (jsdoc) {\n            meta.jsdoc = jsdoc;\n          }\n        }\n\n        if (sectionName === \"members\" || sectionName === \"statics\") {\n          if (\n            node.type == \"ObjectMethod\" ||\n            node.value.type === \"FunctionExpression\" ||\n            node.value.type === \"MemberExpression\"\n          ) {\n            meta.type = \"function\";\n          } else {\n            meta.type = \"variable\";\n          }\n          if (node.async) {\n            meta.async = true;\n          }\n          if (functionName.startsWith(\"__\")) {\n            meta.access = \"private\";\n          } else if (functionName.startsWith(\"_\")) {\n            meta.access = \"protected\";\n          } else {\n            meta.access = \"public\";\n          }\n        }\n        return meta;\n      }\n\n      var es6ClassDeclarations = 0;\n      var needsQxCoreEnvironment = false;\n\n      var COLLECT_CLASS_NAMES_VISITOR = {\n        MemberExpression(path) {\n          var self = this;\n          var str = collapseMemberExpression(path.node);\n          t._requireClass(str, { location: path.node.loc });\n          var info = t.__analyser.getSymbolType(str);\n          if (info && info.symbolType == \"class\") {\n            self.collectedClasses.push(str);\n          }\n        }\n      };\n\n      const CODE_ELIMINATION_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        CallExpression(path) {\n          const name = collapseMemberExpression(path.node.callee);\n\n          if (\n            (name === \"qx.core.Environment.select\" ||\n              name === \"qx.core.Environment.get\") &&\n            types.isLiteral(path.node.arguments[0])\n          ) {\n            const arg = path.node.arguments[0];\n            const env = t.__analyser.getEnvironment();\n            const envValue = env[arg.value];\n\n            if (envValue !== undefined) {\n              if (name === \"qx.core.Environment.get\") {\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(envValue));\n                return;\n              } else if (name === \"qx.core.Environment.select\") {\n                const subPath = path.get(\"arguments.1\");\n                let option = subPath.node.properties.find(\n                  prop => prop.key.value === envValue.toString()\n                );\n\n                if (!option) {\n                  // try to find default value\n                  option = subPath.node.properties.find(\n                    prop => prop.key.value === \"default\"\n                  );\n                }\n\n                if (option) {\n                  // path.skip();\n                  path.replaceWith(option.value);\n                  return;\n                }\n              }\n            }\n            needsQxCoreEnvironment = path.node.loc;\n          }\n        },\n\n        IfStatement: {\n          exit(path) {\n            let node = path.node;\n\n            // If it's a literal value, we can eliminate code because we can resolve it now.  This\n            //  is really important for anything wrapped in `if (qx.core.Environment.get(\"qx.debug\")) ...`\n            //  because the `qx.core.Environment.get` is replaced with a literal value and we need to\n            //  use this to remove the unwanted code.\n            if (types.isLiteral(node.test)) {\n              if (node.test.value) {\n                path.replaceWith(node.consequent);\n              } else if (node.alternate) {\n                path.replaceWith(node.alternate);\n              } else {\n                path.remove();\n              }\n            }\n          }\n        },\n\n        LogicalExpression: {\n          exit(path) {\n            let node = path.node;\n            if (types.isLiteral(node.left) && types.isLiteral(node.right)) {\n              let result =\n                (node.operator == \"&&\" &&\n                  node.left.value &&\n                  node.right.value) ||\n                (node.operator == \"||\" &&\n                  (node.left.value || node.right.value));\n              path.replaceWith(literalValueToExpression(result));\n            }\n          }\n        },\n\n        BinaryExpression: {\n          exit(path) {\n            let node = path.node;\n            if (\n              isCollapsibleLiteral(node.left) &&\n              isCollapsibleLiteral(node.right)\n            ) {\n              if (\"+-*/\".indexOf(node.operator) > -1) {\n                let result;\n                switch (node.operator) {\n                  case \"+\":\n                    result = node.left.value + node.right.value;\n                    break;\n                  case \"-\":\n                    result = node.left.value - node.right.value;\n                    break;\n                  case \"/\":\n                    result = node.left.value / node.right.value;\n                    break;\n                  case \"*\":\n                    result = node.left.value * node.right.value;\n                    break;\n                }\n\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(result));\n              } else {\n                let result;\n                switch (node.operator) {\n                  case \"==\":\n                    result = node.left.value == node.right.value;\n                    break;\n                  case \"===\":\n                    result = node.left.value === node.right.value;\n                    break;\n                  case \"!=\":\n                    result = node.left.value != node.right.value;\n                    break;\n                  case \"!==\":\n                    result = node.left.value !== node.right.value;\n                    break;\n                }\n\n                if (result !== undefined) {\n                  path.replaceWith(types.booleanLiteral(Boolean(result)));\n                }\n              }\n            }\n          }\n        },\n\n        UnaryExpression: {\n          exit(path) {\n            if (\n              path.node.operator === \"!\" &&\n              types.isLiteral(path.node.argument)\n            ) {\n              path.replaceWith(types.booleanLiteral(!path.node.argument.value));\n            }\n          }\n        }\n      };\n\n      function collectJson(node, isProperties, jsonPath) {\n        var result;\n\n        if (node.type == \"ObjectExpression\") {\n          result = {};\n          let nextJsonPath = jsonPath ? jsonPath + \".\" : \"\";\n          node.properties.forEach(function (prop) {\n            var key = prop.key.name;\n            if (prop.type == \"ObjectMethod\") {\n              result[key] = \"[[ ObjectMethod Function ]]\";\n            } else {\n              var value = collectJson(\n                prop.value,\n                isProperties,\n                nextJsonPath + key\n              );\n\n              result[key] = value;\n            }\n          });\n        } else if (\n          node.type == \"Literal\" ||\n          node.type == \"StringLiteral\" ||\n          node.type == \"BooleanLiteral\" ||\n          node.type == \"NumericLiteral\" ||\n          node.type == \"NullLiteral\"\n        ) {\n          if (typeof node.value == \"string\") {\n            let isIdentifier = false;\n            if (\n              isProperties &&\n              (jsonPath === \"apply\" ||\n                jsonPath === \"transform\" ||\n                jsonPath === \"isEqual\")\n            ) {\n              isIdentifier = true;\n            }\n            node.value = t.encodePrivate(node.value, isIdentifier, node.loc);\n          }\n          result = node.value;\n        } else if (node.type == \"ArrayExpression\") {\n          result = [];\n          node.elements.forEach(function (elem) {\n            result.push(collectJson(elem, isProperties));\n          });\n        } else if (node.type == \"Identifier\") {\n          node.name = t.encodePrivate(node.name, true, node.loc);\n          result = node.name;\n        } else if (\n          node.type == \"CallExpression\" ||\n          node.type == \"FunctionExpression\" ||\n          node.type == \"ArrowFunctionExpression\"\n        ) {\n          result = new Function(\"[[ Function ]]\");\n        } else if (node.type == \"MemberExpression\") {\n          result = collapseMemberExpression(node);\n        } else if (node.type == \"UnaryExpression\") {\n          if (node.operator == \"-\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"number\") {\n              return tmp * -1;\n            }\n          } else if (node.operator == \"!\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"boolean\") {\n              return !tmp;\n            }\n          }\n          result = \"[[ UnaryExpression ]]\";\n        } else if (\n          node.type == \"NewExpression\" ||\n          node.type == \"BinaryExpression\"\n        ) {\n          result = \"[[ \" + node.type + \" ]]\";\n        } else {\n          t.warn(\n            \"Cannot interpret AST \" +\n              node.type +\n              \" at \" +\n              t.__className +\n              (node.loc\n                ? \" [\" + node.loc.start.line + \",\" + node.loc.start.column + \"]\"\n                : \"\")\n          );\n\n          result = null;\n        }\n        return result;\n      }\n\n      const ALLOWED_KEYS = {\n        class: {\n          static: {\n            \"@\": \"object\",\n            type: \"string\", // String\n            statics: \"object\", // Map\n            environment: \"object\", // Map\n            defer: \"function\" // Function\n          },\n          normal: {\n            \"@\": \"object\",\n            \"@construct\": \"object\",\n            \"@destruct\": \"object\",\n            type: \"string\", // String\n            extend: \"function\", // Function\n            implement: \"object\", // Interface[]\n            include: \"object\", // Mixin[]\n            construct: \"function\", // Function\n            statics: \"object\", // Map\n            properties: \"object\", // Map\n            members: \"object\", // Map\n            environment: \"object\", // Map\n            events: \"object\", // Map\n            defer: \"function\", // Function\n            destruct: \"function\", // Function\n            objects: \"object\" // Map\n          }\n        },\n\n        interface: {\n          extend: \"object\", // Interface | Interface[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\" // Map\n        },\n        mixin: {\n          include: \"object\", // Mixin | Mixin[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\", // Map\n          destruct: \"function\", // Function\n          construct: \"function\", // Function\n          objects: \"object\" // Map\n        },\n        theme: {\n          title: \"string\", // String\n          aliases: \"object\", // Map\n          type: \"string\", // String\n          extend: \"object\", // Theme\n          colors: \"object\", // Map\n          borders: \"object\", // Map\n          decorations: \"object\", // Map\n          fonts: \"object\", // Map\n          icons: \"object\", // Map\n          widgets: \"object\", // Map\n          appearances: \"object\", // Map\n          meta: \"object\", // Map\n          include: \"object\", // Array\n          patch: \"object\", // Array\n          boot: \"function\" // Function\n        }\n      };\n\n      function isValidExtendClause(prop) {\n        if (\n          prop.value.type == \"MemberExpression\" ||\n          prop.value.type == \"Identifier\" ||\n          prop.value.type == \"NullLiteral\"\n        ) {\n          return true;\n        }\n        if (t.__classMeta.type === \"class\") {\n          return false;\n        }\n        if (prop.value.type == \"ArrayExpression\") {\n          return prop.value.elements.every(\n            elem => elem.type == \"MemberExpression\" || elem.type == \"Identifier\"\n          );\n        }\n        return false;\n      }\n\n      const FUNCTION_NAMES = {\n        construct: \"$$constructor\",\n        destruct: \"$$destructor\",\n        defer: null\n      };\n\n      function ensureCreateQxObjectImpl(membersPropertyPath) {\n        // if we are in a class with no top-level properties, don't bother creating _createQxObjectImpl\n        if (\n          !membersPropertyPath.parent.properties.some(\n            p => p.key?.name === \"objects\"\n          )\n        ) {\n          return;\n        }\n\n        const membersPropertyNode = membersPropertyPath.node;\n        const memberNames = membersPropertyNode?.value?.properties?.map(\n          it => it.key.name\n        );\n\n        if (!memberNames) {\n          t.addMarker(\n            \"compiler.membersNotAnObject\",\n            membersPropertyPath.loc,\n            t.__classMeta.type\n          );\n\n          return;\n        }\n\n        if (memberNames.includes(\"_createQxObjectImpl\")) {\n          return;\n        }\n\n        const functionBody = `{\n          return super._createQxObjectImpl(...arguments);\n        }`;\n\n        const functionBlock = babylon.parse(functionBody, {\n          errorRecovery: true\n        }).program.body[0];\n\n        membersPropertyNode.value.properties.push(\n          types.objectMethod(\n            \"method\",\n            types.identifier(\"_createQxObjectImpl\"),\n            [],\n            functionBlock\n          )\n        );\n      }\n\n      function checkValidTopLevel(path) {\n        var prop = path.node;\n        var keyName = getKeyName(prop.key);\n        let allowedKeys = ALLOWED_KEYS[t.__classMeta.type];\n        if (t.__classMeta.type === \"class\") {\n          allowedKeys =\n            allowedKeys[t.__classMeta.isStatic ? \"static\" : \"normal\"];\n        }\n        if (allowedKeys[keyName] === undefined) {\n          t.addMarker(\n            \"compiler.invalidClassDefinitionEntry\",\n            prop.loc,\n            t.__classMeta.type,\n            keyName\n          );\n        }\n      }\n\n      function handleTopLevelMethods(path, keyName, functionNode) {\n        if (keyName == \"defer\") {\n          t.__hasDefer = true;\n          t.__inDefer = true;\n        }\n        var isSpecialFunctionName =\n          Object.keys(FUNCTION_NAMES).includes(keyName);\n        t.__classMeta.functionName = isSpecialFunctionName\n          ? FUNCTION_NAMES[keyName]\n          : keyName;\n        if (isSpecialFunctionName) {\n          makeMeta(keyName, null, functionNode);\n        }\n        enterFunction(path, functionNode);\n        path.traverse(VISITOR);\n        exitFunction(path, functionNode);\n        path.skip();\n        t.__classMeta.functionName = null;\n      }\n\n      var CLASS_DEF_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        ObjectMethod(path) {\n          let functionNode = path.node;\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            enterFunction(path, functionNode);\n            path.traverse(VISITOR);\n            exitFunction(path, functionNode);\n            return;\n          }\n          var keyName = getKeyName(path.node.key);\n          checkValidTopLevel(path);\n          handleTopLevelMethods(path, keyName, functionNode);\n        },\n\n        ObjectProperty(path) {\n          var prop = path.node;\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            path.traverse(VISITOR);\n            return;\n          }\n          var keyName = getKeyName(prop.key);\n          checkValidTopLevel(path);\n          var isSpecialFunctionName =\n            Object.keys(FUNCTION_NAMES).includes(keyName);\n          if (isSpecialFunctionName) {\n            let val = path.node.value;\n            val.leadingComments = (path.node.leadingComments || []).concat(\n              val.leadingComments || []\n            );\n\n            handleTopLevelMethods(path, keyName, val);\n            return;\n          }\n\n          if (keyName == \"extend\") {\n            if (!isValidExtendClause(prop)) {\n              t.addMarker(\"compiler.invalidExtendClause\", prop.value.loc);\n              t.__fatalCompileError = true;\n            } else {\n              t.__classMeta.superClass = collapseMemberExpression(prop.value);\n              t._requireClass(t.__classMeta.superClass, {\n                location: path.node.loc\n              });\n            }\n          } else if (keyName == \"type\") {\n            var type = prop.value.value;\n            t.__classMeta.isAbstract = type === \"abstract\";\n            t.__classMeta.isStatic = type === \"static\";\n            t.__classMeta.isSingleton = type === \"singleton\";\n          } else if (keyName == \"implement\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.interfaces\n            });\n          } else if (keyName == \"include\" || keyName == \"patch\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.mixins\n            });\n          } else if (\n            keyName == \"members\" ||\n            keyName == \"statics\" ||\n            keyName == \"objects\" ||\n            keyName == \"@\"\n          ) {\n            t.__classMeta._topLevel = {\n              path,\n              keyName\n            };\n\n            path.skip();\n            if (keyName === \"members\" && t.__classMeta.type === \"class\") {\n              ensureCreateQxObjectImpl(path);\n            }\n            path.traverse(VISITOR);\n            t.__classMeta._topLevel = null;\n          } else if (keyName == \"properties\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidProperties\", prop.loc || null);\n            } else {\n              prop.value.properties.forEach(function (pdNode) {\n                var propName = getKeyName(pdNode.key);\n                var meta = makeMeta(\"properties\", propName, pdNode);\n                var data = collectJson(pdNode.value, true);\n                meta.name = propName;\n                meta.propertyType = \"new\";\n                [\n                  \"refine\",\n                  \"themeable\",\n                  \"event\",\n                  \"inheritable\",\n                  \"apply\",\n                  \"async\",\n                  \"group\",\n                  \"nullable\",\n                  \"init\",\n                  \"transform\"\n                ].forEach(name => (meta[name] = data[name]));\n                if (data.nullable !== undefined) {\n                  meta.allowNull = data.nullable;\n                }\n                if (data.check !== undefined) {\n                  let checks;\n                  if (qx.lang.Type.isArray(data.check)) {\n                    checks = meta.possibleValues = data.check;\n                  } else {\n                    meta.check = data.check;\n                    checks = [data.check];\n                  }\n                  checks.forEach(check => {\n                    if (!qx.tool.compiler.ClassFile.SYSTEM_CHECKS[check]) {\n                      let symbolData = t.__analyser.getSymbolType(check);\n                      if (symbolData?.symbolType == \"class\") {\n                        t._requireClass(check, {\n                          load: false,\n                          usage: \"dynamic\",\n                          location: path.node.loc\n                        });\n                      }\n                    }\n                  });\n                }\n                if (data.init !== undefined) {\n                  meta.defaultValue = data.init;\n                }\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"events\") {\n            path.skip();\n            if (prop.value.properties) {\n              prop.value.properties.forEach(function (eventNode) {\n                var eventName = getKeyName(eventNode.key);\n                var meta = makeMeta(\"events\", eventName, eventNode);\n                meta.name = eventName;\n                meta.type = collectJson(eventNode.value);\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"aliases\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidAliases\", prop.loc || null);\n            } else {\n              var meta = makeMeta(\"aliases\", null, prop);\n              meta.aliasMap = {};\n              prop.value.properties.forEach(function (aliasNode) {\n                var aliasName = getKeyName(aliasNode.key);\n                var aliasValue = getKeyName(aliasNode.value);\n                meta.aliasMap[aliasName] = aliasValue;\n              });\n            }\n          } else if (keyName == \"meta\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidThemeMeta\", prop.loc || null);\n            } else {\n              let meta = makeMeta(\"themeMeta\", null, prop);\n              meta.themeMetaMap = {};\n              prop.value.properties.forEach(function (node) {\n                var key = getKeyName(node.key);\n                var value = collapseMemberExpression(node.value);\n                meta.themeMetaMap[key] = value;\n              });\n            }\n            path.traverse(VISITOR);\n          }\n        }\n      };\n\n      const TYPE = {\n        \"qx.Class.define\": \"class\",\n        \"qx.Mixin.define\": \"mixin\",\n        \"qx.Theme.define\": \"theme\",\n        \"qx.Interface.define\": \"interface\",\n        \"qx.Bootstrap.define\": \"class\"\n      };\n\n      var VISITOR = {\n        NewExpression: {\n          enter(path) {\n            var str = collapseMemberExpression(path.node.callee);\n            t._requireClass(str, { usage: \"dynamic\", location: path.node.loc });\n          },\n          exit(path) {\n            if (t.__analyser.isAddCreatedAt()) {\n              var fn = types.memberExpression(\n                types.identifier(\"qx\"),\n                types.identifier(\"$$createdAt\")\n              );\n\n              var tmp = types.callExpression(fn, [\n                path.node,\n                types.stringLiteral(t.__className.replace(/\\./g, \"/\") + \".js\"),\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.line : 0\n                ),\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.column : 0\n                ),\n                types.booleanLiteral(t.__analyser.isVerboseCreatedAt())\n              ]);\n\n              path.replaceWith(tmp);\n              path.skip();\n            }\n          }\n        },\n\n        ExpressionStatement: {\n          enter: path => {\n            checkNodeJsDocDirectives(path.node);\n          },\n          exit: path => {\n            checkNodeJsDocDirectives(path.node);\n          }\n        },\n\n        EmptyStatement: path => {\n          checkNodeJsDocDirectives(path.node);\n        },\n\n        JSXElement(path) {\n          t.__usesJsx = true;\n        },\n\n        Program: {\n          exit(path) {\n            let dbClassInfo = t._compileDbClassInfo();\n            let copyInfo = {};\n            let hasLoadDeps = false;\n            if (dbClassInfo.dependsOn) {\n              copyInfo.dependsOn = {};\n              Object.keys(dbClassInfo.dependsOn).forEach(key => {\n                let tmp = (copyInfo.dependsOn[key] = Object.assign(\n                  {},\n                  dbClassInfo.dependsOn[key]\n                ));\n\n                if (tmp.load) {\n                  delete tmp.load;\n                  tmp.require = true;\n                  hasLoadDeps = true;\n                }\n              });\n            }\n            if (dbClassInfo.environment) {\n              copyInfo.environment = dbClassInfo.environment;\n              let required = dbClassInfo.environment.required;\n              if (required) {\n                for (let key in required) {\n                  if (required[key].load) {\n                    hasLoadDeps = true;\n                    break;\n                  }\n                }\n              }\n            }\n            let tmp = types.variableDeclaration(\"var\", [\n              types.variableDeclarator(\n                types.identifier(\"$$dbClassInfo\"),\n                literalValueToExpression(copyInfo)\n              )\n            ]);\n\n            let inject = [tmp];\n            if (hasLoadDeps) {\n              tmp = babylon.parse(\n                \"qx.Bootstrap.executePendingDefers($$dbClassInfo);\"\n              ).program.body;\n              inject.push(tmp[0]);\n            }\n            path.node.body.forEach(node => inject.push(node));\n            tmp = babylon.parse(\n              t.__className + \".$$dbClassInfo = $$dbClassInfo;\"\n            ).program.body;\n            inject.push(tmp[0]);\n            let block = types.blockStatement(inject);\n            let rootFn = types.expressionStatement(\n              types.callExpression(\n                types.functionExpression(null, [], block),\n                []\n              )\n            );\n\n            path.node.body.splice(0, path.node.body.length, rootFn);\n          }\n        },\n\n        // Babel seems to be suppressing ClassDeclarations...\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        Literal(path) {\n          if (typeof path.node.value == \"string\") {\n            path.node.value = t.encodePrivate(path.node.value, false, path.loc);\n          }\n        },\n\n        Identifier(path) {\n          path.node.name = t.encodePrivate(path.node.name, true, path.loc);\n\n          // These are AST node types which do not cause undefined references for the identifier,\n          // eg ObjectProperty could be `{ abc: 1 }`, and `abc` is not undefined, it is an identifier\n          const CHECK_FOR_UNDEFINED = {\n            ObjectProperty: 1,\n            ObjectMethod: 1,\n            FunctionExpression: 1,\n            FunctionStatement: 1,\n            ArrowFunctionExpression: 1,\n            VariableDeclarator: 1,\n            FunctionDeclaration: 1,\n            CatchClause: 1,\n            AssignmentPattern: 1,\n            RestElement: 1,\n            ArrayPattern: 1,\n            SpreadElement: 1,\n            ClassDeclaration: 1,\n            ClassMethod: 1,\n            LabeledStatement: 1,\n            BreakStatement: 1\n          };\n\n          // These are AST node types we expect to find at the root of the identifier, and which will\n          //  not trigger a warning.  The idea is that all of the types in CHECK_FOR_UNDEFINED are types\n          //  that cause references to variables, everything else is in DO_NOT_WARN_TYPES.  But, if anything\n          //  has been missed and is not in either of these lists, throw a warning so that it can be checked\n          const DO_NOT_WARN_TYPES = {\n            AssignmentExpression: 1,\n            BooleanExpression: 1,\n            CallExpression: 1,\n            BinaryExpression: 1,\n            UnaryExpression: 1,\n            WhileStatement: 1,\n            IfStatement: 1,\n            NewExpression: 1,\n            ReturnStatement: 1,\n            ConditionalExpression: 1,\n            LogicalExpression: 1,\n            ForInStatement: 1,\n            ArrayExpression: 1,\n            SwitchStatement: 1,\n            SwitchCase: 1,\n            ThrowStatement: 1,\n            ExpressionStatement: 1,\n            UpdateExpression: 1,\n            SequenceExpression: 1,\n            ContinueStatement: 1,\n            ForStatement: 1,\n            TemplateLiteral: 1,\n            AwaitExpression: 1,\n            DoWhileStatement: 1,\n            ForOfStatement: 1,\n            TaggedTemplateExpression: 1,\n            ClassExpression: 1,\n            OptionalCallExpression: 1,\n            JSXExpressionContainer: 1,\n            JSXSpreadAttribute: 1\n          };\n\n          let root = path;\n          while (root) {\n            let parentType = root.parentPath.node.type;\n            if (\n              parentType == \"MemberExpression\" ||\n              parentType == \"OptionalMemberExpression\"\n            ) {\n              root = root.parentPath;\n              continue;\n            }\n            if (CHECK_FOR_UNDEFINED[parentType]) {\n              return;\n            }\n            if (!DO_NOT_WARN_TYPES[parentType]) {\n              t.addMarker(\"testForUnresolved\", path.node.loc, parentType);\n            }\n            break;\n          }\n\n          let name = collapseMemberExpression(root.node);\n          if (name.startsWith(\"(\")) {\n            return;\n          }\n          let members = name.split(\".\");\n          t.addReference(members, root.node.loc);\n        },\n\n        CallExpression: {\n          enter(path) {\n            function getStringArg(index) {\n              if (index >= path.node.arguments.length) {\n                return null;\n              }\n              let arg = path.node.arguments[index];\n              if (arg.type == \"StringLiteral\") {\n                return arg.value;\n              }\n              return null;\n            }\n\n            function addTranslation(entry) {\n              let lineNo = path.node.loc ? path.node.loc.start.line : 0;\n              let cur = t.__translations[entry.msgid];\n              if (cur) {\n                if (!qx.lang.Type.isArray(cur.lineNo)) {\n                  cur.lineNo = [cur.lineNo];\n                }\n                cur.lineNo.push(lineNo);\n              } else {\n                entry.lineNo = lineNo;\n                t.__translations.push(entry);\n              }\n            }\n\n            // Are we looking at the Identifier `require`, and is it a\n            // function call (identified by having\n            // `path.node.arguments`? If so, we'll add the discovered\n            // module to the list of modules that must be browserified\n            // if the application is destined for the browser.\n            let scope;\n            let applicationTypes = t.__analyser.getApplicationTypes();\n\n            if (\n              path.node.callee.type == \"Identifier\" &&\n              path.node?.callee?.name == \"require\" &&\n              path.node.arguments?.length == 1 &&\n              applicationTypes.includes(\"browser\")\n            ) {\n              // See if this is a reference to global `require` or\n              // something in the scope chain\n              for (scope = t.__scope; scope; scope = scope.parent) {\n                if (scope.vars[\"require\"]) {\n                  // It's in the scope chain. Ignore it.\n                  break;\n                }\n              }\n              // Did we reach top level without finding it in a local scope?\n              if (!scope) {\n                // Yup. It's the global one we're looking for. Ensure the argument is valid.\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    t.addMarker(\n                      \"compiler.requireLiteralArguments\",\n                      path.node.loc,\n                      arg.value\n                    );\n                  } else {\n                    if (qx.tool.compiler.Console.getInstance().getVerbose()) {\n                      qx.tool.compiler.Console.log(\n                        `${t.__className}:${path.node.loc.start.line}:` +\n                          ` automatically detected \\'require(${arg.value})\\``\n                      );\n                    }\n                    t.addCommonjsModule(\n                      arg.value,\n                      t.__className,\n                      path.node.loc.start.line\n                    );\n\n                    // Don't show \"unresolved\" error for `require` since the\n                    // browserified code defines it as a global\n                    t.addIgnore(\"require\");\n                  }\n                }\n              }\n            }\n\n            if (\n              types.isMemberExpression(path.node.callee) ||\n              (es6ClassDeclarations == 0 &&\n                (path.node.callee.object?.type == \"Super\" ||\n                  path.node.callee.type == \"Super\"))\n            ) {\n              let name = collapseMemberExpression(path.node.callee);\n              let thisAlias = null;\n\n              // Try and translate aliases for \"this\"; this is a really simplistic implementation\n              //  because static code path analysis is way out of scope for the compiler, so we're\n              //  only trying to handle code like:\n              //    ```\n              //    var that = this, args = arguments;\n              //    (function() { that.base(args); })();\n              //    ```\n              if (path.node.callee.object?.type == \"Identifier\") {\n                let originalAlias = path.node.callee.object.name;\n                let alias = originalAlias;\n                let aliasIsThis = false;\n                for (let scope = t.__scope; scope; scope = scope.parent) {\n                  while (!aliasIsThis) {\n                    let tmp = scope.vars[alias];\n                    if (tmp === \"this\") {\n                      aliasIsThis = true;\n                      break;\n                    }\n                    if (typeof tmp == \"string\") {\n                      alias = tmp;\n                    } else {\n                      break;\n                    }\n                  }\n                  if (aliasIsThis || scope.isClassMember) {\n                    break;\n                  }\n                }\n                if (aliasIsThis) {\n                  name = \"this\" + name.substring(originalAlias.length);\n                  thisAlias = originalAlias;\n                }\n              }\n\n              // Class definition?  EG `qx.Class.define(...`\n              if (TYPE[name]) {\n                t.__definingType = name.match(/\\.([a-zA-Z]+)\\./)[1];\n                let node = path.node;\n                let className = node.arguments[0].value;\n                let classDef = node.arguments[1];\n\n                // We can only parse objects (eg qx.data.marshal.Json.__toClass creates objects on the fly that we cannot scan)\n                if (classDef.type != \"ObjectExpression\") {\n                  return;\n                }\n\n                // Create new meta\n                t.__pushMeta(className);\n                if (needsQxCoreEnvironment) {\n                  t._requireClass(\"qx.core.Environment\", {\n                    location: needsQxCoreEnvironment,\n                    defer: true\n                  });\n                }\n\n                let meta = makeMeta(\"clazz\", null, path.parent);\n                t.__classMeta.type = TYPE[name];\n                if (\n                  t.__definingType == \"Class\" ||\n                  t.__definingType == \"Bootstrap\"\n                ) {\n                  let typeProp = classDef.properties.find(\n                    prop =>\n                      prop.key.type == \"Identifier\" && prop.key.value == \"type\"\n                  );\n\n                  if (typeProp) {\n                    (t.__classMeta.isStatic == typeProp.value.type) ==\n                      \"Literal\" && typeProp.value.value === \"static\";\n                  }\n                }\n                checkJsDocDirectives(meta.jsdoc, path.node.loc);\n\n                t._requireClass(name, {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n\n                const classDefPojo = path.node.arguments[1];\n                const objectsNode = classDefPojo.properties.find(\n                  prop => prop.key.name == \"objects\"\n                );\n\n                if (objectsNode) {\n                  const membersNode = classDefPojo.properties.find(\n                    prop => prop.key.name == \"members\"\n                  );\n\n                  if (!membersNode) {\n                    const membersProperty = types.objectProperty(\n                      types.identifier(\"members\"),\n                      types.objectExpression([])\n                    );\n\n                    classDefPojo.properties.push(membersProperty);\n                  }\n                }\n\n                path.traverse(CLASS_DEF_VISITOR, { classDefPath: path });\n                t.__popMeta(className);\n              } else if (name == \"qx.core.Environment.add\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.add: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.__environmentChecks.provided[arg.value] = true;\n                    if (\n                      !arg.value.startsWith(t.__className) &&\n                      !Object.prototype.hasOwnProperty.call(\n                        qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n                        arg.value\n                      )\n                    ) {\n                      let symbol = t.__library.getSymbolType(arg.value);\n                      if (!symbol || symbol.symbolType != \"environment\") {\n                        t.addMarker(\n                          \"environment.unreachable\",\n                          path.node.loc,\n                          arg.value\n                        );\n                      }\n                    }\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n              } else if (name == \"qx.core.Environment.get\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.get: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (name == \"qx.core.Environment.select\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.select: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (\n                name == \"this.base\" ||\n                (es6ClassDeclarations == 0 &&\n                  (name == \"super\" || name.startsWith(\"super.\")))\n              ) {\n                let expr;\n\n                // For mixins, there is never a valid time to call this.base() in the constructor; but it is\n                //  OK in methods - but we have to refer to superclass.methodName directly.  For ordinary\n                //  classes, we need to use constructor.methodName.base.\n                if (t.__definingType == \"Mixin\") {\n                  expr = types.callExpression(\n                    expandMemberExpression(\"qx.Mixin.baseClassMethod\"),\n                    [\n                      expandMemberExpression(\"this.constructor\"),\n                      types.identifier(t.__classMeta.className),\n                      types.stringLiteral(t.__classMeta.functionName)\n                    ]\n                  );\n\n                  expr = types.memberExpression(expr, types.identifier(\"call\"));\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.call\"\n                  );\n                } else if (t.__classMeta.className) {\n                  expr = expandMemberExpression(\n                    t.__classMeta.className +\n                      \".superclass\" +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                }\n                let thisArgument = thisAlias\n                  ? types.identifier(thisAlias)\n                  : types.thisExpression();\n                if (name.startsWith(\"super\")) {\n                  path.node.arguments.unshift(thisArgument);\n                } else {\n                  path.node.arguments[0] = thisArgument;\n                }\n                let callExpr = types.callExpression(expr, path.node.arguments);\n                path.replaceWith(callExpr);\n              } else if (\n                name == \"this.base.apply\" ||\n                name == \"this.base.call\"\n              ) {\n                let methodName = name == \"this.base.apply\" ? \"apply\" : \"call\";\n\n                let expr;\n                if (t.__definingType == \"Mixin\") {\n                  expr = expandMemberExpression(\n                    \"this.constructor.superclass.prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.\" + methodName\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__className +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".base.\" +\n                      methodName\n                  );\n                }\n\n                // Original call to this.base.apply would have included arguments in the first element of the array\n                //  here we remove that because it's not needed, specifically changing\n                //    `this.base.apply(this, args)` to\n                //    `this.base.apply(this, args.slice().shift())`\n                let exprSplice = types.callExpression(\n                  types.memberExpression(\n                    path.node.arguments[1],\n                    types.identifier(\"slice\")\n                  ),\n\n                  []\n                );\n\n                let exprUnshift = types.callExpression(\n                  types.memberExpression(exprSplice, types.identifier(\"shift\")),\n                  []\n                );\n\n                let callExpr = types.callExpression(expr, [\n                  path.node.arguments[0],\n                  exprUnshift\n                ]);\n\n                path.replaceWith(callExpr);\n              } else if (name == \"this.self\") {\n                let expr = expandMemberExpression(t.__classMeta.className);\n                path.replaceWith(expr);\n              } else if (\n                name == \"this.tr\" ||\n                name == \"this.marktr\" ||\n                name == \"qx.locale.Manager.tr\" ||\n                name == \"qx.locale.Manager.marktr\"\n              ) {\n                let arg0 = getStringArg(0);\n                if (!arg0) {\n                  t.addMarker(\n                    \"translate.invalidMessageId\",\n                    path.node.loc,\n                    arg0\n                  );\n                } else {\n                  addTranslation({ msgid: arg0 });\n                }\n              } else if (\n                name == \"this.trn\" ||\n                name == \"qx.locale.Manager.trn\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg0, msgid_plural: arg1 });\n                }\n              } else if (\n                name == \"this.trc\" ||\n                name == \"qx.locale.Manager.trc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg1, comment: arg0 });\n                }\n              } else if (\n                name == \"this.trnc\" ||\n                name == \"qx.locale.Manager.trnc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                let arg2 = getStringArg(2);\n                if (!arg0 || !arg1 || !arg2) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds3\",\n                    path.node.loc,\n                    arg0,\n                    arg1,\n                    arg2\n                  );\n                } else {\n                  addTranslation({\n                    msgid: arg1,\n                    msgid_plural: arg2,\n                    comment: arg0\n                  });\n                }\n              } else {\n                let pos = name.lastIndexOf(\".\");\n                // name can be \".concat\" when used with \"[].concat\"\n                if (pos > 0) {\n                  let str = name.substring(0, pos);\n                  if (!t.hasDeclaration(str)) {\n                    t._requireClass(str, {\n                      usage: \"dynamic\",\n                      location: path.node.loc\n                    });\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        MemberExpression: {\n          exit(path) {\n            // regular expression or string property (eg \"aa\".charCodeAt())\n            if (path.node.object.type == \"Literal\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (path.node.object.type == \"ArrayExpression\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (\n              path.node.object.type == \"MemberExpression\" &&\n              path.node.object.object.type == \"ArrayExpression\"\n            ) {\n              return;\n            }\n\n            let name = collapseMemberExpression(path.node);\n            if (name.startsWith(\"(\")) {\n              return;\n            }\n            let members = name.split(\".\");\n\n            // Ignore 'this' references\n            if (members[0] === \"this\") {\n              return;\n            }\n\n            // Global variable or a local variable?\n            if (t.__globalSymbols[members[0]] || t.hasDeclaration(members[0])) {\n              return;\n            }\n\n            let info = t._requireClass(name, { location: path.node.loc });\n            if (!info || !info.className) {\n              // The code `abc.def.ghi()` will produce a member expression for both `abc.def` (two Identifier's)\n              //  and another for `abc.def` and `.ghi` (MemberExpression + Identifier).  Our logic for detecting\n              //  references and unresolved symbols expects the full `abc.def.ghi` so by excluding MemberExpression's\n              //  where the container is also a MemberExpression means that we skip the incomplete `abc.def`\n              if (path.container.type == \"MemberExpression\") {\n                return;\n              }\n              t.addReference(members, path.node.loc);\n            }\n          }\n        },\n\n        ObjectProperty: {\n          exit(path) {\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  path.node.value.id = types.identifier(functionName);\n                }\n              }\n            }\n          }\n        },\n\n        Property(path) {\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName = getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            let functionId = null;\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  functionId = types.identifier(functionName);\n                }\n              }\n            }\n            path.traverse(VISITOR);\n            if (functionId) {\n              path.node.value.id = functionId;\n            }\n            t.__classMeta.functionName = null;\n          }\n        },\n\n        ObjectMethod(path) {\n          // Methods within a top level object (ie \"members\" or \"statics\"), record the method name and meta data\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName =\n              t.__classMeta._topLevel.keyName == \"objects\"\n                ? \"_createQxObjectImpl\"\n                : getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n            t.__classMeta.functionName = null;\n\n            // Otherwise traverse method as normal\n          } else {\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n          }\n        },\n\n        FunctionDeclaration: FUNCTION_DECL_OR_EXPR,\n        FunctionExpression: FUNCTION_DECL_OR_EXPR,\n        ArrowFunctionExpression: FUNCTION_DECL_OR_EXPR,\n\n        VariableDeclaration: {\n          exit(path) {\n            checkNodeJsDocDirectives(path.node);\n            path.node.declarations.forEach(decl => {\n              // Simple `var x` form\n              if (decl.id.type == \"Identifier\") {\n                let value = null;\n                //decl.id.name = t.encodePrivate(decl.id.name, true, decl.loc);\n                if (decl.init) {\n                  if (decl.init.type == \"Identifier\") {\n                    value = decl.init.name;\n                  } else if (decl.init.type == \"ThisExpression\") {\n                    value = \"this\";\n                  }\n                }\n                t.addDeclaration(decl.id.name, value);\n\n                // Object destructuring `var {a,b} = {...}`\n              } else if (decl.id.type == \"ObjectPattern\") {\n                decl.id.properties.forEach(prop => {\n                  if (prop.value.type == \"AssignmentPattern\") {\n                    t.addDeclaration(prop.value.left.name);\n                  } else {\n                    t.addDeclaration(prop.value.name);\n                  }\n                });\n\n                // Array destructuring `var [a,b] = [...]`\n              } else if (decl.id.type == \"ArrayPattern\") {\n                decl.id.elements.forEach(prop => {\n                  if (prop) {\n                    if (prop.type == \"AssignmentPattern\") {\n                      t.addDeclaration(prop.left.name);\n                    } else if (prop.type == \"RestElement\") {\n                      t.addDeclaration(prop.argument.name);\n                    } else {\n                      t.addDeclaration(prop.name);\n                    }\n                  }\n                });\n              }\n            });\n          }\n        },\n\n        ClassDeclaration(path) {\n          t.addDeclaration(path.node.id.name);\n        },\n\n        // Note that AST Explorer calls this MethodDefinition, not ClassMethod\n        ClassMethod: {\n          enter(path) {\n            enterFunction(path, path.node.value, path.node.key);\n          },\n          exit(path) {\n            exitFunction(path, path.node.value, path.node.key);\n          }\n        },\n\n        CatchClause: {\n          enter(path) {\n            t.pushScope(null, path.node);\n            if (path.node.param) {\n              t.addDeclaration(path.node.param.name);\n            }\n          },\n          exit(path) {\n            t.popScope(path.node);\n          }\n        }\n      };\n\n      return {\n        CodeElimination: { visitor: CODE_ELIMINATION_VISITOR },\n        Compiler: { visitor: VISITOR }\n      };\n    },\n\n    /**\n     * Pushes new meta data onto the stack - each meta represents a class being defined,\n     * we operate a stack so that we can handle inner classes\n     *\n     * @param className {String} name of the class being defined\n     */\n    __pushMeta(className) {\n      var pos = (className || \"\").lastIndexOf(\".\");\n      var meta = {\n        className: className,\n        packageName: pos > -1 ? className.substring(0, pos) : null,\n        name: pos > -1 ? className.substring(pos + 1) : className,\n        superClass: null,\n        interfaces: [],\n        mixins: [],\n        functionName: null\n      };\n\n      this.__metaStack.push(meta);\n      this.__classMeta = meta;\n      this.__metaDefinitions[className] = meta;\n      this.__numClassesDefined++;\n    },\n\n    /**\n     * Pops the current meta off the stack, optionally checking that the classname is correct\n     */\n    __popMeta(className) {\n      if (!this.__metaStack.length) {\n        throw new Error(\"No __metaStack entries to pop\");\n      }\n      let meta = this.__metaStack[this.__metaStack.length - 1];\n      if (className && meta.className != className) {\n        throw new Error(\n          \"Wrong __metaStack entries to pop, expected \" +\n            className +\n            \" found \" +\n            meta.className\n        );\n      }\n      this.__metaStack.pop();\n      meta = this.__metaStack[this.__metaStack.length - 1] || null;\n      this.__classMeta = meta;\n    },\n\n    /**\n     * Pushes a new scope on the stack\n     */\n    pushScope(functionName, node, isClassMember) {\n      this.__scope = {\n        functionName: functionName,\n        parent: this.__scope,\n        loc: node.loc,\n        vars: {},\n        unresolved: {},\n        isClassMember: Boolean(isClassMember)\n      };\n    },\n\n    /**\n     * Pops a scope from the stack\n     */\n    popScope(node) {\n      var old = this.__scope;\n      var scope = (this.__scope = this.__scope.parent);\n      var unresolved = scope.unresolved;\n\n      for (var name in old.unresolved) {\n        if (scope.vars[name]) {\n          continue;\n        }\n        var entry = unresolved[name];\n        if (!entry) {\n          entry = unresolved[name] = {\n            name: name,\n            locations: []\n          };\n        }\n        entry.locations.push.apply(\n          entry.locations,\n          old.unresolved[name].locations\n        );\n      }\n    },\n\n    /**\n     * Tests whether the current scope is load-time scope\n     *\n     * @returns {Boolean}\n     */\n    isLoadScope() {\n      return !this.__scope.parent;\n    },\n\n    /**\n     * Tests whether this class has a defer method\n     *\n     * @returns {Boolean}\n     */\n    hasDefer() {\n      return this.__hasDefer;\n    },\n\n    /**\n     * Adds a variable declaration to the current scope; if the symbol was\n     * previously \"unresolved\" it is removed from the unresolved list\n     *\n     * @param name {String} the name of the variabvle being declared\n     * @param valueName {String} the value to assign to the variable\n     */\n    addDeclaration(name, valueName) {\n      if (this.__scope.vars[name] === undefined) {\n        this.__scope.vars[name] = valueName || true;\n        var unresolved = this.__scope.unresolved;\n        delete unresolved[name];\n        var re = new RegExp(name + \"\\\\.\");\n        for (var tmp in unresolved) {\n          if (re.test(tmp)) {\n            delete unresolved[tmp];\n          }\n        }\n      }\n    },\n\n    /**\n     * Tests whether there is a variable declaration accessible to the current\n     * scope, ie including parent scope\n     *\n     * @param name\n     * @returns {Boolean}\n     */\n    hasDeclaration(name) {\n      var pos = name.indexOf(\".\");\n      if (pos > -1) {\n        name = name.substring(0, pos);\n      }\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.vars[name] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Adds a reference to a symbol; unknown symbols are marked as unresolved\n     * @param name\n     * @param loc\n     */\n    addReference(name, loc) {\n      if (!qx.lang.Type.isArray(name)) {\n        name = name.split(\".\");\n      }\n      var scope = this.__scope;\n      if (scope.vars[name[0]] !== undefined) {\n        return;\n      }\n\n      // Global variable or a local variable?\n      if (\n        name[0] === \"this\" ||\n        name[0] === \"[]\" ||\n        this.__globalSymbols[name[0]] ||\n        this.hasDeclaration(name[0])\n      ) {\n        return;\n      }\n\n      let str = \"\";\n      for (var i = 0; i < name.length; i++) {\n        if (i) {\n          str += \".\";\n        }\n        str += name[i];\n        if (this.__globalSymbols[str] || this.isIgnored(str)) {\n          return;\n        }\n      }\n      name = str;\n      if (\n        name == this.__className ||\n        name.startsWith(this.__className + \".\") ||\n        name.startsWith(\"(\")\n      ) {\n        return;\n      }\n\n      if (!scope.unresolved[name]) {\n        scope.unresolved[name] = {\n          name: name,\n          locations: loc ? [loc] : [],\n          load: this.isLoadScope(),\n          defer: this.__inDefer\n        };\n      } else if (loc) {\n        scope.unresolved[name].locations.push(loc);\n      }\n    },\n\n    /**\n     * Repeatably encodes a private symbol name, caching the result; ignores non-private symbols\n     *\n     * @param name {String} symbol name\n     * @param isIdentifier {boolean} whether this is usage as an identifier (and not in a string literal)\n     * @param location {Location} the location of the symbol\n     * @return {String} the encoded name if private, the original name if not private\n     */\n    encodePrivate(name, isIdentifier, location) {\n      const DO_NOT_ENCODE = {\n        __proto__: 1,\n        __iterator__: 1,\n        __dirname: 1,\n        __filename: 1\n      };\n\n      if (\n        DO_NOT_ENCODE[name] ||\n        this.__privateMangling == \"off\" ||\n        !name.startsWith(\"__\") ||\n        !name.match(/^[0-9a-z_$]+$/i)\n      ) {\n        return name;\n      }\n\n      if (name.indexOf(\"__P_\") > -1) {\n        return name;\n      }\n\n      let coded = this.__privates[name];\n      if (!coded) {\n        // Strings have to be handled differently - we need to mangle them, but only if we\n        //  know for sure that they are private members; to do this, we need to see a symbol\n        //  (identifier) first, to know that the string needs to be mangled\n        if (!isIdentifier) {\n          this.__blockedPrivates[name] = true;\n          return name;\n        }\n        if (this.__blockedPrivates[name]) {\n          this.addMarker(\"class.blockedMangle\", location, name);\n          return name;\n        }\n        let db = this.__analyser.getDatabase();\n        if (!db.manglePrefixes) {\n          db.manglePrefixes = {\n            nextPrefix: 1,\n            classPrefixes: {}\n          };\n        }\n        let prefixes = db.manglePrefixes;\n        let prefix = prefixes.classPrefixes[this.__className];\n        if (!prefix) {\n          prefix = \"__P_\" + ++prefixes.nextPrefix + \"_\";\n          prefixes.classPrefixes[this.__className] = prefix;\n        }\n\n        if (this.__privateMangling == \"readable\") {\n          coded = this.__privates[name] =\n            name + prefix + Object.keys(this.__privates).length;\n        } else {\n          coded = this.__privates[name] =\n            prefix + Object.keys(this.__privates).length;\n        }\n      }\n      return coded;\n    },\n\n    /**\n     * Removes a reference from scope; this should only really be used after scanning is complete\n     * @param name\n     */\n    deleteReference(name) {\n      delete this.__scope.unresolved[name];\n      var stub = name + \".\";\n      for (var id in this.__scope.unresolved) {\n        if (id.startsWith(stub)) {\n          delete this.__scope.unresolved[id];\n        }\n      }\n    },\n\n    /**\n     * Adds an external resource which needs to be loaded early\n     *\n     * @param name {String} name of the symbol\n     */\n    addExternal(name) {\n      if (this.__externals.indexOf(name) < 0) {\n        this.__externals.push(name);\n      }\n    },\n\n    /**\n     * Adds a CommonJS module to be browserified\n     *\n     * @param name {String} name of the module\n     */\n    addCommonjsModule(moduleName, className, linenum) {\n      if (!this.__commonjsModules[moduleName]) {\n        this.__commonjsModules[moduleName] = new Set();\n      }\n\n      this.__commonjsModules[moduleName].add(`${className}:${linenum}`);\n    },\n\n    /**\n     * Adds an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    addIgnore(name) {\n      var scope = this.__scope;\n      if (!scope.ignore) {\n        scope.ignore = {};\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => {\n        name = name.trim();\n        if (name.length) {\n          if (name.endsWith(\".*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 2);\n          } else if (name.endsWith(\"*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 1);\n          } else {\n            scope.ignore[name] = true;\n          }\n        }\n      });\n    },\n\n    /**\n     * Tests whether a symbol has already been marked as ignore\n     * @param name {String} symbol name\n     * @return {Boolean} true if ignored\n     */\n    isIgnored(name) {\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.ignore) {\n          if (tmp.ignore[name]) {\n            return true;\n          }\n          for (var key in tmp.ignore) {\n            if (tmp.ignore[key] !== true) {\n              if (name.startsWith(tmp.ignore[key])) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    removeIgnore(name) {\n      var scope = this.__scope;\n      if (!scope) {\n        return;\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => delete scope.ignore[name]);\n    },\n\n    /**\n     * Adds an environment check made by the class\n     *\n     * @param name\n     * @param location {Object?} see _requireClass\n     */\n    addEnvCheck(name, location) {\n      var t = this;\n      var requiredOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\",\n        location: location\n      };\n\n      var dest = t.__environmentChecks.required[name];\n      if (!dest) {\n        dest = t.__environmentChecks.required[name] = {};\n      }\n      if (requiredOpts.load) {\n        dest.load = true;\n      }\n      if (requiredOpts.defer) {\n        dest.defer = true;\n      }\n      if (requiredOpts.construct) {\n        dest.construct = true;\n      }\n      t._requireClass(\"qx.core.Environment\", { location: location });\n      let info = t.__analyser.getSymbolType(name);\n      if (\n        !Object.prototype.hasOwnProperty.call(\n          qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n          name\n        )\n      ) {\n        // Generally speaking, we try to have as few load dependencies as possible, and this\n        // means that in a class' `.defer()` we will still allow for runtime loading.  However,\n        // we pull environment checks up as this is a common use case; the problem this is trying\n        // to solve is instances where the feature detection class is loaded after the class which\n        // implements the polyfill, and the polyfill's defer method is then installing a polyfill\n        // when it does not need to (and should not do so).  For example, `qx.bom.client.EcmaScript`\n        // *must* load and have its defer called before the `qx.lang.normalize.Object` class has\n        // it's defer called.\n        let load = dest.load;\n        if (info && info.symbolType == \"environment\") {\n          load = true;\n        }\n        t._requireClass(name, { load: load, location: location });\n        if (info && info.symbolType == \"environment\") {\n          dest.className = info.className;\n        }\n      }\n    },\n\n    /**\n     * Adds a marker (eg warning or error)\n     *\n     * @param msgId {String} the marker message ID (@see qx.tool.compiler.Marker)\n     * @param pos {Object||null} position map; may contain a Map containing\n     *  {line,column?}, or a Map {start:{line,column}, end: {line,column}}.\n     */\n    addMarker(msgId, pos) {\n      msgId = \"qx.tool.compiler.\" + msgId;\n\n      let key = msgId;\n      let fragment = msgId.indexOf(\"#\");\n      if (fragment > -1) {\n        msgId = msgId.substring(0, fragment);\n      } else {\n        // Give each marker a unique key based on msgId and the line; use this to suppress\n        //  multiple markers\n        key += \"#\";\n        if (pos) {\n          if (pos.line) {\n            key += pos.line;\n          } else if (pos.start && pos.start.line) {\n            key += pos.start.line;\n          }\n        }\n      }\n\n      if (this.__haveMarkersFor[key]) {\n        return;\n      }\n      this.__haveMarkersFor[key] = true;\n\n      let marker = {\n        msgId: msgId\n      };\n\n      // Extract position\n      if (pos) {\n        if (pos.line) {\n          pos = { start: pos };\n        }\n        if (pos.start) {\n          let tmp = { line: pos.start.line };\n          if (pos.start.column) {\n            tmp.column = pos.start.column;\n          }\n          marker.pos = { start: tmp };\n          if (pos.end && pos.end.line) {\n            let tmp = { line: pos.end.line };\n            if (pos.end.column) {\n              tmp.column = pos.end.column;\n            }\n            marker.pos.end = tmp;\n          }\n        }\n      }\n      let args = qx.lang.Array.fromArguments(arguments, 2);\n      if (args.length) {\n        marker.args = args;\n      }\n      this.__markers.push(marker);\n    },\n\n    /**\n     * Adds a required class\n     *\n     * @param name {String} the name of the class\n     * @param opts {Map?} which is:\n     *  where {\"ignore\"|\"require\"|\"use\"|null} where it's mentioned\n     *  load {Boolean?} whether it is a load-time dependency or not\n     *  defer {Boolean?} whether the dependency is in defer or not\n     *  location {Map?} location of the token that caused the reference\n     * @return {Map?} info about the symbol type of the named class, @see {Analyser.getSymbolType}\n     */\n    _requireClass(name, opts) {\n      if (qx.lang.Type.isArray(name)) {\n        name.forEach(name => this._requireClass(name));\n        return null;\n      }\n      let t = this;\n      if (name == this.__className) {\n        return null;\n      }\n      if (!name) {\n        throw new Error(\"No classname\");\n      }\n      if (this.isIgnored(name)) {\n        return null;\n      }\n\n      let requireOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\"\n      };\n\n      if (opts) {\n        for (let key in opts) {\n          requireOpts[key] = opts[key];\n        }\n      }\n\n      let info = t.__analyser.getSymbolType(name);\n      let symbolType = info ? info.symbolType : null;\n      let className = info ? info.className : null;\n      if (symbolType != \"package\" && className && className != t.__className) {\n        // Re-check the class name as ignored if this is a member\n        if (symbolType == \"member\" && t.isIgnored(className)) {\n          return null;\n        }\n        let data = t.__requiredClasses[className];\n        if (!data) {\n          data = t.__requiredClasses[className] = {};\n        }\n\n        if (requireOpts.where !== undefined) {\n          if (requireOpts.where == \"ignore\") {\n            data.ignore = true;\n          } else if (requireOpts.where == \"require\") {\n            data.require = true;\n          }\n        }\n        if (requireOpts.load) {\n          data.load = true;\n          if (requireOpts.usage === \"dynamic\") {\n            if (data.usage !== \"static\") {\n              data.usage = \"dynamic\";\n            }\n            data.load = true;\n          } else if (!data.load) {\n            data.load = true;\n            data.usage = \"static\";\n          }\n        }\n        if (requireOpts.defer) {\n          if (requireOpts.load) {\n            data.defer = \"load\";\n          } else if (data.defer !== \"load\") {\n            data.defer = \"runtime\";\n          }\n\n          if (!name.startsWith(t.__className)) {\n            if (\n              !qx.tool.compiler.ClassFile.DEFER_SAFE_SYMBOLS.some(function (\n                symbol\n              ) {\n                return name.startsWith(symbol);\n              })\n            ) {\n              // Temporarily disabled until Qooxdoo framework catches up\n              // t.addMarker(\"defer.unsafe\", (opts && opts.location)||null, name);\n            }\n          }\n        }\n        if (requireOpts.construct) {\n          data.construct = true;\n        }\n        t.deleteReference(className);\n      }\n      return info;\n    },\n    /**\n     * Adds a required asset\n     * @param path\n     */ _requireAsset(path) {\n      if (path.indexOf(\"/\") < 0 && path.indexOf(\".\") > -1) {\n        path = path.replace(/\\./g, \"/\");\n      }\n      if (!qx.lang.Array.contains(this.__requiredAssets, path)) {\n        this.__requiredAssets.push(path);\n      }\n    },\n    /**\n     * Returns the assets required by the class\n     * @returns\n     */ getAssets() {\n      return this.__requiredAssets;\n    },\n\n    /**\n     * Adds a required font\n     * @param {String} name  name of the font\n     * @param {Location} the Babel location\n     */\n    _requireFont(name, loc) {\n      this.__requiredFonts[name] = {\n        name,\n        loc\n      };\n    },\n\n    /**\n     * Finds an object property in a node tree (not a Qooxdoo property, an\n     * object property)\n     *\n     * @param props\n     * @param name\n     * @returns\n     */\n    __findProperty(props, name) {\n      for (let i = 0; i < props.length; i++) {\n        let prop = props[i];\n        if (prop.type == \"Property\") {\n          if (prop.key.type == \"Identifier\" && prop.key.name == name) {\n            return prop;\n          }\n          if (prop.key.type == \"StringLiteral\" && prop.key.value == name) {\n            return prop;\n          }\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Returns the list of required classes (dependencies)\n     *\n     * @returns\n     */\n    getRequiredClasses() {\n      return this.__requiredClasses;\n    },\n\n    /**\n     * Returns a list of unresolved symbols\n     *\n     * @returns\n     */\n    getUnresolvedSymbols() {\n      return this.__scope.unresolved;\n    },\n\n    /**\n     * Returns the name of the class being compiled\n     * @returns {null}\n     */\n    getClassName() {\n      return this.__className;\n    }\n  },\n\n  defer(statics) {\n    statics.RESERVED_WORDS = {};\n    let str =\n      \"abstract  arguments await  boolean break byte  case  catch char  class  const continue debugger  default delete  do \" +\n      \"double  else  enum eval export extends  false final finally float for function goto  if  implements  import \" +\n      \"in  instanceof  int interface let  long  native  new null  package private protected public  return  short static \" +\n      \"super  switch  synchronized  this throw throws  transient true try typeof  var void volatile  while with  yield\";\n    str.split(/\\s+/).forEach(word => (statics.RESERVED_WORDS[word] = true));\n    statics.SYSTEM_CHECKS = {};\n    \"Boolean,String,Number,Integer,PositiveNumber,PositiveInteger,Error,RegExp,Object,Array,Map,Function,Date,Node,Element,Document,Window,Event,Class,Mixin,Interface,Theme,Color,Decorator,Font\"\n      .split(\",\")\n      .forEach(word => (statics.SYSTEM_CHECKS[word] = true));\n  },\n\n  statics: {\n    /**\n     * Returns the root namespace from the classname, or null if it cannot be determined\n     * @param className\n     * @returns {*|null}\n     */\n    getNamespace(className) {\n      var m = className.match(/^([^.]+)\\./);\n      return (m && m[1]) || null;\n    },\n\n    /**\n     * These options are passed to Babel for JSX compilation; they can be changed by the CLI etc\n     * as needed.\n     *\n     * Note that at the moment they use a class that does not exist!  `qx.html.Jsx` is coming soon\n     * to a PR near you, but in the mean time you could use the compile.json `jsx` setting to\n     * change these to something else, eg `{ pragma: \"jsx.dom\", pragmaFrag: \"jsx.Fragment }` and\n     * use https://github.com/alecsgone/jsx-render in your application's code.\n     */\n    JSX_OPTIONS: {\n      pragma: \"qx.html.Jsx.createElement\",\n      pragmaFrag: \"qx.html.Jsx.FRAGMENT\",\n      throwIfNamespace: false\n    },\n\n    /**\n     * Classes which are safe to access from defer methods (in addition to the class being defined)\n     */\n    DEFER_SAFE_SYMBOLS: [\n      \"qx.core.Environment\",\n      \"qx.Bootstrap\",\n      \"qx.core.Aspect\"\n    ],\n\n    /**\n     * List of global symbols to be ignored\n     */\n    QX_GLOBALS: [\n      \"qx.$$domReady\",\n      \"qx.$$environment\",\n      \"qx.$$libraries\",\n      \"qx.$$loader\",\n      \"qx.$$locales\",\n      \"qx.$$namespaceRoot\",\n      \"qx.$$resources\",\n      \"qx.$$packageData\",\n      \"qx.$$start\",\n      \"qx.$$translations\"\n    ],\n\n    COMMON_GLOBALS: [\n      \"Array\",\n      \"ArrayBuffer\",\n      \"Boolean\",\n      \"Date\",\n      \"DataView\",\n      \"EvalError\",\n      \"Error\",\n      \"Float32Array\",\n      \"Float64Array\",\n      \"Function\",\n      \"GeneratorFunction\",\n      \"Generator\",\n      \"Infinity\",\n      \"Int8Array\",\n      \"Int16Array\",\n      \"Int32Array\",\n      \"JSON\",\n      \"Map\",\n      \"Math\",\n      \"NaN\",\n      \"Number\",\n      \"Object\",\n      \"Proxy\",\n      \"Promise\",\n      \"RangeError\",\n      \"ReferenceError\",\n      \"Reflect\",\n      \"RegExp\",\n      \"Set\",\n      \"String\",\n      \"Symbol\",\n      \"SyntaxError\",\n      \"TypedArray\",\n      \"TypeError\",\n      \"Uint8Array\",\n      \"Uint8ClampedArray\",\n      \"Uint16Array\",\n      \"Uint32Array\",\n      \"URIError\",\n      \"URL\",\n      \"WeakMap\",\n      \"WeakSet\",\n      \"arguments\",\n      \"atob\",\n      \"btoa\",\n      \"console\",\n      \"clearInterval\",\n      \"clearTimeout\",\n      \"decodeURI\",\n      \"decodeURIComponent\",\n      \"document\",\n      \"encodeURI\",\n      \"encodeURIComponent\",\n      \"escape\",\n      \"error\",\n      \"eval\",\n      \"isNaN\",\n      \"isFinite\",\n      \"navigator\",\n      \"parseInt\",\n      \"parseFloat\",\n      \"setInterval\",\n      \"setTimeout\",\n      \"undefined\",\n      \"unescape\",\n      \"window\"\n    ],\n\n    BROWSER_GLOBALS: [\n      \"ActiveXObject\",\n      \"Blob\",\n      \"CustomEvent\",\n      \"DOMParser\",\n      \"DOMException\",\n      \"Event\",\n      \"FileReader\",\n      \"FormData\",\n      \"Image\",\n      \"MutationObserver\",\n      \"XPathResult\",\n      \"XMLHttpRequest\",\n      \"XMLSerializer\",\n      \"XPathEvaluator\",\n      \"alert\",\n      \"document\",\n      \"history\",\n      \"location\",\n      \"navigator\",\n      \"performance\",\n      \"getComputedStyle\",\n      \"localStorage\"\n    ],\n\n    NODE_GLOBALS: [\n      \"Module\",\n      \"Buffer\",\n      \"require\",\n      \"module\",\n      \"process\",\n      \"setImmediate\",\n      \"__dirname\",\n      \"__filename\"\n    ],\n\n    RHINO_GLOBALS: [\"Packages\", \"java\"],\n\n    RESERVED_WORDS: null,\n\n    /**\n     * These are the constants which are answered by Qooxdoo qx.core.Environment; we use out own copy here and\n     * not the one available in qx.core.Environment._defaults because we need to use the version which is appropriate\n     * for the version of Qooxdoo being compiled, not the one that this CLI is compiled with\n     */\n    ENVIRONMENT_CONSTANTS: {\n      // an always-true key (e.g. for use in qx.core.Environment.filter() calls)\n      true: true,\n      // old settings retTrue\n      \"qx.allowUrlSettings\": false,\n      \"qx.allowUrlVariants\": false,\n      \"qx.debug.property.level\": 0,\n      // old variants\n      // make sure to reflect all changes to qx.debug here in the bootstrap class!\n      \"qx.debug\": true,\n      \"qx.debug.ui.queue\": true,\n      \"qx.debug.touchpad.detection\": false,\n      \"qx.aspects\": false,\n      \"qx.dynlocale\": true,\n      \"qx.dyntheme\": true,\n      \"qx.blankpage\": \"qx/static/blank.html\",\n      \"qx.debug.databinding\": false,\n      \"qx.debug.dispose\": false,\n      // generator optimization vectors\n      \"qx.optimization.basecalls\": false,\n      \"qx.optimization.comments\": false,\n      \"qx.optimization.privates\": false,\n      \"qx.optimization.strings\": false,\n      \"qx.optimization.variables\": false,\n      \"qx.optimization.variants\": false,\n      // qooxdoo modules\n      \"module.databinding\": true,\n      \"module.logger\": true,\n      \"module.property\": true,\n      \"module.events\": true,\n      \"qx.nativeScrollBars\": false,\n      \"qx.automaticMemoryManagement\": true,\n      \"qx.promise\": true,\n      \"qx.promise.warnings\": true,\n      \"qx.promise.longStackTraces\": true\n    },\n\n    SYSTEM_CHECKS: null\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}