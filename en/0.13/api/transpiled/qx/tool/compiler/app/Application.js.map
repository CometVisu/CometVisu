{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "path",
    "require",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "classname",
    "constructor",
    "call",
    "initType",
    "args",
    "lang",
    "Array",
    "fromArguments",
    "arguments",
    "t",
    "__classes",
    "forEach",
    "arg",
    "Type",
    "isArray",
    "append",
    "push",
    "set",
    "include",
    "exclude",
    "properties",
    "type",
    "init",
    "check",
    "apply",
    "environment",
    "nullable",
    "analyser",
    "theme",
    "name",
    "title",
    "description",
    "outputPath",
    "bootPath",
    "templatePath",
    "publish",
    "deploy",
    "standalone",
    "transform",
    "bundleInclude",
    "bundleExclude",
    "loaderTemplate",
    "writeIndexHtmlToRoot",
    "localModules",
    "members",
    "__loadDeps",
    "__parts",
    "__requiredLibs",
    "__fatalCompileErrors",
    "__partsDeps",
    "isBrowserApp",
    "getType",
    "calcDependencies",
    "Console",
    "tool",
    "compiler",
    "getInstance",
    "getAnalyser",
    "db",
    "getDatabase",
    "allDeps",
    "utils",
    "IndexedArray",
    "fatalCompileErrors",
    "partsByName",
    "parts",
    "bootPart",
    "classDataByClassname",
    "length",
    "part",
    "getName",
    "Error",
    "decode",
    "partData",
    "getInclude",
    "getExclude",
    "classes",
    "dependsOn",
    "combine",
    "getCombine",
    "minify",
    "getMinify",
    "match",
    "app",
    "Application",
    "createWildcardMatchFunction",
    "boot",
    "createClassData",
    "classData",
    "best",
    "actual",
    "result",
    "lastMatch",
    "undefined",
    "print",
    "Assert",
    "assertTrue",
    "exact",
    "needed",
    "neededIndex",
    "stack",
    "compileAllRemainingDeps",
    "deps",
    "checked",
    "depNames",
    "search",
    "info",
    "classInfo",
    "depName",
    "dd",
    "load",
    "defer",
    "contains",
    "addDepDepth",
    "addDep",
    "fatalCompileError",
    "environmentLoadDeps",
    "required",
    "key",
    "envInfo",
    "className",
    "deferDeps",
    "remove",
    "externals",
    "external",
    "indexOf",
    "getLength",
    "getItem",
    "__expandClassnames",
    "getRequiredClasses",
    "getTheme",
    "keys",
    "partname",
    "checkPart",
    "some",
    "toArray",
    "requiredLibs",
    "assets",
    "asset",
    "pos",
    "ns",
    "substring",
    "findLibrary",
    "libraryName",
    "getFatalCompileErrors",
    "getUris",
    "uris",
    "add",
    "def",
    "replace",
    "getDependencies",
    "getPartsDependencies",
    "getRequiredLibraries",
    "getAssetUris",
    "target",
    "resManager",
    "aliases",
    "getAliases",
    "tmp",
    "alias",
    "themeInfo",
    "themeMeta",
    "libraryLookup",
    "classNames",
    "slice",
    "i",
    "uri",
    "prefix",
    "mappedPrefix",
    "findLibrariesForResource",
    "library",
    "getNamespace",
    "rm",
    "getResourceManager",
    "addExternalAssets",
    "arr",
    "msgId",
    "filename",
    "getAsset",
    "str",
    "getDestFilename",
    "relative",
    "join",
    "getOutputDir",
    "getLibrary",
    "lib",
    "getAddScript",
    "getAddCss",
    "m",
    "capture",
    "left",
    "right",
    "value",
    "removeAt",
    "sort",
    "lastAsset",
    "splice",
    "getFonts",
    "fonts",
    "fontName",
    "getClassName",
    "addPart",
    "getParts",
    "getCalculatedEnvironment",
    "Values",
    "merge",
    "getEnvironment",
    "__P_484_7",
    "names",
    "getLibraries",
    "symbols",
    "getKnownSymbols",
    "symbol",
    "startsWith",
    "postfix",
    "endsWith",
    "_applyType",
    "oldValue",
    "loader",
    "getTemplatePath",
    "setLoaderTemplate",
    "__transformArray",
    "__P_484_1",
    "statics",
    "code",
    "spec",
    "nsDepth",
    "Function"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/app/Application.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nconst path = require(\"upath\");\n\nqx.Class.define(\"qx.tool.compiler.app.Application\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   * @param classname {String|String[]} [, classname...]\n   */\n  construct(classname) {\n    super();\n    this.initType();\n    var args = qx.lang.Array.fromArguments(arguments);\n    var t = this;\n    this.__classes = [];\n    args.forEach(function (arg) {\n      if (qx.lang.Type.isArray(arg)) {\n        qx.lang.Array.append(t.__classes, arg);\n      } else {\n        t.__classes.push(arg);\n      }\n    });\n    this.set({ include: [], exclude: [] });\n  },\n\n  properties: {\n    /**\n     * The type of application to generate; note that changing this will change the `loaderTemplate`\n     * and `theme` properties\n     */\n    type: {\n      init: \"browser\",\n      check: [\"browser\", \"rhino\", \"node\"],\n      apply: \"_applyType\"\n    },\n\n    /**\n     * Environment property map\n     */\n    environment: {\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * The Analyser instance\n     */\n    analyser: {\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * Application theme (class name)\n     */\n    theme: {\n      init: \"qx.theme.Simple\",\n      check: \"String\"\n    },\n\n    /**\n     * The name of the application, used for script directory file unless outputPath is set\n     */\n    name: {\n      init: \"index\",\n      nullable: false,\n      check: \"String\"\n    },\n\n    /**\n     * The human readable, customer facing title of the application - it's used to customise the title\n     * of the index.html page\n     */\n    title: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /**\n     * The human readable, customer facing description of the application - it's used to list applications\n     * in `qx serve`\n     */\n    description: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /**\n     * Output path, relative to the target's output path\n     */\n    outputPath: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /**\n     * Boot path, relative to the target's output path\n     */\n    bootPath: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /**\n     * template path\n     */\n    templatePath: {\n      init: \"\",\n      nullable: false,\n      check: \"String\",\n      apply: \"_applyType\"\n    },\n\n    /**\n     * Whether this app is to be published (e.g. in the PackageBrowser).\n     * Default is true.\n     */\n    publish: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Whether this app is to be deployed\n     * Default is true.\n     */\n    deploy: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Whether this app can run on its own (true, default) or is part of another\n     * application (false)\n     */\n    standalone: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Classes to include with the build\n     */\n    include: {\n      nullable: false,\n      check: \"Array\",\n      transform: \"__transformArray\"\n    },\n\n    /**\n     * Classes to exclude when building\n     */\n    exclude: {\n      nullable: false,\n      check: \"Array\",\n      transform: \"__transformArray\"\n    },\n\n    /**\n     * Classes to bundle together for delivery to the client\n     */\n    bundleInclude: {\n      init: null,\n      nullable: true,\n      check: \"Array\",\n      transform: \"__transformArray\"\n    },\n\n    /**\n     * Classes to exclude from bundling together for delivery to client\n     */\n    bundleExclude: {\n      init: null,\n      nullable: true,\n      check: \"Array\",\n      transform: \"__transformArray\"\n    },\n\n    /**\n     * Template file used to create index.js; note that this is changed when the `type` property\n     * is changed\n     */\n    loaderTemplate: {\n      nullable: false,\n      check: \"String\"\n    },\n\n    /**\n     * Writes the index.html into root instead of app dir\n     */\n    writeIndexHtmlToRoot: {\n      init: false,\n      check: \"Boolean\"\n    },\n\n    /**\n     * Map specifying local modules to include in the build. Local modules are\n     * always included in the compiled output, regardless of application type\n     * (node, browser, etc.). Each member of the map has a key that is the\n     * name of the module to be `require`d in code. The value is the path to\n     * the module to be included. The path must begin with \"./\", and is\n     * relative to the directory containing compile.json. The module may be\n     * either a CommonJS module or an ES6 module.\n     */\n    localModules: {\n      init: null,\n      check: \"Object\"\n    }\n  },\n\n  members: {\n    __loadDeps: null,\n    __parts: null,\n    __requiredLibs: null,\n    __fatalCompileErrors: null,\n    __classes: null,\n    __partsDeps: null,\n\n    /**\n     * Checks if the application is for browser\n     *\n     * @returns boolean\n     */\n    isBrowserApp() {\n      return this.getType() === \"browser\";\n    },\n\n    /**\n     * Calculates the dependencies of the classes to create a load order\n     */\n    calcDependencies() {\n      var t = this;\n      var Console = qx.tool.compiler.Console.getInstance();\n      var analyser = this.getAnalyser();\n      var db = analyser.getDatabase();\n      var allDeps = new qx.tool.utils.IndexedArray();\n      var exclude = {};\n      var fatalCompileErrors = [];\n\n      this.__loadDeps = null;\n\n      var partsByName = {};\n      var parts = [];\n      var bootPart = null;\n      var classDataByClassname = {};\n\n      if (this.__parts && this.__parts.length) {\n        parts = [];\n        t.__parts.forEach(part => {\n          if (partsByName[part.getName()]) {\n            throw new Error(\n              Console.decode(\n                \"qx.tool.compiler.application.duplicatePartNames\",\n                part.getName()\n              )\n            );\n          }\n          var partData = {\n            name: part.getName(),\n            include: part.getInclude(),\n            exclude: part.getExclude(),\n            classes: [],\n            dependsOn: {},\n            combine: part.getCombine(),\n            minify: part.getMinify()\n          };\n\n          partData.match =\n            qx.tool.compiler.app.Application.createWildcardMatchFunction(\n              part.getInclude(),\n              part.getExclude()\n            );\n\n          partsByName[part.getName()] = partData;\n          parts.push(partData);\n        });\n        bootPart = partsByName.boot;\n        if (!bootPart) {\n          throw new Error(\n            Console.decode(\"qx.tool.compiler.application.noBootPart\")\n          );\n        }\n      } else {\n        bootPart = {\n          name: \"boot\",\n          include: [\"*\"],\n          exclude: [],\n          classes: [],\n          dependsOn: {},\n          combine: false,\n          minify: false,\n          match() {\n            return true;\n          }\n        };\n\n        partsByName.boot = bootPart;\n        parts.push(bootPart);\n      }\n\n      function createClassData(classname) {\n        if (classDataByClassname[classname]) {\n          return classDataByClassname[classname];\n        }\n        var classData = (classDataByClassname[classname] = {\n          classname: classname,\n          parts: {},\n          best: null,\n          actual: null\n        });\n\n        parts.forEach(part => {\n          if (part === bootPart) {\n            return;\n          }\n          var result = part.match(classname);\n          if (result !== null) {\n            classData.parts[part.name] = result;\n\n            var lastMatch =\n              classData.best && classData.parts[classData.best.name];\n            if (lastMatch === undefined || lastMatch === null) {\n              classData.best = part;\n\n              // Exact\n            } else if (lastMatch === \"exact\") {\n              if (result === \"exact\") {\n                Console.print(\n                  \"qx.tool.compiler.application.conflictingExactPart\",\n                  classname,\n                  part.name,\n                  classData.best.name\n                );\n              }\n\n              // Wildcard\n            } else {\n              qx.core.Assert.assertTrue(typeof lastMatch == \"number\");\n              if (result === \"exact\") {\n                classData.best = part;\n                classData.exact = true;\n              } else {\n                qx.core.Assert.assertTrue(typeof result == \"number\");\n                if (lastMatch === result) {\n                  Console.print(\n                    \"qx.tool.compiler.application.conflictingBestPart\",\n                    classname,\n                    part.name,\n                    classData.best.name\n                  );\n                } else if (lastMatch < result) {\n                  classData.best = part;\n                }\n              }\n            }\n          }\n        });\n        return classData;\n      }\n\n      var needed = new qx.tool.utils.IndexedArray();\n      var neededIndex = 0;\n      var stack = new qx.tool.utils.IndexedArray();\n\n      /*\n       * We could say that when a class is `.require`d, then we treat any of it's `construct:true` dependencies as `require:true`\n       * The problem is given this example:\n       *    qx.core.Init.defer()\n       *      qx.event.Registration.addListener\n       *        qx.event.Registration.getManager\n       *          qx.event.Manager.construct\n       *            new qx.util.DeferredCall\n       *\n       *    new qx.util.DeferredCall is a runtime only dependency so is not available.\n       *\n       * So the theory is that deferred calls tend to be about initialisation, so prioritising constructor dependencies\n       * may be helpful\n       */\n\n      /*\n       * Recursively finds all the dependencies for a class which have not already been added\n       * to the list of classes to load.\n       *\n       *  @param classname {String}\n       *  @param deps {String[]} array to modify\n       */\n      function compileAllRemainingDeps(classname, deps) {\n        var checked = {};\n        var depNames = {};\n        depNames[classname] = true;\n\n        function search(classname) {\n          if (checked[classname]) {\n            return;\n          }\n          checked[classname] = true;\n\n          var info = db.classInfo[classname];\n          if (info && info.dependsOn) {\n            for (var depName in info.dependsOn) {\n              var dd = info.dependsOn[depName];\n              if (dd.load || dd.require || dd.defer || dd.construct) {\n                if (!allDeps.contains(depName)) {\n                  depNames[depName] = true;\n                }\n                search(depName);\n              }\n            }\n          }\n        }\n\n        search(classname);\n        for (var depName in depNames) {\n          deps.push(depName);\n        }\n      }\n\n      var addDepDepth = 0;\n      function addDep(classname) {\n        if (exclude[classname]) {\n          return;\n        }\n        if (allDeps.contains(classname) || stack.contains(classname)) {\n          return;\n        }\n\n        var info = db.classInfo[classname];\n        if (!info) {\n          return;\n        }\n        if (info.fatalCompileError) {\n          fatalCompileErrors.push(classname);\n        }\n\n        addDepDepth++;\n\n        var environmentLoadDeps = {};\n        if (info.environment && info.environment.required) {\n          for (var key in info.environment.required) {\n            var envInfo = info.environment.required[key];\n            if (envInfo.defer) {\n              environmentLoadDeps[envInfo.className] = true;\n            }\n          }\n        }\n\n        var deferDeps = [];\n        if (info.dependsOn) {\n          stack.push(classname);\n          for (var depName in info.dependsOn) {\n            var dd = info.dependsOn[depName];\n            if (dd.load || dd.require || environmentLoadDeps[depName]) {\n              addDep(depName);\n            } else if (dd.defer) {\n              deferDeps.push(depName);\n            } else if (!allDeps.contains(depName)) {\n              needed.push(depName);\n            }\n          }\n          stack.remove(classname);\n        }\n\n        if (parts && !allDeps.contains(classname)) {\n          var classData = createClassData(classname);\n          var part = classData.best || bootPart;\n          part.classes.push(classname);\n          classData.actual = part;\n          if (info.externals) {\n            if (part.externals === undefined) {\n              part.externals = [];\n            }\n            info.externals.forEach(external => {\n              if (part.externals.indexOf(external) < 0) {\n                part.externals.push(external);\n              }\n            });\n          }\n        }\n        allDeps.push(classname);\n        deferDeps.forEach(function (depName) {\n          var deps = [];\n          compileAllRemainingDeps(depName, deps);\n          deps.forEach(addDep);\n        });\n        if (addDepDepth === 1) {\n          while (neededIndex < needed.getLength()) {\n            classname = needed.getItem(neededIndex++);\n            addDep(classname);\n          }\n        }\n        addDepDepth--;\n      }\n\n      exclude = {};\n      t.__expandClassnames(t.getExclude()).forEach(\n        name => (exclude[name] = true)\n      );\n\n      // Start the ball rolling\n      addDep(\"qx.core.Object\");\n      t.getRequiredClasses().forEach(function (classname) {\n        addDep(classname);\n      });\n      if (t.getTheme()) {\n        addDep(t.getTheme());\n      }\n      /*\n      parts.forEach((part) => {\n        if (part !== bootPart) {\n          t.__expandClassnames(part.include).forEach((name) => addDep(name));\n        }\n      });\n      */\n\n      while (neededIndex < needed.length) {\n        var classname = needed[neededIndex++];\n        addDep(classname);\n      }\n\n      if (parts && parts.length > 1) {\n        // Calculate inter-part dependencies\n        parts.forEach(part => {\n          var checked = {};\n          function check(classname) {\n            if (checked[classname]) {\n              return;\n            }\n            checked[classname] = true;\n            var classData = classDataByClassname[classname];\n            if (classData.actual !== part) {\n              part.dependsOn[classData.actual.name] = true;\n            }\n            for (var depName in db.classInfo.dependsOn) {\n              check(depName);\n            }\n          }\n          part.classes.forEach(check);\n          part.dependsOn = Object.keys(part.dependsOn);\n        });\n\n        // Check for recursive dependencies\n        parts.forEach(part => {\n          var checked = {};\n          function check(partname) {\n            if (checked[partname]) {\n              return false;\n            }\n            checked[partname] = true;\n            var checkPart = partsByName[partname];\n            if (checkPart === part) {\n              return true;\n            }\n            return part.dependsOn.some(check);\n          }\n          if (part.dependsOn.some(check)) {\n            Console.print(\n              \"qx.tool.compiler.application.partRecursive\",\n              part.name\n            );\n          }\n        });\n      }\n\n      /*\n       * Done\n       */\n\n      this.__loadDeps = allDeps.toArray();\n\n      var requiredLibs = {};\n      this.__loadDeps.forEach(classname => {\n        let classInfo = db.classInfo[classname];\n        if (classInfo.assets) {\n          classInfo.assets.forEach(asset => {\n            var pos = asset.indexOf(\"/\");\n            if (pos > -1) {\n              var ns = asset.substring(0, pos);\n              if (analyser.findLibrary(ns)) {\n                requiredLibs[ns] = true;\n              }\n            }\n          });\n        }\n        requiredLibs[classInfo.libraryName] = true;\n      });\n      this.__requiredLibs = [];\n      for (let ns in requiredLibs) {\n        if (analyser.findLibrary(ns)) {\n          this.__requiredLibs.push(ns);\n        } else {\n          Console.print(\n            \"qx.tool.compiler.application.missingRequiredLibrary\",\n            ns\n          );\n        }\n      }\n\n      this.__partsDeps = parts;\n      this.__fatalCompileErrors = fatalCompileErrors.length\n        ? fatalCompileErrors\n        : null;\n    },\n\n    /**\n     * Gets a list of class names that this Application requires which have fatal compile errors\n     *\n     * @return {String[]}\n     */\n    getFatalCompileErrors() {\n      return this.__fatalCompileErrors;\n    },\n\n    /**\n     * Gets a list of URIs for classes that are required, in load order\n     *\n     * @returns {String[]}\n     */\n    getUris() {\n      var uris = [];\n      var db = this.getAnalyser().getDatabase();\n\n      function add(classname) {\n        var def = db.classInfo[classname];\n        uris.push(\n          def.libraryName + \":\" + classname.replace(/\\./g, \"/\") + \".js\"\n        );\n      }\n      this.__loadDeps.forEach(add);\n\n      return uris;\n    },\n\n    /**\n     * Gets a list of classnames that are required, in load order\n     *\n     * @returns {String[]}\n     */\n    getDependencies() {\n      return this.__loadDeps;\n    },\n\n    /**\n     * Gets the parts dependencies structures\n     *\n     * @returns {Object[]}\n     */\n    getPartsDependencies() {\n      return this.__partsDeps;\n    },\n\n    /**\n     * Returns a list of library names which are required by the application\n     *\n     * @returns {String[]}\n     */\n    getRequiredLibraries() {\n      return this.__requiredLibs;\n    },\n\n    /**\n     * Returns a list of all of the assets required by all classes\n     * @param target {qx.tool.compiler.targets.Target} the current target\n     * @param resManager  {qx.tool.compiler.resources.Manager} the resource manager\n     * @param environment {Map} environment\n     */\n    getAssetUris(target, resManager, environment) {\n      var assets = [];\n      var analyser = this.getAnalyser();\n      var db = analyser.getDatabase();\n\n      // Compile theme resource aliases\n      var aliases = {};\n      function getAliases(classname) {\n        var tmp = db.classInfo[classname];\n        if (tmp) {\n          if (tmp.aliases) {\n            for (var alias in tmp.aliases) {\n              aliases[alias] = tmp.aliases[alias];\n            }\n          }\n          if (tmp.extends) {\n            getAliases(tmp.extends);\n          }\n        }\n      }\n      var themeInfo = db.classInfo[this.getTheme()];\n      if (themeInfo && themeInfo.themeMeta) {\n        for (let name in themeInfo.themeMeta) {\n          getAliases(themeInfo.themeMeta[name]);\n        }\n      }\n\n      // Get a list of libraries used\n      var libraryLookup = {};\n\n      // Check all the classes\n      var classNames = this.__loadDeps.slice();\n      for (let i = 0; i < classNames.length; i++) {\n        var classname = classNames[i];\n        var classInfo = db.classInfo[classname];\n        var tmp = classInfo.assets;\n        if (tmp) {\n          tmp.forEach(function (uri) {\n            var pos = uri.indexOf(\"/\");\n            if (pos > -1) {\n              var prefix = uri.substring(0, pos);\n              var mappedPrefix = aliases[prefix];\n              if (mappedPrefix) {\n                uri = mappedPrefix + uri.substring(pos);\n              }\n            }\n            resManager\n              .findLibrariesForResource(uri)\n              .forEach(library =>\n                assets.push(library.getNamespace() + \":\" + uri)\n              );\n          });\n        }\n        if (!libraryLookup[classInfo.libraryName]) {\n          libraryLookup[classInfo.libraryName] = analyser.findLibrary(\n            classInfo.libraryName\n          );\n        }\n      }\n\n      var rm = analyser.getResourceManager();\n      function addExternalAssets(arr, msgId) {\n        if (arr) {\n          arr.forEach(filename => {\n            if (!filename.match(/^https?:/)) {\n              let asset = rm.getAsset(filename);\n              if (asset) {\n                let str = asset.getDestFilename(target);\n                str = path.relative(\n                  path.join(target.getOutputDir(), \"resource\"),\n                  str\n                );\n\n                assets.push(asset.getLibrary().getNamespace() + \":\" + str);\n              } else {\n                qx.tool.compiler.Console.print(msgId, filename);\n              }\n            }\n          });\n        }\n      }\n      for (let name in libraryLookup) {\n        var lib = libraryLookup[name];\n        if (lib) {\n          addExternalAssets(\n            lib.getAddScript(),\n            \"qx.tool.compiler.application.missingScriptResource\"\n          );\n\n          addExternalAssets(\n            lib.getAddCss(),\n            \"qx.tool.compiler.application.missingCssResource\"\n          );\n        }\n      }\n\n      // Expand variables\n      for (let i = 0; i < assets.length; i++) {\n        let asset = assets[i];\n\n        var m = asset.match(/\\$\\{([^}]+)\\}/);\n        if (m) {\n          var match = m[0];\n          var capture = m[1];\n          var pos = asset.indexOf(match);\n          var left = asset.substring(0, pos);\n          var right = asset.substring(pos + match.length);\n          var value = environment[capture];\n          if (value !== undefined) {\n            if (qx.lang.Type.isArray(value)) {\n              value.forEach(function (value) {\n                assets.push(left + value + right);\n              });\n            } else {\n              assets.push(left + value + right);\n            }\n          }\n          qx.lang.Array.removeAt(assets, i--);\n        }\n      }\n\n      // Remove duplicates and overlapping path wildcards\n      assets.sort();\n      for (let i = 1; i < assets.length; i++) {\n        let asset = assets[i];\n        var lastAsset = assets[i - 1];\n\n        if (asset == lastAsset) {\n          assets.splice(i--, 1);\n          continue;\n        }\n\n        if (lastAsset[lastAsset.length - 1] == \"*\") {\n          var filename = lastAsset.substring(0, lastAsset.length - 1);\n          if (asset.substring(0, filename.length) == filename) {\n            assets.splice(i--, 1);\n            continue;\n          }\n        }\n      }\n\n      return assets;\n    },\n\n    /**\n     * Returns a list of fonts required by the application, where the font is detailed in Manifest.json\n     * in `provides.fonts`\n     *\n     * @returns {String[]}\n     */\n    getFonts() {\n      var fonts = {};\n      var analyser = this.getAnalyser();\n      var db = analyser.getDatabase();\n      this.__loadDeps.forEach(classname => {\n        var classInfo = db.classInfo[classname];\n        if (classInfo.fonts) {\n          classInfo.fonts.forEach(fontName => (fonts[fontName] = true));\n        }\n      });\n      return Object.keys(fonts);\n    },\n\n    /**\n     * Returns the class name for the application\n     * @returns {String}\n     */\n    getClassName() {\n      return this.__classes[0];\n    },\n\n    /**\n     * Returns the classes required for the application\n     * @returns {String[]}\n     */\n    getRequiredClasses() {\n      var result = {};\n      this.__classes.forEach(name => (result[name] = true));\n      this.__expandClassnames(this.getInclude()).forEach(\n        name => (result[name] = true)\n      );\n\n      this.__expandClassnames(this.getExclude()).forEach(\n        name => delete result[name]\n      );\n\n      // We sort the result so that we can get a consistent ordering for loading classes, otherwise the order in\n      //  which the filing system returns the files can cause classes to be loaded in a lightly different sequence;\n      //  that would not cause a problem, except that the build is not 100% repeatable.\n      return Object.keys(result).sort();\n    },\n\n    /**\n     * Adds a part\n     * @param part {Part} the part to add\n     */\n    addPart(part) {\n      if (!this.__parts) {\n        this.__parts = [];\n      }\n      this.__parts.push(part);\n    },\n\n    /**\n     * Returns the parts, or null if there are none defined\n     * @return {Part[]}\n     */\n    getParts() {\n      return this.__parts || [];\n    },\n\n    /**\n     * Returns a dynamically calculated version of the application environment, which\n     * is defaults or dynamic values plus the `environment` property\n     *\n     * @return {Map} The environment settings\n     */\n    getCalculatedEnvironment() {\n      return qx.tool.utils.Values.merge(\n        {\n          \"qx.headless\": this.getType() != \"browser\",\n          \"qx.compiler.applicationName\": this.getName(),\n          \"qx.compiler.applicationType\": this.getType()\n        },\n\n        this.getEnvironment()\n      );\n    },\n\n    /**\n     * Expands a list of class names including wildcards (eg \"qx.ui.*\") into an\n     * exhaustive list without wildcards\n     * @param names {String[]}\n     * @return String[]\n     */\n    __expandClassnames(names) {\n      var t = this;\n      var result = {};\n      names.forEach(function (name) {\n        var pos = name.indexOf(\"*\");\n        if (pos < 0) {\n          result[name] = true;\n        } else {\n          var prefix = name.substring(0, pos);\n          if (prefix) {\n            t.getAnalyser()\n              .getLibraries()\n              .forEach(function (lib) {\n                var symbols = lib.getKnownSymbols();\n                for (var symbol in symbols) {\n                  if (symbols[symbol] == \"class\" && symbol.startsWith(prefix)) {\n                    result[symbol] = true;\n                  }\n                }\n              });\n          }\n          var postfix = name.substring(pos + 1);\n          if (postfix) {\n            t.getAnalyser()\n              .getLibraries()\n              .forEach(function (lib) {\n                var symbols = lib.getKnownSymbols();\n                for (var symbol in symbols) {\n                  if (symbols[symbol] == \"class\" && symbol.endsWith(postfix)) {\n                    result[symbol] = true;\n                  }\n                }\n              });\n          }\n        }\n      });\n      return Object.keys(result);\n    },\n\n    /**\n     * Apply for `type` property\n     */\n    _applyType(value, oldValue) {\n      var loader = path.join(\n        this.getTemplatePath(),\n        \"loader\",\n        \"loader-\" + this.getType() + \".tmpl.js\"\n      );\n\n      this.setLoaderTemplate(loader);\n    },\n\n    /**\n     * Transforms values to make sure that they are an array (and never null)\n     */\n    __transformArray(value) {\n      if (!value) {\n        return null;\n      }\n      if (!qx.lang.Type.isArray(value)) {\n        return [value];\n      }\n      return value;\n    }\n  },\n\n  statics: {\n    /**\n     * Creates a function that can perform a wildcard match to compare against a function;\n     * the function returns `null` if no match, `\"exact\"` for an exact match, or a number\n     * to indicating the number of segments in the package (eg `qx.util.*` will match\n     * `qx.util.format.DateFormat` will return 2 because there is `qx` and `util`)\n     *\n     * @param include {String[]} the wildcard specs to include\n     * @param exclude {String[]} the wildcard specs to exclude\n     * @return {Function}\n     */\n    createWildcardMatchFunction(include, exclude) {\n      var code = [];\n      if (exclude) {\n        exclude.forEach(spec => {\n          var pos;\n          if ((pos = spec.indexOf(\"*\")) > -1) {\n            code.push(\n              '  if (value.startsWith(\"' +\n                spec.substring(0, pos) +\n                '\"))\\n    return null; // ' +\n                spec\n            );\n          } else {\n            code.push('  if (value === \"' + spec + '\")\\n  return null;');\n          }\n        });\n      }\n      if (include) {\n        include.forEach(spec => {\n          var pos;\n          pos = -1;\n          var nsDepth = 0;\n          while ((pos = spec.indexOf(\".\", pos + 1)) > -1) {\n            nsDepth++;\n          }\n          if ((pos = spec.indexOf(\"*\")) > -1) {\n            code.push(\n              '  if (value.startsWith(\"' +\n                spec.substring(0, pos) +\n                '\"))\\n    return ' +\n                nsDepth +\n                \"; // \" +\n                spec\n            );\n          } else {\n            code.push('  if (value === \"' + spec + '\")\\n  return \"exact\";');\n          }\n        });\n      }\n      code.push(\"  return null;\");\n      return new Function(\"value\", code.join(\"\\n\"));\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}