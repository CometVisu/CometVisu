{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "_asyncToGenerator",
    "arguments",
    "apply",
    "_next",
    "_throw",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "fs",
    "require",
    "path",
    "Class",
    "extend",
    "core",
    "construct",
    "setName",
    "properties",
    "check",
    "defaultSize",
    "init",
    "nullable",
    "comparisonString",
    "css",
    "fontFaces",
    "glyphs",
    "family",
    "members",
    "__fontData",
    "updateFromManifest",
    "data",
    "library",
    "_this",
    "_callee",
    "toSet",
    "glyphsFilename",
    "glyphsData",
    "key",
    "glyph",
    "_callee$",
    "_context",
    "set",
    "undefined",
    "getResourceFilename",
    "promises",
    "readFile",
    "JSON",
    "parse",
    "getName",
    "getDefaultSize",
    "Math",
    "ceil",
    "advanceWidth",
    "advanceHeight",
    "codePoint",
    "getApplicationFontData",
    "getBootstrapCode",
    "target",
    "application",
    "useLocalFonts",
    "res",
    "font",
    "getFamily",
    "getCss",
    "getFontFaces",
    "getComparisonString",
    "stringify",
    "tool",
    "compiler",
    "app",
    "ManifestFont"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/app/ManifestFont.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2023 Zenesis Limited https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (@johnspackman)\n\n************************************************************************ */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\n/**\n * Represents a font as defined in the Manifest.json's\n *\n * @typedef Sources\n * @param {String?} family the family name that is in the font files (defaults to the name of the font)\n * @param {String[]?} paths the filenames of font files inside the resources dircetory\n * @param {String[]?} urls the urls of font files in a CDN\n *\n */\nqx.Class.define(\"qx.tool.compiler.app.ManifestFont\", {\n  extend: qx.core.Object,\n\n  construct(name) {\n    super();\n    this.setName(name);\n  },\n\n  properties: {\n    /** The name of the font - this is the key in Manifest.json provides.fonts */\n    name: {\n      check: \"String\"\n    },\n\n    /** Default size of the font */\n    defaultSize: {\n      init: null,\n      nullable: true,\n      check: \"Integer\"\n    },\n\n    /** Comparison string to be used */\n    comparisonString: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /** CSS filenames or URLs to be loaded (indicating that font-face will be defined outside of Qooxdoo) */\n    css: {\n      init: null,\n      check: \"Array\",\n      nullable: true\n    },\n\n    /** Font faces that have to be defined, including the resource paths or urls */\n    fontFaces: {\n      init: null,\n      check: \"Array\",\n      nullable: true\n    },\n\n    /** Glyphs filename (relative to resources of the library that defines it) */\n    glyphs: {\n      init: null,\n      nullable: true,\n      check: \"String\"\n    },\n\n    /** Family names for the browser to search for */\n    family: {\n      init: null,\n      nullable: true,\n      check: \"Array\"\n    }\n  },\n\n  members: {\n    /** @type{Map<String,Object>} font data required by the Qooxdoo app at runtime */\n    __fontData: null,\n\n    /**\n     * Updates this from the data in the Manifest.json\n     *\n     * @param {Object} data the data from Manifest\n     * @param {qx.tool.compiler.app.Library} library the library\n     */\n    async updateFromManifest(data, library) {\n      let toSet = {};\n      [\n        \"defaultSize\",\n        \"comparisonString\",\n        \"css\",\n        \"fontFaces\",\n        \"glyphs\",\n        \"family\"\n      ].forEach(name => {\n        if (data.hasOwnProperty(name)) {\n          toSet[name] = data[name];\n        }\n      });\n      this.set(toSet);\n      if (data.glyphs !== undefined) {\n        let glyphsFilename = library.getResourceFilename(data.glyphs);\n        let glyphsData = await fs.promises.readFile(glyphsFilename, \"utf8\");\n        glyphsData = JSON.parse(glyphsData);\n        this.__fontData = {};\n        let name = this.getName();\n        let defaultSize = this.getDefaultSize();\n\n        for (let key in glyphsData) {\n          let glyph = glyphsData[key];\n          this.__fontData[\"@\" + name + \"/\" + key] = [\n            // width\n            Math.ceil(\n              (defaultSize * glyph.advanceWidth) / glyph.advanceHeight\n            ) || defaultSize,\n\n            // height\n            defaultSize,\n            glyph.codePoint\n          ];\n        }\n      }\n    },\n\n    /**\n     * Generates the font data used by the application; loads the data if not already loaded\n     *\n     * @returns {Map<String,Object>}\n     */\n    getApplicationFontData() {\n      return this.__fontData;\n    },\n\n    /**\n     * Return bootstrap code that is executed before the Application starts.\n     *\n     * @param {qx.tool.compiler.targets.Target} target the target\n     * @param {qx.tool.compiler.app.Application} application the application being built\n     * @param {Boolean} useLocalFonts whether to use local fonts or use CSS\n     * @return {String} code to include in the output\n     */\n    getBootstrapCode(target, application, useLocalFonts) {\n      let res = \"\";\n      let font = {\n        family: this.getFamily() || [this.getName()]\n      };\n\n      if (!useLocalFonts) {\n        if (this.getCss()) {\n          font.css = this.getCss();\n        }\n      } else {\n        font.fontFaces = this.getFontFaces();\n      }\n\n      if (this.getDefaultSize() !== null) {\n        font.defaultSize = this.getDefaultSize();\n      }\n      if (this.getComparisonString() !== null) {\n        font.comparisonString = this.getComparisonString();\n      }\n\n      return (res +=\n        \"qx.$$fontBootstrap['\" +\n        this.getName() +\n        \"']=\" +\n        JSON.stringify(font, null, 2) +\n        \";\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}