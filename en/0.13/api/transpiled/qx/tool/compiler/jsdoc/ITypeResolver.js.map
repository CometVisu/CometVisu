{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "resolveType",
    "typename",
    "tool",
    "compiler",
    "jsdoc",
    "ITypeResolver"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/jsdoc/ITypeResolver.js"
  ],
  "sourcesContent": [
    "qx.Interface.define(\"qx.tool.compiler.jsdoc.ITypeResolver\", {\n  members: {\n    /**\n     * Given a possible typename, this converts it into a fully qualified classname if possible;\n     * because of historical documentation, the typename may be just a classname without\n     * the package.  This method will attempt to resolve the type to a fully qualified classname, and\n     * only returns the fully qualified name if it actually exists.\n     *\n     * Otherwise, it returns what it is given as `typename`\n     *\n     * @param typename {String} the typename to resolve\n     */\n    resolveType(typename) {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhDH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,sCAAsC,EAAE;IAC1DC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAXA,WAAWA,CAACC,QAAQ,EAAE,CAAC;IACzB;EACF,CAAC,CAAC;EAdFR,EAAE,CAACS,IAAI,CAACC,QAAQ,CAACC,KAAK,CAACC,aAAa,CAACT,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}