{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "path",
    "constructor",
    "call",
    "__path",
    "members",
    "run",
    "outputTo",
    "cb",
    "t",
    "readFile",
    "encoding",
    "err",
    "data",
    "_process",
    "writeFile",
    "replace",
    "match",
    "quotes",
    "cmd",
    "body",
    "quote",
    "result",
    "split",
    "forEach",
    "line",
    "index",
    "tool",
    "compiler",
    "Preprocess"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/Preprocess.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nvar fs = require(\"fs\");\n\nqx.Class.define(\"qx.tool.compiler.Preprocess\", {\n  extend: qx.core.Object,\n\n  construct(path) {\n    super();\n    this.__path = path;\n  },\n\n  members: {\n    __path: null,\n\n    run(outputTo, cb) {\n      var t = this;\n      fs.readFile(this.__path, { encoding: \"utf8\" }, function (err, data) {\n        if (err) {\n          cb(err);\n        } else {\n          t._process(data, function (data) {\n            if (typeof outputTo == \"string\") {\n              fs.writeFile(outputTo, data, { encoding: \"utf8\" }, cb);\n            } else if (typeof outputTo == \"function\") {\n              outputTo(data, cb);\n            } else {\n              cb(null, data);\n            }\n          });\n        }\n      });\n    },\n\n    _process(data, cb) {\n      data = data.replace(\n        /(''|\"\")?\\/\\*#([^\\n]+)([\\s\\S]*)\\*\\//gm,\n        function (match, quotes, cmd, body) {\n          var quote = quotes[0];\n          if (quote == \"'\") {\n            body = body.replace(/'/gm, \"\\\\'\");\n          } else {\n            body = body.replace(/\"/gm, '\\\\\"');\n          }\n          var result = \"\";\n          body.split(\"\\n\").forEach(function (line, index) {\n            if (index == 0) {\n              return;\n            }\n            if (index > 1) {\n              result += \" + \\n\";\n            }\n            result += quote + line + \"\\\\n\" + quote;\n          });\n          return result;\n        }\n      );\n\n      cb(data);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;EAEtBL,EAAE,CAACM,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,MAAM,EAAER,EAAE,CAACS,IAAI,CAACC,MAAM;IAEtBC,SAAS,WAAAA,UAACC,IAAI,EAAE;MACdZ,EAAA,CAAAS,IAAA,CAAAC,MAAA,CAAAG,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,SAAM,GAAGH,IAAI;IACpB,CAAC;IAEDI,OAAO,EAAE;MACPD,SAAM,EAAE,IAAI;MAEZE,GAAG,WAAAA,IAACC,QAAQ,EAAEC,EAAE,EAAE;QAChB,IAAIC,CAAC,GAAG,IAAI;QACZhB,EAAE,CAACiB,QAAQ,CAAC,IAAI,CAACN,SAAM,EAAE;UAAEO,QAAQ,EAAE;QAAO,CAAC,EAAE,UAAUC,GAAG,EAAEC,IAAI,EAAE;UAClE,IAAID,GAAG,EAAE;YACPJ,EAAE,CAACI,GAAG,CAAC;UACT,CAAC,MAAM;YACLH,CAAC,CAACK,QAAQ,CAACD,IAAI,EAAE,UAAUA,IAAI,EAAE;cAC/B,IAAI,OAAON,QAAQ,IAAI,QAAQ,EAAE;gBAC/Bd,EAAE,CAACsB,SAAS,CAACR,QAAQ,EAAEM,IAAI,EAAE;kBAAEF,QAAQ,EAAE;gBAAO,CAAC,EAAEH,EAAE,CAAC;cACxD,CAAC,MAAM,IAAI,OAAOD,QAAQ,IAAI,UAAU,EAAE;gBACxCA,QAAQ,CAACM,IAAI,EAAEL,EAAE,CAAC;cACpB,CAAC,MAAM;gBACLA,EAAE,CAAC,IAAI,EAAEK,IAAI,CAAC;cAChB;YACF,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ,CAAC;MAEDC,QAAQ,WAAAA,SAACD,IAAI,EAAEL,EAAE,EAAE;QACjBK,IAAI,GAAGA,IAAI,CAACG,OAAO,CACjB,sCAAsC,EACtC,UAAUC,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;UAClC,IAAIC,KAAK,GAAGH,MAAM,CAAC,CAAC,CAAC;UACrB,IAAIG,KAAK,IAAI,GAAG,EAAE;YAChBD,IAAI,GAAGA,IAAI,CAACJ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;UACnC,CAAC,MAAM;YACLI,IAAI,GAAGA,IAAI,CAACJ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;UACnC;UACA,IAAIM,MAAM,GAAG,EAAE;UACfF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAEC,KAAK,EAAE;YAC9C,IAAIA,KAAK,IAAI,CAAC,EAAE;cACd;YACF;YACA,IAAIA,KAAK,GAAG,CAAC,EAAE;cACbJ,MAAM,IAAI,OAAO;YACnB;YACAA,MAAM,IAAID,KAAK,GAAGI,IAAI,GAAG,KAAK,GAAGJ,KAAK;UACxC,CAAC,CAAC;UACF,OAAOC,MAAM;QACf,CACF,CAAC;QAEDd,EAAE,CAACK,IAAI,CAAC;MACV;IACF;EACF,CAAC,CAAC;EAjFFxB,EAAE,CAACsC,IAAI,CAACC,QAAQ,CAACC,UAAU,CAACrC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}