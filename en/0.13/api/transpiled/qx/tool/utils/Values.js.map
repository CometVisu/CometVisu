{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "binaryIndexOf",
    "array",
    "searchElement",
    "minIndex",
    "maxIndex",
    "length",
    "currentIndex",
    "currentElement",
    "binaryStartsWith",
    "startsWith",
    "merge",
    "target",
    "_len",
    "arguments",
    "sources",
    "Array",
    "_key",
    "forEach",
    "src",
    "key",
    "tool",
    "utils",
    "Values"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/utils/Values.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nqx.Class.define(\"qx.tool.utils.Values\", {\n  statics: {\n    /**\n     * Performs a binary search on the host array.\n     *\n     * Thanks to Oliver Caldwell for this snippet, https://oli.me.uk/2013/06/08/searching-javascript-arrays-with-a-binary-search/\n     *\n     * @param {*} array The array to search.\n     * @param {*} searchElement The item to search for within the array.\n     * @return {Number} The index of the element which defaults to -1 when not found.\n     */\n    binaryIndexOf(array, searchElement) {\n      var minIndex = 0;\n      var maxIndex = array.length - 1;\n      var currentIndex;\n      var currentElement;\n\n      while (minIndex <= maxIndex) {\n        currentIndex = ((minIndex + maxIndex) / 2) | 0;\n        currentElement = array[currentIndex];\n\n        if (currentElement < searchElement) {\n          minIndex = currentIndex + 1;\n        } else if (currentElement > searchElement) {\n          maxIndex = currentIndex - 1;\n        } else {\n          return currentIndex;\n        }\n      }\n\n      return -1;\n    },\n\n    binaryStartsWith(array, searchElement) {\n      var minIndex = 0;\n      var maxIndex = array.length - 1;\n      var currentIndex;\n      var currentElement;\n\n      while (minIndex <= maxIndex) {\n        currentIndex = ((minIndex + maxIndex) / 2) | 0;\n        currentElement = array[currentIndex];\n\n        if (currentElement.startsWith(searchElement)) {\n          while (currentIndex > 0) {\n            if (!array[currentIndex - 1].startsWith(searchElement)) {\n              break;\n            }\n            currentIndex--;\n          }\n          return currentIndex;\n        }\n\n        if (currentElement < searchElement) {\n          minIndex = currentIndex + 1;\n        } else if (currentElement > searchElement) {\n          maxIndex = currentIndex - 1;\n        }\n      }\n\n      return -1;\n    },\n\n    merge(target, ...sources) {\n      if (sources) {\n        sources.forEach(src => {\n          for (let key in src) {\n            target[key] = src[key];\n          }\n        });\n      }\n      return target;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACtCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,aAAa,WAAAA,cAACC,KAAK,EAAEC,aAAa,EAAE;QAClC,IAAIC,QAAQ,GAAG,CAAC;QAChB,IAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAM,GAAG,CAAC;QAC/B,IAAIC,YAAY;QAChB,IAAIC,cAAc;QAElB,OAAOJ,QAAQ,IAAIC,QAAQ,EAAE;UAC3BE,YAAY,GAAI,CAACH,QAAQ,GAAGC,QAAQ,IAAI,CAAC,GAAI,CAAC;UAC9CG,cAAc,GAAGN,KAAK,CAACK,YAAY,CAAC;UAEpC,IAAIC,cAAc,GAAGL,aAAa,EAAE;YAClCC,QAAQ,GAAGG,YAAY,GAAG,CAAC;UAC7B,CAAC,MAAM,IAAIC,cAAc,GAAGL,aAAa,EAAE;YACzCE,QAAQ,GAAGE,YAAY,GAAG,CAAC;UAC7B,CAAC,MAAM;YACL,OAAOA,YAAY;UACrB;QACF;QAEA,OAAO,CAAC,CAAC;MACX,CAAC;MAEDE,gBAAgB,WAAAA,iBAACP,KAAK,EAAEC,aAAa,EAAE;QACrC,IAAIC,QAAQ,GAAG,CAAC;QAChB,IAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAM,GAAG,CAAC;QAC/B,IAAIC,YAAY;QAChB,IAAIC,cAAc;QAElB,OAAOJ,QAAQ,IAAIC,QAAQ,EAAE;UAC3BE,YAAY,GAAI,CAACH,QAAQ,GAAGC,QAAQ,IAAI,CAAC,GAAI,CAAC;UAC9CG,cAAc,GAAGN,KAAK,CAACK,YAAY,CAAC;UAEpC,IAAIC,cAAc,CAACE,UAAU,CAACP,aAAa,CAAC,EAAE;YAC5C,OAAOI,YAAY,GAAG,CAAC,EAAE;cACvB,IAAI,CAACL,KAAK,CAACK,YAAY,GAAG,CAAC,CAAC,CAACG,UAAU,CAACP,aAAa,CAAC,EAAE;gBACtD;cACF;cACAI,YAAY,EAAE;YAChB;YACA,OAAOA,YAAY;UACrB;UAEA,IAAIC,cAAc,GAAGL,aAAa,EAAE;YAClCC,QAAQ,GAAGG,YAAY,GAAG,CAAC;UAC7B,CAAC,MAAM,IAAIC,cAAc,GAAGL,aAAa,EAAE;YACzCE,QAAQ,GAAGE,YAAY,GAAG,CAAC;UAC7B;QACF;QAEA,OAAO,CAAC,CAAC;MACX,CAAC;MAEDI,KAAK,WAAAA,MAACC,MAAM,EAAc;QAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAR,MAAA,EAATS,OAAO,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;UAAPF,OAAO,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;QAAA;QACtB,IAAIF,OAAO,EAAE;UACXA,OAAO,CAACG,OAAO,CAAC,UAAAC,GAAG,EAAI;YACrB,KAAK,IAAIC,GAAG,IAAID,GAAG,EAAE;cACnBP,MAAM,CAACQ,GAAG,CAAC,GAAGD,GAAG,CAACC,GAAG,CAAC;YACxB;UACF,CAAC,CAAC;QACJ;QACA,OAAOR,MAAM;MACf;IACF;EACF,CAAC,CAAC;EAhGFlB,EAAE,CAAC2B,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC1B,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}