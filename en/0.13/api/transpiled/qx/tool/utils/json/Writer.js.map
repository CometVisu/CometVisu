{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "buffer",
    "__indent",
    "__indentStr",
    "__currentLine",
    "members",
    "write",
    "str",
    "undefined",
    "toString",
    "Error",
    "startPos",
    "pos",
    "indexOf",
    "substring",
    "length",
    "comments",
    "t",
    "forEach",
    "comment",
    "source",
    "indent",
    "count",
    "indentStr",
    "i",
    "line",
    "match",
    "matchIndent",
    "m",
    "oldIndent",
    "resetIndent",
    "tool",
    "utils",
    "json",
    "Writer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/utils/json/Writer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/**\n * Writer for serialising JSON, automatically indenting as required\n */\nqx.Class.define(\"qx.tool.utils.json.Writer\", {\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n    this.buffer = \"\";\n    this.__indent = 0;\n    this.__indentStr = \"\";\n    this.__currentLine = 0;\n  },\n\n  members: {\n    /**\n     * Writes a string/number.  Multiple lines are rewritten with indentation at the\n     * start of each line\n     */\n    write(str) {\n      if (str === null) {\n        str = \"null\";\n      } else if (str === undefined) {\n        str = \"undefined\";\n      } else if (typeof str === \"number\") {\n        str = str.toString();\n      } else if (typeof str === \"boolean\") {\n        str = str ? \"true\" : \"false\";\n      } else if (typeof str !== \"string\") {\n        throw new Error(\"Can only write strings and numbers\");\n      }\n\n      var startPos = 0;\n      /* eslint-disable no-constant-condition */\n      while (true) {\n        var pos = str.indexOf(\"\\n\", startPos);\n        if (pos > -1) {\n          this.buffer += str.substring(startPos, pos + 1);\n          this.__currentLine = this.buffer.length;\n          this.buffer += this.__indentStr;\n          startPos = pos + 1;\n        } else {\n          this.buffer += str.substring(startPos);\n          break;\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Outputs comments\n     */\n    comments(comments) {\n      var t = this;\n      if (comments) {\n        comments.forEach(function (comment) {\n          t.write(comment.source + \"\\n\");\n        });\n      }\n    },\n\n    /**\n     * Increases or decreases the indentation level (one indent is two spaces)\n     *\n     * @param count {Number} number to increase/decrease by\n     */\n    indent(count) {\n      if (this.__indent + count < 0) {\n        throw new Error(\"Unbalanced indent\");\n      }\n      this.__indent += count;\n\n      var indentStr = this.__indentStr;\n      if (count > 0) {\n        var str = \"\";\n        for (var i = 0; i < count; i++) {\n          str += \"  \";\n        }\n        indentStr += str;\n      } else {\n        indentStr = indentStr.substring(0, indentStr.length + count * 2);\n      }\n      var line = this.buffer.substring(this.__currentLine);\n      if (!line.match(/[^\\s]/)) {\n        this.buffer = this.buffer.substring(0, this.__currentLine) + indentStr;\n      }\n      this.__indentStr = indentStr;\n\n      return this;\n    },\n\n    /**\n     * Detects the current indentation level in the output, which has been added manually,\n     * ie outside of the `indent()` method.  When outputting an AST via `reprint()`, whitespace\n     * is copied too, this allows the code to adopt whatever indentation level has been\n     * output by the AST so that injecting `prettyPrint()`-ed new objects are at the same\\\n     * level.\n     *\n     * The old indent is returned, and should be passed to `resetIndent()` to restore the\n     * previous value.\n     *\n     * @return {Object} previous indentation\n     */\n    matchIndent() {\n      var line = this.buffer.substring(this.__currentLine);\n      var m = line.match(/^([\\s]*)/);\n      var indent = m[0];\n      var oldIndent = this.__indentStr;\n      this.__indentStr = indent;\n      return oldIndent;\n    },\n\n    /**\n     * Restores the previous indentation settings prior to `matchIndent()`\n     *\n     * @param indent {Object} previous indentation settings\n     */\n    resetIndent(indent) {\n      this.__indentStr = indent;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}