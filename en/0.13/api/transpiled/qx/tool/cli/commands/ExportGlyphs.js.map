{
  "version": 3,
  "names": [
    "_regeneratorRuntime",
    "e",
    "t",
    "r",
    "Object",
    "prototype",
    "n",
    "hasOwnProperty",
    "o",
    "defineProperty",
    "value",
    "i",
    "Symbol",
    "a",
    "iterator",
    "c",
    "asyncIterator",
    "u",
    "toStringTag",
    "define",
    "enumerable",
    "configurable",
    "writable",
    "wrap",
    "Generator",
    "create",
    "Context",
    "makeInvokeMethod",
    "tryCatch",
    "type",
    "arg",
    "call",
    "h",
    "l",
    "f",
    "s",
    "y",
    "GeneratorFunction",
    "GeneratorFunctionPrototype",
    "p",
    "d",
    "getPrototypeOf",
    "v",
    "values",
    "g",
    "defineIteratorMethods",
    "forEach",
    "_invoke",
    "AsyncIterator",
    "invoke",
    "_typeof",
    "resolve",
    "__await",
    "then",
    "callInvokeWithMethodAndArg",
    "Error",
    "done",
    "method",
    "delegate",
    "maybeInvokeDelegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "TypeError",
    "resultName",
    "next",
    "nextLoc",
    "pushTryEntry",
    "tryLoc",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "resetTryEntry",
    "completion",
    "reset",
    "isNaN",
    "length",
    "displayName",
    "isGeneratorFunction",
    "constructor",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "async",
    "Promise",
    "keys",
    "reverse",
    "pop",
    "prev",
    "charAt",
    "slice",
    "stop",
    "rval",
    "handle",
    "complete",
    "finish",
    "_catch",
    "delegateYield",
    "asyncGeneratorStep",
    "_asyncToGenerator",
    "arguments",
    "apply",
    "_next",
    "_throw",
    "$$dbClassInfo",
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "fs",
    "require",
    "path",
    "fontkit",
    "tmp",
    "Class",
    "extend",
    "tool",
    "cli",
    "commands",
    "Command",
    "statics",
    "getYargsCommand",
    "command",
    "describe",
    "members",
    "process",
    "_this",
    "_callee",
    "_font$GSUB",
    "filename",
    "font",
    "glyphs",
    "ligatureName",
    "lookupList",
    "lookupListIndexes",
    "_callee$",
    "_context",
    "argv",
    "fontFile",
    "match",
    "utils",
    "Http",
    "downloadToTempFile",
    "open",
    "GSUB",
    "toArray",
    "compiler",
    "Console",
    "error",
    "concat",
    "featureList",
    "feature",
    "index",
    "_subTable$coverage",
    "_subTable$ligatureSet",
    "subTable",
    "subTables",
    "leadingCharacters",
    "coverage",
    "rangeRecords",
    "start",
    "end",
    "character",
    "stringsForGlyph",
    "ligatureSets",
    "ligatureSet",
    "ligatureSetIndex",
    "leadingCharacter",
    "ligature",
    "glyph",
    "ligatureText",
    "components",
    "map",
    "x",
    "join",
    "hexId",
    "charCodeAt",
    "toString",
    "undefined",
    "characterSet",
    "codePoint",
    "_commands",
    "glyphForCodePoint",
    "_glyph$path",
    "ex",
    "layers",
    "found",
    "gName",
    "advanceWidth",
    "advanceHeight",
    "names",
    "promises",
    "writeFile",
    "glyphFile",
    "JSON",
    "stringify",
    "ExportGlyphs"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/tool/cli/commands/ExportGlyphs.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2023 Zenesis Limited (https://www.zenesis.com)\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (@johnspackman)\n\n************************************************************************ */\n\nconst fs = require(\"fs\");\nconst path = require(\"upath\");\nconst fontkit = require(\"fontkit\");\nconst tmp = require(\"tmp\");\n\n/**\n * Exports font ligatures as a map\n */\nqx.Class.define(\"qx.tool.cli.commands.ExportGlyphs\", {\n  extend: qx.tool.cli.commands.Command,\n\n  statics: {\n    getYargsCommand() {\n      return {\n        command: \"export-glyphs font-file glyph-file\",\n        describe: \"export font glyphs & ligatures\"\n      };\n    }\n  },\n\n  members: {\n    /**\n     * @override\n     */\n    async process() {\n      let filename = this.argv.fontFile;\n      if (filename.match(/^https?:\\/\\//)) {\n        filename = await qx.tool.utils.Http.downloadToTempFile(\n          filename,\n          /^font\\/(ttf|svg|eot|woff|woff2)$/\n        );\n      }\n      let font = await fontkit.open(filename);\n\n      if (!font.GSUB?.lookupList?.toArray()?.length) {\n        qx.tool.compiler.Console.error(\n          `The webfont in ${filename} does not have any ligatures`\n        );\n\n        return;\n      }\n\n      let glyphs = {};\n\n      // some IconFonts (MaterialIcons for example) use ligatures\n      // to name their icons. This code extracts the ligatures\n      // hat tip to Jossef Harush https://stackoverflow.com/questions/54721774/extracting-ttf-font-ligature-mappings/54728584\n      let ligatureName = {};\n      let lookupList = font.GSUB.lookupList.toArray();\n      let lookupListIndexes =\n        font.GSUB.featureList[0].feature.lookupListIndexes;\n      lookupListIndexes.forEach(index => {\n        let subTable = lookupList[index].subTables[0];\n        let leadingCharacters = [];\n        if (subTable?.coverage?.rangeRecords) {\n          subTable.coverage.rangeRecords.forEach(coverage => {\n            for (let i = coverage.start; i <= coverage.end; i++) {\n              let character = font.stringsForGlyph(i)[0];\n              leadingCharacters.push(character);\n            }\n          });\n        }\n        let ligatureSets = subTable?.ligatureSets?.toArray() || [];\n        ligatureSets.forEach((ligatureSet, ligatureSetIndex) => {\n          let leadingCharacter = leadingCharacters[ligatureSetIndex];\n          ligatureSet.forEach(ligature => {\n            let character = font.stringsForGlyph(ligature.glyph)[0];\n            if (!character) {\n              // qx.tool.compiler.Console.log(`WARN: ${this.getName()} no character ${ligature}`);\n              return;\n            }\n            let ligatureText =\n              leadingCharacter +\n              ligature.components.map(x => font.stringsForGlyph(x)[0]).join(\"\");\n            var hexId = character.charCodeAt(0).toString(16);\n            if (ligatureName[hexId] == undefined) {\n              ligatureName[hexId] = [ligatureText];\n            } else {\n              ligatureName[hexId].push(ligatureText);\n            }\n          });\n        });\n      });\n\n      font.characterSet.forEach(codePoint => {\n        let glyph = font.glyphForCodePoint(codePoint);\n        let commands = null;\n        try {\n          // This can throw an exception if the font does not support ligatures\n          commands = glyph?.path?.commands;\n        } catch (ex) {\n          commands = null;\n        }\n        if (!commands?.length && !glyph.layers) {\n          return;\n        }\n\n        const found = gName => {\n          glyphs[gName] = {\n            advanceWidth: glyph.advanceWidth,\n            advanceHeight: glyph.advanceHeight,\n            codePoint\n          };\n        };\n        if (glyph.name) {\n          found(glyph.name);\n        }\n        var names = ligatureName[codePoint.toString(16)];\n        if (names) {\n          names.forEach(found);\n        }\n      });\n\n      await fs.promises.writeFile(\n        this.argv.glyphFile,\n        JSON.stringify(glyphs, null, 2),\n        \"utf8\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}