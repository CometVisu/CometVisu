{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "testValue",
    "dd",
    "data",
    "Array",
    "selectBox",
    "ui",
    "form",
    "SelectBox",
    "setModel",
    "assertEquals",
    "getValue",
    "setValue",
    "getSelection",
    "assertException",
    "lang",
    "Function",
    "bind",
    "core",
    "ValidationError",
    "destroy",
    "dispose",
    "testNullable",
    "model",
    "setNullable",
    "setSelection",
    "testSelectionNoModel",
    "testResetValue",
    "resetValue",
    "testResetValueNotNullable",
    "testSelection"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/form/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.form.SelectBox\", {\n  extend: qx.test.mobile.MobileTestCase,\n\n  members: {\n    testValue() {\n      var dd = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(dd);\n\n      // Initial value '''\n      this.assertEquals(\"\", selectBox.getValue());\n\n      // Attempt to set value to \"Item 3\"\n      selectBox.setValue(\"Item 3\");\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Attempt to set invalid value occurs validation error.\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setValue, selectBox, \"Item 4\"),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"An validation error is expected, because this value does not exists in model.\"\n      );\n\n      this.assertEquals(\n        \"Item 3\",\n        selectBox.getValue(),\n        \"Nothing should be changed by input setValue('Item 4') because input value is not in model.\"\n      );\n\n      selectBox.destroy();\n      dd.dispose();\n      dd = null;\n    },\n\n    testNullable() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n\n      // Default case: nullable is true, selection is null.\n      this.assertEquals(\n        null,\n        selectBox.getSelection(),\n        \"Default selection of SelectBox should be null.\"\n      );\n\n      // Switch to nullable true...\n      selectBox.setNullable(false);\n\n      // Attempt to set null value occurs validation error.\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setSelection, selectBox, null),\n        qx.core.ValidationError,\n        \"Validation Error: SelectBox is not nullable\",\n        \"Value should not be accepted when SelectBox is not nullable.\"\n      );\n\n      // Switch to nullable true... try to set selection to null..\n      selectBox.setNullable(true);\n      selectBox.setSelection(null);\n      this.assertEquals(\n        null,\n        selectBox.getSelection(),\n        \"Value should be null.\"\n      );\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testSelectionNoModel() {\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setSelection, selectBox, 4),\n        qx.core.ValidationError,\n        \"Validation Error: Please apply model before selection\",\n        \"A selection needs a model.\"\n      );\n\n      selectBox.destroy();\n    },\n\n    testResetValue() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n      selectBox.setNullable(true);\n      selectBox.setValue(\"Item 3\");\n\n      this.assertEquals(2, selectBox.getSelection());\n\n      selectBox.resetValue();\n\n      this.assertEquals(null, selectBox.getSelection());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testResetValueNotNullable() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n      selectBox.setNullable(false);\n      selectBox.setValue(\"Item 3\");\n\n      this.assertEquals(2, selectBox.getSelection());\n\n      selectBox.resetValue();\n\n      this.assertEquals(0, selectBox.getSelection());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testSelection() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n\n      // Default value of selectedIndex after setting model is 0.\n      this.assertEquals(null, selectBox.getSelection());\n\n      // Set selection success\n      selectBox.setSelection(2);\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Set selection failure\n      // Nothing is changed because invalid selectedIndex value.\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setSelection, selectBox, 4),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Negative values are not allowed. Nothing is changed.\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setSelection, selectBox, -1),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Only type Number is allowed. Nothing is changed.\n      this.assertException(\n        qx.lang.Function.bind(selectBox.setSelection, selectBox, \"foo\"),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is not a number\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}