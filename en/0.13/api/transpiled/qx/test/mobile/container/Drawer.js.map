{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "testInitComposite",
    "parentContainer",
    "ui",
    "container",
    "Composite",
    "drawer",
    "Drawer",
    "drawerCandidate",
    "getChildren",
    "assertEquals",
    "destroy",
    "testInitRoot",
    "getRoot",
    "length",
    "testShowHide",
    "setTransitionDuration",
    "assertTrue",
    "isHidden",
    "show",
    "assertFalse",
    "hide",
    "testToggleVisibility",
    "targetVisibility",
    "toggleVisibility"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/container/Drawer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.container.Drawer\", {\n  extend: qx.test.mobile.MobileTestCase,\n\n  members: {\n    testInitComposite() {\n      var parentContainer = new qx.ui.mobile.container.Composite();\n\n      var drawer = new qx.ui.mobile.container.Drawer(parentContainer);\n\n      var drawerCandidate = parentContainer.getChildren()[0];\n\n      this.assertEquals(\n        drawer,\n        drawerCandidate,\n        \"Unexpected children of composite.\"\n      );\n\n      drawer.destroy();\n    },\n\n    testInitRoot() {\n      var drawer = new qx.ui.mobile.container.Drawer();\n\n      var drawerCandidate =\n        this.getRoot().getChildren()[this.getRoot().getChildren().length - 1];\n\n      this.assertEquals(\n        drawer,\n        drawerCandidate,\n        \"Unexpected children of root.\"\n      );\n\n      drawer.destroy();\n    },\n\n    testShowHide() {\n      var drawer = new qx.ui.mobile.container.Drawer();\n\n      drawer.setTransitionDuration(0);\n\n      // Initial hidden.\n      this.assertTrue(\n        drawer.isHidden(),\n        \"Drawer is asserted to be initially hidden.\"\n      );\n\n      // Show.\n      drawer.show();\n\n      this.assertFalse(drawer.isHidden(), \"Drawer is asserted to be shown.\");\n\n      // Hide again.\n      drawer.hide();\n\n      this.assertTrue(drawer.isHidden(), \"Drawer is asserted to be hidden.\");\n\n      drawer.destroy();\n    },\n\n    testToggleVisibility() {\n      var drawer = new qx.ui.mobile.container.Drawer();\n\n      drawer.setTransitionDuration(0);\n\n      // Initial hidden.\n      this.assertTrue(\n        drawer.isHidden(),\n        \"Drawer is asserted to be initially hidden.\"\n      );\n\n      // Toggle visibility.\n      var targetVisibility = drawer.toggleVisibility();\n\n      this.assertTrue(\n        targetVisibility,\n        \"Drawer's targetVisibility is asserted to be true.\"\n      );\n\n      this.assertFalse(drawer.isHidden(), \"Drawer is asserted to be shown.\");\n\n      // Toggle visibility again.\n      targetVisibility = drawer.toggleVisibility();\n\n      this.assertFalse(\n        targetVisibility,\n        \"Drawer's targetVisibility is asserted to be false.\"\n      );\n\n      this.assertTrue(drawer.isHidden(), \"Drawer is asserted to be hidden.\");\n\n      drawer.destroy();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}