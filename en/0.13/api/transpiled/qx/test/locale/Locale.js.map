{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "locale",
    "MTranslation",
    "members",
    "__defaultLocale",
    "__listenerId",
    "setUp",
    "manager",
    "Manager",
    "getInstance",
    "getLocale",
    "tearDown",
    "setLocale",
    "removeListenerById",
    "testTranslation",
    "assertNotUndefined",
    "addTranslation",
    "assertEquals",
    "getLanguage",
    "getTerritory",
    "one",
    "tr",
    "hello",
    "firstName",
    "lastName",
    "hiJonny",
    "car",
    "trn",
    "cars",
    "trc",
    "trnc",
    "fired",
    "evtLocale",
    "addListener",
    "e",
    "getData",
    "assertTrue",
    "translate",
    "testInvalidMessage",
    "textField",
    "ui",
    "form",
    "TextField",
    "setInvalidMessage",
    "setRequiredInvalidMessage",
    "getInvalidMessage",
    "getRequiredInvalidMessage",
    "dispose",
    "testMacCtrl",
    "Key",
    "getKeyName",
    "core",
    "Environment",
    "get",
    "testResetLocale",
    "variant",
    "oldLocale",
    "resetLocale",
    "test",
    "Locale"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/locale/Locale.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.locale.Locale\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.locale.MTranslation,\n\n  members: {\n    __defaultLocale: null,\n    __listenerId: null,\n\n    setUp() {\n      var manager = qx.locale.Manager.getInstance();\n      this.__defaultLocale = manager.getLocale();\n    },\n\n    tearDown() {\n      var manager = qx.locale.Manager.getInstance();\n      manager.setLocale(this.__defaultLocale);\n      if (this.__listenerId) {\n        manager.removeListenerById(this.__listenerId);\n      }\n    },\n\n    testTranslation() {\n      this.assertNotUndefined(qx.locale.Manager);\n      var manager = qx.locale.Manager.getInstance();\n\n      // add dummy translations\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"test one\",\n        \"test two\": \"test two\",\n        \"test Hello %1!\": \"test Hello %1!\",\n        \"test Jonny\": \"test Jonny\",\n        \"test one car\": \"test one car\",\n        \"test %1 cars\": \"test %1 cars\"\n      });\n\n      manager.addTranslation(\"de_QX\", {\n        \"test one\": \"Eins\",\n        \"test two\": \"Zwei\",\n        \"test Hello %1!\": \"Servus %1!\",\n        \"test Jonny\": \"Jonathan\",\n        \"test one car\": \"Ein Auto\",\n        \"test %1 cars\": \"%1 Autos\"\n      });\n\n      manager.setLocale(\"en_QX\");\n\n      this.assertEquals(\"en\", manager.getLanguage());\n      this.assertEquals(\"QX\", manager.getTerritory());\n\n      // tr(): simple case\n      var one = this.tr(\"test one\");\n      this.assertEquals(\"test one\", one);\n\n      // tr(): format string\n      var hello = this.tr(\"test Hello %1!\", \"Fabian\");\n      this.assertEquals(\"test Hello Fabian!\", hello);\n\n      // tr(): format string with namedArg\n      var hello = this.tr(\"test Hello %{firstName} %{lastName}!\", {\n        firstName: \"Fabian\",\n        lastName: \"Jonny\"\n      });\n\n      this.assertEquals(\"test Hello Fabian Jonny!\", hello);\n\n      // tr(): format string with translated arguments\n      var hiJonny = this.tr(\"test Hello %1!\", this.tr(\"test Jonny\"));\n      this.assertEquals(\"test Hello test Jonny!\", hiJonny);\n\n      // trn(): plural\n      var car = this.trn(\"test one car\", \"test %1 cars\", 0, 0);\n      this.assertEquals(\"test 0 cars\", car);\n\n      car = this.trn(\"test one car\", \"test %1 cars\", 1);\n      this.assertEquals(\"test one car\", car);\n\n      var cars = this.trn(\"test one car\", \"test %1 cars\", 5, 5);\n      this.assertEquals(\"test 5 cars\", cars);\n\n      // trc(): comments\n      one = this.trc(\"comment simple\", \"test one\");\n      this.assertEquals(\"test one\", one);\n      hello = this.trc(\"comment format\", \"test Hello %1!\", \"Fabian\");\n      this.assertEquals(\"test Hello Fabian!\", hello);\n      hiJonny = this.trc(\n        \"comment format args\",\n        \"test Hello %1!\",\n        this.tr(\"test Jonny\")\n      );\n\n      this.assertEquals(\"test Hello test Jonny!\", hiJonny);\n\n      // trnc(): comments and plural\n      car = this.trnc(\"comment count 0\", \"test one car\", \"test %1 cars\", 0, 0);\n      this.assertEquals(\"test 0 cars\", car);\n      car = this.trnc(\"comment count 1\", \"test one car\", \"test %1 cars\", 1);\n      this.assertEquals(\"test one car\", car);\n      cars = this.trnc(\"comment count 5\", \"test one car\", \"test %1 cars\", 5, 5);\n      this.assertEquals(\"test 5 cars\", cars);\n\n      // check listener\n      var fired = false;\n      var evtLocale = \"\";\n      this.__listenerId = manager.addListener(\"changeLocale\", function (e) {\n        fired = true;\n        evtLocale = e.getData();\n      });\n\n      // change locale\n      manager.setLocale(\"de_QX\");\n      this.assertTrue(fired);\n      this.assertEquals(\"de_QX\", evtLocale);\n\n      // simple case\n      one = one.translate();\n      this.assertEquals(\"Eins\", one);\n\n      // format string\n      hello = hello.translate();\n      this.assertEquals(\"Servus Fabian!\", hello);\n\n      // format string with translated arguments\n      hiJonny = hiJonny.translate();\n      this.assertEquals(\"Servus Jonathan!\", hiJonny);\n\n      // plural\n      car = car.translate();\n      this.assertEquals(\"Ein Auto\", car);\n\n      cars = cars.translate();\n      this.assertEquals(\"5 Autos\", cars);\n    },\n\n    testInvalidMessage() {\n      this.assertNotUndefined(qx.locale.Manager);\n      var manager = qx.locale.Manager.getInstance();\n\n      // add dummy translations\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"one!\",\n        \"test two\": \"two!\"\n      });\n\n      manager.addTranslation(\"de_QX\", {\n        \"test one\": \"Eins!\",\n        \"test two\": \"Zwei!\"\n      });\n\n      manager.setLocale(\"en_QX\");\n\n      var textField = new qx.ui.form.TextField();\n      textField.setInvalidMessage(this.tr(\"test one\"));\n      textField.setRequiredInvalidMessage(this.tr(\"test two\"));\n\n      this.assertEquals(\"one!\", textField.getInvalidMessage());\n      this.assertEquals(\"two!\", textField.getRequiredInvalidMessage());\n\n      manager.setLocale(\"de_QX\");\n\n      this.assertEquals(\"Eins!\", textField.getInvalidMessage());\n      this.assertEquals(\"Zwei!\", textField.getRequiredInvalidMessage());\n      textField.dispose();\n    },\n\n    testMacCtrl() {\n      // check if the translation is working\n      this.assertEquals(\n        \"Links\",\n        qx.locale.Key.getKeyName(\"short\", \"Left\", \"de_DE\")\n      );\n\n      // is the localized version\n      if (qx.core.Environment.get(\"os.name\") == \"osx\") {\n        // there is no strg on macs, only ctrl\n        this.assertEquals(\n          \"Ctrl\",\n          qx.locale.Key.getKeyName(\"short\", \"Control\", \"de_DE\")\n        );\n\n        this.assertEquals(\n          \"Control\",\n          qx.locale.Key.getKeyName(\"full\", \"Control\", \"de_DE\")\n        );\n      } else {\n        this.assertEquals(\n          \"Strg\",\n          qx.locale.Key.getKeyName(\"short\", \"Control\", \"de_DE\")\n        );\n\n        this.assertEquals(\n          \"Steuerung\",\n          qx.locale.Key.getKeyName(\"full\", \"Control\", \"de_DE\")\n        );\n      }\n    },\n\n    testResetLocale() {\n      var locale = qx.core.Environment.get(\"locale\");\n      var variant = qx.core.Environment.get(\"locale.variant\");\n      if (variant !== \"\") {\n        locale += \"_\" + variant;\n      }\n\n      var manager = qx.locale.Manager.getInstance();\n      var oldLocale = manager.getLocale();\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"one!\",\n        \"test two\": \"two!\"\n      });\n\n      manager.setLocale(\"en_QX\");\n\n      // try the reset of the locale\n      manager.resetLocale();\n      this.assertEquals(locale, manager.getLocale());\n\n      // make sure we set the locale which was there before the test\n      manager.setLocale(oldLocale);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}