{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testToTextWithObject",
    "time",
    "Date",
    "obj",
    "core",
    "Object",
    "ObjectRegistry",
    "register",
    "entry",
    "offset",
    "level",
    "items",
    "win",
    "window",
    "object",
    "$$hash",
    "formatter",
    "log",
    "appender",
    "Formatter",
    "getFormatter",
    "text",
    "toText",
    "assertEquals",
    "dispose",
    "testToTextAsDate",
    "set",
    "formatTimeAs",
    "testToTextWithClass",
    "clazz",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/log/Formatter.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n * Fabian Jakobs (fjakobs)\n\n ************************************************************************ */\n\nqx.Class.define(\"qx.test.log.Formatter\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testToTextWithObject() {\n      var time = new Date(1000);\n      var obj = new qx.core.Object();\n      qx.core.ObjectRegistry.register(obj);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        object: obj.$$hash\n      };\n\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      var text = formatter.toText(entry);\n      this.assertEquals(\"000900 qx.core.Object[\" + obj.$$hash + \"]:\", text);\n      obj.dispose();\n    },\n\n    testToTextAsDate() {\n      var time = new Date(2019, 9, 10, 1, 2, 3);\n      var obj = new qx.core.Object();\n      qx.core.ObjectRegistry.register(obj);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        object: obj.$$hash\n      };\n\n      var formatter = new qx.log.appender.Formatter().set({\n        formatTimeAs: \"datetime\"\n      });\n\n      var text = formatter.toText(entry);\n      this.assertEquals(\n        \"2019-10-10 01:02:03 qx.core.Object[\" + obj.$$hash + \"]:\",\n        text\n      );\n\n      obj.dispose();\n    },\n\n    testToTextWithClass() {\n      var time = new Date(1000);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        clazz: qx.core.Object\n      };\n\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      var text = formatter.toText(entry);\n      this.assertEquals(\"000900 qx.core.Object:\", text);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}