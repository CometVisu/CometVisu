{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testFilters",
    "log",
    "appender",
    "Native",
    "Logger",
    "statics",
    "count",
    "process",
    "entry",
    "args",
    "Util",
    "toText",
    "console",
    "level",
    "call",
    "addFilter",
    "TestLogger",
    "my",
    "register",
    "trace",
    "debug",
    "warn",
    "error",
    "info",
    "core",
    "Assert",
    "assertEquals",
    "unregister",
    "resetFilters",
    "test",
    "Filters"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/log/Filters.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************ */\n\n/**\n * @ignore(my.TestLogger)\n */\n/* global my */\nqx.Class.define(\"qx.test.log.Filters\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testFilters() {\n      qx.log.appender.Native;\n\n      var Logger = qx.log.Logger;\n      qx.Class.define(\"my.TestLogger\", {\n        statics: {\n          count: 0,\n          process(entry) {\n            this.count++;\n            var args = qx.log.appender.Util.toText(entry);\n            (console[entry.level] || console.log).call(\n              console,\n              \"TestLogger: \" + args\n            );\n          }\n        }\n      });\n\n      Logger.addFilter(\"afdemo\", \"qx.log.appender.Native\");\n      Logger.addFilter(/^test-level/, \"my.TestLogger\", \"warn\");\n\n      var TestLogger = my.TestLogger;\n      qx.log.Logger.register(TestLogger);\n\n      TestLogger.count = 0;\n\n      this.trace(\"Trace Test\");\n      this.debug(\"Debug Test\");\n      this.warn(\"Warn Test\");\n      this.error(\"Error Test\");\n      this.info(\"Info Test\");\n\n      Logger.trace(\"test-level\", \"Trace Test\");\n      Logger.debug(\"test-level\", \"Debug Test\");\n      Logger.info(\"test-level\", \"Info Test\");\n      Logger.warn(\"test-level\", \"Warn Test\");\n      Logger.error(\"test-level\", \"Error Test\");\n      qx.core.Assert.assertEquals(2, TestLogger.count);\n\n      qx.log.Logger.unregister(TestLogger);\n      qx.log.Logger.resetFilters();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qBAAqB,EAAE;IACrCC,MAAM,EAAEN,EAAE,CAACO,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE;MACPC,WAAW,WAAXA,WAAWA,CAAA,EAAG;QACZX,EAAE,CAACY,GAAG,CAACC,QAAQ,CAACC,MAAM;QAEtB,IAAIC,MAAM,GAAGf,EAAE,CAACY,GAAG,CAACG,MAAM;QAC1Bf,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,eAAe,EAAE;UAC/BW,OAAO,EAAE;YACPC,KAAK,EAAE,CAAC;YACRC,OAAO,WAAPA,OAAOA,CAACC,KAAK,EAAE;cACb,IAAI,CAACF,KAAK,EAAE;cACZ,IAAIG,IAAI,GAAGpB,EAAE,CAACY,GAAG,CAACC,QAAQ,CAACQ,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC;cAC7C,CAACI,OAAO,CAACJ,KAAK,CAACK,KAAK,CAAC,IAAID,OAAO,CAACX,GAAG,EAAEa,IAAI,CACxCF,OAAO,EACP,cAAc,GAAGH,IACnB,CAAC;YACH;UACF;QACF,CAAC,CAAC;QAEFL,MAAM,CAACW,SAAS,CAAC,QAAQ,EAAE,wBAAwB,CAAC;QACpDX,MAAM,CAACW,SAAS,CAAC,aAAa,EAAE,eAAe,EAAE,MAAM,CAAC;QAExD,IAAIC,UAAU,GAAGC,EAAE,CAACD,UAAU;QAC9B3B,EAAE,CAACY,GAAG,CAACG,MAAM,CAACc,QAAQ,CAACF,UAAU,CAAC;QAElCA,UAAU,CAACV,KAAK,GAAG,CAAC;QAEpB,IAAI,CAACa,KAAK,CAAC,YAAY,CAAC;QACxB,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC;QACxB,IAAI,CAACC,IAAI,CAAC,WAAW,CAAC;QACtB,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC;QACxB,IAAI,CAACC,IAAI,CAAC,WAAW,CAAC;QAEtBnB,MAAM,CAACe,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC;QACxCf,MAAM,CAACgB,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC;QACxChB,MAAM,CAACmB,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC;QACtCnB,MAAM,CAACiB,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC;QACtCjB,MAAM,CAACkB,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC;QACxCjC,EAAE,CAACmC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,CAAC,EAAEV,UAAU,CAACV,KAAK,CAAC;QAEhDjB,EAAE,CAACY,GAAG,CAACG,MAAM,CAACuB,UAAU,CAACX,UAAU,CAAC;QACpC3B,EAAE,CAACY,GAAG,CAACG,MAAM,CAACwB,YAAY,CAAC,CAAC;MAC9B;IACF;EACF,CAAC,CAAC;EArEFvC,EAAE,CAACwC,IAAI,CAAC5B,GAAG,CAAC6B,OAAO,CAACtC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}