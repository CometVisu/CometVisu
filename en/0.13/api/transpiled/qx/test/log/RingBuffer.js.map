{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "__initialLogLevel",
    "log",
    "Logger",
    "getLevel",
    "tearDown",
    "setLevel",
    "appender",
    "unregister",
    "testLog",
    "RingBuffer",
    "clear",
    "register",
    "debug",
    "events",
    "getAllLogEvents",
    "assertEquals",
    "length",
    "items",
    "text",
    "testExceedMaxMessages",
    "i",
    "process",
    "index",
    "testRetrieveLogEvents",
    "event",
    "retrieveLogEvents",
    "testClearHistory",
    "clearHistory",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/log/RingBuffer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.log.RingBuffer\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    setUp() {\n      this.__initialLogLevel = qx.log.Logger.getLevel();\n    },\n\n    tearDown() {\n      qx.log.Logger.setLevel(this.__initialLogLevel);\n      if (this.appender) {\n        qx.log.Logger.unregister(this.appender);\n      }\n      this.appender = null;\n    },\n\n    testLog() {\n      this.appender = new qx.log.appender.RingBuffer();\n\n      qx.log.Logger.setLevel(\"debug\");\n      qx.log.Logger.clear();\n      qx.log.Logger.register(this.appender);\n      qx.log.Logger.debug(\"test\");\n\n      var events = this.appender.getAllLogEvents();\n      this.assertEquals(1, events.length);\n      this.assertEquals(\"test\", events[0].items[0].text);\n\n      qx.log.Logger.unregister(this.appender);\n      this.appender = null;\n    },\n\n    testExceedMaxMessages() {\n      var appender = new qx.log.appender.RingBuffer(2);\n\n      for (var i = 0; i < 10; i++) {\n        appender.process({ index: i });\n      }\n\n      var events = appender.getAllLogEvents();\n      this.assertEquals(2, events.length);\n      this.assertEquals(8, events[0].index);\n      this.assertEquals(9, events[1].index);\n    },\n\n    testRetrieveLogEvents() {\n      var appender = new qx.log.appender.RingBuffer(6);\n\n      for (var i = 0; i < 10; i++) {\n        var event = {\n          index: i\n        };\n\n        appender.process(event);\n      }\n\n      var events = appender.retrieveLogEvents(5);\n      this.assertEquals(5, events.length);\n      this.assertEquals(5, events[0].index);\n      this.assertEquals(9, events[4].index);\n    },\n\n    testClearHistory() {\n      var appender = new qx.log.appender.RingBuffer();\n      appender.process({});\n      this.assertEquals(1, appender.getAllLogEvents().length);\n\n      appender.clearHistory();\n      this.assertEquals(0, appender.getAllLogEvents().length);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}