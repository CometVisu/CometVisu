{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "tearDown",
    "getSandbox",
    "restore",
    "testConstructor",
    "spacer",
    "ui",
    "core",
    "Spacer",
    "assertEquals",
    "getWidth",
    "getHeight",
    "destroy",
    "testConstructorWithParams",
    "testDestroy",
    "spy",
    "queue",
    "Dispose",
    "assertCalledOnce",
    "add",
    "assertCalledWith",
    "testDestroyOnAlreadyDestroyed",
    "flush",
    "assertNotCalled",
    "testDestroyWithParent",
    "layout",
    "HBox",
    "container",
    "Composite",
    "_remove",
    "dispose",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/core/Spacer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2016 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.core.Spacer\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.dev.unit.MMock,\n\n  members: {\n    tearDown() {\n      // Restore all stubs, spies and overridden host objects.\n      this.getSandbox().restore();\n    },\n\n    testConstructor() {\n      var spacer = new qx.ui.core.Spacer();\n\n      this.assertEquals(0, spacer.getWidth());\n      this.assertEquals(0, spacer.getHeight());\n\n      // cleanup memory\n      spacer.destroy();\n    },\n\n    testConstructorWithParams() {\n      var spacer = new qx.ui.core.Spacer(100, 200);\n\n      this.assertEquals(100, spacer.getWidth());\n      this.assertEquals(200, spacer.getHeight());\n\n      // cleanup memory\n      spacer.destroy();\n    },\n\n    testDestroy() {\n      this.spy(qx.ui.core.queue.Dispose, \"add\");\n\n      var spacer = new qx.ui.core.Spacer();\n      spacer.destroy();\n\n      this.assertCalledOnce(qx.ui.core.queue.Dispose.add);\n      this.assertCalledWith(qx.ui.core.queue.Dispose.add, spacer);\n    },\n\n    testDestroyOnAlreadyDestroyed() {\n      var spacer = new qx.ui.core.Spacer();\n\n      // destroy it and flush the dispose queue\n      spacer.destroy();\n      qx.ui.core.queue.Dispose.flush();\n\n      // add spy now, otherwise the previous destroy call is counted\n      this.spy(qx.ui.core.queue.Dispose, \"add\");\n\n      // now test it\n      spacer.destroy();\n\n      this.assertNotCalled(qx.ui.core.queue.Dispose.add);\n    },\n\n    testDestroyWithParent() {\n      var layout = new qx.ui.layout.HBox();\n      var container = new qx.ui.container.Composite(layout);\n      var spacer = new qx.ui.core.Spacer();\n      container.add(spacer);\n\n      this.spy(container, \"_remove\");\n\n      spacer.destroy();\n\n      this.assertCalledOnce(container._remove);\n      this.assertCalledWith(container._remove, spacer);\n\n      // cleanup memory\n      container.destroy();\n      layout.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}