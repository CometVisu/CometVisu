{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__blocker",
    "setUp",
    "core",
    "Blocker",
    "superclass",
    "prototype",
    "call",
    "getRoot",
    "setColor",
    "setOpacity",
    "tearDown",
    "dispose",
    "testBlocker",
    "blockerElement",
    "getBlockerElement",
    "block",
    "flush",
    "assertTrue",
    "isBlocked",
    "isIncluded",
    "unblock",
    "assertFalse",
    "testBlockerThrice",
    "testForceUnblock",
    "forceUnblock",
    "testBlockedEvent",
    "_this",
    "__blockedEventFired",
    "__unblockedEventFired",
    "addListenerOnce",
    "e",
    "wait",
    "testRestoreActiveAndFocusedWidgets",
    "activeWidget",
    "focusedWidget",
    "focusHandler",
    "event",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "handler",
    "Focus",
    "txt2",
    "form",
    "TextField",
    "add",
    "left",
    "top",
    "focus",
    "txt1",
    "activate",
    "Widget",
    "getWidgetByElement",
    "getActive",
    "getFocus",
    "destroy",
    "testRestoreDisposedWidget",
    "widget",
    "txt"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/core/Blocker.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.core.Blocker\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    __blocker: null,\n\n    setUp() {\n      super.setUp();\n\n      this.__blocker = new qx.ui.core.Blocker(this.getRoot());\n      this.__blocker.setColor(\"green\");\n      this.__blocker.setOpacity(0.5);\n    },\n\n    tearDown() {\n      super.tearDown();\n\n      this.__blocker.dispose();\n    },\n\n    testBlocker() {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testBlockerThrice() {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testForceUnblock() {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.forceUnblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testBlockedEvent() {\n      this.__blockedEventFired = false;\n      this.__unblockedEventFired = false;\n\n      this.__blocker.addListenerOnce(\"blocked\", e => {\n        this.__blockedEventFired = true;\n      });\n\n      this.__blocker.addListenerOnce(\"unblocked\", e => {\n        this.__unblockedEventFired = true;\n      });\n\n      this.__blocker.block();\n      this.__blocker.unblock();\n\n      this.wait(\n        100,\n        function () {\n          this.assertTrue(\n            this.__blockedEventFired,\n            \"'blocked' event was not fired, after block() was executed!\"\n          );\n\n          this.assertTrue(\n            this.__unblockedEventFired,\n            \"'unblocked' event was not fired, after unblock() was executed!\"\n          );\n        },\n        this\n      );\n    },\n\n    testRestoreActiveAndFocusedWidgets() {\n      var activeWidget, focusedWidget;\n      var focusHandler = qx.event.Registration.getManager(window).getHandler(\n        qx.event.handler.Focus\n      );\n\n      var txt2 = new qx.ui.form.TextField();\n      this.getRoot().add(txt2, { left: 100, top: 0 });\n      txt2.focus();\n\n      var txt1 = new qx.ui.form.TextField();\n      this.getRoot().add(txt1);\n      // set active widget after focusing a widget, because focus() sets the same widget as active one.\n      txt1.activate();\n\n      this.flush();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      activeWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getActive()\n      );\n\n      this.assertFalse(\n        activeWidget === txt1,\n        \"text field 1 must not be active\"\n      );\n\n      focusedWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getFocus()\n      );\n\n      this.assertFalse(\n        focusedWidget === txt2,\n        \"text field 2 must not be focused\"\n      );\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n\n      activeWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getActive()\n      );\n\n      this.assertTrue(activeWidget === txt1, \"text field 1 must be active\");\n\n      focusedWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getFocus()\n      );\n\n      this.assertTrue(focusedWidget === txt2, \"text field 2 must be focused\");\n\n      // clear\n      txt1.destroy();\n      txt2.destroy();\n      this.flush();\n    },\n\n    testRestoreDisposedWidget() {\n      var widget;\n      var focusHandler = qx.event.Registration.getManager(window).getHandler(\n        qx.event.handler.Focus\n      );\n\n      var txt = new qx.ui.form.TextField();\n      this.getRoot().add(txt);\n      txt.focus();\n      this.flush();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      // destroy text field\n      txt.destroy();\n      this.flush();\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n\n      // text field must not be focused\n      widget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getFocus());\n      this.assertFalse(\n        widget === txt,\n        \"text field must be focused, because it is destroyed\"\n      );\n\n      txt.destroy();\n      this.flush();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}