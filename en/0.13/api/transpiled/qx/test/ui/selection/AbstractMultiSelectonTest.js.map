{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "selection",
    "AbstractSingleSelectonTest",
    "type",
    "members",
    "testSetSelectionWithTooMuchElements",
    "testSetSelection",
    "AbstractMultiSelectonTest",
    "superclass",
    "prototype",
    "call",
    "_notInSelection",
    "_testSetSelection",
    "flush",
    "testSetSelectionOverrideWithLess",
    "_selection",
    "_widget",
    "setSelection",
    "expected",
    "result",
    "getSelection",
    "_assertArrayEquals",
    "testSelectAll",
    "resetSelection",
    "widget",
    "that",
    "assertEventFired",
    "selectAll",
    "event",
    "_getChildren",
    "getData",
    "assertEventNotFired",
    "testAddToSelection",
    "newValue",
    "length",
    "addToSelection",
    "testAddToSelectionWithNotChildElement",
    "testElement",
    "_createTestElement",
    "assertException",
    "Error",
    "destroy",
    "testRemoveFromSelection",
    "itemToRemove",
    "removeFromSelection",
    "testRemoveFromSelectionWithNotChildElement",
    "testRemoveFromSelectionWithNotSelectedElement",
    "testInvertSelection",
    "invertSelection",
    "testInvertSelectionWithErrors",
    "setSelectionMode",
    "testInvertSelectionWithDisabledChildElements",
    "tempNotInSelection",
    "i",
    "push"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/selection/AbstractMultiSelectonTest.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.selection.AbstractMultiSelectonTest\", {\n  extend: qx.test.ui.selection.AbstractSingleSelectonTest,\n  type: \"abstract\",\n\n  members: {\n    testSetSelectionWithTooMuchElements() {\n      // Do nothing\n    },\n\n    // overridden\n    testSetSelection() {\n      super.testSetSelection();\n\n      // Sets up the new selection\n      var selection = [];\n      selection[0] = this._notInSelection[0];\n      selection[1] = this._notInSelection[1];\n      selection[2] = this._notInSelection[2];\n      selection[3] = this._notInSelection[3];\n      selection[4] = this._notInSelection[4];\n\n      this._testSetSelection(selection);\n      this.flush();\n    },\n\n    testSetSelectionOverrideWithLess() {\n      // Sets up the new selection\n      this._selection = [];\n      this._selection[0] = this._notInSelection[0];\n      this._selection[1] = this._notInSelection[1];\n      this._selection[2] = this._notInSelection[2];\n      this._selection[3] = this._notInSelection[3];\n      this._selection[4] = this._notInSelection[4];\n      this._widget.setSelection(this._selection);\n      this.flush();\n\n      // Test setSelection() with the same elements, but less\n      var expected = [\n        this._selection[0],\n        this._selection[2],\n        this._selection[4]\n      ];\n\n      this._widget.setSelection(expected);\n\n      // Tests the result from \"getSelection\"\n      var result = this._widget.getSelection();\n      this._assertArrayEquals(expected, result, \"Selection is wrong\");\n\n      // Test setSelection(), with one element from the selection before\n      this._widget.setSelection(this._selection);\n      this._widget.setSelection([this._selection[0]]);\n      result = this._widget.getSelection();\n      expected = [this._selection[0]];\n      this._assertArrayEquals(expected, result, \"Selection is wrong\");\n      this.flush();\n    },\n\n    testSelectAll() {\n      // Resets the selection to compare the results.\n      this._widget.resetSelection();\n\n      // Tests event and select all items\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.selectAll();\n          that.flush();\n        },\n        function (event) {\n          // Tests the result from the event\n          that._assertArrayEquals(\n            that._getChildren(),\n            event.getData(),\n            \"Selection is wrong!\"\n          );\n        },\n        \"'changeSelection' event not fired!\"\n      );\n\n      // A second selectAll() shouldn't fire an event\n      this.assertEventNotFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.selectAll();\n        },\n        function (event) {},\n        \"'changeSelection' event fired!\"\n      );\n\n      // Tests the result from \"getSelection\"\n      this._selection = this._widget.getSelection();\n      this._assertArrayEquals(\n        this._getChildren(),\n        this._selection,\n        \"Selection is wrong!\"\n      );\n    },\n\n    testAddToSelection() {\n      // Sets up a new item for selection\n      var newValue = this._notInSelection[0];\n      this._selection[this._selection.length] = newValue;\n\n      // Tests event and adds item to the selection\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.addToSelection(newValue);\n          that.flush();\n        },\n        function (event) {\n          // Tests the result from the event\n          that._assertArrayEquals(\n            that._selection,\n            event.getData(),\n            \"The result of the selection is wrong\"\n          );\n        },\n        \"'changeSelection' event not fired!\"\n      );\n\n      // A second selection shouldn't fire an event\n      this.assertEventNotFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.addToSelection(newValue);\n        },\n        function (event) {},\n        \"'changeSelection' event fired!\"\n      );\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(\n        this._selection,\n        this._widget.getSelection(),\n        \"Selection is wrong\"\n      );\n    },\n\n    testAddToSelectionWithNotChildElement() {\n      var that = this;\n      var testElement = this._createTestElement(\"Test Element\");\n\n      this.assertException(\n        function () {\n          that._widget.addToSelection(testElement);\n        },\n        Error,\n        null,\n        \"No error occurs by trying to add an element\" +\n          \" to the selection which isn't a child element!\"\n      );\n\n      testElement.destroy();\n    },\n\n    testRemoveFromSelection() {\n      // Sets up the item to remove and update the selection array\n      var selection = this._selection;\n      var itemToRemove = selection[selection.length - 1];\n      delete selection[selection.length - 1];\n      selection.length = selection.length - 1;\n\n      // Tests event and removes the item\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.removeFromSelection(itemToRemove);\n          that.flush();\n        },\n        function (event) {\n          // Tests the result from the event\n          that._assertArrayEquals(\n            that._selection,\n            event.getData(),\n            \"The result of the selection is wrong\"\n          );\n        },\n        \"'changeSelection' event not fired!\"\n      );\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(\n        this._selection,\n        this._widget.getSelection(),\n        \"Selection is wrong\"\n      );\n    },\n\n    testRemoveFromSelectionWithNotChildElement() {\n      var that = this;\n      var testElement = this._createTestElement(\"Test Element\");\n\n      this.assertException(\n        function () {\n          that._widget.removeFromSelection(testElement);\n        },\n        Error,\n        null,\n        \"No error occurs by trying to remove an element\" +\n          \" which isn't a child element!\"\n      );\n\n      testElement.destroy();\n    },\n\n    testRemoveFromSelectionWithNotSelectedElement() {\n      var itemToRemove = this._notInSelection[0];\n\n      var widget = this._widget;\n      this.assertEventNotFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.removeFromSelection(itemToRemove);\n        },\n        function (event) {},\n        \"'changeSelection' event fired!\"\n      );\n    },\n\n    testInvertSelection() {\n      var that = this;\n      var widget = this._widget;\n      this.assertEventFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.invertSelection();\n          that.flush();\n        },\n        function (event) {\n          // Tests the result from the event\n          that._assertArrayEquals(\n            that._notInSelection,\n            event.getData(),\n            \"The result of the selection is wrong\"\n          );\n        },\n        \"'changeSelection' event not fired!\"\n      );\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(\n        this._notInSelection,\n        this._widget.getSelection(),\n        \"Selection is wrong\"\n      );\n    },\n\n    testInvertSelectionWithErrors() {\n      var widget = this._widget;\n      widget.setSelectionMode(\"single\");\n\n      this.assertException(\n        function () {\n          widget.invertSelection();\n        },\n        Error,\n        null,\n        \"No error occurs by trying to invert elements\" +\n          \" in 'single' selection mode!\"\n      );\n    },\n\n    testInvertSelectionWithDisabledChildElements() {\n      // test setup\n      var tempNotInSelection = [];\n      for (var i = 0; i < this._notInSelection.length; i++) {\n        tempNotInSelection.push(this._notInSelection[i]);\n      }\n      this._notInSelection = tempNotInSelection;\n\n      var that = this;\n      var widget = this._widget;\n      this.assertEventFired(\n        widget,\n        \"changeSelection\",\n        function () {\n          widget.invertSelection();\n          that.flush();\n        },\n        function (event) {\n          // Tests the result from the event\n          that._assertArrayEquals(\n            that._notInSelection,\n            event.getData(),\n            \"The result of the selection is wrong\"\n          );\n        },\n        \"'changeSelection' event not fired!\"\n      );\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(\n        this._notInSelection,\n        this._widget.getSelection(),\n        \"Selection is wrong\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}