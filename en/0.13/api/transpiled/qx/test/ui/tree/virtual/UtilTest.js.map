{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "model",
    "setUp",
    "rawData",
    "name",
    "kids",
    "data",
    "marshal",
    "Json",
    "createModel",
    "tearDown",
    "dispose",
    "test_isNode_with_nodes_and_leafs",
    "assertTrue",
    "ui",
    "tree",
    "core",
    "Util",
    "isNode",
    "children",
    "getKids",
    "i",
    "l",
    "getLength",
    "item",
    "getItem",
    "result",
    "undefined",
    "assertFalse",
    "test_isNode_with_invalid_child_property",
    "test_isNode_with_null_calls",
    "test_hasChildren_with_leafs",
    "hasChildren",
    "test_hasChildren_and_ignore_leafs",
    "test_hasChildren_with_invalid_child_property",
    "test_hasChildren_with_null_calls",
    "test",
    "virtual",
    "UtilTest"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/UtilTest.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.UtilTest\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    model: null,\n\n    setUp() {\n      var rawData = {\n        name: \"Root\",\n        kids: [\n          { name: \"Node1\", kids: [{ name: \"Leaf1.1\" }] },\n          { name: \"Node2\", kids: [] },\n          { name: \"Node3\", kids: null },\n          { name: \"Leaf1\" },\n          { name: \"Leaf2\" }\n        ]\n      };\n\n      this.model = qx.data.marshal.Json.createModel(rawData);\n    },\n\n    tearDown() {\n      this.model.dispose();\n      this.model = null;\n    },\n\n    \"test isNode with nodes and leafs\"() {\n      var model = this.model;\n      this.assertTrue(qx.ui.tree.core.Util.isNode(model, \"kids\"));\n\n      var children = model.getKids();\n      for (var i = 0, l = children.getLength(); i < l; i++) {\n        var item = children.getItem(i);\n        var result = qx.ui.tree.core.Util.isNode(item, \"kids\");\n\n        if (item.getKids !== undefined) {\n          this.assertTrue(result);\n        } else {\n          this.assertFalse(result);\n        }\n      }\n    },\n\n    \"test isNode with invalid child property\"() {\n      this.assertFalse(\n        qx.ui.tree.core.Util.isNode(this.model, \"noChildProperty\")\n      );\n    },\n\n    \"test isNode with null calls\"() {\n      this.assertFalse(qx.ui.tree.core.Util.isNode(null, \"kids\"));\n      this.assertFalse(qx.ui.tree.core.Util.isNode(this.model, null));\n      this.assertFalse(qx.ui.tree.core.Util.isNode(null, null));\n    },\n\n    \"test hasChildren with leafs\"() {\n      var model = this.model;\n      var children = model.getKids();\n\n      this.assertTrue(qx.ui.tree.core.Util.hasChildren(model, \"kids\"));\n      this.assertTrue(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(0), \"kids\")\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(1), \"kids\")\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(2), \"kids\")\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(3), \"kids\")\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(4), \"kids\")\n      );\n    },\n\n    \"test hasChildren and ignore leafs\"() {\n      var model = this.model;\n      var children = model.getKids();\n\n      this.assertTrue(qx.ui.tree.core.Util.hasChildren(model, \"kids\", true));\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(0), \"kids\", true)\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(1), \"kids\", true)\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(2), \"kids\", true)\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(3), \"kids\", true)\n      );\n\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(children.getItem(4), \"kids\", true)\n      );\n    },\n\n    \"test hasChildren with invalid child property\"() {\n      this.assertFalse(\n        qx.ui.tree.core.Util.hasChildren(this.model, \"noChildProperty\")\n      );\n    },\n\n    \"test hasChildren with null calls\"() {\n      this.assertFalse(qx.ui.tree.core.Util.hasChildren(null, \"kids\"));\n      this.assertFalse(qx.ui.tree.core.Util.hasChildren(this.model, null));\n      this.assertFalse(qx.ui.tree.core.Util.hasChildren(null, null));\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}