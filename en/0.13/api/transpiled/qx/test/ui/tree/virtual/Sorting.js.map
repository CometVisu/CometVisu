{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "testSorter",
    "sorter",
    "a",
    "b",
    "getName",
    "sortedModel",
    "createModel",
    "root",
    "createModelAndSetModel",
    "openNode",
    "getChildren",
    "getItem",
    "openNodes",
    "__sortModel",
    "delegate",
    "setDelegate",
    "flush",
    "expected",
    "getVisibleItemsFrom",
    "lang",
    "Array",
    "insertAt",
    "__testBuildLookupTable",
    "dispose",
    "testModelUnmodified",
    "rootChildrenClone",
    "concat",
    "__testOrderNotChanged",
    "toArray",
    "testSorterAndFilter",
    "removeAt",
    "filter",
    "child",
    "model",
    "children",
    "sort",
    "i",
    "getLength",
    "Node",
    "found",
    "getLookupTable",
    "msg",
    "join",
    "assertEquals",
    "length",
    "assertTrue",
    "equals",
    "getPane",
    "getRowConfig",
    "getItemCount",
    "__logModel",
    "level",
    "prefix",
    "console",
    "log",
    "Sorting"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/Sorting.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Node)\n */\nqx.Class.define(\"qx.test.ui.tree.virtual.Sorting\", {\n  extend: qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members: {\n    testSorter() {\n      var sorter = function (a, b) {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var sortedModel = this.createModel(2);\n      var root = this.createModelAndSetModel(2);\n\n      this.tree.openNode(root.getChildren().getItem(2));\n      this.tree.openNode(\n        root.getChildren().getItem(2).getChildren().getItem(4)\n      );\n\n      var openNodes = [\n        sortedModel,\n        sortedModel.getChildren().getItem(2),\n        sortedModel.getChildren().getItem(2).getChildren().getItem(4)\n      ];\n\n      this.__sortModel(sortedModel, sorter);\n\n      var delegate = {\n        sorter: sorter\n      };\n\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      var expected = this.getVisibleItemsFrom(sortedModel, openNodes);\n      qx.lang.Array.insertAt(expected, sortedModel, 0);\n\n      this.__testBuildLookupTable(expected);\n\n      //this.__logModel(sortedModel);\n      sortedModel.dispose();\n    },\n\n    testModelUnmodified() {\n      var sorter = function (a, b) {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var root = this.createModelAndSetModel(1);\n      var rootChildrenClone = root.getChildren().concat([]);\n\n      var delegate = {\n        sorter: sorter\n      };\n\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      this.__testOrderNotChanged(\n        rootChildrenClone.toArray(),\n        root.getChildren().toArray()\n      );\n\n      rootChildrenClone.dispose();\n    },\n\n    testSorterAndFilter() {\n      var sorter = function (a, b) {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var sortedModel = this.createModel(1);\n      var root = this.createModelAndSetModel(1);\n\n      // remove filtered node \"Node 2\"\n      sortedModel.getChildren().removeAt(2);\n\n      this.__sortModel(sortedModel, sorter);\n\n      var delegate = {\n        sorter: sorter,\n\n        filter(child) {\n          return child.getName() == \"Node 2\" ? false : true;\n        }\n      };\n\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      var expected = this.getVisibleItemsFrom(sortedModel, []);\n      qx.lang.Array.insertAt(expected, sortedModel, 0);\n\n      this.__testBuildLookupTable(expected);\n\n      //this.__logModel(sortedModel);\n      sortedModel.dispose();\n    },\n\n    __sortModel(model, sorter) {\n      var children = model.getChildren();\n      children.sort(sorter);\n\n      for (var i = 0; i < children.getLength(); i++) {\n        var child = children.getItem(i);\n\n        if (child instanceof qx.test.ui.tree.virtual.Node) {\n          this.__sortModel(child, sorter);\n        }\n      }\n    },\n\n    __testBuildLookupTable(expected) {\n      var found = this.tree.getLookupTable().toArray();\n      var msg =\n        \"Expected [\" +\n        expected.join(\", \") +\n        \"], but found [\" +\n        found.join(\", \") +\n        \"]\";\n\n      this.assertEquals(expected.length, found.length, msg);\n      for (var i = 0; i < expected.length; i++) {\n        this.assertTrue(expected[i].equals(found[i]), msg);\n      }\n      this.assertEquals(\n        expected.length,\n        this.tree.getPane().getRowConfig().getItemCount()\n      );\n    },\n\n    __testOrderNotChanged(expected, found) {\n      var msg =\n        \"Expected [\" +\n        expected.join(\", \") +\n        \"], but found [\" +\n        found.join(\", \") +\n        \"]\";\n\n      this.assertEquals(expected.length, found.length, msg);\n      for (var i = 0; i < expected.length; i++) {\n        this.assertTrue(expected[i].equals(found[i]), msg);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHOD TO LOG TREE MODEL\n    ---------------------------------------------------------------------------\n    */\n\n    __logModel(model, level) {\n      level = level != null ? level : 0;\n\n      var prefix = \"\";\n      for (var i = 0; i < level; i++) {\n        prefix += \"-\";\n      }\n      console.log(prefix + \">\", model.getName());\n\n      if (model.getChildren == null) {\n        return;\n      }\n\n      var children = model.getChildren();\n      for (var i = 0; i < children.getLength(); i++) {\n        this.__logModel(children.getItem(i), level + 1);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}