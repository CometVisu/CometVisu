{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "implement",
    "ui",
    "tree",
    "core",
    "IVirtualTree",
    "include",
    "MMock",
    "events",
    "open",
    "close",
    "properties",
    "openProperty",
    "check",
    "init",
    "members",
    "model",
    "controller",
    "nodesOpen",
    "setUp",
    "spyOpenNode",
    "spy",
    "spyCloseNode",
    "rawData",
    "name",
    "kids",
    "data",
    "marshal",
    "Json",
    "createModel",
    "parentItem",
    "Name",
    "getItem",
    "getKids",
    "push",
    "childItem",
    "setOpenProperty",
    "OpenCloseController",
    "tearDown",
    "dispose",
    "testModelToTree",
    "node",
    "openNodeNames",
    "resetHistory",
    "setOpen",
    "assertCalledOnce",
    "Object",
    "keys",
    "assertEquals",
    "length",
    "testTreeToModel",
    "fireDataEvent",
    "assertTrue",
    "getOpen",
    "assertFalse",
    "isShowTopLevelOpenCloseIcons",
    "isShowLeafs",
    "getSelection",
    "Error",
    "getLookupTable",
    "isNode",
    "item",
    "isNodeOpen",
    "getName",
    "getLevel",
    "row",
    "hasChildren",
    "openNode",
    "closeNode",
    "openNodeWithoutScrolling",
    "closeNodeWithoutScrolling",
    "refresh",
    "test",
    "virtual"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/OpenCloseController.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.OpenCloseController\", {\n  extend: qx.dev.unit.TestCase,\n  implement: qx.ui.tree.core.IVirtualTree,\n  include: qx.dev.unit.MMock,\n\n  events: {\n    open: \"qx.event.type.Data\",\n    close: \"qx.event.type.Data\"\n  },\n\n  properties: {\n    openProperty: {\n      check: \"String\",\n      init: null\n    }\n  },\n\n  members: {\n    model: null,\n    controller: null,\n    nodesOpen: null,\n\n    setUp() {\n      if (!this.spyOpenNode) {\n        this.spyOpenNode = this.spy(this, \"openNode\");\n        this.spyCloseNode = this.spy(this, \"closeNode\");\n      }\n\n      var rawData = [\n        {\n          name: \"Root\",\n          open: false,\n          kids: [\n            {\n              name: \"Branch 1\",\n              open: false,\n              kids: [\n                {\n                  name: \"Leaf 1.1\"\n                },\n\n                {\n                  name: \"Leaf 1.2\"\n                },\n\n                {\n                  name: \"Branch 1.3\",\n                  open: false,\n                  kids: [\n                    {\n                      name: \"Branch 1.3.1\",\n                      open: false,\n                      kids: [\n                        {\n                          name: \"Leaf 1.3.1.1\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ];\n\n      this.model = qx.data.marshal.Json.createModel(rawData, true);\n\n      // Ensure that pushing onto the model works as well\n      var parentItem = qx.data.marshal.Json.createModel(\n        {\n          Name: \"New parent\",\n          kids: [],\n          open: true\n        },\n\n        true\n      );\n\n      this.model.getItem(0).getKids().push(parentItem);\n\n      var childItem = qx.data.marshal.Json.createModel(\n        {\n          Name: \"Child of new parent\"\n        },\n\n        true\n      );\n\n      parentItem.getKids().push(childItem);\n\n      childItem = qx.data.marshal.Json.createModel(\n        {\n          Name: \"Child of Root\"\n        },\n\n        true\n      );\n\n      this.model.getItem(0).getKids().push(childItem);\n\n      this.nodesOpen = {};\n\n      this.setOpenProperty(\"open\");\n      this.controller = new qx.ui.tree.core.OpenCloseController(\n        this,\n        this.model.getItem(0)\n      );\n    },\n\n    tearDown() {\n      this.controller.dispose();\n      this.controller = null;\n\n      this.model.dispose();\n      this.model = null;\n    },\n\n    testModelToTree() {\n      var node;\n      var openNodeNames;\n\n      // Reset the spies\n      this.spyOpenNode.resetHistory();\n      this.spyCloseNode.resetHistory();\n\n      // get the Branch 1 node\n      node = this.model.getItem(0).getKids().getItem(0);\n\n      // open Branch 1\n      node.setOpen(true);\n\n      // openNode should have been called exactly once\n      this.assertCalledOnce(this.spyOpenNode);\n\n      // there should be only one node open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 1);\n\n      // the name of the open node should be \"Branch 1\"\n      this.assertEquals(openNodeNames[0], \"Branch 1\");\n\n      // close Branch 1\n      this.model.getItem(0).getKids().getItem(0).setOpen(false);\n\n      // closeNode should have been called exactly once\n      this.assertCalledOnce(this.spyCloseNode);\n\n      // there should be no nodes open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 0);\n    },\n\n    testTreeToModel() {\n      var node;\n      var openNodeNames;\n\n      // Reset the spies\n      this.spyOpenNode.resetHistory();\n      this.spyCloseNode.resetHistory();\n\n      // get the Branch 1 node\n      node = this.model.getItem(0).getKids().getItem(0);\n\n      // send an open event to the controller as if the open button were clicked\n      this.fireDataEvent(\"open\", node);\n\n      // openNode should have been called exactly once\n      this.assertCalledOnce(this.spyOpenNode);\n\n      // there should be only one node open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 1);\n\n      // the name of the open node should be \"Branch 1\"\n      this.assertEquals(openNodeNames[0], \"Branch 1\");\n\n      // the model value should now be true\n      this.assertTrue(node.getOpen());\n\n      // send a close event to the controller as if the open button were clicked\n      this.fireDataEvent(\"close\", node);\n\n      // closeNode should have been called exactly once\n      this.assertCalledOnce(this.spyCloseNode);\n\n      // there should be no nodes open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 0);\n\n      // the model value should now be false\n      this.assertFalse(node.getOpen());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MOCK API\n    ---------------------------------------------------------------------------\n    */\n\n    isShowTopLevelOpenCloseIcons() {\n      return true;\n    },\n\n    isShowLeafs() {\n      return true;\n    },\n\n    getSelection() {\n      throw new Error(\"getSelection called unexpectedly\");\n    },\n\n    getLookupTable() {\n      throw new Error(\"getLookupTable called unexpectedly\");\n    },\n\n    isNode(item) {\n      throw new Error(\"isNode called unexpectedly\");\n    },\n\n    isNodeOpen(node) {\n      return this.nodesOpen[node.getName()];\n    },\n\n    getLevel(row) {\n      throw new Error(\"getLevel called unexpectedly\");\n    },\n\n    hasChildren(node) {\n      throw new Error(\"hasChildren called unexpectedly\");\n    },\n\n    openNode(node) {\n      this.nodesOpen[node.getName()] = true;\n    },\n\n    closeNode(node) {\n      delete this.nodesOpen[node.getName()];\n    },\n\n    openNodeWithoutScrolling(node) {},\n    closeNodeWithoutScrolling(node) {},\n\n    refresh() {\n      // nothing to do\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}