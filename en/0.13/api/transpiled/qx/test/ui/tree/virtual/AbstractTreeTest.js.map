{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MMock",
    "list",
    "MAssert",
    "construct",
    "constructor",
    "call",
    "core",
    "Object",
    "data",
    "marshal",
    "MEventBubbling",
    "name",
    "setName",
    "properties",
    "check",
    "event",
    "apply",
    "nullable",
    "members",
    "toString",
    "getName",
    "equals",
    "item",
    "tree",
    "virtual",
    "Leaf",
    "children",
    "Array",
    "setChildren",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "getChildren",
    "i",
    "getLength",
    "getItem",
    "dispose",
    "setUp",
    "AbstractTreeTest",
    "superclass",
    "prototype",
    "VirtualTree",
    "getRoot",
    "add",
    "tearDown",
    "model",
    "createModel",
    "level",
    "root",
    "Node",
    "_createNodes",
    "createModelAndSetModel",
    "setLabelPath",
    "setChildProperty",
    "setModel",
    "getVisibleItemsFrom",
    "parent",
    "openNodes",
    "expected",
    "child",
    "push",
    "indexOf",
    "otherExpected",
    "concat",
    "__getPrefix",
    "_createLeafs",
    "__P_435_0",
    "prefix",
    "startsWith",
    "substr",
    "length",
    "isDefined",
    "undefine"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/AbstractTreeTest.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Leaf)\n * @ignore(qx.test.ui.tree.virtual.Node)\n */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.AbstractTreeTest\", {\n  type: \"abstract\",\n  extend: qx.test.ui.LayoutTestCase,\n  include: [qx.dev.unit.MMock, qx.test.ui.list.MAssert],\n\n  construct() {\n    super();\n\n    qx.Class.define(\"qx.test.ui.tree.virtual.Leaf\", {\n      extend: qx.core.Object,\n      include: qx.data.marshal.MEventBubbling,\n\n      construct(name) {\n        super();\n\n        this.setName(name);\n      },\n\n      properties: {\n        name: {\n          check: \"String\",\n          event: \"changeName\",\n          apply: \"_applyEventPropagation\",\n          nullable: true\n        }\n      },\n\n      members: {\n        toString() {\n          return this.getName();\n        },\n\n        equals(item) {\n          return this.getName() === item.getName();\n        }\n      }\n    });\n\n    qx.Class.define(\"qx.test.ui.tree.virtual.Node\", {\n      extend: qx.test.ui.tree.virtual.Leaf,\n\n      construct(name, children) {\n        super(name);\n\n        if (children == null) {\n          children = new qx.data.Array();\n        }\n        this.setChildren(children);\n      },\n\n      properties: {\n        children: {\n          check: \"qx.data.Array\",\n          event: \"changeChildren\",\n          apply: \"_applyEventPropagation\",\n          nullable: true\n        }\n      },\n\n      destruct() {\n        if (!qx.core.ObjectRegistry.inShutDown) {\n          var children = this.getChildren();\n          for (var i = 0; i < children.getLength(); i++) {\n            children.getItem(i).dispose();\n          }\n          children.dispose();\n          this.setChildren(null);\n        }\n      }\n    });\n  },\n\n  members: {\n    tree: null,\n\n    setUp() {\n      super.setUp();\n\n      this.tree = new qx.ui.tree.VirtualTree();\n      this.getRoot().add(this.tree);\n    },\n\n    tearDown() {\n      super.tearDown();\n\n      this.tree.dispose();\n      this.tree = null;\n\n      if (this.model != null) {\n        this.model.dispose();\n        this.model = null;\n      }\n    },\n\n    createModel(level) {\n      var root = new qx.test.ui.tree.virtual.Node(\"Root node\");\n      this._createNodes(root, level);\n\n      return root;\n    },\n\n    createModelAndSetModel(level) {\n      this.model = this.createModel(level);\n      this.tree.setLabelPath(\"name\");\n      this.tree.setChildProperty(\"children\");\n      this.tree.setModel(this.model);\n      return this.model;\n    },\n\n    getVisibleItemsFrom(parent, openNodes) {\n      var expected = [];\n\n      if (parent.getChildren() != null) {\n        for (var i = 0; i < parent.getChildren().getLength(); i++) {\n          var child = parent.getChildren().getItem(i);\n          expected.push(child);\n\n          if (openNodes.indexOf(child) > -1) {\n            var otherExpected = this.getVisibleItemsFrom(child, openNodes);\n            expected = expected.concat(otherExpected);\n          }\n        }\n      }\n\n      return expected;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS TO CREATE A TREE STRUCTURE\n    ---------------------------------------------------------------------------\n    */\n\n    _createNodes(parent, level) {\n      if (level > 0) {\n        for (var i = 0; i < 5; i++) {\n          var item = new qx.test.ui.tree.virtual.Node(\n            \"Node \" + this.__getPrefix(parent) + i\n          );\n\n          parent.getChildren().push(item);\n\n          this._createNodes(item, level - 1);\n          this._createLeafs(item);\n        }\n      }\n    },\n\n    _createLeafs(parent) {\n      for (var i = 0; i < 5; i++) {\n        var child = new qx.test.ui.tree.virtual.Leaf(\n          \"Leaf \" + this.__getPrefix(parent) + i\n        );\n\n        parent.getChildren().push(child);\n      }\n    },\n\n    __getPrefix(item) {\n      var name = item.getName();\n      var prefix = \"\";\n      if (name.startsWith(\"Node\")) {\n        prefix = name.substr(5, name.length - 5) + \".\";\n      }\n      return prefix;\n    }\n  },\n\n  destruct() {\n    if (qx.Class.isDefined(\"qx.test.ui.tree.virtual.Leaf\")) {\n      qx.Class.undefine(\"qx.test.ui.tree.virtual.Leaf\");\n    }\n\n    if (qx.Class.isDefined(\"qx.test.ui.tree.virtual.Node\")) {\n      qx.Class.undefine(\"qx.test.ui.tree.virtual.Node\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}