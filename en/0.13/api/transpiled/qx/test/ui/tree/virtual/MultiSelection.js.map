{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "setUp",
    "MultiSelection",
    "superclass",
    "prototype",
    "call",
    "setSelectionMode",
    "testSelection",
    "root",
    "createModelAndSetModel",
    "selection",
    "getSelection",
    "push",
    "getChildren",
    "getItem",
    "assertEquals",
    "getLength",
    "expectedSelection",
    "data",
    "Array",
    "assertDataArrayEquals",
    "dispose",
    "selectionFromManager",
    "_manager",
    "i",
    "length",
    "_getDataFromRow",
    "testSelectionByUserInteraction",
    "replaceSelection",
    "assertTrue",
    "equals",
    "testSelectionEventByUserInteraction",
    "self",
    "assertEventFired",
    "e",
    "testSelectionAfterCloseParentNode",
    "parent",
    "openNode",
    "closeNode"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/MultiSelection.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.MultiSelection\", {\n  extend: qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members: {\n    setUp() {\n      super.setUp();\n\n      this.tree.setSelectionMode(\"multi\");\n    },\n\n    testSelection() {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      selection.push(root);\n      selection.push(root.getChildren().getItem(0));\n      selection.push(root.getChildren().getItem(1));\n\n      // check selection on tree\n      this.assertEquals(3, this.tree.getSelection().getLength(), \"On Tree\");\n      var expectedSelection = new qx.data.Array([\n        root,\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(1)\n      ]);\n\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(\n          selectionFromManager[i]\n        );\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertDataArrayEquals(\n        selection,\n        expectedSelection,\n        \"On selection manager\"\n      );\n\n      expectedSelection.dispose();\n    },\n\n    testSelectionByUserInteraction() {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      this.tree._manager.replaceSelection([1, 3, 5]);\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(\n          selectionFromManager[i]\n        );\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      var expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertTrue(\n        selection.equals(expectedSelection),\n        \"On selection manager\"\n      );\n\n      expectedSelection.dispose();\n\n      // check selection on tree\n      expectedSelection = new qx.data.Array([\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(2),\n        root.getChildren().getItem(4)\n      ]);\n\n      this.assertEquals(3, selection.getLength(), \"On Tree\");\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n    },\n\n    testSelectionEventByUserInteraction() {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      var self = this;\n      this.assertEventFired(\n        selection,\n        \"change\",\n        function () {\n          self.tree._manager.replaceSelection([1, 3, 5]);\n        },\n        function (e) {\n          // check selection on manager\n          var selectionFromManager = self.tree._manager.getSelection();\n          for (var i = 0; i < selectionFromManager.length; i++) {\n            selectionFromManager[i] = self.tree._getDataFromRow(\n              selectionFromManager[i]\n            );\n          }\n          self.assertEquals(\n            3,\n            selectionFromManager.length,\n            \"On selection manager\"\n          );\n\n          var expectedSelection = new qx.data.Array(selectionFromManager);\n          self.assertDataArrayEquals(\n            selection,\n            expectedSelection,\n            \"On selection manager\"\n          );\n\n          expectedSelection.dispose();\n\n          // check selection on tree\n          self.assertEquals(3, selection.getLength(), \"On Tree\");\n          expectedSelection = new qx.data.Array([\n            root.getChildren().getItem(0),\n            root.getChildren().getItem(2),\n            root.getChildren().getItem(4)\n          ]);\n\n          self.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n          expectedSelection.dispose();\n        }\n      );\n    },\n\n    testSelectionAfterCloseParentNode() {\n      var root = this.createModelAndSetModel(3);\n\n      var parent = root.getChildren().getItem(1);\n      this.tree.openNode(root.getChildren().getItem(1));\n\n      var selection = this.tree.getSelection();\n      selection.push(root);\n      selection.push(root.getChildren().getItem(0));\n      selection.push(parent.getChildren().getItem(1));\n      selection.push(parent.getChildren().getItem(3));\n      selection.push(parent.getChildren().getItem(5));\n      selection.push(parent.getChildren().getItem(6));\n      selection.push(root.getChildren().getItem(2));\n\n      // check selection before close parent\n      this.assertEquals(7, this.tree.getSelection().getLength(), \"On Tree\");\n      this.assertEquals(\n        7,\n        this.tree._manager.getSelection().length,\n        \"On selection manager\"\n      );\n\n      this.tree.closeNode(parent);\n\n      // check selection on tree\n      this.assertEquals(3, this.tree.getSelection().getLength(), \"On Tree\");\n      var expectedSelection = new qx.data.Array([\n        root,\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(2)\n      ]);\n\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(\n          selectionFromManager[i]\n        );\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertDataArrayEquals(\n        selection,\n        expectedSelection,\n        \"On selection manager\"\n      );\n\n      expectedSelection.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}