{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "locale",
    "MTranslation",
    "construct",
    "constructor",
    "call",
    "manager",
    "Manager",
    "getInstance",
    "members",
    "__translationAdded",
    "setUp",
    "addTranslation",
    "key_short_Shift",
    "setLocale",
    "tearDown",
    "resetLocale",
    "testCommandInMenuButton",
    "command",
    "Command",
    "menuButton",
    "menu",
    "Button",
    "assertEquals",
    "toString",
    "getChildControl",
    "getValue",
    "dispose",
    "testLabel",
    "label",
    "basic",
    "Label",
    "tr",
    "getRoot",
    "add",
    "setValue",
    "destroy",
    "testToolTipText",
    "widget",
    "core",
    "Widget",
    "setToolTipText",
    "getToolTipText",
    "LocaleSwitch"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/LocaleSwitch.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.LocaleSwitch\", {\n  extend: qx.test.ui.LayoutTestCase,\n  include: qx.locale.MTranslation,\n\n  construct() {\n    super();\n    this.manager = qx.locale.Manager.getInstance();\n  },\n\n  members: {\n    manager: null,\n    __translationAdded: null,\n\n    setUp() {\n      if (!this.__translationAdded) {\n        // add dummy translations\n        this.manager.addTranslation(\"en_QX\", {\n          \"test one\": \"test one\",\n          \"test two\": \"test two\",\n          \"test Hello %1!\": \"test Hello %1!\",\n          \"test Jonny\": \"test Jonny\",\n          \"test One car\": \"test One car\",\n          \"test %1 cars\": \"test %1 cars\",\n          key_short_Shift: \"Shift\"\n        });\n\n        this.manager.addTranslation(\"de_QX\", {\n          \"test one\": \"Eins\",\n          \"test two\": \"Zwei\",\n          \"test Hello %1!\": \"Servus %1!\",\n          \"test Jonny\": \"Jonathan\",\n          \"test One car\": \"Ein Auto\",\n          \"test %1 cars\": \"%1 Autos\",\n          key_short_Shift: \"Umschalt\"\n        });\n\n        this.__translationAdded = true;\n      }\n      this.manager.setLocale(\"en_QX\");\n    },\n\n    tearDown() {\n      this.manager.resetLocale();\n    },\n\n    testCommandInMenuButton() {\n      var command = new qx.ui.command.Command(\"Shift-A\");\n      var menuButton = new qx.ui.menu.Button(\"Juhu\", null, command);\n      this.assertEquals(\"Shift+A\", command.toString());\n      this.assertEquals(\n        \"Shift+A\",\n        menuButton.getChildControl(\"shortcut\").getValue()\n      );\n\n      this.manager.setLocale(\"de_QX\");\n      this.assertEquals(\"Umschalt+A\", command.toString());\n      this.assertEquals(\n        \"Umschalt+A\",\n        menuButton.getChildControl(\"shortcut\").getValue()\n      );\n\n      menuButton.dispose();\n      command.dispose();\n    },\n\n    testLabel() {\n      var label = new qx.ui.basic.Label(this.tr(\"test one\"));\n      this.getRoot().add(label);\n\n      this.assertEquals(\"test one\", label.getValue());\n      this.manager.setLocale(\"de_QX\");\n      this.assertEquals(\"Eins\", label.getValue());\n      this.manager.setLocale(\"en_QX\");\n\n      label.setValue(this.tr(\"test Hello %1!\", this.tr(\"test Jonny\")));\n      this.assertEquals(\"test Hello test Jonny!\", label.getValue());\n      this.manager.setLocale(\"de_QX\");\n      this.assertEquals(\"Servus Jonathan!\", label.getValue());\n\n      // de -> en\n      label.setValue(this.tr(\"test two\"));\n      this.assertEquals(\"Zwei\", label.getValue());\n      this.manager.setLocale(\"en_QX\");\n      this.assertEquals(\"test two\", label.getValue());\n\n      label.destroy();\n    },\n\n    testToolTipText() {\n      var widget = new qx.ui.core.Widget();\n      this.getRoot().add(widget);\n\n      widget.setToolTipText(this.tr(\"test one\"));\n\n      this.assertEquals(\"test one\", widget.getToolTipText());\n      this.manager.setLocale(\"de_QX\");\n      this.assertEquals(\"Eins\", widget.getToolTipText());\n\n      widget.destroy();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}