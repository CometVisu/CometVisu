{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "virtual",
    "layer",
    "LayerTestCase",
    "members",
    "setUp",
    "_pool",
    "WidgetCell",
    "superclass",
    "prototype",
    "call",
    "tearDown",
    "i",
    "length",
    "destroy",
    "flush",
    "_createLayer",
    "getCellWidget",
    "row",
    "column",
    "widget",
    "pop",
    "core",
    "Widget",
    "setBackgroundColor",
    "poolCellWidget",
    "setUserData",
    "push",
    "_assertCells",
    "firstRow",
    "firstColumn",
    "rowCount",
    "columnCount",
    "msg",
    "children",
    "_getChildren",
    "assertEquals",
    "y",
    "x",
    "getUserData",
    "testGetRenderedCellWidget",
    "pool",
    "data",
    "Array",
    "setAutoDisposeItems",
    "getRoot",
    "add",
    "fullUpdate",
    "getRenderedCellWidget",
    "dispose",
    "testEmptyCells",
    "getChildren",
    "child",
    "assertInstance",
    "Spacer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/WidgetCell.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.WidgetCell\", {\n  extend: qx.test.ui.virtual.layer.LayerTestCase,\n\n  members: {\n    setUp() {\n      this._pool = [];\n\n      super.setUp();\n    },\n\n    tearDown() {\n      for (var i = 0; i < this._pool.length; i++) {\n        this._pool[i].destroy();\n      }\n      this.flush();\n\n      this._pool = null;\n      super.tearDown();\n    },\n\n    _createLayer() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n    getCellWidget(row, column) {\n      var widget = this._pool.pop() || new qx.ui.core.Widget();\n      widget.setBackgroundColor((row + column) % 2 == 0 ? \"red\" : \"green\");\n      return widget;\n    },\n\n    poolCellWidget(widget) {\n      widget.setUserData(\"row\", -1);\n      widget.setUserData(\"column\", -1);\n      this._pool.push(widget);\n    },\n\n    _assertCells(firstRow, firstColumn, rowCount, columnCount, msg) {\n      var children = this.layer._getChildren();\n\n      this.assertEquals(rowCount * columnCount, children.length);\n\n      for (var y = 0; y < rowCount; y++) {\n        for (var x = 0; x < columnCount; x++) {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var widget = children[y * columnCount + x];\n          this.assertEquals(row, widget.getUserData(\"cell.row\"));\n          this.assertEquals(column, widget.getUserData(\"cell.column\"));\n        }\n      }\n    },\n\n    testGetRenderedCellWidget() {\n      var pool = new qx.data.Array();\n      pool.setAutoDisposeItems(true);\n      var layer = new qx.ui.virtual.layer.WidgetCell({\n        getCellWidget(row, column) {\n          var widget = new qx.ui.core.Widget();\n          widget.setUserData(\"test\", row + \"/\" + column);\n          pool.push(widget);\n          return row == 2 && column == 2 ? null : widget;\n        },\n\n        poolCellWidget(widget) {}\n      });\n\n      this.getRoot().add(layer);\n      this.flush();\n\n      layer.fullUpdate(1, 1, [10, 10, 10], [50, 50, 50]);\n      this.flush();\n\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(2, 2));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 4));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 4));\n\n      this.assertEquals(\n        \"1/1\",\n        layer.getRenderedCellWidget(1, 1).getUserData(\"test\")\n      );\n\n      this.assertEquals(\n        \"1/3\",\n        layer.getRenderedCellWidget(1, 3).getUserData(\"test\")\n      );\n\n      this.assertEquals(\n        \"3/1\",\n        layer.getRenderedCellWidget(3, 1).getUserData(\"test\")\n      );\n\n      this.assertEquals(\n        \"3/3\",\n        layer.getRenderedCellWidget(3, 3).getUserData(\"test\")\n      );\n\n      layer.destroy();\n      pool.dispose();\n    },\n\n    testEmptyCells() {\n      var layer = new qx.ui.virtual.layer.WidgetCell({\n        getCellWidget(row, column) {\n          return column === 0 ? new qx.ui.core.Widget() : null;\n        },\n\n        poolCellWidget(widget) {\n          widget.destroy();\n        }\n      });\n\n      this.getRoot().add(layer);\n      this.flush();\n\n      layer.fullUpdate(0, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30]);\n      this.flush();\n\n      var children = layer.getChildren();\n\n      for (var y = 0; y <= 5; y++) {\n        for (var x = 0; x <= 2; x++) {\n          var child = children[y * 3 + x];\n          if (x === 0) {\n            this.assertInstance(child, qx.ui.core.Widget);\n          } else {\n            this.assertInstance(child, qx.ui.core.Spacer);\n          }\n        }\n      }\n\n      layer.destroy();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}