{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "defaultSize",
    "count",
    "axis",
    "ui",
    "virtual",
    "core",
    "Axis",
    "tearDown",
    "dispose",
    "assertItem",
    "expectedItemIndex",
    "expectedOffset",
    "cellData",
    "msg",
    "assertEquals",
    "index",
    "offset",
    "testDefaultItemSize",
    "getDefaultItemSize",
    "setDefaultItemSize",
    "testItemCount",
    "getItemCount",
    "setItemCount",
    "testItemSize",
    "sizes",
    "key",
    "setItemSize",
    "parseInt",
    "i",
    "getItemSize",
    "testItemAtPosition",
    "getItemAtPosition",
    "assertNull",
    "testEmptyAxis",
    "getTotalSize",
    "testGetItemAtPositionCustomSizes",
    "d",
    "ITEM_POS_ITER",
    "ITEM_POS_COUNT",
    "testGetItemAtPositionStress",
    "j",
    "total",
    "pos",
    "itemSize",
    "Math",
    "round",
    "random",
    "testGetTotalSize",
    "correction",
    "TOTAL_SIZE_ITER",
    "TOTAL_SIZE_ITEMS",
    "testGetTotalSizeStress",
    "testGetItemSizes",
    "assertArrayEquals",
    "getItemSizes",
    "testGetItemPosition",
    "getItemPosition",
    "testGetItemPositionCustomSizes",
    "testChangeEvents",
    "self",
    "listener",
    "assertEventFired",
    "assertEventNotFired",
    "resetItemSizes",
    "SETUP_ITER",
    "testPerformanceSetupBestCase",
    "start",
    "Date",
    "__ranges",
    "end",
    "testPerformanceSetupWorstCase",
    "FIND_ITER",
    "testPerformanceFindBestCase",
    "max",
    "testPerformanceFindWorstCase",
    "destruct",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/Axis.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.Axis\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    setUp() {\n      this.defaultSize = 10;\n      this.count = 1000;\n      this.axis = new qx.ui.virtual.core.Axis(this.defaultSize, this.count);\n    },\n\n    tearDown() {\n      this.axis.dispose();\n    },\n\n    assertItem(expectedItemIndex, expectedOffset, cellData, msg) {\n      this.assertEquals(\n        expectedItemIndex,\n        cellData.index,\n        msg + \": invalid item index\"\n      );\n\n      this.assertEquals(\n        expectedOffset,\n        cellData.offset,\n        msg + \": invalid item offset\"\n      );\n    },\n\n    testDefaultItemSize() {\n      this.assertEquals(this.defaultSize, this.axis.getDefaultItemSize());\n\n      this.axis.setDefaultItemSize(20);\n      this.assertEquals(20, this.axis.getDefaultItemSize());\n    },\n\n    testItemCount() {\n      this.assertEquals(this.count, this.axis.getItemCount());\n\n      this.axis.setItemCount(this.count * 2);\n      this.assertEquals(this.count * 2, this.axis.getItemCount());\n    },\n\n    testItemSize() {\n      var sizes = {};\n      sizes[100] = 2;\n      sizes[200] = 30;\n      sizes[600] = this.defaultSize;\n      for (var key in sizes) {\n        this.axis.setItemSize(parseInt(key, 10), sizes[key]);\n      }\n\n      for (var i = 0; i < this.count; i++) {\n        this.assertEquals(\n          sizes[i] || this.defaultSize,\n          this.axis.getItemSize(i)\n        );\n      }\n\n      this.axis.setDefaultItemSize(this.defaultSize * 2);\n      for (var i = 0; i < this.count; i++) {\n        this.assertEquals(\n          sizes[i] || this.defaultSize * 2,\n          this.axis.getItemSize(i)\n        );\n      }\n    },\n\n    testItemAtPosition() {\n      this.axis.setItemCount(1000);\n      this.axis.setDefaultItemSize(10);\n\n      // in the middle\n      this.assertItem(500, 5, this.axis.getItemAtPosition(10 * 500 + 5));\n\n      // position at the edge\n      this.assertItem(0, 0, this.axis.getItemAtPosition(0));\n      this.assertItem(999, 9, this.axis.getItemAtPosition(10 * 1000 - 1));\n\n      // position outside of the range\n      this.assertNull(this.axis.getItemAtPosition(-10));\n      this.assertNull(this.axis.getItemAtPosition(10 * 1000));\n      this.assertNull(this.axis.getItemAtPosition(10 * 1000 + 100));\n\n      // special case: no items in the axis\n      this.axis.setItemCount(0);\n      this.assertNull(this.axis.getItemAtPosition(0));\n    },\n\n    testEmptyAxis() {\n      this.axis.setItemSize(1, 10);\n      this.axis.setItemCount(0);\n      this.assertEquals(0, this.axis.getTotalSize());\n    },\n\n    testGetItemAtPositionCustomSizes() {\n      var d = this.defaultSize;\n      var sizes = {};\n      sizes[100] = d - 8;\n      sizes[200] = d + 20;\n      sizes[600] = d;\n      for (var key in sizes) {\n        this.axis.setItemSize(parseInt(key, 10), sizes[key]);\n      }\n\n      // exact start position\n      this.assertItem(0, 0, this.axis.getItemAtPosition(0 * d));\n      this.assertItem(10, 0, this.axis.getItemAtPosition(10 * d));\n      this.assertItem(101, 0, this.axis.getItemAtPosition(101 * d - 8));\n      this.assertItem(201, 0, this.axis.getItemAtPosition(201 * d - 8 + 20));\n      this.assertItem(601, 0, this.axis.getItemAtPosition(601 * d - 8 + 20));\n\n      // in the middle\n      this.assertItem(0, 4, this.axis.getItemAtPosition(0 * d + 4));\n      this.assertItem(10, 4, this.axis.getItemAtPosition(10 * d + 4));\n      this.assertItem(101, 4, this.axis.getItemAtPosition(101 * d - 8 + 4));\n      this.assertItem(\n        201,\n        4,\n        this.axis.getItemAtPosition(201 * d - 8 + 20 + 4)\n      );\n\n      this.assertItem(\n        601,\n        4,\n        this.axis.getItemAtPosition(601 * d - 8 + 20 + 4)\n      );\n\n      //before end\n      this.assertItem(0, d - 1, this.axis.getItemAtPosition(0 * d + d - 1));\n      this.assertItem(10, d - 1, this.axis.getItemAtPosition(10 * d + d - 1));\n      this.assertItem(\n        101,\n        d - 1,\n        this.axis.getItemAtPosition(101 * d - 8 + d - 1)\n      );\n\n      this.assertItem(\n        201,\n        d - 1,\n        this.axis.getItemAtPosition(201 * d - 8 + 20 + d - 1)\n      );\n\n      this.assertItem(\n        601,\n        d - 1,\n        this.axis.getItemAtPosition(601 * d - 8 + 20 + d - 1)\n      );\n    },\n\n    ITEM_POS_ITER: 5,\n    ITEM_POS_COUNT: 10000,\n\n    testGetItemAtPositionStress() {\n      for (var j = 0; j < this.ITEM_POS_ITER; j++) {\n        var total = 0;\n        this.axis.setItemCount(this.ITEM_POS_COUNT);\n\n        for (var i = 0; i < this.ITEM_POS_COUNT; i++) {\n          if (i == this.ITEM_POS_COUNT - 10) {\n            var pos = total + 20;\n          }\n\n          var itemSize = 50 + Math.round(Math.random() * 80);\n          total += itemSize;\n          this.axis.setItemSize(i, itemSize);\n        }\n\n        this.assertItem(\n          this.ITEM_POS_COUNT - 10,\n          20,\n          this.axis.getItemAtPosition(pos)\n        );\n      }\n    },\n\n    testGetTotalSize() {\n      var d = this.defaultSize;\n      var count = this.count;\n\n      this.assertEquals(d * count, this.axis.getTotalSize());\n\n      var correction = 0;\n      for (var i = 1; i <= 10; i++) {\n        this.axis.setItemSize(i * 10, d + i * 2);\n        correction += i * 2;\n      }\n\n      this.assertEquals(d * count + correction, this.axis.getTotalSize());\n    },\n\n    TOTAL_SIZE_ITER: 5, // was 50\n    TOTAL_SIZE_ITEMS: 100, // was 1000\n\n    testGetTotalSizeStress() {\n      for (var j = 0; j < this.TOTAL_SIZE_ITER; j++) {\n        var total = 0;\n        this.axis.setItemCount(this.TOTAL_SIZE_ITEMS);\n\n        for (var i = 0; i < this.TOTAL_SIZE_ITEMS; i++) {\n          var itemSize = 50 + Math.round(Math.random() * 80);\n          total += itemSize;\n          this.axis.setItemSize(i, itemSize);\n        }\n\n        this.assertEquals(total, this.axis.getTotalSize());\n      }\n    },\n\n    testGetItemSizes() {\n      this.axis.setDefaultItemSize(10);\n\n      this.assertArrayEquals([10, 10, 10, 10], this.axis.getItemSizes(0, 40));\n\n      this.assertArrayEquals([10, 10, 10, 10], this.axis.getItemSizes(20, 40));\n\n      this.assertArrayEquals([10, 10, 10, 10], this.axis.getItemSizes(0, 31));\n\n      this.axis.setItemSize(1, 5);\n      this.axis.setItemSize(3, 25);\n\n      this.assertArrayEquals([10, 5, 10, 25], this.axis.getItemSizes(0, 50));\n\n      this.assertArrayEquals([10, 5, 10, 25], this.axis.getItemSizes(0, 26));\n\n      this.assertArrayEquals([5, 10, 25, 10], this.axis.getItemSizes(1, 41));\n\n      // test at the end of the scale\n      this.axis.setDefaultItemSize(10);\n      this.axis.setItemCount(10);\n      this.assertArrayEquals([10, 10], this.axis.getItemSizes(8, 25));\n\n      this.assertArrayEquals([10], this.axis.getItemSizes(9, 30));\n    },\n\n    testGetItemPosition() {\n      var d = this.defaultSize;\n\n      // item in the middle\n      this.assertEquals(d * 20, this.axis.getItemPosition(20));\n\n      // item at the edges\n      this.assertEquals(0, this.axis.getItemPosition(0));\n      this.assertEquals(\n        d * (this.count - 1),\n        this.axis.getItemPosition(this.count - 1)\n      );\n\n      // item outside the range\n      this.assertEquals(null, this.axis.getItemPosition(-1));\n      this.assertEquals(null, this.axis.getItemPosition(this.count));\n      this.assertEquals(null, this.axis.getItemPosition(this.count + 100));\n    },\n\n    testGetItemPositionCustomSizes() {\n      var d = this.defaultSize;\n      var sizes = {};\n      sizes[100] = d - 8;\n      sizes[200] = d + 20;\n      sizes[600] = d;\n      for (var key in sizes) {\n        this.axis.setItemSize(parseInt(key, 10), sizes[key]);\n      }\n\n      this.assertEquals(0 * d, this.axis.getItemPosition(0));\n      this.assertEquals(10 * d, this.axis.getItemPosition(10));\n      this.assertEquals(101 * d - 8, this.axis.getItemPosition(101));\n      this.assertEquals(201 * d - 8 + 20, this.axis.getItemPosition(201));\n      this.assertEquals(601 * d - 8 + 20, this.axis.getItemPosition(601));\n    },\n\n    testChangeEvents() {\n      var self = this;\n      var listener = function () {};\n\n      this.assertEventFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setDefaultItemSize(23);\n        },\n        listener\n      );\n\n      this.assertEventNotFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setDefaultItemSize(23);\n        },\n        listener\n      );\n\n      this.assertEventFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemCount(123);\n        },\n        listener\n      );\n\n      this.assertEventNotFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemCount(123);\n        },\n        listener\n      );\n\n      this.assertEventFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemSize(10, 66);\n        },\n        listener\n      );\n\n      this.assertEventNotFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemSize(10, 66);\n        },\n        listener\n      );\n\n      this.assertEventFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemSize(10, null);\n        },\n        listener\n      );\n\n      this.assertEventNotFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.setItemSize(11, null);\n        },\n        listener\n      );\n\n      this.assertEventFired(\n        this.axis,\n        \"change\",\n        function () {\n          self.axis.resetItemSizes();\n        },\n        listener\n      );\n    },\n\n    SETUP_ITER: 10, // was 100\n\n    testPerformanceSetupBestCase() {\n      //window.top.console.profile(\"setup (best case)\");\n      var start = new Date();\n      for (var i = 0; i < this.SETUP_ITER; i++) {\n        this.axis.__ranges = null;\n        this.axis.getItemAtPosition(0);\n      }\n      var end = new Date();\n      //window.top.console.profileEnd();\n\n      // this.warn(\"setup time (best case): \" + ((end - start) / this.SETUP_ITER) + \"ms\");\n    },\n\n    testPerformanceSetupWorstCase() {\n      // each cell has a custom size\n      for (var i = 0; i < this.count; i++) {\n        this.axis.setItemSize(i, this.defaultSize + (i % 20) + 1);\n      }\n\n      //window.top.console.profile(\"setup (worst case)\");\n      var start = new Date();\n      for (var i = 0; i < this.SETUP_ITER; i++) {\n        this.axis.__ranges = null;\n        this.axis.getItemAtPosition(0);\n      }\n      var end = new Date();\n      //window.top.console.profileEnd();\n\n      // this.warn(\"setup time (worst case): \" + ((end - start) / this.SETUP_ITER) + \"ms\");\n    },\n\n    FIND_ITER: 100, // was 10000\n\n    testPerformanceFindBestCase() {\n      var max = this.axis.getTotalSize();\n\n      //window.top.console.profile(\"find (best case)\");\n      var start = new Date();\n      for (var i = 0; i < this.FIND_ITER; i++) {\n        this.axis.getItemAtPosition((i * 17) % max);\n      }\n      var end = new Date();\n      //window.top.console.profileEnd();\n\n      // this.warn(\"find time (best case): \" + ((end - start) / this.FIND_ITER) + \"ms\");\n    },\n\n    testPerformanceFindWorstCase() {\n      // each cell has a custom size\n      for (var i = 0; i < this.count; i++) {\n        this.axis.setItemSize(i, this.defaultSize + (i % 20) + 1);\n      }\n\n      var max = this.axis.getTotalSize();\n\n      //window.top.console.profile(\"find (worst case)\");\n      var start = new Date();\n      for (var i = 0; i < this.FIND_ITER; i++) {\n        this.axis.getItemAtPosition((i * 17) % max);\n      }\n      var end = new Date();\n      //window.top.console.profileEnd();\n\n      // this.warn(\"find time (worst case): \" + ((end - start) / this.FIND_ITER) + \"ms\");\n    }\n  },\n\n  destruct() {\n    this.axis = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}