{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "virtual",
    "Scroller",
    "superclass",
    "prototype",
    "call",
    "scroller",
    "core",
    "getRoot",
    "add",
    "flush",
    "tearDown",
    "destroy",
    "assertScrollbars",
    "hasScrollX",
    "hasScrollY",
    "msg",
    "assertEquals",
    "getChildControl",
    "isVisible",
    "configureScroller",
    "scrollWidth",
    "scrollHeight",
    "width",
    "height",
    "set",
    "getPane",
    "getRowConfig",
    "setItemSize",
    "getColumnConfig",
    "fullUpdate",
    "testConstructor",
    "assertNotUndefined",
    "testScrollX",
    "setScrollbarY",
    "getScrollX",
    "scrollToX",
    "testScrollY",
    "setScrollbarX",
    "scrollToY",
    "getScrollY",
    "testMaxScrollPosition",
    "testScrollbarYAuto",
    "testScrollbarXAuto",
    "testScrollbarXYAuto",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/Scroller.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.Scroller\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    setUp() {\n      super.setUp();\n\n      var scroller = new qx.ui.virtual.core.Scroller(1, 1, 10, 10);\n      this.getRoot().add(scroller);\n      this.scroller = scroller;\n\n      this.flush();\n    },\n\n    tearDown() {\n      this.scroller.destroy();\n      super.tearDown();\n      this.flush();\n    },\n\n    assertScrollbars(hasScrollX, hasScrollY, msg) {\n      this.assertEquals(\n        hasScrollX,\n        this.scroller.getChildControl(\"scrollbar-x\").isVisible(),\n        msg\n      );\n\n      this.assertEquals(\n        hasScrollY,\n        this.scroller.getChildControl(\"scrollbar-y\").isVisible(),\n        msg\n      );\n    },\n\n    configureScroller(scrollWidth, scrollHeight, width, height) {\n      this.scroller.set({\n        width: width,\n        height: height\n      });\n\n      this.scroller.getPane().getRowConfig().setItemSize(0, scrollHeight);\n      this.scroller.getPane().getColumnConfig().setItemSize(0, scrollWidth);\n\n      // trigger update manually\n      this.scroller.getPane().fullUpdate();\n      this.flush();\n    },\n\n    testConstructor() {\n      this.assertNotUndefined(this.scroller);\n    },\n\n    testScrollX() {\n      this.scroller.setScrollbarY(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(true, false);\n\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToX(100);\n      this.assertEquals(100, this.scroller.getScrollX());\n      this.assertEquals(100, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToX(3000);\n\n      this.assertEquals(3000 - 300, this.scroller.getScrollX());\n      this.assertEquals(3000 - 300, this.scroller.getPane().getScrollX());\n\n      this.configureScroller(3000, 2000, 3000, 2000);\n      this.assertScrollbars(false, false);\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n    },\n\n    testScrollY() {\n      this.scroller.setScrollbarX(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(false, true);\n\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToY(100);\n      this.assertEquals(100, this.scroller.getScrollY());\n      this.assertEquals(100, this.scroller.getPane().getScrollY());\n\n      this.scroller.scrollToY(2000);\n      this.assertEquals(2000 - 200, this.scroller.getScrollY());\n      this.assertEquals(2000 - 200, this.scroller.getPane().getScrollY());\n\n      this.configureScroller(3000, 2000, 3000, 2000);\n      this.assertScrollbars(false, false);\n      this.assertEquals(0, this.scroller.getScrollY());\n      this.assertEquals(0, this.scroller.getPane().getScrollY());\n    },\n\n    testMaxScrollPosition() {\n      this.scroller.setScrollbarX(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(false, true);\n\n      // scroll to end\n      this.scroller.scrollToY(10000);\n      this.assertEquals(2000 - 200, this.scroller.getScrollY());\n\n      // increase scroller size\n      this.configureScroller(3000, 2000, 300, 400);\n      this.assertEquals(\n        2000 - 400,\n        this.scroller.getScrollY(),\n        \"the scroll position must be limited to the max scroll position\"\n      );\n\n      this.assertEquals(\n        2000 - 400,\n        this.scroller.getPane().getScrollY(),\n        \"the scroll position must be limited to the max scroll position\"\n      );\n    },\n\n    testScrollbarYAuto() {\n      this.scroller.setScrollbarX(\"off\");\n      this.scroller.setScrollbarY(\"auto\");\n\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // pane larger than widget\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(false, true);\n\n      // widget larger than pane\n      this.configureScroller(300, 201, 300, 202);\n      this.assertScrollbars(false, false);\n\n      // scroll y must be hidden all the time\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(false, false);\n    },\n\n    testScrollbarXAuto() {\n      this.scroller.setScrollbarX(\"auto\");\n      this.scroller.setScrollbarY(\"off\");\n\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // pane larger than widget\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(true, false);\n\n      // widget larger than pane\n      this.configureScroller(301, 200, 302, 200);\n      this.assertScrollbars(false, false);\n\n      // scroll x must be hidden all the time\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(false, false);\n    },\n\n    testScrollbarXYAuto() {\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // increase the pane a bit -> both scrollbars are needed\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(true, true);\n\n      // reset\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(true, true);\n\n      // increase scroller height\n      this.configureScroller(300, 201, 300, 250);\n      this.assertScrollbars(false, false);\n\n      // increase scroller width\n      this.configureScroller(300, 201, 350, 250);\n      this.assertScrollbars(false, false);\n    }\n  },\n\n  destruct() {\n    this.scroller = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,cAAc;IAEjCC,OAAO,EAAE;MACPC,KAAK,WAAAA,MAAA,EAAG;QACNX,EAAA,CAAAO,IAAA,CAAAC,EAAA,CAAAI,OAAA,CAAAC,QAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAJ,KAAA,CAAAK,IAAA;QAEA,IAAIC,QAAQ,GAAG,IAAIjB,EAAE,CAACQ,EAAE,CAACI,OAAO,CAACM,IAAI,CAACL,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAC5D,IAAI,CAACM,OAAO,CAAC,CAAC,CAACC,GAAG,CAACH,QAAQ,CAAC;QAC5B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QAExB,IAAI,CAACI,KAAK,CAAC,CAAC;MACd,CAAC;MAEDC,QAAQ,WAAAA,SAAA,EAAG;QACT,IAAI,CAACL,QAAQ,CAACM,OAAO,CAAC,CAAC;QACvBvB,EAAA,CAAAO,IAAA,CAAAC,EAAA,CAAAI,OAAA,CAAAC,QAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAO,QAAA,CAAAN,IAAA;QACA,IAAI,CAACK,KAAK,CAAC,CAAC;MACd,CAAC;MAEDG,gBAAgB,WAAAA,iBAACC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAE;QAC5C,IAAI,CAACC,YAAY,CACfH,UAAU,EACV,IAAI,CAACR,QAAQ,CAACY,eAAe,CAAC,aAAa,CAAC,CAACC,SAAS,CAAC,CAAC,EACxDH,GACF,CAAC;QAED,IAAI,CAACC,YAAY,CACfF,UAAU,EACV,IAAI,CAACT,QAAQ,CAACY,eAAe,CAAC,aAAa,CAAC,CAACC,SAAS,CAAC,CAAC,EACxDH,GACF,CAAC;MACH,CAAC;MAEDI,iBAAiB,WAAAA,kBAACC,WAAW,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,EAAE;QAC1D,IAAI,CAAClB,QAAQ,CAACmB,GAAG,CAAC;UAChBF,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA;QACV,CAAC,CAAC;QAEF,IAAI,CAAClB,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAEN,YAAY,CAAC;QACnE,IAAI,CAAChB,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACG,eAAe,CAAC,CAAC,CAACD,WAAW,CAAC,CAAC,EAAEP,WAAW,CAAC;;QAErE;QACA,IAAI,CAACf,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACI,UAAU,CAAC,CAAC;QACpC,IAAI,CAACpB,KAAK,CAAC,CAAC;MACd,CAAC;MAEDqB,eAAe,WAAAA,gBAAA,EAAG;QAChB,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAAC1B,QAAQ,CAAC;MACxC,CAAC;MAED2B,WAAW,WAAAA,YAAA,EAAG;QACZ,IAAI,CAAC3B,QAAQ,CAAC4B,aAAa,CAAC,KAAK,CAAC;QAElC,IAAI,CAACd,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5C,IAAI,CAACP,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC;QAElC,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAAC6B,UAAU,CAAC,CAAC,CAAC;QAChD,IAAI,CAAClB,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;QAE1D,IAAI,CAAC7B,QAAQ,CAAC8B,SAAS,CAAC,GAAG,CAAC;QAC5B,IAAI,CAACnB,YAAY,CAAC,GAAG,EAAE,IAAI,CAACX,QAAQ,CAAC6B,UAAU,CAAC,CAAC,CAAC;QAClD,IAAI,CAAClB,YAAY,CAAC,GAAG,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC7B,QAAQ,CAAC8B,SAAS,CAAC,IAAI,CAAC;QAE7B,IAAI,CAACnB,YAAY,OAAa,IAAI,CAACX,QAAQ,CAAC6B,UAAU,CAAC,CAAC,CAAC;QACzD,IAAI,CAAClB,YAAY,OAAa,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;QAEnE,IAAI,CAACf,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QAC9C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;QACnC,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAAC6B,UAAU,CAAC,CAAC,CAAC;QAChD,IAAI,CAAClB,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;MAC5D,CAAC;MAEDE,WAAW,WAAAA,YAAA,EAAG;QACZ,IAAI,CAAC/B,QAAQ,CAACgC,aAAa,CAAC,KAAK,CAAC;QAElC,IAAI,CAAClB,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;QAElC,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAAC6B,UAAU,CAAC,CAAC,CAAC;QAChD,IAAI,CAAClB,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;QAE1D,IAAI,CAAC7B,QAAQ,CAACiC,SAAS,CAAC,GAAG,CAAC;QAC5B,IAAI,CAACtB,YAAY,CAAC,GAAG,EAAE,IAAI,CAACX,QAAQ,CAACkC,UAAU,CAAC,CAAC,CAAC;QAClD,IAAI,CAACvB,YAAY,CAAC,GAAG,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACc,UAAU,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAClC,QAAQ,CAACiC,SAAS,CAAC,IAAI,CAAC;QAC7B,IAAI,CAACtB,YAAY,OAAa,IAAI,CAACX,QAAQ,CAACkC,UAAU,CAAC,CAAC,CAAC;QACzD,IAAI,CAACvB,YAAY,OAAa,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACc,UAAU,CAAC,CAAC,CAAC;QAEnE,IAAI,CAACpB,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QAC9C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;QACnC,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACkC,UAAU,CAAC,CAAC,CAAC;QAChD,IAAI,CAACvB,YAAY,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACc,UAAU,CAAC,CAAC,CAAC;MAC5D,CAAC;MAEDC,qBAAqB,WAAAA,sBAAA,EAAG;QACtB,IAAI,CAACnC,QAAQ,CAACgC,aAAa,CAAC,KAAK,CAAC;QAElC,IAAI,CAAClB,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;;QAElC;QACA,IAAI,CAACP,QAAQ,CAACiC,SAAS,CAAC,KAAK,CAAC;QAC9B,IAAI,CAACtB,YAAY,OAAa,IAAI,CAACX,QAAQ,CAACkC,UAAU,CAAC,CAAC,CAAC;;QAEzD;QACA,IAAI,CAACpB,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5C,IAAI,CAACH,YAAY,OAEf,IAAI,CAACX,QAAQ,CAACkC,UAAU,CAAC,CAAC,EAC1B,gEACF,CAAC;QAED,IAAI,CAACvB,YAAY,OAEf,IAAI,CAACX,QAAQ,CAACoB,OAAO,CAAC,CAAC,CAACc,UAAU,CAAC,CAAC,EACpC,gEACF,CAAC;MACH,CAAC;MAEDE,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,IAAI,CAACpC,QAAQ,CAACgC,aAAa,CAAC,KAAK,CAAC;QAClC,IAAI,CAAChC,QAAQ,CAAC4B,aAAa,CAAC,MAAM,CAAC;;QAEnC;QACA,IAAI,CAACd,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC;;QAElC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;MACrC,CAAC;MAED8B,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,IAAI,CAACrC,QAAQ,CAACgC,aAAa,CAAC,MAAM,CAAC;QACnC,IAAI,CAAChC,QAAQ,CAAC4B,aAAa,CAAC,KAAK,CAAC;;QAElC;QACA,IAAI,CAACd,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC;;QAElC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;MACrC,CAAC;MAED+B,mBAAmB,WAAAA,oBAAA,EAAG;QACpB;QACA,IAAI,CAACxB,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEjC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;QAEnC,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;;QAEjC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;;QAEnC;QACA,IAAI,CAACO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1C,IAAI,CAACP,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;MACrC;IACF,CAAC;IAEDgC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACvC,QAAQ,GAAG,IAAI;IACtB;EACF,CAAC,CAAC;EArNFjB,EAAE,CAACO,IAAI,CAACC,EAAE,CAACI,OAAO,CAACC,QAAQ,CAACV,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}