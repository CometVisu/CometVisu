{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "virtual",
    "layer",
    "LayerTestCase",
    "members",
    "tearDown",
    "HtmlCell",
    "superclass",
    "prototype",
    "call",
    "__cellRenderer",
    "dispose",
    "_createLayer",
    "cell",
    "Cell",
    "getCellProperties",
    "row",
    "column",
    "_assertCells",
    "firstRow",
    "firstColumn",
    "rowCount",
    "columnCount",
    "msg",
    "children",
    "getContentElement",
    "getDomElement",
    "childNodes",
    "assertEquals",
    "length",
    "y",
    "x",
    "cellEl",
    "innerHTML",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/HtmlCell.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.HtmlCell\", {\n  extend: qx.test.ui.virtual.layer.LayerTestCase,\n\n  members: {\n    tearDown() {\n      super.tearDown();\n      this.__cellRenderer.dispose();\n    },\n\n    _createLayer() {\n      this.__cellRenderer = new qx.ui.virtual.cell.Cell();\n      return new qx.ui.virtual.layer.HtmlCell(this);\n    },\n\n    getCellProperties(row, column) {\n      return this.__cellRenderer.getCellProperties(row + \" / \" + column, {});\n    },\n\n    _assertCells(firstRow, firstColumn, rowCount, columnCount, msg) {\n      var children = this.layer.getContentElement().getDomElement().childNodes;\n\n      this.assertEquals(rowCount * columnCount, children.length);\n\n      for (var y = 0; y < rowCount; y++) {\n        for (var x = 0; x < columnCount; x++) {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var cellEl = children[y * columnCount + x];\n          this.assertEquals(row + \" / \" + column, cellEl.innerHTML);\n        }\n      }\n    }\n  },\n\n  destruct() {\n    this.__cellRenderer = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACnDC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAACC,aAAa;IAE9CC,OAAO,EAAE;MACPC,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACTb,EAAA,CAAAO,IAAA,CAAAC,EAAA,CAAAC,OAAA,CAAAC,KAAA,CAAAI,QAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAH,QAAA,CAAAI,IAAA;QACA,IAAI,CAACC,SAAc,CAACC,OAAO,CAAC,CAAC;MAC/B,CAAC;MAEDC,YAAY,WAAZA,YAAYA,CAAA,EAAG;QACb,IAAI,CAACF,SAAc,GAAG,IAAIlB,EAAE,CAACQ,EAAE,CAACC,OAAO,CAACY,IAAI,CAACC,IAAI,CAAC,CAAC;QACnD,OAAO,IAAItB,EAAE,CAACQ,EAAE,CAACC,OAAO,CAACC,KAAK,CAACI,QAAQ,CAAC,IAAI,CAAC;MAC/C,CAAC;MAEDS,iBAAiB,WAAjBA,iBAAiBA,CAACC,GAAG,EAAEC,MAAM,EAAE;QAC7B,OAAO,IAAI,CAACP,SAAc,CAACK,iBAAiB,CAACC,GAAG,GAAG,KAAK,GAAGC,MAAM,EAAE,CAAC,CAAC,CAAC;MACxE,CAAC;MAEDC,YAAY,WAAZA,YAAYA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,GAAG,EAAE;QAC9D,IAAIC,QAAQ,GAAG,IAAI,CAACtB,KAAK,CAACuB,iBAAiB,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CAACC,UAAU;QAExE,IAAI,CAACC,YAAY,CAACP,QAAQ,GAAGC,WAAW,EAAEE,QAAQ,CAACK,MAAM,CAAC;QAE1D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,EAAES,CAAC,EAAE,EAAE;UACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,WAAW,EAAES,CAAC,EAAE,EAAE;YACpC,IAAIf,GAAG,GAAGG,QAAQ,GAAGW,CAAC;YACtB,IAAIb,MAAM,GAAGG,WAAW,GAAGW,CAAC;YAE5B,IAAIC,MAAM,GAAGR,QAAQ,CAACM,CAAC,GAAGR,WAAW,GAAGS,CAAC,CAAC;YAC1C,IAAI,CAACH,YAAY,CAACZ,GAAG,GAAG,KAAK,GAAGC,MAAM,EAAEe,MAAM,CAACC,SAAS,CAAC;UAC3D;QACF;MACF;IACF,CAAC;IAEDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MACT,IAAI,CAACxB,SAAc,GAAG,IAAI;IAC5B;EACF,CAAC,CAAC;EAzDFlB,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAACI,QAAQ,CAACX,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}