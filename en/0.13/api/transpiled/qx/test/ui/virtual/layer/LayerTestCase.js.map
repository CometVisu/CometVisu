{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "type",
    "members",
    "setUp",
    "colWidth",
    "rowHeight",
    "layer",
    "_createLayer",
    "rowSizes",
    "i",
    "push",
    "columnSizes",
    "getRoot",
    "add",
    "flush",
    "updateLayerWindow",
    "tearDown",
    "virtual",
    "LayerTestCase",
    "superclass",
    "prototype",
    "call",
    "destroy",
    "LayerMock",
    "_assertCells",
    "firstRow",
    "lastRow",
    "firstColumn",
    "lastColumn",
    "msg",
    "_updateLayerWindow",
    "doFullUpdate",
    "fullUpdate",
    "length",
    "testInit",
    "testFullUpdate",
    "testNoOverlap",
    "testScrollDown",
    "testScrollUp",
    "testScrollLeft",
    "testScrollRight",
    "testOverlapLeftTop",
    "testOverlapTop",
    "testOverlapTopRight",
    "testOverlapLeft",
    "testOverlapInner",
    "testOverlapOuter",
    "testOverlapRight",
    "testOverlapBottomLeft",
    "testOverlapBottom",
    "testOverlapBottomRight",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/LayerTestCase.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.LayerTestCase\", {\n  extend: qx.test.ui.LayoutTestCase,\n  type: \"abstract\",\n\n  members: {\n    setUp() {\n      this.colWidth = 20;\n      this.rowHeight = 10;\n\n      this.layer = this._createLayer();\n\n      var rowSizes = [];\n      for (var i = 10; i <= 20; i++) {\n        rowSizes.push(this.rowHeight);\n      }\n\n      var columnSizes = [];\n      for (var i = 15; i <= 18; i++) {\n        columnSizes.push(this.colWidth);\n      }\n\n      this.getRoot().add(this.layer);\n      this.flush();\n\n      this.layer.updateLayerWindow(10, 15, rowSizes, columnSizes);\n      this.flush();\n    },\n\n    tearDown() {\n      super.tearDown();\n      this.layer.destroy();\n    },\n\n    _createLayer() {\n      return new qx.test.ui.virtual.layer.LayerMock();\n    },\n\n    _assertCells(firstRow, lastRow, firstColumn, lastColumn, msg) {\n      return;\n    },\n\n    _updateLayerWindow(\n      firstRow,\n      lastRow,\n      firstColumn,\n      lastColumn,\n      doFullUpdate\n    ) {\n      var rowSizes = [];\n      for (var i = firstRow; i <= lastRow; i++) {\n        rowSizes.push(this.rowHeight);\n      }\n\n      var columnSizes = [];\n      for (var i = firstColumn; i <= lastColumn; i++) {\n        columnSizes.push(this.colWidth);\n      }\n\n      if (doFullUpdate) {\n        this.layer.fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      } else {\n        this.layer.updateLayerWindow(\n          firstRow,\n          firstColumn,\n          rowSizes,\n          columnSizes\n        );\n      }\n\n      this.flush();\n      this._assertCells(\n        firstRow,\n        firstColumn,\n        rowSizes.length,\n        columnSizes.length\n      );\n    },\n\n    testInit() {\n      this._assertCells(10, 15, 11, 4);\n    },\n\n    testFullUpdate() {\n      this._assertCells(10, 15, 11, 4, true);\n    },\n\n    testNoOverlap() {\n      this._updateLayerWindow(20, 25, 19, 21);\n    },\n\n    testScrollDown() {\n      this._updateLayerWindow(12, 22, 15, 18);\n    },\n\n    testScrollUp() {\n      this._updateLayerWindow(8, 18, 15, 18);\n    },\n\n    testScrollLeft() {\n      this._updateLayerWindow(10, 20, 12, 15);\n    },\n\n    testScrollRight() {\n      this._updateLayerWindow(10, 20, 17, 20);\n    },\n\n    testOverlapLeftTop() {\n      this._updateLayerWindow(7, 11, 12, 16);\n    },\n\n    testOverlapTop() {\n      this._updateLayerWindow(8, 11, 14, 17);\n    },\n\n    testOverlapTopRight() {\n      this._updateLayerWindow(8, 11, 17, 20);\n    },\n\n    testOverlapLeft() {\n      this._updateLayerWindow(11, 18, 13, 16);\n    },\n\n    testOverlapInner() {\n      this._updateLayerWindow(11, 18, 16, 17);\n    },\n\n    testOverlapOuter() {\n      this._updateLayerWindow(8, 21, 14, 20);\n    },\n\n    testOverlapRight() {\n      this._updateLayerWindow(11, 18, 17, 20);\n    },\n\n    testOverlapBottomLeft() {\n      this._updateLayerWindow(18, 22, 14, 17);\n    },\n\n    testOverlapBottom() {\n      this._updateLayerWindow(18, 22, 16, 17);\n    },\n\n    testOverlapBottomRight() {\n      this._updateLayerWindow(18, 22, 17, 20);\n    }\n  },\n\n  destruct() {\n    this.layer = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}