{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "virtual",
    "Pane",
    "superclass",
    "prototype",
    "call",
    "defaultWidth",
    "defaultHeight",
    "rowCount",
    "colCount",
    "pane",
    "core",
    "getRoot",
    "add",
    "tearDown",
    "destroy",
    "flush",
    "assertUpdateArgs",
    "rowIndex",
    "colIndex",
    "rowSizes",
    "colSizes",
    "args",
    "msg",
    "assertEquals",
    "assertArrayEquals",
    "assertScrollArgs",
    "assertScroll",
    "scrollTop",
    "scrollLeft",
    "layerContainer",
    "_getChildren",
    "getBounds",
    "top",
    "left",
    "testConstructor",
    "assertNotUndefined",
    "testScrollProperties",
    "setScrollY",
    "getScrollY",
    "setScrollX",
    "getScrollX",
    "testGetScrollSize",
    "size",
    "getScrollSize",
    "width",
    "height",
    "rowConfig",
    "getRowConfig",
    "setDefaultItemSize",
    "setItemCount",
    "setItemSize",
    "testLayerAdd",
    "layer",
    "LayerMock",
    "addLayer",
    "getLayers",
    "testUpdateEvent",
    "called",
    "addListener",
    "set",
    "setWidth",
    "testFullUpdate",
    "calls",
    "fullUpdate",
    "length",
    "testNoRows",
    "getColumnConfig",
    "testNoColumns",
    "setHeight",
    "testPrefetchYAtTop",
    "layerHeight",
    "prefetchY",
    "testPrefetchYLimitedAtTop",
    "testPrefetchYAtBottom",
    "getScrollMaxY",
    "testPrefetchYLimitedAtBottom",
    "testPrefetchYInMiddle",
    "testPrefetchXAtLeft",
    "layerWidth",
    "prefetchX",
    "testPrefetchXLimitedAtLeft",
    "testPrefetchXAtBottom",
    "getScrollMaxX",
    "testPrefetchXLimitedAtBottom",
    "testPrefetchXInMiddle",
    "testUpdateLayerWindow",
    "testSrollRowIntoView",
    "LayerSimple",
    "scrollRowIntoView",
    "children",
    "getContentElement",
    "getDomElement",
    "childNodes",
    "innerHTML",
    "testSrollColumnIntoView",
    "scrollColumnIntoView",
    "_testSrollRowIntoViewEdgeCase",
    "_testSrollColumnIntoViewEdgeCase",
    "testGetCellAtPosition",
    "assertJsonEquals",
    "row",
    "column",
    "getCellAtPosition",
    "testGetItemAtPositionEmptySpace",
    "testMouseCellEvents",
    "listener",
    "e",
    "push",
    "PointerEventMock",
    "eventPointerToCellEvents",
    "tap",
    "dbltap",
    "contextmenu",
    "pointerEvent",
    "cellEvent",
    "dispatchEvent",
    "documentLeft",
    "documentTop",
    "getRow",
    "getColumn",
    "getType",
    "test_mouse_click_bug_6695",
    "testDestroy",
    "assertDestroy",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/Pane.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.Pane\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    setUp() {\n      super.setUp();\n\n      this.defaultWidth = 30;\n      this.defaultHeight = 10;\n      this.rowCount = 1000;\n      this.colCount = 200;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        this.rowCount,\n        this.colCount,\n        this.defaultHeight,\n        this.defaultWidth\n      );\n\n      this.getRoot().add(pane);\n      this.pane = pane;\n    },\n\n    tearDown() {\n      this.pane.destroy();\n      super.tearDown();\n      this.flush();\n    },\n\n    assertUpdateArgs(rowIndex, colIndex, rowSizes, colSizes, args, msg) {\n      this.assertEquals(rowIndex, args[0], msg);\n      this.assertEquals(colIndex, args[1], msg);\n      this.assertArrayEquals(rowSizes, args[2], msg);\n      this.assertArrayEquals(colSizes, args[3], msg);\n    },\n\n    assertScrollArgs(rowIndex, colIndex, rowSizes, colSizes, args, msg) {\n      this.assertEquals(rowIndex, args[0], msg);\n      this.assertEquals(colIndex, args[1], msg);\n      this.assertArrayEquals(rowSizes, args[2], msg);\n      this.assertArrayEquals(colSizes, args[3], msg);\n    },\n\n    assertScroll(scrollTop, scrollLeft, pane, msg) {\n      var layerContainer = this.pane._getChildren()[0];\n      this.assertEquals(-scrollTop, layerContainer.getBounds().top, msg);\n      this.assertEquals(-scrollLeft, layerContainer.getBounds().left, msg);\n    },\n\n    testConstructor() {\n      this.assertNotUndefined(this.pane);\n    },\n\n    testScrollProperties() {\n      this.flush();\n      this.pane.setScrollY(30);\n      this.assertEquals(30, this.pane.getScrollY());\n\n      this.pane.setScrollX(40);\n      this.assertEquals(40, this.pane.getScrollX());\n    },\n\n    testGetScrollSize() {\n      var size = this.pane.getScrollSize();\n      this.assertEquals(this.defaultWidth * this.colCount, size.width);\n      this.assertEquals(this.defaultHeight * this.rowCount, size.height);\n\n      var rowConfig = this.pane.getRowConfig();\n      rowConfig.setDefaultItemSize(50);\n      rowConfig.setItemCount(123);\n      rowConfig.setItemSize(10, 30);\n      this.assertEquals(50 * 123 - 20, this.pane.getScrollSize().height);\n    },\n\n    testLayerAdd() {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.assertEquals(layer, this.pane.getLayers()[0]);\n    },\n\n    testUpdateEvent() {\n      var called = 0;\n\n      var pane = new qx.ui.virtual.core.Pane(100, 20, 10, 50);\n      pane.addListener(\"update\", () => {\n        called++;\n      });\n\n      pane.set({\n        width: 300,\n        height: 200\n      });\n\n      // no update after creation\n      this.getRoot().add(pane);\n      this.assertEquals(0, called, \"Expect no update after creation\");\n\n      // one update after appear\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after appear\");\n\n      // one update after pane resize\n      called = 0;\n      pane.setWidth(400);\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after pane resize\");\n\n      // one update after data resize\n      called = 0;\n      pane.getRowConfig().setItemCount(200);\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after data resize\");\n\n      // one update after data and pane resize\n      called = 0;\n      pane.getRowConfig().setItemCount(300);\n      pane.setWidth(500);\n      this.flush();\n      this.assertEquals(\n        2,\n        called,\n        \"Expect two updates after data and pane resize\"\n      );\n\n      pane.destroy();\n    },\n\n    testFullUpdate() {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({\n        width: 100,\n        height: 50\n      });\n\n      this.flush();\n\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n\n      this.assertEquals(2, layer.calls.length);\n      this.assertEquals(\"fullUpdate\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollY(4);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(\n        0,\n        0,\n        [10, 10, 10, 10, 10, 10],\n        [30, 30, 30, 30],\n        args\n      );\n\n      this.assertScroll(4, 0, this.pane);\n\n      this.pane.setScrollY(10);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(1, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollY(16);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(\n        1,\n        0,\n        [10, 10, 10, 10, 10, 10],\n        [30, 30, 30, 30],\n        args\n      );\n\n      this.assertScroll(6, 0, this.pane);\n\n      this.pane.setScrollY(0);\n      this.flush();\n\n      this.pane.setScrollX(4);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 4, this.pane);\n\n      this.pane.setScrollX(30);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollX(36);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 6, this.pane);\n    },\n\n    testNoRows() {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n\n      layer.calls = [];\n      this.pane.setWidth(100);\n      this.pane.getColumnConfig().setDefaultItemSize(100);\n      this.pane.getColumnConfig().setItemCount(1);\n      this.pane.getRowConfig().setItemCount(0);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [], [100], args);\n      this.assertScroll(0, 0, this.pane);\n\n      // resize\n      layer.calls = [];\n      this.pane.setWidth(30);\n      this.pane.getColumnConfig().setDefaultItemSize(30);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [], [30], args);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testNoColumns() {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n\n      layer.calls = [];\n      this.pane.setHeight(100);\n      this.pane.getRowConfig().setDefaultItemSize(100);\n      this.pane.getRowConfig().setItemCount(1);\n      this.pane.getColumnConfig().setItemCount(0);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [100], [], args);\n      this.assertScroll(0, 0, this.pane);\n\n      // resize\n      layer.calls = [];\n      this.pane.setHeight(30);\n      this.pane.getRowConfig().setDefaultItemSize(30);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [30], [], args);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchYAtTop() {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: 300, height: layerHeight });\n      this.flush();\n\n      // scroll top is 0 and prefetch above\n      this.pane.prefetchY(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerHeight, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchYLimitedAtTop() {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: 300, height: layerHeight });\n      this.flush();\n\n      // scroll top is 100 and prefetch above 200\n      this.pane.setScrollY(100);\n      this.pane.prefetchY(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerHeight + 100, layer.getBounds().height);\n      this.assertScroll(100, 0, this.pane);\n    },\n\n    testPrefetchYAtBottom() {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: 300, height: layerHeight });\n      this.flush();\n\n      // scroll top to bottom and prefetch below 200\n      this.pane.setScrollY(this.pane.getScrollMaxY());\n      this.pane.prefetchY(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchYLimitedAtBottom() {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: 300, height: layerHeight });\n      this.flush();\n\n      // scroll top to bottom and prefetch below 200\n      this.pane.setScrollY(this.pane.getScrollMaxY() - 100);\n      this.pane.prefetchY(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 100, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchYInMiddle() {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: 300, height: layerHeight });\n      this.flush();\n\n      // scroll top is 500 and prefetch above 200\n      this.pane.setScrollY(500);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n\n      // already prefetched 200 pixel above. Scrolling up 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollY(480);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 400, layer.getBounds().height);\n      this.assertScroll(180, 0, this.pane);\n\n      // scroll more than minAbove up. Prefetching should update the layers\n      this.pane.setScrollY(390);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n\n      // already prefetched 200 pixel below. Scrolling down 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollY(410);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 400, layer.getBounds().height);\n      this.assertScroll(220, 0, this.pane);\n\n      // scroll more than minBelow down. Prefetching should update the layers\n      this.pane.setScrollY(520);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight + 400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n    },\n\n    testPrefetchXAtLeft() {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: layerWidth, height: 400 });\n      this.flush();\n\n      // scroll left is 0 and prefetch left\n      this.pane.prefetchX(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerWidth, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchXLimitedAtLeft() {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({ width: layerWidth, height: 400 });\n      this.flush();\n\n      // scroll top is 100 and prefetch above 200\n      this.pane.setScrollX(100);\n      this.pane.prefetchX(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerWidth + 100, layer.getBounds().width);\n      this.assertScroll(0, 100, this.pane);\n    },\n\n    testPrefetchXAtBottom() {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({ width: layerWidth, height: 400 });\n      this.flush();\n\n      // scroll left to right and prefetch right 200\n      this.pane.setScrollX(this.pane.getScrollMaxX());\n      this.pane.prefetchX(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchXLimitedAtBottom() {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({ width: layerWidth, height: 400 });\n      this.flush();\n\n      // scroll left to right-100 and prefetch right 200\n      this.pane.setScrollX(this.pane.getScrollMaxX() - 100);\n      this.pane.prefetchX(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 100, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n    testPrefetchXInMiddle() {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({ width: layerWidth, height: 400 });\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.flush();\n\n      // scroll left is 500 and prefetch left 200\n      this.pane.setScrollX(500);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n\n      // already prefetched 200 pixel at the left. Scrolling left 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollX(480);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 400, layer.getBounds().width);\n      this.assertScroll(0, 180, this.pane);\n\n      // scroll more than minLeft left. Prefetching should update the layers\n      this.pane.setScrollX(390);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n\n      // already prefetched 200 pixel right. Scrolling right 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollX(410);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 400, layer.getBounds().width);\n      this.assertScroll(0, 220, this.pane);\n\n      // scroll more than minRight right. Prefetching should update the layers\n      this.pane.setScrollX(520);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth + 400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n    },\n\n    testUpdateLayerWindow() {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({\n        width: 100,\n        height: 50\n      });\n\n      this.flush();\n\n      layer.calls = [];\n      this.pane.setScrollY(4);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(\n        0,\n        0,\n        [10, 10, 10, 10, 10, 10],\n        [30, 30, 30, 30],\n        args\n      );\n\n      this.assertScroll(4, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(5);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(5, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(10);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(10, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(16);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(\n        1,\n        0,\n        [10, 10, 10, 10, 10, 10],\n        [30, 30, 30, 30],\n        args\n      );\n\n      this.assertScroll(6, 0, this.pane);\n\n      this.pane.setScrollY(0);\n      this.flush();\n\n      layer.calls = [];\n      this.pane.setScrollX(4);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(0, 4, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollX(30);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollX(36);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(0, 6, this.pane);\n    },\n\n    testSrollRowIntoView() {\n      this.pane.set({\n        width: 400,\n        height: 305\n      });\n\n      this.pane.getColumnConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollRowIntoView(100);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(5, 0, this.pane);\n      this.assertEquals(\"70 / 0\", children[0].innerHTML);\n      this.assertEquals(\"100 / 0\", children[children.length - 1].innerHTML);\n    },\n\n    testSrollColumnIntoView() {\n      this.pane.set({\n        width: 405,\n        height: 305\n      });\n\n      this.pane.getRowConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollColumnIntoView(100);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(0, 15, this.pane);\n      this.assertEquals(\"0 / 87\", children[0].innerHTML);\n      this.assertEquals(\"0 / 100\", children[children.length - 1].innerHTML);\n    },\n\n    _testSrollRowIntoViewEdgeCase() {\n      this.pane.set({\n        width: 400,\n        height: 305\n      });\n\n      this.pane.getColumnConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollRowIntoView(2000);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(5, 0, this.pane);\n      this.assertEquals(\"0 / 969\", children[0].innerHTML);\n      this.assertEquals(\"0 / 999\", children[children.length - 1].innerHTML);\n    },\n\n    _testSrollColumnIntoViewEdgeCase() {\n      this.pane.set({\n        width: 405,\n        height: 305\n      });\n\n      this.pane.getRowConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollColumnIntoView(400);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(0, 15, this.pane);\n      this.assertEquals(\"186 / 0\", children[0].innerHTML);\n      this.assertEquals(\"199 / 0\", children[children.length - 1].innerHTML);\n    },\n\n    testGetCellAtPosition() {\n      this.pane.getRowConfig().setItemCount(3);\n      this.pane.getColumnConfig().setItemCount(3);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.assertJsonEquals(\n        { row: 0, column: 0 },\n        this.pane.getCellAtPosition(0, 0)\n      );\n\n      this.assertEquals(null, this.pane.getCellAtPosition(400, 0));\n      this.assertEquals(null, this.pane.getCellAtPosition(0, 300));\n      this.assertEquals(null, this.pane.getCellAtPosition(400, 300));\n      this.assertJsonEquals(\n        { row: 2, column: 2 },\n        this.pane.getCellAtPosition(89, 29)\n      );\n    },\n\n    testGetItemAtPositionEmptySpace() {\n      var pane = this.pane;\n\n      pane.setHeight(100);\n      pane.setWidth(50);\n      this.pane.getRowConfig().setItemCount(1);\n      this.pane.getRowConfig().setDefaultItemSize(50);\n      this.flush();\n\n      this.assertJsonEquals(\n        { row: 0, column: 0 },\n        this.pane.getCellAtPosition(1, 49)\n      );\n\n      this.assertEquals(null, this.pane.getCellAtPosition(1, 50));\n      this.assertEquals(null, this.pane.getCellAtPosition(1, 70));\n    },\n\n    testMouseCellEvents() {\n      var rowCount = 2;\n      var colCount = 2;\n      var defaultHeight = 10;\n      var defaultWidth = 50;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        rowCount,\n        colCount,\n        defaultHeight,\n        defaultWidth\n      ).set({\n        width: 150,\n        height: 30\n      });\n\n      this.getRoot().add(pane, { left: 100, top: 100 });\n      this.flush();\n\n      var calls = [];\n      var listener = function (e) {\n        calls.push(e);\n      };\n      pane.addListener(\"cellTap\", listener);\n      pane.addListener(\"cellDbltap\", listener);\n      pane.addListener(\"cellContextmenu\", listener);\n\n      var PointerEventMock = qx.test.ui.virtual.PointerEventMock;\n      var eventPointerToCellEvents = {\n        tap: \"cellTap\",\n        dbltap: \"cellDbltap\",\n        contextmenu: \"cellContextmenu\"\n      };\n\n      for (var pointerEvent in eventPointerToCellEvents) {\n        var cellEvent = eventPointerToCellEvents[pointerEvent];\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 99,\n            documentTop: 99\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 99,\n            documentTop: 99\n          })\n        );\n\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 100,\n            documentTop: 100\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 100,\n            documentTop: 100\n          })\n        );\n\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(0, calls[0].getRow(), cellEvent);\n        this.assertEquals(0, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 160,\n            documentTop: 103\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 160,\n            documentTop: 103\n          })\n        );\n\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(0, calls[0].getRow(), cellEvent);\n        this.assertEquals(1, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 105,\n            documentTop: 110\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 105,\n            documentTop: 110\n          })\n        );\n\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(1, calls[0].getRow(), cellEvent);\n        this.assertEquals(0, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 105,\n            documentTop: 125\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 105,\n            documentTop: 125\n          })\n        );\n\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 275,\n            documentTop: 105\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 275,\n            documentTop: 105\n          })\n        );\n\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(\n          new PointerEventMock(\"pointerdown\", {\n            documentLeft: 275,\n            documentTop: 105\n          })\n        );\n\n        pane.dispatchEvent(\n          new PointerEventMock(pointerEvent, {\n            documentLeft: 275,\n            documentTop: 105\n          })\n        );\n\n        this.assertEquals(0, calls.length);\n      }\n\n      pane.destroy();\n      this.flush();\n    },\n\n    \"test mouse click bug #6695\"() {\n      var rowCount = 2;\n      var colCount = 2;\n      var defaultHeight = 10;\n      var defaultWidth = 50;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        rowCount,\n        colCount,\n        defaultHeight,\n        defaultWidth\n      ).set({\n        width: 150,\n        height: 30\n      });\n\n      this.getRoot().add(pane, { left: 100, top: 100 });\n      this.flush();\n\n      var calls = [];\n      var listener = function (e) {\n        calls.push(e);\n      };\n      pane.addListener(\"cellTap\", listener);\n\n      var PointerEventMock = qx.test.ui.virtual.PointerEventMock;\n\n      calls = [];\n      pane.dispatchEvent(\n        new PointerEventMock(\"pointerdown\", {\n          documentLeft: 100,\n          documentTop: 100\n        })\n      );\n\n      pane.dispatchEvent(\n        new PointerEventMock(\"tap\", { documentLeft: 100, documentTop: 100 })\n      );\n\n      this.assertEquals(1, calls.length);\n      this.assertEquals(0, calls[0].getRow());\n      this.assertEquals(0, calls[0].getColumn());\n      this.assertEquals(\"cellTap\", calls[0].getType());\n\n      calls = [];\n      pane.dispatchEvent(\n        new PointerEventMock(\"pointerdown\", {\n          documentLeft: 100,\n          documentTop: 100\n        })\n      );\n\n      pane.dispatchEvent(\n        new PointerEventMock(\"tap\", { documentLeft: 160, documentTop: 103 })\n      );\n\n      this.assertEquals(0, calls.length);\n\n      pane.destroy();\n      this.flush();\n    },\n\n    testDestroy() {\n      this.pane.destroy();\n      this.flush();\n\n      this.assertDestroy(function () {\n        var pane = new qx.ui.virtual.core.Pane(\n          this.rowCount,\n          this.colCount,\n          this.defaultHeight,\n          this.defaultWidth\n        );\n\n        this.getRoot().add(pane);\n        pane.destroy();\n      }, this);\n    }\n  },\n\n  destruct() {\n    this.pane = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}