{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "virtual",
    "layer",
    "LayerTestCase",
    "members",
    "_createLayer",
    "Row",
    "_assertCells",
    "firstRow",
    "firstColumn",
    "rowCount",
    "columnCount",
    "msg",
    "children",
    "getContentElement",
    "getDomElement",
    "childNodes",
    "assertEquals",
    "length",
    "i",
    "row",
    "assertCssColor",
    "style",
    "backgroundColor"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/Row.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.Row\", {\n  extend: qx.test.ui.virtual.layer.LayerTestCase,\n\n  members: {\n    _createLayer() {\n      return new qx.ui.virtual.layer.Row(\"red\", \"green\");\n    },\n\n    _assertCells(firstRow, firstColumn, rowCount, columnCount, msg) {\n      var children = this.layer.getContentElement().getDomElement().childNodes;\n\n      this.assertEquals(rowCount, children.length);\n\n      for (var i = 0; i < rowCount; i++) {\n        var row = firstRow + i;\n        if (row % 2 == 0) {\n          this.assertCssColor(\"red\", children[i].style.backgroundColor);\n        } else {\n          this.assertCssColor(\"green\", children[i].style.backgroundColor);\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,8BAA8B,EAAE;IAC9CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAACC,aAAa;IAE9CC,OAAO,EAAE;MACPC,YAAY,WAAAA,aAAA,EAAG;QACb,OAAO,IAAIb,EAAE,CAACQ,EAAE,CAACC,OAAO,CAACC,KAAK,CAACI,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC;MACpD,CAAC;MAEDC,YAAY,WAAAA,aAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,GAAG,EAAE;QAC9D,IAAIC,QAAQ,GAAG,IAAI,CAACX,KAAK,CAACY,iBAAiB,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CAACC,UAAU;QAExE,IAAI,CAACC,YAAY,CAACP,QAAQ,EAAEG,QAAQ,CAACK,MAAM,CAAC;QAE5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,EAAES,CAAC,EAAE,EAAE;UACjC,IAAIC,GAAG,GAAGZ,QAAQ,GAAGW,CAAC;UACtB,IAAIC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAACC,cAAc,CAAC,KAAK,EAAER,QAAQ,CAACM,CAAC,CAAC,CAACG,KAAK,CAACC,eAAe,CAAC;UAC/D,CAAC,MAAM;YACL,IAAI,CAACF,cAAc,CAAC,OAAO,EAAER,QAAQ,CAACM,CAAC,CAAC,CAACG,KAAK,CAACC,eAAe,CAAC;UACjE;QACF;MACF;IACF;EACF,CAAC,CAAC;EA1CF/B,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAACI,GAAG,CAACX,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}