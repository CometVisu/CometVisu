{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "rowConfig",
    "virtual",
    "core",
    "Axis",
    "columnConfig",
    "cellSpan",
    "layer",
    "CellSpanManager",
    "tearDown",
    "superclass",
    "prototype",
    "call",
    "dispose",
    "assertSorted",
    "cells",
    "key",
    "last",
    "i",
    "l",
    "length",
    "cell",
    "start",
    "assert",
    "testGetSortedCells",
    "addCell",
    "_getSortedCells",
    "assertEquals",
    "testFindCellsInRange",
    "result",
    "_findCellsInRange",
    "assertArrayEquals",
    "Object",
    "keys",
    "sort",
    "testFindCellsInWindow",
    "findCellsInWindow",
    "ids",
    "forEach",
    "push",
    "id",
    "testGetCellOffsets",
    "bounds",
    "getCellBounds",
    "firstRow",
    "lastRow",
    "firstColumn",
    "lastColumn",
    "assertJsonEquals",
    "left",
    "top",
    "width",
    "height",
    "testAxisChange",
    "setDefaultItemSize",
    "testComputeCellSpanMap",
    "map",
    "computeCellSpanMap",
    "undefined",
    "testDispose",
    "assertDestroy",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/CellSpanManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.CellSpanManager\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    setUp() {\n      this.rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      this.columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      this.cellSpan = new qx.ui.virtual.layer.CellSpanManager(\n        this.rowConfig,\n        this.columnConfig\n      );\n    },\n\n    tearDown() {\n      super.tearDown();\n      this.cellSpan.dispose();\n      this.rowConfig.dispose();\n      this.columnConfig.dispose();\n    },\n\n    assertSorted(cells, key) {\n      var last = -1;\n      for (var i = 0, l = cells.length; i < l; i++) {\n        var cell = cells[i];\n        var start = cell[key];\n        this.assert(last <= start);\n        last = start;\n      }\n    },\n\n    testGetSortedCells() {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 0, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var cells = cellSpan._getSortedCells(\"firstRow\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"firstRow\");\n\n      var cells = cellSpan._getSortedCells(\"lastRow\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"lastRow\");\n\n      var cells = cellSpan._getSortedCells(\"firstColumn\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"firstColumn\");\n\n      var cells = cellSpan._getSortedCells(\"lastColumn\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"lastColumn\");\n\n      cellSpan.addCell(\"c7\", 6, 5, 2, 5);\n      cellSpan.addCell(\"c8\", 1, 12, 7, 4);\n\n      var cells = cellSpan._getSortedCells(\"firstRow\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"firstRow\");\n\n      var cells = cellSpan._getSortedCells(\"lastRow\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"lastRow\");\n\n      var cells = cellSpan._getSortedCells(\"firstColumn\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"firstColumn\");\n\n      var cells = cellSpan._getSortedCells(\"lastColumn\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"lastColumn\");\n    },\n\n    testFindCellsInRange() {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 1, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 2, 6);\n      this.assertArrayEquals([\"c1\", \"c2\", \"c4\"], Object.keys(result).sort());\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 11, 20);\n      this.assertArrayEquals([], Object.keys(result));\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 0, 0);\n      this.assertArrayEquals([], Object.keys(result));\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 0, 5);\n      this.assertArrayEquals([\"c2\", \"c4\", \"c5\"], Object.keys(result).sort());\n\n      var result = cellSpan._findCellsInRange(\"lastRow\", 3, 8);\n      this.assertArrayEquals([\"c2\", \"c4\"], Object.keys(result).sort());\n\n      var result = cellSpan._findCellsInRange(\"firstColumn\", 3, 7);\n      this.assertArrayEquals([\"c1\", \"c2\", \"c3\"], Object.keys(result).sort());\n\n      var result = cellSpan._findCellsInRange(\"lastColumn\", 0, 22);\n      this.assertArrayEquals(\n        [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\"],\n        Object.keys(result).sort()\n      );\n    },\n\n    testFindCellsInWindow() {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 1, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var cells = cellSpan.findCellsInWindow(1, 7, 5, 14);\n      var ids = [];\n      cells.forEach(function (cell) {\n        ids.push(cell.id);\n      });\n      this.assertArrayEquals([\"c2\", \"c4\", \"c5\"], ids.sort());\n    },\n\n    testGetCellOffsets() {\n      var cellSpan = this.cellSpan;\n\n      var bounds = cellSpan.getCellBounds(\n        [\n          {\n            firstRow: 1,\n            lastRow: 3,\n            firstColumn: 2,\n            lastColumn: 5\n          }\n        ],\n\n        3,\n        3\n      );\n\n      this.assertJsonEquals(\n        {\n          left: -20,\n          top: -20,\n          width: 80,\n          height: 30\n        },\n\n        bounds[0]\n      );\n\n      var bounds = cellSpan.getCellBounds(\n        [\n          {\n            firstRow: 1,\n            lastRow: 3,\n            firstColumn: 2,\n            lastColumn: 5\n          }\n        ],\n\n        1,\n        2\n      );\n\n      this.assertJsonEquals(\n        {\n          left: 0,\n          top: 0,\n          width: 80,\n          height: 30\n        },\n\n        bounds[0]\n      );\n\n      var bounds = cellSpan.getCellBounds(\n        [\n          {\n            firstRow: 1,\n            lastRow: 3,\n            firstColumn: 2,\n            lastColumn: 5\n          }\n        ],\n\n        0,\n        1\n      );\n\n      this.assertJsonEquals(\n        {\n          left: 20,\n          top: 10,\n          width: 80,\n          height: 30\n        },\n\n        bounds[0]\n      );\n    },\n\n    testAxisChange() {\n      var bounds = this.cellSpan.getCellBounds(\n        [\n          {\n            firstRow: 1,\n            lastRow: 3,\n            firstColumn: 2,\n            lastColumn: 5\n          }\n        ],\n\n        3,\n        3\n      );\n\n      this.assertJsonEquals(\n        {\n          left: -20,\n          top: -20,\n          width: 80,\n          height: 30\n        },\n\n        bounds[0]\n      );\n\n      this.rowConfig.setDefaultItemSize(15);\n\n      var bounds = this.cellSpan.getCellBounds(\n        [\n          {\n            firstRow: 1,\n            lastRow: 3,\n            firstColumn: 2,\n            lastColumn: 5\n          }\n        ],\n\n        3,\n        3\n      );\n\n      this.assertJsonEquals(\n        {\n          left: -20,\n          top: -30,\n          width: 80,\n          height: 45\n        },\n\n        bounds[0]\n      );\n    },\n\n    testComputeCellSpanMap() {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 0, 0, 2, 2);\n      cellSpan.addCell(\"c2\", 0, 4, 2, 2);\n      cellSpan.addCell(\"c3\", 2, 2, 2, 2);\n      cellSpan.addCell(\"c4\", 4, 0, 2, 2);\n      cellSpan.addCell(\"c5\", 4, 4, 2, 2);\n\n      var cells = cellSpan.findCellsInWindow(1, 1, 4, 4);\n      var ids = [];\n      cells.forEach(function (cell) {\n        ids.push(cell.id);\n      });\n      this.assertJsonEquals([\"c1\", \"c2\", \"c3\", \"c4\", \"c5\"], ids.sort());\n\n      var map = cellSpan.computeCellSpanMap(cells, 1, 1, 4, 4);\n      this.assertJsonEquals(\n        [\n          undefined,\n          [undefined, 1, undefined, undefined, 1],\n          [undefined, undefined, 1, 1],\n          [undefined, undefined, 1, 1],\n          [undefined, 1, undefined, undefined, 1]\n        ],\n\n        map\n      );\n    },\n\n    testDispose() {\n      var rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      var columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      this.assertDestroy(function () {\n        var cellSpan = new qx.ui.virtual.layer.CellSpanManager(\n          rowConfig,\n          columnConfig\n        );\n\n        cellSpan.dispose();\n      }, this);\n\n      rowConfig.dispose();\n      columnConfig.dispose();\n    }\n  },\n\n  destruct() {\n    this.cellSpan = this.rowConfig = this.columnConfig = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}