{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "factory",
    "table",
    "celleditor",
    "SelectBox",
    "tearDown",
    "superclass",
    "prototype",
    "call",
    "dispose",
    "_getCellInfo",
    "value",
    "col",
    "getTableColumnModel",
    "getDataCellRenderer",
    "_getContentHtml",
    "cellInfo",
    "testCreateCellEditor",
    "editor",
    "createCellEditor",
    "assertInstance",
    "core",
    "Widget",
    "assertEquals",
    "getSelection",
    "length",
    "destroy",
    "testCreateCellEditorWithValue",
    "setListData",
    "getLabel",
    "testGetCellEditorValue",
    "setSelection",
    "getChildren",
    "getCellEditorValue",
    "testValidationFunction",
    "called",
    "setValidationFunction",
    "assert",
    "testAutoconvertToNumber",
    "assertNumber"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/celleditor/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.table.celleditor.SelectBox\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    setUp() {\n      this.factory = new qx.ui.table.celleditor.SelectBox();\n    },\n\n    tearDown() {\n      super.tearDown();\n      this.factory.dispose();\n    },\n\n    _getCellInfo(value) {\n      return {\n        value: value,\n        col: 0,\n        table: {\n          getTableColumnModel() {\n            return {\n              getDataCellRenderer(col) {\n                return {\n                  _getContentHtml(cellInfo) {\n                    return cellInfo.value;\n                  }\n                };\n              }\n            };\n          }\n        }\n      };\n    },\n\n    testCreateCellEditor() {\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      this.assertInstance(editor, qx.ui.core.Widget);\n      this.assertEquals(0, editor.getSelection().length);\n\n      editor.destroy();\n    },\n\n    testCreateCellEditorWithValue() {\n      this.factory.setListData([\"juhu\", \"kinners\"]);\n      var editor = this.factory.createCellEditor(this._getCellInfo(\"juhu\"));\n\n      this.assertEquals(\"juhu\", editor.getSelection()[0].getLabel());\n\n      editor.destroy();\n    },\n\n    testGetCellEditorValue() {\n      this.factory.setListData([\"juhu\", \"kinners\"]);\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setSelection([editor.getChildren()[1]]);\n      this.assertEquals(\"kinners\", this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    },\n\n    testValidationFunction() {\n      this.factory.setListData([\"juhu\", \"kinners\"]);\n\n      var called = false;\n\n      this.factory.setValidationFunction(function (value) {\n        called = true;\n        return \"_\" + value + \"_\";\n      });\n\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setSelection([editor.getChildren()[0]]);\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_juhu_\", value);\n\n      editor.setSelection([editor.getChildren()[1]]);\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_kinners_\", value);\n    },\n\n    testAutoconvertToNumber() {\n      this.factory.setListData([\"10.0\", \"-12.5\"]);\n      var editor = this.factory.createCellEditor(this._getCellInfo(10.0));\n\n      editor.setSelection([editor.getChildren()[1]]);\n      this.assertEquals(-12.5, this.factory.getCellEditorValue(editor));\n      this.assertNumber(this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,uCAAuC,EAAE;IACvDC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,cAAc;IAEjCC,OAAO,EAAE;MACPC,KAAK,WAALA,KAAKA,CAAA,EAAG;QACN,IAAI,CAACC,OAAO,GAAG,IAAIZ,EAAE,CAACQ,EAAE,CAACK,KAAK,CAACC,UAAU,CAACC,SAAS,CAAC,CAAC;MACvD,CAAC;MAEDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACThB,EAAA,CAAAO,IAAA,CAAAC,EAAA,CAAAK,KAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAE,UAAA,CAAAC,SAAA,CAAAF,QAAA,CAAAG,IAAA;QACA,IAAI,CAACP,OAAO,CAACQ,OAAO,CAAC,CAAC;MACxB,CAAC;MAEDC,YAAY,WAAZA,YAAYA,CAACC,KAAK,EAAE;QAClB,OAAO;UACLA,KAAK,EAAEA,KAAK;UACZC,GAAG,EAAE,CAAC;UACNV,KAAK,EAAE;YACLW,mBAAmB,WAAnBA,mBAAmBA,CAAA,EAAG;cACpB,OAAO;gBACLC,mBAAmB,WAAnBA,mBAAmBA,CAACF,GAAG,EAAE;kBACvB,OAAO;oBACLG,eAAe,WAAfA,eAAeA,CAACC,QAAQ,EAAE;sBACxB,OAAOA,QAAQ,CAACL,KAAK;oBACvB;kBACF,CAAC;gBACH;cACF,CAAC;YACH;UACF;QACF,CAAC;MACH,CAAC;MAEDM,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;QACrB,IAAIC,MAAM,GAAG,IAAI,CAACjB,OAAO,CAACkB,gBAAgB,CAAC,IAAI,CAACT,YAAY,CAAC,CAAC,CAAC;QAE/D,IAAI,CAACU,cAAc,CAACF,MAAM,EAAE7B,EAAE,CAACQ,EAAE,CAACwB,IAAI,CAACC,MAAM,CAAC;QAC9C,IAAI,CAACC,YAAY,CAAC,CAAC,EAAEL,MAAM,CAACM,YAAY,CAAC,CAAC,CAACC,MAAM,CAAC;QAElDP,MAAM,CAACQ,OAAO,CAAC,CAAC;MAClB,CAAC;MAEDC,6BAA6B,WAA7BA,6BAA6BA,CAAA,EAAG;QAC9B,IAAI,CAAC1B,OAAO,CAAC2B,WAAW,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAIV,MAAM,GAAG,IAAI,CAACjB,OAAO,CAACkB,gBAAgB,CAAC,IAAI,CAACT,YAAY,CAAC,MAAM,CAAC,CAAC;QAErE,IAAI,CAACa,YAAY,CAAC,MAAM,EAAEL,MAAM,CAACM,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;QAE9DX,MAAM,CAACQ,OAAO,CAAC,CAAC;MAClB,CAAC;MAEDI,sBAAsB,WAAtBA,sBAAsBA,CAAA,EAAG;QACvB,IAAI,CAAC7B,OAAO,CAAC2B,WAAW,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAIV,MAAM,GAAG,IAAI,CAACjB,OAAO,CAACkB,gBAAgB,CAAC,IAAI,CAACT,YAAY,CAAC,CAAC,CAAC;QAE/DQ,MAAM,CAACa,YAAY,CAAC,CAACb,MAAM,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACT,YAAY,CAAC,SAAS,EAAE,IAAI,CAACtB,OAAO,CAACgC,kBAAkB,CAACf,MAAM,CAAC,CAAC;QAErEA,MAAM,CAACQ,OAAO,CAAC,CAAC;MAClB,CAAC;MAEDQ,sBAAsB,WAAtBA,sBAAsBA,CAAA,EAAG;QACvB,IAAI,CAACjC,OAAO,CAAC2B,WAAW,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAE7C,IAAIO,MAAM,GAAG,KAAK;QAElB,IAAI,CAAClC,OAAO,CAACmC,qBAAqB,CAAC,UAAUzB,KAAK,EAAE;UAClDwB,MAAM,GAAG,IAAI;UACb,OAAO,GAAG,GAAGxB,KAAK,GAAG,GAAG;QAC1B,CAAC,CAAC;QAEF,IAAIO,MAAM,GAAG,IAAI,CAACjB,OAAO,CAACkB,gBAAgB,CAAC,IAAI,CAACT,YAAY,CAAC,CAAC,CAAC;QAE/DQ,MAAM,CAACa,YAAY,CAAC,CAACb,MAAM,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAIrB,KAAK,GAAG,IAAI,CAACV,OAAO,CAACgC,kBAAkB,CAACf,MAAM,CAAC;QACnD,IAAI,CAACmB,MAAM,CAACF,MAAM,CAAC;QACnB,IAAI,CAACZ,YAAY,CAAC,QAAQ,EAAEZ,KAAK,CAAC;QAElCO,MAAM,CAACa,YAAY,CAAC,CAACb,MAAM,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAIrB,KAAK,GAAG,IAAI,CAACV,OAAO,CAACgC,kBAAkB,CAACf,MAAM,CAAC;QACnD,IAAI,CAACmB,MAAM,CAACF,MAAM,CAAC;QACnB,IAAI,CAACZ,YAAY,CAAC,WAAW,EAAEZ,KAAK,CAAC;MACvC,CAAC;MAED2B,uBAAuB,WAAvBA,uBAAuBA,CAAA,EAAG;QACxB,IAAI,CAACrC,OAAO,CAAC2B,WAAW,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAIV,MAAM,GAAG,IAAI,CAACjB,OAAO,CAACkB,gBAAgB,CAAC,IAAI,CAACT,YAAY,CAAC,IAAI,CAAC,CAAC;QAEnEQ,MAAM,CAACa,YAAY,CAAC,CAACb,MAAM,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACT,YAAY,CAAC,CAAC,IAAI,EAAE,IAAI,CAACtB,OAAO,CAACgC,kBAAkB,CAACf,MAAM,CAAC,CAAC;QACjE,IAAI,CAACqB,YAAY,CAAC,IAAI,CAACtC,OAAO,CAACgC,kBAAkB,CAACf,MAAM,CAAC,CAAC;QAE1DA,MAAM,CAACQ,OAAO,CAAC,CAAC;MAClB;IACF;EACF,CAAC,CAAC;EAjHFrC,EAAE,CAACO,IAAI,CAACC,EAAE,CAACK,KAAK,CAACC,UAAU,CAACC,SAAS,CAACZ,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}