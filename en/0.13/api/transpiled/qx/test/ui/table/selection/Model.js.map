{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "testRemoveSelectionInterval",
    "selectionModel",
    "table",
    "selection",
    "Model",
    "setSelectionMode",
    "removeSelectionInterval",
    "assertIdentical",
    "_getSelectedRangeArr",
    "length",
    "setSelectionInterval",
    "assertJsonEquals",
    "minIndex",
    "maxIndex"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/selection/Model.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2018 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Milan Damen (milandamen)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.table.selection.Model\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    testRemoveSelectionInterval() {\n      var selectionModel = new qx.ui.table.selection.Model();\n      selectionModel.setSelectionMode(4); // MULTIPLE_INTERVAL_SELECTION\n\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.removeSelectionInterval(0, 1);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 2);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 2, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(1, 1);\n      selectionModel.removeSelectionInterval(0, 2);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(1, 1);\n      selectionModel.removeSelectionInterval(0, 2, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertJsonEquals(\n        [{ minIndex: 1, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 0 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(1, 1);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 0 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(1, 1, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 0 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(1, 2);\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertJsonEquals(\n        [{ minIndex: 1, maxIndex: 2 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(1, 2);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(2, 2);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(2, 2, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(1, 3);\n      selectionModel.removeSelectionInterval(1, 1);\n      this.assertJsonEquals(\n        [{ minIndex: 2, maxIndex: 3 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(1, 3);\n      selectionModel.removeSelectionInterval(1, 1, true);\n      this.assertJsonEquals(\n        [{ minIndex: 1, maxIndex: 2 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 2);\n      selectionModel.removeSelectionInterval(2, 3);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 2);\n      selectionModel.removeSelectionInterval(2, 3, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 1 }],\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 5);\n      selectionModel.removeSelectionInterval(2, 3);\n      this.assertJsonEquals(\n        [\n          { minIndex: 0, maxIndex: 1 },\n          { minIndex: 4, maxIndex: 5 }\n        ],\n\n        selectionModel._getSelectedRangeArr()\n      );\n\n      selectionModel.setSelectionInterval(0, 5);\n      selectionModel.removeSelectionInterval(2, 3, true);\n      this.assertJsonEquals(\n        [{ minIndex: 0, maxIndex: 3 }],\n        selectionModel._getSelectedRangeArr()\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}