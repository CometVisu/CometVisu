{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "type",
    "members",
    "setUp",
    "Error",
    "tearDown",
    "flush",
    "_getCellInfo",
    "value",
    "testCreateCellEditor",
    "editor",
    "factory",
    "createCellEditor",
    "assertInstance",
    "core",
    "Widget",
    "assertEquals",
    "getValue",
    "destroy",
    "testCreateCellEditorWithValue",
    "testGetCellEditorValue",
    "setValue",
    "getCellEditorValue",
    "testValidationFunction",
    "called",
    "setValidationFunction",
    "assert",
    "testAutoconvertToNumber",
    "assertNumber",
    "table",
    "celleditor",
    "AbstractField"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/celleditor/AbstractField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.table.celleditor.AbstractField\", {\n  extend: qx.test.ui.LayoutTestCase,\n  type: \"abstract\",\n\n  members: {\n    setUp() {\n      throw new Error(\"Abstract method call!\");\n    },\n\n    tearDown() {\n      this.flush();\n    },\n\n    _getCellInfo(value) {\n      return { value: value };\n    },\n\n    testCreateCellEditor() {\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      this.assertInstance(editor, qx.ui.core.Widget);\n      this.assertEquals(\"\", editor.getValue());\n\n      editor.destroy();\n    },\n\n    testCreateCellEditorWithValue() {\n      var editor = this.factory.createCellEditor(this._getCellInfo(\"juhu\"));\n      this.assertEquals(\"juhu\", editor.getValue());\n\n      editor.destroy();\n    },\n\n    testGetCellEditorValue() {\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setValue(\"Kinners\");\n      this.assertEquals(\"Kinners\", this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    },\n\n    testValidationFunction() {\n      var called = false;\n\n      this.factory.setValidationFunction(function (value) {\n        called = true;\n        return \"_\" + value + \"_\";\n      });\n\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setValue(\"juhu\");\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_juhu_\", value);\n\n      editor.setValue(\"kinners\");\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_kinners_\", value);\n    },\n\n    testAutoconvertToNumber() {\n      var editor = this.factory.createCellEditor(this._getCellInfo(10.0));\n\n      editor.setValue(\"-12.5\");\n      this.assertEquals(-12.5, this.factory.getCellEditorValue(editor));\n      this.assertNumber(this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}