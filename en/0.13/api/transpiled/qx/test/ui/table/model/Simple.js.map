{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "testGetRowDataAsMap",
    "tableDataWithMeta",
    "id",
    "col1",
    "col2",
    "tableModel",
    "table",
    "model",
    "Simple",
    "setColumns",
    "setDataAsMapArray",
    "data",
    "getRowDataAsMap",
    "assertEquals",
    "setValue",
    "dispose",
    "getStringValues",
    "createRandomRows",
    "rowCount",
    "rowData",
    "strings",
    "row",
    "push",
    "length",
    "testCustomSortFunction",
    "stringValues",
    "setData",
    "setSortMethods",
    "ascending",
    "row1",
    "row2",
    "columnIndex",
    "int1",
    "int2",
    "descending",
    "string1",
    "string2",
    "localeCompare",
    "Table",
    "sortByColumn",
    "getData",
    "assertTrue",
    "destroy",
    "testCustomSortFunctionArgumentsCalleeColumnIndexDeprecated",
    "arguments",
    "callee"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/model/Simple.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/* eslint-disable no-caller */\nqx.Class.define(\"qx.test.ui.table.model.Simple\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    testGetRowDataAsMap() {\n      var tableDataWithMeta = [\n        {\n          id: 100,\n          col1: \"test\",\n          col2: \"test2\"\n        }\n      ];\n\n      var tableModel = new qx.ui.table.model.Simple();\n      tableModel.setColumns([\"Col1\", \"Col2\"], [\"col1\", \"col2\"]);\n      tableModel.setDataAsMapArray(tableDataWithMeta, true);\n\n      // check the initial data\n      var data = tableModel.getRowDataAsMap(0);\n      this.assertEquals(100, data.id);\n      this.assertEquals(\"test\", data.col1);\n      this.assertEquals(\"test2\", data.col2);\n\n      // change the data\n      tableModel.setValue(0, 0, \"affe\");\n\n      data = tableModel.getRowDataAsMap(0);\n      // check the changed data\n      this.assertEquals(100, data.id);\n      this.assertEquals(\"affe\", data.col1);\n      this.assertEquals(\"test2\", data.col2);\n\n      tableModel.dispose();\n    },\n\n    getStringValues() {\n      return [\"aaaa\", \"bbbb\", \"cccc\", \"dddd\", \"eeee\", \"ffff\"];\n    },\n\n    createRandomRows(rowCount) {\n      var rowData = [];\n      var strings = this.getStringValues();\n      for (var row = 0; row < rowCount; row++) {\n        rowData.push([row + 1, strings[row % strings.length]]);\n      }\n      return rowData;\n    },\n\n    testCustomSortFunction() {\n      var stringValues = this.getStringValues();\n      var rowCount = 20;\n\n      // table\n      var model = new qx.ui.table.model.Simple();\n      model.setColumns([\"ID\", \"String\"]);\n      model.setData(this.createRandomRows(rowCount));\n\n      // custom individual ascending descending integer sort function for column 0\n      model.setSortMethods(0, {\n        ascending(row1, row2, columnIndex) {\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return int1 > int2 ? 1 : int1 == int2 ? 0 : -1;\n        },\n        descending(row2, row1, columnIndex) {\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return int1 > int2 ? 1 : int1 == int2 ? 0 : -1;\n        }\n      });\n\n      // custom single string sort function for column 1\n      model.setSortMethods(1, function (row1, row2, columnIndex) {\n        var string1 = row1[columnIndex];\n        var string2 = row2[columnIndex];\n        return string1.localeCompare(string2);\n      });\n\n      var table = new qx.ui.table.Table(model);\n\n      // test sorting column 1\n\n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      this.assertTrue(data[0][1] == stringValues[stringValues.length - 1]);\n      this.assertTrue(data[data.length - 1][1] == stringValues[0]);\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      this.assertTrue(data[0][1] == stringValues[0]);\n      this.assertTrue(\n        data[data.length - 1][1] == stringValues[stringValues.length - 1]\n      );\n\n      // test sorting column 0\n\n      // sort descending\n      model.sortByColumn(0);\n      this.assertTrue(data[0][0] == rowCount);\n      this.assertTrue(data[data.length - 1][0] == 1);\n\n      // sort ascending\n      model.sortByColumn(0, true);\n      this.assertTrue(data[0][0] == 1);\n      this.assertTrue(data[data.length - 1][0] == rowCount);\n\n      table.destroy();\n      model.dispose();\n    },\n\n    testCustomSortFunctionArgumentsCalleeColumnIndexDeprecated() {\n      var stringValues = this.getStringValues();\n      var rowCount = 20;\n\n      // table\n      var model = new qx.ui.table.model.Simple();\n      model.setColumns([\"ID\", \"String\"]);\n      model.setData(this.createRandomRows(rowCount));\n\n      // custom individual ascending descending integer sort function for column 0\n      model.setSortMethods(0, {\n        ascending(row1, row2) {\n          var columnIndex = arguments.callee.columnIndex;\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return int1 > int2 ? 1 : int1 == int2 ? 0 : -1;\n        },\n        descending(row2, row1) {\n          var columnIndex = arguments.callee.columnIndex;\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return int1 > int2 ? 1 : int1 == int2 ? 0 : -1;\n        }\n      });\n\n      // custom single string sort function for column 1\n      model.setSortMethods(1, function (row1, row2) {\n        var columnIndex = arguments.callee.columnIndex;\n        var string1 = row1[columnIndex];\n        var string2 = row2[columnIndex];\n        return string1.localeCompare(string2);\n      });\n\n      var table = new qx.ui.table.Table(model);\n\n      // test sorting column 1\n\n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      this.assertTrue(data[0][1] == stringValues[stringValues.length - 1]);\n      this.assertTrue(data[data.length - 1][1] == stringValues[0]);\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      this.assertTrue(data[0][1] == stringValues[0]);\n      this.assertTrue(\n        data[data.length - 1][1] == stringValues[stringValues.length - 1]\n      );\n\n      // test sorting column 0\n\n      // sort descending\n      model.sortByColumn(0);\n      this.assertTrue(data[0][0] == rowCount);\n      this.assertTrue(data[data.length - 1][0] == 1);\n\n      // sort ascending\n      model.sortByColumn(0, true);\n      this.assertTrue(data[0][0] == 1);\n      this.assertTrue(data[data.length - 1][0] == rowCount);\n\n      table.destroy();\n      model.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,+BAA+B,EAAE;IAC/CC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,EAAE,CAACC,cAAc;IAEjCC,OAAO,EAAE;MACPC,mBAAmB,WAAAA,oBAAA,EAAG;QACpB,IAAIC,iBAAiB,GAAG,CACtB;UACEC,EAAE,EAAE,GAAG;UACPC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACR,CAAC,CACF;QAED,IAAIC,UAAU,GAAG,IAAIhB,EAAE,CAACQ,EAAE,CAACS,KAAK,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC;QAC/CH,UAAU,CAACI,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACzDJ,UAAU,CAACK,iBAAiB,CAACT,iBAAiB,EAAE,IAAI,CAAC;;QAErD;QACA,IAAIU,IAAI,GAAGN,UAAU,CAACO,eAAe,CAAC,CAAC,CAAC;QACxC,IAAI,CAACC,YAAY,CAAC,GAAG,EAAEF,IAAI,CAACT,EAAE,CAAC;QAC/B,IAAI,CAACW,YAAY,CAAC,MAAM,EAAEF,IAAI,CAACR,IAAI,CAAC;QACpC,IAAI,CAACU,YAAY,CAAC,OAAO,EAAEF,IAAI,CAACP,IAAI,CAAC;;QAErC;QACAC,UAAU,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;QAEjCH,IAAI,GAAGN,UAAU,CAACO,eAAe,CAAC,CAAC,CAAC;QACpC;QACA,IAAI,CAACC,YAAY,CAAC,GAAG,EAAEF,IAAI,CAACT,EAAE,CAAC;QAC/B,IAAI,CAACW,YAAY,CAAC,MAAM,EAAEF,IAAI,CAACR,IAAI,CAAC;QACpC,IAAI,CAACU,YAAY,CAAC,OAAO,EAAEF,IAAI,CAACP,IAAI,CAAC;QAErCC,UAAU,CAACU,OAAO,CAAC,CAAC;MACtB,CAAC;MAEDC,eAAe,WAAAA,gBAAA,EAAG;QAChB,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;MACzD,CAAC;MAEDC,gBAAgB,WAAAA,iBAACC,QAAQ,EAAE;QACzB,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIC,OAAO,GAAG,IAAI,CAACJ,eAAe,CAAC,CAAC;QACpC,KAAK,IAAIK,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,QAAQ,EAAEG,GAAG,EAAE,EAAE;UACvCF,OAAO,CAACG,IAAI,CAAC,CAACD,GAAG,GAAG,CAAC,EAAED,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC;QACxD;QACA,OAAOJ,OAAO;MAChB,CAAC;MAEDK,sBAAsB,WAAAA,uBAAA,EAAG;QACvB,IAAIC,YAAY,GAAG,IAAI,CAACT,eAAe,CAAC,CAAC;QACzC,IAAIE,QAAQ,GAAG,EAAE;;QAEjB;QACA,IAAIX,KAAK,GAAG,IAAIlB,EAAE,CAACQ,EAAE,CAACS,KAAK,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC;QAC1CD,KAAK,CAACE,UAAU,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAClCF,KAAK,CAACmB,OAAO,CAAC,IAAI,CAACT,gBAAgB,CAACC,QAAQ,CAAC,CAAC;;QAE9C;QACAX,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAE;UACtBC,SAAS,WAAAA,UAACC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAE;YACjC,IAAIC,IAAI,GAAGH,IAAI,CAACE,WAAW,CAAC;YAC5B,IAAIE,IAAI,GAAGH,IAAI,CAACC,WAAW,CAAC;YAC5B,OAAOC,IAAI,GAAGC,IAAI,GAAG,CAAC,GAAGD,IAAI,IAAIC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD,CAAC;UACDC,UAAU,WAAAA,WAACJ,IAAI,EAAED,IAAI,EAAEE,WAAW,EAAE;YAClC,IAAIC,IAAI,GAAGH,IAAI,CAACE,WAAW,CAAC;YAC5B,IAAIE,IAAI,GAAGH,IAAI,CAACC,WAAW,CAAC;YAC5B,OAAOC,IAAI,GAAGC,IAAI,GAAG,CAAC,GAAGD,IAAI,IAAIC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD;QACF,CAAC,CAAC;;QAEF;QACA1B,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAE,UAAUE,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAE;UACzD,IAAII,OAAO,GAAGN,IAAI,CAACE,WAAW,CAAC;UAC/B,IAAIK,OAAO,GAAGN,IAAI,CAACC,WAAW,CAAC;UAC/B,OAAOI,OAAO,CAACE,aAAa,CAACD,OAAO,CAAC;QACvC,CAAC,CAAC;QAEF,IAAI9B,KAAK,GAAG,IAAIjB,EAAE,CAACQ,EAAE,CAACS,KAAK,CAACgC,KAAK,CAAC/B,KAAK,CAAC;;QAExC;;QAEA;QACAA,KAAK,CAACgC,YAAY,CAAC,CAAC,CAAC;QACrB,IAAI5B,IAAI,GAAGJ,KAAK,CAACiC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAACC,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIc,YAAY,CAACA,YAAY,CAACF,MAAM,GAAG,CAAC,CAAC,CAAC;QACpE,IAAI,CAACkB,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIE,YAAY,CAAC,CAAC,CAAC,CAAC;;QAE5D;QACAlB,KAAK,CAACgC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;QAC3B,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIc,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACgB,UAAU,CACb9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIE,YAAY,CAACA,YAAY,CAACF,MAAM,GAAG,CAAC,CAClE,CAAC;;QAED;;QAEA;QACAhB,KAAK,CAACgC,YAAY,CAAC,CAAC,CAAC;QACrB,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIO,QAAQ,CAAC;QACvC,IAAI,CAACuB,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;QAE9C;QACAhB,KAAK,CAACgC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;QAC3B,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC8B,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIL,QAAQ,CAAC;QAErDZ,KAAK,CAACoC,OAAO,CAAC,CAAC;QACfnC,KAAK,CAACQ,OAAO,CAAC,CAAC;MACjB,CAAC;MAED4B,0DAA0D,WAAAA,2DAAA,EAAG;QAC3D,IAAIlB,YAAY,GAAG,IAAI,CAACT,eAAe,CAAC,CAAC;QACzC,IAAIE,QAAQ,GAAG,EAAE;;QAEjB;QACA,IAAIX,KAAK,GAAG,IAAIlB,EAAE,CAACQ,EAAE,CAACS,KAAK,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC;QAC1CD,KAAK,CAACE,UAAU,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAClCF,KAAK,CAACmB,OAAO,CAAC,IAAI,CAACT,gBAAgB,CAACC,QAAQ,CAAC,CAAC;;QAE9C;QACAX,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAE;UACtBC,SAAS,WAAAA,UAACC,IAAI,EAAEC,IAAI,EAAE;YACpB,IAAIC,WAAW,GAAGa,SAAS,CAACC,MAAM,CAACd,WAAW;YAC9C,IAAIC,IAAI,GAAGH,IAAI,CAACE,WAAW,CAAC;YAC5B,IAAIE,IAAI,GAAGH,IAAI,CAACC,WAAW,CAAC;YAC5B,OAAOC,IAAI,GAAGC,IAAI,GAAG,CAAC,GAAGD,IAAI,IAAIC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD,CAAC;UACDC,UAAU,WAAAA,WAACJ,IAAI,EAAED,IAAI,EAAE;YACrB,IAAIE,WAAW,GAAGa,SAAS,CAACC,MAAM,CAACd,WAAW;YAC9C,IAAIC,IAAI,GAAGH,IAAI,CAACE,WAAW,CAAC;YAC5B,IAAIE,IAAI,GAAGH,IAAI,CAACC,WAAW,CAAC;YAC5B,OAAOC,IAAI,GAAGC,IAAI,GAAG,CAAC,GAAGD,IAAI,IAAIC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;UAChD;QACF,CAAC,CAAC;;QAEF;QACA1B,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAE,UAAUE,IAAI,EAAEC,IAAI,EAAE;UAC5C,IAAIC,WAAW,GAAGa,SAAS,CAACC,MAAM,CAACd,WAAW;UAC9C,IAAII,OAAO,GAAGN,IAAI,CAACE,WAAW,CAAC;UAC/B,IAAIK,OAAO,GAAGN,IAAI,CAACC,WAAW,CAAC;UAC/B,OAAOI,OAAO,CAACE,aAAa,CAACD,OAAO,CAAC;QACvC,CAAC,CAAC;QAEF,IAAI9B,KAAK,GAAG,IAAIjB,EAAE,CAACQ,EAAE,CAACS,KAAK,CAACgC,KAAK,CAAC/B,KAAK,CAAC;;QAExC;;QAEA;QACAA,KAAK,CAACgC,YAAY,CAAC,CAAC,CAAC;QACrB,IAAI5B,IAAI,GAAGJ,KAAK,CAACiC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAACC,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIc,YAAY,CAACA,YAAY,CAACF,MAAM,GAAG,CAAC,CAAC,CAAC;QACpE,IAAI,CAACkB,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIE,YAAY,CAAC,CAAC,CAAC,CAAC;;QAE5D;QACAlB,KAAK,CAACgC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;QAC3B,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIc,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAACgB,UAAU,CACb9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIE,YAAY,CAACA,YAAY,CAACF,MAAM,GAAG,CAAC,CAClE,CAAC;;QAED;;QAEA;QACAhB,KAAK,CAACgC,YAAY,CAAC,CAAC,CAAC;QACrB,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIO,QAAQ,CAAC;QACvC,IAAI,CAACuB,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;QAE9C;QACAhB,KAAK,CAACgC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;QAC3B,IAAI,CAACE,UAAU,CAAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC8B,UAAU,CAAC9B,IAAI,CAACA,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIL,QAAQ,CAAC;QAErDZ,KAAK,CAACoC,OAAO,CAAC,CAAC;QACfnC,KAAK,CAACQ,OAAO,CAAC,CAAC;MACjB;IACF;EACF,CAAC,CAAC;EAnMF1B,EAAE,CAACO,IAAI,CAACC,EAAE,CAACS,KAAK,CAACC,KAAK,CAACC,MAAM,CAAChB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}