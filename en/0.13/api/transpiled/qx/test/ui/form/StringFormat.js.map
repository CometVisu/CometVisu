{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "__P_414_0",
    "widget",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "IStringForm",
    "assertNull",
    "getValue",
    "resetValue",
    "setValue",
    "assertEquals",
    "self",
    "assertEventFired",
    "e",
    "getData",
    "getOldData",
    "destroy",
    "testTextField",
    "TextField",
    "testPasswordField",
    "PasswordField",
    "testTextArea",
    "TextArea",
    "testComboBox",
    "ComboBox",
    "testLabel",
    "basic",
    "Label",
    "StringFormat"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/StringFormat.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.StringFormat\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    __test(widget) {\n      // check if the interface is implemented\n      this.assertTrue(\n        qx.Class.hasInterface(widget.constructor, qx.ui.form.IStringForm),\n        \"Interface is not implemented.\"\n      );\n\n      // check for the init value\n      this.assertNull(widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      widget.setValue(\"affe\");\n      this.assertEquals(\"affe\", widget.getValue(), \"Set or get does not work.\");\n\n      var self = this;\n      // event with value\n      this.assertEventFired(\n        widget,\n        \"changeValue\",\n        function () {\n          widget.setValue(\"affen\");\n        },\n        function (e) {\n          self.assertEquals(\n            \"affen\",\n            e.getData(),\n            \"Not the right number in the event.\"\n          );\n\n          self.assertEquals(\n            \"affe\",\n            e.getOldData(),\n            \"Wrong old data in the event.\"\n          );\n        },\n        \"Event is wrong!\"\n      );\n\n      // event with null\n      this.assertEventFired(\n        widget,\n        \"changeValue\",\n        function () {\n          widget.setValue(null);\n        },\n        function (e) {\n          self.assertEquals(\n            null,\n            e.getData(),\n            \"Not the right number in the event.\"\n          );\n\n          self.assertEquals(\n            \"affen\",\n            e.getOldData(),\n            \"Wrong old data in the event.\"\n          );\n        },\n        \"Event is wrong!\"\n      );\n\n      // get rid of the widget\n      widget.destroy();\n    },\n\n    testTextField() {\n      this.__test(new qx.ui.form.TextField());\n    },\n\n    testPasswordField() {\n      this.__test(new qx.ui.form.PasswordField());\n    },\n\n    testTextArea() {\n      this.__test(new qx.ui.form.TextArea());\n    },\n\n    testComboBox() {\n      this.__test(new qx.ui.form.ComboBox());\n    },\n\n    testLabel() {\n      this.__test(new qx.ui.basic.Label());\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}