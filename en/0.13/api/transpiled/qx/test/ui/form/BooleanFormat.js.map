{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "widget",
    "initValue",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "IBooleanForm",
    "assertEquals",
    "getValue",
    "resetValue",
    "setValue",
    "self",
    "assertEventFired",
    "e",
    "getData",
    "getOldData",
    "destroy",
    "testCheckBox",
    "CheckBox",
    "testToggleButton",
    "ToggleButton",
    "testMenuCheckBox",
    "menu",
    "testRadioButton",
    "RadioButton",
    "testMenuRadioButton",
    "testRadioGroupBox",
    "groupbox",
    "RadioGroupBox",
    "testCheckGroupBox",
    "CheckGroupBox",
    "BooleanFormat"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/BooleanFormat.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.BooleanFormat\", {\n  extend: qx.test.ui.LayoutTestCase,\n\n  members: {\n    __test(widget, initValue) {\n      // check if the interface is implemented\n      this.assertTrue(\n        qx.Class.hasInterface(widget.constructor, qx.ui.form.IBooleanForm),\n        \"Interface is not implemented.\"\n      );\n\n      // check for the init value\n      this.assertEquals(initValue, widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      widget.setValue(true);\n      this.assertEquals(true, widget.getValue(), \"Set or get does not work.\");\n\n      var self = this;\n      this.assertEventFired(\n        widget,\n        \"changeValue\",\n        function () {\n          widget.setValue(false);\n        },\n        function (e) {\n          self.assertEquals(\n            false,\n            e.getData(),\n            \"Not the right data in the event.\"\n          );\n\n          self.assertEquals(\n            true,\n            e.getOldData(),\n            \"Wrong old data in the event.\"\n          );\n        },\n        \"Event is wrong!\"\n      );\n\n      // test for null values\n      widget.setValue(null);\n\n      widget.destroy();\n    },\n\n    testCheckBox() {\n      this.__test(new qx.ui.form.CheckBox(), false);\n    },\n\n    testToggleButton() {\n      this.__test(new qx.ui.form.ToggleButton(), false);\n    },\n\n    testMenuCheckBox() {\n      this.__test(new qx.ui.menu.CheckBox(), false);\n    },\n\n    testRadioButton() {\n      this.__test(new qx.ui.form.RadioButton(), false);\n    },\n\n    testMenuRadioButton() {\n      this.__test(new qx.ui.menu.RadioButton(), false);\n    },\n\n    testRadioGroupBox() {\n      this.__test(new qx.ui.groupbox.RadioGroupBox(), true);\n    },\n\n    testCheckGroupBox() {\n      this.__test(new qx.ui.groupbox.CheckGroupBox(), true);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}