{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testCorrectLocaleUsed",
    "spinner",
    "ui",
    "form",
    "Spinner",
    "nf",
    "util",
    "format",
    "NumberFormat",
    "setNumberFormat",
    "setValue",
    "assertEquals",
    "getChildControl",
    "getValue",
    "destroy",
    "dispose",
    "testPostfixIsAlwaysSet",
    "set",
    "maximum",
    "minimum",
    "numberFormat",
    "setPostfix",
    "tf",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/Spinner.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2014 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * William Oprandi (woprandi)\n     * Tobias Oberrauch (toberrauch)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.Spinner\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    /**\n     * Test if spinner use NumberFormat locale\n     */\n    testCorrectLocaleUsed() {\n      var spinner = new qx.ui.form.Spinner();\n\n      // \"de\" locale has comma as decimal separator\n      var nf = new qx.util.format.NumberFormat(\"de\");\n      spinner.setNumberFormat(nf);\n\n      spinner.setValue(1.23);\n      this.assertEquals(\n        \"1,23\",\n        spinner.getChildControl(\"textfield\").getValue()\n      );\n\n      spinner.destroy();\n      nf.dispose();\n    },\n\n    /**\n     * Test if postfix is always set after textfield of the spinner has been edited\n     */\n    testPostfixIsAlwaysSet() {\n      var spinner = new qx.ui.form.Spinner();\n      spinner.set({\n        maximum: 120,\n        minimum: 1\n      });\n\n      var numberFormat = new qx.util.format.NumberFormat();\n      numberFormat.setPostfix(\"min\");\n      spinner.setNumberFormat(numberFormat);\n      var tf = spinner.getChildControl(\"textfield\");\n\n      // Basic tests\n      tf.setValue(\"113\");\n      this.assertEquals(\"113min\", tf.getValue());\n      tf.setValue(\"121\");\n      this.assertEquals(\"120min\", tf.getValue());\n\n      // Check if postfix is added even if the spinner value won't change (value set to maximum)\n      tf.setValue(\"122\");\n      this.assertEquals(\"120min\", tf.getValue());\n\n      // Same for here (value set to minimum)\n      tf.setValue(\"-67\");\n      this.assertEquals(\"1min\", tf.getValue());\n      tf.setValue(\"-99\");\n      this.assertEquals(\"1min\", tf.getValue());\n\n      // And same here with a valid number\n      tf.setValue(\"50\");\n      this.assertEquals(\"50min\", tf.getValue());\n      tf.setValue(\"50\");\n      this.assertEquals(\"50min\", tf.getValue());\n\n      spinner.destroy();\n      numberFormat.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}