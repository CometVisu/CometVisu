{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "testAddingAndActivating",
    "handler",
    "spy",
    "group",
    "ui",
    "command",
    "Group",
    "cmd",
    "Command",
    "addListener",
    "assertTrue",
    "add",
    "setActive",
    "execute",
    "assertCallCount",
    "testDeactivatingAndAdding",
    "testHasCommand",
    "has",
    "assertFalse",
    "testRemoveCommand",
    "assertInstance",
    "get",
    "remove",
    "assertNull",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/command/Group.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.command.Group\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.dev.unit.MMock,\n\n  members: {\n    testAddingAndActivating() {\n      var handler = this.spy();\n      var group = new qx.ui.command.Group();\n      var cmd = new qx.ui.command.Command(\"Meta+T\");\n\n      cmd.addListener(\"execute\", handler);\n      this.assertTrue(group.add(\"test\", cmd));\n\n      group.setActive(false);\n      cmd.execute();\n      this.assertCallCount(handler, 0);\n\n      group.setActive(true);\n      cmd.execute();\n      this.assertCallCount(handler, 1);\n    },\n\n    testDeactivatingAndAdding() {\n      var handler = this.spy();\n      var group = new qx.ui.command.Group();\n      group.setActive(false);\n\n      var cmd = new qx.ui.command.Command(\"Meta+T\");\n\n      cmd.addListener(\"execute\", handler);\n      this.assertTrue(group.add(\"test\", cmd));\n\n      cmd.execute();\n      this.assertCallCount(handler, 0);\n\n      group.setActive(true);\n      cmd.execute();\n      this.assertCallCount(handler, 1);\n    },\n\n    testHasCommand() {\n      var handler = this.spy();\n      var group = new qx.ui.command.Group();\n      var cmd = new qx.ui.command.Command(\"Meta+T\");\n\n      this.assertTrue(group.add(\"test\", cmd));\n\n      this.assertTrue(\n        group.has(\"test\"),\n        \"The command added with key 'test' must be registered.\"\n      );\n\n      this.assertFalse(\n        group.has(\"foo\"),\n        \"The command 'foo' must not be registered.\"\n      );\n    },\n\n    testRemoveCommand() {\n      var group = new qx.ui.command.Group();\n      var cmd = new qx.ui.command.Command(\"Meta+T\");\n\n      this.assertTrue(group.add(\"test\", cmd));\n      this.assertInstance(\n        group.get(\"test\"),\n        qx.ui.command.Command,\n        \"Returned value is not an instance of qx.ui.command.Command.\"\n      );\n\n      this.assertInstance(group.remove(\"test\"), qx.ui.command.Command);\n\n      this.assertNull(\n        group.get(\"test\"),\n        \"The returned value is not null. We expected null after removing \" +\n          \"the command from group.\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}