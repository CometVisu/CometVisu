{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "type",
    "statics",
    "$$clazz",
    "$$args",
    "members",
    "setUp",
    "getRoot",
    "tearDown",
    "removeAll",
    "forEach",
    "widget",
    "dispose",
    "cls",
    "test",
    "ui",
    "LayoutTestCase",
    "_root",
    "destroy",
    "core",
    "Init",
    "getApplication",
    "__oldGetApp",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "initialize",
    "root",
    "Application",
    "document",
    "__oldApplication",
    "close",
    "terminate",
    "getRunnerApplication",
    "flush",
    "queue",
    "Manager",
    "assertDestroy",
    "fcn",
    "context",
    "msg",
    "call",
    "regCopy",
    "lang",
    "Object",
    "clone",
    "ObjectRegistry",
    "getRegistry",
    "eventMgr",
    "event",
    "Registration",
    "getManager",
    "window",
    "listeners",
    "getAllListeners",
    "listenersCopy",
    "hash",
    "key",
    "Array",
    "reg",
    "obj",
    "$$pooled",
    "$$blackListCleaner",
    "assertNotUndefined",
    "classname",
    "i",
    "length",
    "indexOf",
    "fail",
    "fromHashCode",
    "assertIdentical",
    "getChildren",
    "join",
    "assertWidgetDispose",
    "clazz",
    "args",
    "argStr",
    "push",
    "str",
    "eval",
    "add",
    "_getFixedWidget",
    "Widget",
    "set",
    "width",
    "height",
    "maxWidth",
    "minWidth",
    "maxHeight",
    "minHeight",
    "assertSize",
    "el",
    "getContentElement",
    "getDomElement",
    "elHeight",
    "parseInt",
    "style",
    "elWidth",
    "assertEquals",
    "assertPadding",
    "top",
    "right",
    "bottom",
    "left",
    "assertNotNull",
    "content",
    "paddingTop",
    "bom",
    "element",
    "Style",
    "get",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "assertStyle",
    "value",
    "computedStyle",
    "match",
    "assertCssColor",
    "tapOn",
    "fireEvent",
    "Tap"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/ui/LayoutTestCase.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * @use(qx.theme.Classic)\n */\n\nqx.Class.define(\"qx.test.ui.LayoutTestCase\", {\n  extend: qx.dev.unit.TestCase,\n  type: \"abstract\",\n\n  statics: {\n    $$clazz: null,\n    $$args: null\n  },\n\n  members: {\n    setUp() {\n      this.getRoot();\n    },\n\n    tearDown() {\n      this.getRoot()\n        .removeAll()\n        .forEach(function (widget) {\n          widget.dispose();\n        });\n\n      var cls = qx.test.ui.LayoutTestCase;\n\n      if (cls._root) {\n        cls._root.destroy();\n        cls._root = null;\n        qx.core.Init.getApplication = cls.__oldGetApp;\n      }\n    },\n\n    getRoot() {\n      var cls = qx.test.ui.LayoutTestCase;\n\n      if (cls._root) {\n        return cls._root;\n      }\n\n      qx.theme.manager.Meta.getInstance().initialize();\n      cls._root = new qx.ui.root.Application(document);\n\n      cls.__oldApplication = qx.core.Init.getApplication();\n      cls.__oldGetApp = qx.core.Init.getApplication;\n\n      qx.core.Init.getApplication = function () {\n        return {\n          getRoot() {\n            return cls._root;\n          },\n          close() {},\n          terminate() {}\n        };\n      };\n\n      return cls._root;\n    },\n\n    getRunnerApplication() {\n      return (\n        qx.test.ui.LayoutTestCase.__oldApplication ||\n        qx.core.Init.getApplication()\n      );\n    },\n\n    flush() {\n      qx.ui.core.queue.Manager.flush();\n    },\n\n    assertDestroy(fcn, context, msg) {\n      // call function\n      fcn.call(context);\n      this.flush();\n      this.flush();\n\n      // copy object registry\n      var regCopy = qx.lang.Object.clone(qx.core.ObjectRegistry.getRegistry());\n\n      // copy event listener structure\n      var eventMgr = qx.event.Registration.getManager(window);\n      var listeners = eventMgr.getAllListeners();\n      var listenersCopy = {};\n      for (var hash in listeners) {\n        listenersCopy[hash] = {};\n        for (var key in listeners[hash]) {\n          listenersCopy[hash][key] = qx.lang.Array.clone(listeners[hash][key]);\n        }\n      }\n\n      // call function\n      fcn.call(context);\n      this.flush();\n      this.flush();\n\n      // measure increase in object counts\n\n      // check object registry\n      var reg = qx.core.ObjectRegistry.getRegistry();\n      for (key in reg) {\n        var obj = reg[key];\n\n        // skip pooled objects + DeferredCall which cleans the event listener blacklist\n        if (obj.$$pooled || obj.$$blackListCleaner) {\n          continue;\n        }\n        this.assertNotUndefined(\n          regCopy[key],\n          msg + \": The object '\" + obj.classname + \"' has not been disposed!\"\n        );\n      }\n\n      listeners = eventMgr.getAllListeners();\n\n      for (var hash in listeners) {\n        if (!listenersCopy[hash]) {\n          listenersCopy[hash] = {};\n        }\n\n        for (key in listeners[hash]) {\n          if (!listenersCopy[hash][key]) {\n            listenersCopy[hash][key] = [];\n          }\n\n          for (var i = 0; i < listeners[hash][key].length; i++) {\n            if (\n              listenersCopy[hash][key].indexOf(listeners[hash][key][i]) == -1\n            ) {\n              this.fail(\n                msg +\n                  \": The event listener '\" +\n                  key +\n                  \":\" +\n                  listeners[hash][key][i] +\n                  \"'for the object '\" +\n                  hash +\n                  \":\" +\n                  qx.core.ObjectRegistry.fromHashCode(hash) +\n                  \"' has not been removed.\"\n              );\n            }\n          }\n        }\n      }\n\n      // check root children length\n      this.assertIdentical(\n        0,\n        this.getRoot().getChildren().length,\n        msg +\n          \": The root Children array must be empty but found: \" +\n          this.getRoot().getChildren().join(\", \")\n      );\n    },\n\n    /**\n     * @lint ignoreDeprecated(eval)\n     */\n    assertWidgetDispose(clazz, args, msg) {\n      this.assertDestroy(\n        function () {\n          var argStr = [];\n          for (var i = 0; i < args.length; i++) {\n            argStr.push(\"qx.test.ui.LayoutTestCase.$$args\" + \"[\" + i + \"]\");\n          }\n\n          qx.test.ui.LayoutTestCase.$$clazz = clazz;\n          qx.test.ui.LayoutTestCase.$$args = args;\n          var str =\n            \"new qx.test.ui.LayoutTestCase.$$clazz\" +\n            \"(\" +\n            argStr.join(\", \") +\n            \");\";\n          var widget = eval(str);\n\n          this.getRoot().add(widget);\n          this.flush();\n\n          widget.destroy();\n        },\n        this,\n        msg\n      );\n    },\n\n    _getFixedWidget() {\n      var widget = new qx.ui.core.Widget();\n      widget.set({\n        width: 200,\n        height: 100,\n        maxWidth: \"pref\",\n        minWidth: \"pref\",\n        maxHeight: \"pref\",\n        minHeight: \"pref\"\n      });\n\n      return widget;\n    },\n\n    assertSize(widget, width, height, msg) {\n      this.flush();\n      var el = widget.getContentElement().getDomElement();\n      var elHeight = parseInt(el.style.height, 10);\n      var elWidth = parseInt(el.style.width, 10);\n      this.assertEquals(width, elWidth, msg);\n      this.assertEquals(height, elHeight, msg);\n    },\n\n    assertPadding(widget, top, right, bottom, left, msg) {\n      this.flush();\n\n      this.assertNotNull(widget.getContentElement());\n      this.assertNotNull(widget.getContentElement().getDomElement());\n\n      var content = widget.getContentElement().getDomElement();\n\n      var paddingTop =\n        parseInt(qx.bom.element.Style.get(content, \"paddingTop\"), 10) || 0;\n      var paddingRight =\n        parseInt(qx.bom.element.Style.get(content, \"paddingRight\"), 10) || 0;\n      var paddingBottom =\n        parseInt(qx.bom.element.Style.get(content, \"paddingBottom\"), 10) || 0;\n      var paddingLeft =\n        parseInt(qx.bom.element.Style.get(content, \"paddingLeft\"), 10) || 0;\n\n      this.assertEquals(top, paddingTop, msg);\n      this.assertEquals(right, paddingRight, msg);\n      this.assertEquals(bottom, paddingBottom, msg);\n      this.assertEquals(left, paddingLeft, msg);\n    },\n\n    assertStyle(widget, style, value, msg) {\n      this.flush();\n      var element = widget.getContentElement().getDomElement();\n      var computedStyle = qx.bom.element.Style.get(element, style);\n\n      if (value && style.match(/color/i)) {\n        this.assertCssColor(value, computedStyle, msg);\n      } else {\n        this.assertEquals(value, computedStyle, msg);\n      }\n    },\n\n    tapOn(widget) {\n      widget.fireEvent(\"tap\", qx.event.type.Tap, [\n        {},\n        widget,\n        widget,\n        false,\n        true\n      ]);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}