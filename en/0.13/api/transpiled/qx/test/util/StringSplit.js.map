{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testSplit",
    "testCode",
    "undefined",
    "i",
    "length",
    "result",
    "eval",
    "assertArrayEquals",
    "ecmaSampleRe",
    "util",
    "StringSplit",
    "split",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/StringSplit.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Cross-Browser Split\n     http://stevenlevithan.com/demo/split.cfm\n\n     Copyright:\n       (c) 2006-2007, Steven Levithan <http://stevenlevithan.com>\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n     Authors:\n       * Steven Levithan\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.StringSplit\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    /**\n     * @lint ignoreDeprecated(eval)\n     */\n    testSplit() {\n      var testCode = [\n        [\"qx.util.StringSplit.split('')\", [\"\"]],\n        [\"qx.util.StringSplit.split('', /./)\", [\"\"]],\n        [\"qx.util.StringSplit.split('', /.?/)\", []],\n        [\"qx.util.StringSplit.split('', /.??/)\", []],\n        [\"qx.util.StringSplit.split('ab', /a*/)\", [\"\", \"b\"]],\n        [\"qx.util.StringSplit.split('ab', /a*?/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('ab', /(?:ab)/)\", [\"\", \"\"]],\n        [\"qx.util.StringSplit.split('ab', /(?:ab)*/)\", [\"\", \"\"]],\n        [\"qx.util.StringSplit.split('ab', /(?:ab)*?/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('test', '')\", [\"t\", \"e\", \"s\", \"t\"]],\n        [\"qx.util.StringSplit.split('test')\", [\"test\"]],\n        [\"qx.util.StringSplit.split('111', 1)\", [\"\", \"\", \"\", \"\"]],\n        [\"qx.util.StringSplit.split('test', /(?:)/, 2)\", [\"t\", \"e\"]],\n        [\"qx.util.StringSplit.split('test', /(?:)/, -1)\", [\"t\", \"e\", \"s\", \"t\"]],\n        [\n          \"qx.util.StringSplit.split('test', /(?:)/, undefined)\",\n          [\"t\", \"e\", \"s\", \"t\"]\n        ],\n\n        [\"qx.util.StringSplit.split('test', /(?:)/, null)\", []],\n        [\"qx.util.StringSplit.split('test', /(?:)/, NaN)\", []],\n        [\"qx.util.StringSplit.split('test', /(?:)/, true)\", [\"t\"]],\n        [\"qx.util.StringSplit.split('test', /(?:)/, '2')\", [\"t\", \"e\"]],\n        [\"qx.util.StringSplit.split('test', /(?:)/, 'two')\", []],\n        [\"qx.util.StringSplit.split('a', /-/)\", [\"a\"]],\n        [\"qx.util.StringSplit.split('a', /-?/)\", [\"a\"]],\n        [\"qx.util.StringSplit.split('a', /-??/)\", [\"a\"]],\n        [\"qx.util.StringSplit.split('a', /a/)\", [\"\", \"\"]],\n        [\"qx.util.StringSplit.split('a', /a?/)\", [\"\", \"\"]],\n        [\"qx.util.StringSplit.split('a', /a??/)\", [\"a\"]],\n        [\"qx.util.StringSplit.split('ab', /-/)\", [\"ab\"]],\n        [\"qx.util.StringSplit.split('ab', /-?/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('ab', /-??/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('a-b', /-/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('a-b', /-?/)\", [\"a\", \"b\"]],\n        [\"qx.util.StringSplit.split('a-b', /-??/)\", [\"a\", \"-\", \"b\"]],\n        [\"qx.util.StringSplit.split('a--b', /-/)\", [\"a\", \"\", \"b\"]],\n        [\"qx.util.StringSplit.split('a--b', /-?/)\", [\"a\", \"\", \"b\"]],\n        [\"qx.util.StringSplit.split('a--b', /-??/)\", [\"a\", \"-\", \"-\", \"b\"]],\n        [\"qx.util.StringSplit.split('', /()()/)\", []],\n        [\"qx.util.StringSplit.split('.', /()()/)\", [\".\"]],\n        [\"qx.util.StringSplit.split('.', /(.?)(.?)/)\", [\"\", \".\", \"\", \"\"]],\n        [\"qx.util.StringSplit.split('.', /(.??)(.??)/)\", [\".\"]],\n        [\n          \"qx.util.StringSplit.split('.', /(.)?(.)?/)\",\n          [\"\", \".\", undefined, \"\"]\n        ],\n\n        [\n          \"qx.util.StringSplit.split('tesst', /(s)*/)\",\n          [\"t\", undefined, \"e\", \"s\", \"t\"]\n        ],\n\n        [\n          \"qx.util.StringSplit.split('tesst', /(s)*?/)\",\n          [\"t\", undefined, \"e\", undefined, \"s\", undefined, \"s\", undefined, \"t\"]\n        ],\n\n        [\n          \"qx.util.StringSplit.split('tesst', /(s*)/)\",\n          [\"t\", \"\", \"e\", \"ss\", \"t\"]\n        ],\n\n        [\n          \"qx.util.StringSplit.split('tesst', /(s*?)/)\",\n          [\"t\", \"\", \"e\", \"\", \"s\", \"\", \"s\", \"\", \"t\"]\n        ],\n\n        [\"qx.util.StringSplit.split('tesst', /(?:s)*/)\", [\"t\", \"e\", \"t\"]],\n        [\"qx.util.StringSplit.split('tesst', /(?=s+)/)\", [\"te\", \"s\", \"st\"]],\n        [\"qx.util.StringSplit.split('test', 't')\", [\"\", \"es\", \"\"]],\n        [\"qx.util.StringSplit.split('test', 'es')\", [\"t\", \"t\"]],\n        [\"qx.util.StringSplit.split('test', /t/)\", [\"\", \"es\", \"\"]],\n        [\"qx.util.StringSplit.split('test', /es/)\", [\"t\", \"t\"]],\n        [\"qx.util.StringSplit.split('test', /(t)/)\", [\"\", \"t\", \"es\", \"t\", \"\"]],\n        [\"qx.util.StringSplit.split('test', /(es)/)\", [\"t\", \"es\", \"t\"]],\n        [\n          \"qx.util.StringSplit.split('test', /(t)(e)(s)(t)/)\",\n          [\"\", \"t\", \"e\", \"s\", \"t\", \"\"]\n        ],\n\n        [\n          \"qx.util.StringSplit.split('.', /(((.((.??)))))/)\",\n          [\"\", \".\", \".\", \".\", \"\", \"\", \"\"]\n        ],\n\n        [\"qx.util.StringSplit.split('.', /(((((.??)))))/)\", [\".\"]]\n      ];\n\n      for (var i = 0; i < testCode.length; i++) {\n        var result = eval(testCode[i][0]);\n        this.assertArrayEquals(testCode[i][1], result);\n      }\n\n      var ecmaSampleRe = /<(\\/)?([^<>]+)>/;\n      this.assertArrayEquals(\n        [\n          \"A\",\n          undefined,\n          \"B\",\n          \"bold\",\n          \"/\",\n          \"B\",\n          \"and\",\n          undefined,\n          \"CODE\",\n          \"coded\",\n          \"/\",\n          \"CODE\",\n          \"\"\n        ],\n\n        qx.util.StringSplit.split(\n          \"A<B>bold</B>and<CODE>coded</CODE>\",\n          ecmaSampleRe\n        )\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}