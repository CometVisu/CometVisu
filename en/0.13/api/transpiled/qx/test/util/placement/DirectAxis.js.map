{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "axis",
    "util",
    "placement",
    "DirectAxis",
    "tearDown",
    "testEnoughSpace",
    "size",
    "target",
    "start",
    "end",
    "offsets",
    "areaSize",
    "assertEquals",
    "computeStart",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/placement/DirectAxis.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.placement.DirectAxis\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    setUp() {\n      this.axis = qx.util.placement.DirectAxis;\n    },\n\n    tearDown() {\n      delete this.axis;\n    },\n\n    testEnoughSpace() {\n      var size = 50;\n      var target = { start: 500, end: 600 };\n      var offsets = { start: 10, end: 20 };\n      var areaSize = 1000;\n\n      this.assertEquals(\n        430,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-start\")\n      );\n\n      this.assertEquals(\n        610,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-end\")\n      );\n\n      this.assertEquals(\n        510,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-start\")\n      );\n\n      this.assertEquals(\n        535,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-center\")\n      );\n\n      this.assertEquals(\n        530,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-end\")\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACnDC,MAAM,EAAEN,EAAE,CAACO,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE;MACPC,KAAK,WAAAA,MAAA,EAAG;QACN,IAAI,CAACC,IAAI,GAAGZ,EAAE,CAACa,IAAI,CAACC,SAAS,CAACC,UAAU;MAC1C,CAAC;MAEDC,QAAQ,WAAAA,SAAA,EAAG;QACT,OAAO,IAAI,CAACJ,IAAI;MAClB,CAAC;MAEDK,eAAe,WAAAA,gBAAA,EAAG;QAChB,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIC,MAAM,GAAG;UAAEC,KAAK,EAAE,GAAG;UAAEC,GAAG,EAAE;QAAI,CAAC;QACrC,IAAIC,OAAO,GAAG;UAAEF,KAAK,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAG,CAAC;QACpC,IAAIE,QAAQ,GAAG,IAAI;QAEnB,IAAI,CAACC,YAAY,CACf,GAAG,EACH,IAAI,CAACZ,IAAI,CAACa,YAAY,CAACP,IAAI,EAAEC,MAAM,EAAEG,OAAO,EAAEC,QAAQ,EAAE,YAAY,CACtE,CAAC;QAED,IAAI,CAACC,YAAY,CACf,GAAG,EACH,IAAI,CAACZ,IAAI,CAACa,YAAY,CAACP,IAAI,EAAEC,MAAM,EAAEG,OAAO,EAAEC,QAAQ,EAAE,UAAU,CACpE,CAAC;QAED,IAAI,CAACC,YAAY,CACf,GAAG,EACH,IAAI,CAACZ,IAAI,CAACa,YAAY,CAACP,IAAI,EAAEC,MAAM,EAAEG,OAAO,EAAEC,QAAQ,EAAE,aAAa,CACvE,CAAC;QAED,IAAI,CAACC,YAAY,CACf,GAAG,EACH,IAAI,CAACZ,IAAI,CAACa,YAAY,CAACP,IAAI,EAAEC,MAAM,EAAEG,OAAO,EAAEC,QAAQ,EAAE,cAAc,CACxE,CAAC;QAED,IAAI,CAACC,YAAY,CACf,GAAG,EACH,IAAI,CAACZ,IAAI,CAACa,YAAY,CAACP,IAAI,EAAEC,MAAM,EAAEG,OAAO,EAAEC,QAAQ,EAAE,WAAW,CACrE,CAAC;MACH;IACF;EACF,CAAC,CAAC;EA/DFvB,EAAE,CAAC0B,IAAI,CAACb,IAAI,CAACC,SAAS,CAACC,UAAU,CAACZ,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}