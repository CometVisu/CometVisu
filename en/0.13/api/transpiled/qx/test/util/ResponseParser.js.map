{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "responseParser",
    "util",
    "ResponseParser",
    "tearDown",
    "__assertParser",
    "contentType",
    "parser",
    "msg",
    "assertEquals",
    "_getParser",
    "test_getParser_returns_undefined_for_unknown",
    "undefined",
    "test_getParser_returns_undefined_for_malformed",
    "test_getParser_detects_json",
    "json",
    "PARSER",
    "test_getParser_detects_xml",
    "xml",
    "test_getParser_detects_deprecated_xml",
    "test_getParser_handles_character_set",
    "test_setParser_function",
    "customParser",
    "setParser",
    "test_setParser_symbolically",
    "assertFunction",
    "test_parse_not_parse_empty_response",
    "expectedResponse",
    "parsedResponse",
    "parse",
    "test_parse_not_parse_unknown_response",
    "assertNull",
    "test_parse_json_response",
    "call",
    "animals",
    "test_parse_xml_response",
    "documentElement",
    "nodeName",
    "test_parse_arbitrary_xml_response",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/ResponseParser.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.ResponseParser\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    setUp() {\n      this.responseParser = new qx.util.ResponseParser();\n    },\n\n    tearDown() {\n      this.responseParser = null;\n    },\n\n    __assertParser(contentType, parser) {\n      var msg = \"Content type '\" + contentType + \"' handled incorrectly\";\n      this.assertEquals(\n        parser,\n        this.responseParser._getParser(contentType),\n        msg\n      );\n    },\n\n    \"test: getParser() returns undefined for unknown\"() {\n      this.__assertParser(\"text/html\", undefined);\n      this.__assertParser(\"application/pdf\", undefined);\n    },\n\n    \"test: getParser() returns undefined for malformed\"() {\n      this.__assertParser(\"\", undefined);\n      this.__assertParser(\"json\", undefined);\n      this.__assertParser(\"text/foo+json\", undefined);\n      this.__assertParser(\"application/foo+jsonish\", undefined);\n      this.__assertParser(\"application/foo+xmlish\", undefined);\n    },\n\n    \"test: getParser() detects json\"() {\n      var json = qx.util.ResponseParser.PARSER.json;\n      this.__assertParser(\"application/json\", json);\n      this.__assertParser(\"application/vnd.affe+json\", json);\n      this.__assertParser(\"application/prs.affe+json\", json);\n      this.__assertParser(\n        \"application/vnd.oneandone.onlineoffice.email+json\",\n        json\n      );\n    },\n\n    \"test: getParser() detects xml\"() {\n      var xml = qx.util.ResponseParser.PARSER.xml;\n      this.__assertParser(\"application/xml\", xml);\n      this.__assertParser(\"application/vnd.oneandone.domains.domain+xml\", xml);\n      this.__assertParser(\"text/xml\"); // Deprecated\n    },\n\n    \"test: getParser() detects deprecated xml\"() {\n      var xml = qx.util.ResponseParser.PARSER.xml;\n      this.__assertParser(\"text/xml\");\n    },\n\n    \"test: getParser() handles character set\"() {\n      var json = qx.util.ResponseParser.PARSER.json;\n      this.__assertParser(\"application/json; charset=utf-8\", json);\n    },\n\n    \"test: setParser() function\"() {\n      var customParser = function () {};\n      this.responseParser.setParser(customParser);\n      this.assertEquals(customParser, this.responseParser._getParser());\n    },\n\n    \"test: setParser() symbolically\"() {\n      this.responseParser.setParser(\"json\");\n      this.assertFunction(this.responseParser._getParser());\n    },\n\n    \"test: parse() not parse empty response\"() {\n      var expectedResponse = \"\",\n        parsedResponse = this.responseParser.parse(\"\", \"application/json\");\n\n      this.assertEquals(expectedResponse, parsedResponse);\n    },\n\n    \"test: parse() not parse unknown response\"() {\n      this.assertNull(this.responseParser._getParser(\"application/idontexist\"));\n    },\n\n    // JSON\n\n    \"test: parse() json response\"() {\n      var json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n        expectedResponse = qx.util.ResponseParser.PARSER.json.call(this, json),\n        parsedResponse = this.responseParser.parse(json, \"application/json\");\n\n      this.assertEquals(expectedResponse.animals[0], parsedResponse.animals[0]);\n    },\n\n    // XML\n\n    \"test: parse() xml response\"() {\n      var xml = \"<animals><monkey/><mouse/></animals>\",\n        expectedResponse = qx.util.ResponseParser.PARSER.xml.call(this, xml),\n        parsedResponse = this.responseParser.parse(xml, \"application/xml\");\n\n      this.assertEquals(\n        expectedResponse.documentElement.nodeName,\n        parsedResponse.documentElement.nodeName\n      );\n    },\n\n    \"test: parse() arbitrary xml response\"() {\n      var xml = \"<animals><monkey/><mouse/></animals>\",\n        expectedResponse = qx.util.ResponseParser.PARSER.xml.call(this, xml),\n        parsedResponse = this.responseParser.parse(xml, \"animal/affe+xml\");\n\n      this.assertEquals(\n        expectedResponse.documentElement.nodeName,\n        parsedResponse.documentElement.nodeName\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}