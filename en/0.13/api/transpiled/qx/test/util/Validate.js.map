{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testNumber",
    "util",
    "Validate",
    "number",
    "assertException",
    "core",
    "ValidationError",
    "testEmail",
    "email",
    "testString",
    "string",
    "testUrl",
    "url",
    "testColor",
    "color",
    "testRange",
    "range",
    "testInArray",
    "inArray",
    "testRegex",
    "validator",
    "regExp",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/Validate.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.Validate\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testNumber() {\n      //The number is valid if an error isn't raised\n      qx.util.Validate.number()(2);\n\n      //ValidationError raised if not a number\n      this.assertException(function () {\n        qx.util.Validate.number()(\"not a number\");\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.number(\"Custom Error Message\")(\"not a number\");\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testEmail() {\n      //The email is valid if an error isn't raised\n      qx.util.Validate.email()(\"an@email.ro\");\n\n      //ValidationError raised if not an email\n      this.assertException(function () {\n        qx.util.Validate.email()(\"not an email\");\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.email(\"Custom Error Message\")(\"not an email\");\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n\n      //Valid since new domain extensions\n      qx.util.Validate.email()(\"foo@bar.qooxdoo\");\n\n      //'+' allowed (gmail aliases)\n      qx.util.Validate.email()(\"foobar+alias@qooxdoo.org\");\n    },\n\n    testString() {\n      //The string is valid if an error isn't raised\n      qx.util.Validate.string()(\"I'm a string\");\n\n      //ValidationError raised if not a string\n      this.assertException(function () {\n        qx.util.Validate.string()(1);\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.string(\"Custom Error Message\")(1);\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testUrl() {\n      //The url is valid if an error isn't raised\n      qx.util.Validate.url()(\"http://anurl.ro\");\n\n      //ValidationError raised if not an url\n      this.assertException(function () {\n        qx.util.Validate.url()(\"not an url\");\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.url(\"Custom Error Message\")(\"not an url\");\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testColor() {\n      //The color value is valid if an error isn't raised\n      qx.util.Validate.color()(\"#667788\");\n\n      //ValidationError raised if not a color value\n      this.assertException(function () {\n        qx.util.Validate.color()(\"not a color value\");\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.color(\"Custom Error Message\")(\"not a color value\");\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testRange() {\n      //The value is valid if it's in the range\n      qx.util.Validate.range(2, 4)(3);\n\n      //ValidationError raised if the value isn't in the range\n      this.assertException(function () {\n        qx.util.Validate.range(2, 4)(5);\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.range(2, 4, \"Custom Error Message\")(5);\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testInArray() {\n      //The value is valid if it's in the range\n      qx.util.Validate.inArray([2, 3])(3);\n\n      //ValidationError raised if the value isn't in array\n      this.assertException(function () {\n        qx.util.Validate.inArray([2, 3])(4);\n      }, qx.core.ValidationError);\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.inArray([2, 3], \"Custom Error Message\")(4);\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    },\n\n    testRegex() {\n      var validator = qx.util.Validate.regExp(/^\\dand\\d$/);\n      validator(\"1and1\");\n\n      //ValidationError raised if the value isn't in array\n      this.assertException(\n        function () {\n          validator(\"oneandone\");\n        },\n        qx.core.ValidationError,\n        /oneandone/g\n      );\n\n      //ValidationError raised if the value isn't in array\n      this.assertException(\n        function () {\n          validator(\"xyz\");\n        },\n        qx.core.ValidationError,\n        /xyz/g\n      );\n\n      // ValidationError raised with a custom message\n      this.assertException(\n        function () {\n          qx.util.Validate.regExp(\n            /^\\dand\\d$/,\n            \"Custom Error Message\"\n          )(\"oneandone\");\n        },\n        qx.core.ValidationError,\n        \"Custom Error Message\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}