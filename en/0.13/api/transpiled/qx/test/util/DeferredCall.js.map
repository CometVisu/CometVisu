{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testGlobalErrorHandling",
    "navigator",
    "plugins",
    "length",
    "skip",
    "fail",
    "Error",
    "onError",
    "resume",
    "event",
    "GlobalError",
    "setErrorHandler",
    "deferredCall",
    "util",
    "DeferredCall",
    "schedule",
    "wait",
    "core",
    "AssertionError",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/DeferredCall.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.DeferredCall\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testGlobalErrorHandling() {\n      if (navigator.plugins.length == 0) {\n        this.skip(\"test disabled on headless browsers\");\n      }\n\n      var fail = function () {\n        throw new Error(\"fail\");\n      };\n\n      var onError = function () {\n        this.resume(function () {\n          qx.event.GlobalError.setErrorHandler(null, null);\n        });\n      };\n\n      var deferredCall = new qx.util.DeferredCall(fail, this);\n      qx.event.GlobalError.setErrorHandler(onError, this);\n\n      deferredCall.schedule();\n      this.wait(1000, function () {\n        qx.event.GlobalError.setErrorHandler(null, null);\n        throw new qx.core.AssertionError(\n          \"Asynchronous Test Error\",\n          \"Timeout reached before resume() was called.\"\n        );\n      });\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,2BAA2B,EAAE;IAC3CC,MAAM,EAAEN,EAAE,CAACO,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE;MACPC,uBAAuB,WAAAA,wBAAA,EAAG;QACxB,IAAIC,SAAS,CAACC,OAAO,CAACC,MAAM,IAAI,CAAC,EAAE;UACjC,IAAI,CAACC,IAAI,CAAC,oCAAoC,CAAC;QACjD;QAEA,IAAIC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAe;UACrB,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;QACzB,CAAC;QAED,IAAIC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAe;UACxB,IAAI,CAACC,MAAM,CAAC,YAAY;YACtBnB,EAAE,CAACoB,KAAK,CAACC,WAAW,CAACC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;UAClD,CAAC,CAAC;QACJ,CAAC;QAED,IAAIC,YAAY,GAAG,IAAIvB,EAAE,CAACwB,IAAI,CAACC,YAAY,CAACT,IAAI,EAAE,IAAI,CAAC;QACvDhB,EAAE,CAACoB,KAAK,CAACC,WAAW,CAACC,eAAe,CAACJ,OAAO,EAAE,IAAI,CAAC;QAEnDK,YAAY,CAACG,QAAQ,CAAC,CAAC;QACvB,IAAI,CAACC,IAAI,CAAC,IAAI,EAAE,YAAY;UAC1B3B,EAAE,CAACoB,KAAK,CAACC,WAAW,CAACC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;UAChD,MAAM,IAAItB,EAAE,CAAC4B,IAAI,CAACC,cAAc,CAC9B,yBAAyB,EACzB,6CACF,CAAC;QACH,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;EAlDF7B,EAAE,CAAC8B,IAAI,CAACN,IAAI,CAACC,YAAY,CAACtB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}