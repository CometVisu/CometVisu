{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "Uri",
    "util",
    "testAppendParamsToUrlWithString",
    "url",
    "params",
    "expected",
    "result",
    "appendParamsToUrl",
    "assertEquals",
    "testToParameter",
    "obj",
    "affe",
    "maus",
    "str",
    "toParameter",
    "testToParameterUmlauts",
    "äffe",
    "maüs",
    "testToParameterSpaces",
    "testToParameterSpacesPost",
    "testToParameterArray",
    "id",
    "testAppendParamsToUrlWithStringWhenExistingQuery",
    "testAppendParamsToUrlWithMap",
    "assertTrue",
    "test",
    "testAppendParamsToUrlWithUndefined",
    "testAppendParamsToUrlWithEmptyMap",
    "testParseUri",
    "parseUri",
    "protocol",
    "host",
    "port",
    "relative",
    "anchor",
    "testParseUriWithIpv6LoopbackAddress",
    "testParseUriWithIpv6Address",
    "testParseUriWithAtSignInQuery",
    "query",
    "testParseUriWithUserNameInDomain",
    "user"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/Uri.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.Uri\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    setUp() {\n      this.Uri = qx.util.Uri;\n    },\n\n    \"test: appendParamsToUrl() with string\"() {\n      var url = \"http://example.com/path\",\n        params = \"affe=true&maus=false\",\n        expected = \"http://example.com/path?affe=true&maus=false\",\n        result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(expected, result);\n    },\n\n    testToParameter() {\n      var obj = { affe: true, maus: false };\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"affe=true&maus=false\", str);\n    },\n\n    testToParameterUmlauts() {\n      var obj = { äffe: \"jøah\", maüs: \"nö\" };\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"%C3%A4ffe=j%C3%B8ah&ma%C3%BCs=n%C3%B6\", str);\n    },\n\n    testToParameterSpaces() {\n      var obj = { \"a f f e\": true };\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"a%20f%20f%20e=true\", str);\n    },\n\n    testToParameterSpacesPost() {\n      var obj = { \"a f  f e\": \"j a\" };\n      var str = qx.util.Uri.toParameter(obj, true);\n      this.assertEquals(\"a+f++f+e=j+a\", str);\n    },\n\n    testToParameterArray() {\n      var obj = { id: [1, 2, 3] };\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"id=1&id=2&id=3\", str);\n    },\n\n    \"test: appendParamsToUrl() with string when existing query\"() {\n      var url = \"http://example.com/path?giraffe=true\",\n        params = \"affe=true&maus=false\",\n        expected = \"http://example.com/path?giraffe=true&affe=true&maus=false\",\n        result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(expected, result);\n    },\n\n    \"test: appendParamsToUrl() with map\"() {\n      var url = \"http://example.com/path\",\n        params = { affe: true, maus: false },\n        result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertTrue(/^http.*example.com\\/path/.test(result));\n      this.assertTrue(/affe=true/.test(result));\n      this.assertTrue(/maus=false/.test(result));\n    },\n\n    \"test: appendParamsToUrl() with undefined\"() {\n      var url = \"http://example.com/path\";\n      var params;\n      var result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(url, result);\n    },\n\n    \"test: appendParamsToUrl() with empty map\"() {\n      var url = \"http://example.com/path\",\n        params = {},\n        result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(url, result);\n    },\n\n    \"test: parseUri()\"() {\n      var url = \"http://www.example.com:80/foo/bar?affe=true#here\",\n        result = this.Uri.parseUri(url);\n\n      // Some integration tests, parseUri is better covered here\n      // http://stevenlevithan.com/demo/parseuri/js/\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\"www.example.com\", result.host);\n      this.assertEquals(\"80\", result.port);\n      this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n      this.assertEquals(\"here\", result.anchor);\n    },\n\n    \"test: parseUri() with ipv6 loopback address\"() {\n      var url = \"http://[::1]:80/foo/bar?affe=true#here\",\n        result = this.Uri.parseUri(url);\n\n      // Some integration tests, parseUri is better covered here\n      // http://stevenlevithan.com/demo/parseuri/js/\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\"[::1]\", result.host);\n      this.assertEquals(\"80\", result.port);\n      this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n      this.assertEquals(\"here\", result.anchor);\n    },\n\n    \"test: parseUri() with ipv6 address\"() {\n      var url =\n          \"http://[FE80:0000:0000:0000:0202:B3FF:FE1E:8329]:80/foo/bar?affe=true#here\",\n        result = this.Uri.parseUri(url);\n\n      // Some integration tests, parseUri is better covered here\n      // http://stevenlevithan.com/demo/parseuri/js/\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\n        \"[FE80:0000:0000:0000:0202:B3FF:FE1E:8329]\",\n        result.host\n      );\n\n      this.assertEquals(\"80\", result.port);\n      this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n      this.assertEquals(\"here\", result.anchor);\n    },\n\n    \"test: parseUri() with at-sign in query\"() {\n      var url = \"http://www.example.com/foo/bar?separator=@\",\n        result = this.Uri.parseUri(url);\n\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\"www.example.com\", result.host);\n      this.assertEquals(\"/foo/bar?separator=@\", result.relative);\n      this.assertEquals(\"separator=@\", result.query);\n    },\n\n    \"test: parseUri() with user name in domain\"() {\n      var url = \"http://userid@www.example.com/foo/bar\",\n        result = this.Uri.parseUri(url);\n\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\"www.example.com\", result.host);\n      this.assertEquals(\"/foo/bar\", result.relative);\n      this.assertEquals(\"userid\", result.user);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}