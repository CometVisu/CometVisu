{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__nf",
    "__oldLocale",
    "setUp",
    "assertNotUndefined",
    "util",
    "format",
    "NumberFormat",
    "locale",
    "Manager",
    "getInstance",
    "getLocale",
    "setLocale",
    "tearDown",
    "dispose",
    "testNumberFormatConstructor",
    "wrongArgs",
    "undefined",
    "NaN",
    "Infinity",
    "correctArgs",
    "nf",
    "i",
    "len",
    "e",
    "fail",
    "length",
    "testNumberFormat",
    "assertEquals",
    "ninfinity",
    "infinity",
    "nan",
    "Math",
    "sqrt",
    "testNumberParse",
    "goodNumbers",
    "number",
    "parse",
    "badNumberStrings",
    "badNumberStr",
    "assertException",
    "Error",
    "testLocaleSwitch",
    "setMinimumFractionDigits",
    "setMaximumFractionDigits",
    "numberStr",
    "testNumberFormatChange",
    "setPostfix",
    "testParseWithPrefixOrPostfix",
    "spinner",
    "ui",
    "form",
    "Spinner",
    "prefix",
    "postfix",
    "numberFormat",
    "set",
    "maximumFractionDigits",
    "minimumFractionDigits",
    "setNumberFormat",
    "getChildControl",
    "setValue",
    "getValue",
    "destroy",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/util/NumberFormat.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.NumberFormat\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    __nf: null,\n    __oldLocale: null,\n\n    setUp() {\n      this.assertNotUndefined(qx.util.format.NumberFormat);\n\n      this.__oldLocale = qx.locale.Manager.getInstance().getLocale();\n      qx.locale.Manager.getInstance().setLocale(\"de_DE\");\n\n      this.__nf = new qx.util.format.NumberFormat();\n    },\n\n    tearDown() {\n      this.__nf.dispose();\n      qx.locale.Manager.getInstance().setLocale(this.__oldLocale);\n    },\n\n    testNumberFormatConstructor() {\n      var wrongArgs = [null, undefined, NaN, Infinity, 1, {}, [], true],\n        correctArgs = [\"de_DE\"],\n        nf,\n        i,\n        len;\n\n      try {\n        nf = new qx.util.format.NumberFormat();\n      } catch (e) {\n        this.fail(\"Failed on an empty arguments list\");\n      }\n      try {\n        nf.dispose();\n      } catch (e) {}\n\n      try {\n        nf = new qx.util.format.NumberFormat(\"de_DE\", true);\n        this.fail(\"Did not fail on wrong arguments number\");\n      } catch (e) {}\n      try {\n        nf.dispose();\n      } catch (e) {}\n\n      for (i = 0, len = wrongArgs.length; i < len; i += 1) {\n        try {\n          nf = new qx.util.format.NumberFormat(wrongArgs[i]);\n          this.fail(\"A wrong argument did not raise an error: \" + wrongArgs[i]);\n        } catch (e) {}\n        try {\n          nf.dispose();\n        } catch (e) {}\n      }\n\n      for (i = 0, len = correctArgs.length; i < len; i += 1) {\n        try {\n          nf = new qx.util.format.NumberFormat(correctArgs[i]);\n        } catch (e) {\n          this.fail(\"A correct argument did raise an error: \" + correctArgs[i]);\n        }\n        try {\n          nf.dispose();\n        } catch (e) {}\n      }\n    },\n\n    testNumberFormat() {\n      var nf = this.__nf;\n\n      // this failed due to a rounding error\n      this.assertEquals(\"1.000.000\", nf.format(1000000));\n\n      this.assertEquals(\"-1.000.000\", nf.format(-1000000));\n      this.assertEquals(\"-1.000.000\", nf.format(-1000000));\n\n      this.assertEquals(\"0\", nf.format(0));\n      this.assertEquals(\"0\", nf.format(-0));\n\n      this.assertEquals(\"12,12\", nf.format(12.12));\n\n      var ninfinity = -1 / 0;\n      this.assertEquals(\"-Infinity\", nf.format(ninfinity));\n\n      var infinity = 1 / 0;\n      this.assertEquals(\"Infinity\", nf.format(infinity));\n\n      var nan = Math.sqrt(-1);\n      this.assertEquals(\"NaN\", nf.format(nan));\n    },\n\n    testNumberParse() {\n      var nf = this.__nf;\n\n      var goodNumbers = {\n        1000: 1000,\n        \"-0,02\": -0.02,\n        \"0,02\": 0.02,\n        \",02\": 0.02,\n        \"-,02\": -0.02,\n        \"+,02\": 0.02,\n        \"-1.111.111,2\": -1111111.2,\n        \"-1.000.000\": -1000000,\n        \"+1.000,12\": 1000.12\n      };\n\n      for (var number in goodNumbers) {\n        this.assertEquals(nf.parse(number), goodNumbers[number]);\n      }\n\n      var badNumberStrings = [\n        \"2hastalavista\",\n        \"2.3.4.5.6\",\n        \"12.10,10\",\n        \"10,1,12\"\n      ];\n\n      var badNumberStr;\n\n      for (var i = 0; i < badNumberStrings.length; i++) {\n        badNumberStr = badNumberStrings[i];\n\n        this.assertException(\n          function () {\n            nf.format(nf.parse(badNumberStr));\n          },\n          Error,\n          \"does not match the number format\",\n          \"testing if parsing fails on string '\" + badNumberStr + \"'\"\n        );\n      }\n    },\n\n    testLocaleSwitch() {\n      var nf = this.__nf;\n      nf.setMinimumFractionDigits(0);\n      nf.setMaximumFractionDigits(2);\n\n      var numberStr = \"0.5\";\n\n      this.assertException(\n        function () {\n          nf.parse(numberStr);\n        },\n        Error,\n        \"does not match the number format\",\n        \"testing if parsing fails on string '\" + numberStr + \"'\"\n      );\n\n      qx.locale.Manager.getInstance().setLocale(\"en_US\");\n\n      this.assertEquals(\n        0.5,\n        nf.parse(\"0.5\"),\n        \"parsing failed after locale change\"\n      );\n    },\n\n    testNumberFormatChange() {\n      var nf = this.__nf;\n      nf.setPostfix(\" %\");\n\n      var numberStr = \"5 Percent\";\n\n      this.assertException(\n        function () {\n          nf.parse(numberStr);\n        },\n        Error,\n        \"does not match the number format\",\n        \"testing if parsing fails on string '\" + numberStr + \"'\"\n      );\n\n      nf.setPostfix(\" Percent\");\n      this.assertEquals(\n        5,\n        nf.parse(numberStr),\n        \"parsing failed after number format change\"\n      );\n    },\n\n    testParseWithPrefixOrPostfix() {\n      var spinner = new qx.ui.form.Spinner();\n      var prefix = \"$ \";\n      var postfix = \" €\";\n      var numberFormat = new qx.util.format.NumberFormat(\"de\").set({\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n        prefix: prefix,\n        postfix: postfix\n      });\n\n      spinner.setNumberFormat(numberFormat);\n      spinner.getChildControl(\"textfield\").setValue(\"$ 1,23 €\");\n\n      this.assertEquals(\n        prefix + \"1,23\" + postfix,\n        spinner.getChildControl(\"textfield\").getValue()\n      );\n\n      spinner.destroy();\n      numberFormat.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}