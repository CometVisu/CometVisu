{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "tearDown",
    "StackTrace",
    "FILENAME_TO_CLASSNAME",
    "FORMAT_STACKTRACE",
    "testGetStackTraceFromError",
    "core",
    "Environment",
    "get",
    "skip",
    "trace",
    "Error",
    "ex",
    "getStackTraceFromError",
    "Assert",
    "assertNotEquals",
    "length",
    "testGetStackTraceFromErrorQx",
    "qxErrorClasses",
    "type",
    "BaseError",
    "GlobalError",
    "WindowError",
    "RequirementError",
    "i",
    "l",
    "cls",
    "e",
    "toString",
    "indexOf",
    "assertNotIdentical",
    "testFilenameConverterDefault",
    "stack",
    "assertMatch",
    "testFilenameConverterCustom",
    "converter",
    "fileName",
    "assertString",
    "lang",
    "Function",
    "bind",
    "testFormatStackTrace",
    "formatter",
    "assertArray",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/dev/StackTrace.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.dev.StackTrace\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    tearDown() {\n      qx.dev.StackTrace.FILENAME_TO_CLASSNAME = null;\n      qx.dev.StackTrace.FORMAT_STACKTRACE = null;\n    },\n\n    testGetStackTraceFromError() {\n      if (!qx.core.Environment.get(\"ecmascript.error.stacktrace\")) {\n        this.skip(\"Test skipped since the client doesn't provide stack traces\");\n      }\n      var trace = [];\n      try {\n        throw new Error(\"Expected exception\");\n      } catch (ex) {\n        trace = qx.dev.StackTrace.getStackTraceFromError(ex);\n      }\n      qx.core.Assert.assertNotEquals(\n        0,\n        trace.length,\n        \"No stack trace information returned!\"\n      );\n    },\n\n    testGetStackTraceFromErrorQx() {\n      if (!qx.core.Environment.get(\"ecmascript.error.stacktrace\")) {\n        this.skip(\"Test skipped since the client doesn't provide stack traces\");\n      }\n      var qxErrorClasses = [\n        qx.type.BaseError,\n        qx.core.GlobalError,\n        qx.core.WindowError,\n        qx.dev.unit.RequirementError\n      ];\n\n      for (var i = 0, l = qxErrorClasses.length; i < l; i++) {\n        var cls = qxErrorClasses[i];\n        var e;\n        if (cls.toString().indexOf(\"GlobalError\") > 0) {\n          e = new cls(new Error());\n        } else {\n          e = new cls();\n        }\n        try {\n          throw e;\n        } catch (ex) {\n          var trace = qx.dev.StackTrace.getStackTraceFromError(ex);\n          this.assertNotIdentical(\n            0,\n            trace.length,\n            \"Didn't get stack trace from \" + cls.toString()\n          );\n        }\n      }\n    },\n\n    testFilenameConverterDefault() {\n      var ex = new Error(\"Just a test\");\n      var stack = qx.dev.StackTrace.getStackTraceFromError(ex);\n      for (var i = 0, l = stack.length; i < l; i++) {\n        this.assertMatch(\n          stack[i],\n          /((?:qx\\.)|(?:qxl\\.testtapper)|(?:qxl\\.testrunner)|(?:testrunner\\.js)|(?:tests\\.js)|(?:qooxdoo-adapter\\.js))/\n        );\n      }\n    },\n\n    testFilenameConverterCustom() {\n      var converter = function (fileName) {\n        this.assertString(fileName);\n        return \"FOO\";\n      };\n\n      qx.dev.StackTrace.FILENAME_TO_CLASSNAME = qx.lang.Function.bind(\n        converter,\n        this\n      );\n\n      var ex = new Error(\"Just a test\");\n      var stack = qx.dev.StackTrace.getStackTraceFromError(ex);\n      for (var i = 0, l = stack.length; i < l; i++) {\n        this.assertMatch(stack[i], /FOO/);\n      }\n    },\n\n    testFormatStackTrace() {\n      var formatter = function (trace) {\n        this.assertArray(trace);\n        for (var i = 0, l = trace.length; i < l; i++) {\n          trace[i] = \"BAR \" + trace[i];\n        }\n        return trace;\n      };\n\n      qx.dev.StackTrace.FORMAT_STACKTRACE = qx.lang.Function.bind(\n        formatter,\n        this\n      );\n\n      var ex = new Error(\"Just a test\");\n      var stack = qx.dev.StackTrace.getStackTraceFromError(ex);\n      for (var i = 0, l = stack.length; i < l; i++) {\n        this.assertMatch(stack[i], /^BAR/);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}