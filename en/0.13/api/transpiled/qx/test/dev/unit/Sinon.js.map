{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "MRequirements",
    "members",
    "sinon",
    "setUp",
    "Sinon",
    "getSinon",
    "core",
    "Object",
    "getKind",
    "test",
    "Animal",
    "scratch",
    "Affe",
    "climb",
    "testGetSinon",
    "assertObject",
    "assertFunction",
    "spy",
    "stub",
    "mock",
    "useFakeTimers",
    "useFakeXMLHttpRequest",
    "testFail",
    "assertException",
    "fail",
    "testSpy",
    "assertTrue",
    "called",
    "testSpyConveniently",
    "testStub",
    "whoami",
    "returns",
    "assertEquals",
    "testStubConveniently",
    "testStubProperty",
    "PROP",
    "value",
    "undefined",
    "testStubPropertyInIsolation",
    "getSandbox",
    "restore",
    "testStubEnvironmentSetting",
    "setting",
    "Environment",
    "withArgs",
    "get",
    "testStubEnvironmentSettingInIsolation",
    "name",
    "version",
    "testMock",
    "obj",
    "method",
    "expects",
    "once",
    "verify",
    "testMockVerifyThrows",
    "testMockUnexpectedUseThrows",
    "never",
    "Error",
    "testAssert",
    "assertCalled",
    "testFakeXHR",
    "require",
    "nxhr",
    "window",
    "XMLHttpRequest",
    "req",
    "getRequests",
    "open",
    "send",
    "testFakeServer",
    "useFakeServer",
    "server",
    "getServer",
    "respond",
    "respondWith",
    "testRespond",
    "status",
    "responseText",
    "testRespondWithInvalidXML",
    "fakeReq",
    "testSandboxAndRestore",
    "func",
    "a",
    "xhr",
    "ActiveXObject",
    "assertUndefined",
    "testDeepStub",
    "deepStub",
    "dispose",
    "testShallowStub",
    "Gibbon",
    "shallowStub",
    "testInjectStubOfOriginal",
    "injectStub",
    "affe",
    "assertFalse",
    "testInjectStubOfOriginalAndReturn",
    "testInjectCustomStub",
    "dance",
    "testInjectCustomStubAndReturn",
    "testRevealMockOfOriginalAndReturn",
    "revealMock",
    "testRevealMockOfCustomAndReturn",
    "hasXhr",
    "tearDown",
    "undefine"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/dev/unit/Sinon.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.PROP, qx.test.Affe, qx.test.Gibbon)\n */\n/**\n * Rudimentary tests to check that Sinon.JS is integrated correctly.\n *\n * Also serves as a collection of examples.\n */\nqx.Class.define(\"qx.test.dev.unit.Sinon\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.dev.unit.MMock, qx.dev.unit.MRequirements],\n\n  members: {\n    sinon: null,\n\n    /**\n     * @ignore(qx.test.Animal)\n     * @ignore(qx.test.Affe)\n     * @ignore(qx.test.Gibbon)\n     */\n    setUp() {\n      this.sinon = qx.dev.unit.Sinon.getSinon();\n\n      qx.Class.define(\"qx.test.Animal\", {\n        extend: qx.core.Object,\n        members: {\n          getKind() {\n            return \"Animal\";\n          }\n        }\n      });\n\n      qx.Class.define(\"qx.test.Affe\", {\n        extend: qx.test.Animal,\n        members: {\n          scratch() {\n            return true;\n          }\n        }\n      });\n\n      qx.Class.define(\"qx.test.Gibbon\", {\n        extend: qx.test.Affe,\n        members: {\n          climb() {\n            return true;\n          }\n        }\n      });\n    },\n\n    \"test: get sinon\"() {\n      var sinon = this.sinon;\n\n      this.assertObject(sinon, \"Sinon not found\");\n      this.assertFunction(sinon.spy, \"No spy\");\n      this.assertFunction(sinon.stub, \"No stub\");\n      this.assertFunction(sinon.mock, \"No mock\");\n      this.assertFunction(sinon.useFakeTimers, \"No fake timers\");\n      this.assertFunction(sinon.useFakeXMLHttpRequest, \"No fake XHR\");\n    },\n\n    \"test: fail\"() {\n      var sinon = this.sinon;\n      this.assertException(function () {\n        sinon.fail();\n      });\n    },\n\n    \"test: spy\"() {\n      var spy = this.sinon.spy();\n      spy();\n      this.assertTrue(spy.called);\n    },\n\n    \"test: spy conveniently\"() {\n      var spy = this.spy();\n      spy();\n      this.assertTrue(spy.called);\n    },\n\n    \"test: stub\"() {\n      var whoami = this.sinon.stub();\n      whoami.returns(\"Affe\");\n\n      this.assertEquals(\"Affe\", whoami());\n    },\n\n    \"test: stub conveniently\"() {\n      var whoami = this.stub();\n      whoami.returns(\"Affe\");\n\n      this.assertEquals(\"Affe\", whoami());\n    },\n\n    \"test: stub property\"() {\n      qx.test.PROP = false;\n\n      this.stub(qx.test, \"PROP\").value(true);\n      this.assertEquals(true, qx.test.PROP);\n\n      qx.test.PROP = undefined;\n    },\n\n    \"test: stub property in isolation\"() {\n      qx.test.PROP = false;\n      this.stub(qx.test, \"PROP\").value(true);\n      this.assertEquals(true, qx.test.PROP);\n      this.getSandbox().restore();\n      this.assertEquals(false, qx.test.PROP);\n\n      qx.test.PROP = undefined;\n    },\n\n    \"test: stub environment setting\"() {\n      var setting = this.stub(qx.core.Environment, \"get\").withArgs(\n        \"browser.name\"\n      );\n\n      setting.returns(\"My Browser\");\n      this.assertEquals(\"My Browser\", qx.core.Environment.get(\"browser.name\"));\n    },\n\n    \"test: stub environment setting in isolation\"() {\n      var name = qx.core.Environment.get(\"browser.name\"),\n        version = qx.core.Environment.get(\"browser.version\"),\n        setting = this.stub(qx.core.Environment, \"get\").withArgs(\n          \"browser.name\"\n        );\n\n      setting.returns(\"My Browser\");\n      this.getSandbox().restore();\n      this.assertEquals(name, qx.core.Environment.get(\"browser.name\"));\n      this.assertEquals(version, qx.core.Environment.get(\"browser.version\"));\n    },\n\n    \"test: mock\"() {\n      var obj = { method() {} };\n      var mock = this.sinon.mock(obj);\n      mock.expects(\"method\").once();\n\n      obj.method();\n      mock.verify();\n    },\n\n    \"test: mock verify throws\"() {\n      var obj = { method() {} };\n      var mock = this.sinon.mock(obj);\n      mock.expects(\"method\").once();\n\n      this.assertException(function () {\n        mock.verify();\n      });\n    },\n\n    \"test: mock unexpected use throws\"() {\n      var obj = { method() {} };\n      var mock = this.sinon.mock(obj);\n      mock.expects(\"method\").never();\n\n      this.assertException(\n        function () {\n          obj.method();\n        },\n        Error,\n        /Unexpected call/\n      );\n    },\n\n    \"test: assert\"() {\n      var spy = this.sinon.spy();\n      spy();\n      this.assertCalled(spy);\n    },\n\n    \"test: fake XHR\"() {\n      this.require([\"xhr\"]);\n\n      this.useFakeXMLHttpRequest();\n      var nxhr = window.XMLHttpRequest;\n      new nxhr();\n      var req = this.getRequests()[0];\n\n      this.assertFunction(nxhr.restore, \"restore\");\n      this.assertFunction(req.open, \"open\");\n      this.assertFunction(req.send, \"send\");\n    },\n\n    \"test: fake server\"() {\n      this.useFakeServer();\n      var server = this.getServer();\n      this.assertFunction(server.respond);\n      this.assertFunction(server.respondWith);\n    },\n\n    \"test: respond\"() {\n      this.require([\"xhr\"]);\n\n      this.useFakeServer();\n      var nxhr = window.XMLHttpRequest,\n        req = new nxhr(),\n        server = this.getServer();\n\n      server.respondWith(\"GET\", \"found\", [200, {}, \"FOUND\"]);\n      req.open(\"GET\", \"found\");\n      req.send();\n      server.respond();\n\n      this.assertEquals(200, req.status);\n      this.assertEquals(\"FOUND\", req.responseText);\n    },\n\n    \"test: respond with invalid XML\"() {\n      this.require([\"xhr\"]);\n\n      this.useFakeXMLHttpRequest();\n      var nxhr = window.XMLHttpRequest,\n        req = new nxhr(),\n        fakeReq = this.getRequests()[0];\n\n      req.open();\n      req.send();\n      fakeReq.respond(200, { \"Content-Type\": \"application/xml\" }, \"INVALID\");\n    },\n\n    \"test: sandbox and restore\"() {\n      var func = function () {};\n      var obj = { a() {} };\n\n      var spy = this.spy(func);\n      var stub = this.stub(obj, \"a\");\n      var xhr = this.useFakeXMLHttpRequest();\n      var nxhr =\n        window.XMLHttpRequest || window.ActiveXObject(\"Microsoft.XMLHTTP\");\n\n      this.getSandbox().restore();\n      this.assertUndefined(func.called);\n      this.assertUndefined(obj.a.called);\n      this.assertUndefined(nxhr.restore);\n    },\n\n    \"test: deep stub\"() {\n      var obj = new qx.test.Affe();\n      obj = this.deepStub(obj);\n      obj.getKind();\n      this.assertCalled(obj.getKind);\n      obj.dispose();\n    },\n\n    \"test: shallow stub\"() {\n      var obj = new qx.test.Gibbon();\n      obj = this.shallowStub(obj, qx.test.Affe);\n\n      obj.climb();\n      obj.scratch();\n      this.assertCalled(obj.climb);\n      this.assertCalled(obj.scratch);\n\n      // Not stubbed\n      this.assertEquals(\"Animal\", obj.getKind(), \"Must return original\");\n      this.assertUndefined(obj.getKind.called, \"Must not be stubbed\");\n      obj.dispose();\n    },\n\n    \"test: inject stub of original\"() {\n      this.injectStub(qx.test, \"Affe\");\n      var affe = new qx.test.Affe();\n\n      affe.scratch.returns(false);\n      this.assertFalse(affe.scratch());\n      affe.dispose();\n    },\n\n    \"test: inject stub of original and return\"() {\n      var stub = this.injectStub(qx.test, \"Affe\"),\n        affe = new qx.test.Affe();\n\n      stub.scratch.returns(false);\n      this.assertFalse(affe.scratch());\n      affe.dispose();\n    },\n\n    \"test: inject custom stub\"() {\n      this.injectStub(qx.test, \"Affe\", this.stub({ dance() {} }));\n      var affe = new qx.test.Affe();\n\n      affe.dance();\n      this.assertCalled(affe.dance);\n    },\n\n    \"test: inject custom stub and return\"() {\n      var stub = this.injectStub(qx.test, \"Affe\", this.stub({ dance() {} })),\n        affe = new qx.test.Affe();\n\n      affe.dance();\n      this.assertCalled(stub.dance);\n    },\n\n    \"test: reveal mock of original and return\"() {\n      var mock = this.revealMock(qx.test, \"Affe\"),\n        affe = new qx.test.Affe();\n\n      mock.expects(\"scratch\").once();\n      affe.scratch();\n      mock.verify();\n      affe.dispose();\n    },\n\n    \"test: reveal mock of custom and return\"() {\n      var mock = this.revealMock(qx.test, \"Affe\", { dance() {} }),\n        affe = new qx.test.Affe();\n\n      mock.expects(\"dance\").once();\n      affe.dance();\n      mock.verify();\n    },\n\n    hasXhr() {\n      return qx.core.Environment.get(\"io.xhr\") === \"xhr\";\n    },\n\n    tearDown() {\n      this.getSandbox().restore();\n      this.sinon = null;\n\n      qx.Class.undefine(\"qx.test.Affe\");\n      qx.Class.undefine(\"qx.test.Animal\");\n      qx.Class.undefine(\"qx.test.Gibbon\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}