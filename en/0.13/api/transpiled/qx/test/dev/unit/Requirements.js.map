{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "hasFulfilledReq",
    "hasUnfulfilledReq",
    "testRequirementPass",
    "require",
    "ex",
    "fail",
    "testRequirementFail",
    "self",
    "assertException",
    "RequirementError",
    "testMissingCheck",
    "Error",
    "testEnvironmentPass",
    "core",
    "Environment",
    "add",
    "getChecks",
    "testEnvironmentFail",
    "testEnvironmentAsync",
    "getAsyncChecks",
    "test",
    "Requirements"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/dev/unit/Requirements.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.dev.unit.Requirements\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.dev.unit.MRequirements],\n\n  members: {\n    hasFulfilledReq() {\n      return true;\n    },\n\n    hasUnfulfilledReq() {\n      return false;\n    },\n\n    testRequirementPass() {\n      try {\n        this.require([\"fulfilledReq\"]);\n      } catch (ex) {\n        this.fail(\"Check for fulfilled requirement failed!\");\n      }\n    },\n\n    testRequirementFail() {\n      var self = this;\n      this.assertException(function () {\n        self.require([\"fulfilledReq\", \"unfulfilledReq\"]);\n      }, qx.dev.unit.RequirementError);\n    },\n\n    testMissingCheck() {\n      var self = this;\n      this.assertException(\n        function () {\n          self.require([\"monkeyCheese\"]);\n        },\n        Error,\n        /Unable to verify requirement/\n      );\n    },\n\n    testEnvironmentPass() {\n      qx.core.Environment.add(\"qx.test.dev.unit.Requirements.syncTrue\", function () {\n        return true;\n      });\n\n      try {\n        this.require([\"fulfilledReq\", \"qx.test.dev.unit.Requirements.syncTrue\"]);\n      } catch (ex) {\n        this.fail(\"Check for environment key failed!\");\n      }\n\n      delete qx.core.Environment.getChecks()[\"qx.test.dev.unit.Requirements.syncTrue\"];\n    },\n\n    testEnvironmentFail() {\n      qx.core.Environment.add(\"qx.test.dev.unit.Requirements.syncFalse\", function () {\n        return false;\n      });\n\n      var self = this;\n      this.assertException(function () {\n        self.require([\"fulfilledReq\", \"qx.test.dev.unit.Requirements.syncFalse\"]);\n      }, qx.dev.unit.RequirementError);\n\n      delete qx.core.Environment.getChecks()[\"qx.test.dev.unit.Requirements.syncFalse\"];\n    },\n\n    testEnvironmentAsync() {\n      qx.core.Environment.getAsyncChecks()[\"qx.test.requirement.async\"] =\n        function () {\n          return false;\n        };\n      var self = this;\n      this.assertException(\n        function () {\n          self.require([\"qx.test.requirement.async\"]);\n        },\n        Error,\n        /Asynchronous environment checks are not supported/\n      );\n\n      delete qx.core.Environment.getAsyncChecks()[\"qx.test.requirement.async\"];\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}