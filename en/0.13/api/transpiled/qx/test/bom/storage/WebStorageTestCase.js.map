{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "_storage",
    "setUp",
    "_getStorage",
    "clear",
    "tearDown",
    "testItem",
    "assertNull",
    "getItem",
    "setItem",
    "assertEquals",
    "removeItem",
    "assertArrayEquals",
    "a",
    "b",
    "assertMap",
    "testGetKey",
    "assertNotEquals",
    "Object",
    "keys",
    "getStorage",
    "indexOf",
    "testLength",
    "getLength",
    "i",
    "testClear",
    "testForEach",
    "forEach",
    "key",
    "item",
    "test",
    "bom",
    "storage",
    "WebStorageTestCase"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/bom/storage/WebStorageTestCase.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.storage.WebStorageTestCase\", {\n  type: \"abstract\",\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    _storage: null,\n\n    setUp() {\n      this._storage = this._getStorage();\n      this._storage.clear();\n    },\n\n    tearDown() {\n      this._storage = null;\n    },\n\n    testItem() {\n      this.assertNull(this._storage.getItem(\"key1\"));\n\n      this._storage.setItem(\"key1\", \"value1\");\n      this.assertEquals(\"value1\", this._storage.getItem(\"key1\"));\n\n      this._storage.removeItem(\"key1\");\n      this.assertNull(this._storage.getItem(\"key1\"));\n\n      this._storage.setItem(\"key2\", [1, \"a\"]);\n      this.assertArrayEquals([1, \"a\"], this._storage.getItem(\"key2\"));\n\n      this._storage.setItem(\"key2\", { a: 1, b: \"c\" });\n      this.assertMap({ a: 1, b: \"c\" }, this._storage.getItem(\"key2\"));\n\n      //overriding\n      this._storage.setItem(\"key2\", 12);\n      this.assertEquals(12, this._storage.getItem(\"key2\"));\n    },\n\n    testGetKey() {\n      // the order is unreliable, so just test that the getKey works\n      this._storage.setItem(\"key1\", \"value\");\n      this.assertNotEquals(\n        -1,\n        Object.keys(this._storage.getStorage()).indexOf(\"key1\")\n      );\n    },\n\n    testLength() {\n      this.assertEquals(0, this._storage.getLength());\n\n      for (var i = 0; i < 10; i++) {\n        this._storage.setItem(\"key\" + i, \"value\");\n      }\n\n      this.assertEquals(10, this._storage.getLength());\n    },\n\n    testClear() {\n      for (var i = 0; i < 10; i++) {\n        this._storage.setItem(\"key\" + i, \"value\");\n      }\n      this.assertEquals(10, this._storage.getLength());\n      this._storage.clear();\n      this.assertEquals(0, this._storage.getLength());\n    },\n\n    testForEach() {\n      var i;\n      for (i = 0; i < 10; i++) {\n        this._storage.setItem(\"key\" + i, \"value\");\n      }\n      //don't rely on the order\n      i = 0;\n      this._storage.forEach(function (key, item) {\n        this.assertEquals(this._storage.getItem(key), item);\n        i++;\n      }, this);\n      this.assertEquals(10, i);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wCAAwC,EAAE;IACxDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAEP,EAAE,CAACQ,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE;MACPC,QAAQ,EAAE,IAAI;MAEdC,KAAK,WAALA,KAAKA,CAAA,EAAG;QACN,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACE,WAAW,CAAC,CAAC;QAClC,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,CAAC;MACvB,CAAC;MAEDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACT,IAAI,CAACJ,QAAQ,GAAG,IAAI;MACtB,CAAC;MAEDK,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACT,IAAI,CAACC,UAAU,CAAC,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC;QACvC,IAAI,CAACC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAACT,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;QAE1D,IAAI,CAACP,QAAQ,CAACU,UAAU,CAAC,MAAM,CAAC;QAChC,IAAI,CAACJ,UAAU,CAAC,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,IAAI,CAACG,iBAAiB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAACX,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;QAE/D,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,MAAM,EAAE;UAAEI,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAI,CAAC,CAAC;QAC/C,IAAI,CAACC,SAAS,CAAC;UAAEF,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAI,CAAC,EAAE,IAAI,CAACb,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;;QAE/D;QACA,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;QACjC,IAAI,CAACC,YAAY,CAAC,EAAE,EAAE,IAAI,CAACT,QAAQ,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;MACtD,CAAC;MAEDQ,UAAU,WAAVA,UAAUA,CAAA,EAAG;QACX;QACA,IAAI,CAACf,QAAQ,CAACQ,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;QACtC,IAAI,CAACQ,eAAe,CAClB,CAAC,CAAC,EACFC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,QAAQ,CAACmB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CACxD,CAAC;MACH,CAAC;MAEDC,UAAU,WAAVA,UAAUA,CAAA,EAAG;QACX,IAAI,CAACZ,YAAY,CAAC,CAAC,EAAE,IAAI,CAACT,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAAC;QAE/C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAI,CAACvB,QAAQ,CAACQ,OAAO,CAAC,KAAK,GAAGe,CAAC,EAAE,OAAO,CAAC;QAC3C;QAEA,IAAI,CAACd,YAAY,CAAC,EAAE,EAAE,IAAI,CAACT,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAAC;MAClD,CAAC;MAEDE,SAAS,WAATA,SAASA,CAAA,EAAG;QACV,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAI,CAACvB,QAAQ,CAACQ,OAAO,CAAC,KAAK,GAAGe,CAAC,EAAE,OAAO,CAAC;QAC3C;QACA,IAAI,CAACd,YAAY,CAAC,EAAE,EAAE,IAAI,CAACT,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAAC;QAChD,IAAI,CAACtB,QAAQ,CAACG,KAAK,CAAC,CAAC;QACrB,IAAI,CAACM,YAAY,CAAC,CAAC,EAAE,IAAI,CAACT,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAAC;MACjD,CAAC;MAEDG,WAAW,WAAXA,WAAWA,CAAA,EAAG;QACZ,IAAIF,CAAC;QACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UACvB,IAAI,CAACvB,QAAQ,CAACQ,OAAO,CAAC,KAAK,GAAGe,CAAC,EAAE,OAAO,CAAC;QAC3C;QACA;QACAA,CAAC,GAAG,CAAC;QACL,IAAI,CAACvB,QAAQ,CAAC0B,OAAO,CAAC,UAAUC,GAAG,EAAEC,IAAI,EAAE;UACzC,IAAI,CAACnB,YAAY,CAAC,IAAI,CAACT,QAAQ,CAACO,OAAO,CAACoB,GAAG,CAAC,EAAEC,IAAI,CAAC;UACnDL,CAAC,EAAE;QACL,CAAC,EAAE,IAAI,CAAC;QACR,IAAI,CAACd,YAAY,CAAC,EAAE,EAAEc,CAAC,CAAC;MAC1B;IACF;EACF,CAAC,CAAC;EAhGFnC,EAAE,CAACyC,IAAI,CAACC,GAAG,CAACC,OAAO,CAACC,kBAAkB,CAACzC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}