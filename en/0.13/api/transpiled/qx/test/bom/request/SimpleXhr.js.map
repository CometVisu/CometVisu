{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "setUp",
    "req",
    "bom",
    "request",
    "SimpleXhr",
    "tearDown",
    "getSandbox",
    "restore",
    "testSetGetRequestHeader",
    "key",
    "value",
    "assertEquals",
    "setRequestHeader",
    "getRequestHeader",
    "testSetGetUrl",
    "url",
    "setUrl",
    "getUrl",
    "testSetGetMethod",
    "method",
    "setMethod",
    "getMethod",
    "testSetGetRequestData",
    "data",
    "abc",
    "uvw",
    "setRequestData",
    "getRequestData",
    "testSetGetResponse",
    "json",
    "xml",
    "obj",
    "a",
    "_transport",
    "responseText",
    "getResponse",
    "responseXML",
    "_setResponse",
    "testSetGetTimeoutInMillis",
    "setTimeout",
    "getTimeout",
    "testUseIsCaching",
    "assertTrue",
    "useCaching",
    "isCaching",
    "assertFalse",
    "testSetCustomParser",
    "acceptedParser",
    "customParser",
    "setParser",
    "testSerializeData",
    "contentType",
    "assertNull",
    "_serializeData",
    "stubTransportMethods",
    "methods",
    "stubbedTransport",
    "_createTransport",
    "l",
    "length",
    "stub",
    "testSendWTimeout",
    "send",
    "assertCalledWith",
    "open",
    "timeout",
    "testSendWODataAndWOHeaders",
    "testSendGETWDataAndWHeaders",
    "testSendGETWEnabledCachingSetsNocacheParam",
    "expectedUrl",
    "RegExp",
    "assertCalledWithMatch",
    "testSendGETWCachingHeaderOverridesCachePrevention",
    "testSendPOSTWDataDefaultContentType",
    "testSendPOSTWDataApplicationJson",
    "lang",
    "Json",
    "stringify",
    "testSendPOSTWFormData",
    "window",
    "FormData",
    "skip",
    "formData",
    "append",
    "testSendPOSTWBlob",
    "Blob",
    "blob",
    "type",
    "testSendPOSTWArrayBuffer",
    "ArrayBuffer",
    "arrayBuffer",
    "testAbortAbortsTransport",
    "abort",
    "assertCalled",
    "testDisposeDisposesTransport",
    "dispose",
    "testAddListenerOnceEventHandler",
    "name",
    "listener",
    "ctx",
    "addListenerOnce",
    "once",
    "test_onReadyStateDoneSuccess",
    "animals",
    "returns",
    "_registerTransportListener",
    "readyState",
    "Xhr",
    "DONE",
    "status",
    "onreadystatechange",
    "assertArrayEquals",
    "emit",
    "test_onReadyStateDoneFailWResponse",
    "test_onReadyStateDoneFailWOResponse",
    "testOnLoadEnd",
    "onloadend",
    "testOnAbort",
    "onabort",
    "testOnTimeout",
    "ontimeout",
    "callCount",
    "testOnError",
    "onerror",
    "testGetResponseHeaders",
    "useFakeServer",
    "getServer",
    "autoRespond",
    "respondWith",
    "on",
    "resume",
    "getResponseHeader",
    "headers",
    "getAllResponseHeaders",
    "assertMatch",
    "bind",
    "wait",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/SimpleXhr.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.request.SimpleXhr\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.dev.unit.MMock],\n\n  members: {\n    setUp() {\n      this.req = new qx.bom.request.SimpleXhr();\n    },\n\n    tearDown() {\n      this.req = null;\n      this.getSandbox().restore();\n    },\n\n    //\n    // setRequestHeader()\n    // getRequestHeader()\n    //\n\n    \"test: set/get request header\"() {\n      var key = \"Accept\",\n        value = \"application/json\";\n\n      this.assertEquals(\n        value,\n        this.req.setRequestHeader(key, value).getRequestHeader(key)\n      );\n    },\n\n    //\n    // setUrl()\n    // getUrl()\n    //\n\n    \"test: set/get url\"() {\n      var url = \"http://example.org\";\n\n      this.assertEquals(url, this.req.setUrl(url).getUrl());\n    },\n\n    //\n    // setMethod()\n    // getMethod()\n    //\n\n    \"test: set/get method\"() {\n      var method = \"GET\";\n\n      this.assertEquals(method, this.req.setMethod(method).getMethod());\n    },\n\n    //\n    // setRequestData()\n    // getRequestData()\n    //\n\n    \"test: set/get request data\"() {\n      var data = { abc: \"def\", uvw: \"xyz\" };\n\n      this.assertEquals(data, this.req.setRequestData(data).getRequestData());\n    },\n\n    //\n    // _setResponse()\n    // getResponse()\n    //\n\n    \"test: set/get response\"() {\n      var req = this.req,\n        json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n        xml = \"<animals><monkey/><mouse/></animals>\",\n        obj = { a: \"b\" };\n\n      req._transport.responseText = json;\n      this.assertEquals(json, req.getResponse());\n\n      req._transport.responseXML = xml;\n      this.assertEquals(xml, req.getResponse());\n\n      req._setResponse(obj);\n      this.assertEquals(obj, req.getResponse());\n    },\n\n    //\n    // setTimeout()\n    // getTimeout()\n    //\n\n    \"test: set/get timeout in millis\"() {\n      this.assertEquals(150, this.req.setTimeout(150).getTimeout());\n    },\n\n    //\n    //  useCaching\n    //  isCaching\n    //\n\n    \"test: use/is caching\"() {\n      this.assertTrue(this.req.useCaching(true).isCaching());\n      this.assertFalse(this.req.useCaching(false).isCaching());\n    },\n\n    //\n    // setParser()\n    //\n\n    \"test: set (custom) parser\"() {\n      var req = this.req,\n        acceptedParser = null,\n        customParser = function () {};\n\n      acceptedParser = req.setParser(customParser);\n      this.assertEquals(customParser, acceptedParser);\n    },\n\n    //\n    // _serializeData()\n    //\n\n    \"test: serialize data\"() {\n      var data = { abc: \"def\", uvw: \"xyz\" },\n        contentType = \"application/json\";\n\n      this.assertNull(this.req._serializeData(null));\n      this.assertEquals(\n        \"leaveMeIntact\",\n        this.req._serializeData(\"leaveMeIntact\")\n      );\n\n      this.assertEquals(\"abc=def&uvw=xyz\", this.req._serializeData(data));\n      this.assertEquals(\n        \"abc=def&uvw=xyz\",\n        this.req._serializeData(data, \"arbitrary/contentType\")\n      );\n\n      this.assertEquals(\n        '{\"abc\":\"def\",\"uvw\":\"xyz\"}',\n        this.req._serializeData(data, contentType)\n      );\n\n      this.assertEquals(\n        \"[1,2,3]\",\n        this.req._serializeData([1, 2, 3], contentType)\n      );\n    },\n\n    //\n    // send()\n    //\n\n    stubTransportMethods(methods) {\n      var stubbedTransport = this.req._createTransport(),\n        l = methods.length;\n\n      while (l--) {\n        this.stub(stubbedTransport, methods[l]);\n      }\n      this.req._transport = stubbedTransport;\n      return stubbedTransport;\n    },\n\n    \"test: send() w/ timeout\"() {\n      var req = this.req,\n        method = \"GET\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setTimeout(150);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send);\n      this.assertEquals(stubbedTransport.timeout, req.getTimeout());\n    },\n\n    \"test: send() w/o data and w/o headers\"() {\n      var req = this.req,\n        method = \"GET\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ data and w/ headers\"() {\n      var req = this.req,\n        method = \"GET\",\n        url = \"http://example.org\",\n        obj = { a: \"b\" },\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setRequestHeader(\"Accept\", \"application/json\");\n      req.setRequestData(obj);\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url + \"?a=b\", true);\n      this.assertCalledWith(\n        stubbedTransport.setRequestHeader,\n        \"Accept\",\n        \"application/json\"\n      );\n\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ enabled caching sets nocache param\"() {\n      var req = this.req,\n        method = \"GET\",\n        url = \"http://example.org\",\n        expectedUrl = new RegExp(url + \"\\\\?nocache=[0-9]{13,}\"),\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.useCaching(false);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWithMatch(\n        stubbedTransport.open,\n        method,\n        expectedUrl,\n        true\n      );\n\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ caching header overrides cache prevention\"() {\n      var req = this.req,\n        method = \"GET\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(\n        stubbedTransport.setRequestHeader,\n        \"Cache-Control\",\n        \"no-cache\"\n      );\n\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() POST w/ data (default content-type)\"() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        obj = { a: \"b\" },\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(obj);\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(\n        stubbedTransport.setRequestHeader,\n        \"Content-Type\",\n        \"application/x-www-form-urlencoded\"\n      );\n\n      this.assertCalledWith(stubbedTransport.send, \"a=b\");\n    },\n\n    \"test: send() POST w/ data (application/json)\"() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        obj = { a: \"b\" },\n        stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(obj);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send, qx.lang.Json.stringify(obj));\n    },\n\n    \"test: send() POST w/ FormData\"() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.FormData) {\n        this.skip(\"FormData API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var formData = new FormData();\n      formData.append(\"foo\", \"bar\");\n      formData.append(\"baz\", \"qux\");\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(formData);\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, formData);\n    },\n\n    \"test: send() POST w/ Blob\"() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.Blob) {\n        this.skip(\"Blob API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var blob = new window.Blob([\"abc123\"], { type: \"text/plain\" });\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(blob);\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, blob);\n    },\n\n    \"test: send() POST w/ ArrayBuffer\"() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.ArrayBuffer) {\n        this.skip(\"ArrayBuffer API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var arrayBuffer = new window.ArrayBuffer(512);\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(arrayBuffer);\n      stubbedTransport = this.stubTransportMethods([\n        \"open\",\n        \"setRequestHeader\",\n        \"send\"\n      ]);\n\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, arrayBuffer);\n    },\n\n    //\n    // abort()\n    //\n\n    \"test: abort() aborts transport\"() {\n      var stubbedTransport = this.stubTransportMethods([\"abort\"]);\n      this.req.abort();\n\n      this.assertCalled(stubbedTransport.abort);\n    },\n\n    //\n    // dispose()\n    //\n\n    \"test: dispose() disposes transport\"() {\n      this.assertTrue(this.req.dispose());\n    },\n\n    //\n    // addListenerOnce()\n    //\n\n    \"test: addListenerOnce() event handler\"() {\n      var req = this.req,\n        stubbedTransport = this.req._createTransport(),\n        name = \"test-success\",\n        listener = function () {},\n        ctx = this;\n\n      this.stub(req, \"once\");\n      req._transport = stubbedTransport;\n\n      req.addListenerOnce(name, listener, ctx);\n      this.assertCalledWith(req.once, name, listener, ctx);\n    },\n\n    //\n    // _onReadyStateChange()\n    // __onReadyStateDone()\n    //\n\n    \"test: _onReadyStateDone() success\"() {\n      var req = this.req,\n        json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n        obj = { animals: [\"monkey\", \"mouse\"] },\n        contentType = \"application/json\",\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.responseText = json;\n      req._transport.status = 200;\n\n      req._transport.onreadystatechange();\n\n      this.assertArrayEquals(obj.animals, req.getResponse().animals);\n      this.assertCalledWith(req.emit, \"success\");\n    },\n\n    \"test: _onReadyStateDone() fail w/ response\"() {\n      var req = this.req,\n        json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n        obj = { animals: [\"monkey\", \"mouse\"] },\n        contentType = \"application/json\",\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.responseText = json;\n      req._transport.status = 404;\n\n      req._transport.onreadystatechange();\n\n      this.assertArrayEquals(obj.animals, req.getResponse().animals);\n      this.assertCalledWith(req.emit, \"fail\");\n    },\n\n    \"test: _onReadyStateDone() fail w/o response\"() {\n      var req = this.req,\n        contentType = \"hasToExist/ButContentDoesntMatter\",\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.status = 404;\n\n      req._transport.onreadystatechange();\n\n      this.assertEquals(\"\", req.getResponse());\n      this.assertCalledWith(req.emit, \"fail\");\n    },\n\n    //\n    // onLoadEnd()\n    //\n\n    \"test: onLoadEnd()\"() {\n      var req = this.req,\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onloadend();\n\n      this.assertCalledWith(req.emit, \"loadEnd\");\n    },\n\n    //\n    // onAbort()\n    //\n\n    \"test: onAbort()\"() {\n      var req = this.req,\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onabort();\n\n      this.assertCalledWith(req.emit, \"abort\");\n    },\n\n    //\n    // onTimeout()\n    //\n\n    \"test: onTimeout()\"() {\n      var req = this.req,\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.ontimeout();\n\n      this.assertCalledWith(req.emit, \"timeout\");\n      this.assertEquals(2, req.emit.callCount); // + emit(\"fail\")\n    },\n\n    //\n    // onError()\n    //\n\n    \"test: onError()\"() {\n      var req = this.req,\n        stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onerror();\n\n      this.assertCalledWith(req.emit, \"error\");\n      this.assertEquals(2, req.emit.callCount); // + emit(\"fail\")\n    },\n\n    testGetResponseHeaders() {\n      this.useFakeServer();\n      this.getServer().autoRespond = true;\n      this.getServer().respondWith(\"GET\", \"/foo\", [\n        200,\n        {\n          \"x-affe\": \"AFFE\"\n        },\n\n        \"Response Body\"\n      ]);\n\n      var req = new qx.bom.request.SimpleXhr(\"/foo\", \"GET\");\n      req.on(\n        \"success\",\n        function () {\n          this.resume(\n            function () {\n              this.assertEquals(\"AFFE\", req.getResponseHeader(\"x-affe\"));\n              var headers = req.getAllResponseHeaders();\n              this.assertMatch(headers, /x-affe.*?AFFE/);\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n\n      window.setTimeout(function () {\n        req.send();\n      }, 100);\n\n      this.wait(500);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}