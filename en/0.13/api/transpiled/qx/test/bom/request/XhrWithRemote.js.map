{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "MMock",
    "MRequirements",
    "construct",
    "constructor",
    "call",
    "members",
    "req",
    "setUp",
    "bom",
    "request",
    "Xhr",
    "tearDown",
    "dispose",
    "test_GET_with_event_attribute_handler",
    "url",
    "getUrl",
    "open",
    "noCache",
    "that",
    "onreadystatechange",
    "readyState",
    "resume",
    "assertEquals",
    "responseText",
    "send",
    "wait",
    "test_GET_with_event",
    "on",
    "test_GET_XML",
    "assertObject",
    "responseXML",
    "documentElement",
    "test_handle_arbitrary_XML",
    "require",
    "test_handle_invalid_XML",
    "test_POST",
    "setRequestHeader",
    "test_have_readyState_UNSENT",
    "assertIdentical",
    "test_have_readyState_OPENED",
    "test_abort_pending_request",
    "abort",
    "assertNotEquals",
    "test_have_status_200_when_modified",
    "status",
    "test_validate_freshness",
    "count",
    "results",
    "onload",
    "push",
    "test_open_throws_error_with_insecure_method",
    "assertException",
    "e",
    "Error",
    "test_overrideMimeType_content_type_unchanged",
    "onloadAssertContentTypeUnchanged",
    "getResponseHeader",
    "query",
    "encodeURIComponent",
    "test_overrideMimeType_content_type_override",
    "onloadAssertContentTypeOverride",
    "overrideMimeType",
    "test_progress_to_readyState_DONE",
    "states",
    "assertArrayEquals",
    "test_progress_to_readyState_DONE_when_sync",
    "test_progress_to_readyState_DONE_when_from_cache",
    "primeReq",
    "test_have_status_304_when_cache_is_fresh",
    "test_allow_many_requests_with_same_object",
    "test_call_onreadystatechange_for_OPEN",
    "test_not_call_onreadystatechange_when_aborting_OPENED",
    "spy",
    "assertNotCalled",
    "test_call_onreadystatechange_when_aborting_LOADING",
    "window",
    "setTimeout",
    "test_call_onloadend_when_aborting_LOADING",
    "onloadend",
    "test_call_onerror_on_network_error",
    "onerror",
    "event",
    "Timer",
    "once",
    "test_call_onerror_on_file_error",
    "test_throw_error_on_network_error_when_sync",
    "test_not_call_ontimeout_when_DONE_and_sync",
    "timeout",
    "ontimeout",
    "test_timeout_triggers_timeout_error",
    "assertCallOrder",
    "test_timeout_not_call_onabort",
    "onabort",
    "test_call_onloadend_on_network_error",
    "test_call_handler_in_order_when_request_successful",
    "test_call_handler_in_order_when_request_failed",
    "test_dispose_hardWorking",
    "Date",
    "valueOf",
    "hasNoIe",
    "core",
    "Environment",
    "get",
    "hasNoIe9",
    "hasFile",
    "location",
    "protocol",
    "XhrWithRemote"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/XhrWithRemote.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/xmlhttp/*)\n */\n\nqx.Class.define(\"qx.test.bom.request.XhrWithRemote\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [\n    qx.test.io.MRemoteTest,\n    qx.dev.unit.MMock,\n    qx.dev.unit.MRequirements\n  ],\n\n  construct() {\n    super();\n  },\n\n  members: {\n    req: null,\n\n    setUp() {\n      this.req = new qx.bom.request.Xhr();\n    },\n\n    tearDown() {\n      this.req.dispose();\n    },\n\n    //\n    // Basic\n    //\n\n    \"test: GET with event attribute handler\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertEquals(req.responseText, \"SAMPLE\");\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: GET with event\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      var onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertEquals(req.responseText, \"SAMPLE\");\n          });\n        }\n      };\n      req.on(\"readystatechange\", onreadystatechange);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: GET XML\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.xml\");\n\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertObject(\n              req.responseXML.documentElement,\n              \"Must be XML object\"\n            );\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: handle arbitrary XML\"() {\n      this.require([\"php\"]);\n\n      // Content-Type: foo/bar+xml\n      var url = this.getUrl(\"qx/test/xmlhttp/xml.php\");\n\n      var req = this.req;\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertObject(\n              req.responseXML.documentElement,\n              \"Must be XML object\"\n            );\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: handle invalid XML\"() {\n      var url = this.getUrl(\"qx/test/xmlhttp/invalid.xml\"),\n        req = this.req,\n        that = this;\n\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            req.responseXML;\n          });\n        }\n      };\n\n      req.open(\"GET\", url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: POST\"() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_post_request.php\");\n      req.open(\"POST\", this.noCache(url));\n      req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertEquals('{\"affe\":\"true\"}', req.responseText);\n          });\n        }\n      };\n      req.send(\"affe=true\");\n\n      this.wait();\n    },\n\n    \"test: have readyState UNSENT\"() {\n      var req = this.req;\n      this.assertIdentical(0, req.readyState);\n    },\n\n    \"test: have readyState OPENED\"() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_post_request.php\");\n      req.open(\"GET\", this.noCache(url));\n\n      this.assertIdentical(1, req.readyState);\n    },\n\n    \"test: abort pending request\"() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n\n      req.open(\"GET\", this.noCache(url));\n      req.abort();\n\n      this.assertNotEquals(4, req.readyState, \"Request must not complete\");\n    },\n\n    \"test: have status 200 when modified\"() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n\n      // Make sure resource is not served from cache\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertEquals(200, req.status);\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: validate freshness\"() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/time.php\");\n\n      var send = function () {\n        req.open(\"GET\", url);\n        req.send();\n      };\n\n      var that = this;\n      var count = 0;\n      var results = [];\n      req.onload = function () {\n        count += 1;\n        results.push(req.responseText);\n        if (count < 2) {\n          send();\n        } else {\n          that.resume(function () {\n            that.assertNotEquals(\n              results[0],\n              results[1],\n              \"Response must differ\"\n            );\n          });\n        }\n      };\n\n      send();\n      this.wait();\n    },\n\n    // \"test: GET simultaneously\": function() {\n    //   var count = 1,\n    //       upTo = 20,\n    //       startedAt = new Date(),\n    //       duration = 0,\n    //       that = this;\n    //\n    //   for (var i=0; i<upTo; i++) {\n    //     (function() {\n    //       var req = new qx.bom.request.Xhr(),\n    //           url = that.noCache(that.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=2\";\n    //\n    //       req.onreadystatechange = function() {\n    //         if (req.readyState != 4) {\n    //           return;\n    //         }\n    //\n    //         that.resume(function() {\n    //\n    //           // In seconds\n    //           duration = (new Date() - startedAt) / 1000;\n    //           that.debug(\"Request #\" + count + \" completed (\" +  duration + \")\");\n    //\n    //           if (count == upTo) {\n    //             return;\n    //           }\n    //\n    //           ++count;\n    //           that.wait();\n    //         });\n    //       }\n    //\n    //       req.open(\"GET\", url);\n    //       req.send();\n    //     })();\n    //   }\n    //\n    //   // Provided two concurrent requests are made (each 6s), 20 requests\n    //   // (i.e. 10 packs of requests) should complete after 60s\n    //   this.wait(15000 + 1000);\n    // },\n\n    \"test: open throws error with insecure method\"() {\n      var req = this.req,\n        url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      this.assertException(function () {\n        // Type of error is of no interest\n        try {\n          req.open(\"TRACE\", url);\n        } catch (e) {\n          throw Error();\n        }\n      });\n    },\n\n    \"test: overrideMimeType content type unchanged\"() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req,\n        that = this;\n\n      var onloadAssertContentTypeUnchanged = function () {\n        that.resume(function () {\n          that.assertEquals(\n            \"text/html;charset=iso-8859-1\",\n            req.getResponseHeader(\"Content-Type\")\n          );\n\n          that.assertEquals(\"ƒeƒXƒg\", req.responseText);\n        });\n      };\n\n      var query =\n        \"?type=\" +\n        encodeURIComponent(\"text/html;charset=iso-8859-1\") +\n        \"&content=%83%65%83%58%83%67\";\n      var url = this.getUrl(\"qx/test/xmlhttp/get_content.php\") + query;\n\n      req.onload = onloadAssertContentTypeUnchanged;\n      req.open(\"GET\", url);\n      req.send();\n      this.wait();\n    },\n\n    \"test: overrideMimeType content type override\"() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req,\n        that = this;\n\n      var onloadAssertContentTypeOverride = function () {\n        that.resume(function () {\n          // may or may not work - see API docs of overrideMimeType\n          // that.assertEquals(\"text/plain;charset=Shift-JIS\", req.getResponseHeader(\"Content-Type\"));\n          that.assertEquals(\"テスト\", req.responseText);\n        });\n      };\n\n      var query =\n        \"?type=\" +\n        encodeURIComponent(\"text/html;charset=iso-8859-1\") +\n        \"&content=%83%65%83%58%83%67\";\n      var url = this.getUrl(\"qx/test/xmlhttp/get_content.php\") + query;\n\n      req.onload = onloadAssertContentTypeOverride;\n      req.open(\"GET\", url);\n      req.overrideMimeType(\"text/plain;charset=Shift-JIS\");\n      req.send();\n      this.wait();\n    },\n\n    // BUGFIXES\n\n    \"test: progress to readyState DONE\"() {\n      // This is a mess, see\n      // http://www.quirksmode.org/blog/archives/2005/09/xmlhttp_notes_r_2.html.\n\n      var req = this.req,\n        states = [],\n        that = this;\n\n      req.onreadystatechange = function () {\n        states.push(req.readyState);\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertArrayEquals([1, 2, 3, 4], states);\n          });\n        }\n      };\n\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: progress to readyState DONE when sync\"() {\n      var req = this.req,\n        states = [];\n\n      req.onreadystatechange = function () {\n        states.push(req.readyState);\n      };\n\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url), false);\n      req.send();\n\n      // There is no HEADERS_RECEIVED and LOADING when sync.\n      // See http://www.w3.org/TR/XMLHttpRequest/#the-send-method\n      this.assertArrayEquals([1, 4], states);\n    },\n\n    \"test: progress to readyState DONE when from cache\"() {\n      var primeReq = this.req,\n        url = this.noCache(this.getUrl(\"qx/test/xmlhttp/sample.txt\")),\n        states = [],\n        count = 0,\n        that = this;\n\n      primeReq.onreadystatechange = function () {\n        if (primeReq.readyState == 4) {\n          that.resume(function () {\n            // From cache with new request\n            var req = new qx.bom.request.Xhr();\n\n            req.onreadystatechange = function () {\n              states.push(req.readyState);\n              if (req.readyState == 4) {\n                that.resume(function () {\n                  that.assertArrayEquals([1, 2, 3, 4], states);\n                });\n              }\n            };\n\n            req.open(\"GET\", url);\n            req.send();\n\n            that.wait();\n          });\n        }\n      };\n\n      // Prime cache\n      primeReq.open(\"GET\", url);\n      primeReq.send();\n\n      this.wait();\n    },\n\n    \"test: have status 304 when cache is fresh\"() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/not_modified.php\");\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            that.assertIdentical(304, req.status);\n          });\n        }\n      };\n      req.open(\"GET\", url);\n\n      // Pretend that client has a fresh representation of\n      // this resource in its cache. Please note the ETag given\n      // must be in sync with the current ETag of the file requested.\n      //\n      // XMLHttpRequest states:\n      //\n      // For 304 Not Modified responses that are a result of a user\n      // agent generated conditional request the user agent must act\n      // as if the server gave a 200 OK response with the appropriate\n      // content. The user agent must allow setRequestHeader() to\n      // override automatic cache validation by setting request\n      // headers (e.g. If-None-Match or If-Modified-Since),\n      // in which case 304 Not Modified responses must be passed through.\n      //\n      // Copied from:\n      //\n      // XMLHttpRequest [http://www.w3.org/TR/XMLHttpRequest/]\n      // W3C Candidate Recommendation\n      // Copyright © 2009 W3C® (MIT, ERCIM, Keio), All Rights Reserved.\n      //\n\n      // The actual ETag is not of importance here, since the server\n      // is returning 304 anyway. We're just triggering the behavior\n      // specified above.\n      req.setRequestHeader(\"If-None-Match\", '\"4893a3a-b0-49ea970349b00\"');\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: allow many requests with same object\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      var count = 0;\n\n      var that = this;\n      function request() {\n        req.open(\"GET\", that.noCache(url));\n        req.send();\n      }\n\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            if (++count < 3) {\n              request();\n              this.wait();\n            } else {\n              that.assertEquals(3, count);\n            }\n          });\n        }\n      };\n      request();\n\n      this.wait();\n    },\n\n    //\n    // onreadystatechange()\n    //\n\n    \"test: call onreadystatechange for OPEN\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      var that = this;\n      var count = 0;\n      req.onreadystatechange = function () {\n        // Count call for state OPENED\n        if (req.readyState == 1) {\n          count = count + 1;\n        }\n\n        // Assert when DONE\n        if (req.readyState == 4) {\n          that.resume(function () {\n            // onreadystatechange should only be called\n            // once for state OPENED\n            that.assertEquals(1, count);\n          });\n        }\n      };\n\n      req.open(\"GET\", this.noCache(url));\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: not call onreadystatechange when aborting OPENED\"() {\n      var req = this.req;\n\n      // OPENED, without send flag\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      this.spy(req, \"onreadystatechange\");\n      req.abort();\n\n      this.wait(\n        100,\n        function () {\n          this.assertNotCalled(req.onreadystatechange);\n        },\n        this\n      );\n    },\n\n    \"test: call onreadystatechange when aborting LOADING\"() {\n      this.require([\"php\", \"noIe9\"]);\n\n      var req = this.req;\n      var that = this;\n\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume();\n        }\n      };\n\n      // Will \"never\" complete\n      // OPENED, finally LOADING\n      var url = this.getUrl(\"qx/test/xmlhttp/loading.php\");\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      window.setTimeout(function () {\n        req.abort();\n      }, 0);\n\n      this.wait();\n    },\n\n    \"test: call onloadend when aborting LOADING\"() {\n      this.require([\"php\", \"noIe9\"]);\n\n      var req = this.req;\n      var that = this;\n\n      req.onloadend = function () {\n        that.resume();\n      };\n\n      // Will \"never\" complete\n      // OPENED, finally LOADING\n      var url = this.getUrl(\"qx/test/xmlhttp/loading.php\");\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      window.setTimeout(function () {\n        req.abort();\n      }, 0);\n\n      this.wait(15000);\n    },\n\n    //\n    // onerror()\n    //\n\n    \"test: call onerror on network error\"() {\n      var req = this.req;\n\n      var that = this;\n      req.onerror = function () {\n        that.resume(function () {\n          that.assertEquals(4, req.readyState);\n        });\n      };\n\n      // Network error (async)\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(\n        function () {\n          req.open(\"GET\", \"http://fail.tld\");\n          req.send();\n        },\n        this,\n        0\n      );\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    \"test: call onerror on file error\"() {\n      this.require([\"file\"]);\n\n      var req = this.req;\n\n      var that = this;\n      req.onerror = function () {\n        that.resume(function () {\n          that.assertEquals(4, req.readyState);\n        });\n      };\n\n      req.open(\"GET\", \"not-found\");\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: throw error on network error when sync\"() {\n      var req = this.req;\n\n      // Network error (sync)\n      req.open(\"GET\", \"http://fail.tld\", false);\n\n      this.assertException(function () {\n        try {\n          req.send();\n        } catch (e) {\n          throw Error();\n        }\n      });\n    },\n\n    //\n    // ontimeout()\n    //\n\n    \"test: not call ontimeout when DONE and sync\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      this.spy(req, \"ontimeout\");\n\n      // Assume that request completes in given interval\n      req.timeout = 400;\n\n      req.open(\"GET\", url, false);\n      req.send();\n\n      this.wait(\n        function () {\n          this.assertNotCalled(req.ontimeout);\n        },\n        500,\n        this\n      );\n    },\n\n    \"test: timeout triggers timeout error\"() {\n      // \"timeout error\" is specified here\n      // http://www.w3.org/TR/XMLHttpRequest2/#timeout-error\n\n      this.require([\"php\"]);\n\n      var req = this.req,\n        url = this.getUrl(\"qx/test/xmlhttp/loading.php\"),\n        that = this;\n\n      req.onloadend = function () {\n        that.resume(function () {\n          that.assertEquals(4, req.readyState);\n          that.assertIdentical(\"\", req.responseText);\n          that.assertIdentical(null, req.responseXML);\n          that.assertCallOrder(\n            req.onreadystatechange,\n            req.ontimeout,\n            req.onloadend\n          );\n        });\n      };\n\n      req.timeout = 100;\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onerror\");\n      this.spy(req, \"ontimeout\");\n      this.spy(req, \"onloadend\");\n\n      this.wait();\n    },\n\n    \"test: timeout not call onabort\"() {\n      this.require([\"php\"]);\n\n      var req = this.req,\n        url = this.getUrl(\"qx/test/xmlhttp/loading.php\"),\n        that = this;\n\n      req.ontimeout = function () {\n        that.resume(function () {\n          that.assertNotCalled(req.onabort);\n        });\n      };\n\n      req.timeout = 100;\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      this.spy(req, \"onabort\");\n\n      this.wait();\n    },\n\n    //\n    // onloadend()\n    //\n\n    \"test: call onloadend on network error\"() {\n      var req = this.req;\n\n      var that = this;\n      req.onloadend = function () {\n        that.resume();\n      };\n\n      // Network error\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(\n        function () {\n          req.open(\"GET\", \"http://fail.tld\");\n          req.send();\n        },\n        this,\n        0\n      );\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    //\n    // Call order\n    //\n\n    \"test: call handler in order when request successful\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      var that = this;\n      req.onloadend = function () {\n        that.resume(function () {\n          that.assertCallOrder(\n            req.onreadystatechange,\n            req.onload,\n            req.onloadend\n          );\n        });\n      };\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onload\");\n      this.spy(req, \"onloadend\");\n      req.open(\"GET\", url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: call handler in order when request failed\"() {\n      var req = this.req;\n\n      var that = this;\n      req.onloadend = function () {\n        that.resume(function () {\n          that.assertCallOrder(\n            req.onreadystatechange,\n            req.onerror,\n            req.onloadend\n          );\n        });\n      };\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onerror\");\n      this.spy(req, \"onloadend\");\n\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(\n        function () {\n          req.open(\"GET\", \"http://fail.tld\");\n          req.send();\n        },\n        this,\n        0\n      );\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    //\n    // Disposing\n    //\n\n    \"test: dispose hard-working\"() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          that.resume(function () {\n            // Must not throw error\n            req.dispose();\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    noCache(url) {\n      return url + \"?nocache=\" + new Date().valueOf();\n    },\n\n    hasNoIe() {\n      return (\n        qx.core.Environment.get(\"engine.name\") !== \"mshtml\" &&\n        qx.core.Environment.get(\"browser.name\") !== \"edge\"\n      );\n    },\n\n    hasNoIe9() {\n      return (\n        qx.core.Environment.get(\"engine.name\") !== \"mshtml\" ||\n        qx.core.Environment.get(\"browser.documentmode\") !== 9\n      );\n    },\n\n    hasFile() {\n      return location.protocol === \"file:\";\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}