{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "bom",
    "media",
    "MediaTestCase",
    "include",
    "dev",
    "unit",
    "MRequirements",
    "members",
    "_getSrc",
    "core",
    "Environment",
    "get",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "_createMedia",
    "Audio",
    "_src",
    "_checkFeature",
    "require",
    "hasAudio"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/bom/media/Audio.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/media/*)\n */\n\nqx.Class.define(\"qx.test.bom.media.Audio\", {\n  extend: qx.test.bom.media.MediaTestCase,\n  include: [qx.dev.unit.MRequirements],\n\n  members: {\n    _getSrc() {\n      if (qx.core.Environment.get(\"html.audio.mp3\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\n          \"qx/test/media/knock.mp3\"\n        );\n      } else if (qx.core.Environment.get(\"html.audio.ogg\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\n          \"qx/test/media/knock.ogg\"\n        );\n      } else if (qx.core.Environment.get(\"html.audio.wav\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\n          \"qx/test/media/knock.wav\"\n        );\n      }\n    },\n\n    _createMedia() {\n      return new qx.bom.media.Audio(this._src);\n    },\n\n    _checkFeature() {\n      this.require([\"audio\"]);\n    },\n\n    hasAudio() {\n      return qx.core.Environment.get(\"html.audio\");\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,GAAG,CAACC,KAAK,CAACC,aAAa;IACvCC,OAAO,EAAE,CAACX,EAAE,CAACY,GAAG,CAACC,IAAI,CAACC,aAAa,CAAC;IAEpCC,OAAO,EAAE;MACPC,OAAO,WAAPA,OAAOA,CAAA,EAAG;QACR,IAAIhB,EAAE,CAACiB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;UAC7C,OAAOnB,EAAE,CAACoB,IAAI,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAChD,yBACF,CAAC;QACH,CAAC,MAAM,IAAIvB,EAAE,CAACiB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;UACpD,OAAOnB,EAAE,CAACoB,IAAI,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAChD,yBACF,CAAC;QACH,CAAC,MAAM,IAAIvB,EAAE,CAACiB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;UACpD,OAAOnB,EAAE,CAACoB,IAAI,CAACC,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAChD,yBACF,CAAC;QACH;MACF,CAAC;MAEDC,YAAY,WAAZA,YAAYA,CAAA,EAAG;QACb,OAAO,IAAIxB,EAAE,CAACQ,GAAG,CAACC,KAAK,CAACgB,KAAK,CAAC,IAAI,CAACC,IAAI,CAAC;MAC1C,CAAC;MAEDC,aAAa,WAAbA,aAAaA,CAAA,EAAG;QACd,IAAI,CAACC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;MACzB,CAAC;MAEDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACT,OAAO7B,EAAE,CAACiB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,YAAY,CAAC;MAC9C;IACF;EACF,CAAC,CAAC;EA5DFnB,EAAE,CAACO,IAAI,CAACC,GAAG,CAACC,KAAK,CAACgB,KAAK,CAACtB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}