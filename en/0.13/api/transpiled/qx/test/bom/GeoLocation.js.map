{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "MRequirements",
    "members",
    "_geo",
    "_position",
    "hasGeolocation",
    "core",
    "Environment",
    "get",
    "setUp",
    "timestamp",
    "Date",
    "getTime",
    "coords",
    "latitude",
    "longitude",
    "altitude",
    "accuracy",
    "altitudeAccuracy",
    "heading",
    "speed",
    "require",
    "bom",
    "GeoLocation",
    "getInstance",
    "tearDown",
    "$$instance",
    "undefined",
    "dispose",
    "testGetCurrentPosition",
    "that",
    "getCurrentPositionStub",
    "stub",
    "_geolocation",
    "succ",
    "err",
    "config",
    "assertEventFired",
    "getCurrentPosition",
    "assert",
    "called",
    "e",
    "assertEquals",
    "getTimestamp",
    "getLatitude",
    "getLongitude",
    "getAltitude",
    "getAccuracy",
    "getAltitudeAccuracy",
    "getHeading",
    "getSpeed",
    "restore",
    "code",
    "message",
    "getData",
    "testWatchPosition",
    "watchStub",
    "clearWatchStub",
    "startWatchPosition",
    "_watchId",
    "stopWatchPosition",
    "assertNull",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/bom/GeoLocation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.GeoLocation\", {\n  extend: qx.dev.unit.TestCase,\n  include: [qx.dev.unit.MMock, qx.dev.unit.MRequirements],\n\n  members: {\n    _geo: null,\n    _position: null,\n\n    hasGeolocation() {\n      return qx.core.Environment.get(\"html.geolocation\");\n    },\n\n    setUp() {\n      this._position = {\n        timestamp: new Date().getTime(),\n        coords: {\n          latitude: 1,\n          longitude: 2,\n          altitude: 3,\n          accuracy: 4,\n          altitudeAccuracy: 5,\n          heading: 6,\n          speed: 7\n        }\n      };\n\n      this.require([\"geolocation\"]);\n      this._geo = qx.bom.GeoLocation.getInstance();\n    },\n\n    tearDown() {\n      qx.bom.GeoLocation.$$instance = undefined;\n      this._geo.dispose();\n      this._geo = null;\n      this._position = null;\n    },\n\n    testGetCurrentPosition() {\n      var that = this;\n\n      //test the position event\n      var getCurrentPositionStub = this.stub(\n        this._geo._geolocation,\n        \"getCurrentPosition\",\n        function (succ, err, config) {\n          succ(that._position);\n        }\n      );\n\n      this.assertEventFired(\n        this._geo,\n        \"position\",\n        function () {\n          that._geo.getCurrentPosition(false, 1000, 1000);\n          that.assert(getCurrentPositionStub.called);\n        },\n        function (e) {\n          that.assertEquals(that._position.timestamp, e.getTimestamp());\n          that.assertEquals(that._position.coords.latitude, e.getLatitude());\n          that.assertEquals(that._position.coords.longitude, e.getLongitude());\n          that.assertEquals(that._position.coords.altitude, e.getAltitude());\n          that.assertEquals(that._position.coords.accuracy, e.getAccuracy());\n          that.assertEquals(\n            that._position.coords.altitudeAccuracy,\n            e.getAltitudeAccuracy()\n          );\n\n          that.assertEquals(that._position.coords.heading, e.getHeading());\n          that.assertEquals(that._position.coords.speed, e.getSpeed());\n        }\n      );\n\n      getCurrentPositionStub.restore();\n\n      //test the error event\n      var getCurrentPositionStub = this.stub(\n        this._geo._geolocation,\n        \"getCurrentPosition\",\n        function (succ, err, config) {\n          err({ code: 1, message: \"Error\" });\n        }\n      );\n\n      this.assertEventFired(\n        this._geo,\n        \"error\",\n        function () {\n          that._geo.getCurrentPosition(false, 1000, 1000);\n          that.assert(getCurrentPositionStub.called);\n        },\n        function (e) {\n          that.assertEquals(1, e.getData().code);\n          that.assertEquals(\"Error\", e.getData().message);\n        }\n      );\n\n      getCurrentPositionStub.restore();\n    },\n\n    testWatchPosition() {\n      var that = this;\n      var watchStub = this.stub(\n        this._geo._geolocation,\n        \"watchPosition\",\n        function (succ, err, config) {\n          succ(that._position);\n          return 200;\n        }\n      );\n\n      var clearWatchStub = this.stub(this._geo._geolocation, \"clearWatch\");\n\n      this.assertEventFired(\n        this._geo,\n        \"position\",\n        function () {\n          that._geo.startWatchPosition(false, 1000, 1000);\n          that.assert(watchStub.called);\n          that.assertEquals(200, that._geo._watchId);\n        },\n        function (e) {\n          that.assertEquals(that._position.timestamp, e.getTimestamp());\n          that.assertEquals(that._position.coords.latitude, e.getLatitude());\n          that.assertEquals(that._position.coords.longitude, e.getLongitude());\n          that.assertEquals(that._position.coords.altitude, e.getAltitude());\n          that.assertEquals(that._position.coords.accuracy, e.getAccuracy());\n          that.assertEquals(\n            that._position.coords.altitudeAccuracy,\n            e.getAltitudeAccuracy()\n          );\n\n          that.assertEquals(that._position.coords.heading, e.getHeading());\n          that.assertEquals(that._position.coords.speed, e.getSpeed());\n        }\n      );\n\n      this._geo.stopWatchPosition();\n      this.assert(clearWatchStub.called);\n      that.assertNull(that._geo._watchId);\n\n      watchStub.restore();\n      clearWatchStub.restore();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}