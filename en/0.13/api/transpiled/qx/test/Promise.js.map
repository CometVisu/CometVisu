{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testNewPromise",
    "self",
    "p",
    "Promise",
    "resolve",
    "reject",
    "setTimeout",
    "then",
    "value",
    "assertIdentical",
    "assertEquals",
    "resume",
    "err",
    "assertTrue",
    "wait",
    "testReject",
    "Error",
    "message",
    "testCatchFinally",
    "caughtException",
    "ex",
    "assertNotNull",
    "testAllOf",
    "t",
    "dt",
    "Date",
    "obj",
    "a",
    "b",
    "c",
    "d",
    "e",
    "allOf",
    "obj2",
    "testPropertySetValueAsPromise1",
    "Clazz",
    "core",
    "Object",
    "properties",
    "alpha",
    "init",
    "nullable",
    "prototype",
    "setAlpha",
    "assertFalse",
    "setAlphaAsync",
    "getAlpha",
    "undefine",
    "testPropertySetValueAsPromise2",
    "async",
    "testPropertySetValueAsyncApply1",
    "apply",
    "event",
    "_applyAlpha",
    "oldValue",
    "eventFired",
    "addListener",
    "evt",
    "testPropertySetValueAsyncApply2",
    "testPropertySetValueAsyncApply3",
    "check",
    "testBinding",
    "AsyncClazz",
    "SyncClazz",
    "bravo",
    "asyncToSync",
    "_this",
    "asyncObj",
    "syncObj",
    "p1",
    "addListenerOnce",
    "data",
    "getData",
    "p2",
    "bravoEvents",
    "id",
    "assertNull",
    "removeListenerById",
    "getAlphaAsync",
    "bind",
    "all",
    "_this2",
    "p3",
    "_this3",
    "setBravo",
    "_this4",
    "testAsyncEventHandlers",
    "console",
    "log",
    "_applyBravo",
    "createObj",
    "name",
    "set",
    "str",
    "length",
    "objOne",
    "objTwo",
    "testWaterfallBinding",
    "getValue",
    "objs",
    "trap",
    "i",
    "bindPromise",
    "bindAsync",
    "getTarget",
    "delay",
    "mapSeries",
    "testEach1",
    "arr",
    "Array",
    "push",
    "promise",
    "forEach",
    "item",
    "testEach2",
    "assertInstance",
    "pEach",
    "pThen",
    "testGlobalError",
    "GlobalError",
    "setErrorHandler",
    "testMethod",
    "fn",
    "method",
    "testBinding1",
    "Assert",
    "testBinding2",
    "testMarshal",
    "marshal",
    "Json",
    "toClass",
    "test",
    "TEST_MODEL",
    "children",
    "model",
    "toModel",
    "testBindingToStatic",
    "testBindingResolve",
    "testBindingReject",
    "testWrapping",
    "spread",
    "join",
    "statics"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/Promise.js"
  ],
  "sourcesContent": [
    "qx.Class.define(\"qx.test.Promise\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    /**\n     * Tests a new promise that resolves with no errors\n     */\n    testNewPromise() {\n      var self = this;\n      var p = new qx.Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(\"ok\");\n        });\n      }, this);\n      p.then(\n        function (value) {\n          this.assertIdentical(this, self);\n          this.assertEquals(value, \"ok\");\n          this.resume();\n        },\n        function (err) {\n          this.assertTrue(false);\n          this.resume();\n        }\n      );\n\n      this.wait(1000);\n    },\n\n    /**\n     * Tests a new promise that is rejected\n     */\n    testReject() {\n      var self = this;\n      var p = new qx.Promise(function (resolve, reject) {\n        setTimeout(function () {\n          reject(new Error(\"oops\"));\n        });\n      }, this);\n      p.then(\n        function (value) {\n          this.assertTrue(false);\n          this.resume();\n        },\n        function (err) {\n          this.assertIdentical(this, self);\n          this.assertEquals(err.message, \"oops\");\n          this.resume();\n        }\n      );\n\n      this.wait(1000);\n    },\n\n    testCatchFinally() {\n      var caughtException = null;\n      qx.Promise.resolve()\n        .then(function () {\n          throw new Error(\"oops\");\n        })\n        .catch(function (ex) {\n          caughtException = ex;\n        })\n        .finally(function () {\n          this.assertNotNull(caughtException);\n          this.resume();\n        }, this);\n      this.wait(1000);\n    },\n\n    /**\n     * Tests the qx.Promise.allOf method\n     */\n    testAllOf() {\n      var t = this;\n      var dt = new Date();\n      var obj = {\n        a: new qx.Promise(),\n        b: new qx.Promise(),\n        c: new qx.Promise(),\n        d: \"four\",\n        e: dt\n      };\n\n      qx.Promise.allOf(obj).then(function (obj2) {\n        t.assertTrue(obj === obj2);\n        t.assertEquals(\"one\", obj.a);\n        t.assertEquals(\"two\", obj.b);\n        t.assertEquals(\"three\", obj.c);\n        t.assertEquals(\"four\", obj.d);\n        t.assertTrue(obj.e === dt);\n        t.resume();\n      });\n      obj.a.then(function () {\n        obj.b.resolve(\"two\");\n      });\n      obj.b.then(function () {\n        obj.c.resolve(\"three\");\n      });\n      obj.a.resolve(\"one\");\n      t.wait(1000);\n    },\n\n    /**\n     * Tests that setting a property value with a promise will delay setting the\n     * value until the promise is resolved.  In this case, the property is *not*\n     * marked as async and the setXxx method is used\n     */\n    testPropertySetValueAsPromise1() {\n      var t = this;\n      var Clazz = qx.Class.define(\"testPropertySetValueAsPromise1.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true\n          }\n        }\n      });\n\n      this.assertTrue(!!Clazz.prototype.setAlpha);\n      this.assertFalse(!!Clazz.prototype.setAlphaAsync);\n      var obj = new Clazz();\n      var p = new qx.Promise(function (resolve) {\n        resolve(123);\n      });\n      obj.setAlpha(p);\n      p.then(function () {\n        t.assertEquals(123, obj.getAlpha());\n        qx.Class.undefine(\"testPropertySetValueAsPromise1.Clazz\");\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests that setting a property value with a promise will delay setting the\n     * value until the promise is resolved.  In this case, the property *is*\n     * marked as async and the setXxxAsync method is used to test chaining\n     */\n    testPropertySetValueAsPromise2() {\n      var t = this;\n      var Clazz = qx.Class.define(\"testPropertySetValueAsPromise2.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true,\n            async: true\n          }\n        }\n      });\n\n      this.assertTrue(!!Clazz.prototype.setAlpha);\n      this.assertTrue(!!Clazz.prototype.setAlphaAsync);\n      var obj = new Clazz();\n      var p = new qx.Promise(function (resolve) {\n        resolve(123);\n      });\n      obj.setAlphaAsync(p).then(function () {\n        t.assertEquals(123, obj.getAlpha());\n        qx.Class.undefine(\"testPropertySetValueAsPromise2.Clazz\");\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests that a property apply method can return a promise; in this case, the\n     * property is not marked as async so the apply method is only able to delay\n     * the event handler\n     */\n    testPropertySetValueAsyncApply1() {\n      var t = this;\n      var p;\n      var Clazz = qx.Class.define(\"testPropertySetValueAsyncApply1.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true,\n            apply: \"_applyAlpha\",\n            event: \"changeAlpha\"\n          }\n        },\n\n        members: {\n          _applyAlpha(value, oldValue) {\n            return (p = new qx.Promise(function (resolve) {\n              setTimeout(function () {\n                resolve(\"xyz\");\n              }, 250);\n            }));\n          }\n        }\n      });\n\n      var obj = new Clazz();\n      var eventFired = 0;\n      obj.addListener(\"changeAlpha\", function (evt) {\n        eventFired++;\n      });\n      obj.setAlpha(\"abc\");\n      this.assertTrue(!!p);\n      this.assertEquals(0, eventFired);\n      this.assertEquals(\"abc\", obj.getAlpha());\n      p.then(function (value) {\n        this.assertEquals(\"xyz\", value); // \"xyz\" because this is the internal promise\n        this.assertEquals(\"abc\", obj.getAlpha());\n        this.assertEquals(1, eventFired);\n        qx.Class.undefine(\"testPropertySetValueAsyncApply1.Clazz\");\n        t.resume();\n      }, this);\n      this.wait(1000);\n    },\n\n    /**\n     * Tests that a property apply method can return a promise; in this case, the\n     * property *is* marked as async, and we use the setAlphaAsync to test chaining\n     */\n    testPropertySetValueAsyncApply2() {\n      var t = this;\n      var Clazz = qx.Class.define(\"testPropertySetValueAsyncApply2.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true,\n            async: true,\n            apply: \"_applyAlpha\",\n            event: \"changeAlpha\"\n          }\n        },\n\n        members: {\n          _applyAlpha(value, oldValue) {\n            return new qx.Promise(function (resolve) {\n              setTimeout(function () {\n                resolve(\"xyz\");\n              }, 250);\n            });\n          }\n        }\n      });\n\n      var obj = new Clazz();\n      var eventFired = 0;\n      obj.addListener(\"changeAlpha\", function (evt) {\n        eventFired++;\n      });\n      var p = obj.setAlphaAsync(\"abc\");\n      this.assertEquals(0, eventFired);\n      p.then(function (value) {\n        this.assertEquals(\"abc\", value);\n        this.assertEquals(\"abc\", obj.getAlpha());\n        this.assertEquals(1, eventFired);\n\n        // Set the same value, should return a new promise but not fire an event\n        p = obj.setAlphaAsync(\"abc\");\n        p.then(function (value) {\n          this.assertEquals(\"abc\", value);\n          this.assertEquals(\"abc\", obj.getAlpha());\n          this.assertEquals(1, eventFired);\n          qx.Class.undefine(\"testPropertySetValueAsyncApply2.Clazz\");\n          t.resume();\n        }, this);\n      }, this);\n      this.wait(1000);\n    },\n\n    /**\n     * Tests that a property apply method can take a promise\n     */\n    testPropertySetValueAsyncApply3() {\n      var t = this;\n      var Clazz = qx.Class.define(\"testPropertySetValueAsyncApply3.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true,\n            check: \"qx.Promise\"\n          }\n        }\n      });\n\n      var obj = new Clazz();\n      var p = qx.Promise.resolve(\"hello\");\n      obj.setAlpha(p);\n      this.assertEquals(p, obj.getAlpha());\n      qx.Class.undefine(\"testPropertySetValueAsyncApply3.Clazz\");\n    },\n\n    testBinding() {\n      var t = this;\n      var AsyncClazz = qx.Class.define(\"testBinding.AsyncClazz\", {\n        extend: qx.core.Object,\n        properties: {\n          alpha: {\n            init: null,\n            nullable: true,\n            async: true,\n            event: \"changeAlpha\"\n          }\n        },\n\n        members: {\n          _applyAlpha(value, oldValue) {\n            return new qx.Promise(function (resolve) {\n              setTimeout(resolve, 250);\n            });\n          }\n        }\n      });\n\n      var SyncClazz = qx.Class.define(\"testBinding.SyncClazz\", {\n        extend: qx.core.Object,\n        properties: {\n          bravo: {\n            init: null,\n            nullable: true,\n            event: \"changeBravo\"\n          }\n        }\n      });\n\n      /*\n       * Test binding an async property to a \"normal\" sync property\n       */\n      var asyncToSync = new qx.Promise(function (resolve) {\n        var asyncObj = new AsyncClazz();\n        var syncObj = new SyncClazz();\n\n        var p1 = new qx.Promise();\n        asyncObj.addListenerOnce(\"changeAlphaAsync\", evt => {\n          var data = evt.getData();\n          this.assertTrue(data instanceof qx.Promise);\n          p1.resolve();\n        });\n\n        var p2 = new qx.Promise();\n        var bravoEvents = 0;\n        var id = syncObj.addListener(\"changeBravo\", evt => {\n          bravoEvents++;\n          this.assertTrue(bravoEvents <= 2);\n          var data = evt.getData();\n\n          // First event is .bind() setting the initial value\n          if (bravoEvents == 1) {\n            this.assertNull(data);\n\n            // Second event was caused by asyncObj.setAlphaAsync()\n          } else if (bravoEvents == 2) {\n            this.assertEquals(\"zyx\", data);\n            syncObj.removeListenerById(id);\n            p2.resolve();\n          }\n        });\n\n        asyncObj.getAlphaAsync();\n        asyncObj.bind(\"alphaAsync\", syncObj, \"bravo\");\n        asyncObj.setAlphaAsync(\"zyx\");\n        qx.Promise.all([p1, p2]).then(function () {\n          var p3 = new qx.Promise();\n          syncObj.addListenerOnce(\"changeBravo\", evt => {\n            var data = evt.getData();\n            this.assertEquals(\"wvu\", data);\n            p3.resolve();\n          });\n\n          asyncObj.setAlphaAsync(\"wvu\");\n          p3.then(function () {\n            this.resume();\n          }, this);\n        }, this);\n      }, this);\n\n      /*\n       * Test binding a \"normal\" sync property to an async property\n       */\n      asyncToSync.then(function () {\n        var asyncObj = new AsyncClazz();\n        var syncObj = new SyncClazz();\n\n        var p1 = new qx.Promise();\n        asyncObj.addListenerOnce(\"changeAlphaAsync\", evt => {\n          var data = evt.getData();\n          this.assertEquals(\"def\", data);\n          p1.resolve();\n        });\n\n        syncObj.bind(\"bravo\", asyncObj, \"alphaAsync\");\n        syncObj.setBravo(\"def\");\n\n        p1.then(function () {\n          var p2 = new qx.Promise();\n          asyncObj.addListenerOnce(\"changeAlphaAsync\", evt => {\n            var data = evt.getData();\n            this.assertEquals(\"ghi\", data);\n            p2.resolve();\n          });\n\n          syncObj.setBravo(\"ghi\");\n          return p2.then(function () {\n            qx.Class.undefine(\"testBinding.AsyncClazz\");\n            qx.Class.undefine(\"testBinding.SyncClazz\");\n            this.resume();\n          }, this);\n        }, this);\n      }, this);\n\n      this.wait(1000);\n    },\n\n    /**\n     * Tests event handlers bound to the \"changeXxxAsync\" events, and which return\n     * a promise.  Event handlers must be triggered in sequence and by returning\n     * a promise will defer subsequent event handlers from firing\n     */\n    testAsyncEventHandlers() {\n      var Clazz = qx.Class.define(\"testAsyncEventHandlers.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          value: {},\n\n          alpha: {\n            init: null,\n            nullable: true,\n            async: true,\n            apply: \"_applyAlpha\",\n            event: \"changeAlpha\"\n          },\n\n          bravo: {\n            init: null,\n            nullable: true,\n            async: true,\n            apply: \"_applyBravo\",\n            event: \"changeBravo\"\n          }\n        },\n\n        members: {\n          _applyAlpha(value, oldValue) {\n            var p = new qx.Promise(function (resolve) {\n              console.log(\"in _applyAlpha qx.Promise, value=\" + value);\n              setTimeout(function () {\n                console.log(\n                  \"in _applyAlpha resolving qx.Promise, value=\" + value\n                );\n\n                resolve(\"xyz\");\n              }, 50);\n            });\n            console.log(\"in _applyAlpha, value=\" + value + \", p=\" + p);\n            return p;\n          },\n          _applyBravo(value, oldValue) {\n            return new qx.Promise(function (resolve) {\n              setTimeout(function () {\n                resolve(\"uvw\");\n              }, 50);\n            });\n          }\n        }\n      });\n\n      function createObj(name) {\n        var obj = new Clazz().set({ value: name });\n        obj.addListener(\"changeAlphaAsync\", function (evt) {\n          var value = evt.getData();\n          var p = new qx.Promise(function (resolve) {\n            console.log(\n              name + \": changeAlphaAsync 1 in qx.Promise, value=\" + value\n            );\n\n            setTimeout(function () {\n              if (str.length) {\n                str += \",\";\n              }\n              str += name;\n              console.log(\n                name +\n                  \": changeAlphaAsync 1 resolving qx.Promise, value=\" +\n                  value\n              );\n\n              resolve();\n            }, 200);\n          }).then(function () {\n            console.log(\n              name + \": changeAlphaAsync 1 resolved qx.Promise, value=\" + value\n            );\n          });\n          console.log(\n            name + \": changeAlphaAsync 1, value=\" + value + \", p=\" + p\n          );\n\n          return p;\n        });\n        return obj;\n      }\n\n      var objOne = createObj(\"one\");\n      var objTwo = createObj(\"two\");\n\n      var str = \"\";\n      objOne.addListener(\"changeAlphaAsync\", function (evt) {\n        var value = evt.getData();\n        console.log(\"objOne.alphaAsync setting, value=\" + value);\n        return objTwo.setAlphaAsync(\"def\").then(function () {\n          str += \"xxx\";\n          console.log(\"objOne.alphaAsync done, value=\" + value);\n        });\n      });\n\n      console.log(\"objOne.alphaAsync going to set value=abc\");\n      objOne.setAlphaAsync(\"abc\").then(function () {\n        console.log(\"objOne.alphaAsync completed set value=abc\");\n        this.assertEquals(\"one,twoxxx\", str);\n        qx.Class.undefine(\"testAsyncEventHandlers.Clazz\");\n        this.resume();\n      }, this);\n      this.wait(2500);\n    },\n\n    /**\n     * Tests using bind() on async properties (using the \"changeXxxAsync\" events) between\n     * a series of objects.  The test must show that the property values are fired in\n     * order, and that if an async event handler returns a promise it defers bind from\n     * propagating onto other objects.\n     */\n    testWaterfallBinding() {\n      var t = this;\n      var Clazz = qx.Class.define(\"testWaterfallBinding.Clazz\", {\n        extend: qx.core.Object,\n        properties: {\n          value: {},\n\n          alpha: {\n            init: null,\n            nullable: true,\n            async: true,\n            apply: \"_applyAlpha\",\n            event: \"changeAlpha\"\n          }\n        },\n\n        members: {\n          _applyAlpha(value, oldValue) {\n            var t = this;\n            console.log(\"pre applyAlpha[\" + t.getValue() + \"] = \" + value);\n            return new qx.Promise(function (resolve) {\n              setTimeout(function () {\n                console.log(\"applyAlpha[\" + t.getValue() + \"] = \" + value);\n                resolve(\"xyz\");\n              }, 50);\n            });\n          }\n        }\n      });\n\n      var objs = [];\n      var str = \"\";\n\n      function trap(i) {\n        var obj = new Clazz().set({ value: i });\n        var bindPromise;\n        if (i > 0) {\n          bindPromise = objs[i - 1].bindAsync(\"alphaAsync\", obj, \"alphaAsync\");\n        } else {\n          bindPromise = qx.Promise.resolve(true);\n        }\n        return bindPromise.then(function () {\n          obj.addListener(\"changeAlpha\", evt => {\n            var obj = evt.getTarget();\n            var data = evt.getData();\n            var delay = (5 - i + 1) * 100;\n            console.log(\n              \"pre changeAlpha \" +\n                obj.getValue() +\n                \" = \" +\n                data +\n                \" after \" +\n                delay\n            );\n\n            return new qx.Promise(function (resolve) {\n              setTimeout(function () {\n                if (str.length) {\n                  str += \",\";\n                }\n                str += obj.getValue() + \":\" + data;\n                console.log(\n                  \"changeAlpha \" +\n                    obj.getValue() +\n                    \" = \" +\n                    data +\n                    \" after \" +\n                    delay\n                );\n\n                resolve();\n              }, delay);\n            });\n          });\n\n          objs[i] = obj;\n        });\n      }\n\n      qx.Promise.mapSeries([0, 1, 2, 3, 4], trap).then(function () {\n        var p = objs[0].setAlphaAsync(\"abc\");\n\n        p.then(function () {\n          t.assertEquals(\"0:abc,1:abc,2:abc,3:abc,4:abc\", str);\n          qx.Class.undefine(\"testWaterfallBinding.Clazz\");\n          t.resume();\n        }, t);\n      });\n\n      this.wait(10000);\n    },\n\n    /**\n     * Tests the each method of promise, using qx.data.Array which the Bluebird implementation\n     * does not understand.  The values are scalar values\n     */\n    testEach1() {\n      var t = this;\n      var arr = new qx.data.Array();\n      arr.push(\"a\");\n      arr.push(\"b\");\n      arr.push(\"c\");\n      var str = \"\";\n      var promise = qx.Promise.resolve(arr);\n      promise\n        .forEach(function (item) {\n          str += item;\n        })\n        .then(function () {\n          t.assertEquals(\"abc\", str);\n          t.resume();\n        });\n      t.wait(1000);\n    },\n\n    /**\n     * Tests the each method of promise, using qx.data.Array which the Bluebird implementation\n     * does not understand.  The values are a mixture of promises and scalar values\n     */\n    testEach2() {\n      var t = this;\n      var arr = new qx.data.Array();\n      arr.push(\n        new qx.Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(\"a\");\n          }, 500);\n        })\n      );\n\n      arr.push(\n        new qx.Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(\"b\");\n          }, 300);\n        })\n      );\n\n      arr.push(\n        new qx.Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(\"c\");\n          }, 100);\n        })\n      );\n\n      arr.push(\"d\");\n      arr.push(\"e\");\n      var str = \"\";\n      var promise = qx.Promise.resolve(arr);\n      this.assertInstance(promise, qx.Promise);\n      var pEach = promise.forEach(function (item) {\n        str += item;\n      });\n      this.assertInstance(pEach, qx.Promise);\n      var pThen = pEach.then(function () {\n        t.assertEquals(\"abcde\", str);\n        t.resume();\n      });\n      this.assertInstance(pThen, qx.Promise);\n      t.wait(1000);\n    },\n\n    /**\n     * Tests unhandled rejections being passed to the global error handler\n     */\n    testGlobalError() {\n      var t = this;\n      qx.event.GlobalError.setErrorHandler(function (ex) {\n        t.assertEquals(ex.message, \"oops\");\n        t.resume();\n      });\n      var self = this;\n      var p = new qx.Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(\"ok\");\n        });\n      }, this);\n      p.then(function (value) {\n        throw new Error(\"oops\");\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests promisification of methods\n     */\n    testMethod() {\n      var t = this;\n      var fn = qx.Promise.method(function (value) {\n        return value;\n      });\n      var promise = fn(\"yes\");\n      this.assertInstance(promise, qx.Promise);\n      promise.then(function (value) {\n        t.assertEquals(value, \"yes\");\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests binding of all callbacks via .bind()\n     */\n    testBinding1() {\n      var t = this;\n      var p = qx.Promise.resolve(\"hello\").bind(this);\n      p.then(function (value) {\n        qx.core.Assert.assertIdentical(t, this);\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests binding on a per-method basis\n     */\n    testBinding2() {\n      var t = this;\n      var p = qx.Promise.forEach(\n        [\"a\", \"b\", \"c\"],\n        function (item) {\n          qx.core.Assert.assertIdentical(t, this);\n        },\n        this\n      ).then(function (value) {\n        qx.core.Assert.assertIdentical(t, this);\n        this.resume();\n      }, this);\n      this.wait(1000);\n    },\n\n    testMarshal() {\n      var marshal = new qx.data.marshal.Json();\n      marshal.toClass(qx.test.Promise.TEST_MODEL.children[0], true);\n      var model = marshal.toModel(qx.test.Promise.TEST_MODEL.children[0]);\n    },\n\n    /**\n     * Tests binding where the context is static class\n     */\n    testBindingToStatic() {\n      var t = this;\n      qx.Promise.resolve(true).then(function () {\n        qx.core.Assert.assertIdentical(qx.Promise, this);\n        t.resume();\n      }, qx.Promise);\n      this.wait(1000);\n    },\n\n    /**\n     * Tests the context parameter for qx.Promise.resolve\n     */\n    testBindingResolve() {\n      var t = this;\n      qx.Promise.resolve(true, this).then(function () {\n        qx.core.Assert.assertIdentical(t, this);\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests the context parameter for qx.Promise.reject\n     */\n    testBindingReject() {\n      var t = this;\n      qx.Promise.reject(new Error(\"Dummy Error\"), this).catch(function () {\n        qx.core.Assert.assertIdentical(t, this);\n        t.resume();\n      });\n      this.wait(1000);\n    },\n\n    /**\n     * Tests wrapping of parameters preserves the original values\n     */\n    testWrapping() {\n      var t = this;\n      new qx.Promise(function (resolve) {\n        resolve();\n      })\n        .then(function () {\n          return qx.Promise.all([\"foo\", new qx.data.Array([\"a\", \"b\", \"c\"])]);\n        })\n        .spread(function (str, arr) {\n          t.assertEquals(str, \"foo\");\n          t.assertInstance(arr, qx.data.Array);\n          t.assertEquals(arr.join(\"\"), \"abc\");\n          t.resume();\n        });\n      this.wait(1000);\n    }\n  },\n\n  statics: {\n    TEST_MODEL: {\n      name: \"qx\",\n      children: [\n        {\n          name: \"test\",\n          children: [\n            {\n              name: \"Class\",\n              children: [\n                {\n                  name: \"test: instantiate class in defer and access property\"\n                },\n\n                {\n                  name: \"testAbstract\"\n                },\n\n                {\n                  name: \"testAnonymous\"\n                }\n              ]\n            },\n\n            {\n              name: \"Bootstrap\",\n              children: [\n                {\n                  name: \"test: define bootstrap class, which extends 'Error'\"\n                },\n\n                {\n                  name: \"test: define class with constructor\"\n                },\n\n                {\n                  name: \"test: extend from Bootstrap class\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}