{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "MRequirements",
    "members",
    "setUp",
    "require",
    "tearDown",
    "req",
    "dispose",
    "test_fetch_json",
    "_this",
    "request",
    "Jsonp",
    "url",
    "noCache",
    "getUrl",
    "addListener",
    "e",
    "resume",
    "assertObject",
    "getResponse",
    "assertTrue",
    "setUrl",
    "send",
    "wait",
    "util",
    "Uri",
    "appendParamsToUrl",
    "Date",
    "valueOf",
    "JsonpWithRemote"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/JsonpWithRemote.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/jsonp_primitive.php)\n */\n\nqx.Class.define(\"qx.test.io.request.JsonpWithRemote\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.test.io.MRemoteTest, qx.dev.unit.MRequirements],\n\n  members: {\n    setUp() {\n      this.require([\"http\", \"php\"]);\n    },\n\n    tearDown() {\n      this.req.dispose();\n    },\n\n    \"test: fetch json\"() {\n      var req = (this.req = new qx.io.request.Jsonp()),\n        url = this.noCache(this.getUrl(\"qx/test/jsonp_primitive.php\"));\n\n      req.addListener(\"load\", e => {\n        this.resume(function () {\n          this.assertObject(req.getResponse());\n          this.assertTrue(req.getResponse()[\"boolean\"]);\n        }, this);\n      });\n\n      req.setUrl(url);\n      req.send();\n\n      this.wait();\n    },\n\n    noCache(url) {\n      return qx.util.Uri.appendParamsToUrl(\n        url,\n        \"nocache=\" + new Date().valueOf()\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,oCAAoC,EAAE;IACpDC,MAAM,EAAEN,EAAE,CAACO,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE,CAACV,EAAE,CAACW,IAAI,CAACC,EAAE,CAACC,WAAW,EAAEb,EAAE,CAACO,GAAG,CAACC,IAAI,CAACM,aAAa,CAAC;IAE5DC,OAAO,EAAE;MACPC,KAAK,WAALA,KAAKA,CAAA,EAAG;QACN,IAAI,CAACC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;MAC/B,CAAC;MAEDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;QACT,IAAI,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC;MACpB,CAAC;MAED,kBAAkB,WAAlBC,eAAkBA,CAAA,EAAG;QAAA,IAAAC,KAAA;QACnB,IAAIH,GAAG,GAAI,IAAI,CAACA,GAAG,GAAG,IAAInB,EAAE,CAACY,EAAE,CAACW,OAAO,CAACC,KAAK,CAAC,CAAE;UAC9CC,GAAG,GAAG,IAAI,CAACC,OAAO,CAAC,IAAI,CAACC,MAAM,CAAC,6BAA6B,CAAC,CAAC;QAEhER,GAAG,CAACS,WAAW,CAAC,MAAM,EAAE,UAAAC,CAAC,EAAI;UAC3BP,KAAI,CAACQ,MAAM,CAAC,YAAY;YACtB,IAAI,CAACC,YAAY,CAACZ,GAAG,CAACa,WAAW,CAAC,CAAC,CAAC;YACpC,IAAI,CAACC,UAAU,CAACd,GAAG,CAACa,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;UAC/C,CAAC,EAAEV,KAAI,CAAC;QACV,CAAC,CAAC;QAEFH,GAAG,CAACe,MAAM,CAACT,GAAG,CAAC;QACfN,GAAG,CAACgB,IAAI,CAAC,CAAC;QAEV,IAAI,CAACC,IAAI,CAAC,CAAC;MACb,CAAC;MAEDV,OAAO,WAAPA,OAAOA,CAACD,GAAG,EAAE;QACX,OAAOzB,EAAE,CAACqC,IAAI,CAACC,GAAG,CAACC,iBAAiB,CAClCd,GAAG,EACH,UAAU,GAAG,IAAIe,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAClC,CAAC;MACH;IACF;EACF,CAAC,CAAC;EAjEFzC,EAAE,CAACW,IAAI,CAACC,EAAE,CAACW,OAAO,CAACmB,eAAe,CAACvC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}