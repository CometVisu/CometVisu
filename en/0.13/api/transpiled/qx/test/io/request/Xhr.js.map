{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "request",
    "MRequest",
    "MMock",
    "MRequirements",
    "members",
    "setUp",
    "setUpRequest",
    "setUpFakeTransport",
    "req",
    "dispose",
    "Xhr",
    "setUrl",
    "transport",
    "send",
    "restore",
    "injectStub",
    "prototype",
    "deepStub",
    "_createTransport",
    "setUpFakeServer",
    "getSandbox",
    "useFakeServer",
    "server",
    "getServer",
    "respondWith",
    "setUpFakeXhr",
    "useFakeXMLHttpRequest",
    "tearDown",
    "undefine",
    "e",
    "testSetUrlPropertyOnConstruct",
    "assertEquals",
    "getUrl",
    "testSetMethodPropertyOnConstruct",
    "getMethod",
    "testSendPOSTRequest",
    "setMethod",
    "assertCalledWith",
    "open",
    "testSendSyncRequest",
    "require",
    "setAsync",
    "assertCalled",
    "testSetContentTypeUrlencodedForPOSTRequestWithBodyWhenNoTypeGiven",
    "setRequestData",
    "setRequestHeader",
    "testNotSetContentTypeUrlencodedForPOSTRequestWithBodyWhenTypeGiven",
    "msg",
    "assert",
    "calledWith",
    "testSendStringDataWithPOSTRequest",
    "testSendObjDataWithPOSTRequest",
    "testSendQooxdooObjDataWithPOSTRequest",
    "setUpKlass",
    "obj",
    "Klass",
    "testSendBlobDataWithPOSTRequest",
    "window",
    "Blob",
    "skip",
    "blob",
    "type",
    "testSendArrayBufferDataWithPOSTRequest",
    "ArrayBuffer",
    "array",
    "testSerializeData",
    "data",
    "abc",
    "uvw",
    "contentType",
    "assertNull",
    "_serializeData",
    "testSetRequestedWithHeader",
    "testNotSetRequestedWithHeaderWhenCrossOrigin",
    "spy",
    "withArgs",
    "assertNotCalled",
    "testSetCacheControlHeader",
    "setCache",
    "testSetAcceptHeader",
    "setAccept",
    "testOverrideResponseContentType",
    "overrideResponseContentType",
    "overrideMimeType",
    "testGetResponseContentType",
    "stub",
    "getResponseContentType",
    "getResponseHeader",
    "testEventHandlerReceivesRequest",
    "that",
    "readyState",
    "status",
    "responseText",
    "addListener",
    "getTarget",
    "getResponseText",
    "onreadystatechange",
    "testEventHandlerSThisIsRequest",
    "testSyncXHRPropertiesForEveryReadyState",
    "readyStates",
    "statuses",
    "push",
    "getReadyState",
    "getStatus",
    "respond",
    "assertArrayEquals",
    "getStatusText",
    "testGetResponse",
    "getResponse",
    "testGetResponseOn400Status",
    "testGetResponseByChangeEvent",
    "assertEventFired",
    "getData",
    "test_getParsedResponse",
    "json",
    "stubbedParser",
    "_createResponseParser",
    "_transport",
    "returns",
    "_parser",
    "_getParsedResponse",
    "parse",
    "testSetParser",
    "customParser",
    "setParser",
    "testBasicAuth",
    "auth",
    "call",
    "key",
    "credentials",
    "authentication",
    "Basic",
    "setAuthentication",
    "getCall",
    "exec",
    "args",
    "util",
    "Base64",
    "decode",
    "testSendWithPromiseSendsTheRequest",
    "core",
    "Environment",
    "get",
    "sendWithPromise",
    "assertCalledOnce",
    "testSendWithPromiseSucceeds",
    "then",
    "resumeHandler",
    "result",
    "wait",
    "testSendWithPromiseFailsWithStatusError",
    "_",
    "BaseError",
    "assertInstance",
    "toString",
    "statusText",
    "testSendWithPromiseFailsWithError",
    "onerror",
    "testSendWithPromiseFailsWithTimeout",
    "setTimeout",
    "ontimeout",
    "testSetledPromiseHasNoExtraListeners",
    "promise",
    "listeners",
    "event",
    "Registration",
    "serializeListeners",
    "length",
    "assertNotEquals",
    "testAbortedRequestRejectsThePromise",
    "onabort",
    "testParseErrorRejectsThePromise",
    "testCanceledPromiseWithAbortInFinallyDoesNotRejectOtherPromises",
    "promise1",
    "abort",
    "cancel",
    "testCanceledPromisePathDoesNotAffectOtherListeners",
    "testCanceledPromiseAbortsPendingRequest",
    "getPhase",
    "testSettledPromiseDoesNotSetPhaseToAbort",
    "testReturnedPromiseIsBoundToRequest",
    "self",
    "assertIdentical",
    "testReturnedPromiseIsBoundToCaller"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/Xhr.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n************************************************************************ */\n\n/**\n * @ignore(Klass)\n * @asset(qx/test/xmlhttp/*)\n */\n/* global Klass */\n\n/**\n * Tests asserting behavior\n *\n * - special to io.request.Xhr and\n * - common to io.request.* (see {@link qx.test.io.request.MRequest})\n *\n * Tests defined in MRequest run with appropriate context, i.e.\n * a transport that is an instance of qx.bom.request.Xhr\n * (see {@link #setUpFakeTransport}).\n *\n */\nqx.Class.define(\"qx.test.io.request.Xhr\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [\n    qx.test.io.request.MRequest,\n    qx.dev.unit.MMock,\n    qx.dev.unit.MRequirements\n  ],\n\n  members: {\n    setUp() {\n      this.setUpRequest();\n      this.setUpFakeTransport();\n    },\n\n    setUpRequest() {\n      this.req && this.req.dispose();\n      this.req = new qx.io.request.Xhr();\n      this.req.setUrl(\"url\");\n    },\n\n    setUpFakeTransport() {\n      if (this.transport && this.transport.send.restore) {\n        return;\n      }\n      this.transport = this.injectStub(\n        qx.io.request.Xhr.prototype,\n        \"_createTransport\",\n        this.deepStub(qx.io.request.Xhr.prototype._createTransport())\n      );\n\n      this.setUpRequest();\n    },\n\n    setUpFakeServer() {\n      // Not fake transport\n      this.getSandbox().restore();\n\n      this.useFakeServer();\n      this.setUpRequest();\n\n      this.server = this.getServer();\n\n      this.server.respondWith(\"GET\", \"/found\", [\n        200,\n        { \"Content-Type\": \"text/html\" },\n        \"FOUND\"\n      ]);\n\n      this.server.respondWith(\"GET\", \"/found.json\", [\n        200,\n        { \"Content-Type\": \"application/json; charset=utf-8\" },\n        \"JSON\"\n      ]);\n\n      this.server.respondWith(\"GET\", \"/found.other\", [\n        200,\n        { \"Content-Type\": \"application/other\" },\n        \"OTHER\"\n      ]);\n    },\n\n    setUpFakeXhr() {\n      // Not fake transport\n      this.getSandbox().restore();\n\n      this.useFakeXMLHttpRequest();\n      this.setUpRequest();\n    },\n\n    tearDown() {\n      this.getSandbox().restore();\n      this.req.dispose();\n\n      // May fail in IE\n      try {\n        qx.Class.undefine(\"Klass\");\n      } catch (e) {}\n    },\n\n    //\n    // General (cont.)\n    //\n\n    \"test: set url property on construct\"() {\n      var req = new qx.io.request.Xhr(\"url\");\n      this.assertEquals(\"url\", req.getUrl());\n      req.dispose();\n    },\n\n    \"test: set method property on construct\"() {\n      var req = new qx.io.request.Xhr(\"url\", \"POST\");\n      this.assertEquals(\"POST\", req.getMethod());\n      req.dispose();\n    },\n\n    //\n    // Send (cont.)\n    //\n\n    \"test: send POST request\"() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"POST\");\n    },\n\n    \"test: send sync request\"() {\n      this.require([\"http\"]);\n\n      this.setUpFakeTransport();\n      this.req.setAsync(false);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url\", false);\n      this.assertCalled(this.transport.send);\n    },\n\n    //\n    // Data (cont.)\n    //\n\n    \"test: set content type urlencoded for POST request with body when no type given\"() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"Affe\");\n      this.req.send();\n\n      this.assertCalledWith(\n        this.transport.setRequestHeader,\n        \"Content-Type\",\n        \"application/x-www-form-urlencoded\"\n      );\n    },\n\n    \"test: not set content type urlencoded for POST request with body when type given\"() {\n      var msg;\n\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"Affe\");\n      this.req.setRequestHeader(\"Content-Type\", \"application/json\");\n      this.req.send();\n\n      msg = \"Must not set content type urlencoded when other type given\";\n      this.assert(\n        !this.transport.setRequestHeader.calledWith(\n          \"Content-Type\",\n          \"application/x-www-form-urlencoded\"\n        ),\n\n        msg\n      );\n    },\n\n    \"test: send string data with POST request\"() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"str\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"str\");\n    },\n\n    \"test: send obj data with POST request\"() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData({ \"af fe\": true });\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"af+fe=true\");\n    },\n\n    \"test: send qooxdoo obj data with POST request\"() {\n      this.setUpFakeTransport();\n      this.setUpKlass();\n      var obj = new Klass();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(obj);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"affe=true\");\n      obj.dispose();\n    },\n\n    \"test: send blob data with POST request\"() {\n      if (typeof window.Blob == \"undefined\") {\n        this.skip(\"Blob constructor not available\");\n      }\n      var blob = new window.Blob([\"abc123\"], { type: \"text/plain\" });\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(blob);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, blob);\n    },\n\n    \"test: send array buffer data with POST request\"() {\n      if (typeof window.ArrayBuffer == \"undefined\") {\n        this.skip(\"ArrayBuffer constructor not available\");\n      }\n      var array = new window.ArrayBuffer(512);\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(array);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, array);\n    },\n\n    \"test: serialize data\"() {\n      var req = this.req,\n        data = { abc: \"def\", uvw: \"xyz\" },\n        contentType = \"application/json\";\n\n      this.assertNull(req._serializeData(null));\n      this.assertEquals(\"leaveMeIntact\", req._serializeData(\"leaveMeIntact\"));\n      this.assertEquals(\"abc=def&uvw=xyz\", req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", \"arbitrary/contentType\");\n      this.assertEquals(\"abc=def&uvw=xyz\", req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", contentType);\n      this.assertEquals('{\"abc\":\"def\",\"uvw\":\"xyz\"}', req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", contentType);\n      this.assertEquals(\"[1,2,3]\", req._serializeData([1, 2, 3]));\n    },\n\n    //\n    // Header and Params (cont.)\n    //\n\n    \"test: set requested-with header\"() {\n      this.setUpFakeTransport();\n      this.req.send();\n\n      this.assertCalledWith(\n        this.transport.setRequestHeader,\n        \"X-Requested-With\",\n        \"XMLHttpRequest\"\n      );\n    },\n\n    \"test: not set requested-with header when cross-origin\"() {\n      this.setUpFakeTransport();\n      var spy = this.transport.setRequestHeader.withArgs(\n        \"X-Requested-With\",\n        \"XMLHttpRequest\"\n      );\n\n      this.req.setUrl(\"http://example.com\");\n      this.req.send();\n\n      this.assertNotCalled(spy);\n    },\n\n    \"test: set cache control header\"() {\n      this.setUpFakeTransport();\n      this.req.setCache(\"no-cache\");\n      this.req.send();\n\n      this.assertCalledWith(\n        this.transport.setRequestHeader,\n        \"Cache-Control\",\n        \"no-cache\"\n      );\n    },\n\n    \"test: set accept header\"() {\n      this.setUpFakeTransport();\n      this.req.setAccept(\"application/json\");\n      this.req.send();\n\n      this.assertCalledWith(\n        this.transport.setRequestHeader,\n        \"Accept\",\n        \"application/json\"\n      );\n    },\n\n    \"test: override response content type\"() {\n      this.setUpFakeTransport();\n      this.req.overrideResponseContentType(\"text/plain;charset=Shift-JIS\");\n\n      this.assertCalledWith(\n        this.transport.overrideMimeType,\n        \"text/plain;charset=Shift-JIS\"\n      );\n    },\n\n    \"test: get response content type\"() {\n      this.stub(this.req, \"getResponseHeader\");\n      this.req.getResponseContentType();\n\n      this.assertCalledWith(this.req.getResponseHeader, \"Content-Type\");\n    },\n\n    //\n    // Handler\n    //\n\n    // Documentation only\n    \"test: event handler receives request\"() {\n      this.setUpFakeTransport();\n      var req = this.req,\n        transport = this.transport,\n        that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      req.addListener(\"success\", function (e) {\n        that.assertEquals(e.getTarget(), req);\n        that.assertEquals(\"Affe\", e.getTarget().getResponseText());\n      });\n\n      transport.onreadystatechange();\n    },\n\n    // Documentation only\n    \"test: event handler's this is request\"() {\n      this.setUpFakeTransport();\n      var req = this.req,\n        transport = this.transport,\n        that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      req.addListener(\"success\", function () {\n        that.assertEquals(this, req);\n        that.assertEquals(\"Affe\", this.getResponseText());\n      });\n\n      transport.onreadystatechange();\n    },\n\n    //\n    // Properties\n    //\n\n    \"test: sync XHR properties for every readyState\"() {\n      this.require([\"http\"]);\n\n      this.setUpFakeServer();\n      var req = this.req,\n        server = this.server,\n        readyStates = [],\n        statuses = [];\n\n      req.setUrl(\"/found\");\n      req.setMethod(\"GET\");\n\n      readyStates.push(req.getReadyState());\n      req.addListener(\"readyStateChange\", () => {\n        readyStates.push(req.getReadyState());\n        statuses.push(req.getStatus());\n      });\n\n      req.send();\n      server.respond();\n\n      this.assertArrayEquals([0, 1, 2, 3, 4], readyStates);\n      this.assertArrayEquals([0, 200, 200, 200], statuses);\n      this.assertEquals(\"text/html\", req.getResponseHeader(\"Content-Type\"));\n      this.assertEquals(\"OK\", req.getStatusText());\n      this.assertEquals(\"FOUND\", req.getResponseText());\n    },\n\n    //\n    // Response\n    //\n\n    \"test: get response\"() {\n      this.setUpFakeTransport();\n      var req = this.req,\n        transport = this.transport;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.assertEquals(\"Affe\", req.getResponse());\n    },\n\n    \"test: get response on 400 status\"() {\n      this.setUpFakeTransport();\n      var req = this.req,\n        transport = this.transport;\n\n      transport.readyState = 4;\n      transport.status = 400;\n      transport.responseText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.assertEquals(\"Affe\", req.getResponse());\n    },\n\n    \"test: get response by change event\"() {\n      this.setUpFakeTransport();\n      var req = this.req,\n        transport = this.transport,\n        that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      this.assertEventFired(\n        req,\n        \"changeResponse\",\n        function () {\n          transport.onreadystatechange();\n        },\n        function (e) {\n          that.assertEquals(\"Affe\", e.getData());\n        }\n      );\n    },\n\n    //\n    // Parsing\n    //\n\n    \"test: _getParsedResponse\"() {\n      var req = this.req,\n        json = '{\"animals\": 3}',\n        contentType = \"application/json\",\n        stubbedParser = req._createResponseParser();\n\n      req._transport.responseText = json;\n      this.stub(req, \"getResponseContentType\").returns(contentType);\n\n      // replace real parser with stub\n      this.stub(stubbedParser, \"parse\");\n      req._parser = stubbedParser;\n\n      req._getParsedResponse();\n      this.assertCalledWith(stubbedParser.parse, json, contentType);\n    },\n\n    \"test: setParser\"() {\n      var req = this.req,\n        customParser = function () {},\n        stubbedParser = req._createResponseParser();\n\n      // replace real parser with stub\n      this.stub(stubbedParser, \"setParser\");\n      req._parser = stubbedParser;\n\n      req.setParser(customParser);\n      this.assertCalledWith(stubbedParser.setParser, customParser);\n    },\n\n    //\n    // Auth\n    //\n\n    \"test: basic auth\"() {\n      this.setUpFakeTransport();\n\n      var transport = this.transport,\n        auth,\n        call,\n        key,\n        credentials;\n\n      auth = new qx.io.request.authentication.Basic(\"affe\", \"geheim\");\n      this.req.setAuthentication(auth);\n      this.req.send();\n\n      call = transport.setRequestHeader.getCall(1);\n      key = \"Authorization\";\n      credentials = /Basic\\s(.*)/.exec(call.args[1])[1];\n      this.assertEquals(key, call.args[0]);\n      this.assertEquals(\"affe:geheim\", qx.util.Base64.decode(credentials));\n    },\n\n    //\n    // Promise\n    //\n\n    \"test: send with promise sends the request\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.req.sendWithPromise();\n      this.assertCalledOnce(this.transport.send);\n    },\n\n    \"test: send with promise succeeds\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n\n      var req = this.req;\n\n      req.sendWithPromise(this).then(\n        this.resumeHandler(function (result) {\n          this.assertEquals(req, result);\n          this.assertEquals(200, req.getStatus());\n        }, this)\n      );\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(10000);\n    },\n\n    \"test: send with promise fails with statusError\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been fulfilled but should have been rejected.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            this.assertInstance(result, qx.type.BaseError);\n            this.assertEquals(\"statusError: 404: Affe.\", result.toString());\n          }, this)\n        );\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 404;\n      transport.statusText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.wait(1000);\n    },\n\n    \"test: send with promise fails with error\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been fulfilled but should have been rejected.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            this.assertInstance(result, qx.type.BaseError);\n            this.assertEquals(\"error: Request failed.\", result.toString());\n          }, this)\n        );\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 0;\n      transport.onerror();\n\n      this.wait(1000);\n    },\n\n    \"test: send with promise fails with timeout\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been fulfilled but should have been rejected.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            this.assertInstance(result, qx.type.BaseError);\n            this.assertEquals(\n              \"timeout: Request failed with timeout after 1 ms.\",\n              result.toString()\n            );\n          }, this)\n        );\n\n      req.setTimeout(1);\n      this.transport.ontimeout();\n      this.wait(5000);\n    },\n\n    \"test: setled promise has no extra listeners\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // cache the number of listeners before setling the promise\n      var listeners = qx.event.Registration.serializeListeners(req);\n\n      promise.catch(\n        this.resumeHandler(function () {\n          var length = qx.event.Registration.serializeListeners(req).length;\n          this.assertNotEquals(\n            length,\n            listeners.length,\n            \"The number of listeners remains the same before and after setling the promise.\"\n          );\n        })\n      );\n\n      this.transport.ontimeout();\n      this.wait(5000);\n    },\n\n    \"test: aborted request rejects the promise\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been fulfilled but should have been rejected.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            this.assertInstance(result, qx.type.BaseError);\n            this.assertEquals(\"abort: Request aborted.\", result.toString());\n          }, this)\n        );\n\n      this.transport.onabort();\n      this.wait(5000);\n    },\n\n    \"test: parseError rejects the promise\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n      var stubbedParser = req._createResponseParser();\n\n      // replace real parser with stub\n      var stub = this.stub(stubbedParser, \"parse\");\n      stub.throws();\n      req._parser = stubbedParser;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been fulfilled but should have been rejected.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            this.assertInstance(result, qx.type.BaseError);\n            this.assertEquals(\n              \"parseError: Error parsing the response.\",\n              result.toString()\n            );\n          }, this)\n        );\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise with abort() in finally does not reject other promises\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // this path is canceled. We don't expect anything from it\n      var promise1 = promise\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"This path should not be fulfilled.\"\n            );\n          }, this)\n        )\n        .catch(\n          this.resumeHandler(function (result) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"This path should not be rejected.\"\n            );\n          }, this)\n        )\n\n        // except that we want to abort when is finished\n        .finally(function () {\n          req.abort();\n        });\n\n      // this path should keep going\n      promise\n        .then(\n          this.resumeHandler(function (result) {\n            this.assertEquals(req, result);\n          }, this)\n        )\n        .catch(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"Promise has been rejected but should have been fulfilled.\"\n            );\n          }, this)\n        );\n\n      promise1.cancel();\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise path does not affect other listeners\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // this path is canceled. We don't expect anything from it\n      var promise1 = promise\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"promise1 should not be fulfilled.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"promise1 should not be rejected.\"\n            );\n          }, this)\n        );\n\n      // this path should keep going\n      promise.then(\n        this.resumeHandler(function (result) {\n          this.assertEquals(req, result);\n        }, this)\n      );\n\n      promise1.cancel();\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise aborts pending request\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"promise should not be fulfilled.\"\n            );\n          })\n        )\n        .catch(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"promise should not be rejected.\"\n            );\n          })\n        )\n        .finally(\n          this.resumeHandler(function () {\n            this.assertEquals(\"abort\", req.getPhase());\n          })\n        );\n\n      var transport = this.transport;\n      transport.readyState = 2;\n      transport.onreadystatechange();\n\n      promise.cancel();\n\n      this.wait(5000);\n    },\n\n    \"test: settled promise does not set phase to abort\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req\n        .sendWithPromise(this)\n        .then(\n          this.resumeHandler(function (_) {\n            this.assertEquals(\"success\", req.getPhase());\n          })\n        )\n        .catch(\n          this.resumeHandler(function (_) {\n            throw new qx.type.BaseError(\n              \"Error in sendWithPromise()\",\n              \"promise should not be rejected.\"\n            );\n          })\n        )\n        .finally(function () {\n          this.assertEquals(\"success\", req.getPhase());\n        });\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n\n      this.wait(5000);\n    },\n\n    \"test: returned promise is bound to request\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n      var self = this;\n      req.sendWithPromise().catch(\n        this.resumeHandler(function (_) {\n          self.assertIdentical(req, this);\n        })\n      );\n\n      this.transport.onerror();\n\n      this.wait(5000);\n    },\n\n    \"test: returned promise is bound to caller\"() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport(this);\n      var self = this;\n\n      this.req.sendWithPromise(this).catch(\n        this.resumeHandler(function (_) {\n          self.assertIdentical(self, this);\n        })\n      );\n\n      this.transport.onerror();\n\n      this.wait(5000);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}