{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "request",
    "MRequest",
    "MMock",
    "members",
    "setUp",
    "setUpRequest",
    "setUpFakeTransport",
    "req",
    "dispose",
    "Jsonp",
    "setUrl",
    "transport",
    "injectStub",
    "prototype",
    "deepStub",
    "bom",
    "tearDown",
    "getSandbox",
    "restore",
    "undefine",
    "e",
    "test_set_url_property_on_construct",
    "assertEquals",
    "getUrl",
    "test_setCallbackParam",
    "setCallbackParam",
    "assertCalledWith",
    "test_setCallbackName",
    "setCallbackName"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/Jsonp.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * Tests asserting behavior\n *\n * - special to io.request.Jsonp and\n * - common to io.request.* (see {@link qx.test.io.request.MRequest})\n *\n * Tests defined in MRequest run with appropriate context, i.e.\n * a transport that is an instance of qx.bom.request.Jsonp\n * (see {@link #setUpFakeTransport}).\n *\n */\nqx.Class.define(\"qx.test.io.request.Jsonp\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.test.io.request.MRequest, qx.dev.unit.MMock],\n\n  members: {\n    setUp() {\n      this.setUpRequest();\n      this.setUpFakeTransport();\n    },\n\n    setUpRequest() {\n      this.req && this.req.dispose();\n      this.req = new qx.io.request.Jsonp();\n      this.req.setUrl(\"url\");\n    },\n\n    // Also called in shared tests, i.e. shared tests\n    // use appropriate transport\n    setUpFakeTransport() {\n      this.transport = this.injectStub(\n        qx.io.request.Jsonp.prototype,\n        \"_createTransport\",\n        this.deepStub(new qx.bom.request.Jsonp())\n      );\n\n      this.setUpRequest();\n    },\n\n    tearDown() {\n      this.getSandbox().restore();\n      this.req.dispose();\n\n      // May fail in IE\n      try {\n        qx.Class.undefine(\"Klass\");\n      } catch (e) {}\n    },\n\n    //\n    // General (cont.)\n    //\n\n    \"test: set url property on construct\"() {\n      var req = new qx.io.request.Jsonp(\"url\");\n      this.assertEquals(\"url\", req.getUrl());\n      req.dispose();\n    },\n\n    //\n    // Callback management\n    //\n\n    \"test: setCallbackParam()\"() {\n      var req = this.req,\n        transport = this.transport;\n\n      req.setCallbackParam(\"method\");\n      this.assertCalledWith(transport.setCallbackParam, \"method\");\n    },\n\n    \"test: setCallbackName()\"() {\n      var req = this.req,\n        transport = this.transport;\n\n      req.setCallbackName(\"myCallback\");\n      this.assertCalledWith(transport.setCallbackName, \"myCallback\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}