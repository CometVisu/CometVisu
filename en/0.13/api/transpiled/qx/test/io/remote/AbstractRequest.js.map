{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "members",
    "_requests",
    "setUp",
    "i",
    "request",
    "_createRequest",
    "addListener",
    "responseError",
    "Error",
    "_getRequests",
    "tearDown",
    "_disposeArray",
    "e",
    "getType",
    "event",
    "Timer",
    "once",
    "resume",
    "fail",
    "getStatusCode",
    "testAsynchronous",
    "isLocal",
    "needsPHPWarning",
    "completedCount",
    "length",
    "setParameter",
    "response",
    "lang",
    "Json",
    "parse",
    "getContent",
    "getTarget",
    "assertEquals",
    "getParameter",
    "send",
    "that",
    "wait",
    "testAbortedOnException",
    "url",
    "getUrl",
    "remote",
    "Request",
    "dispose",
    "AbstractRequest"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/qx_packages/qooxdoo_deprecated_qx_io_remote_v1_0_2/source/class/qx/test/io/remote/AbstractRequest.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n  2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\n     MIT: https://opensource.org/licenses/MIT\n  See the LICENSE file in the project's top-level directory for details.\n\nAuthors:\n  * Fabian Jakobs (fjakobs)\n  * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/*\n */\n/**\n *\n * @asset(qx/test/*)\n */\n\nqx.Class.define(\"qx.test.io.remote.AbstractRequest\", {\n  type: \"abstract\",\n  extend: qx.dev.unit.TestCase,\n  include: qx.test.io.MRemoteTest,\n\n  members: {\n    _requests: null,\n\n    setUp() {\n      this._requests = [];\n\n      for (var i = 0; i < 10; i++) {\n        var request = this._createRequest();\n\n        request.addListener(\"aborted\", this.responseError, this);\n        request.addListener(\"failed\", this.responseError, this);\n        request.addListener(\"timeout\", this.responseError, this);\n\n        this._requests[i] = request;\n      }\n    },\n\n    _createRequest() {\n      throw new Error(\"Abstract method call\");\n    },\n\n    _getRequests() {\n      return this._requests;\n    },\n\n    tearDown() {\n      this._disposeArray(\"_requests\");\n    },\n\n    responseError(e) {\n      var request = e;\n      var type = e.getType();\n\n      qx.event.Timer.once(function () {\n        this.resume(function () {\n          this.fail(\"Response error: \" + type + \" \" + request.getStatusCode());\n        }, this);\n      }, this);\n    },\n\n    testAsynchronous() {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var completedCount = 0;\n\n      for (var i = 0; i < this._requests.length; i++) {\n        var request = this._requests[i];\n\n        request.setParameter(\"test\", \"test\" + i);\n\n        request.addListener(\n          \"completed\",\n          function (e) {\n            completedCount++;\n\n            var response = qx.lang.Json.parse(e.getContent());\n            request = e.getTarget();\n            this.assertEquals(request.getParameter(\"test\"), response[\"test\"]);\n          },\n          this\n        );\n\n        request.send();\n      }\n\n      var that = this;\n      this.wait(5000, function () {\n        that.assertEquals(i, completedCount);\n      });\n    },\n\n    testAbortedOnException() {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n      var request = new qx.io.remote.Request(url, \"GET\", \"text/plain\");\n      request.addListener(\"failed\", this.responseError, this);\n      request.addListener(\"timeout\", this.responseError, this);\n\n      request.addListener(\n        \"completed\",\n        function (e) {\n          throw new Error(\"Expected exception.\");\n        },\n        this\n      );\n\n      request.addListener(\n        \"aborted\",\n        function (e) {\n          this.resume(function () {\n            this.assertEquals(request, e.getTarget());\n            request.dispose();\n          }, this);\n        },\n        this\n      );\n\n      request.send();\n\n      this.wait(2000);\n    },\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;EACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACnDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAEP,EAAE,CAACQ,GAAG,CAACC,IAAI,CAACC,QAAQ;IAC5BC,OAAO,EAAEX,EAAE,CAACY,IAAI,CAACC,EAAE,CAACC,WAAW;IAE/BC,OAAO,EAAE;MACPC,SAAS,EAAE,IAAI;MAEfC,KAAK,WAAAA,MAAA,EAAG;QACN,IAAI,CAACD,SAAS,GAAG,EAAE;QAEnB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAIC,OAAO,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;UAEnCD,OAAO,CAACE,WAAW,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;UACxDH,OAAO,CAACE,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;UACvDH,OAAO,CAACE,WAAW,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;UAExD,IAAI,CAACN,SAAS,CAACE,CAAC,CAAC,GAAGC,OAAO;QAC7B;MACF,CAAC;MAEDC,cAAc,WAAAA,eAAA,EAAG;QACf,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;MACzC,CAAC;MAEDC,YAAY,WAAAA,aAAA,EAAG;QACb,OAAO,IAAI,CAACR,SAAS;MACvB,CAAC;MAEDS,QAAQ,WAAAA,SAAA,EAAG;QACT,IAAI,CAACC,aAAa,CAAC,WAAW,CAAC;MACjC,CAAC;MAEDJ,aAAa,WAAAA,cAACK,CAAC,EAAE;QACf,IAAIR,OAAO,GAAGQ,CAAC;QACf,IAAIrB,IAAI,GAAGqB,CAAC,CAACC,OAAO,CAAC,CAAC;QAEtB5B,EAAE,CAAC6B,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,YAAY;UAC9B,IAAI,CAACC,MAAM,CAAC,YAAY;YACtB,IAAI,CAACC,IAAI,CAAC,kBAAkB,GAAG3B,IAAI,GAAG,GAAG,GAAGa,OAAO,CAACe,aAAa,CAAC,CAAC,CAAC;UACtE,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,IAAI,CAAC;MACV,CAAC;MAEDC,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,IAAI,IAAI,CAACC,OAAO,CAAC,CAAC,EAAE;UAClB,IAAI,CAACC,eAAe,CAAC,CAAC;UACtB;QACF;QAEA,IAAIC,cAAc,GAAG,CAAC;QAEtB,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,SAAS,CAACuB,MAAM,EAAErB,CAAC,EAAE,EAAE;UAC9C,IAAIC,OAAO,GAAG,IAAI,CAACH,SAAS,CAACE,CAAC,CAAC;UAE/BC,OAAO,CAACqB,YAAY,CAAC,MAAM,EAAE,MAAM,GAAGtB,CAAC,CAAC;UAExCC,OAAO,CAACE,WAAW,CACjB,WAAW,EACX,UAAUM,CAAC,EAAE;YACXW,cAAc,EAAE;YAEhB,IAAIG,QAAQ,GAAGzC,EAAE,CAAC0C,IAAI,CAACC,IAAI,CAACC,KAAK,CAACjB,CAAC,CAACkB,UAAU,CAAC,CAAC,CAAC;YACjD1B,OAAO,GAAGQ,CAAC,CAACmB,SAAS,CAAC,CAAC;YACvB,IAAI,CAACC,YAAY,CAAC5B,OAAO,CAAC6B,YAAY,CAAC,MAAM,CAAC,EAAEP,QAAQ,CAAC,MAAM,CAAC,CAAC;UACnE,CAAC,EACD,IACF,CAAC;UAEDtB,OAAO,CAAC8B,IAAI,CAAC,CAAC;QAChB;QAEA,IAAIC,IAAI,GAAG,IAAI;QACf,IAAI,CAACC,IAAI,CAAC,IAAI,EAAE,YAAY;UAC1BD,IAAI,CAACH,YAAY,CAAC7B,CAAC,EAAEoB,cAAc,CAAC;QACtC,CAAC,CAAC;MACJ,CAAC;MAEDc,sBAAsB,WAAAA,uBAAA,EAAG;QACvB,IAAI,IAAI,CAAChB,OAAO,CAAC,CAAC,EAAE;UAClB,IAAI,CAACC,eAAe,CAAC,CAAC;UACtB;QACF;QAEA,IAAIgB,GAAG,GAAG,IAAI,CAACC,MAAM,CAAC,sCAAsC,CAAC;QAC7D,IAAInC,OAAO,GAAG,IAAInB,EAAE,CAACa,EAAE,CAAC0C,MAAM,CAACC,OAAO,CAACH,GAAG,EAAE,KAAK,EAAE,YAAY,CAAC;QAChElC,OAAO,CAACE,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;QACvDH,OAAO,CAACE,WAAW,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;QAExDH,OAAO,CAACE,WAAW,CACjB,WAAW,EACX,UAAUM,CAAC,EAAE;UACX,MAAM,IAAIJ,KAAK,CAAC,qBAAqB,CAAC;QACxC,CAAC,EACD,IACF,CAAC;QAEDJ,OAAO,CAACE,WAAW,CACjB,SAAS,EACT,UAAUM,CAAC,EAAE;UACX,IAAI,CAACK,MAAM,CAAC,YAAY;YACtB,IAAI,CAACe,YAAY,CAAC5B,OAAO,EAAEQ,CAAC,CAACmB,SAAS,CAAC,CAAC,CAAC;YACzC3B,OAAO,CAACsC,OAAO,CAAC,CAAC;UACnB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,EACD,IACF,CAAC;QAEDtC,OAAO,CAAC8B,IAAI,CAAC,CAAC;QAEd,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC;MACjB;IACF;EACF,CAAC,CAAC;EA5IFnD,EAAE,CAACY,IAAI,CAACC,EAAE,CAAC0C,MAAM,CAACG,eAAe,CAACvD,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}