{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "test",
    "io",
    "MRemoteTest",
    "members",
    "setUp",
    "require",
    "res",
    "rest",
    "Resource",
    "tearDown",
    "dispose",
    "testInvokeActionAndHandleResponse",
    "_this",
    "url",
    "getUrl",
    "map",
    "addListener",
    "e",
    "resume",
    "assertEquals",
    "getData",
    "get",
    "wait",
    "testInvokeActionAndHandleFailure",
    "_this2",
    "getPhase",
    "getAction",
    "testPollAction",
    "_this3",
    "count",
    "previousResponse",
    "response",
    "assert",
    "length",
    "assertNotEquals",
    "poll",
    "testLongPoll",
    "_this4",
    "responses",
    "push",
    "parseFloat",
    "longPoll",
    "ResourceWithRemote"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/io/rest/ResourceWithRemote.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/xmlhttp/random.php)\n * @asset(qx/test/xmlhttp/long_poll.php)\n * @asset(qx/test/xmlhttp/sample.txt)\n */\n\nqx.Class.define(\"qx.test.io.rest.ResourceWithRemote\", {\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.dev.unit.MRequirements, qx.test.io.MRemoteTest],\n\n  members: {\n    setUp() {\n      this.require([\"http\", \"php\"]);\n      this.res = new qx.io.rest.Resource();\n    },\n\n    tearDown() {\n      this.res.dispose();\n    },\n\n    \"test: invoke action and handle response\"() {\n      // Handles GET\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\"),\n        res = this.res;\n\n      res.map(\"get\", \"GET\", url);\n      res.addListener(\"getSuccess\", e => {\n        this.resume(function () {\n          this.assertEquals(\"SAMPLE\", e.getData());\n        }, this);\n      });\n\n      res.get();\n      this.wait();\n    },\n\n    \"test: invoke action and handle failure\"() {\n      this.require([\"http\"]);\n\n      var url = \"/not-found\",\n        res = this.res;\n\n      res.map(\"get\", \"GET\", url);\n      res.addListener(\"error\", e => {\n        this.resume(function () {\n          this.assertEquals(\"statusError\", e.getPhase());\n          this.assertEquals(\"get\", e.getAction());\n        }, this);\n      });\n\n      res.get();\n      this.wait();\n    },\n\n    \"test: poll action\"() {\n      // Handles GET\n      this.require([\"php\"]);\n      var url = this.getUrl(\"qx/test/xmlhttp/random.php\"),\n        res = this.res,\n        count = 0,\n        previousResponse = \"\";\n\n      res.map(\"get\", \"GET\", url);\n\n      // Response headers must contain explicit cache control for this\n      // to work in IE\n      res.addListener(\"getSuccess\", e => {\n        var response = e.getData();\n        count++;\n\n        this.assert(response.length === 32, \"Response must be MD5\");\n        this.assertNotEquals(\n          previousResponse,\n          response,\n          \"Response must be different from previous\"\n        );\n\n        previousResponse = response;\n\n        if (count >= 10) {\n          this.resume();\n        }\n      });\n\n      res.poll(\"get\", 100);\n      this.wait();\n    },\n\n    \"test: long poll\"() {\n      this.require([\"php\"]);\n      var res = this.res,\n        url = this.getUrl(\"qx/test/xmlhttp/long_poll.php\"),\n        count = 0,\n        responses = [];\n\n      res.map(\"get\", \"GET\", url);\n      res.addListener(\"getSuccess\", e => {\n        var response = e.getData();\n        responses.push(response);\n\n        if (++count >= 5) {\n          this.resume(function () {\n            this.assert(\n              parseFloat(responses[4]) > parseFloat(responses[0]),\n              \"Must increase\"\n            );\n          }, this);\n        }\n      });\n\n      res.longPoll(\"get\");\n      this.wait();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}