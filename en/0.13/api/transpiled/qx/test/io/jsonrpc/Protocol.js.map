{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MAssert",
    "construct",
    "constructor",
    "call",
    "parser",
    "jsonrpc",
    "protocol",
    "Parser",
    "members",
    "test_JSONRPC_request_message_object",
    "message",
    "Request",
    "expected",
    "id",
    "method",
    "params",
    "assertDeepEquals",
    "toObject",
    "parse",
    "JSON",
    "stringify",
    "test_JSONRPC_request_notification_object",
    "Notification",
    "test_JSONRPC_error_object",
    "Error",
    "error",
    "code",
    "test_JSONRPC_result_object",
    "Protocol"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/io/jsonrpc/Protocol.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.io.jsonrpc.Protocol\", {\n  extend: qx.dev.unit.TestCase,\n  include: [qx.test.io.MAssert],\n  construct() {\n    super();\n    this.parser = new qx.io.jsonrpc.protocol.Parser();\n  },\n  members: {\n    \"test: JSON-RPC request message object\"() {\n      let message = new qx.io.jsonrpc.protocol.Request(\"foo\", [\n        \"bar\",\n        1,\n        false\n      ]);\n\n      let expected = {\n        id: 1,\n        jsonrpc: \"2.0\",\n        method: \"foo\",\n        params: [\"bar\", 1, false]\n      };\n\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(\n        expected,\n        this.parser.parse(JSON.stringify(expected)).toObject()\n      );\n    },\n\n    \"test: JSON-RPC request notification object\"() {\n      let message = new qx.io.jsonrpc.protocol.Notification(\"foo\", [\n        \"bar\",\n        1,\n        false\n      ]);\n\n      let expected = {\n        jsonrpc: \"2.0\",\n        method: \"foo\",\n        params: [\"bar\", 1, false]\n      };\n\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(\n        expected,\n        this.parser.parse(JSON.stringify(expected)).toObject()\n      );\n    },\n\n    \"test: JSON-RPC error object\"() {\n      let message = new qx.io.jsonrpc.protocol.Error(1, 5, \"error!\");\n      let expected = {\n        jsonrpc: \"2.0\",\n        id: 1,\n        error: {\n          code: 5,\n          message: \"error!\"\n        }\n      };\n\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(\n        expected,\n        this.parser.parse(JSON.stringify(expected)).toObject()\n      );\n    },\n\n    \"test: JSON-RPC result object\"() {\n      let message = new qx.io.jsonrpc.protocol.Error(1, 5, \"error!\");\n      let expected = {\n        jsonrpc: \"2.0\",\n        id: 1,\n        error: {\n          code: 5,\n          message: \"error!\"\n        }\n      };\n\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(\n        expected,\n        this.parser.parse(JSON.stringify(expected)).toObject()\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}