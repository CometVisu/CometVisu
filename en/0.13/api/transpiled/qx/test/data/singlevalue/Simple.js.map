{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "__a",
    "__b",
    "setUp",
    "test",
    "data",
    "singlevalue",
    "TextFieldDummy",
    "tearDown",
    "SingleValueBinding",
    "removeAllBindingsForObject",
    "dispose",
    "testStringPropertyBinding",
    "bind",
    "setAppearance",
    "assertEquals",
    "getAppearance",
    "affe",
    "testBooleanPropertyBinding",
    "setEnabled",
    "assertFalse",
    "getEnabled",
    "testNumberPropertyBinding",
    "setZIndex",
    "getZIndex",
    "testColorPropertyBinding",
    "setBackgroundColor",
    "getBackgroundColor",
    "testWrongPropertyNames",
    "testWrongEventType",
    "testDefaultConversion",
    "s",
    "setFloatt",
    "testRemoveBinding",
    "id",
    "removeBindingFromObject",
    "bindings",
    "getAllBindingsForObject",
    "length",
    "testGetAllBindingsForObject",
    "id2",
    "noBindings",
    "testRemoveAllBindingsForObject",
    "o",
    "core",
    "Object",
    "testGetAllBindings",
    "id1",
    "id3",
    "allBindings",
    "getAllBindings",
    "toHashCode",
    "testDebugStuff",
    "showBindingInLog",
    "testMixinSupport",
    "removeBinding",
    "getBindings",
    "removeAllBindings",
    "testDebugListenerMessages",
    "DEBUG_ON",
    "testFallback",
    "setValue",
    "getValue",
    "testNullWithConverter",
    "setA",
    "getA",
    "t",
    "Test",
    "options",
    "converter",
    "testCallbacksOnInitialSet",
    "properties",
    "value",
    "init",
    "validate",
    "util",
    "Validate",
    "string",
    "target",
    "Target",
    "ok",
    "fail",
    "that",
    "onUpdate",
    "sourceObject",
    "targetObject",
    "onSetFail",
    "assertTrue",
    "testConversionClass",
    "a",
    "event",
    "nullable",
    "b",
    "TwoProperties",
    "Conversion",
    "TOSTRINGOPTIONS",
    "getB",
    "Date",
    "lang",
    "Type",
    "isString",
    "TONUMBEROPTIONS",
    "TOBOOLEANOPTIONS",
    "testResetNotNull",
    "x",
    "SVB",
    "setX",
    "getX",
    "undefine",
    "testResetNotNullInit",
    "testChangeEventMissing",
    "assertException",
    "AssertionError",
    "testConverterParam",
    "self",
    "model",
    "source",
    "testWrongArguments",
    "require",
    "undefined",
    "testRemoveRelatedBindings",
    "c",
    "bindingsA",
    "bindingsB",
    "removeRelatedBindings",
    "testNonExistingSetup",
    "marshal",
    "Json",
    "createModel",
    "assertNull",
    "getTarget",
    "setB",
    "testNonExistingSetupDeep",
    "d",
    "e",
    "setC",
    "f",
    "testNonExistingChange",
    "bb",
    "getBb",
    "testNonExistingChangeDeep",
    "Simple"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/data/singlevalue/Simple.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Test-Class for testing the single value binding\n *\n * @ignore(qx.test.SVB)\n * @ignore(qx.test.TwoProperties)\n * @ignore(qx.Target)\n * @ignore(qx.Test)\n */\nqx.Class.define(\"qx.test.data.singlevalue.Simple\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.dev.unit.MRequirements,\n\n  members: {\n    __a: null,\n    __b: null,\n\n    setUp() {\n      // create the widgets\n      this.__a = new qx.test.data.singlevalue.TextFieldDummy();\n      this.__b = new qx.test.data.singlevalue.TextFieldDummy();\n    },\n\n    tearDown() {\n      qx.data.SingleValueBinding.removeAllBindingsForObject(this.__a);\n      qx.data.SingleValueBinding.removeAllBindingsForObject(this.__b);\n      this.__a.dispose();\n      this.__b.dispose();\n    },\n\n    testStringPropertyBinding() {\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.__a.setAppearance(\"affe\");\n      this.assertEquals(\n        \"affe\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      var affe = new qx.test.data.singlevalue.TextFieldDummy();\n      affe.setAppearance(\"Jonny\");\n      qx.data.SingleValueBinding.bind(\n        affe,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.assertEquals(\n        \"Jonny\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(affe);\n      affe.dispose();\n    },\n\n    testBooleanPropertyBinding() {\n      qx.data.SingleValueBinding.bind(this.__a, \"enabled\", this.__b, \"enabled\");\n      this.__a.setEnabled(false);\n      this.assertFalse(this.__b.getEnabled(), \"Boolean binding does not work!\");\n    },\n\n    testNumberPropertyBinding() {\n      qx.data.SingleValueBinding.bind(this.__a, \"zIndex\", this.__b, \"zIndex\");\n      this.__a.setZIndex(2456);\n      this.assertEquals(\n        2456,\n        this.__b.getZIndex(),\n        \"Number binding does not work!\"\n      );\n    },\n\n    testColorPropertyBinding() {\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"backgroundColor\",\n        this.__b,\n        \"backgroundColor\"\n      );\n\n      this.__a.setBackgroundColor(\"red\");\n      this.assertEquals(\n        \"red\",\n        this.__b.getBackgroundColor(),\n        \"Color binding does not work!\"\n      );\n    },\n\n    testWrongPropertyNames() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        var a = this.__a;\n        var b = this.__b;\n\n        // only in source version\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          // wrong source\n          this.assertException(\n            function () {\n              qx.data.SingleValueBinding.bind(\n                a,\n                \"BacccccckgroundColor\",\n                b,\n                \"backgroundColor\"\n              );\n            },\n            qx.core.AssertionError,\n            null,\n            \"Not a wrong property name? (source)\"\n          );\n        }\n      }\n    },\n\n    testWrongEventType() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        var a = this.__a;\n        var b = this.__b;\n\n        // only in source version\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          // wrong eventName\n          this.assertException(\n            function () {\n              qx.data.SingleValueBinding.bind(a, \"affe\", b, \"backgroundColor\");\n            },\n            null,\n            null,\n            \"Not a wrong event name? (source)\"\n          );\n        }\n      }\n    },\n\n    testDefaultConversion() {\n      // String to number\n      this.__a.setAppearance(\"0\");\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"zIndex\"\n      );\n\n      this.__a.setAppearance(\"4879\");\n      this.assertEquals(\n        4879,\n        this.__b.getZIndex(),\n        \"String --> Number does not work!\"\n      );\n\n      // number to String\n      this.__a.setZIndex(568);\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"zIndex\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.__a.setZIndex(1234);\n      this.assertEquals(\n        \"1234\",\n        this.__b.getAppearance(),\n        \"Number --> String does not work!\"\n      );\n\n      // boolean to string\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"enabled\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.__a.setEnabled(true);\n      this.assertEquals(\n        \"true\",\n        this.__b.getAppearance(),\n        \"Boolean --> String does not work!\"\n      );\n\n      // string to float\n      var s = new qx.test.data.singlevalue.TextFieldDummy();\n      s.setFloatt(0);\n\n      qx.data.SingleValueBinding.bind(s, \"floatt\", this.__b, \"appearance\");\n      s.setFloatt(13.5);\n      this.assertEquals(\n        \"13.5\",\n        this.__b.getAppearance(),\n        \"Float --> String does not work!\"\n      );\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(s);\n      s.dispose();\n    },\n\n    testRemoveBinding() {\n      // add a binding\n      var id = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      // set and chech the name\n      this.__a.setAppearance(\"hans\");\n      this.assertEquals(\n        \"hans\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      // remove the binding\n      qx.data.SingleValueBinding.removeBindingFromObject(this.__a, id);\n      // set and chech the name\n      this.__a.setAppearance(\"hans2\");\n      this.assertEquals(\n        \"hans\",\n        this.__b.getAppearance(),\n        \"Did not remove the binding!\"\n      );\n\n      // test if the binding is not listed anymore\n      var bindings = qx.data.SingleValueBinding.getAllBindingsForObject(\n        this.__a\n      );\n\n      this.assertEquals(0, bindings.length, \"Binding still in the registry!\");\n\n      // only in source version\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // test wrong binding id\n        var a = this.__a;\n        this.assertException(\n          function () {\n            qx.data.SingleValueBinding.removeBindingFromObject(a, null);\n          },\n          Error,\n          null,\n          \"No exception thrown.\"\n        );\n      }\n    },\n\n    testGetAllBindingsForObject() {\n      // add two binding\n      var id = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      var id2 = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"zIndex\",\n        this.__b,\n        \"zIndex\"\n      );\n\n      // set and chech the binding\n      this.__a.setAppearance(\"hans\");\n      this.assertEquals(\n        \"hans\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      this.__a.setZIndex(89);\n      this.assertEquals(\n        89,\n        this.__b.getZIndex(),\n        \"Number binding does not work!\"\n      );\n\n      // check the method\n      var bindings = qx.data.SingleValueBinding.getAllBindingsForObject(\n        this.__a\n      );\n\n      this.assertEquals(2, bindings.length, \"There are more than 2 bindings!\");\n      this.assertEquals(id, bindings[0][0], \"Binding 1 not in the array.\");\n      this.assertEquals(id2, bindings[1][0], \"Binding 2 not in the array.\");\n\n      // check for a non existing binding\n      var noBindings = qx.data.SingleValueBinding.getAllBindingsForObject(this);\n      this.assertEquals(0, noBindings.length, \"There are bindings for this?\");\n    },\n\n    testRemoveAllBindingsForObject() {\n      // add two bindings\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      qx.data.SingleValueBinding.bind(this.__a, \"zIndex\", this.__b, \"zIndex\");\n      // set and check the binding\n      this.__a.setAppearance(\"hans\");\n      this.assertEquals(\n        \"hans\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      this.__a.setZIndex(89);\n      this.assertEquals(\n        89,\n        this.__b.getZIndex(),\n        \"Number binding does not work!\"\n      );\n\n      // remove the bindings at once\n      qx.data.SingleValueBinding.removeAllBindingsForObject(this.__a);\n\n      // set and check the binding\n      this.__a.setAppearance(\"hans2\");\n      this.assertEquals(\n        \"hans\",\n        this.__b.getAppearance(),\n        \"String binding not removed!\"\n      );\n\n      this.__a.setZIndex(892);\n      this.assertEquals(\n        89,\n        this.__b.getZIndex(),\n        \"Number binding not removed!\"\n      );\n\n      // check if they are internally removed\n      var bindings = qx.data.SingleValueBinding.getAllBindingsForObject(\n        this.__a\n      );\n\n      this.assertEquals(0, bindings.length, \"Still bindings there!\");\n\n      // check if a remove of an object without a binding works\n      var o = new qx.core.Object();\n      o.dispose();\n\n      // only test in the source version\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // test for null object\n        this.assertException(\n          function () {\n            qx.data.SingleValueBinding.removeAllBindingsForObject(null);\n          },\n          qx.core.AssertionError,\n          null,\n          \"Null is not possible!\"\n        );\n      }\n    },\n\n    testGetAllBindings() {\n      // add three bindings\n      var id1 = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      var id2 = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"zIndex\",\n        this.__b,\n        \"zIndex\"\n      );\n\n      var id3 = qx.data.SingleValueBinding.bind(\n        this.__b,\n        \"zIndex\",\n        this.__a,\n        \"zIndex\"\n      );\n\n      // get all bindings\n      var allBindings = qx.data.SingleValueBinding.getAllBindings();\n\n      // check for the binding ids\n      this.assertEquals(\n        id1,\n        allBindings[this.__a.toHashCode()][0][0],\n        \"This id should be in!\"\n      );\n\n      this.assertEquals(\n        id2,\n        allBindings[this.__a.toHashCode()][1][0],\n        \"This id should be in!\"\n      );\n\n      this.assertEquals(\n        id3,\n        allBindings[this.__b.toHashCode()][0][0],\n        \"This id should be in!\"\n      );\n\n      // check for the length\n      this.assertEquals(\n        2,\n        allBindings[this.__a.toHashCode()].length,\n        \"Not the right amount in the data!\"\n      );\n\n      this.assertEquals(\n        1,\n        allBindings[this.__b.toHashCode()].length,\n        \"Not the right amount in the data!\"\n      );\n    },\n\n    testDebugStuff() {\n      // just a test if the method runs threw without an exception\n      var id1 = qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      qx.data.SingleValueBinding.bind(this.__a, \"zIndex\", this.__b, \"zIndex\");\n      qx.data.SingleValueBinding.bind(\n        this.__b,\n        \"appearance\",\n        this.__a,\n        \"appearance\"\n      );\n\n      qx.data.SingleValueBinding.bind(this.__b, \"zIndex\", this.__a, \"zIndex\");\n      // test the single log\n      qx.data.SingleValueBinding.showBindingInLog(this.__a, id1);\n    },\n\n    testMixinSupport() {\n      // create a new Binding\n      var id1 = this.__a.bind(\"appearance\", this.__b, \"appearance\");\n      this.__a.setAppearance(\"hulk\");\n      this.assertEquals(\n        \"hulk\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      // remove the binding\n      this.__a.removeBinding(id1);\n      this.__a.setAppearance(\"hulk2\");\n      this.assertEquals(\n        \"hulk\",\n        this.__b.getAppearance(),\n        \"Unbinding does not work!\"\n      );\n\n      // add another two bindings\n      var id1 = this.__a.bind(\"changeAppearance\", this.__b, \"appearance\");\n      var id2 = this.__a.bind(\"zIndex\", this.__b, \"zIndex\");\n\n      // get the current bindings\n      var bindings = this.__a.getBindings();\n      this.assertEquals(id1, bindings[0][0], \"First binding is not there.\");\n      this.assertEquals(id2, bindings[1][0], \"Second binding is not there.\");\n\n      // remove all bindings\n      this.__a.removeAllBindings();\n      var bindings = this.__a.getBindings();\n      this.assertEquals(0, bindings.length, \"Still bindings there?\");\n    },\n\n    testDebugListenerMessages() {\n      // enable debugging\n      qx.data.SingleValueBinding.DEBUG_ON = true;\n\n      // just do some bindings and invoke the changes\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.__a.setAppearance(\"affe\");\n      this.assertEquals(\n        \"affe\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      var affe = new qx.test.data.singlevalue.TextFieldDummy();\n      affe.setAppearance(\"Jonny\");\n      qx.data.SingleValueBinding.bind(\n        affe,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      this.assertEquals(\n        \"Jonny\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(affe);\n      affe.dispose();\n    },\n\n    testFallback() {\n      // change + \"name\" binding\n      this.__a.bind(\"value\", this.__b, \"value\");\n\n      this.__a.setValue(\"affe\");\n      this.assertEquals(\n        this.__a.getValue(),\n        this.__b.getValue(),\n        \"change event binding is not working.\"\n      );\n\n      // event binding\n      this.__a.bind(\"changeZIndex\", this.__b, \"zIndex\");\n\n      this.__a.setZIndex(123);\n      this.assertEquals(\n        this.__a.getZIndex(),\n        this.__b.getZIndex(),\n        \"Event binding is not working.\"\n      );\n    },\n\n    testNullWithConverter() {\n      // create a test class\n      qx.Class.define(\"qx.Test\", {\n        extend: qx.core.Object,\n        members: {\n          __a: null,\n          setA(data) {\n            this.__a = data;\n          },\n          getA() {\n            return this.__a;\n          }\n        }\n      });\n\n      var t = new qx.Test();\n\n      // define the converter\n      var options = {\n        converter(data) {\n          if (data == null) {\n            return \"affe\";\n          }\n          return data + \"\";\n        }\n      };\n\n      // starting point\n      this.__a.setZIndex(null);\n      this.__a.bind(\"zIndex\", t, \"a\", options);\n      this.assertEquals(\"affe\", t.getA(), \"Converter will not be executed.\");\n\n      this.__a.setZIndex(10);\n      this.assertEquals(\n        this.__a.getZIndex() + \"\",\n        t.getA(),\n        \"Wrong start binding.\"\n      );\n\n      // set the zIndex to null\n      this.__a.setZIndex(null);\n      this.assertEquals(\"affe\", t.getA(), \"Converter will not be executed.\");\n\n      t.dispose();\n    },\n\n    testCallbacksOnInitialSet() {\n      // create a test class\n      qx.Class.define(\"qx.Target\", {\n        extend: qx.core.Object,\n\n        properties: {\n          value: {\n            init: \"Some String!\",\n            validate: qx.util.Validate.string()\n          }\n        }\n      });\n\n      var target = new qx.Target();\n\n      // some test flags\n      var ok = false;\n      var fail = false;\n\n      // callback methods\n      var that = this;\n      var options = {\n        onUpdate(sourceObject, targetObject, value) {\n          ok = true;\n          that.assertEquals(sourceObject, that.__a, \"Wrong source object.\");\n          that.assertEquals(targetObject, target, \"Wrong target object.\");\n          that.assertEquals(value, \"affe\", \"Wrong value.\");\n        },\n        onSetFail() {\n          fail = true;\n        }\n      };\n\n      // set a valid initial value\n      this.__a.setValue(\"affe\");\n      this.__a.bind(\"value\", target, \"value\", options);\n\n      this.assertEquals(\"affe\", target.getValue(), \"Binding not set anyway!\");\n      this.assertTrue(ok, \"onUpdate not called.\");\n      this.assertFalse(fail, \"onSetFail called?!\");\n\n      // reset the checks\n      this.__a.removeAllBindings();\n      ok = false;\n      fail = false;\n\n      // set an invalid initial value\n      this.__a.setZIndex(10);\n      this.__a.bind(\"zIndex\", target, \"value\", options);\n\n      this.assertTrue(fail, \"onSetFail not called.\");\n      this.assertFalse(ok, \"onUpdate called?!\");\n      target.dispose();\n    },\n\n    testConversionClass() {\n      qx.Class.define(\"qx.test.TwoProperties\", {\n        extend: qx.core.Object,\n        properties: {\n          a: { event: \"changeA\", nullable: true },\n          b: { event: \"changeB\", nullable: true }\n        }\n      });\n\n      var o = new qx.test.TwoProperties();\n\n      // number to string\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TOSTRINGOPTIONS\n      );\n\n      o.setA(10);\n      this.assertEquals(\"10\", o.getB(), \"Number -> String\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n\n      // boolean to string\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TOSTRINGOPTIONS\n      );\n\n      o.setA(true);\n      this.assertEquals(\"true\", o.getB(), \"Boolean -> String\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n\n      // date to string\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TOSTRINGOPTIONS\n      );\n\n      o.setA(new Date());\n      this.assertTrue(qx.lang.Type.isString(o.getB()), \"Date -> String\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n\n      // string to number\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TONUMBEROPTIONS\n      );\n\n      o.setA(\"123\");\n      this.assertEquals(123, o.getB(), \"String -> Number\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n\n      // string to boolean\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TOBOOLEANOPTIONS\n      );\n\n      o.setA(\"123\");\n      this.assertEquals(true, o.getB(), \"String -> Boolean\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n\n      // number to boolean\n      var id = qx.data.SingleValueBinding.bind(\n        o,\n        \"a\",\n        o,\n        \"b\",\n        qx.data.Conversion.TOBOOLEANOPTIONS\n      );\n\n      o.setA(0);\n      this.assertEquals(false, o.getB(), \"Number -> Boolean\");\n      qx.data.SingleValueBinding.removeBindingFromObject(o, id);\n      o.dispose();\n    },\n\n    testResetNotNull() {\n      qx.Class.define(\"qx.test.SVB\", {\n        extend: qx.core.Object,\n        properties: {\n          x: {\n            nullable: true,\n            init: \"affe\",\n            event: \"changeX\"\n          }\n        }\n      });\n\n      var a = new qx.test.SVB();\n      var b = new qx.test.SVB();\n\n      a.bind(\"x\", b, \"x\");\n\n      a.setX(\"x\");\n      this.assertEquals(a.getX(), b.getX());\n      a.setX(null);\n      this.assertEquals(a.getX(), b.getX());\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(a);\n      qx.data.SingleValueBinding.removeAllBindingsForObject(b);\n      a.dispose();\n      b.dispose();\n      qx.Class.undefine(\"qx.test.SVB\");\n    },\n\n    testResetNotNullInit() {\n      qx.Class.define(\"qx.test.SVB\", {\n        extend: qx.core.Object,\n        properties: {\n          x: {\n            nullable: true,\n            init: \"affe\",\n            event: \"changeX\"\n          }\n        }\n      });\n\n      var a = new qx.test.SVB();\n      var b = new qx.test.SVB();\n\n      a.setX(null);\n      b.setX(\"x\");\n      qx.data.SingleValueBinding.bind(a, \"x\", b, \"x\");\n\n      this.assertEquals(a.getX(), b.getX());\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(a);\n      qx.data.SingleValueBinding.removeAllBindingsForObject(b);\n\n      a.dispose();\n      b.dispose();\n      qx.Class.undefine(\"qx.test.SVB\");\n    },\n\n    testChangeEventMissing() {\n      qx.Class.define(\"qx.test.SVB\", {\n        extend: qx.core.Object,\n        properties: {\n          x: {\n            nullable: true,\n            init: \"affe\"\n          }\n        }\n      });\n\n      var a = new qx.test.SVB();\n      var b = new qx.test.SVB();\n\n      this.assertException(\n        function () {\n          qx.data.SingleValueBinding.bind(a, \"x\", b, \"x\");\n        },\n        qx.core.AssertionError,\n        \"Binding property x of object qx.test.SVB\"\n      );\n\n      qx.data.SingleValueBinding.removeAllBindingsForObject(a);\n      qx.data.SingleValueBinding.removeAllBindingsForObject(b);\n\n      a.dispose();\n      b.dispose();\n      qx.Class.undefine(\"qx.test.SVB\");\n    },\n\n    testConverterParam() {\n      var self = this;\n      var options = {\n        converter(data, model, source, target) {\n          // will be called twice (init and set)\n          self.assertEquals(self.__a, source);\n          self.assertEquals(self.__b, target);\n          return data;\n        }\n      };\n\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\",\n        options\n      );\n\n      this.__a.setAppearance(\"affe\");\n      this.assertEquals(\n        \"affe\",\n        this.__b.getAppearance(),\n        \"String binding does not work!\"\n      );\n    },\n\n    testWrongArguments() {\n      this.require([\"qx.debug\"]);\n\n      this.assertException(\n        function () {\n          qx.data.SingleValueBinding.bind(\n            this.__a,\n            \"appearance\",\n            this.__b,\n            undefined\n          );\n        },\n        qx.core.AssertionError,\n        \"\"\n      );\n\n      this.assertException(\n        function () {\n          qx.data.SingleValueBinding.bind(\n            this.__a,\n            \"appearance\",\n            undefined,\n            \"appearance\"\n          );\n        },\n        qx.core.AssertionError,\n        \"\"\n      );\n\n      this.assertException(\n        function () {\n          qx.data.SingleValueBinding.bind(\n            this.__a,\n            undefined,\n            this.__b,\n            \"appearance\"\n          );\n        },\n        qx.core.AssertionError,\n        \"\"\n      );\n\n      this.assertException(\n        function () {\n          qx.data.SingleValueBinding.bind(\n            undefined,\n            \"appearance\",\n            this.__b,\n            \"appearance\"\n          );\n        },\n        qx.core.AssertionError,\n        \"\"\n      );\n    },\n\n    testRemoveRelatedBindings() {\n      var c = new qx.test.data.singlevalue.TextFieldDummy();\n\n      // add three bindings\n      qx.data.SingleValueBinding.bind(\n        this.__a,\n        \"appearance\",\n        this.__b,\n        \"appearance\"\n      );\n\n      qx.data.SingleValueBinding.bind(this.__a, \"zIndex\", this.__b, \"zIndex\");\n      qx.data.SingleValueBinding.bind(this.__b, \"zIndex\", this.__a, \"zIndex\");\n\n      // add another binding to __a, which should not be affected\n      qx.data.SingleValueBinding.bind(c, \"appearance\", this.__a, \"appearance\");\n\n      // add another binding to __b, which should not be affected\n      qx.data.SingleValueBinding.bind(c, \"appearance\", this.__b, \"appearance\");\n\n      // check if the bindings are there\n      var bindingsA = qx.data.SingleValueBinding.getAllBindingsForObject(\n        this.__a\n      );\n\n      var bindingsB = qx.data.SingleValueBinding.getAllBindingsForObject(\n        this.__b\n      );\n\n      this.assertEquals(4, bindingsA.length, \"There are more than 4 bindings!\");\n      this.assertEquals(4, bindingsB.length, \"There are more than 3 bindings!\");\n\n      // remove related bindings between __a and __b, do not affect bindings to c\n      qx.data.SingleValueBinding.removeRelatedBindings(this.__a, this.__b);\n\n      // __a object should have one binding to object c\n      bindingsA = qx.data.SingleValueBinding.getAllBindingsForObject(this.__a);\n      this.assertEquals(1, bindingsA.length, \"There must be one binding!\");\n      this.assertTrue(\n        bindingsA[0][1] === c,\n        \"Source object of the binding must be object 'c'!\"\n      );\n\n      // __b object should have one binding to object c\n      bindingsB = qx.data.SingleValueBinding.getAllBindingsForObject(this.__b);\n      this.assertEquals(1, bindingsB.length, \"There must be one binding!\");\n      this.assertTrue(\n        bindingsA[0][1] === c,\n        \"Source object of the binding must be object 'c'!\"\n      );\n    },\n\n    testNonExistingSetup() {\n      var a = qx.data.marshal.Json.createModel({ b: {}, target: null });\n\n      qx.data.SingleValueBinding.bind(a, \"b.c\", a, \"target\");\n      this.assertNull(a.getTarget());\n\n      a.setB(qx.data.marshal.Json.createModel({ c: \"txt\" }));\n      this.assertEquals(\"txt\", a.getTarget());\n    },\n\n    testNonExistingSetupDeep() {\n      var a = qx.data.marshal.Json.createModel({\n        b: { c: { d: { e: {} } } },\n        target: null\n      });\n\n      qx.data.SingleValueBinding.bind(a, \"b.c.d.e.f\", a, \"target\");\n      this.assertNull(a.getTarget());\n\n      a.getB().setC(\n        qx.data.marshal.Json.createModel({ d: { e: { f: \"txt\" } } })\n      );\n\n      this.assertEquals(\"txt\", a.getTarget());\n    },\n\n    testNonExistingChange() {\n      var a = qx.data.marshal.Json.createModel({\n        b: { c: \"txt\" },\n        bb: {},\n        target: null\n      });\n\n      qx.data.SingleValueBinding.bind(a, \"b.c\", a, \"target\");\n      this.assertEquals(\"txt\", a.getTarget());\n\n      a.setB(a.getBb());\n      this.assertNull(a.getTarget());\n    },\n\n    testNonExistingChangeDeep() {\n      var a = qx.data.marshal.Json.createModel({\n        b: { c: { d: { e: { f: \"txt\" } } } },\n        target: null\n      });\n\n      qx.data.SingleValueBinding.bind(a, \"b.c.d.e.f\", a, \"target\");\n      this.assertEquals(\"txt\", a.getTarget());\n\n      a.getB().setC(qx.data.marshal.Json.createModel({ d: { e: {} } }));\n      this.assertNull(a.getTarget());\n\n      a.getB().setC(qx.data.marshal.Json.createModel({ d: {} }));\n      this.assertNull(a.getTarget());\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}