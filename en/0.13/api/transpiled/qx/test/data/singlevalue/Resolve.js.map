{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testResolveDepth1",
    "model",
    "data",
    "marshal",
    "Json",
    "createModel",
    "a",
    "assertEquals",
    "SingleValueBinding",
    "resolvePropertyChain",
    "dispose",
    "testResolveDepth2",
    "b",
    "testResolveDepthHuge",
    "c",
    "d",
    "e",
    "f",
    "testResolveArrayIndex",
    "arr",
    "Array",
    "testResolveWithArray",
    "testResolveNestedArray",
    "testResolveNotExistant",
    "assertException",
    "test",
    "singlevalue",
    "Resolve"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/data/singlevalue/Resolve.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * testResolve-Class for testResolveing the single value binding\n */\nqx.Class.define(\"qx.test.data.singlevalue.Resolve\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testResolveDepth1() {\n      var model = qx.data.marshal.Json.createModel({ a: 12 });\n      this.assertEquals(\n        12,\n        qx.data.SingleValueBinding.resolvePropertyChain(model, \"a\")\n      );\n\n      model.dispose();\n    },\n\n    testResolveDepth2() {\n      var model = qx.data.marshal.Json.createModel({ a: { b: 12 } });\n      this.assertEquals(\n        12,\n        qx.data.SingleValueBinding.resolvePropertyChain(model, \"a.b\")\n      );\n\n      model.dispose();\n    },\n\n    testResolveDepthHuge() {\n      var model = qx.data.marshal.Json.createModel({\n        a: { b: { c: { d: { e: { f: 12 } } } } }\n      });\n\n      this.assertEquals(\n        12,\n        qx.data.SingleValueBinding.resolvePropertyChain(model, \"a.b.c.d.e.f\")\n      );\n\n      model.dispose();\n    },\n\n    testResolveArrayIndex() {\n      var arr = new qx.data.Array([23]);\n      this.assertEquals(\n        23,\n        qx.data.SingleValueBinding.resolvePropertyChain(arr, \"[0]\")\n      );\n    },\n\n    testResolveWithArray() {\n      var model = qx.data.marshal.Json.createModel({ a: { b: [{ c: 12 }] } });\n      this.assertEquals(\n        12,\n        qx.data.SingleValueBinding.resolvePropertyChain(model, \"a.b[0].c\")\n      );\n\n      model.dispose();\n    },\n\n    testResolveNestedArray() {\n      var model = qx.data.marshal.Json.createModel({ a: [[23]] });\n      this.assertEquals(\n        23,\n        qx.data.SingleValueBinding.resolvePropertyChain(model, \"a[0][0]\")\n      );\n\n      model.dispose();\n    },\n\n    testResolveNotExistant() {\n      var model = qx.data.marshal.Json.createModel({ a: 12 });\n      this.assertException(function () {\n        this.assertEquals(\n          12,\n          qx.data.SingleValueBinding.resolvePropertyChain(model, \"b\")\n        );\n      });\n      model.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}