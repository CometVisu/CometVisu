{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "construct",
    "constructor",
    "call",
    "core",
    "Object",
    "setChildren",
    "data",
    "Array",
    "setAltChildren",
    "properties",
    "children",
    "check",
    "event",
    "nullable",
    "altChildren",
    "name",
    "init",
    "name2",
    "icon",
    "icon2",
    "color",
    "destruct",
    "getChildren",
    "setAutoDisposeItems",
    "dispose",
    "getAltChildren",
    "members",
    "__tree",
    "__model",
    "__controller",
    "__a",
    "__b",
    "__c",
    "setUp",
    "stub",
    "io",
    "ImageLoader",
    "ui",
    "tree",
    "Tree",
    "test",
    "TreeNode",
    "set",
    "push",
    "controller",
    "setIconPath",
    "tearDown",
    "getSandbox",
    "restore",
    "testRemoveBindingsRecursive",
    "remove",
    "cFolder",
    "getRoot",
    "assertNotNull",
    "assertEquals",
    "getLabel",
    "setName",
    "wait",
    "assertTrue",
    "isDisposed",
    "testModelChange",
    "setModel",
    "d",
    "model",
    "testFolderCreation",
    "testFolderLabelInitial",
    "testFolderLabelChangeName",
    "testFolderLabelPropertyChange",
    "setLabelPath",
    "testChildPush",
    "testChildPop",
    "pop",
    "assertUndefined",
    "testChildShift",
    "shift",
    "testChildUnshift",
    "unshift",
    "testTreeDeep",
    "testBig",
    "aa",
    "bb",
    "cc",
    "bbb",
    "AA",
    "testChildReverse",
    "reverse",
    "testChangeChildPath",
    "setChildPath",
    "testChangeTarget",
    "setTarget",
    "assertNull",
    "testChangeModel",
    "a",
    "b",
    "testIconPath",
    "getIcon",
    "testIconPathChange",
    "testIconChange",
    "setIcon",
    "testSelection",
    "setOpen",
    "addToSelection",
    "getSelection",
    "getItem",
    "length",
    "testSelectionBackMultiple",
    "setSelectionMode",
    "testSelectionAfterDelete",
    "temp",
    "splice",
    "contains",
    "testSelectInvisible",
    "testLabelOptions",
    "options",
    "converter",
    "getName2",
    "setLabelOptions",
    "testIconOptions",
    "getName",
    "setIconOptions",
    "testItemWithoutChildren",
    "endNode",
    "TreeEndNode",
    "testSetLateModel",
    "testSetLateTarget",
    "testSetLateTargetAndModel",
    "testSetLateChildPath",
    "testSetLateLabelPath",
    "testSetLateAll",
    "testDelegateConfigure",
    "delegate",
    "configureItem",
    "item",
    "setUserData",
    "setDelegate",
    "getUserData",
    "testDelegateConfigureLate",
    "testDelegateCreateLate",
    "createItem",
    "folder",
    "TreeFolder",
    "testDelegateCreateFirst",
    "destroy",
    "testDelegateBindLate",
    "bindItem",
    "id",
    "bindDefaultProperties",
    "bindProperty",
    "getTextColor",
    "setColor",
    "testDelegateBindFirst",
    "testDelegateBindPropertyReverse",
    "bindPropertyReverse",
    "getAppearance",
    "setAppearance",
    "setBackgroundColor",
    "getColor",
    "testDelegateAddItem",
    "queue",
    "Dispose",
    "flush",
    "testResetModel",
    "resetModel",
    "testChangeChildrenArray",
    "oldChildren",
    "assertNotUndefined",
    "testInheritedChildren",
    "MyTreeNode",
    "testRemoveEvents",
    "nodes",
    "i",
    "parseInt",
    "Math",
    "random",
    "removeAll",
    "testBindItemDouble",
    "self",
    "assertException",
    "Error",
    "g",
    "testBindItemDoubleReverse"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/data/controller/Tree.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.MyTreeNode)\n * @ignore(qx.test.TreeEndNode)\n * @ignore(qx.test.TreeNode)\n */\n\nqx.Class.define(\"qx.test.data.controller.Tree\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.dev.unit.MMock,\n\n  construct() {\n    super();\n\n    // define a test class\n    qx.Class.define(\"qx.test.TreeNode\", {\n      extend: qx.core.Object,\n\n      construct() {\n        super();\n\n        this.setChildren(new qx.data.Array());\n        this.setAltChildren(new qx.data.Array());\n      },\n\n      properties: {\n        children: {\n          check: \"qx.data.Array\",\n          event: \"changeChild\",\n          nullable: true\n        },\n\n        altChildren: {\n          check: \"qx.data.Array\",\n          event: \"changeChild\",\n          nullable: true\n        },\n\n        name: {\n          check: \"String\",\n          init: \"root\",\n          event: \"changeName\"\n        },\n\n        name2: {\n          check: \"String\",\n          init: \"root2\",\n          event: \"changeName\"\n        },\n\n        icon: {\n          check: \"String\",\n          event: \"changeIcon\",\n          nullable: true\n        },\n\n        icon2: {\n          check: \"String\",\n          event: \"changeIcon2\",\n          nullable: true\n        },\n\n        color: {\n          check: \"String\",\n          event: \"changeColor\",\n          init: \"green\",\n          nullable: true\n        }\n      },\n\n      destruct() {\n        if (this.getChildren()) {\n          this.getChildren().setAutoDisposeItems(true);\n          this.getChildren().dispose();\n        }\n        if (this.getAltChildren()) {\n          this.getAltChildren().setAutoDisposeItems(true);\n          this.getAltChildren().dispose();\n        }\n      }\n    });\n  },\n\n  members: {\n    __tree: null,\n    __model: null,\n    __controller: null,\n\n    __a: null,\n    __b: null,\n    __c: null,\n\n    setUp() {\n      // prevent the icon load error with this stub\n      this.stub(qx.io.ImageLoader, \"load\");\n\n      this.__tree = new qx.ui.tree.Tree();\n\n      // create a model\n      //        this.__model\n      //        /    |      \\\n      // this.__a  this.__b  this.__c\n      this.__model = new qx.test.TreeNode();\n\n      this.__a = new qx.test.TreeNode();\n      this.__a.set({\n        name: \"a\",\n        name2: \"a2\",\n        icon: \"icon a\",\n        icon2: \"icon a2\",\n        color: \"red\"\n      });\n\n      this.__b = new qx.test.TreeNode();\n      this.__b.set({\n        name: \"b\",\n        name2: \"b2\",\n        icon: \"icon b\",\n        icon2: \"icon b2\",\n        color: \"blue\"\n      });\n\n      this.__c = new qx.test.TreeNode();\n      this.__c.set({\n        name: \"c\",\n        name2: \"c2\",\n        icon: \"icon c\",\n        icon2: \"icon c2\",\n        color: \"white\"\n      });\n\n      this.__model.getChildren().push(this.__a, this.__b, this.__c);\n      this.__model.getAltChildren().push(this.__c, this.__b, this.__a);\n\n      // create the controller\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setIconPath(\"icon\");\n    },\n\n    tearDown() {\n      this.__controller.dispose();\n      this.__model.dispose();\n      this.__tree.dispose();\n\n      // clear the stub\n      this.getSandbox().restore();\n    },\n\n    testRemoveBindingsRecursive() {\n      // reform the model tree\n      this.__model.getChildren().remove(this.__c);\n      this.__a.getChildren().push(this.__c);\n\n      var cFolder = this.__tree.getRoot().getChildren()[0].getChildren()[0];\n      this.assertNotNull(cFolder, \"Third node does not exist\");\n      this.assertEquals(\"c\", cFolder.getLabel());\n\n      // remove the model node\n      this.__a.getChildren().remove(this.__c);\n      // check if its disposed and the bindings have been removed\n      this.__c.setName(\"affe\");\n      this.assertEquals(\"c\", cFolder.getLabel());\n\n      // destroy is async --> wait for it!\n      this.wait(\n        100,\n        function () {\n          this.assertTrue(cFolder.isDisposed());\n        },\n        this\n      );\n    },\n\n    testModelChange() {\n      // set model to null\n      this.__controller.setModel(null);\n\n      // set the same model again (forces the tree to redraw)\n      this.__controller.setModel(this.__model);\n\n      var d = new qx.test.TreeNode();\n      d.setName(\"d\");\n\n      var model = this.__model;\n      // add the new model\n      this.wait(100, function () {\n        model.getChildren().push(d);\n      });\n\n      // d will be disposed by the model\n    },\n\n    testFolderCreation() {\n      // Test if the tree nodes exist\n      this.assertNotNull(this.__tree.getRoot(), \"Root node does not exist\");\n      this.assertNotNull(\n        this.__tree.getRoot().getChildren()[0],\n        \"First node does not exist\"\n      );\n\n      this.assertNotNull(\n        this.__tree.getRoot().getChildren()[1],\n        \"Second node does not exist\"\n      );\n\n      this.assertNotNull(\n        this.__tree.getRoot().getChildren()[2],\n        \"Third node does not exist\"\n      );\n    },\n\n    testFolderLabelInitial() {\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testFolderLabelChangeName() {\n      // change the names\n      this.__model.setName(\"ROOT\");\n      this.__a.setName(\"A\");\n      this.__b.setName(\"B\");\n      this.__c.setName(\"C\");\n      // check the initial Labels\n      this.assertEquals(\n        \"ROOT\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"A\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"B\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"C\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testFolderLabelPropertyChange() {\n      // change the label path\n      this.__controller.setLabelPath(\"name2\");\n      // check the initial Labels\n      this.assertEquals(\n        \"root2\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a2\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b2\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c2\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testChildPush() {\n      var d = new qx.test.TreeNode();\n      d.setName(\"d\");\n      var children = this.__model.getChildren();\n      children.push(d);\n\n      // Test if the tree nodes exist\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"d\",\n        this.__tree.getRoot().getChildren()[3].getLabel(),\n        \"New node has a wrong name\"\n      );\n    },\n\n    testChildPop() {\n      var children = this.__model.getChildren();\n      children.pop();\n\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertUndefined(\n        this.__tree.getRoot().getChildren()[2],\n        \"There is still a third node!\"\n      );\n    },\n\n    testChildShift() {\n      var children = this.__model.getChildren();\n      children.shift();\n\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertUndefined(\n        this.__tree.getRoot().getChildren()[2],\n        \"There is still a third node!\"\n      );\n    },\n\n    testChildUnshift() {\n      var d = new qx.test.TreeNode();\n      d.setName(\"d\");\n      var children = this.__model.getChildren();\n      children.unshift(d);\n\n      // Test if the tree nodes exist\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"d\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[3].getLabel(),\n        \"Fourth node has a wrong name\"\n      );\n    },\n\n    testTreeDeep() {\n      // remove all children\n      this.__model.getChildren().pop();\n      this.__model.getChildren().pop();\n      this.__model.getChildren().pop();\n\n      // create a straight tree\n      // this.__model\n      //      \\\n      //    this.__a\n      //        \\\n      //      this.__b\n      //          \\\n      //        this.__c\n      this.__model.getChildren().push(this.__a);\n      this.__a.getChildren().push(this.__b);\n      this.__b.getChildren().push(this.__c);\n\n      // test for the model\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[0].getChildren()[0].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree\n          .getRoot()\n          .getChildren()[0]\n          .getChildren()[0]\n          .getChildren()[0]\n          .getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testBig() {\n      // build up the model instances\n      var aa = new qx.test.TreeNode();\n      aa.setName(\"aa\");\n      var bb = new qx.test.TreeNode();\n      bb.setName(\"bb\");\n      var cc = new qx.test.TreeNode();\n      cc.setName(\"cc\");\n      var bbb = new qx.test.TreeNode();\n      bbb.setName(\"bbb\");\n      var AA = new qx.test.TreeNode();\n      AA.setName(\"AA\");\n\n      // tie the model together\n      //          this.__model\n      //          /     |      \\\n      //   this.__a  this.__b  this.__c\n      //     /  \\        |         |\n      //    aa  AA      bb        cc\n      //                 |\n      //                bbb\n      bb.getChildren().push(bbb);\n      this.__b.getChildren().push(bb);\n      this.__a.getChildren().push(aa, AA);\n      this.__c.getChildren().push(cc);\n\n      // check the initial Labels\n      // root layer\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      // first layer\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"a node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"b node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"c node has a wrong name\"\n      );\n\n      // second layer\n      this.assertEquals(\n        \"aa\",\n        this.__tree.getRoot().getChildren()[0].getChildren()[0].getLabel(),\n        \"aa node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"AA\",\n        this.__tree.getRoot().getChildren()[0].getChildren()[1].getLabel(),\n        \"AA node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"bb\",\n        this.__tree.getRoot().getChildren()[1].getChildren()[0].getLabel(),\n        \"bb node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"cc\",\n        this.__tree.getRoot().getChildren()[2].getChildren()[0].getLabel(),\n        \"cc node has a wrong name\"\n      );\n\n      // third layer\n      this.assertEquals(\n        \"bbb\",\n        this.__tree\n          .getRoot()\n          .getChildren()[1]\n          .getChildren()[0]\n          .getChildren()[0]\n          .getLabel(),\n        \"bbb node has a wrong name\"\n      );\n    },\n\n    testChildReverse() {\n      // reverse the children\n      this.__model.getChildren().reverse();\n      // check the labels\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testChangeChildPath() {\n      // change the child path\n      this.__controller.setChildPath(\"altChildren\");\n      // check the labels\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testChangeTarget() {\n      // create a new tree\n      var tree = new qx.ui.tree.Tree();\n\n      // set the new tree as target\n      this.__controller.setTarget(tree);\n\n      // check the new folders\n      this.assertEquals(\n        \"a\",\n        tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // check if the old tree is empty\n      this.assertNull(this.__tree.getRoot(), \"Former tree is not empty.\");\n      tree.dispose();\n    },\n\n    testChangeModel() {\n      // create a new model\n      //     this.__model\n      //        /    \\\n      // this.__a  this.__b\n      var model = new qx.test.TreeNode();\n      var a = new qx.test.TreeNode();\n      a.setName(\"A\");\n      var b = new qx.test.TreeNode();\n      b.setName(\"B\");\n      model.getChildren().push(a, b);\n\n      // set the new model\n      this.__controller.setModel(model);\n\n      // check the folders\n      this.assertEquals(\n        \"A\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"B\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.__controller.setModel(null);\n      model.dispose();\n    },\n\n    testIconPath() {\n      this.assertEquals(\n        null,\n        this.__tree.getRoot().getIcon(),\n        \"Root node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon a\",\n        this.__tree.getRoot().getChildren()[0].getIcon(),\n        \"First node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon b\",\n        this.__tree.getRoot().getChildren()[1].getIcon(),\n        \"Second node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon c\",\n        this.__tree.getRoot().getChildren()[2].getIcon(),\n        \"Third node has a wrong icon\"\n      );\n    },\n\n    testIconPathChange() {\n      // change the icon path\n      this.__controller.setIconPath(\"icon2\");\n\n      // test the binding\n      this.assertEquals(\n        null,\n        this.__tree.getRoot().getIcon(),\n        \"Root node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon a2\",\n        this.__tree.getRoot().getChildren()[0].getIcon(),\n        \"First node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon b2\",\n        this.__tree.getRoot().getChildren()[1].getIcon(),\n        \"Second node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon c2\",\n        this.__tree.getRoot().getChildren()[2].getIcon(),\n        \"Third node has a wrong icon\"\n      );\n    },\n\n    testIconChange() {\n      // change the icon values\n      this.__model.setIcon(\"AFFE\");\n      this.__a.setIcon(\"ICON A\");\n      this.__b.setIcon(\"ICON B\");\n      this.__c.setIcon(\"ICON C\");\n\n      // test the new icon values\n      this.assertEquals(\n        \"AFFE\",\n        this.__tree.getRoot().getIcon(),\n        \"Root node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"ICON A\",\n        this.__tree.getRoot().getChildren()[0].getIcon(),\n        \"First node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"ICON B\",\n        this.__tree.getRoot().getChildren()[1].getIcon(),\n        \"Second node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"ICON C\",\n        this.__tree.getRoot().getChildren()[2].getIcon(),\n        \"Third node has a wrong icon\"\n      );\n    },\n\n    testSelection() {\n      // open the tree so that the selection can be done\n      this.__tree.getRoot().setOpen(true);\n      // select the first object\n      this.__tree.addToSelection(this.__tree.getRoot().getChildren()[0]);\n      // test the selection\n      this.assertEquals(\n        this.__a,\n        this.__controller.getSelection().getItem(0),\n        \"Selection does not work.\"\n      );\n\n      // test for the length\n      this.assertEquals(\n        1,\n        this.__controller.getSelection().length,\n        \"Selection length is wrong.\"\n      );\n\n      // select the second object\n      this.__tree.addToSelection(this.__tree.getRoot().getChildren()[1]);\n      // test the selection\n      this.assertEquals(\n        this.__b,\n        this.__controller.getSelection().getItem(0),\n        \"Selection does not work.\"\n      );\n\n      // test for the length\n      this.assertEquals(\n        1,\n        this.__controller.getSelection().length,\n        \"Selection length is wrong.\"\n      );\n    },\n\n    testSelectionBackMultiple() {\n      // open the tree so that the selection can be done\n      this.__tree.getRoot().setOpen(true);\n      // select the second and third object\n      this.__tree.setSelectionMode(\"multi\");\n\n      // add the some elements to the selection\n      this.__controller.getSelection().push(this.__a);\n      this.__controller.getSelection().push(this.__b);\n\n      // test the selection\n      this.assertEquals(\n        this.__a,\n        this.__controller.getSelection().getItem(0),\n        \"Add to selection does not work.\"\n      );\n\n      this.assertEquals(\n        this.__b,\n        this.__controller.getSelection().getItem(1),\n        \"Add to selection does not work.\"\n      );\n    },\n\n    testSelectionAfterDelete() {\n      // open the tree so that the selection can be done\n      this.__tree.getRoot().setOpen(true);\n\n      // add c to the selection\n      this.__controller.getSelection().push(this.__c);\n      // remove the c node\n      var temp = this.__model.getChildren().splice(2, 1);\n      temp.setAutoDisposeItems(true);\n      temp.dispose();\n      // check if the selection is empty\n      this.assertEquals(\n        0,\n        this.__controller.getSelection().length,\n        \"Remove from selection does not work!\"\n      );\n\n      // add b to the selection\n      this.__controller.getSelection().push(this.__b);\n\n      // remove the first element of the controller 'this.__a'\n      temp = this.__model.getChildren().shift();\n      temp.dispose();\n\n      // check if the selected item in the list is \"b\"\n      this.assertTrue(\n        this.__controller.getSelection().contains(this.__b),\n        \"Selection array wrong!\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getSelection()[0].getLabel(),\n        \"Remove from selection does not work!\"\n      );\n    },\n\n    testSelectInvisible() {\n      // add c to the selection\n      this.__controller.getSelection().push(this.__c);\n\n      // check if the selection worked\n      this.assertEquals(\n        1,\n        this.__controller.getSelection().length,\n        \"Adding of an non visible element should not work.\"\n      );\n    },\n\n    testLabelOptions() {\n      // create the options\n      var options = {\n        converter(data, model) {\n          return data + model.getName2();\n        }\n      };\n\n      // create the controller\n      this.__controller.dispose();\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setLabelOptions(options);\n\n      // test the converter\n      this.assertEquals(\n        \"rootroot2\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"aa2\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"bb2\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"cc2\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testIconOptions() {\n      // create the options\n      var options = {\n        converter(data, model) {\n          if (data != null) {\n            return data + model.getName();\n          }\n          return null;\n        }\n      };\n\n      // create the controller\n      this.__controller.dispose();\n\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setIconPath(\"icon\");\n      this.__controller.setIconOptions(options);\n\n      // test the converter\n      this.assertNull(\n        this.__tree.getRoot().getIcon(),\n        \"Root node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon aa\",\n        this.__tree.getRoot().getChildren()[0].getIcon(),\n        \"First node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon bb\",\n        this.__tree.getRoot().getChildren()[1].getIcon(),\n        \"Second node has a wrong icon\"\n      );\n\n      this.assertEquals(\n        \"icon cc\",\n        this.__tree.getRoot().getChildren()[2].getIcon(),\n        \"Third node has a wrong icon\"\n      );\n    },\n\n    testItemWithoutChildren() {\n      // create new Object\n      qx.Class.define(\"qx.test.TreeEndNode\", {\n        extend: qx.core.Object,\n\n        properties: {\n          name: {\n            check: \"String\",\n            init: \"root\",\n            event: \"changeName\"\n          },\n\n          icon: {\n            check: \"String\",\n            event: \"changeIcon\",\n            nullable: true\n          }\n        }\n      });\n\n      var endNode = new qx.test.TreeEndNode();\n      endNode.setName(\"ENDE\");\n      this.__model.getChildren().push(endNode);\n\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"ENDE\",\n        this.__tree.getRoot().getChildren()[3].getLabel(),\n        \"Fourth node has a wrong name\"\n      );\n    },\n\n    testSetLateModel() {\n      this.__controller.dispose();\n      // create the controller\n      this.__controller = new qx.data.controller.Tree(\n        null,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setModel(this.__model);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testSetLateTarget() {\n      this.__controller.dispose();\n      // create the controller\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        null,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setTarget(this.__tree);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testSetLateTargetAndModel() {\n      this.__controller.dispose();\n      this.__controller = new qx.data.controller.Tree(\n        null,\n        null,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setTarget(this.__tree);\n      this.__controller.setModel(this.__model);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // redo the test and set the modeln and target in different order\n      this.__controller.dispose();\n      this.__controller = new qx.data.controller.Tree(\n        null,\n        null,\n        \"children\",\n        \"name\"\n      );\n\n      this.__controller.setModel(this.__model);\n      this.__controller.setTarget(this.__tree);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testSetLateChildPath() {\n      this.__controller.dispose();\n\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        null,\n        \"name\"\n      );\n\n      this.__controller.setChildPath(\"children\");\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testSetLateLabelPath() {\n      this.__controller.dispose();\n\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        \"children\"\n      );\n\n      this.__controller.setLabelPath(\"name\");\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testSetLateAll() {\n      this.__controller.dispose();\n\n      this.__controller = new qx.data.controller.Tree();\n\n      // set the needed properties\n      this.__controller.setLabelPath(\"name\");\n      this.__controller.setChildPath(\"children\");\n      this.__controller.setModel(this.__model);\n      this.__controller.setTarget(this.__tree);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testDelegateConfigure() {\n      // create the delegate\n      var delegate = new qx.core.Object();\n      delegate.configureItem = function (item) {\n        item.setUserData(\"a\", true);\n      };\n\n      this.__controller.setDelegate(delegate);\n\n      // check the initial Labels\n      this.assertTrue(\n        this.__tree.getRoot().getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[0].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[1].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[2].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.__controller.setDelegate(null);\n      delegate.dispose();\n    },\n\n    testDelegateConfigureLate() {\n      // clear up the setup\n      this.__controller.dispose();\n\n      var controller = new qx.data.controller.Tree(\n        null,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      var delegate = {\n        configureItem(item) {\n          item.setUserData(\"a\", true);\n        }\n      };\n\n      controller.setDelegate(delegate);\n      controller.setModel(this.__model);\n\n      // check the initial Labels\n      this.assertTrue(\n        this.__tree.getRoot().getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[0].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[1].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[2].getUserData(\"a\"),\n        \"Delegation not working.\"\n      );\n\n      controller.dispose();\n    },\n\n    testDelegateCreateLate() {\n      var delegate = {\n        createItem() {\n          var folder = new qx.ui.tree.TreeFolder();\n          folder.setUserData(\"my\", true);\n          return folder;\n        }\n      };\n\n      this.__controller.setDelegate(delegate);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // check if the folders are the self created folders\n      this.assertTrue(\n        this.__tree.getRoot().getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[0].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[1].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        this.__tree.getRoot().getChildren()[2].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n    },\n\n    testDelegateCreateFirst() {\n      this.__controller.dispose();\n\n      this.__controller = new qx.data.controller.Tree();\n      var delegate = {\n        createItem() {\n          var folder = new qx.ui.tree.TreeFolder();\n          folder.setUserData(\"my\", true);\n          return folder;\n        }\n      };\n\n      var tree = new qx.ui.tree.Tree();\n      this.__controller.setDelegate(delegate);\n      this.__controller.setChildPath(\"children\");\n      this.__controller.setLabelPath(\"name\");\n      this.__controller.setModel(this.__model);\n      this.__controller.setTarget(tree);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // check if the folders are the self created folders\n      this.assertTrue(\n        tree.getRoot().getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        tree.getRoot().getChildren()[0].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        tree.getRoot().getChildren()[1].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      this.assertTrue(\n        tree.getRoot().getChildren()[2].getUserData(\"my\"),\n        \"Default folders found.\"\n      );\n\n      tree.destroy();\n    },\n\n    testDelegateBindLate() {\n      var delegate = {\n        bindItem(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n          controller.bindProperty(\"color\", \"textColor\", null, item, id);\n        }\n      };\n\n      this.__controller.setDelegate(delegate);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // check the names\n      this.assertEquals(\n        \"green\",\n        this.__tree.getRoot().getTextColor(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"red\",\n        this.__tree.getRoot().getChildren()[0].getTextColor(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"blue\",\n        this.__tree.getRoot().getChildren()[1].getTextColor(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"white\",\n        this.__tree.getRoot().getChildren()[2].getTextColor(),\n        \"Third node has a wrong name\"\n      );\n\n      this.__model.setColor(\"black\");\n      this.assertEquals(\n        \"black\",\n        this.__tree.getRoot().getTextColor(),\n        \"Root node has a wrong name\"\n      );\n    },\n\n    testDelegateBindFirst() {\n      var delegate = {\n        bindItem(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n          controller.bindProperty(\"color\", \"textColor\", null, item, id);\n        }\n      };\n\n      var tree = new qx.ui.tree.Tree();\n      this.__controller.setDelegate(delegate);\n      this.__controller.setChildPath(\"children\");\n      this.__controller.setLabelPath(\"name\");\n      this.__controller.setModel(this.__model);\n      this.__controller.setTarget(tree);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n\n      // check the names\n      this.assertEquals(\n        \"green\",\n        tree.getRoot().getTextColor(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"red\",\n        tree.getRoot().getChildren()[0].getTextColor(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"blue\",\n        tree.getRoot().getChildren()[1].getTextColor(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"white\",\n        tree.getRoot().getChildren()[2].getTextColor(),\n        \"Third node has a wrong name\"\n      );\n\n      this.__model.setColor(\"black\");\n      this.assertEquals(\n        \"black\",\n        tree.getRoot().getTextColor(),\n        \"Root node has a wrong name\"\n      );\n\n      tree.dispose();\n    },\n\n    testDelegateBindPropertyReverse() {\n      var delegate = {\n        bindItem(controller, item, id) {\n          controller.bindProperty(\"name\", \"appearance\", null, item, id);\n          controller.bindPropertyReverse(\"name\", \"appearance\", null, item, id);\n          controller.bindPropertyReverse(\n            \"color\",\n            \"backgroundColor\",\n            null,\n            item,\n            id\n          );\n        }\n      };\n\n      this.__controller.setDelegate(delegate);\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getAppearance(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getAppearance(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getAppearance(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getAppearance(),\n        \"Third node has a wrong name\"\n      );\n\n      // check the reverse binding\n      this.__tree.getRoot().setAppearance(\"ROOT\");\n      this.assertEquals(\n        \"ROOT\",\n        this.__model.getName(),\n        \"Reverse binding not ok!\"\n      );\n\n      this.__tree.getRoot().getChildren()[0].setBackgroundColor(\"#123456\");\n      this.assertEquals(\n        \"#123456\",\n        this.__a.getColor(),\n        \"Reverse binding not ok!\"\n      );\n\n      // invoke a removing and setting of the bindings with the new bindItem\n      delegate.bindItem = function (controller, item, id) {\n        controller.bindProperty(\"name\", \"appearance\", null, item, id);\n      };\n      this.__controller.setDelegate(null);\n      this.__controller.setDelegate(delegate);\n\n      this.__tree.getRoot().setAppearance(\"123\");\n      this.assertEquals(\"ROOT\", this.__model.getName(), \"Removing not ok\");\n      this.__tree.getRoot().getChildren()[0].setBackgroundColor(\"#654321\");\n      this.assertEquals(\"#123456\", this.__a.getColor(), \"Removing not ok\");\n    },\n\n    testDelegateAddItem() {\n      var a = new qx.test.TreeNode();\n      a.setName(\"new\");\n      // set a delegate\n      this.__controller.setDelegate({\n        createItem() {\n          return new qx.ui.tree.TreeFolder();\n        }\n      });\n\n      // flush the dispose queue\n      qx.ui.core.queue.Dispose.flush();\n      // add the new model\n      this.__model.getChildren().push(a);\n    },\n\n    testResetModel() {\n      this.__controller.resetModel();\n      this.assertNull(this.__tree.getRoot(), \"Tree is not empty.\");\n    },\n\n    testChangeChildrenArray() {\n      // create the new children array\n      var children = new qx.data.Array();\n      var a = new qx.test.TreeNode();\n      a.setName(\"new\");\n      children.push(a);\n\n      var oldChildren = this.__a.getChildren();\n\n      // change the children array\n      //        this.__model\n      //        /    |      \\\n      // this.__a  this.__b  this.__c\n      //    |\n      //   a\n      this.__a.setChildren(children);\n\n      oldChildren.dispose();\n\n      // Test if the tree nodes exist\n      this.assertNotUndefined(\n        this.__tree.getRoot(),\n        \"Root node does not exist\"\n      );\n\n      this.assertNotUndefined(\n        this.__tree.getRoot().getChildren()[0],\n        \"First node does not exist\"\n      );\n\n      this.assertNotUndefined(\n        this.__tree.getRoot().getChildren()[0].getChildren()[0],\n        \"New node does not exist\"\n      );\n\n      // test if its the proper node\n      this.assertEquals(\n        \"new\",\n        this.__tree.getRoot().getChildren()[0].getChildren()[0].getLabel()\n      );\n    },\n\n    testInheritedChildren() {\n      qx.Class.define(\"qx.test.MyTreeNode\", {\n        extend: qx.test.TreeNode\n      });\n\n      // init (copy of setUp)\n      this.__tree.dispose();\n      this.__model.dispose();\n      this.__a.dispose();\n      this.__b.dispose();\n      this.__c.dispose();\n      this.__tree = new qx.ui.tree.Tree();\n\n      // create a model\n      //        this.__model\n      //        /    |      \\\n      // this.__a  this.__b  this.__c\n      this.__model = new qx.test.MyTreeNode();\n\n      this.__a = new qx.test.MyTreeNode();\n      this.__a.set({\n        name: \"a\",\n        name2: \"a2\",\n        icon: \"icon a\",\n        icon2: \"icon a2\",\n        color: \"red\"\n      });\n\n      this.__b = new qx.test.MyTreeNode();\n      this.__b.set({\n        name: \"b\",\n        name2: \"b2\",\n        icon: \"icon b\",\n        icon2: \"icon b2\",\n        color: \"blue\"\n      });\n\n      this.__c = new qx.test.MyTreeNode();\n      this.__c.set({\n        name: \"c\",\n        name2: \"c2\",\n        icon: \"icon c\",\n        icon2: \"icon c2\",\n        color: \"white\"\n      });\n\n      this.__model.getChildren().push(this.__a, this.__b, this.__c);\n      this.__model.getAltChildren().push(this.__c, this.__b, this.__a);\n\n      // create the controller\n      this.__controller.dispose();\n      this.__controller = new qx.data.controller.Tree(\n        this.__model,\n        this.__tree,\n        \"children\",\n        \"name\"\n      );\n\n      // check the initial Labels\n      this.assertEquals(\n        \"root\",\n        this.__tree.getRoot().getLabel(),\n        \"Root node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"a\",\n        this.__tree.getRoot().getChildren()[0].getLabel(),\n        \"First node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"b\",\n        this.__tree.getRoot().getChildren()[1].getLabel(),\n        \"Second node has a wrong name\"\n      );\n\n      this.assertEquals(\n        \"c\",\n        this.__tree.getRoot().getChildren()[2].getLabel(),\n        \"Third node has a wrong name\"\n      );\n    },\n\n    testRemoveEvents() {\n      // BUG #3566\n\n      var nodes = [];\n      for (var i = 0; i < 50; ++i) {\n        nodes[i] = new qx.test.TreeNode();\n        if (i != 0) {\n          nodes[parseInt(Math.random() * i, 10)].getChildren().push(nodes[i]);\n        }\n      }\n\n      var tree = new qx.ui.tree.Tree();\n      var controller = new qx.data.controller.Tree(\n        nodes[0],\n        tree,\n        \"children\",\n        \"name\"\n      );\n\n      for (var i = 0; i < nodes.length; ++i) {\n        nodes[i].getChildren().removeAll(); // THIS THROWS AN EXCEPTION ON 2ND ELEMENT...\n      }\n\n      controller.dispose();\n      tree.dispose();\n\n      for (var i = 0; i < nodes.length; ++i) {\n        nodes[i].dispose();\n      }\n    },\n\n    testBindItemDouble() {\n      var delegate = {\n        bindItem(controller, item, id) {\n          controller.bindProperty(\"color\", \"textColor\", null, item, id);\n          controller.bindProperty(\"color\", \"textColor\", null, item, id);\n        }\n      };\n\n      var self = this;\n      this.assertException(\n        function () {\n          self.__controller.setDelegate(delegate);\n        },\n        Error,\n        /textColor/.g\n      );\n    },\n\n    testBindItemDoubleReverse() {\n      var delegate = {\n        bindItem(controller, item, id) {\n          controller.bindPropertyReverse(\"color\", \"textColor\", null, item, id);\n          controller.bindPropertyReverse(\"color\", \"textColor\", null, item, id);\n        }\n      };\n\n      var self = this;\n      this.assertException(\n        function () {\n          self.__controller.setDelegate(delegate);\n        },\n        Error,\n        /textColor/.g\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}