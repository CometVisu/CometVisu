{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "events",
    "$test",
    "members",
    "testAddRemoveListener",
    "target",
    "type",
    "capture",
    "Reg",
    "event",
    "Registration",
    "mgr",
    "getManager",
    "handler",
    "findHandler",
    "assertInstance",
    "test",
    "MockHandler",
    "fired",
    "listener1",
    "e",
    "listener2",
    "calls",
    "addListener",
    "assertEquals",
    "length",
    "assertArrayEquals",
    "fireEvent",
    "Event",
    "removeListener",
    "testAddRemoveListenerById",
    "id1",
    "assertNotNull",
    "id2",
    "removeListenerById",
    "test_addListenerOnce_same_callback",
    "core",
    "Object",
    "bar",
    "fireBar",
    "fireDataEvent",
    "f1",
    "Foo",
    "f2",
    "called",
    "toHashCode",
    "callback",
    "addListenerOnce"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/event/Registration.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * @ignore(Foo)\n */\n\n/* global Foo */\nqx.Class.define(\"qx.test.event.Registration\", {\n  extend: qx.dev.unit.TestCase,\n\n  events: {\n    $test: \"qx.event.type.Event\"\n  },\n\n  members: {\n    testAddRemoveListener() {\n      var target = this;\n      var type = \"$test\";\n      var capture = false;\n\n      var Reg = qx.event.Registration;\n      var mgr = Reg.getManager(target);\n\n      var handler = mgr.findHandler(target, type);\n      this.assertInstance(handler, qx.test.event.MockHandler);\n\n      var fired = [false, false];\n      var listener1 = function (e) {\n        fired[0] = true;\n      };\n      var listener2 = function (e) {\n        fired[1] = true;\n      };\n\n      // first add with this type/target\n      handler.calls = [];\n\n      Reg.addListener(target, type, listener1, this, capture);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals(\n        [\"registerEvent\", target, type, capture],\n        handler.calls[0]\n      );\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([true, false], fired);\n\n      // second add with this type/target\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.addListener(target, type, listener2, this, capture);\n\n      this.assertEquals(0, handler.calls.length);\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([true, true], fired);\n\n      // remove first handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListener(target, type, listener1, this, capture);\n\n      this.assertEquals(0, handler.calls.length);\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, true], fired);\n\n      // remove second handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListener(target, type, listener2, this, capture);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals(\n        [\"unregisterEvent\", target, type, capture],\n        handler.calls[0]\n      );\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, false], fired);\n    },\n\n    testAddRemoveListenerById() {\n      var target = this;\n      var type = \"$test\";\n      var capture = false;\n\n      var Reg = qx.event.Registration;\n      var mgr = Reg.getManager(target);\n\n      var handler = mgr.findHandler(target, type);\n\n      var fired = [false, false];\n      var listener1 = function (e) {\n        fired[0] = true;\n      };\n      var listener2 = function (e) {\n        fired[1] = true;\n      };\n\n      var id1 = Reg.addListener(target, type, listener1, this, capture);\n      this.assertNotNull(id1);\n\n      var id2 = Reg.addListener(target, type, listener2, this, capture);\n      this.assertNotNull(id2);\n\n      // remove first handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListenerById(target, id1);\n      this.assertEquals(0, handler.calls.length);\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, true], fired);\n\n      // remove second handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListenerById(target, id2);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals(\n        [\"unregisterEvent\", target, type, capture],\n        handler.calls[0]\n      );\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, false], fired);\n    },\n\n    /**\n     * @ignore(Foo)\n     */\n    \"test addListenerOnce: same callback\"() {\n      qx.Class.define(\"Foo\", {\n        extend: qx.core.Object,\n        events: {\n          bar: \"qx.event.type.Event\"\n        },\n\n        members: {\n          fireBar() {\n            this.fireDataEvent(\"bar\");\n          }\n        }\n      });\n\n      var f1 = new Foo();\n      var f2 = new Foo();\n\n      var called = {};\n      called[f1.toHashCode()] = 0;\n      called[f2.toHashCode()] = 0;\n\n      var callback = function (e) {\n        called[this.toHashCode()]++;\n      };\n\n      f1.addListenerOnce(\"bar\", callback, f1);\n      f2.addListenerOnce(\"bar\", callback, f2);\n\n      f1.fireBar();\n      f2.fireBar();\n      f1.fireBar();\n      f2.fireBar();\n\n      this.assertEquals(1, called[f1.toHashCode()]);\n      this.assertEquals(1, called[f2.toHashCode()]);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}