{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "hasGlobalErrorHandling",
    "hasNoGlobalErrorHandling",
    "setUp",
    "errorHandler",
    "event",
    "GlobalError",
    "called",
    "calledParams",
    "setErrorHandler",
    "onError",
    "tearDown",
    "window",
    "onerror",
    "ex",
    "assertEquals",
    "arguments",
    "length",
    "push",
    "testObserveMethod",
    "require",
    "fail",
    "Error",
    "wrappedFail",
    "observeMethod",
    "assertFalse",
    "assertTrue",
    "testDontWrapIfSettingIsOff",
    "fcn",
    "wrapped",
    "assertIdentical",
    "testWrappedParameterAndReturnValue",
    "a",
    "b",
    "c",
    "args",
    "assertJsonEquals",
    "testObserveMethodButNoHandler",
    "assertException",
    "testHandlerContext",
    "self",
    "handler",
    "testHandleError",
    "error",
    "handleError",
    "testOnWindowError",
    "wasHandled",
    "resume",
    "assertInstance",
    "core",
    "WindowError",
    "assertMatch",
    "toString",
    "assertString",
    "getUri",
    "assertInteger",
    "getLineNumber",
    "setTimeout",
    "Environment",
    "get",
    "warn",
    "wait",
    "testOnWindowErrorWrapped",
    "wasNativeHandled",
    "originalMsg",
    "originalUri",
    "originalLineNumber",
    "msg",
    "uri",
    "lineNumber",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/event/GlobalError.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.event.GlobalError\", {\n  extend: qx.dev.unit.TestCase,\n  include: qx.dev.unit.MRequirements,\n\n  members: {\n    hasGlobalErrorHandling() {\n      return !!qx.core.Environment.get(\"qx.globalErrorHandling\");\n    },\n\n    hasNoGlobalErrorHandling() {\n      return !this.hasGlobalErrorHandling();\n    },\n\n    setUp() {\n      this.errorHandler = qx.event.GlobalError;\n\n      this.called = false;\n      this.calledParams = [];\n      this.errorHandler.setErrorHandler(this.onError, this);\n    },\n\n    tearDown() {\n      this.errorHandler.setErrorHandler(null);\n      if (window.onerror) {\n        window.onerror = null;\n      }\n    },\n\n    onError(ex) {\n      this.assertEquals(1, arguments.length);\n      this.called = true;\n      this.calledParams.push(ex);\n    },\n\n    testObserveMethod() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function () {\n        throw new Error(\"fail\");\n      };\n\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n      this.assertFalse(this.called);\n      wrappedFail();\n      this.assertTrue(this.called);\n    },\n\n    testDontWrapIfSettingIsOff() {\n      this.require([\"NoGlobalErrorHandling\"]);\n\n      var fcn = function () {};\n      var wrapped = this.errorHandler.observeMethod(fcn);\n\n      this.assertIdentical(fcn, wrapped);\n    },\n\n    testWrappedParameterAndReturnValue() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fcn = function (a, b, c) {\n        var args = [a, b, c];\n        return args;\n      };\n\n      var wrapped = this.errorHandler.observeMethod(fcn);\n      this.assertJsonEquals(fcn(1, \"2\", true), wrapped(1, \"2\", true));\n    },\n\n    testObserveMethodButNoHandler() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function () {\n        throw new Error(\"fail\");\n      };\n\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n\n      this.errorHandler.setErrorHandler(null, null);\n      this.assertException(wrappedFail);\n\n      this.errorHandler.setErrorHandler(this.onError, this);\n      wrappedFail();\n    },\n\n    testHandlerContext() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function () {\n        throw new Error(\"fail\");\n      };\n\n      var self = null;\n      var handler = function (ex) {\n        self = this;\n      };\n\n      this.errorHandler.setErrorHandler(handler, this);\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n\n      wrappedFail();\n      this.assertEquals(this, self);\n    },\n\n    testHandleError() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var error = new Error(\"New Error\");\n      this.errorHandler.handleError(error);\n\n      this.assertTrue(this.called);\n      this.assertEquals(error, this.calledParams[0]);\n    },\n\n    testOnWindowError() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      // reset the handler\n      this.errorHandler.setErrorHandler(null);\n\n      var wasHandled = false;\n      var handler = function (ex) {\n        this.resume(function () {\n          wasHandled = true;\n          this.assertInstance(ex, qx.core.WindowError);\n          this.assertMatch(ex.toString(), \"Doofer Fehler\");\n\n          this.assertString(ex.getUri());\n          this.assertInteger(ex.getLineNumber());\n\n          // this.debug(ex.toString() + \" at \" + ex.getUri() + \":\" + ex.getLineNumber());\n        }, this);\n      };\n\n      this.errorHandler.setErrorHandler(handler, this);\n\n      // callback is NOT wrapped!\n      window.setTimeout(function () {\n        throw new Error(\"Doofer Fehler\");\n      }, 0);\n\n      // Opera and Webkit do not support window.onerror\n      // make sure the test fails once they support it\n      var self = this;\n      window.setTimeout(function () {\n        if (wasHandled) {\n          return;\n        }\n\n        self.resume(function () {\n          if (\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n            qx.core.Environment.get(\"engine.name\") == \"webkit\"\n          ) {\n            this.warn(\"window.onerror is not supported by Opera and Webkit\");\n          } else {\n            this.fail(\n              \"window.onerror should be supported! Note: this test fails in IE if the debugger is active!\"\n            );\n          }\n        }, self);\n      }, 100);\n\n      this.wait(500);\n    },\n\n    testOnWindowErrorWrapped() {\n      this.require([\"GlobalErrorHandling\"]);\n\n      // reset error handler on startup\n      this.errorHandler.setErrorHandler(null);\n\n      var wasHandled = false;\n      var wasNativeHandled = false;\n\n      var self = this;\n      var originalMsg = null;\n      var originalUri = null;\n      var originalLineNumber = null;\n      // append a native onerror method\n      window.onerror = function (msg, uri, lineNumber) {\n        wasNativeHandled = true;\n\n        self.assertMatch(msg, \"Doofer Fehler\");\n        self.assertString(uri);\n        self.assertInteger(lineNumber);\n\n        originalMsg = msg;\n        originalUri = uri;\n        originalLineNumber = lineNumber;\n      };\n\n      var handler = function (ex) {\n        this.resume(function () {\n          wasHandled = true;\n          this.assertTrue(wasNativeHandled, \"native handler not called.\");\n          this.assertInstance(ex, qx.core.WindowError);\n\n          this.assertEquals(originalMsg, ex.toString());\n          this.assertEquals(originalUri, ex.getUri());\n          this.assertEquals(originalLineNumber, ex.getLineNumber());\n\n          // this.debug(ex.toString() + \" at \" + ex.getUri() + \":\" + ex.getLineNumber());\n        }, this);\n      };\n\n      this.errorHandler.setErrorHandler(handler, this);\n\n      // callback is NOT wrapped!\n      window.setTimeout(function () {\n        throw new Error(\"Doofer Fehler\");\n      }, 0);\n\n      // Opera and Webkit do not support window.onerror\n      // make sure the test fails once they support it\n      var self = this;\n      window.setTimeout(function () {\n        if (wasHandled) {\n          return;\n        }\n\n        self.resume(function () {\n          if (\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n            qx.core.Environment.get(\"engine.name\") == \"webkit\"\n          ) {\n            this.warn(\"window.onerror is not supported by Opera and Webkit\");\n          } else {\n            this.fail(\n              \"window.onerror should be supported! Note: this test fails in IE if the debugger is active!\"\n            );\n          }\n        }, self);\n      }, 100);\n\n      this.wait(500);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}