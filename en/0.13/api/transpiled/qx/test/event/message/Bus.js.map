{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__subscriberOne",
    "__subscriberTwo",
    "__subscriberThree",
    "setUp",
    "core",
    "Object",
    "tearDown",
    "dispose",
    "subscribers",
    "event",
    "message",
    "Bus",
    "getSubscriptions",
    "key",
    "assertJsonEquals",
    "testDispatch",
    "bus",
    "calls",
    "that",
    "subscribe",
    "assertEquals",
    "getName",
    "getData",
    "assertFalse",
    "msg",
    "Message",
    "assertTrue",
    "dispatch",
    "testDispatchWithDisposed",
    "testWildcard",
    "flag1",
    "flag2",
    "handler1",
    "handler2",
    "messageBus",
    "getInstance",
    "msg1",
    "msg2",
    "testRegex",
    "testSubscribeOnce",
    "subscribeOnce",
    "testUnsubscribe",
    "flag",
    "handler",
    "anotherHandler",
    "unsubscribe",
    "testUnsubscribeAll",
    "testWrongDispatch",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/event/message/Bus.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.event.message.Bus\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    __subscriberOne: null,\n    __subscriberTwo: null,\n    __subscriberThree: null,\n\n    setUp() {\n      this.__subscriberOne = new qx.core.Object();\n      this.__subscriberTwo = new qx.core.Object();\n      this.__subscriberThree = new qx.core.Object();\n    },\n\n    tearDown() {\n      this.__subscriberOne.dispose();\n      this.__subscriberTwo.dispose();\n      this.__subscriberThree.dispose();\n\n      var subscribers = qx.event.message.Bus.getSubscriptions();\n      for (var key in subscribers) {\n        delete subscribers[key];\n      }\n\n      this.assertJsonEquals({}, qx.event.message.Bus.getSubscriptions());\n    },\n\n    testDispatch() {\n      var bus = qx.event.message.Bus;\n      var calls = 0;\n\n      var that = this;\n      bus.subscribe(\n        \"*\",\n        function (message) {\n          calls++;\n          that.assertEquals(\"MyMessage\", message.getName());\n          that.assertEquals(10, message.getData());\n        },\n        this.__subscriberOne\n      );\n\n      bus.subscribe(\n        \"MyMessage2\",\n        function (message) {\n          that.assertFalse(true, \"Wrong subscriber called!\");\n        },\n        this.__subscriberTwo\n      );\n\n      bus.subscribe(\n        \"MyMessage\",\n        function (message) {\n          calls++;\n          that.assertEquals(\"MyMessage\", message.getName());\n          that.assertEquals(10, message.getData());\n        },\n        this.__subscriberThree\n      );\n\n      var msg = new qx.event.message.Message(\"MyMessage\", 10);\n      this.assertTrue(bus.dispatch(msg), \"Message not dispatched\");\n      this.assertEquals(2, calls, \"Wrong callbacks!\");\n      msg.dispose();\n    },\n\n    testDispatchWithDisposed() {\n      var bus = qx.event.message.Bus;\n      var calls = 0;\n\n      var that = this;\n      bus.subscribe(\n        \"*\",\n        function (message) {\n          calls++;\n          that.assertEquals(\"MyMessage\", message.getName());\n          that.assertEquals(10, message.getData());\n        },\n        this.__subscriberOne\n      );\n\n      this.__subscriberTwo.dispose();\n      bus.subscribe(\n        \"MyMessage\",\n        function (message) {\n          that.assertFalse(true, \"Wrong subscriber called!\");\n        },\n        this.__subscriberTwo\n      );\n\n      bus.subscribe(\n        \"MyMessage\",\n        function (message) {\n          calls++;\n          that.assertEquals(\"MyMessage\", message.getName());\n          that.assertEquals(10, message.getData());\n        },\n        this.__subscriberThree\n      );\n\n      var msg = new qx.event.message.Message(\"MyMessage\", 10);\n      this.assertTrue(bus.dispatch(msg), \"Message not dispatched\");\n      this.assertEquals(2, calls, \"Wrong callbacks!\");\n      msg.dispose();\n    },\n\n    // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=2996\n    testWildcard() {\n      var flag1 = false;\n      var flag2 = false;\n      function handler1() {\n        flag1 = true;\n      }\n      function handler2() {\n        flag2 = true;\n      }\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"*\", handler1, this);\n      messageBus.subscribe(\"mess*\", handler2, this);\n\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(\n        flag1,\n        \"Handler1 (filter '*') was not called for message 'message'.\"\n      );\n\n      this.assertTrue(\n        flag2,\n        \"Handler2 (filter 'mess*') was not called for message 'message'.\"\n      );\n\n      flag1 = false;\n      flag2 = false;\n      var msg2 = new qx.event.message.Message(\"massage\", true);\n      this.assertTrue(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertTrue(\n        flag1,\n        \"Handler1 (filter '*') was not called for message 'massage'.\"\n      );\n\n      this.assertFalse(\n        flag2,\n        \"Handler2 (filter 'mess*') was wrongly called for message 'massage'.\"\n      );\n\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testRegex() {\n      var flag1 = false;\n      function handler1() {\n        flag1 = true;\n      }\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(/^test\\.[a-z]+$/, handler1, this);\n      var msg1 = new qx.event.message.Message(\"test.abc\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(\n        flag1,\n        \"Handler1 (filter /^test\\\\.[a-z]+$/) was not called for message '\" +\n          msg1.getName() +\n          \"'\"\n      );\n\n      var msg2 = new qx.event.message.Message(\"test.123\", true);\n      this.assertFalse(\n        messageBus.dispatch(msg2),\n        \"Message was dispatched and shouldn't have been\"\n      );\n\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testSubscribeOnce() {\n      var flag1 = false;\n      function handler1() {\n        flag1 = true;\n      }\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribeOnce(\"testSubscribeOnce\", handler1, this);\n      var msg1 = new qx.event.message.Message(\"testSubscribeOnce\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(\n        flag1,\n        'Handler (filter \"testSubscribeOnce\") was not called for message \\'' +\n          msg1.getName() +\n          \"'\"\n      );\n\n      flag1 = false;\n      var msg2 = new qx.event.message.Message(\"testSubscribeOnce\", true);\n      this.assertFalse(\n        messageBus.dispatch(msg2),\n        \"Message was dispatched but shouldn't have been.\"\n      );\n\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=2996\n    testUnsubscribe() {\n      var flag = false;\n      function handler() {\n        flag = true;\n      }\n\n      function anotherHandler() {}\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      messageBus.unsubscribe(\"message\", anotherHandler, this);\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(flag, \"Handler was not called.\");\n      flag = false;\n      messageBus.unsubscribe(\"message\", handler, this);\n      var msg2 = new qx.event.message.Message(\"message\", true);\n      this.assertFalse(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertFalse(flag, \"Handler was called although unsubscribed.\");\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testUnsubscribeAll() {\n      var flag = false;\n      function handler() {\n        flag = true;\n      }\n\n      function anotherHandler() {}\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(flag, \"Handler was not called.\");\n\n      flag = false;\n      messageBus.unsubscribe(\"message\");\n      var msg2 = new qx.event.message.Message(\"message\", true);\n      this.assertFalse(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertFalse(flag, \"Handler was called although unsubscribed.\");\n\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testWrongDispatch() {\n      var flag = false;\n      function handler() {\n        flag = true;\n      }\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      messageBus.subscribe(\"massage\", handler, this);\n\n      var msg = new qx.event.message.Message(\"trash\", true);\n      this.assertFalse(messageBus.dispatch(msg), \"Message was dispatched\");\n      this.assertFalse(flag, \"Handler was called.\");\n      msg.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}