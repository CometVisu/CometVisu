{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "assertTransform",
    "strA",
    "strB",
    "arrA",
    "lang",
    "String",
    "toArray",
    "arrB",
    "job",
    "operations",
    "util",
    "EditDistance",
    "getEditOperations",
    "i",
    "l",
    "length",
    "operation",
    "OPERATION_DELETE",
    "Array",
    "removeAt",
    "pos",
    "OPERATION_REPLACE",
    "value",
    "OPERATION_INSERT",
    "insertAt",
    "Error",
    "result",
    "join",
    "testBasics",
    "test"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/test/EditDistance.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.EditDistance\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    assertTransform(strA, strB) {\n      var arrA = qx.lang.String.toArray(strA);\n      var arrB = qx.lang.String.toArray(strB);\n      var job;\n\n      var operations = qx.util.EditDistance.getEditOperations(arrA, arrB);\n\n      for (var i = 0, l = operations.length; i < l; i++) {\n        job = operations[i];\n\n        switch (job.operation) {\n          case qx.util.EditDistance.OPERATION_DELETE:\n            qx.lang.Array.removeAt(arrA, job.pos);\n            break;\n\n          case qx.util.EditDistance.OPERATION_REPLACE:\n            arrA[job.pos] = job.value;\n            break;\n\n          case qx.util.EditDistance.OPERATION_INSERT:\n            qx.lang.Array.insertAt(arrA, job.value, job.pos);\n            break;\n\n          default:\n            throw new Error(\"Invalid operation: \" + job.operation);\n        }\n      }\n\n      var result = arrA.join(\"\");\n\n      if (result !== strB) {\n        throw new Error(\n          \"Implementation could not transform: \" +\n            strA +\n            \" to \" +\n            strB +\n            \"! Result was: \" +\n            result\n        );\n      }\n\n      // this.debug(\"Successfully transformed: \" + strA + \" to \" + strB + \".\");\n    },\n\n    testBasics() {\n      this.assertTransform(\"hello world\", \"hallo welt\");\n      this.assertTransform(\"abcdef\", \"abdcef\");\n      this.assertTransform(\"abcdef\", \"fedcba\");\n      this.assertTransform(\"abcdef\", \"abc\");\n      this.assertTransform(\"abcdef\", \"def\");\n      this.assertTransform(\"abcdef\", \"bcef\");\n      this.assertTransform(\"abcdef\", \"abcghi\");\n      this.assertTransform(\"abcdef\", \"abcstudef\");\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACtCC,MAAM,EAAEN,EAAE,CAACO,GAAG,CAACC,IAAI,CAACC,QAAQ;IAE5BC,OAAO,EAAE;MACPC,eAAe,WAAfA,eAAeA,CAACC,IAAI,EAAEC,IAAI,EAAE;QAC1B,IAAIC,IAAI,GAAGd,EAAE,CAACe,IAAI,CAACC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC;QACvC,IAAIM,IAAI,GAAGlB,EAAE,CAACe,IAAI,CAACC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC;QACvC,IAAIM,GAAG;QAEP,IAAIC,UAAU,GAAGpB,EAAE,CAACqB,IAAI,CAACC,YAAY,CAACC,iBAAiB,CAACT,IAAI,EAAEI,IAAI,CAAC;QAEnE,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGL,UAAU,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;UACjDL,GAAG,GAAGC,UAAU,CAACI,CAAC,CAAC;UAEnB,QAAQL,GAAG,CAACQ,SAAS;YACnB,KAAK3B,EAAE,CAACqB,IAAI,CAACC,YAAY,CAACM,gBAAgB;cACxC5B,EAAE,CAACe,IAAI,CAACc,KAAK,CAACC,QAAQ,CAAChB,IAAI,EAAEK,GAAG,CAACY,GAAG,CAAC;cACrC;YAEF,KAAK/B,EAAE,CAACqB,IAAI,CAACC,YAAY,CAACU,iBAAiB;cACzClB,IAAI,CAACK,GAAG,CAACY,GAAG,CAAC,GAAGZ,GAAG,CAACc,KAAK;cACzB;YAEF,KAAKjC,EAAE,CAACqB,IAAI,CAACC,YAAY,CAACY,gBAAgB;cACxClC,EAAE,CAACe,IAAI,CAACc,KAAK,CAACM,QAAQ,CAACrB,IAAI,EAAEK,GAAG,CAACc,KAAK,EAAEd,GAAG,CAACY,GAAG,CAAC;cAChD;YAEF;cACE,MAAM,IAAIK,KAAK,CAAC,qBAAqB,GAAGjB,GAAG,CAACQ,SAAS,CAAC;UAC1D;QACF;QAEA,IAAIU,MAAM,GAAGvB,IAAI,CAACwB,IAAI,CAAC,EAAE,CAAC;QAE1B,IAAID,MAAM,KAAKxB,IAAI,EAAE;UACnB,MAAM,IAAIuB,KAAK,CACb,sCAAsC,GACpCxB,IAAI,GACJ,MAAM,GACNC,IAAI,GACJ,gBAAgB,GAChBwB,MACJ,CAAC;QACH;;QAEA;MACF,CAAC;MAEDE,UAAU,WAAVA,UAAUA,CAAA,EAAG;QACX,IAAI,CAAC5B,eAAe,CAAC,aAAa,EAAE,YAAY,CAAC;QACjD,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;QACxC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;QACxC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC;QACrC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC;QACrC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC;QACtC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;QACxC,IAAI,CAACA,eAAe,CAAC,QAAQ,EAAE,WAAW,CAAC;MAC7C;IACF;EACF,CAAC,CAAC;EA7EFX,EAAE,CAACwC,IAAI,CAAClB,YAAY,CAACnB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}