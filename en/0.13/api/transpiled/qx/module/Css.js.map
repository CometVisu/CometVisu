{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_getHeight",
    "force",
    "elem",
    "dom",
    "Node",
    "isElement",
    "elementHeight",
    "stylesToSwap",
    "display",
    "position",
    "visibility",
    "module",
    "Css",
    "__swap",
    "bom",
    "element",
    "Dimension",
    "getHeight",
    "isDocument",
    "Document",
    "getWindow",
    "isWindow",
    "Viewport",
    "_getWidth",
    "elementWidth",
    "getWidth",
    "_getContentHeight",
    "obj",
    "contentHeight",
    "getContentHeight",
    "_getContentWidth",
    "contentWidth",
    "getContentWidth",
    "__displayDefaults",
    "__getDisplayDefault",
    "tagName",
    "doc",
    "defaults",
    "docu",
    "document",
    "tempEl",
    "qxWeb",
    "createElement",
    "appendTo",
    "body",
    "getStyle",
    "remove",
    "styles",
    "methodName",
    "context",
    "currentValues",
    "styleProperty",
    "style",
    "value",
    "includeStylesheet",
    "uri",
    "Stylesheet",
    "includeFile",
    "members",
    "show",
    "_forEachElementWrapped",
    "item",
    "currentVal",
    "prevVal",
    "$$qPrevDisp",
    "newVal",
    "getDocument",
    "setStyle",
    "hide",
    "prevStyle",
    "getPosition",
    "Location",
    "getOffset",
    "mode",
    "get",
    "name",
    "test",
    "lang",
    "String",
    "camelCase",
    "_forEachElement",
    "Style",
    "set",
    "setStyles",
    "getStyles",
    "names",
    "i",
    "length",
    "addClass",
    "Class",
    "add",
    "addClasses",
    "removeClass",
    "removeClasses",
    "hasClass",
    "has",
    "getClass",
    "toggleClass",
    "bCls",
    "toggleClasses",
    "l",
    "replaceClass",
    "oldName",
    "newName",
    "replace",
    "defer",
    "$attachAll",
    "$attach"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Css.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * CSS/Style property manipulation module\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Css\", {\n  statics: {\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    _getHeight(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n          var elementHeight;\n          if (force) {\n            var stylesToSwap = {\n              display: \"block\",\n              position: \"absolute\",\n              visibility: \"hidden\"\n            };\n\n            elementHeight = qx.module.Css.__swap(\n              elem,\n              stylesToSwap,\n              \"_getHeight\",\n              this\n            );\n          } else {\n            elementHeight = qx.bom.element.Dimension.getHeight(elem);\n          }\n\n          return elementHeight;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getHeight(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getHeight(elem);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    _getWidth(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n          var elementWidth;\n          if (force) {\n            var stylesToSwap = {\n              display: \"block\",\n              position: \"absolute\",\n              visibility: \"hidden\"\n            };\n\n            elementWidth = qx.module.Css.__swap(\n              elem,\n              stylesToSwap,\n              \"_getWidth\",\n              this\n            );\n          } else {\n            elementWidth = qx.bom.element.Dimension.getWidth(elem);\n          }\n\n          return elementWidth;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getWidth(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getWidth(elem);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    _getContentHeight(force) {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        var contentHeight;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n\n          contentHeight = qx.module.Css.__swap(\n            obj,\n            stylesToSwap,\n            \"_getContentHeight\",\n            this\n          );\n        } else {\n          contentHeight = qx.bom.element.Dimension.getContentHeight(obj);\n        }\n\n        return contentHeight;\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    _getContentWidth(force) {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        var contentWidth;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n\n          contentWidth = qx.module.Css.__swap(\n            obj,\n            stylesToSwap,\n            \"_getContentWidth\",\n            this\n          );\n        } else {\n          contentWidth = qx.bom.element.Dimension.getContentWidth(obj);\n        }\n\n        return contentWidth;\n      }\n\n      return null;\n    },\n\n    /**\n     * Maps HTML elements to their default \"display\" style values.\n     */\n    __displayDefaults: {},\n\n    /**\n     * Attempts tp determine the default \"display\" style value for\n     * elements with the given tag name.\n     *\n     * @param tagName {String} Tag name\n     * @param  doc {Document?} Document element. Default: The current document\n     * @return {String} The default \"display\" value, e.g. <code>inline</code>\n     * or <code>block</code>\n     */\n    __getDisplayDefault(tagName, doc) {\n      var defaults = qx.module.Css.__displayDefaults;\n      if (!defaults[tagName]) {\n        var docu = doc || document;\n        var tempEl = qxWeb(docu.createElement(tagName)).appendTo(doc.body);\n        defaults[tagName] = tempEl.getStyle(\"display\");\n        tempEl.remove();\n      }\n\n      return defaults[tagName] || \"\";\n    },\n\n    /**\n     * Swaps the given styles of the element and execute the callback\n     * before the original values are restored.\n     *\n     * Finally returns the return value of the callback.\n     *\n     * @param element {Element} the DOM element to operate on\n     * @param styles {Map} the styles to swap\n     * @param methodName {String} the callback functions name\n     * @param context {Object} the context in which the callback should be called\n     * @return {Object} the return value of the callback\n     */\n    __swap(element, styles, methodName, context) {\n      // get the current values\n      var currentValues = {};\n      for (var styleProperty in styles) {\n        currentValues[styleProperty] = element.style[styleProperty];\n        element.style[styleProperty] = styles[styleProperty];\n      }\n\n      var value = context[methodName]();\n\n      for (var styleProperty in currentValues) {\n        element.style[styleProperty] = currentValues[styleProperty];\n      }\n\n      return value;\n    },\n\n    /**\n     * Includes a Stylesheet file\n     *\n     * @attachStatic {qxWeb}\n     * @param uri {String} The stylesheet's URI\n     * @param doc {Document?} Document to modify\n     */\n    includeStylesheet(uri, doc) {\n      qx.bom.Stylesheet.includeFile(uri, doc);\n    }\n  },\n\n  members: {\n    /**\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    getHeight(force) {\n      return this._getHeight(force);\n    },\n\n    /**\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    getWidth(force) {\n      return this._getWidth(force);\n    },\n\n    /**\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    getContentHeight(force) {\n      return this._getContentHeight(force);\n    },\n\n    /**\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    getContentWidth(force) {\n      return this._getContentWidth(force);\n    },\n\n    /**\n     * Shows any elements with \"display: none\" in the collection. If an element\n     * was hidden by using the {@link #hide} method, its previous\n     * \"display\" style value will be re-applied. Otherwise, the\n     * default \"display\" value for the element type will be applied.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    show() {\n      this._forEachElementWrapped(function (item) {\n        var currentVal = item.getStyle(\"display\");\n        var prevVal = item[0].$$qPrevDisp;\n        var newVal;\n        if (currentVal == \"none\") {\n          if (prevVal && prevVal != \"none\") {\n            newVal = prevVal;\n          } else {\n            var doc = qxWeb.getDocument(item[0]);\n            newVal = qx.module.Css.__getDisplayDefault(item[0].tagName, doc);\n          }\n          item.setStyle(\"display\", newVal);\n          item[0].$$qPrevDisp = \"none\";\n        }\n      });\n\n      return this;\n    },\n\n    /**\n     * Hides all elements in the collection by setting their \"display\"\n     * style to \"none\". The previous value is stored so it can be re-applied\n     * when {@link #show} is called.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    hide() {\n      this._forEachElementWrapped(function (item) {\n        var prevStyle = item.getStyle(\"display\");\n        if (prevStyle !== \"none\") {\n          item[0].$$qPrevDisp = prevStyle;\n          item.setStyle(\"display\", \"none\");\n        }\n      });\n\n      return this;\n    },\n\n    /**\n     * Returns the distance between the first element in the collection and its\n     * offset parent\n     *\n     * @attach {qxWeb}\n     * @return {Map} a map with the keys <code>left</code> and <code>top</code>\n     * containing the distance between the elements\n     */\n    getPosition() {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        return qx.bom.element.Location.getPosition(obj);\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns the computed location of the given element in the context of the\n     * document dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @attach {qxWeb}\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} A map with the keys <code>left</code>, <code>top</code>,\n     * <code>right</code> and <code>bottom</code> which contains the distance\n     * of the element relative to the document.\n     */\n    getOffset(mode) {\n      var elem = this[0];\n\n      if (elem && qx.dom.Node.isElement(elem)) {\n        return qx.bom.element.Location.get(elem, mode);\n      }\n\n      return null;\n    },\n\n    /**\n     * Modifies the given style property on all elements in the collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the style property to modify\n     * @param value {var} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyle(name, value) {\n      if (/\\w-\\w/.test(name)) {\n        name = qx.lang.String.camelCase(name);\n      }\n      this._forEachElement(function (item) {\n        qx.bom.element.Style.set(item, name, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the value of the given style property for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Style property name\n     * @return {var} Style property value\n     */\n    getStyle(name) {\n      if (this[0] && qx.dom.Node.isElement(this[0])) {\n        if (/\\w-\\w/.test(name)) {\n          name = qx.lang.String.camelCase(name);\n        }\n        return qx.bom.element.Style.get(this[0], name);\n      }\n      return null;\n    },\n\n    /**\n     * Sets multiple style properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param styles {Map} A map of style property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyles(styles) {\n      for (var name in styles) {\n        this.setStyle(name, styles[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple style properties for each item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of style property names\n     * @return {Map} Map of style property name/value pairs\n     */\n    getStyles(names) {\n      var styles = {};\n      for (var i = 0; i < names.length; i++) {\n        styles[names[i]] = this.getStyle(names[i]);\n      }\n      return styles;\n    },\n\n    /**\n     * Adds a class name to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    addClass(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.add(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Adds multiple class names to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to add\n     * @return {qxWeb} The collection for chaining\n     */\n    addClasses(names) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.addClasses(item, names);\n      });\n      return this;\n    },\n\n    /**\n     * Removes a class name from each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} The class name to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClass(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.remove(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Removes multiple class names from each element in the collection.\n     * Use {@link qx.module.Attribute#removeAttribute} to remove all classes.\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClasses(names) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.removeClasses(item, names);\n      });\n      return this;\n    },\n\n    /**\n     * Checks if the first element in the collection has the given class name\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name to check for\n     * @return {Boolean} <code>true</code> if the first item has the given class name\n     */\n    hasClass(name) {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return false;\n      }\n      return qx.bom.element.Class.has(this[0], name);\n    },\n\n    /**\n     * Returns the class name of the first element in the collection\n     *\n     * @attach {qxWeb}\n     * @return {String} Class name\n     */\n    getClass() {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return \"\";\n      }\n      return qx.bom.element.Class.get(this[0]);\n    },\n\n    /**\n     * Toggles the given class name on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClass(name) {\n      var bCls = qx.bom.element.Class;\n      this._forEachElement(function (item) {\n        bCls.has(item, name) ? bCls.remove(item, name) : bCls.add(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Toggles the given list of class names on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} Class names\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClasses(names) {\n      for (var i = 0, l = names.length; i < l; i++) {\n        this.toggleClass(names[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Replaces a class name on each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param oldName {String} Class name to remove\n     * @param newName {String} Class name to add\n     * @return {qxWeb} The collection for chaining\n     */\n    replaceClass(oldName, newName) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.replace(item, oldName, newName);\n      });\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n    // manually attach private method which is ignored by attachAll\n    qxWeb.$attach({\n      _getWidth: statics._getWidth,\n      _getHeight: statics._getHeight,\n      _getContentHeight: statics._getContentHeight,\n      _getContentWidth: statics._getContentWidth\n    });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,eAApB,EAAqC;IACnCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,UATO,sBASIC,KATJ,EASW;QAChB,IAAIC,IAAI,GAAG,KAAK,CAAL,CAAX;;QAEA,IAAIA,IAAJ,EAAU;UACR,IAAIR,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBH,IAAtB,CAAJ,EAAiC;YAC/B,IAAII,aAAJ;;YACA,IAAIL,KAAJ,EAAW;cACT,IAAIM,YAAY,GAAG;gBACjBC,OAAO,EAAE,OADQ;gBAEjBC,QAAQ,EAAE,UAFO;gBAGjBC,UAAU,EAAE;cAHK,CAAnB;cAMAJ,aAAa,GAAGZ,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcC,SAAd,CACdX,IADc,EAEdK,YAFc,EAGd,YAHc,EAId,IAJc,CAAhB;YAMD,CAbD,MAaO;cACLD,aAAa,GAAGZ,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,SAAzB,CAAmCf,IAAnC,CAAhB;YACD;;YAED,OAAOI,aAAP;UACD,CApBD,MAoBO,IAAIZ,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYc,UAAZ,CAAuBhB,IAAvB,CAAJ,EAAkC;YACvC,OAAOR,EAAE,CAACoB,GAAH,CAAOK,QAAP,CAAgBF,SAAhB,CAA0BvB,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYgB,SAAZ,CAAsBlB,IAAtB,CAA1B,CAAP;UACD,CAFM,MAEA,IAAIR,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYiB,QAAZ,CAAqBnB,IAArB,CAAJ,EAAgC;YACrC,OAAOR,EAAE,CAACoB,GAAH,CAAOQ,QAAP,CAAgBL,SAAhB,CAA0Bf,IAA1B,CAAP;UACD;QACF;;QAED,OAAO,IAAP;MACD,CAzCM;;MA2CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIqB,SAnDO,qBAmDGtB,KAnDH,EAmDU;QACf,IAAIC,IAAI,GAAG,KAAK,CAAL,CAAX;;QAEA,IAAIA,IAAJ,EAAU;UACR,IAAIR,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBH,IAAtB,CAAJ,EAAiC;YAC/B,IAAIsB,YAAJ;;YACA,IAAIvB,KAAJ,EAAW;cACT,IAAIM,YAAY,GAAG;gBACjBC,OAAO,EAAE,OADQ;gBAEjBC,QAAQ,EAAE,UAFO;gBAGjBC,UAAU,EAAE;cAHK,CAAnB;cAMAc,YAAY,GAAG9B,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcC,SAAd,CACbX,IADa,EAEbK,YAFa,EAGb,WAHa,EAIb,IAJa,CAAf;YAMD,CAbD,MAaO;cACLiB,YAAY,GAAG9B,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBS,QAAzB,CAAkCvB,IAAlC,CAAf;YACD;;YAED,OAAOsB,YAAP;UACD,CApBD,MAoBO,IAAI9B,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYc,UAAZ,CAAuBhB,IAAvB,CAAJ,EAAkC;YACvC,OAAOR,EAAE,CAACoB,GAAH,CAAOK,QAAP,CAAgBM,QAAhB,CAAyB/B,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYgB,SAAZ,CAAsBlB,IAAtB,CAAzB,CAAP;UACD,CAFM,MAEA,IAAIR,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYiB,QAAZ,CAAqBnB,IAArB,CAAJ,EAAgC;YACrC,OAAOR,EAAE,CAACoB,GAAH,CAAOQ,QAAP,CAAgBG,QAAhB,CAAyBvB,IAAzB,CAAP;UACD;QACF;;QAED,OAAO,IAAP;MACD,CAnFM;;MAqFP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIwB,iBA/FO,6BA+FWzB,KA/FX,EA+FkB;QACvB,IAAI0B,GAAG,GAAG,KAAK,CAAL,CAAV;;QACA,IAAIjC,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBsB,GAAtB,CAAJ,EAAgC;UAC9B,IAAIC,aAAJ;;UACA,IAAI3B,KAAJ,EAAW;YACT,IAAIM,YAAY,GAAG;cACjBE,QAAQ,EAAE,UADO;cAEjBC,UAAU,EAAE,QAFK;cAGjBF,OAAO,EAAE;YAHQ,CAAnB;YAMAoB,aAAa,GAAGlC,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcC,SAAd,CACdc,GADc,EAEdpB,YAFc,EAGd,mBAHc,EAId,IAJc,CAAhB;UAMD,CAbD,MAaO;YACLqB,aAAa,GAAGlC,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBa,gBAAzB,CAA0CF,GAA1C,CAAhB;UACD;;UAED,OAAOC,aAAP;QACD;;QAED,OAAO,IAAP;MACD,CAxHM;;MA0HP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,gBApIO,4BAoIU7B,KApIV,EAoIiB;QACtB,IAAI0B,GAAG,GAAG,KAAK,CAAL,CAAV;;QACA,IAAIjC,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBsB,GAAtB,CAAJ,EAAgC;UAC9B,IAAII,YAAJ;;UACA,IAAI9B,KAAJ,EAAW;YACT,IAAIM,YAAY,GAAG;cACjBE,QAAQ,EAAE,UADO;cAEjBC,UAAU,EAAE,QAFK;cAGjBF,OAAO,EAAE;YAHQ,CAAnB;YAMAuB,YAAY,GAAGrC,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcC,SAAd,CACbc,GADa,EAEbpB,YAFa,EAGb,kBAHa,EAIb,IAJa,CAAf;UAMD,CAbD,MAaO;YACLwB,YAAY,GAAGrC,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBgB,eAAzB,CAAyCL,GAAzC,CAAf;UACD;;UAED,OAAOI,YAAP;QACD;;QAED,OAAO,IAAP;MACD,CA7JM;;MA+JP;AACJ;AACA;MACIE,SAAiB,EAAE,EAlKZ;;MAoKP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SA7KO,qBA6KaC,OA7Kb,EA6KsBC,GA7KtB,EA6K2B;QAChC,IAAIC,QAAQ,GAAG3C,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcqB,SAA7B;;QACA,IAAI,CAACI,QAAQ,CAACF,OAAD,CAAb,EAAwB;UACtB,IAAIG,IAAI,GAAGF,GAAG,IAAIG,QAAlB;UACA,IAAIC,MAAM,GAAGC,KAAK,CAACH,IAAI,CAACI,aAAL,CAAmBP,OAAnB,CAAD,CAAL,CAAmCQ,QAAnC,CAA4CP,GAAG,CAACQ,IAAhD,CAAb;UACAP,QAAQ,CAACF,OAAD,CAAR,GAAoBK,MAAM,CAACK,QAAP,CAAgB,SAAhB,CAApB;UACAL,MAAM,CAACM,MAAP;QACD;;QAED,OAAOT,QAAQ,CAACF,OAAD,CAAR,IAAqB,EAA5B;MACD,CAvLM;;MAyLP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACItB,SArMO,qBAqMAE,OArMA,EAqMSgC,MArMT,EAqMiBC,UArMjB,EAqM6BC,OArM7B,EAqMsC;QAC3C;QACA,IAAIC,aAAa,GAAG,EAApB;;QACA,KAAK,IAAIC,aAAT,IAA0BJ,MAA1B,EAAkC;UAChCG,aAAa,CAACC,aAAD,CAAb,GAA+BpC,OAAO,CAACqC,KAAR,CAAcD,aAAd,CAA/B;UACApC,OAAO,CAACqC,KAAR,CAAcD,aAAd,IAA+BJ,MAAM,CAACI,aAAD,CAArC;QACD;;QAED,IAAIE,KAAK,GAAGJ,OAAO,CAACD,UAAD,CAAP,EAAZ;;QAEA,KAAK,IAAIG,aAAT,IAA0BD,aAA1B,EAAyC;UACvCnC,OAAO,CAACqC,KAAR,CAAcD,aAAd,IAA+BD,aAAa,CAACC,aAAD,CAA5C;QACD;;QAED,OAAOE,KAAP;MACD,CApNM;;MAsNP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,iBA7NO,6BA6NWC,GA7NX,EA6NgBnB,GA7NhB,EA6NqB;QAC1B1C,EAAE,CAACoB,GAAH,CAAO0C,UAAP,CAAkBC,WAAlB,CAA8BF,GAA9B,EAAmCnB,GAAnC;MACD;IA/NM,CAD0B;IAmOnCsB,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIzC,SAPO,qBAOGhB,KAPH,EAOU;QACf,OAAO,KAAKD,UAAL,CAAgBC,KAAhB,CAAP;MACD,CATM;;MAWP;AACJ;AACA;AACA;AACA;AACA;MACIwB,QAjBO,oBAiBExB,KAjBF,EAiBS;QACd,OAAO,KAAKsB,SAAL,CAAetB,KAAf,CAAP;MACD,CAnBM;;MAqBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI4B,gBA7BO,4BA6BU5B,KA7BV,EA6BiB;QACtB,OAAO,KAAKyB,iBAAL,CAAuBzB,KAAvB,CAAP;MACD,CA/BM;;MAiCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI+B,eAzCO,2BAyCS/B,KAzCT,EAyCgB;QACrB,OAAO,KAAK6B,gBAAL,CAAsB7B,KAAtB,CAAP;MACD,CA3CM;;MA6CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI0D,IAtDO,kBAsDA;QACL,KAAKC,sBAAL,CAA4B,UAAUC,IAAV,EAAgB;UAC1C,IAAIC,UAAU,GAAGD,IAAI,CAAChB,QAAL,CAAc,SAAd,CAAjB;UACA,IAAIkB,OAAO,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAtB;UACA,IAAIC,MAAJ;;UACA,IAAIH,UAAU,IAAI,MAAlB,EAA0B;YACxB,IAAIC,OAAO,IAAIA,OAAO,IAAI,MAA1B,EAAkC;cAChCE,MAAM,GAAGF,OAAT;YACD,CAFD,MAEO;cACL,IAAI3B,GAAG,GAAGK,KAAK,CAACyB,WAAN,CAAkBL,IAAI,CAAC,CAAD,CAAtB,CAAV;cACAI,MAAM,GAAGvE,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcsB,SAAd,CAAkC2B,IAAI,CAAC,CAAD,CAAJ,CAAQ1B,OAA1C,EAAmDC,GAAnD,CAAT;YACD;;YACDyB,IAAI,CAACM,QAAL,CAAc,SAAd,EAAyBF,MAAzB;YACAJ,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,GAAsB,MAAtB;UACD;QACF,CAdD;;QAgBA,OAAO,IAAP;MACD,CAxEM;;MA0EP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACII,IAlFO,kBAkFA;QACL,KAAKR,sBAAL,CAA4B,UAAUC,IAAV,EAAgB;UAC1C,IAAIQ,SAAS,GAAGR,IAAI,CAAChB,QAAL,CAAc,SAAd,CAAhB;;UACA,IAAIwB,SAAS,KAAK,MAAlB,EAA0B;YACxBR,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,GAAsBK,SAAtB;YACAR,IAAI,CAACM,QAAL,CAAc,SAAd,EAAyB,MAAzB;UACD;QACF,CAND;;QAQA,OAAO,IAAP;MACD,CA5FM;;MA8FP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,WAtGO,yBAsGO;QACZ,IAAI3C,GAAG,GAAG,KAAK,CAAL,CAAV;;QACA,IAAIjC,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBsB,GAAtB,CAAJ,EAAgC;UAC9B,OAAOjC,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAewD,QAAf,CAAwBD,WAAxB,CAAoC3C,GAApC,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CA7GM;;MA+GP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI6C,SAjIO,qBAiIGC,IAjIH,EAiIS;QACd,IAAIvE,IAAI,GAAG,KAAK,CAAL,CAAX;;QAEA,IAAIA,IAAI,IAAIR,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsBH,IAAtB,CAAZ,EAAyC;UACvC,OAAOR,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAewD,QAAf,CAAwBG,GAAxB,CAA4BxE,IAA5B,EAAkCuE,IAAlC,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CAzIM;;MA2IP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIN,QAnJO,oBAmJEQ,IAnJF,EAmJQtB,KAnJR,EAmJe;QACpB,IAAI,QAAQuB,IAAR,CAAaD,IAAb,CAAJ,EAAwB;UACtBA,IAAI,GAAGjF,EAAE,CAACmF,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyBJ,IAAzB,CAAP;QACD;;QACD,KAAKK,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAekE,KAAf,CAAqBC,GAArB,CAAyBrB,IAAzB,EAA+Bc,IAA/B,EAAqCtB,KAArC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CA3JM;;MA6JP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIR,QArKO,oBAqKE8B,IArKF,EAqKQ;QACb,IAAI,KAAK,CAAL,KAAWjF,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsB,KAAK,CAAL,CAAtB,CAAf,EAA+C;UAC7C,IAAI,QAAQuE,IAAR,CAAaD,IAAb,CAAJ,EAAwB;YACtBA,IAAI,GAAGjF,EAAE,CAACmF,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyBJ,IAAzB,CAAP;UACD;;UACD,OAAOjF,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAekE,KAAf,CAAqBP,GAArB,CAAyB,KAAK,CAAL,CAAzB,EAAkCC,IAAlC,CAAP;QACD;;QACD,OAAO,IAAP;MACD,CA7KM;;MA+KP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIQ,SAtLO,qBAsLGpC,MAtLH,EAsLW;QAChB,KAAK,IAAI4B,IAAT,IAAiB5B,MAAjB,EAAyB;UACvB,KAAKoB,QAAL,CAAcQ,IAAd,EAAoB5B,MAAM,CAAC4B,IAAD,CAA1B;QACD;;QACD,OAAO,IAAP;MACD,CA3LM;;MA6LP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIS,SArMO,qBAqMGC,KArMH,EAqMU;QACf,IAAItC,MAAM,GAAG,EAAb;;QACA,KAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;UACrCvC,MAAM,CAACsC,KAAK,CAACC,CAAD,CAAN,CAAN,GAAmB,KAAKzC,QAAL,CAAcwC,KAAK,CAACC,CAAD,CAAnB,CAAnB;QACD;;QACD,OAAOvC,MAAP;MACD,CA3MM;;MA6MP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIyC,QApNO,oBAoNEb,IApNF,EAoNQ;QACb,KAAKK,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBC,GAArB,CAAyB7B,IAAzB,EAA+Bc,IAA/B;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAzNM;;MA2NP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIgB,UAlOO,sBAkOIN,KAlOJ,EAkOW;QAChB,KAAKL,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBE,UAArB,CAAgC9B,IAAhC,EAAsCwB,KAAtC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAvOM;;MAyOP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIO,WAhPO,uBAgPKjB,IAhPL,EAgPW;QAChB,KAAKK,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqB3C,MAArB,CAA4Be,IAA5B,EAAkCc,IAAlC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CArPM;;MAuPP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIkB,aA/PO,yBA+POR,KA/PP,EA+Pc;QACnB,KAAKL,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBI,aAArB,CAAmChC,IAAnC,EAAyCwB,KAAzC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CApQM;;MAsQP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIS,QA7QO,oBA6QEnB,IA7QF,EA6QQ;QACb,IAAI,CAAC,KAAK,CAAL,CAAD,IAAY,CAACjF,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsB,KAAK,CAAL,CAAtB,CAAjB,EAAiD;UAC/C,OAAO,KAAP;QACD;;QACD,OAAOX,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBM,GAArB,CAAyB,KAAK,CAAL,CAAzB,EAAkCpB,IAAlC,CAAP;MACD,CAlRM;;MAoRP;AACJ;AACA;AACA;AACA;AACA;MACIqB,QA1RO,sBA0RI;QACT,IAAI,CAAC,KAAK,CAAL,CAAD,IAAY,CAACtG,EAAE,CAACS,GAAH,CAAOC,IAAP,CAAYC,SAAZ,CAAsB,KAAK,CAAL,CAAtB,CAAjB,EAAiD;UAC/C,OAAO,EAAP;QACD;;QACD,OAAOX,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBf,GAArB,CAAyB,KAAK,CAAL,CAAzB,CAAP;MACD,CA/RM;;MAiSP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIuB,WAxSO,uBAwSKtB,IAxSL,EAwSW;QAChB,IAAIuB,IAAI,GAAGxG,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAA1B;;QACA,KAAKT,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCqC,IAAI,CAACH,GAAL,CAASlC,IAAT,EAAec,IAAf,IAAuBuB,IAAI,CAACpD,MAAL,CAAYe,IAAZ,EAAkBc,IAAlB,CAAvB,GAAiDuB,IAAI,CAACR,GAAL,CAAS7B,IAAT,EAAec,IAAf,CAAjD;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CA9SM;;MAgTP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIwB,aAvTO,yBAuTOd,KAvTP,EAuTc;QACnB,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWc,CAAC,GAAGf,KAAK,CAACE,MAA1B,EAAkCD,CAAC,GAAGc,CAAtC,EAAyCd,CAAC,EAA1C,EAA8C;UAC5C,KAAKW,WAAL,CAAiBZ,KAAK,CAACC,CAAD,CAAtB;QACD;;QACD,OAAO,IAAP;MACD,CA5TM;;MA8TP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIe,YAtUO,wBAsUMC,OAtUN,EAsUeC,OAtUf,EAsUwB;QAC7B,KAAKvB,eAAL,CAAqB,UAAUnB,IAAV,EAAgB;UACnCnE,EAAE,CAACoB,GAAH,CAAOC,OAAP,CAAe0E,KAAf,CAAqBe,OAArB,CAA6B3C,IAA7B,EAAmCyC,OAAnC,EAA4CC,OAA5C;QACD,CAFD;;QAGA,OAAO,IAAP;MACD;IA3UM,CAnO0B;IAijBnCE,KAjjBmC,iBAijB7B1G,OAjjB6B,EAijBpB;MACb0C,KAAK,CAACiE,UAAN,CAAiB,IAAjB,EADa,CAEb;;MACAjE,KAAK,CAACkE,OAAN,CAAc;QACZpF,SAAS,EAAExB,OAAO,CAACwB,SADP;QAEZvB,UAAU,EAAED,OAAO,CAACC,UAFR;QAGZ0B,iBAAiB,EAAE3B,OAAO,CAAC2B,iBAHf;QAIZI,gBAAgB,EAAE/B,OAAO,CAAC+B;MAJd,CAAd;IAMD;EA1jBkC,CAArC;EAtBApC,EAAE,CAACiB,MAAH,CAAUC,GAAV,CAAcf,aAAd,GAA8BA,aAA9B"
}