{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_getHeight",
    "force",
    "elem",
    "dom",
    "Node",
    "isElement",
    "elementHeight",
    "stylesToSwap",
    "display",
    "position",
    "visibility",
    "module",
    "Css",
    "__swap",
    "bom",
    "element",
    "Dimension",
    "getHeight",
    "isDocument",
    "Document",
    "getWindow",
    "isWindow",
    "Viewport",
    "_getWidth",
    "elementWidth",
    "getWidth",
    "_getContentHeight",
    "obj",
    "contentHeight",
    "getContentHeight",
    "_getContentWidth",
    "contentWidth",
    "getContentWidth",
    "__displayDefaults",
    "__getDisplayDefault",
    "__P_288_2",
    "tagName",
    "doc",
    "defaults",
    "docu",
    "document",
    "tempEl",
    "qxWeb",
    "createElement",
    "appendTo",
    "body",
    "getStyle",
    "remove",
    "__P_288_0",
    "styles",
    "methodName",
    "context",
    "currentValues",
    "styleProperty",
    "style",
    "value",
    "includeStylesheet",
    "uri",
    "Stylesheet",
    "includeFile",
    "members",
    "show",
    "_forEachElementWrapped",
    "item",
    "currentVal",
    "prevVal",
    "$$qPrevDisp",
    "newVal",
    "getDocument",
    "setStyle",
    "hide",
    "prevStyle",
    "getPosition",
    "Location",
    "getOffset",
    "mode",
    "get",
    "name",
    "test",
    "lang",
    "String",
    "camelCase",
    "_forEachElement",
    "Style",
    "set",
    "setStyles",
    "getStyles",
    "names",
    "i",
    "length",
    "addClass",
    "Class",
    "add",
    "addClasses",
    "removeClass",
    "removeClasses",
    "hasClass",
    "has",
    "getClass",
    "toggleClass",
    "bCls",
    "toggleClasses",
    "l",
    "replaceClass",
    "oldName",
    "newName",
    "replace",
    "defer",
    "$attachAll",
    "$attach"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Css.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * CSS/Style property manipulation module\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Css\", {\n  statics: {\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    _getHeight(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n          var elementHeight;\n          if (force) {\n            var stylesToSwap = {\n              display: \"block\",\n              position: \"absolute\",\n              visibility: \"hidden\"\n            };\n\n            elementHeight = qx.module.Css.__swap(\n              elem,\n              stylesToSwap,\n              \"_getHeight\",\n              this\n            );\n          } else {\n            elementHeight = qx.bom.element.Dimension.getHeight(elem);\n          }\n\n          return elementHeight;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getHeight(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getHeight(elem);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    _getWidth(force) {\n      var elem = this[0];\n\n      if (elem) {\n        if (qx.dom.Node.isElement(elem)) {\n          var elementWidth;\n          if (force) {\n            var stylesToSwap = {\n              display: \"block\",\n              position: \"absolute\",\n              visibility: \"hidden\"\n            };\n\n            elementWidth = qx.module.Css.__swap(\n              elem,\n              stylesToSwap,\n              \"_getWidth\",\n              this\n            );\n          } else {\n            elementWidth = qx.bom.element.Dimension.getWidth(elem);\n          }\n\n          return elementWidth;\n        } else if (qx.dom.Node.isDocument(elem)) {\n          return qx.bom.Document.getWidth(qx.dom.Node.getWindow(elem));\n        } else if (qx.dom.Node.isWindow(elem)) {\n          return qx.bom.Viewport.getWidth(elem);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    _getContentHeight(force) {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        var contentHeight;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n\n          contentHeight = qx.module.Css.__swap(\n            obj,\n            stylesToSwap,\n            \"_getContentHeight\",\n            this\n          );\n        } else {\n          contentHeight = qx.bom.element.Dimension.getContentHeight(obj);\n        }\n\n        return contentHeight;\n      }\n\n      return null;\n    },\n\n    /**\n     * INTERNAL\n     *\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    _getContentWidth(force) {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        var contentWidth;\n        if (force) {\n          var stylesToSwap = {\n            position: \"absolute\",\n            visibility: \"hidden\",\n            display: \"block\"\n          };\n\n          contentWidth = qx.module.Css.__swap(\n            obj,\n            stylesToSwap,\n            \"_getContentWidth\",\n            this\n          );\n        } else {\n          contentWidth = qx.bom.element.Dimension.getContentWidth(obj);\n        }\n\n        return contentWidth;\n      }\n\n      return null;\n    },\n\n    /**\n     * Maps HTML elements to their default \"display\" style values.\n     */\n    __displayDefaults: {},\n\n    /**\n     * Attempts tp determine the default \"display\" style value for\n     * elements with the given tag name.\n     *\n     * @param tagName {String} Tag name\n     * @param  doc {Document?} Document element. Default: The current document\n     * @return {String} The default \"display\" value, e.g. <code>inline</code>\n     * or <code>block</code>\n     */\n    __getDisplayDefault(tagName, doc) {\n      var defaults = qx.module.Css.__displayDefaults;\n      if (!defaults[tagName]) {\n        var docu = doc || document;\n        var tempEl = qxWeb(docu.createElement(tagName)).appendTo(doc.body);\n        defaults[tagName] = tempEl.getStyle(\"display\");\n        tempEl.remove();\n      }\n\n      return defaults[tagName] || \"\";\n    },\n\n    /**\n     * Swaps the given styles of the element and execute the callback\n     * before the original values are restored.\n     *\n     * Finally returns the return value of the callback.\n     *\n     * @param element {Element} the DOM element to operate on\n     * @param styles {Map} the styles to swap\n     * @param methodName {String} the callback functions name\n     * @param context {Object} the context in which the callback should be called\n     * @return {Object} the return value of the callback\n     */\n    __swap(element, styles, methodName, context) {\n      // get the current values\n      var currentValues = {};\n      for (var styleProperty in styles) {\n        currentValues[styleProperty] = element.style[styleProperty];\n        element.style[styleProperty] = styles[styleProperty];\n      }\n\n      var value = context[methodName]();\n\n      for (var styleProperty in currentValues) {\n        element.style[styleProperty] = currentValues[styleProperty];\n      }\n\n      return value;\n    },\n\n    /**\n     * Includes a Stylesheet file\n     *\n     * @attachStatic {qxWeb}\n     * @param uri {String} The stylesheet's URI\n     * @param doc {Document?} Document to modify\n     */\n    includeStylesheet(uri, doc) {\n      qx.bom.Stylesheet.includeFile(uri, doc);\n    }\n  },\n\n  members: {\n    /**\n     * Returns the rendered height of the first element in the collection.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the height of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered height\n     */\n    getHeight(force) {\n      return this._getHeight(force);\n    },\n\n    /**\n     * Returns the rendered width of the first element in the collection\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the width of a <em>non displayed</em> element\n     * @return {Number} The first item's rendered width\n     */\n    getWidth(force) {\n      return this._getWidth(force);\n    },\n\n    /**\n     * Returns the content height of the first element in the collection.\n     * This is the maximum height the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content height of a <em>non displayed</em> element\n     * @return {Number} Computed content height\n     */\n    getContentHeight(force) {\n      return this._getContentHeight(force);\n    },\n\n    /**\n     * Returns the content width of the first element in the collection.\n     * This is the maximum width the element can use, excluding borders,\n     * margins, padding or scroll bars.\n     * @attach {qxWeb}\n     * @param force {Boolean?false} When true also get the content width of a <em>non displayed</em> element\n     * @return {Number} Computed content width\n     */\n    getContentWidth(force) {\n      return this._getContentWidth(force);\n    },\n\n    /**\n     * Shows any elements with \"display: none\" in the collection. If an element\n     * was hidden by using the {@link #hide} method, its previous\n     * \"display\" style value will be re-applied. Otherwise, the\n     * default \"display\" value for the element type will be applied.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    show() {\n      this._forEachElementWrapped(function (item) {\n        var currentVal = item.getStyle(\"display\");\n        var prevVal = item[0].$$qPrevDisp;\n        var newVal;\n        if (currentVal == \"none\") {\n          if (prevVal && prevVal != \"none\") {\n            newVal = prevVal;\n          } else {\n            var doc = qxWeb.getDocument(item[0]);\n            newVal = qx.module.Css.__getDisplayDefault(item[0].tagName, doc);\n          }\n          item.setStyle(\"display\", newVal);\n          item[0].$$qPrevDisp = \"none\";\n        }\n      });\n\n      return this;\n    },\n\n    /**\n     * Hides all elements in the collection by setting their \"display\"\n     * style to \"none\". The previous value is stored so it can be re-applied\n     * when {@link #show} is called.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    hide() {\n      this._forEachElementWrapped(function (item) {\n        var prevStyle = item.getStyle(\"display\");\n        if (prevStyle !== \"none\") {\n          item[0].$$qPrevDisp = prevStyle;\n          item.setStyle(\"display\", \"none\");\n        }\n      });\n\n      return this;\n    },\n\n    /**\n     * Returns the distance between the first element in the collection and its\n     * offset parent\n     *\n     * @attach {qxWeb}\n     * @return {Map} a map with the keys <code>left</code> and <code>top</code>\n     * containing the distance between the elements\n     */\n    getPosition() {\n      var obj = this[0];\n      if (qx.dom.Node.isElement(obj)) {\n        return qx.bom.element.Location.getPosition(obj);\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns the computed location of the given element in the context of the\n     * document dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @attach {qxWeb}\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} A map with the keys <code>left</code>, <code>top</code>,\n     * <code>right</code> and <code>bottom</code> which contains the distance\n     * of the element relative to the document.\n     */\n    getOffset(mode) {\n      var elem = this[0];\n\n      if (elem && qx.dom.Node.isElement(elem)) {\n        return qx.bom.element.Location.get(elem, mode);\n      }\n\n      return null;\n    },\n\n    /**\n     * Modifies the given style property on all elements in the collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Name of the style property to modify\n     * @param value {var} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyle(name, value) {\n      if (/\\w-\\w/.test(name)) {\n        name = qx.lang.String.camelCase(name);\n      }\n      this._forEachElement(function (item) {\n        qx.bom.element.Style.set(item, name, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the value of the given style property for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Style property name\n     * @return {var} Style property value\n     */\n    getStyle(name) {\n      if (this[0] && qx.dom.Node.isElement(this[0])) {\n        if (/\\w-\\w/.test(name)) {\n          name = qx.lang.String.camelCase(name);\n        }\n        return qx.bom.element.Style.get(this[0], name);\n      }\n      return null;\n    },\n\n    /**\n     * Sets multiple style properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param styles {Map} A map of style property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setStyles(styles) {\n      for (var name in styles) {\n        this.setStyle(name, styles[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple style properties for each item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of style property names\n     * @return {Map} Map of style property name/value pairs\n     */\n    getStyles(names) {\n      var styles = {};\n      for (var i = 0; i < names.length; i++) {\n        styles[names[i]] = this.getStyle(names[i]);\n      }\n      return styles;\n    },\n\n    /**\n     * Adds a class name to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    addClass(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.add(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Adds multiple class names to each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to add\n     * @return {qxWeb} The collection for chaining\n     */\n    addClasses(names) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.addClasses(item, names);\n      });\n      return this;\n    },\n\n    /**\n     * Removes a class name from each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} The class name to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClass(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.remove(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Removes multiple class names from each element in the collection.\n     * Use {@link qx.module.Attribute#removeAttribute} to remove all classes.\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of class names to remove\n     * @return {qxWeb} The collection for chaining\n     */\n    removeClasses(names) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.removeClasses(item, names);\n      });\n      return this;\n    },\n\n    /**\n     * Checks if the first element in the collection has the given class name\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name to check for\n     * @return {Boolean} <code>true</code> if the first item has the given class name\n     */\n    hasClass(name) {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return false;\n      }\n      return qx.bom.element.Class.has(this[0], name);\n    },\n\n    /**\n     * Returns the class name of the first element in the collection\n     *\n     * @attach {qxWeb}\n     * @return {String} Class name\n     */\n    getClass() {\n      if (!this[0] || !qx.dom.Node.isElement(this[0])) {\n        return \"\";\n      }\n      return qx.bom.element.Class.get(this[0]);\n    },\n\n    /**\n     * Toggles the given class name on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Class name\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClass(name) {\n      var bCls = qx.bom.element.Class;\n      this._forEachElement(function (item) {\n        bCls.has(item, name) ? bCls.remove(item, name) : bCls.add(item, name);\n      });\n      return this;\n    },\n\n    /**\n     * Toggles the given list of class names on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} Class names\n     * @return {qxWeb} The collection for chaining\n     */\n    toggleClasses(names) {\n      for (var i = 0, l = names.length; i < l; i++) {\n        this.toggleClass(names[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Replaces a class name on each element in the collection\n     *\n     * @attach {qxWeb}\n     * @param oldName {String} Class name to remove\n     * @param newName {String} Class name to add\n     * @return {qxWeb} The collection for chaining\n     */\n    replaceClass(oldName, newName) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Class.replace(item, oldName, newName);\n      });\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n    // manually attach private method which is ignored by attachAll\n    qxWeb.$attach({\n      _getWidth: statics._getWidth,\n      _getHeight: statics._getHeight,\n      _getContentHeight: statics._getContentHeight,\n      _getContentWidth: statics._getContentWidth\n    });\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}