{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "get",
    "bom",
    "Cookie",
    "set",
    "del",
    "defer",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Cookie.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Cookie handling module\n */\nqx.Bootstrap.define(\"qx.module.Cookie\", {\n  statics: {\n    /**\n     * Returns the string value of a cookie.\n     *\n     * @attachStatic {qxWeb, cookie.get}\n     * @param key {String} The key for the saved string value.\n     * @return {String|null} Returns the saved string value if the cookie\n     *    contains a value for the key, otherwise <code>null</code>\n     * @signature function(key)\n     */\n    get: qx.bom.Cookie.get,\n\n    /**\n     * Sets the string value of a cookie.\n     *\n     * @attachStatic {qxWeb, cookie.set}\n     * @param key {String} The key for the string value.\n     * @param value {String} The string value.\n     * @param expires {Number?null} Expires directive value in days starting from now,\n     *    or <code>null</code> if the cookie should be deleted when the browser\n     *    is closed.\n     * @param path {String?null} Path value.\n     * @param domain {String?null} Domain value.\n     * @param secure {Boolean?null} Secure flag.\n     * @signature function(key, value, expires, path, domain, secure)\n     */\n    set: qx.bom.Cookie.set,\n\n    /**\n     * Deletes the string value of a cookie.\n     *\n     * @attachStatic {qxWeb, cookie.del}\n     * @param key {String} The key for the string value.\n     * @param path {String?null} Path value.\n     * @param domain {String?null} Domain value.\n     * @signature function(key, path, domain)\n     */\n    del: qx.bom.Cookie.del\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this, \"cookie\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,kBAApB,EAAwC;IACtCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,EAAEN,EAAE,CAACO,GAAH,CAAOC,MAAP,CAAcF,GAVZ;;MAYP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,GAAG,EAAET,EAAE,CAACO,GAAH,CAAOC,MAAP,CAAcC,GA1BZ;;MA4BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,EAAEV,EAAE,CAACO,GAAH,CAAOC,MAAP,CAAcE;IArCZ,CAD6B;IAyCtCC,KAzCsC,iBAyChCN,OAzCgC,EAyCvB;MACbO,KAAK,CAACC,UAAN,CAAiB,IAAjB,EAAuB,QAAvB;IACD;EA3CqC,CAAxC;EArBAb,EAAE,CAACc,MAAH,CAAUN,MAAV,CAAiBL,aAAjB,GAAiCA,aAAjC"
}