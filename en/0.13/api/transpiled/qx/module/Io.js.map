{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "xhr",
    "url",
    "settings",
    "bom",
    "request",
    "Xhr",
    "open",
    "method",
    "async",
    "header",
    "key",
    "setRequestHeader",
    "script",
    "Script",
    "jsonp",
    "Jsonp",
    "callbackName",
    "setCallbackName",
    "callbackParam",
    "setCallbackParam",
    "setPrefix",
    "defer",
    "qxWeb",
    "$attachAll",
    "module",
    "Io"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Io.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This module provides basic IO functionality. It contains three ways to load\r\n * data:\r\n *\r\n * * XMLHttpRequest\r\n * * Script tag\r\n * * Script tag using JSONP\r\n *\r\n * @require(qx.bom.request.Xhr#open)\r\n *\r\n * @group (IO)\r\n */\r\nqx.Bootstrap.define(\"qx.module.Io\", {\r\n  statics: {\r\n    /**\r\n     * Returns a configured XMLHttpRequest object. Using the send method will\r\n     * finally send the request.\r\n     *\r\n     * @param url {String} Mandatory URL to load the data from.\r\n     * @param settings {Map?} Optional settings map which may contain one of\r\n     *   the following settings:\r\n     * <ul>\r\n     * <li><code>method</code> The method of the request. Default: <code>GET</code></li>\r\n     * <li><code>async</code> flag to mark the request as asynchronous. Default: <code>true</code></li>\r\n     * <li><code>header</code> A map of request headers.</li>\r\n     * </ul>\r\n     *\r\n     * @attachStatic {qxWeb, io.xhr}\r\n     * @return {qx.bom.request.Xhr} The request object.\r\n     */\r\n    xhr(url, settings) {\r\n      if (!settings) {\r\n        settings = {};\r\n      }\r\n      var xhr = new qx.bom.request.Xhr();\r\n      xhr.open(settings.method, url, settings.async);\r\n      if (settings.header) {\r\n        var header = settings.header;\r\n        for (var key in header) {\r\n          xhr.setRequestHeader(key, header[key]);\r\n        }\r\n      }\r\n      return xhr;\r\n    },\r\n\r\n    /**\r\n     * Returns a predefined script tag wrapper which can be used to load data\r\n     * from cross-domain origins.\r\n     *\r\n     * @param url {String} Mandatory URL to load the data from.\r\n     * @attachStatic {qxWeb, io.script}\r\n     * @return {qx.bom.request.Script} The request object.\r\n     */\r\n    script(url) {\r\n      var script = new qx.bom.request.Script();\r\n      script.open(\"get\", url);\r\n      return script;\r\n    },\r\n\r\n    /**\r\n     * Returns a predefined script tag wrapper which can be used to load data\r\n     * from cross-domain origins via JSONP.\r\n     *\r\n     * @param url {String} Mandatory URL to load the data from.\r\n     * @param settings {Map?} Optional settings map which may contain one of\r\n     *   the following settings:\r\n     *\r\n     * * <code>callbackName</code>: The name of the callback which will\r\n     *      be called by the loaded script.\r\n     * * <code>callbackParam</code>: The name of the callback expected by the server\r\n     * @attachStatic {qxWeb, io.jsonp}\r\n     * @return {qx.bom.request.Jsonp} The request object.\r\n     */\r\n    jsonp(url, settings) {\r\n      var script = new qx.bom.request.Jsonp();\r\n      if (settings && settings.callbackName) {\r\n        script.setCallbackName(settings.callbackName);\r\n      }\r\n      if (settings && settings.callbackParam) {\r\n        script.setCallbackParam(settings.callbackParam);\r\n      }\r\n      script.setPrefix(\"qxWeb.$$\"); // needed in case no callback name is given\r\n      script.open(\"get\", url);\r\n      return script;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qxWeb.$attachAll(this, \"io\");\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,cAAc,EAAE;IAClCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACC,GAAG,EAAEC,QAAQ,EAAE;QACjB,IAAI,CAACA,QAAQ,EAAE;UACbA,QAAQ,GAAG,CAAC,CAAC;QACf;QACA,IAAIF,GAAG,GAAG,IAAIN,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC;QAClCL,GAAG,CAACM,IAAI,CAACJ,QAAQ,CAACK,MAAM,EAAEN,GAAG,EAAEC,QAAQ,CAACM,KAAK,CAAC;QAC9C,IAAIN,QAAQ,CAACO,MAAM,EAAE;UACnB,IAAIA,MAAM,GAAGP,QAAQ,CAACO,MAAM;UAC5B,KAAK,IAAIC,GAAG,IAAID,MAAM,EAAE;YACtBT,GAAG,CAACW,gBAAgB,CAACD,GAAG,EAAED,MAAM,CAACC,GAAG,CAAC,CAAC;UACxC;QACF;QACA,OAAOV,GAAG;MACZ,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIY,MAAM,WAAAA,OAACX,GAAG,EAAE;QACV,IAAIW,MAAM,GAAG,IAAIlB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACS,MAAM,CAAC,CAAC;QACxCD,MAAM,CAACN,IAAI,CAAC,KAAK,EAAEL,GAAG,CAAC;QACvB,OAAOW,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,KAAK,WAAAA,MAACb,GAAG,EAAEC,QAAQ,EAAE;QACnB,IAAIU,MAAM,GAAG,IAAIlB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACW,KAAK,CAAC,CAAC;QACvC,IAAIb,QAAQ,IAAIA,QAAQ,CAACc,YAAY,EAAE;UACrCJ,MAAM,CAACK,eAAe,CAACf,QAAQ,CAACc,YAAY,CAAC;QAC/C;QACA,IAAId,QAAQ,IAAIA,QAAQ,CAACgB,aAAa,EAAE;UACtCN,MAAM,CAACO,gBAAgB,CAACjB,QAAQ,CAACgB,aAAa,CAAC;QACjD;QACAN,MAAM,CAACQ,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAC9BR,MAAM,CAACN,IAAI,CAAC,KAAK,EAAEL,GAAG,CAAC;QACvB,OAAOW,MAAM;MACf;IACF,CAAC;IAEDS,KAAK,WAAAA,MAACtB,OAAO,EAAE;MACbuB,KAAK,CAACC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;IAC9B;EACF,CAAC,CAAC;EA5GF7B,EAAE,CAAC8B,MAAM,CAACC,EAAE,CAAC5B,aAAa,GAAGA,aAAa;AAAC"
}