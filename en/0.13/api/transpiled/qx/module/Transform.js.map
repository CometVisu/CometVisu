{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "members",
    "transform",
    "transforms",
    "_forEachElement",
    "el",
    "bom",
    "element",
    "Transform",
    "translate",
    "value",
    "scale",
    "rotate",
    "skew",
    "setTransformOrigin",
    "setOrigin",
    "getTransformOrigin",
    "nodeType",
    "getOrigin",
    "setTransformStyle",
    "setStyle",
    "getTransformStyle",
    "getStyle",
    "setTransformPerspective",
    "setPerspective",
    "getTransformPerspective",
    "getPerspective",
    "setTransformPerspectiveOrigin",
    "setPerspectiveOrigin",
    "getTransformPerspectiveOrigin",
    "getPerspectiveOrigin",
    "setTransformBackfaceVisibility",
    "setBackfaceVisibility",
    "getTransformBackfaceVisibility",
    "getBackfaceVisibility",
    "defer",
    "statics",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Transform.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * This class is responsible for applying CSS3 transforms to the collection.\n * The implementation is mostly a cross browser wrapper for applying the\n * transforms.\n * The API is keep to the spec as close as possible.\n *\n * http://www.w3.org/TR/css3-3d-transforms/\n */\nqx.Bootstrap.define(\"qx.module.Transform\", {\n  members: {\n    /**\n     * Method to apply multiple transforms at once to the given element. It\n     * takes a map containing the transforms you want to apply plus the values\n     * e.g.<code>{scale: 2, rotate: \"5deg\"}</code>.\n     * The values can be either singular, which means a single value will\n     * be added to the CSS. If you give an array, the values will be split up\n     * and each array entry will be used for the X, Y or Z dimension in that\n     * order e.g. <code>{scale: [2, 0.5]}</code> will result in a element\n     * double the size in X direction and half the size in Y direction.\n     * Make sure your browser supports all transformations you apply.\n     *\n     * @attach {qxWeb}\n     * @param transforms {Map} The map containing the transforms and value.\n     * @return {qxWeb} This reference for chaining.\n     */\n    transform(transforms) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.transform(el, transforms);\n      });\n      return this;\n    },\n\n    /**\n     * Translates by the given value. For further details, take\n     * a look at the {@link #transform} method.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Array} The value to translate e.g. <code>\"10px\"</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    translate(value) {\n      return this.transform({ translate: value });\n    },\n\n    /**\n     * Scales by the given value. For further details, take\n     * a look at the {@link #transform} method.\n     *\n     * @attach {qxWeb}\n     * @param value {Number|Array} The value to scale.\n     * @return {qxWeb} This reference for chaining.\n     */\n    scale(value) {\n      return this.transform({ scale: value });\n    },\n\n    /**\n     * Rotates by the given value. For further details, take\n     * a look at the {@link #transform} method.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Array} The value to rotate e.g. <code>\"90deg\"</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    rotate(value) {\n      return this.transform({ rotate: value });\n    },\n\n    /**\n     * Skews by the given value. For further details, take\n     * a look at the {@link #transform} method.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Array} The value to skew e.g. <code>\"90deg\"</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    skew(value) {\n      return this.transform({ skew: value });\n    },\n\n    /**\n     * Sets the transform-origin property.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\n     *\n     * @attach {qxWeb}\n     * @param value {String} CSS position values like <code>50% 50%</code> or\n     *   <code>left top</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    setTransformOrigin(value) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.setOrigin(el, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the transform-origin property of the first element.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\n     *\n     * @attach {qxWeb}\n     * @return {String} The set property, e.g. <code>50% 50%</code> or null,\n     *   of the collection is empty.\n     */\n    getTransformOrigin() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Transform.getOrigin(this[0]);\n      }\n      return \"\";\n    },\n\n    /**\n     * Sets the transform-style property.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\n     *\n     * @attach {qxWeb}\n     * @param value {String} Either <code>flat</code> or <code>preserve-3d</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    setTransformStyle(value) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.setStyle(el, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the transform-style property of the first element.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\n     *\n     * @attach {qxWeb}\n     * @return {String} The set property, either <code>flat</code> or\n     *   <code>preserve-3d</code>.\n     */\n    getTransformStyle() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Transform.getStyle(this[0]);\n      }\n      return \"\";\n    },\n\n    /**\n     * Sets the perspective property.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#perspective-property\n     *\n     * @attach {qxWeb}\n     * @param value {Number} The perspective layer. Numbers between 100\n     *   and 5000 give the best results.\n     * @return {qxWeb} This reference for chaining.\n     */\n    setTransformPerspective(value) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.setPerspective(el, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the perspective property of the first element.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#perspective-property\n     *\n     * @attach {qxWeb}\n     * @return {String} The set property, e.g. <code>500</code>\n     */\n    getTransformPerspective() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Transform.getPerspective(this[0]);\n      }\n      return \"\";\n    },\n\n    /**\n     * Sets the perspective-origin property.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\n     *\n     * @attach {qxWeb}\n     * @param value {String} CSS position values like <code>50% 50%</code> or\n     *   <code>left top</code>.\n     * @return {qxWeb} This reference for chaining.\n     */\n    setTransformPerspectiveOrigin(value) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.setPerspectiveOrigin(el, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the perspective-origin property of the first element.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\n     *\n     * @attach {qxWeb}\n     * @return {String} The set property, e.g. <code>50% 50%</code>\n     */\n    getTransformPerspectiveOrigin() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Transform.getPerspectiveOrigin(this[0]);\n      }\n      return \"\";\n    },\n\n    /**\n     * Sets the backface-visibility property.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\n     *\n     * @attach {qxWeb}\n     * @param value {Boolean} <code>true</code> if the backface should be visible.\n     * @return {qxWeb} This reference for chaining.\n     */\n    setTransformBackfaceVisibility(value) {\n      this._forEachElement(function (el) {\n        qx.bom.element.Transform.setBackfaceVisibility(el, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the backface-visibility property of the first element.\n     *\n     * Spec: http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\n     *\n     * @attach {qxWeb}\n     * @return {Boolean} <code>true</code>, if the backface is visible.\n     */\n    getTransformBackfaceVisibility() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Transform.getBackfaceVisibility(this[0]);\n      }\n      return \"\";\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,qBAApB,EAA2C;IACzCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAhBO,qBAgBGC,UAhBH,EAgBe;QACpB,KAAKC,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBN,SAAzB,CAAmCG,EAAnC,EAAuCF,UAAvC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CArBM;;MAuBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIM,SA/BO,qBA+BGC,KA/BH,EA+BU;QACf,OAAO,KAAKR,SAAL,CAAe;UAAEO,SAAS,EAAEC;QAAb,CAAf,CAAP;MACD,CAjCM;;MAmCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KA3CO,iBA2CDD,KA3CC,EA2CM;QACX,OAAO,KAAKR,SAAL,CAAe;UAAES,KAAK,EAAED;QAAT,CAAf,CAAP;MACD,CA7CM;;MA+CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,MAvDO,kBAuDAF,KAvDA,EAuDO;QACZ,OAAO,KAAKR,SAAL,CAAe;UAAEU,MAAM,EAAEF;QAAV,CAAf,CAAP;MACD,CAzDM;;MA2DP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,IAnEO,gBAmEFH,KAnEE,EAmEK;QACV,OAAO,KAAKR,SAAL,CAAe;UAAEW,IAAI,EAAEH;QAAR,CAAf,CAAP;MACD,CArEM;;MAuEP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,kBAjFO,8BAiFYJ,KAjFZ,EAiFmB;QACxB,KAAKN,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBO,SAAzB,CAAmCV,EAAnC,EAAuCK,KAAvC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAtFM;;MAwFP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIM,kBAjGO,gCAiGc;QACnB,IAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQC,QAAR,KAAqB,CAApC,EAAuC;UACrC,OAAOrB,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBU,SAAzB,CAAmC,KAAK,CAAL,CAAnC,CAAP;QACD;;QACD,OAAO,EAAP;MACD,CAtGM;;MAwGP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,iBAjHO,6BAiHWT,KAjHX,EAiHkB;QACvB,KAAKN,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBY,QAAzB,CAAkCf,EAAlC,EAAsCK,KAAtC;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAtHM;;MAwHP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIW,iBAjIO,+BAiIa;QAClB,IAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQJ,QAAR,KAAqB,CAApC,EAAuC;UACrC,OAAOrB,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBc,QAAzB,CAAkC,KAAK,CAAL,CAAlC,CAAP;QACD;;QACD,OAAO,EAAP;MACD,CAtIM;;MAwIP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,uBAlJO,mCAkJiBb,KAlJjB,EAkJwB;QAC7B,KAAKN,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBgB,cAAzB,CAAwCnB,EAAxC,EAA4CK,KAA5C;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAvJM;;MAyJP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIe,uBAjKO,qCAiKmB;QACxB,IAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQR,QAAR,KAAqB,CAApC,EAAuC;UACrC,OAAOrB,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBkB,cAAzB,CAAwC,KAAK,CAAL,CAAxC,CAAP;QACD;;QACD,OAAO,EAAP;MACD,CAtKM;;MAwKP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,6BAlLO,yCAkLuBjB,KAlLvB,EAkL8B;QACnC,KAAKN,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBoB,oBAAzB,CAA8CvB,EAA9C,EAAkDK,KAAlD;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAvLM;;MAyLP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACImB,6BAjMO,2CAiMyB;QAC9B,IAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQZ,QAAR,KAAqB,CAApC,EAAuC;UACrC,OAAOrB,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBsB,oBAAzB,CAA8C,KAAK,CAAL,CAA9C,CAAP;QACD;;QACD,OAAO,EAAP;MACD,CAtMM;;MAwMP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,8BAjNO,0CAiNwBrB,KAjNxB,EAiN+B;QACpC,KAAKN,eAAL,CAAqB,UAAUC,EAAV,EAAc;UACjCT,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyBwB,qBAAzB,CAA+C3B,EAA/C,EAAmDK,KAAnD;QACD,CAFD;;QAGA,OAAO,IAAP;MACD,CAtNM;;MAwNP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIuB,8BAhOO,4CAgO0B;QAC/B,IAAI,KAAK,CAAL,KAAW,KAAK,CAAL,EAAQhB,QAAR,KAAqB,CAApC,EAAuC;UACrC,OAAOrB,EAAE,CAACU,GAAH,CAAOC,OAAP,CAAeC,SAAf,CAAyB0B,qBAAzB,CAA+C,KAAK,CAAL,CAA/C,CAAP;QACD;;QACD,OAAO,EAAP;MACD;IArOM,CADgC;IAyOzCC,KAzOyC,iBAyOnCC,OAzOmC,EAyO1B;MACbC,KAAK,CAACC,UAAN,CAAiB,IAAjB;IACD;EA3OwC,CAA3C;EA1BA1C,EAAE,CAAC2C,MAAH,CAAU/B,SAAV,CAAoBT,aAApB,GAAoCA,aAApC"
}