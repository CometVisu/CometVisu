{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "on",
    "onAny",
    "remove",
    "emit",
    "defer",
    "qxWeb",
    "$attachStatic",
    "messaging",
    "event",
    "Messaging",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Messaging.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Define messages to react on certain channels.\r\n *\r\n * The channel names will be used in the q.messaging.on method to define handlers which will\r\n * be called on certain channels and routes. The q.messaging.emit method can be used\r\n * to execute a given route on a channel. q.messaging.onAny defines a handler on any channel.\r\n *\r\n * @require(qx.event.Messaging#on)\r\n * @require(qx.event.Messaging#onAny)\r\n * @require(qx.event.Messaging#remove)\r\n * @require(qx.event.Messaging#emit)\r\n */\r\nqx.Bootstrap.define(\"qx.module.Messaging\", {\r\n  statics: {\r\n    /**\r\n     * Adds a route handler for the given channel. The route is called\r\n     * if the {@link #emit} method finds a match.\r\n     *\r\n     * @attachStatic{qxWeb, messaging.on}\r\n     * @param channel {String} The channel of the message.\r\n     * @param type {String|RegExp} The type, used for checking if the executed path matches.\r\n     * @param handler {Function} The handler to call if the route matches the executed path.\r\n     * @param scope {var ? null} The scope of the handler.\r\n     * @return {String} The id of the route used to remove the route.\r\n     * @signature function(channel, type, handler, scope)\r\n     */\r\n    on: null,\r\n\r\n    /**\r\n     * Adds a handler for the \"any\" channel. The \"any\" channel is called\r\n     * before all other channels.\r\n     *\r\n     * @attachStatic{qxWeb, messaging.onAny}\r\n     * @param type {String|RegExp} The route, used for checking if the executed path matches\r\n     * @param handler {Function} The handler to call if the route matches the executed path\r\n     * @param scope {var ? null} The scope of the handler.\r\n     * @return {String} The id of the route used to remove the route.\r\n     * @signature function(type, handler, scope)\r\n     */\r\n    onAny: null,\r\n\r\n    /**\r\n     * Removes a registered listener by the given id.\r\n     *\r\n     * @attachStatic{qxWeb, messaging.remove}\r\n     * @param id {String} The id of the registered listener.\r\n     * @signature function(id)\r\n     */\r\n    remove: null,\r\n\r\n    /**\r\n     * Sends a message on the given channel and informs all matching route handlers.\r\n     *\r\n     * @attachStatic{qxWeb, messaging.emit}\r\n     * @param channel {String} The channel of the message.\r\n     * @param path {String} The path to execute\r\n     * @param params {Map} The given parameters that should be propagated\r\n     * @param customData {var} The given custom data that should be propagated\r\n     * @signature function(channel, path, params, customData)\r\n     */\r\n    emit: null\r\n  },\r\n\r\n  defer(statics) {\r\n    qxWeb.$attachStatic({\r\n      messaging: new qx.event.Messaging()\r\n    });\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,qBAAqB,EAAE;IACzCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,EAAE,EAAE,IAAI;MAER;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAAK,EAAE,IAAI;MAEX;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,EAAE,IAAI;MAEZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,EAAE;IACR,CAAC;IAEDC,KAAK,WAAAA,MAACL,OAAO,EAAE;MACbM,KAAK,CAACC,aAAa,CAAC;QAClBC,SAAS,EAAE,IAAIb,EAAE,CAACc,KAAK,CAACC,SAAS,CAAC;MACpC,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAtFFf,EAAE,CAACgB,MAAM,CAACD,SAAS,CAACZ,aAAa,GAAGA,aAAa;AAAC"
}