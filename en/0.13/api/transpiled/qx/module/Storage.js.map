{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "setLocalItem",
    "key",
    "value",
    "bom",
    "Storage",
    "getLocal",
    "setItem",
    "getLocalItem",
    "getItem",
    "removeLocalItem",
    "removeItem",
    "getLocalLength",
    "getLength",
    "getLocalKey",
    "index",
    "getKey",
    "clearLocal",
    "clear",
    "forEachLocal",
    "callback",
    "scope",
    "forEach",
    "setSessionItem",
    "getSession",
    "getSessionItem",
    "removeSessionItem",
    "getSessionLength",
    "getSessionKey",
    "clearSession",
    "forEachSession",
    "defer",
    "qxWeb",
    "$attachStatic",
    "localStorage",
    "sessionStorage",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Storage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * This module offers a cross browser storage implementation. The API is aligned\n * with the API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is\n * also the preferred implementation used. As fallback for IE < 8, we use user data.\n * If both techniques are unsupported, we supply a in memory storage, which is\n * of course, not persistent.\n */\nqx.Bootstrap.define(\"qx.module.Storage\", {\n  statics: {\n    /**\n     * Store an item in the storage.\n     *\n     * @attachStatic {qxWeb, localStorage.setItem}\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setLocalItem(key, value) {\n      qx.bom.Storage.getLocal().setItem(key, value);\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @attachStatic {qxWeb, localStorage.getItem}\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getLocalItem(key) {\n      return qx.bom.Storage.getLocal().getItem(key);\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @attachStatic {qxWeb, localStorage.removeItem}\n     * @param key {String} The identifier.\n     */\n    removeLocalItem(key) {\n      qx.bom.Storage.getLocal().removeItem(key);\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @attachStatic {qxWeb, localStorage.getLength}\n     * @return {Number} The length of the storage.\n     */\n    getLocalLength() {\n      return qx.bom.Storage.getLocal().getLength();\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @attachStatic {qxWeb, localStorage.getKey}\n     * @param index {Number} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getLocalKey(index) {\n      return qx.bom.Storage.getLocal().getKey(index);\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     * @attachStatic {qxWeb, localStorage.clear}\n     */\n    clearLocal() {\n      qx.bom.Storage.getLocal().clear();\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @attachStatic {qxWeb, localStorage.forEach}\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEachLocal(callback, scope) {\n      qx.bom.Storage.getLocal().forEach(callback, scope);\n    },\n\n    /**\n     * Store an item in the storage.\n     *\n     * @attachStatic {qxWeb, sessionStorage.setItem}\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setSessionItem(key, value) {\n      qx.bom.Storage.getSession().setItem(key, value);\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @attachStatic {qxWeb, sessionStorage.getItem}\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getSessionItem(key) {\n      return qx.bom.Storage.getSession().getItem(key);\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @attachStatic {qxWeb, sessionStorage.removeItem}\n     * @param key {String} The identifier.\n     */\n    removeSessionItem(key) {\n      qx.bom.Storage.getSession().removeItem(key);\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @attachStatic {qxWeb, sessionStorage.getLength}\n     * @return {Number} The length of the storage.\n     */\n    getSessionLength() {\n      return qx.bom.Storage.getSession().getLength();\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @attachStatic {qxWeb, sessionStorage.getKey}\n     * @param index {Number} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getSessionKey(index) {\n      return qx.bom.Storage.getSession().getKey(index);\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     * @attachStatic {qxWeb, sessionStorage.clear}\n     */\n    clearSession() {\n      qx.bom.Storage.getSession().clear();\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @attachStatic {qxWeb, sessionStorage.forEach}\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEachSession(callback, scope) {\n      qx.bom.Storage.getSession().forEach(callback, scope);\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachStatic({\n      localStorage: {\n        setItem: statics.setLocalItem,\n        getItem: statics.getLocalItem,\n        removeItem: statics.removeLocalItem,\n        getLength: statics.getLocalLength,\n        getKey: statics.getLocalKey,\n        clear: statics.clearLocal,\n        forEach: statics.forEachLocal\n      },\n\n      sessionStorage: {\n        setItem: statics.setSessionItem,\n        getItem: statics.getSessionItem,\n        removeItem: statics.removeSessionItem,\n        getLength: statics.getSessionLength,\n        getKey: statics.getSessionKey,\n        clear: statics.clearSession,\n        forEach: statics.forEachSession\n      }\n    });\n  }\n});\n"
  ],
  "mappings": "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"
}