{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "setLocalItem",
    "key",
    "value",
    "bom",
    "Storage",
    "getLocal",
    "setItem",
    "getLocalItem",
    "getItem",
    "removeLocalItem",
    "removeItem",
    "getLocalLength",
    "getLength",
    "getLocalKey",
    "index",
    "getKey",
    "clearLocal",
    "clear",
    "forEachLocal",
    "callback",
    "scope",
    "forEach",
    "setSessionItem",
    "getSession",
    "getSessionItem",
    "removeSessionItem",
    "getSessionLength",
    "getSessionKey",
    "clearSession",
    "forEachSession",
    "defer",
    "qxWeb",
    "$attachStatic",
    "localStorage",
    "sessionStorage",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Storage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This module offers a cross browser storage implementation. The API is aligned\r\n * with the API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is\r\n * also the preferred implementation used. As fallback for IE < 8, we use user data.\r\n * If both techniques are unsupported, we supply a in memory storage, which is\r\n * of course, not persistent.\r\n */\r\nqx.Bootstrap.define(\"qx.module.Storage\", {\r\n  statics: {\r\n    /**\r\n     * Store an item in the storage.\r\n     *\r\n     * @attachStatic {qxWeb, localStorage.setItem}\r\n     * @param key {String} The identifier key.\r\n     * @param value {var} The data, which will be stored as JSON.\r\n     */\r\n    setLocalItem(key, value) {\r\n      qx.bom.Storage.getLocal().setItem(key, value);\r\n    },\r\n\r\n    /**\r\n     * Returns the stored item.\r\n     *\r\n     * @attachStatic {qxWeb, localStorage.getItem}\r\n     * @param key {String} The identifier to get the data.\r\n     * @return {var} The stored data.\r\n     */\r\n    getLocalItem(key) {\r\n      return qx.bom.Storage.getLocal().getItem(key);\r\n    },\r\n\r\n    /**\r\n     * Removes an item form the storage.\r\n     * @attachStatic {qxWeb, localStorage.removeItem}\r\n     * @param key {String} The identifier.\r\n     */\r\n    removeLocalItem(key) {\r\n      qx.bom.Storage.getLocal().removeItem(key);\r\n    },\r\n\r\n    /**\r\n     * Returns the amount of key-value pairs stored.\r\n     * @attachStatic {qxWeb, localStorage.getLength}\r\n     * @return {Number} The length of the storage.\r\n     */\r\n    getLocalLength() {\r\n      return qx.bom.Storage.getLocal().getLength();\r\n    },\r\n\r\n    /**\r\n     * Returns the named key at the given index.\r\n     * @attachStatic {qxWeb, localStorage.getKey}\r\n     * @param index {Number} The index in the storage.\r\n     * @return {String} The key stored at the given index.\r\n     */\r\n    getLocalKey(index) {\r\n      return qx.bom.Storage.getLocal().getKey(index);\r\n    },\r\n\r\n    /**\r\n     * Deletes every stored item in the storage.\r\n     * @attachStatic {qxWeb, localStorage.clear}\r\n     */\r\n    clearLocal() {\r\n      qx.bom.Storage.getLocal().clear();\r\n    },\r\n\r\n    /**\r\n     * Helper to access every stored item.\r\n     *\r\n     * @attachStatic {qxWeb, localStorage.forEach}\r\n     * @param callback {Function} A function which will be called for every item.\r\n     *   The function will have two arguments, first the key and second the value\r\n     *    of the stored data.\r\n     * @param scope {var} The scope of the function.\r\n     */\r\n    forEachLocal(callback, scope) {\r\n      qx.bom.Storage.getLocal().forEach(callback, scope);\r\n    },\r\n\r\n    /**\r\n     * Store an item in the storage.\r\n     *\r\n     * @attachStatic {qxWeb, sessionStorage.setItem}\r\n     * @param key {String} The identifier key.\r\n     * @param value {var} The data, which will be stored as JSON.\r\n     */\r\n    setSessionItem(key, value) {\r\n      qx.bom.Storage.getSession().setItem(key, value);\r\n    },\r\n\r\n    /**\r\n     * Returns the stored item.\r\n     *\r\n     * @attachStatic {qxWeb, sessionStorage.getItem}\r\n     * @param key {String} The identifier to get the data.\r\n     * @return {var} The stored data.\r\n     */\r\n    getSessionItem(key) {\r\n      return qx.bom.Storage.getSession().getItem(key);\r\n    },\r\n\r\n    /**\r\n     * Removes an item form the storage.\r\n     * @attachStatic {qxWeb, sessionStorage.removeItem}\r\n     * @param key {String} The identifier.\r\n     */\r\n    removeSessionItem(key) {\r\n      qx.bom.Storage.getSession().removeItem(key);\r\n    },\r\n\r\n    /**\r\n     * Returns the amount of key-value pairs stored.\r\n     * @attachStatic {qxWeb, sessionStorage.getLength}\r\n     * @return {Number} The length of the storage.\r\n     */\r\n    getSessionLength() {\r\n      return qx.bom.Storage.getSession().getLength();\r\n    },\r\n\r\n    /**\r\n     * Returns the named key at the given index.\r\n     * @attachStatic {qxWeb, sessionStorage.getKey}\r\n     * @param index {Number} The index in the storage.\r\n     * @return {String} The key stored at the given index.\r\n     */\r\n    getSessionKey(index) {\r\n      return qx.bom.Storage.getSession().getKey(index);\r\n    },\r\n\r\n    /**\r\n     * Deletes every stored item in the storage.\r\n     * @attachStatic {qxWeb, sessionStorage.clear}\r\n     */\r\n    clearSession() {\r\n      qx.bom.Storage.getSession().clear();\r\n    },\r\n\r\n    /**\r\n     * Helper to access every stored item.\r\n     *\r\n     * @attachStatic {qxWeb, sessionStorage.forEach}\r\n     * @param callback {Function} A function which will be called for every item.\r\n     *   The function will have two arguments, first the key and second the value\r\n     *    of the stored data.\r\n     * @param scope {var} The scope of the function.\r\n     */\r\n    forEachSession(callback, scope) {\r\n      qx.bom.Storage.getSession().forEach(callback, scope);\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qxWeb.$attachStatic({\r\n      localStorage: {\r\n        setItem: statics.setLocalItem,\r\n        getItem: statics.getLocalItem,\r\n        removeItem: statics.removeLocalItem,\r\n        getLength: statics.getLocalLength,\r\n        getKey: statics.getLocalKey,\r\n        clear: statics.clearLocal,\r\n        forEach: statics.forEachLocal\r\n      },\r\n\r\n      sessionStorage: {\r\n        setItem: statics.setSessionItem,\r\n        getItem: statics.getSessionItem,\r\n        removeItem: statics.removeSessionItem,\r\n        getLength: statics.getSessionLength,\r\n        getKey: statics.getSessionKey,\r\n        clear: statics.clearSession,\r\n        forEach: statics.forEachSession\r\n      }\r\n    });\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,mBAAmB,EAAE;IACvCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACC,GAAG,EAAEC,KAAK,EAAE;QACvBR,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAACL,GAAG,EAAEC,KAAK,CAAC;MAC/C,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIK,YAAY,WAAAA,aAACN,GAAG,EAAE;QAChB,OAAOP,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACG,OAAO,CAACP,GAAG,CAAC;MAC/C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIQ,eAAe,WAAAA,gBAACR,GAAG,EAAE;QACnBP,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACK,UAAU,CAACT,GAAG,CAAC;MAC3C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIU,cAAc,WAAAA,eAAA,EAAG;QACf,OAAOjB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACO,SAAS,CAAC,CAAC;MAC9C,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAACC,KAAK,EAAE;QACjB,OAAOpB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACU,MAAM,CAACD,KAAK,CAAC;MAChD,CAAC;MAED;AACJ;AACA;AACA;MACIE,UAAU,WAAAA,WAAA,EAAG;QACXtB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC;MACnC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACC,QAAQ,EAAEC,KAAK,EAAE;QAC5B1B,EAAE,CAACS,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACgB,OAAO,CAACF,QAAQ,EAAEC,KAAK,CAAC;MACpD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,cAAc,WAAAA,eAACrB,GAAG,EAAEC,KAAK,EAAE;QACzBR,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACjB,OAAO,CAACL,GAAG,EAAEC,KAAK,CAAC;MACjD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIsB,cAAc,WAAAA,eAACvB,GAAG,EAAE;QAClB,OAAOP,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACf,OAAO,CAACP,GAAG,CAAC;MACjD,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIwB,iBAAiB,WAAAA,kBAACxB,GAAG,EAAE;QACrBP,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACb,UAAU,CAACT,GAAG,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIyB,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,OAAOhC,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACX,SAAS,CAAC,CAAC;MAChD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIe,aAAa,WAAAA,cAACb,KAAK,EAAE;QACnB,OAAOpB,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACR,MAAM,CAACD,KAAK,CAAC;MAClD,CAAC;MAED;AACJ;AACA;AACA;MACIc,YAAY,WAAAA,aAAA,EAAG;QACblC,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACN,KAAK,CAAC,CAAC;MACrC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIY,cAAc,WAAAA,eAACV,QAAQ,EAAEC,KAAK,EAAE;QAC9B1B,EAAE,CAACS,GAAG,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC,CAACF,OAAO,CAACF,QAAQ,EAAEC,KAAK,CAAC;MACtD;IACF,CAAC;IAEDU,KAAK,WAAAA,MAAC/B,OAAO,EAAE;MACbgC,KAAK,CAACC,aAAa,CAAC;QAClBC,YAAY,EAAE;UACZ3B,OAAO,EAAEP,OAAO,CAACC,YAAY;UAC7BQ,OAAO,EAAET,OAAO,CAACQ,YAAY;UAC7BG,UAAU,EAAEX,OAAO,CAACU,eAAe;UACnCG,SAAS,EAAEb,OAAO,CAACY,cAAc;UACjCI,MAAM,EAAEhB,OAAO,CAACc,WAAW;UAC3BI,KAAK,EAAElB,OAAO,CAACiB,UAAU;UACzBK,OAAO,EAAEtB,OAAO,CAACmB;QACnB,CAAC;QAEDgB,cAAc,EAAE;UACd5B,OAAO,EAAEP,OAAO,CAACuB,cAAc;UAC/Bd,OAAO,EAAET,OAAO,CAACyB,cAAc;UAC/Bd,UAAU,EAAEX,OAAO,CAAC0B,iBAAiB;UACrCb,SAAS,EAAEb,OAAO,CAAC2B,gBAAgB;UACnCX,MAAM,EAAEhB,OAAO,CAAC4B,aAAa;UAC7BV,KAAK,EAAElB,OAAO,CAAC6B,YAAY;UAC3BP,OAAO,EAAEtB,OAAO,CAAC8B;QACnB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAjMFnC,EAAE,CAACyC,MAAM,CAAC/B,OAAO,CAACP,aAAa,GAAGA,aAAa;AAAC"
}