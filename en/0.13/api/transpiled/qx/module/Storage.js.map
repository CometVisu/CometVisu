{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "setLocalItem",
    "key",
    "value",
    "bom",
    "Storage",
    "getLocal",
    "setItem",
    "getLocalItem",
    "getItem",
    "removeLocalItem",
    "removeItem",
    "getLocalLength",
    "getLength",
    "getLocalKey",
    "index",
    "getKey",
    "clearLocal",
    "clear",
    "forEachLocal",
    "callback",
    "scope",
    "forEach",
    "setSessionItem",
    "getSession",
    "getSessionItem",
    "removeSessionItem",
    "getSessionLength",
    "getSessionKey",
    "clearSession",
    "forEachSession",
    "defer",
    "qxWeb",
    "$attachStatic",
    "localStorage",
    "sessionStorage",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Storage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * This module offers a cross browser storage implementation. The API is aligned\n * with the API of the HTML web storage (http://www.w3.org/TR/webstorage/) which is\n * also the preferred implementation used. As fallback for IE < 8, we use user data.\n * If both techniques are unsupported, we supply a in memory storage, which is\n * of course, not persistent.\n */\nqx.Bootstrap.define(\"qx.module.Storage\", {\n  statics: {\n    /**\n     * Store an item in the storage.\n     *\n     * @attachStatic {qxWeb, localStorage.setItem}\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setLocalItem(key, value) {\n      qx.bom.Storage.getLocal().setItem(key, value);\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @attachStatic {qxWeb, localStorage.getItem}\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getLocalItem(key) {\n      return qx.bom.Storage.getLocal().getItem(key);\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @attachStatic {qxWeb, localStorage.removeItem}\n     * @param key {String} The identifier.\n     */\n    removeLocalItem(key) {\n      qx.bom.Storage.getLocal().removeItem(key);\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @attachStatic {qxWeb, localStorage.getLength}\n     * @return {Number} The length of the storage.\n     */\n    getLocalLength() {\n      return qx.bom.Storage.getLocal().getLength();\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @attachStatic {qxWeb, localStorage.getKey}\n     * @param index {Number} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getLocalKey(index) {\n      return qx.bom.Storage.getLocal().getKey(index);\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     * @attachStatic {qxWeb, localStorage.clear}\n     */\n    clearLocal() {\n      qx.bom.Storage.getLocal().clear();\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @attachStatic {qxWeb, localStorage.forEach}\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEachLocal(callback, scope) {\n      qx.bom.Storage.getLocal().forEach(callback, scope);\n    },\n\n    /**\n     * Store an item in the storage.\n     *\n     * @attachStatic {qxWeb, sessionStorage.setItem}\n     * @param key {String} The identifier key.\n     * @param value {var} The data, which will be stored as JSON.\n     */\n    setSessionItem(key, value) {\n      qx.bom.Storage.getSession().setItem(key, value);\n    },\n\n    /**\n     * Returns the stored item.\n     *\n     * @attachStatic {qxWeb, sessionStorage.getItem}\n     * @param key {String} The identifier to get the data.\n     * @return {var} The stored data.\n     */\n    getSessionItem(key) {\n      return qx.bom.Storage.getSession().getItem(key);\n    },\n\n    /**\n     * Removes an item form the storage.\n     * @attachStatic {qxWeb, sessionStorage.removeItem}\n     * @param key {String} The identifier.\n     */\n    removeSessionItem(key) {\n      qx.bom.Storage.getSession().removeItem(key);\n    },\n\n    /**\n     * Returns the amount of key-value pairs stored.\n     * @attachStatic {qxWeb, sessionStorage.getLength}\n     * @return {Number} The length of the storage.\n     */\n    getSessionLength() {\n      return qx.bom.Storage.getSession().getLength();\n    },\n\n    /**\n     * Returns the named key at the given index.\n     * @attachStatic {qxWeb, sessionStorage.getKey}\n     * @param index {Number} The index in the storage.\n     * @return {String} The key stored at the given index.\n     */\n    getSessionKey(index) {\n      return qx.bom.Storage.getSession().getKey(index);\n    },\n\n    /**\n     * Deletes every stored item in the storage.\n     * @attachStatic {qxWeb, sessionStorage.clear}\n     */\n    clearSession() {\n      qx.bom.Storage.getSession().clear();\n    },\n\n    /**\n     * Helper to access every stored item.\n     *\n     * @attachStatic {qxWeb, sessionStorage.forEach}\n     * @param callback {Function} A function which will be called for every item.\n     *   The function will have two arguments, first the key and second the value\n     *    of the stored data.\n     * @param scope {var} The scope of the function.\n     */\n    forEachSession(callback, scope) {\n      qx.bom.Storage.getSession().forEach(callback, scope);\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachStatic({\n      localStorage: {\n        setItem: statics.setLocalItem,\n        getItem: statics.getLocalItem,\n        removeItem: statics.removeLocalItem,\n        getLength: statics.getLocalLength,\n        getKey: statics.getLocalKey,\n        clear: statics.clearLocal,\n        forEach: statics.forEachLocal\n      },\n\n      sessionStorage: {\n        setItem: statics.setSessionItem,\n        getItem: statics.getSessionItem,\n        removeItem: statics.removeSessionItem,\n        getLength: statics.getSessionLength,\n        getKey: statics.getSessionKey,\n        clear: statics.clearSession,\n        forEach: statics.forEachSession\n      }\n    });\n  }\n});\n"
  ],
  "mappings": "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"
}