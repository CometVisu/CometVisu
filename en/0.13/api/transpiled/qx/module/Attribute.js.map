{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "members",
    "getHtml",
    "nodeType",
    "bom",
    "element",
    "Attribute",
    "get",
    "setHtml",
    "html",
    "Html",
    "fixEmptyTags",
    "_forEachElement",
    "item",
    "set",
    "setAttribute",
    "name",
    "value",
    "getAttribute",
    "removeAttribute",
    "setAttributes",
    "attributes",
    "getAttributes",
    "names",
    "i",
    "length",
    "removeAttributes",
    "l",
    "setProperty",
    "getProperty",
    "setProperties",
    "properties",
    "removeProperties",
    "removeProperty",
    "getProperties",
    "undefined",
    "getValue",
    "Input",
    "setValue",
    "defer",
    "statics",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Attribute.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Attribute/Property handling for DOM elements.\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Attribute\", {\n  members: {\n    /**\n     * Returns the HTML content of the first item in the collection\n     * @attach {qxWeb}\n     * @return {String|null} HTML content or null if the collection is empty\n     */\n    getHtml() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], \"html\");\n      }\n      return null;\n    },\n\n    /**\n     * Sets the HTML content of each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param html {String} HTML string\n     * @return {qxWeb} The collection for chaining\n     */\n    setHtml(html) {\n      html = qx.bom.Html.fixEmptyTags(html);\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, \"html\", html);\n      });\n      return this;\n    },\n\n    /**\n     * Sets an HTML attribute on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @param value {var} Attribute value\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttribute(name, value) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the value of the given attribute for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {var} Attribute value\n     */\n    getAttribute(name) {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], name);\n      }\n      return null;\n    },\n\n    /**\n     * Removes the given attribute from all elements in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttribute(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, null);\n      });\n      return this;\n    },\n\n    /**\n     * Sets multiple attributes for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {Map} A map of attribute name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttributes(attributes) {\n      for (var name in attributes) {\n        this.setAttribute(name, attributes[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple attributes for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of attribute names\n     * @return {Map} Map of attribute name/value pairs\n     */\n    getAttributes(names) {\n      var attributes = {};\n      for (var i = 0; i < names.length; i++) {\n        attributes[names[i]] = this.getAttribute(names[i]);\n      }\n      return attributes;\n    },\n\n    /**\n     * Removes multiple attributes from each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {String[]} List of attribute names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttributes(attributes) {\n      for (var i = 0, l = attributes.length; i < l; i++) {\n        this.removeAttribute(attributes[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Sets a property on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @param value {var} Property value\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperty(name, value) {\n      for (var i = 0; i < this.length; i++) {\n        this[i][name] = value;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the value of the given property for the first item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {var} Property value\n     */\n    getProperty(name) {\n      if (this[0]) {\n        return this[0][name];\n      }\n      return null;\n    },\n\n    /**\n     * Sets multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {Map} A map of property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperties(properties) {\n      for (var name in properties) {\n        this.setProperty(name, properties[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Removes multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {String[]} An array of property names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperties(properties) {\n      for (var i = 0; i < properties.length; i++) {\n        this.removeProperty(properties[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple properties for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of property names\n     * @return {Map} Map of property name/value pairs\n     */\n    getProperties(names) {\n      var properties = {};\n      for (var i = 0; i < names.length; i++) {\n        properties[names[i]] = this.getProperty(names[i]);\n      }\n      return properties;\n    },\n\n    /**\n     * Deletes a property from each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperty(name) {\n      if (this[0]) {\n        this[0][name] = undefined;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the currently configured value for the first item in the collection.\n     * Works with simple input fields as well as with select boxes or option\n     * elements. Returns an array for select boxes with multi selection. In all\n     * other cases, a string is returned.\n     *\n     * @attach {qxWeb}\n     * @return {String|String[]} String value or Array of string values (for multiselect)\n     */\n    getValue() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.Input.getValue(this[0]);\n      }\n      return null;\n    },\n\n    /**\n     * Applies the given value to each element in the collection.\n     * Normally the value is given as a string/number value and applied to the\n     * field content (textfield, textarea) or used to detect whether the field\n     * is checked (checkbox, radiobutton).\n     * Supports array values for selectboxes (multiple selection) and checkboxes\n     * or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or radiobutton\n     * use {@link #setAttribute} instead and manipulate the <code>checked</code> attribute.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Number|Array} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setValue(value) {\n      this._forEachElement(function (item) {\n        qx.bom.Input.setValue(item, value);\n      });\n\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}