{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "members",
    "getHtml",
    "nodeType",
    "bom",
    "element",
    "Attribute",
    "get",
    "setHtml",
    "html",
    "Html",
    "fixEmptyTags",
    "_forEachElement",
    "item",
    "set",
    "setAttribute",
    "name",
    "value",
    "getAttribute",
    "removeAttribute",
    "setAttributes",
    "attributes",
    "getAttributes",
    "names",
    "i",
    "length",
    "removeAttributes",
    "l",
    "setProperty",
    "getProperty",
    "setProperties",
    "properties",
    "removeProperties",
    "removeProperty",
    "getProperties",
    "undefined",
    "getValue",
    "Input",
    "setValue",
    "defer",
    "statics",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Attribute.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Attribute/Property handling for DOM elements.\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Attribute\", {\n  members: {\n    /**\n     * Returns the HTML content of the first item in the collection\n     * @attach {qxWeb}\n     * @return {String|null} HTML content or null if the collection is empty\n     */\n    getHtml() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], \"html\");\n      }\n      return null;\n    },\n\n    /**\n     * Sets the HTML content of each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param html {String} HTML string\n     * @return {qxWeb} The collection for chaining\n     */\n    setHtml(html) {\n      html = qx.bom.Html.fixEmptyTags(html);\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, \"html\", html);\n      });\n      return this;\n    },\n\n    /**\n     * Sets an HTML attribute on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @param value {var} Attribute value\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttribute(name, value) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the value of the given attribute for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {var} Attribute value\n     */\n    getAttribute(name) {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], name);\n      }\n      return null;\n    },\n\n    /**\n     * Removes the given attribute from all elements in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttribute(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, null);\n      });\n      return this;\n    },\n\n    /**\n     * Sets multiple attributes for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {Map} A map of attribute name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttributes(attributes) {\n      for (var name in attributes) {\n        this.setAttribute(name, attributes[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple attributes for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of attribute names\n     * @return {Map} Map of attribute name/value pairs\n     */\n    getAttributes(names) {\n      var attributes = {};\n      for (var i = 0; i < names.length; i++) {\n        attributes[names[i]] = this.getAttribute(names[i]);\n      }\n      return attributes;\n    },\n\n    /**\n     * Removes multiple attributes from each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {String[]} List of attribute names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttributes(attributes) {\n      for (var i = 0, l = attributes.length; i < l; i++) {\n        this.removeAttribute(attributes[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Sets a property on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @param value {var} Property value\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperty(name, value) {\n      for (var i = 0; i < this.length; i++) {\n        this[i][name] = value;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the value of the given property for the first item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {var} Property value\n     */\n    getProperty(name) {\n      if (this[0]) {\n        return this[0][name];\n      }\n      return null;\n    },\n\n    /**\n     * Sets multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {Map} A map of property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperties(properties) {\n      for (var name in properties) {\n        this.setProperty(name, properties[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Removes multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {String[]} An array of property names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperties(properties) {\n      for (var i = 0; i < properties.length; i++) {\n        this.removeProperty(properties[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple properties for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of property names\n     * @return {Map} Map of property name/value pairs\n     */\n    getProperties(names) {\n      var properties = {};\n      for (var i = 0; i < names.length; i++) {\n        properties[names[i]] = this.getProperty(names[i]);\n      }\n      return properties;\n    },\n\n    /**\n     * Deletes a property from each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperty(name) {\n      if (this[0]) {\n        this[0][name] = undefined;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the currently configured value for the first item in the collection.\n     * Works with simple input fields as well as with select boxes or option\n     * elements. Returns an array for select boxes with multi selection. In all\n     * other cases, a string is returned.\n     *\n     * @attach {qxWeb}\n     * @return {String|String[]} String value or Array of string values (for multiselect)\n     */\n    getValue() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.Input.getValue(this[0]);\n      }\n      return null;\n    },\n\n    /**\n     * Applies the given value to each element in the collection.\n     * Normally the value is given as a string/number value and applied to the\n     * field content (textfield, textarea) or used to detect whether the field\n     * is checked (checkbox, radiobutton).\n     * Supports array values for selectboxes (multiple selection) and checkboxes\n     * or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or radiobutton\n     * use {@link #setAttribute} instead and manipulate the <code>checked</code> attribute.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Number|Array} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setValue(value) {\n      this._forEachElement(function (item) {\n        qx.bom.Input.setValue(item, value);\n      });\n\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ],
  "mappings": "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"
}