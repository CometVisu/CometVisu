{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getOrientation",
    "_orientation",
    "isLandscape",
    "_mode",
    "isPortrait",
    "normalize",
    "event",
    "element",
    "type",
    "_type",
    "bindMethods",
    "module",
    "Orientation",
    "i",
    "l",
    "length",
    "bind",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/event/Orientation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for orientationchange events\n *\n * @require(qx.module.Event)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Orientation\", {\n  statics: {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES: [\"orientationchange\"],\n\n    /**\n     * List of qx.module.event.Orientation methods to be attached to native\n     * event objects\n     * @internal\n     */\n    BIND_METHODS: [\"getOrientation\", \"isLandscape\", \"isPortrait\"],\n\n    /**\n     * Returns the current orientation of the viewport in degrees.\n     *\n     * All possible values and their meaning:\n     *\n     * * <code>0</code>: \"Portrait\"\n     * * <code>-90</code>: \"Landscape (right, screen turned clockwise)\"\n     * * <code>90</code>: \"Landscape (left, screen turned counterclockwise)\"\n     * * <code>180</code>: \"Portrait (upside-down portrait)\"\n     *\n     * @return {Number} The current orientation in degrees\n     */\n    getOrientation() {\n      return this._orientation;\n    },\n\n    /**\n     * Whether the viewport orientation is currently in landscape mode.\n     *\n     * @return {Boolean} <code>true</code> when the viewport orientation\n     *     is currently in landscape mode.\n     */\n    isLandscape() {\n      return this._mode == \"landscape\";\n    },\n\n    /**\n     * Whether the viewport orientation is currently in portrait mode.\n     *\n     * @return {Boolean} <code>true</code> when the viewport orientation\n     *     is currently in portrait mode.\n     */\n    isPortrait() {\n      return this._mode == \"portrait\";\n    },\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @param type {String} Event type\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize(event, element, type) {\n      if (!event) {\n        return event;\n      }\n      event._type = type;\n\n      var bindMethods = qx.module.event.Orientation.BIND_METHODS;\n      for (var i = 0, l = bindMethods.length; i < l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] =\n            qx.module.event.Orientation[bindMethods[i]].bind(event);\n        }\n      }\n\n      return event;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$registerEventNormalization(statics.TYPES, statics.normalize);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,6BAA6B,EAAE;IACjDC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,KAAK,EAAE,CAAC,mBAAmB,CAAC;MAE5B;AACJ;AACA;AACA;AACA;MACIC,YAAY,EAAE,CAAC,gBAAgB,EAAE,aAAa,EAAE,YAAY,CAAC;MAE7D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAACC,YAAY;MAC1B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAAA,EAAG;QACZ,OAAO,IAAI,CAACC,KAAK,IAAI,WAAW;MAClC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG;QACX,OAAO,IAAI,CAACD,KAAK,IAAI,UAAU;MACjC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,SAAS,WAAAA,UAACC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAE;QAC9B,IAAI,CAACF,KAAK,EAAE;UACV,OAAOA,KAAK;QACd;QACAA,KAAK,CAACG,KAAK,GAAGD,IAAI;QAElB,IAAIE,WAAW,GAAGlB,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACb,YAAY;QAC1D,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;UAClD,IAAI,OAAOP,KAAK,CAACI,WAAW,CAACG,CAAC,CAAC,CAAC,IAAI,UAAU,EAAE;YAC9CP,KAAK,CAACI,WAAW,CAACG,CAAC,CAAC,CAAC,GACnBrB,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACF,WAAW,CAACG,CAAC,CAAC,CAAC,CAACG,IAAI,CAACV,KAAK,CAAC;UAC3D;QACF;QAEA,OAAOA,KAAK;MACd;IACF,CAAC;IAEDW,KAAK,WAAAA,MAACpB,OAAO,EAAE;MACbqB,KAAK,CAACC,2BAA2B,CAACtB,OAAO,CAACC,KAAK,EAAED,OAAO,CAACQ,SAAS,CAAC;IACrE;EACF,CAAC,CAAC;EA1GFb,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACjB,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}