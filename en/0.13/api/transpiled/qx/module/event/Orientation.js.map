{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getOrientation",
    "_orientation",
    "isLandscape",
    "_mode",
    "isPortrait",
    "normalize",
    "event",
    "element",
    "type",
    "_type",
    "bindMethods",
    "module",
    "Orientation",
    "i",
    "l",
    "length",
    "bind",
    "defer",
    "qxWeb",
    "$registerEventNormalization"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/event/Orientation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Normalization for orientationchange events\r\n *\r\n * @require(qx.module.Event)\r\n *\r\n * @group (Event_Normalization)\r\n */\r\nqx.Bootstrap.define(\"qx.module.event.Orientation\", {\r\n  statics: {\r\n    /**\r\n     * List of event types to be normalized\r\n     */\r\n    TYPES: [\"orientationchange\"],\r\n\r\n    /**\r\n     * List of qx.module.event.Orientation methods to be attached to native\r\n     * event objects\r\n     * @internal\r\n     */\r\n    BIND_METHODS: [\"getOrientation\", \"isLandscape\", \"isPortrait\"],\r\n\r\n    /**\r\n     * Returns the current orientation of the viewport in degrees.\r\n     *\r\n     * All possible values and their meaning:\r\n     *\r\n     * * <code>0</code>: \"Portrait\"\r\n     * * <code>-90</code>: \"Landscape (right, screen turned clockwise)\"\r\n     * * <code>90</code>: \"Landscape (left, screen turned counterclockwise)\"\r\n     * * <code>180</code>: \"Portrait (upside-down portrait)\"\r\n     *\r\n     * @return {Number} The current orientation in degrees\r\n     */\r\n    getOrientation() {\r\n      return this._orientation;\r\n    },\r\n\r\n    /**\r\n     * Whether the viewport orientation is currently in landscape mode.\r\n     *\r\n     * @return {Boolean} <code>true</code> when the viewport orientation\r\n     *     is currently in landscape mode.\r\n     */\r\n    isLandscape() {\r\n      return this._mode == \"landscape\";\r\n    },\r\n\r\n    /**\r\n     * Whether the viewport orientation is currently in portrait mode.\r\n     *\r\n     * @return {Boolean} <code>true</code> when the viewport orientation\r\n     *     is currently in portrait mode.\r\n     */\r\n    isPortrait() {\r\n      return this._mode == \"portrait\";\r\n    },\r\n\r\n    /**\r\n     * Manipulates the native event object, adding methods if they're not\r\n     * already present\r\n     *\r\n     * @param event {Event} Native event object\r\n     * @param element {Element} DOM element the listener was attached to\r\n     * @param type {String} Event type\r\n     * @return {Event} Normalized event object\r\n     * @internal\r\n     */\r\n    normalize(event, element, type) {\r\n      if (!event) {\r\n        return event;\r\n      }\r\n      event._type = type;\r\n\r\n      var bindMethods = qx.module.event.Orientation.BIND_METHODS;\r\n      for (var i = 0, l = bindMethods.length; i < l; i++) {\r\n        if (typeof event[bindMethods[i]] != \"function\") {\r\n          event[bindMethods[i]] =\r\n            qx.module.event.Orientation[bindMethods[i]].bind(event);\r\n        }\r\n      }\r\n\r\n      return event;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qxWeb.$registerEventNormalization(statics.TYPES, statics.normalize);\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,6BAA6B,EAAE;IACjDC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,KAAK,EAAE,CAAC,mBAAmB,CAAC;MAE5B;AACJ;AACA;AACA;AACA;MACIC,YAAY,EAAE,CAAC,gBAAgB,EAAE,aAAa,EAAE,YAAY,CAAC;MAE7D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAACC,YAAY;MAC1B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAAA,EAAG;QACZ,OAAO,IAAI,CAACC,KAAK,IAAI,WAAW;MAClC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG;QACX,OAAO,IAAI,CAACD,KAAK,IAAI,UAAU;MACjC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,SAAS,WAAAA,UAACC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAE;QAC9B,IAAI,CAACF,KAAK,EAAE;UACV,OAAOA,KAAK;QACd;QACAA,KAAK,CAACG,KAAK,GAAGD,IAAI;QAElB,IAAIE,WAAW,GAAGlB,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACb,YAAY;QAC1D,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;UAClD,IAAI,OAAOP,KAAK,CAACI,WAAW,CAACG,CAAC,CAAC,CAAC,IAAI,UAAU,EAAE;YAC9CP,KAAK,CAACI,WAAW,CAACG,CAAC,CAAC,CAAC,GACnBrB,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACF,WAAW,CAACG,CAAC,CAAC,CAAC,CAACG,IAAI,CAACV,KAAK,CAAC;UAC3D;QACF;QAEA,OAAOA,KAAK;MACd;IACF,CAAC;IAEDW,KAAK,WAAAA,MAACpB,OAAO,EAAE;MACbqB,KAAK,CAACC,2BAA2B,CAACtB,OAAO,CAACC,KAAK,EAAED,OAAO,CAACQ,SAAS,CAAC;IACrE;EACF,CAAC,CAAC;EA1GFb,EAAE,CAACmB,MAAM,CAACL,KAAK,CAACM,WAAW,CAACjB,aAAa,GAAGA,aAAa;AAAC"
}