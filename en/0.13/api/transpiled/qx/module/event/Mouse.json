{
  "className": "qx.module.event.Mouse",
  "packageName": "qx.module.event",
  "name": "Mouse",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0,
        "index": 813
      },
      "end": {
        "line": 217,
        "column": 3,
        "index": 5717
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Normalization for native mouse events. For cross-device applications that\n support both mouse and touchscreen interaction, consider using\n <a href=\"#Pointer\">Pointer</a> and/or Gesture events (e.g. <a href=\"Tap\"></a>).</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.module.Environment"
        },
        {
          "name": "@require",
          "body": "qx.module.Event"
        }
      ],
      "@group": [
        {
          "name": "@group",
          "body": "Event_Normalization"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "TYPES": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 937
        },
        "end": {
          "line": 42,
          "column": 5,
          "index": 1075
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of event types to be normalized</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "BIND_METHODS": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1209
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1391
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>List qx.module.event.Mouse methods to be attached to native mouse event\n objects</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "BUTTONS_DOM2": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1451
        },
        "end": {
          "line": 66,
          "column": 5,
          "index": 1525
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Standard mouse button mapping</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "BUTTONS_MSHTML": {
      "location": {
        "start": {
          "line": 71,
          "column": 4,
          "index": 1601
        },
        "end": {
          "line": 75,
          "column": 5,
          "index": 1677
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Legacy Internet Explorer mouse button mapping</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "getButton": {
      "location": {
        "start": {
          "line": 84,
          "column": 4,
          "index": 1910
        },
        "end": {
          "line": 105,
          "column": 5,
          "index": 2540
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the identifier of the mouse button that change state when the\n event was triggered</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} One of <code>left</code>, <code>right</code> or\n <code>middle</code>",
            "type": "String",
            "description": " One of <code>left</code>, <code>right</code> or\n <code>middle</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportLeft": {
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 2722
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 2774
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the horizontal coordinate at which the event occurred relative\n to the viewport.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The horizontal mouse position",
            "type": "Number",
            "description": " The horizontal mouse position"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getViewportTop": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 2981
        },
        "end": {
          "line": 126,
          "column": 5,
          "index": 3032
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical coordinate at which the event occurred relative\n to the viewport.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The vertical mouse position",
            "type": "Number",
            "description": " The vertical mouse position"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentLeft": {
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3308
        },
        "end": {
          "line": 142,
          "column": 5,
          "index": 3545
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the horizontal position at which the event occurred relative to the\n left of the document. This property takes into account any scrolling of\n the page.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The horizontal mouse position in the document.",
            "type": "Number",
            "description": " The horizontal mouse position in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDocumentTop": {
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 3816
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 4051
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical position at which the event occurred relative to the\n top of the document. This property takes into account any scrolling of\n the page.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The vertical mouse position in the document.",
            "type": "Number",
            "description": " The vertical mouse position in the document."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenLeft": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4413
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4463
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the horizontal coordinate at which the event occurred relative to\n the origin of the screen coordinate system.\n Note: This value is usually not very useful unless you want to\n position a native popup window at this coordinate.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The horizontal mouse position on the screen.",
            "type": "Number",
            "description": " The horizontal mouse position on the screen."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScreenTop": {
      "location": {
        "start": {
          "line": 182,
          "column": 4,
          "index": 4821
        },
        "end": {
          "line": 184,
          "column": 5,
          "index": 4870
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the vertical coordinate at which the event occurred relative to\n the origin of the screen coordinate system.\n Note: This value is usually not very useful unless you want to\n position a native popup window at this coordinate.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The vertical mouse position on the screen.",
            "type": "Number",
            "description": " The vertical mouse position on the screen."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "normalize": {
      "location": {
        "start": {
          "line": 195,
          "column": 4,
          "index": 5182
        },
        "end": {
          "line": 208,
          "column": 5,
          "index": 5579
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Manipulates the native event object, adding methods if they're not\n already present</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {Event} Native event object",
            "paramName": "event",
            "description": " Native event object",
            "type": "Event"
          },
          {
            "name": "@param",
            "body": "element {Element} DOM element the listener was attached to",
            "paramName": "element",
            "description": " DOM element the listener was attached to",
            "type": "Element"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Event} Normalized event object",
            "type": "Event",
            "description": " Normalized event object"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "defer": {
    "location": {
      "start": {
        "line": 211,
        "column": 2,
        "index": 5588
      },
      "end": {
        "line": 216,
        "column": 3,
        "index": 5713
      }
    }
  },
  "descendants": []
}