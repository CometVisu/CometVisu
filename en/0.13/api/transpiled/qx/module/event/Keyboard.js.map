{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "TYPES",
    "BIND_METHODS",
    "getKeyIdentifier",
    "type",
    "qxWeb",
    "env",
    "get",
    "charCode",
    "event",
    "util",
    "Keyboard",
    "charCodeToIdentifier",
    "keyCode",
    "keyCodeToIdentifier",
    "normalize",
    "element",
    "bindMethods",
    "module",
    "i",
    "l",
    "length",
    "bind",
    "registerInputFix",
    "__inputFix",
    "on",
    "_inputFix",
    "unregisterInputFix",
    "hasListener",
    "off",
    "ev",
    "target",
    "getTarget",
    "newValue",
    "getValue",
    "__oldInputValue",
    "_type",
    "$$emitter",
    "emit",
    "defer",
    "$registerEventNormalization",
    "$registerEventHook"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/event/Keyboard.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Normalization for native keyboard events.\n *\n * NOTE: Some browsers won't fire the <code>keypress</code> event for all keys.\n * It's generally better to listen for <code>keyup</code> or <code>keydown</code>\n * instead.\n *\n * @require(qx.module.Event)\n * @require(qx.module.Environment)\n *\n * @group (Event_Normalization)\n */\nqx.Bootstrap.define(\"qx.module.event.Keyboard\", {\n  statics: {\n    /**\n     * List of event types to be normalized\n     */\n    TYPES: [\"keydown\", \"keypress\", \"keyup\"],\n\n    /**\n     * List qx.module.event.Keyboard methods to be attached to native mouse event\n     * objects\n     * @internal\n     */\n    BIND_METHODS: [\"getKeyIdentifier\"],\n\n    /**\n     * Identifier of the pressed key. This property is modeled after the <em>KeyboardEvent.keyIdentifier</em> property\n     * of the W3C DOM 3 event specification\n     * (http://www.w3.org/TR/2003/NOTE-DOM-Level-3-Events-20031107/events.html#Events-KeyboardEvent-keyIdentifier).\n     *\n     * Printable keys are represented by an unicode string, non-printable keys\n     * have one of the following values:\n     *\n     * <table>\n     * <tr><th>Backspace</th><td>The Backspace (Back) key.</td></tr>\n     * <tr><th>Tab</th><td>The Horizontal Tabulation (Tab) key.</td></tr>\n     * <tr><th>Space</th><td>The Space (Spacebar) key.</td></tr>\n     * <tr><th>Enter</th><td>The Enter key. Note: This key identifier is also used for the Return (Macintosh numpad) key.</td></tr>\n     * <tr><th>Shift</th><td>The Shift key.</td></tr>\n     * <tr><th>Control</th><td>The Control (Ctrl) key.</td></tr>\n     * <tr><th>Alt</th><td>The Alt (Menu) key.</td></tr>\n     * <tr><th>CapsLock</th><td>The CapsLock key</td></tr>\n     * <tr><th>Meta</th><td>The Meta key. (Apple Meta and Windows key)</td></tr>\n     * <tr><th>Escape</th><td>The Escape (Esc) key.</td></tr>\n     * <tr><th>Left</th><td>The Left Arrow key.</td></tr>\n     * <tr><th>Up</th><td>The Up Arrow key.</td></tr>\n     * <tr><th>Right</th><td>The Right Arrow key.</td></tr>\n     * <tr><th>Down</th><td>The Down Arrow key.</td></tr>\n     * <tr><th>PageUp</th><td>The Page Up key.</td></tr>\n     * <tr><th>PageDown</th><td>The Page Down (Next) key.</td></tr>\n     * <tr><th>End</th><td>The End key.</td></tr>\n     * <tr><th>Home</th><td>The Home key.</td></tr>\n     * <tr><th>Insert</th><td>The Insert (Ins) key. (Does not fire in Opera/Win)</td></tr>\n     * <tr><th>Delete</th><td>The Delete (Del) Key.</td></tr>\n     * <tr><th>F1</th><td>The F1 key.</td></tr>\n     * <tr><th>F2</th><td>The F2 key.</td></tr>\n     * <tr><th>F3</th><td>The F3 key.</td></tr>\n     * <tr><th>F4</th><td>The F4 key.</td></tr>\n     * <tr><th>F5</th><td>The F5 key.</td></tr>\n     * <tr><th>F6</th><td>The F6 key.</td></tr>\n     * <tr><th>F7</th><td>The F7 key.</td></tr>\n     * <tr><th>F8</th><td>The F8 key.</td></tr>\n     * <tr><th>F9</th><td>The F9 key.</td></tr>\n     * <tr><th>F10</th><td>The F10 key.</td></tr>\n     * <tr><th>F11</th><td>The F11 key.</td></tr>\n     * <tr><th>F12</th><td>The F12 key.</td></tr>\n     * <tr><th>NumLock</th><td>The Num Lock key.</td></tr>\n     * <tr><th>PrintScreen</th><td>The Print Screen (PrintScrn, SnapShot) key.</td></tr>\n     * <tr><th>Scroll</th><td>The scroll lock key</td></tr>\n     * <tr><th>Pause</th><td>The pause/break key</td></tr>\n     * <tr><th>Win</th><td>The Windows Logo key</td></tr>\n     * <tr><th>Apps</th><td>The Application key (Windows Context Menu)</td></tr>\n     * </table>\n     *\n     * @return {String} The key identifier\n     */\n    getKeyIdentifier() {\n      if (\n        this.type == \"keypress\" &&\n        (qxWeb.env.get(\"engine.name\") != \"gecko\" || this.charCode !== 0)\n      ) {\n        return qx.event.util.Keyboard.charCodeToIdentifier(\n          this.charCode || this.keyCode\n        );\n      }\n      return qx.event.util.Keyboard.keyCodeToIdentifier(this.keyCode);\n    },\n\n    /**\n     * Manipulates the native event object, adding methods if they're not\n     * already present\n     *\n     * @param event {Event} Native event object\n     * @param element {Element} DOM element the listener was attached to\n     * @return {Event} Normalized event object\n     * @internal\n     */\n    normalize(event, element) {\n      if (!event) {\n        return event;\n      }\n      var bindMethods = qx.module.event.Keyboard.BIND_METHODS;\n      for (var i = 0, l = bindMethods.length; i < l; i++) {\n        if (typeof event[bindMethods[i]] != \"function\") {\n          event[bindMethods[i]] =\n            qx.module.event.Keyboard[bindMethods[i]].bind(event);\n        }\n      }\n\n      return event;\n    },\n\n    /**\n     * IE9 will not fire an \"input\" event on text input elements if the user changes\n     * the field's value by pressing the Backspace key. We fix this by listening\n     * for the \"keyup\" event and emitting the missing event if necessary\n     *\n     * @param element {Element} Target element\n     * @internal\n     */\n    registerInputFix(element) {\n      if (\n        element.type === \"text\" ||\n        element.type === \"password\" ||\n        element.type === \"textarea\"\n      ) {\n        if (!element.__inputFix) {\n          element.__inputFix = qxWeb(element).on(\n            \"keyup\",\n            qx.module.event.Keyboard._inputFix\n          );\n        }\n      }\n    },\n\n    /**\n     * Removes the IE9 input event fix\n     *\n     * @param element {Element} target element\n     * @internal\n     */\n    unregisterInputFix(element) {\n      if (element.__inputFix && !qxWeb(element).hasListener(\"input\")) {\n        qxWeb(element).off(\"keyup\", qx.module.event.Keyboard._inputFix);\n        element.__inputFix = null;\n      }\n    },\n\n    /**\n     * IE9 fix: Emits an \"input\" event if a text input element's value was changed\n     * using the Backspace key\n     * @param ev {Event} Keyup event\n     */\n    _inputFix(ev) {\n      if (ev.getKeyIdentifier() !== \"Backspace\") {\n        return;\n      }\n      var target = ev.getTarget();\n      var newValue = qxWeb(target).getValue();\n\n      if (!target.__oldInputValue || target.__oldInputValue !== newValue) {\n        target.__oldInputValue = newValue;\n        ev.type = ev._type = \"input\";\n        target.$$emitter.emit(\"input\", ev);\n      }\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$registerEventNormalization(\n      qx.module.event.Keyboard.TYPES,\n      statics.normalize\n    );\n\n    if (\n      qxWeb.env.get(\"engine.name\") === \"mshtml\" &&\n      qxWeb.env.get(\"browser.documentmode\") === 9\n    ) {\n      qxWeb.$registerEventHook(\n        \"input\",\n        statics.registerInputFix,\n        statics.unregisterInputFix\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,0BAA0B,EAAE;IAC9CC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;MAEvC;AACJ;AACA;AACA;AACA;MACIC,YAAY,EAAE,CAAC,kBAAkB,CAAC;MAElC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,gBAAgB,WAAhBA,gBAAgBA,CAAA,EAAG;QACjB,IACE,IAAI,CAACC,IAAI,IAAI,UAAU,KACtBC,KAAK,CAACC,GAAG,CAACC,GAAG,CAAC,aAAa,CAAC,IAAI,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,CAAC,CAAC,EAChE;UACA,OAAOb,EAAE,CAACc,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,oBAAoB,CAChD,IAAI,CAACJ,QAAQ,IAAI,IAAI,CAACK,OACxB,CAAC;QACH;QACA,OAAOlB,EAAE,CAACc,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACG,mBAAmB,CAAC,IAAI,CAACD,OAAO,CAAC;MACjE,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,SAAS,WAATA,SAASA,CAACN,KAAK,EAAEO,OAAO,EAAE;QACxB,IAAI,CAACP,KAAK,EAAE;UACV,OAAOA,KAAK;QAC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",
  "ignoreList": []
}