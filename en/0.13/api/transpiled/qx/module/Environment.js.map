{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "get",
    "key",
    "core",
    "Environment",
    "add",
    "value",
    "defer",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Environment.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n/**\n * Module for querying information about the environment / runtime.\n * It adds a static key <code>env</code> to qxWeb and offers the given methods.\n *\n * The following values are predefined:\n *\n * * <code>browser.name</code> : The name of the browser\n * * <code>browser.version</code> : The version of the browser\n * * <code>browser.quirksmode</code>  : <code>true</code> if the browser is in quirksmode\n * * <code>browser.documentmode</code> : The document mode of the browser\n *\n * * <code>device.name</code> : The name of the device e.g. <code>iPad</code>.\n * * <code>device.type</code> : Either <code>desktop</code>, <code>tablet</code> or <code>mobile</code>.\n *\n * * <code>engine.name</code> : The name of the browser engine\n * * <code>engine.version</code> : The version of the browser engine\n *\n * * <code>event.touch</code> : Checks if touch events are supported\n * * <code>event.mspointer</code> : Checks if MSPointer events are available\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Environment\", {\n  statics: {\n    /**\n     * Get the value stored for the given key.\n     *\n     * @attachStatic {qxWeb, env.get}\n     * @param key {String} The key to check for.\n     * @return {var} The value stored for the given key.\n     * @lint environmentNonLiteralKey(key)\n     */\n    get(key) {\n      return qx.core.Environment.get(key);\n    },\n\n    /**\n     * Adds a new environment setting which can be queried via {@link #get}.\n     * @param key {String} The key to store the value for.\n     *\n     * @attachStatic {qxWeb, env.add}\n     * @param value {var} The value to store.\n     * @return {qxWeb} The collection for chaining.\n     */\n    add(key, value) {\n      qx.core.Environment.add(key, value);\n      return this;\n    }\n  },\n\n  defer(statics) {\n    // make sure the desired keys are available (browser.* and engine.*)\n    qx.core.Environment.get(\"browser.name\");\n    qx.core.Environment.get(\"browser.version\");\n    qx.core.Environment.get(\"browser.quirksmode\");\n    qx.core.Environment.get(\"browser.documentmode\");\n\n    qx.core.Environment.get(\"engine.name\");\n    qx.core.Environment.get(\"engine.version\");\n\n    qx.core.Environment.get(\"device.name\");\n    qx.core.Environment.get(\"device.type\");\n\n    qx.core.Environment.get(\"event.touch\");\n    qx.core.Environment.get(\"event.mspointer\");\n\n    qxWeb.$attachAll(this, \"env\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,uBAAuB,EAAE;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,eAACC,GAAG,EAAE;QACP,OAAOP,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAACC,GAAG,CAAC;MACrC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,GAAG,eAACH,GAAG,EAAEI,KAAK,EAAE;QACdX,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACC,GAAG,CAACH,GAAG,EAAEI,KAAK,CAAC;QACnC,OAAO,IAAI;MACb;IACF,CAAC;IAEDC,KAAK,iBAACP,OAAO,EAAE;MACb;MACAL,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,cAAc,CAAC;MACvCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,iBAAiB,CAAC;MAC1CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,oBAAoB,CAAC;MAC7CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,sBAAsB,CAAC;MAE/CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,gBAAgB,CAAC;MAEzCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MAEtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,iBAAiB,CAAC;MAE1CO,KAAK,CAACC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC;IAC/B;EACF,CAAC,CAAC;EApFFd,EAAE,CAACe,MAAM,CAACN,WAAW,CAACN,aAAa,GAAGA,aAAa;AAAC"
}