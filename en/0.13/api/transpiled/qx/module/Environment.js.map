{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "get",
    "key",
    "core",
    "Environment",
    "add",
    "value",
    "defer",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Environment.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * Module for querying information about the environment / runtime.\r\n * It adds a static key <code>env</code> to qxWeb and offers the given methods.\r\n *\r\n * The following values are predefined:\r\n *\r\n * * <code>browser.name</code> : The name of the browser\r\n * * <code>browser.version</code> : The version of the browser\r\n * * <code>browser.quirksmode</code>  : <code>true</code> if the browser is in quirksmode\r\n * * <code>browser.documentmode</code> : The document mode of the browser\r\n *\r\n * * <code>device.name</code> : The name of the device e.g. <code>iPad</code>.\r\n * * <code>device.type</code> : Either <code>desktop</code>, <code>tablet</code> or <code>mobile</code>.\r\n *\r\n * * <code>engine.name</code> : The name of the browser engine\r\n * * <code>engine.version</code> : The version of the browser engine\r\n *\r\n * * <code>event.touch</code> : Checks if touch events are supported\r\n * * <code>event.mspointer</code> : Checks if MSPointer events are available\r\n * @group (Core)\r\n */\r\nqx.Bootstrap.define(\"qx.module.Environment\", {\r\n  statics: {\r\n    /**\r\n     * Get the value stored for the given key.\r\n     *\r\n     * @attachStatic {qxWeb, env.get}\r\n     * @param key {String} The key to check for.\r\n     * @return {var} The value stored for the given key.\r\n     * @lint environmentNonLiteralKey(key)\r\n     */\r\n    get(key) {\r\n      return qx.core.Environment.get(key);\r\n    },\r\n\r\n    /**\r\n     * Adds a new environment setting which can be queried via {@link #get}.\r\n     * @param key {String} The key to store the value for.\r\n     *\r\n     * @attachStatic {qxWeb, env.add}\r\n     * @param value {var} The value to store.\r\n     * @return {qxWeb} The collection for chaining.\r\n     */\r\n    add(key, value) {\r\n      qx.core.Environment.add(key, value);\r\n      return this;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    // make sure the desired keys are available (browser.* and engine.*)\r\n    qx.core.Environment.get(\"browser.name\");\r\n    qx.core.Environment.get(\"browser.version\");\r\n    qx.core.Environment.get(\"browser.quirksmode\");\r\n    qx.core.Environment.get(\"browser.documentmode\");\r\n\r\n    qx.core.Environment.get(\"engine.name\");\r\n    qx.core.Environment.get(\"engine.version\");\r\n\r\n    qx.core.Environment.get(\"device.name\");\r\n    qx.core.Environment.get(\"device.type\");\r\n\r\n    qx.core.Environment.get(\"event.touch\");\r\n    qx.core.Environment.get(\"event.mspointer\");\r\n\r\n    qxWeb.$attachAll(this, \"env\");\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,uBAAuB,EAAE;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACC,GAAG,EAAE;QACP,OAAOP,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAACC,GAAG,CAAC;MACrC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,GAAG,WAAAA,IAACH,GAAG,EAAEI,KAAK,EAAE;QACdX,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACC,GAAG,CAACH,GAAG,EAAEI,KAAK,CAAC;QACnC,OAAO,IAAI;MACb;IACF,CAAC;IAEDC,KAAK,WAAAA,MAACP,OAAO,EAAE;MACb;MACAL,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,cAAc,CAAC;MACvCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,iBAAiB,CAAC;MAC1CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,oBAAoB,CAAC;MAC7CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,sBAAsB,CAAC;MAE/CN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,gBAAgB,CAAC;MAEzCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MAEtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,aAAa,CAAC;MACtCN,EAAE,CAACQ,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,iBAAiB,CAAC;MAE1CO,KAAK,CAACC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC;IAC/B;EACF,CAAC,CAAC;EApFFd,EAAE,CAACe,MAAM,CAACN,WAAW,CAACN,aAAa,GAAGA,aAAa;AAAC"
}