{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "cast",
    "lang",
    "Array",
    "equals",
    "exclude",
    "fromArguments",
    "insertAfter",
    "insertBefore",
    "max",
    "min",
    "remove",
    "removeAll",
    "unique",
    "range",
    "defer",
    "qxWeb",
    "$attachAll",
    "module",
    "util"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/util/Array.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n/**\n * Utility module to give some support to work with arrays.\n *\n * @group (Utilities)\n */\nqx.Bootstrap.define(\"qx.module.util.Array\", {\n  statics: {\n    /**\n     * Converts an array like object to any other array like\n     * object.\n     *\n     * Attention: The returned array may be same\n     * instance as the incoming one if the constructor is identical!\n     *\n     * @signature function(object, constructor, offset)\n     * @attachStatic {qxWeb, array.cast}\n     *\n     * @param object {var} any array-like object\n     * @param constructor {Function} constructor of the new instance\n     * @param offset {Number?0} position to start from\n     * @return {Array} the converted array\n     */\n    cast: qx.lang.Array.cast,\n\n    /**\n     * Check whether the two arrays have the same content. Checks only the\n     * equality of the arrays' content.\n     *\n     * @signature function(arr1, arr2)\n     * @attachStatic {qxWeb, array.equals}\n     *\n     * @param arr1 {Array} first array\n     * @param arr2 {Array} second array\n     * @return {Boolean} Whether the two arrays are equal\n     */\n    equals: qx.lang.Array.equals,\n\n    /**\n     * Modifies the first array as it removes all elements\n     * which are listed in the second array as well.\n     *\n     * @signature function(arr1, arr2)\n     * @attachStatic {qxWeb, array.exclude}\n     *\n     * @param arr1 {Array} the array\n     * @param arr2 {Array} the elements of this array will be excluded from the other one\n     * @return {Array} The modified array.\n     */\n    exclude: qx.lang.Array.exclude,\n\n    /**\n     * Convert an arguments object into an array.\n     *\n     * @signature function(args, offset)\n     * @attachStatic {qxWeb, array.fromArguments}\n     *\n     * @param args {arguments} arguments object\n     * @param offset {Number?0} position to start from\n     * @return {Array} a newly created array (copy) with the content of the arguments object.\n     */\n    fromArguments: qx.lang.Array.fromArguments,\n\n    /**\n     * Insert an element into the array after a given second element.\n     *\n     * @signature function(arr, obj, obj2)\n     * @attachStatic {qxWeb, array.insertAfter}\n     *\n     * @param arr {Array} the array\n     * @param obj {var} object to be inserted\n     * @param obj2 {var} insert obj1 after this object\n     * @return {Array} The given array.\n     */\n    insertAfter: qx.lang.Array.insertAfter,\n\n    /**\n     * Insert an element into the array before a given second element.\n     *\n     * @signature function(arr, obj, obj2)\n     * @attachStatic {qxWeb, array.insertBefore}\n     *\n     * @param arr {Array} the array\n     * @param obj {var} object to be inserted\n     * @param obj2 {var} insert obj1 before this object\n     * @return {Array} The given array.\n     */\n    insertBefore: qx.lang.Array.insertBefore,\n\n    /**\n     * Returns the highest value in the given array. Supports\n     * numeric values only.\n     *\n     * @signature function(arr)\n     * @attachStatic {qxWeb, array.max}\n     *\n     * @param arr {Array} Array to process.\n     * @return {Number | undefined} The highest of all values or undefined if array is empty.\n     */\n    max: qx.lang.Array.max,\n\n    /**\n     * Returns the lowest value in the given array. Supports\n     * numeric values only.\n     *\n     * @signature function(arr)\n     * @attachStatic {qxWeb, array.min}\n     *\n     * @param arr {Array} Array to process.\n     * @return {Number | undefined} The lowest of all values or undefined if array is empty.\n     */\n    min: qx.lang.Array.min,\n\n    /**\n     * Remove an element from the array.\n     *\n     * @signature function(arr, obj)\n     * @attachStatic {qxWeb, array.remove}\n     *\n     * @param arr {Array} the array\n     * @param obj {var} element to be removed from the array\n     * @return {var} the removed element\n     */\n    remove: qx.lang.Array.remove,\n\n    /**\n     * Remove all elements from the array\n     *\n     * @signature function(arr)\n     * @attachStatic {qxWeb, array.removeAll}\n     *\n     * @param arr {Array} the array\n     * @return {Array} empty array\n     */\n    removeAll: qx.lang.Array.removeAll,\n\n    /**\n     * Recreates an array which is free of all duplicate elements from the original.\n     * This method do not modifies the original array!\n     * Keep in mind that this methods deletes undefined indexes.\n     *\n     * @signature function(arr)\n     * @attachStatic {qxWeb, array.unique}\n     *\n     * @param arr {Array} Incoming array\n     * @return {Array} Returns a copy with no duplicates\n     *   or the original array if no duplicates were found.\n     */\n    unique: qx.lang.Array.unique,\n\n    /**\n     * Returns a new array with integers from start to stop incremented or decremented by step.\n     *\n     * @signature function(start, stop, step)\n     * @attachStatic {qxWeb, array.range}\n     *\n     * @param start {Integer} start of the new array, defaults to 0\n     * @param stop {Integer} stop of the new array\n     * @param step {Integer} increment / decrement - depends whether you use positive or negative values\n     * @return {Array} Returns a new array with integers\n     */\n    range: qx.lang.Array.range\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this, \"array\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,sBAAsB,EAAE;IAC1CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,EAAEN,EAAE,CAACO,IAAI,CAACC,KAAK,CAACF,IAAI;MAExB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,MAAM,EAAET,EAAE,CAACO,IAAI,CAACC,KAAK,CAACC,MAAM;MAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,EAAEV,EAAE,CAACO,IAAI,CAACC,KAAK,CAACE,OAAO;MAE9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,aAAa,EAAEX,EAAE,CAACO,IAAI,CAACC,KAAK,CAACG,aAAa;MAE1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,EAAEZ,EAAE,CAACO,IAAI,CAACC,KAAK,CAACI,WAAW;MAEtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,YAAY,EAAEb,EAAE,CAACO,IAAI,CAACC,KAAK,CAACK,YAAY;MAExC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,EAAEd,EAAE,CAACO,IAAI,CAACC,KAAK,CAACM,GAAG;MAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,EAAEf,EAAE,CAACO,IAAI,CAACC,KAAK,CAACO,GAAG;MAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,EAAEhB,EAAE,CAACO,IAAI,CAACC,KAAK,CAACQ,MAAM;MAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,EAAEjB,EAAE,CAACO,IAAI,CAACC,KAAK,CAACS,SAAS;MAElC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,EAAElB,EAAE,CAACO,IAAI,CAACC,KAAK,CAACU,MAAM;MAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,KAAK,EAAEnB,EAAE,CAACO,IAAI,CAACC,KAAK,CAACW;IACvB,CAAC;IAEDC,KAAK,iBAACf,OAAO,EAAE;MACbgB,KAAK,CAACC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC;IACjC;EACF,CAAC,CAAC;EAvLFtB,EAAE,CAACuB,MAAM,CAACC,IAAI,CAAChB,KAAK,CAACL,aAAa,GAAGA,aAAa;AAAC"
}