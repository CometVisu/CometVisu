{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "configure",
    "responseData",
    "dev",
    "FakeServer",
    "getInstance",
    "removeResponse",
    "method",
    "url",
    "addFilter",
    "filter",
    "removeFilter",
    "respondWith",
    "urlRegExp",
    "response",
    "getFakeServer",
    "restore",
    "defer",
    "qxWeb",
    "$attachStatic",
    "fakeServer",
    "module"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/dev/FakeServer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Richard Sternagel (rsternagel)\r\n\r\n************************************************************************ */\r\n/**\r\n * A wrapper around Sinon.JS's FakeXMLHttpRequest and FakeServer features that\r\n * allows quick and simple configuration of mock HTTP backends for testing and\r\n * development.\r\n * Automatically creates URL filtering rules to ensure that only configured\r\n * requests are faked while others will be processed normally by the browser's\r\n * XHR implementation.\r\n *\r\n * @group (IO)\r\n */\r\nqx.Bootstrap.define(\"qx.module.dev.FakeServer\", {\r\n  statics: {\r\n    /**\r\n     * Configures a set of fake HTTP responses. Each response is defined as a map\r\n     * that must provide the following keys:\r\n     * <ul>\r\n     *   <li><code>method</code> HTTP method to respond to, e.g. <code>PUT</code></li>\r\n     *   <li><code>url</code> URL used to match requests to fake responses. Can be\r\n     *   a RegExp or a String. REST-style parameter placeholders in curly braces\r\n     *   will be replaced with wildcards, e.g. the string \"/resource/{resourceId}\"\r\n     *   is interpreted as the RegExp <code>/\\/resource\\/\\{.*?\\}/</code>\r\n     *   <li><code>response</code> This can be either:\r\n     *     <ul>\r\n     *       <li>a string: This will be the response body, status code will be 200</li>\r\n     *       <li>an array containing the status code, a map of response headers and\r\n     *         the response text, e.g. <code>[200, { \"Content-Type\": \"text/html\" }, \"OK\"]</code>\r\n     *       </li>\r\n     *       <li>a function: This will be called with a FakeXMLHttpRequest object as\r\n     *       the only argument. Its <code>respond</code> method must be called to send a response.\r\n     *       See <a href=\"http://sinonjs.org/docs/#respond\">Sinon.JS: Respond</a> for details.\r\n     *       </li>\r\n     *     </ul>\r\n     *   </li>\r\n     * </ul>\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.configure}\r\n     * @param responseData {Map[]} An array of response description maps.\r\n     */\r\n    configure(responseData) {\r\n      qx.dev.FakeServer.getInstance().configure(responseData);\r\n    },\r\n\r\n    /**\r\n     * Removes a response that was configured with {@link #configure}\r\n     * @param method {String} HTTP method of the response\r\n     * @param url {String|RegExp} URL of the response\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.removeResponse}\r\n     */\r\n    removeResponse(method, url) {\r\n      qx.dev.FakeServer.getInstance().removeResponse(method, url);\r\n    },\r\n\r\n    /**\r\n     * Adds a URL filtering function to decide whether a request should be handled\r\n     * by the FakeServer or passed to the regular XMLHttp implementation.\r\n     * See <a href=\"http://sinonjs.org/docs/#filtered-requests\">Sinon.JS: Filtered Requests</a>\r\n     * for details.\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.addFilter}\r\n     * @param filter {Function} URL filter function. Will be called with the\r\n     * following arguments: <code>method</code>, <code>url</code>, <code>async</code>,\r\n     * <code>username</code>, <code>password</code>. Must return <code>true</code>\r\n     * if the request should not be faked.\r\n     */\r\n    addFilter(filter) {\r\n      qx.dev.FakeServer.getInstance().addFilter(filter);\r\n    },\r\n\r\n    /**\r\n     * Remove a filter that was added with {@link #addFilter}\r\n     * @param filter {Function} filter function to remove\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.removeFilter}\r\n     */\r\n    removeFilter(filter) {\r\n      qx.dev.FakeServer.getInstance().removeFilter(filter);\r\n    },\r\n\r\n    /**\r\n     * Defines a fake XHR response to a matching request.\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.respondWith}\r\n     * @param method {String} HTTP method to respond to, e.g. \"GET\"\r\n     * @param urlRegExp {RegExp} Request URL must match match this expression\r\n     * @param response {Function|Array|String} Response to send. See\r\n     * <a href=\"http://sinonjs.org/docs/#fakeServer\">Sinon.JS: Fake Server</a> for details.\r\n     */\r\n    respondWith(method, urlRegExp, response) {\r\n      qx.dev.FakeServer.getInstance().respondWith(method, urlRegExp, response);\r\n    },\r\n\r\n    /**\r\n     * Creates and configures a FakeServer if necessary and returns it.\r\n     *\r\n     * @attachStatic {qxWeb, dev.fakeServer.getFakeServer}\r\n     * @return {Object} FakeServer object\r\n     */\r\n    getFakeServer() {\r\n      return qx.dev.FakeServer.getInstance().getFakeServer();\r\n    },\r\n\r\n    /**\r\n     * Stops the FakeServer and removes all configured responses and/or filters.\r\n     * @attachStatic {qxWeb, dev.fakeServer.restore}\r\n     */\r\n\r\n    restore() {\r\n      qx.dev.FakeServer.getInstance().restore();\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    qxWeb.$attachStatic({\r\n      dev: {\r\n        fakeServer: {\r\n          configure: statics.configure,\r\n          removeResponse: statics.removeResponse,\r\n          addFilter: statics.addFilter,\r\n          removeFilter: statics.removeFilter,\r\n          respondWith: statics.respondWith,\r\n          getFakeServer: statics.getFakeServer,\r\n          restore: statics.restore\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,0BAA0B,EAAE;IAC9CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,WAAAA,UAACC,YAAY,EAAE;QACtBP,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACJ,SAAS,CAACC,YAAY,CAAC;MACzD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,cAAc,WAAAA,eAACC,MAAM,EAAEC,GAAG,EAAE;QAC1Bb,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACC,cAAc,CAACC,MAAM,EAAEC,GAAG,CAAC;MAC7D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,WAAAA,UAACC,MAAM,EAAE;QAChBf,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACI,SAAS,CAACC,MAAM,CAAC;MACnD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACD,MAAM,EAAE;QACnBf,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACM,YAAY,CAACD,MAAM,CAAC;MACtD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,WAAW,WAAAA,YAACL,MAAM,EAAEM,SAAS,EAAEC,QAAQ,EAAE;QACvCnB,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACO,WAAW,CAACL,MAAM,EAAEM,SAAS,EAAEC,QAAQ,CAAC;MAC1E,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,aAAa,WAAAA,cAAA,EAAG;QACd,OAAOpB,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACU,aAAa,CAAC,CAAC;MACxD,CAAC;MAED;AACJ;AACA;AACA;MAEIC,OAAO,WAAAA,QAAA,EAAG;QACRrB,EAAE,CAACQ,GAAG,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,CAACW,OAAO,CAAC,CAAC;MAC3C;IACF,CAAC;IAEDC,KAAK,WAAAA,MAACjB,OAAO,EAAE;MACbkB,KAAK,CAACC,aAAa,CAAC;QAClBhB,GAAG,EAAE;UACHiB,UAAU,EAAE;YACVnB,SAAS,EAAED,OAAO,CAACC,SAAS;YAC5BK,cAAc,EAAEN,OAAO,CAACM,cAAc;YACtCG,SAAS,EAAET,OAAO,CAACS,SAAS;YAC5BE,YAAY,EAAEX,OAAO,CAACW,YAAY;YAClCC,WAAW,EAAEZ,OAAO,CAACY,WAAW;YAChCG,aAAa,EAAEf,OAAO,CAACe,aAAa;YACpCC,OAAO,EAAEhB,OAAO,CAACgB;UACnB;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAhJFrB,EAAE,CAAC0B,MAAM,CAAClB,GAAG,CAACC,UAAU,CAACN,aAAa,GAAGA,aAAa;AAAC"
}