{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "get",
    "id",
    "view",
    "partials",
    "el",
    "bom",
    "Template",
    "module",
    "__wrap",
    "qxWeb",
    "$init",
    "render",
    "template",
    "renderToNode",
    "isTextNode",
    "wrapper",
    "document",
    "createElement",
    "appendChild",
    "defer",
    "$attachAll"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/module/Template.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * HTML templating module. This is a wrapper for mustache.js which is a\n * \"framework-agnostic way to render logic-free views\".\n *\n * For further details, please visit the mustache.js documentation here:\n *   https://github.com/janl/mustache.js/blob/master/README.md\n */\nqx.Bootstrap.define(\"qx.module.Template\", {\n  statics: {\n    /**\n     * Helper method which provides direct access to templates stored as HTML in\n     * the DOM. The DOM node with the given ID will be treated as a template,\n     * parsed and a new DOM element will be returned containing the parsed data.\n     * Keep in mind that templates can only have one root element.\n     * Additionally, you should not put the template into a regular, hidden\n     * DOM element because the template may not be valid HTML due to the containing\n     * mustache tags. We suggest to put it into a script tag with the type\n     * <code>text/template</code>.\n     *\n     * @attachStatic{qxWeb, template.get}\n     * @param id {String} The id of the HTML template in the DOM.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {qxWeb} Collection containing a single DOM element with the parsed\n     * template data.\n     */\n    get(id, view, partials) {\n      var el = qx.bom.Template.get(id, view, partials);\n      el = qx.module.Template.__wrap(el);\n      return qxWeb.$init([el], qxWeb);\n    },\n\n    /**\n     * Original and only template method of mustache.js. For further\n     * documentation, please visit <a href=\"https://github.com/janl/mustache.js\">mustache.js</a>.\n     *\n     * @attachStatic{qxWeb, template.render}\n     * @param template {String} The String containing the template.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {String} The parsed template.\n     */\n    render(template, view, partials) {\n      return qx.bom.Template.render(template, view, partials);\n    },\n\n    /**\n     * Combines {@link #render} and {@link #get}. Input is equal to {@link #render}\n     * and output is equal to {@link #get}. The advantage over {@link #get}\n     * is that you don't need a HTML template but can use a template\n     * string and still get a collection. Keep in mind that templates\n     * can only have one root element.\n     *\n     * @attachStatic{qxWeb, template.renderToNode}\n     * @param template {String} The String containing the template.\n     * @param view {Object} The object holding the data to render.\n     * @param partials {Object} Object holding parts of a template.\n     * @return {qxWeb} Collection containing a single DOM element with the parsed\n     * template data.\n     */\n    renderToNode(template, view, partials) {\n      var el = qx.bom.Template.renderToNode(template, view, partials);\n      el = qx.module.Template.__wrap(el);\n      return qxWeb.$init([el], qxWeb);\n    },\n\n    /**\n     * If the given node is a DOM text node, wrap it in a span element and return\n     * the wrapper.\n     * @param el {Node} a DOM node\n     * @return {Element} Original element or wrapper\n     */\n    __wrap(el) {\n      if (qxWeb.isTextNode(el)) {\n        var wrapper = document.createElement(\"span\");\n        wrapper.appendChild(el);\n        el = wrapper;\n      }\n      return el;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this, \"template\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,oBAAoB,EAAE;IACxCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,eAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,EAAE;QACtB,IAAIC,EAAE,GAAGV,EAAE,CAACW,GAAG,CAACC,QAAQ,CAACN,GAAG,CAACC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,CAAC;QAChDC,EAAE,GAAGV,EAAE,CAACa,MAAM,CAACD,QAAQ,CAACE,SAAM,CAACJ,EAAE,CAAC;QAClC,OAAOK,KAAK,CAACC,KAAK,CAAC,CAACN,EAAE,CAAC,EAAEK,KAAK,CAAC;MACjC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,MAAM,kBAACC,QAAQ,EAAEV,IAAI,EAAEC,QAAQ,EAAE;QAC/B,OAAOT,EAAE,CAACW,GAAG,CAACC,QAAQ,CAACK,MAAM,CAACC,QAAQ,EAAEV,IAAI,EAAEC,QAAQ,CAAC;MACzD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIU,YAAY,wBAACD,QAAQ,EAAEV,IAAI,EAAEC,QAAQ,EAAE;QACrC,IAAIC,EAAE,GAAGV,EAAE,CAACW,GAAG,CAACC,QAAQ,CAACO,YAAY,CAACD,QAAQ,EAAEV,IAAI,EAAEC,QAAQ,CAAC;QAC/DC,EAAE,GAAGV,EAAE,CAACa,MAAM,CAACD,QAAQ,CAACE,SAAM,CAACJ,EAAE,CAAC;QAClC,OAAOK,KAAK,CAACC,KAAK,CAAC,CAACN,EAAE,CAAC,EAAEK,KAAK,CAAC;MACjC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACID,SAAM,qBAACJ,EAAE,EAAE;QACT,IAAIK,KAAK,CAACK,UAAU,CAACV,EAAE,CAAC,EAAE;UACxB,IAAIW,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UAC5CF,OAAO,CAACG,WAAW,CAACd,EAAE,CAAC;UACvBA,EAAE,GAAGW,OAAO;QACd;QACA,OAAOX,EAAE;MACX;IACF,CAAC;IAEDe,KAAK,iBAACpB,OAAO,EAAE;MACbU,KAAK,CAACW,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;IACpC;EACF,CAAC,CAAC;EAvGF1B,EAAE,CAACa,MAAM,CAACD,QAAQ,CAACT,aAAa,GAAGA,aAAa;AAAC"
}