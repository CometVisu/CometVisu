{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "hasChild",
    "parent",
    "child",
    "parentNode",
    "hasChildren",
    "element",
    "firstChild",
    "hasChildElements",
    "nodeType",
    "nextSibling",
    "getParentElement",
    "isInDom",
    "win",
    "window",
    "domElements",
    "document",
    "getElementsByTagName",
    "nodeName",
    "i",
    "l",
    "length",
    "insertAt",
    "node",
    "index",
    "ref",
    "childNodes",
    "insertBefore",
    "appendChild",
    "insertBegin",
    "insertEnd",
    "insertAfter",
    "lastChild",
    "remove",
    "removeChild",
    "removeChildAt",
    "replaceChild",
    "newNode",
    "oldNode",
    "replaceAt",
    "__helperElement",
    "getHelperElement",
    "key",
    "location",
    "href",
    "dom",
    "Element",
    "helper",
    "createElement",
    "core",
    "Environment",
    "get",
    "style",
    "display",
    "body",
    "create",
    "name",
    "attributes",
    "Error",
    "bom",
    "Attribute",
    "set",
    "empty",
    "innerHTML"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/dom/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Manages children structures of an element. Easy and convenient APIs\n * to insert, remove and replace children.\n */\nqx.Bootstrap.define(\"qx.dom.Element\", {\n  statics: {\n    /**\n     * Whether the given <code>child</code> is a child of <code>parent</code>\n     *\n     * @param parent {Element} parent element\n     * @param child {Node} child node\n     * @return {Boolean} true when the given <code>child</code> is a child of <code>parent</code>\n     */\n    hasChild(parent, child) {\n      return child.parentNode === parent;\n    },\n\n    /**\n     * Whether the given <code>element</code> has children.\n     *\n     * @param element {Element} element to test\n     * @return {Boolean} true when the given <code>element</code> has at least one child node\n     */\n    hasChildren(element) {\n      return !!element.firstChild;\n    },\n\n    /**\n     * Whether the given <code>element</code> has any child elements.\n     *\n     * @param element {Element} element to test\n     * @return {Boolean} true when the given <code>element</code> has at least one child element\n     */\n    hasChildElements(element) {\n      element = element.firstChild;\n\n      while (element) {\n        if (element.nodeType === 1) {\n          return true;\n        }\n\n        element = element.nextSibling;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns the parent element of the given element.\n     *\n     * @param element {Element} Element to find the parent for\n     * @return {Element} The parent element\n     */\n    getParentElement(element) {\n      return element.parentNode;\n    },\n\n    /**\n     * Checks if the <code>element</code> is in the DOM, but note that\n     * the method is very expensive!\n     *\n     * @param element {Element} The DOM element to check.\n     * @param win {Window} The window to check for.\n     * @return {Boolean} <code>true</code> if the <code>element</code> is in\n     *          the DOM, <code>false</code> otherwise.\n     */\n    isInDom(element, win) {\n      if (!win) {\n        win = window;\n      }\n\n      var domElements = win.document.getElementsByTagName(element.nodeName);\n\n      for (var i = 0, l = domElements.length; i < l; i++) {\n        if (domElements[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INSERTION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Inserts <code>node</code> at the given <code>index</code>\n     * inside <code>parent</code>.\n     *\n     * @param node {Node} node to insert\n     * @param parent {Element} parent element node\n     * @param index {Integer} where to insert\n     * @return {Boolean} returns true (successful)\n     */\n    insertAt(node, parent, index) {\n      var ref = parent.childNodes[index];\n\n      if (ref) {\n        parent.insertBefore(node, ref);\n      } else {\n        parent.appendChild(node);\n      }\n\n      return true;\n    },\n\n    /**\n     * Insert <code>node</code> into <code>parent</code> as first child.\n     * Indexes of other children will be incremented by one.\n     *\n     * @param node {Node} Node to insert\n     * @param parent {Element} parent element node\n     * @return {Boolean} returns true (successful)\n     */\n    insertBegin(node, parent) {\n      if (parent.firstChild) {\n        this.insertBefore(node, parent.firstChild);\n      } else {\n        parent.appendChild(node);\n      }\n      return true;\n    },\n\n    /**\n     * Insert <code>node</code> into <code>parent</code> as last child.\n     *\n     * @param node {Node} Node to insert\n     * @param parent {Element} parent element node\n     * @return {Boolean} returns true (successful)\n     */\n    insertEnd(node, parent) {\n      parent.appendChild(node);\n      return true;\n    },\n\n    /**\n     * Inserts <code>node</code> before <code>ref</code> in the same parent.\n     *\n     * @param node {Node} Node to insert\n     * @param ref {Node} Node which will be used as reference for insertion\n     * @return {Boolean} returns true (successful)\n     */\n    insertBefore(node, ref) {\n      ref.parentNode.insertBefore(node, ref);\n      return true;\n    },\n\n    /**\n     * Inserts <code>node</code> after <code>ref</code> in the same parent.\n     *\n     * @param node {Node} Node to insert\n     * @param ref {Node} Node which will be used as reference for insertion\n     * @return {Boolean} returns true (successful)\n     */\n    insertAfter(node, ref) {\n      var parent = ref.parentNode;\n\n      if (ref == parent.lastChild) {\n        parent.appendChild(node);\n      } else {\n        return this.insertBefore(node, ref.nextSibling);\n      }\n\n      return true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REMOVAL\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes the given <code>node</code> from its parent element.\n     *\n     * @param node {Node} Node to remove\n     * @return {Boolean} <code>true</code> when node was successfully removed,\n     *   otherwise <code>false</code>\n     */\n    remove(node) {\n      if (!node.parentNode) {\n        return false;\n      }\n\n      node.parentNode.removeChild(node);\n      return true;\n    },\n\n    /**\n     * Removes the given <code>node</code> from the <code>parent</code>.\n     *\n     * @param node {Node} Node to remove\n     * @param parent {Element} parent element which contains the <code>node</code>\n     * @return {Boolean} <code>true</code> when node was successfully removed,\n     *   otherwise <code>false</code>\n     */\n    removeChild(node, parent) {\n      if (node.parentNode !== parent) {\n        return false;\n      }\n\n      parent.removeChild(node);\n      return true;\n    },\n\n    /**\n     * Removes the node at the given <code>index</code>\n     * from the <code>parent</code>.\n     *\n     * @param index {Integer} position of the node which should be removed\n     * @param parent {Element} parent DOM element\n     * @return {Boolean} <code>true</code> when node was successfully removed,\n     *   otherwise <code>false</code>\n     */\n    removeChildAt(index, parent) {\n      var child = parent.childNodes[index];\n\n      if (!child) {\n        return false;\n      }\n\n      parent.removeChild(child);\n      return true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REPLACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Replaces <code>oldNode</code> with <code>newNode</code> in the current\n     * parent of <code>oldNode</code>.\n     *\n     * @param newNode {Node} DOM node to insert\n     * @param oldNode {Node} DOM node to remove\n     * @return {Boolean} <code>true</code> when node was successfully replaced\n     */\n    replaceChild(newNode, oldNode) {\n      if (!oldNode.parentNode) {\n        return false;\n      }\n\n      oldNode.parentNode.replaceChild(newNode, oldNode);\n      return true;\n    },\n\n    /**\n     * Replaces the node at <code>index</code> with <code>newNode</code> in\n     * the given parent.\n     *\n     * @param newNode {Node} DOM node to insert\n     * @param index {Integer} position of old DOM node\n     * @param parent {Element} parent DOM element\n     * @return {Boolean} <code>true</code> when node was successfully replaced\n     */\n    replaceAt(newNode, index, parent) {\n      var oldNode = parent.childNodes[index];\n\n      if (!oldNode) {\n        return false;\n      }\n\n      parent.replaceChild(newNode, oldNode);\n      return true;\n    },\n\n    /**\n     * Stores helper element for element creation in WebKit\n     *\n     * @internal\n     */\n    __helperElement: {},\n\n    /**\n     * Creates and returns a DOM helper element.\n     *\n     * @param win {Window?} Window to create the element for\n     * @return {Element} The created element node\n     */\n    getHelperElement(win) {\n      if (!win) {\n        win = window;\n      }\n\n      // key is needed to allow using different windows\n      var key = win.location.href;\n\n      if (!qx.dom.Element.__helperElement[key]) {\n        var helper = (qx.dom.Element.__helperElement[key] =\n          win.document.createElement(\"div\"));\n\n        // innerHTML will only parsed correctly if element is appended to document\n        if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n          helper.style.display = \"none\";\n\n          win.document.body.appendChild(helper);\n        }\n      }\n\n      return qx.dom.Element.__helperElement[key];\n    },\n\n    /**\n     * Creates a DOM element.\n     *\n     * @param name {String} Tag name of the element\n     * @param attributes {Map?} Map of attributes to apply\n     * @param win {Window?} Window to create the element for\n     * @return {Element} The created element node\n     */\n    create(name, attributes, win) {\n      if (!win) {\n        win = window;\n      }\n\n      if (!name) {\n        throw new Error(\"The tag name is missing!\");\n      }\n\n      var element = win.document.createElement(name);\n\n      for (var key in attributes) {\n        qx.bom.element.Attribute.set(element, key, attributes[key]);\n      }\n\n      return element;\n    },\n\n    /**\n     * Removes all content from the given element\n     *\n     * @param element {Element} element to clean\n     * @return {String} empty string (new HTML content)\n     */\n    empty(element) {\n      return (element.innerHTML = \"\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}