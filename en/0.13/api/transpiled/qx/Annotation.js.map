{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__getOwnAnnos",
    "__P_88_0",
    "clazz",
    "name",
    "group",
    "annoClass",
    "$$annotations",
    "undefined",
    "annos",
    "match",
    "hasOwnProperty",
    "filter",
    "anno",
    "__getAnnos",
    "__P_88_1",
    "result",
    "tmp",
    "superclass",
    "src",
    "lang",
    "Array",
    "append",
    "getOwnClass",
    "getClass",
    "getOwnConstructor",
    "getConstructor",
    "getOwnDestructor",
    "getDestructor",
    "getOwnMember",
    "getMember",
    "getOwnProperty",
    "getProperty",
    "getPropertiesByAnnotation",
    "annotation",
    "properties",
    "Class",
    "getProperties",
    "forEach",
    "property",
    "Annotation",
    "includes",
    "push",
    "getStatic"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/Annotation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2016 Zenesis Limited (http://www.zenesis.com)\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * John Spackman (john.spackman@zenesis.com)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides static API methods that allow the annotations of a class\r\n * to be inspected at runtime.\r\n *\r\n * Annotations are added to a class when the class is defined and is an array of\r\n * zero or more objects; annotations are always seen to be an array, but the contents\r\n * of that array is not type checked and is never changed (you should not change\r\n * the array at runtime).\r\n *\r\n * Annotations in the class definition are easily recognisable by the \"@\" symbol,\r\n * either as a prefix to a special keyword such as \"construct\", or as the prefix\r\n * to the name of the member which is being annotated.  The only exception to this\r\n * is that classes and properties don't need to be named, they just need a \"@\"\r\n * property.\r\n *\r\n * For example:\r\n *\r\n * <pre class='javascript'>\r\n * qx.Class.define(\"foo.MyClass\", {\r\n *  \"@\": [ \"my-class-annotation\" ], // Class annotations,\r\n *  \"@construct\": [ \"my-constructor-annotation\" ], // Constructor annotations,\r\n *  \"@destruct\": [ \"my-destructor-annotation\" ], // Destructor annotations,\r\n *\r\n *  properties: {\r\n *    myProperty: {\r\n *      \"@\": [ \"some-property-anno\" ],\r\n *      init: null,\r\n *      nullable: true\r\n *    }\r\n *  },\r\n *\r\n *  members: {\r\n *    \"@myMethod\": [ new foo.annotations.MyAnnotation(1, \"test\") ],\r\n *    myMethod: function() {\r\n *      // ... snip ...\r\n *    }\r\n *  },\r\n *\r\n *  statics: {\r\n *    \"@myStatic\": [ \"a static anno\" ],\r\n *    myStatic: function() {\r\n *      // ... snip ...\r\n *    }\r\n *  }\r\n * });\r\n * </pre>\r\n *\r\n * Note that the annotation can be anything - a string can be easy and quick, but an\r\n * instance of a class may be appropriate for sophisticated needs (see the myMethod\r\n * example above).\r\n *\r\n * The static methods in this class allow you to programmatically get the annotations\r\n * that were defined; getClass() returns the class annotations, getMethod returns the\r\n * annotions for the named method, etc.\r\n *\r\n * When classes derive from each other, the default methods get the annotations for\r\n * the class and for the super classes as well; the array will be populated so that\r\n * the class's annotations are at the start, followed by it's super class, and so\r\n * on.  If you only want the annotations of the class and not those from the superclass,\r\n * use one of the getOwnXxxx methods instead.\r\n *\r\n */\r\nqx.Bootstrap.define(\"qx.Annotation\", {\r\n  statics: {\r\n    /**\r\n     * Returns a list of annotations, exclusively from this class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} the name (eg method name) to look for\r\n     * @param group {String} the group to look in if applicable (eg \"methods\")\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    __getOwnAnnos(clazz, name, group, annoClass) {\r\n      if (clazz.$$annotations === undefined) {\r\n        return [];\r\n      }\r\n      var annos = group ? clazz.$$annotations[group] : clazz.$$annotations;\r\n      var match = annos && annos.hasOwnProperty(name) ? annos[name] : null;\r\n      if (!match) {\r\n        return [];\r\n      }\r\n      if (annoClass) {\r\n        match = match.filter(function (anno) {\r\n          return anno instanceof annoClass;\r\n        });\r\n      }\r\n      return match;\r\n    },\r\n\r\n    /**\r\n     * Returns a list of annotations, from this class and superclasses\r\n     * @param clazz {Class} the starting class to inspect\r\n     * @param name {String} the name (eg method name) to look for\r\n     * @param group {String} the group to look in if applicable (eg \"methods\")\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    __getAnnos(clazz, name, group, annoClass) {\r\n      var result = [];\r\n      for (var tmp = clazz; tmp; tmp = tmp.superclass) {\r\n        if (tmp.$$annotations !== undefined) {\r\n          var annos = group ? tmp.$$annotations[group] : tmp.$$annotations;\r\n          var src = annos && annos.hasOwnProperty(name) ? annos[name] : null;\r\n          if (src) {\r\n            if (annoClass) {\r\n              src = src.filter(function (anno) {\r\n                return anno instanceof annoClass;\r\n              });\r\n            }\r\n            qx.lang.Array.append(result, src);\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * Returns the class annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getOwnClass(clazz, annoClass) {\r\n      return this.__getOwnAnnos(clazz, \"@\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class annotations, from this class and superclasses\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getClass(clazz, annoClass) {\r\n      return this.__getAnnos(clazz, \"@\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class constructor's annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getOwnConstructor(clazz, annoClass) {\r\n      return this.__getOwnAnnos(clazz, \"@construct\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class constructor's annotations, from the class and superclasses\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getConstructor(clazz, annoClass) {\r\n      return this.__getAnnos(clazz, \"@construct\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class destructor's annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getOwnDestructor(clazz, annoClass) {\r\n      return this.__getOwnAnnos(clazz, \"@destruct\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class destructor's annotations, from the class and superclasses\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getDestructor(clazz, annoClass) {\r\n      return this.__getAnnos(clazz, \"@destruct\", null, annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class member's annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} member name\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getOwnMember(clazz, name, annoClass) {\r\n      return this.__getOwnAnnos(clazz, name, \"members\", annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class member's annotations, from the class and superclass\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} member name\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getMember(clazz, name, annoClass) {\r\n      return this.__getAnnos(clazz, name, \"members\", annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class property's annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} property name\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getOwnProperty(clazz, name, annoClass) {\r\n      return this.__getOwnAnnos(clazz, name, \"properties\", annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns the class property's annotations, from the class and superclasses\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} property name\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getProperty(clazz, name, annoClass) {\r\n      return this.__getAnnos(clazz, name, \"properties\", annoClass);\r\n    },\r\n\r\n    /**\r\n     * Returns a list of property names that implement a given annotation.\r\n     * @param clazz {Class} the class to inspect\r\n     * @param annotation {String|Object} annotation to look for\r\n     * @return {String[]} the property names, never null\r\n     */\r\n    getPropertiesByAnnotation(clazz, annotation) {\r\n      var properties = [];\r\n\r\n      qx.Class.getProperties(clazz).forEach(function (property) {\r\n        if (qx.Annotation.getProperty(clazz, property).includes(annotation)) {\r\n          properties.push(property);\r\n        }\r\n      });\r\n\r\n      return properties;\r\n    },\r\n\r\n    /**\r\n     * Returns the class static's annotations, exclusively from the class\r\n     * @param clazz {Class} the class to inspect\r\n     * @param name {String} static name\r\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\r\n     * @return {Object[]} the annotations, never null\r\n     */\r\n    getStatic(clazz, name, annoClass) {\r\n      return this.__getOwnAnnos(clazz, name, \"statics\", annoClass);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,eAAe,EAAE;IACnCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,QAAa,WAAAC,SAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;QAC3C,IAAIH,KAAK,CAACI,aAAa,KAAKC,SAAS,EAAE;UACrC,OAAO,EAAE;QACX;QACA,IAAIC,KAAK,GAAGJ,KAAK,GAAGF,KAAK,CAACI,aAAa,CAACF,KAAK,CAAC,GAAGF,KAAK,CAACI,aAAa;QACpE,IAAIG,KAAK,GAAGD,KAAK,IAAIA,KAAK,CAACE,cAAc,CAACP,IAAI,CAAC,GAAGK,KAAK,CAACL,IAAI,CAAC,GAAG,IAAI;QACpE,IAAI,CAACM,KAAK,EAAE;UACV,OAAO,EAAE;QACX;QACA,IAAIJ,SAAS,EAAE;UACbI,KAAK,GAAGA,KAAK,CAACE,MAAM,CAAC,UAAUC,IAAI,EAAE;YACnC,OAAOA,IAAI,YAAYP,SAAS;UAClC,CAAC,CAAC;QACJ;QACA,OAAOI,KAAK;MACd,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACII,QAAU,WAAAC,SAACZ,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;QACxC,IAAIU,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"
}