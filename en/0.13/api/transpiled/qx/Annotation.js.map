{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__getOwnAnnos",
    "clazz",
    "name",
    "group",
    "annoClass",
    "$$annotations",
    "undefined",
    "annos",
    "match",
    "hasOwnProperty",
    "filter",
    "anno",
    "__getAnnos",
    "result",
    "tmp",
    "superclass",
    "src",
    "lang",
    "Array",
    "append",
    "getOwnClass",
    "getClass",
    "getOwnConstructor",
    "getConstructor",
    "getOwnDestructor",
    "getDestructor",
    "getOwnMember",
    "getMember",
    "getOwnProperty",
    "getProperty",
    "getPropertiesByAnnotation",
    "annotation",
    "properties",
    "Class",
    "getProperties",
    "forEach",
    "property",
    "Annotation",
    "includes",
    "push",
    "getStatic"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/Annotation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2016 Zenesis Limited (http://www.zenesis.com)\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com)\n\n************************************************************************ */\n\n/**\n * This class provides static API methods that allow the annotations of a class\n * to be inspected at runtime.\n *\n * Annotations are added to a class when the class is defined and is an array of\n * zero or more objects; annotations are always seen to be an array, but the contents\n * of that array is not type checked and is never changed (you should not change\n * the array at runtime).\n *\n * Annotations in the class definition are easily recognisable by the \"@\" symbol,\n * either as a prefix to a special keyword such as \"construct\", or as the prefix\n * to the name of the member which is being annotated.  The only exception to this\n * is that classes and properties don't need to be named, they just need a \"@\"\n * property.\n *\n * For example:\n *\n * <pre class='javascript'>\n * qx.Class.define(\"foo.MyClass\", {\n *  \"@\": [ \"my-class-annotation\" ], // Class annotations,\n *  \"@construct\": [ \"my-constructor-annotation\" ], // Constructor annotations,\n *  \"@destruct\": [ \"my-destructor-annotation\" ], // Destructor annotations,\n *\n *  properties: {\n *    myProperty: {\n *      \"@\": [ \"some-property-anno\" ],\n *      init: null,\n *      nullable: true\n *    }\n *  },\n *\n *  members: {\n *    \"@myMethod\": [ new foo.annotations.MyAnnotation(1, \"test\") ],\n *    myMethod: function() {\n *      // ... snip ...\n *    }\n *  },\n *\n *  statics: {\n *    \"@myStatic\": [ \"a static anno\" ],\n *    myStatic: function() {\n *      // ... snip ...\n *    }\n *  }\n * });\n * </pre>\n *\n * Note that the annotation can be anything - a string can be easy and quick, but an\n * instance of a class may be appropriate for sophisticated needs (see the myMethod\n * example above).\n *\n * The static methods in this class allow you to programmatically get the annotations\n * that were defined; getClass() returns the class annotations, getMethod returns the\n * annotions for the named method, etc.\n *\n * When classes derive from each other, the default methods get the annotations for\n * the class and for the super classes as well; the array will be populated so that\n * the class's annotations are at the start, followed by it's super class, and so\n * on.  If you only want the annotations of the class and not those from the superclass,\n * use one of the getOwnXxxx methods instead.\n *\n */\nqx.Bootstrap.define(\"qx.Annotation\", {\n  statics: {\n    /**\n     * Returns a list of annotations, exclusively from this class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} the name (eg method name) to look for\n     * @param group {String} the group to look in if applicable (eg \"methods\")\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    __getOwnAnnos(clazz, name, group, annoClass) {\n      if (clazz.$$annotations === undefined) {\n        return [];\n      }\n      var annos = group ? clazz.$$annotations[group] : clazz.$$annotations;\n      var match = annos && annos.hasOwnProperty(name) ? annos[name] : null;\n      if (!match) {\n        return [];\n      }\n      if (annoClass) {\n        match = match.filter(function (anno) {\n          return anno instanceof annoClass;\n        });\n      }\n      return match;\n    },\n\n    /**\n     * Returns a list of annotations, from this class and superclasses\n     * @param clazz {Class} the starting class to inspect\n     * @param name {String} the name (eg method name) to look for\n     * @param group {String} the group to look in if applicable (eg \"methods\")\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    __getAnnos(clazz, name, group, annoClass) {\n      var result = [];\n      for (var tmp = clazz; tmp; tmp = tmp.superclass) {\n        if (tmp.$$annotations !== undefined) {\n          var annos = group ? tmp.$$annotations[group] : tmp.$$annotations;\n          var src = annos && annos.hasOwnProperty(name) ? annos[name] : null;\n          if (src) {\n            if (annoClass) {\n              src = src.filter(function (anno) {\n                return anno instanceof annoClass;\n              });\n            }\n            qx.lang.Array.append(result, src);\n          }\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Returns the class annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getOwnClass(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@\", null, annoClass);\n    },\n\n    /**\n     * Returns the class annotations, from this class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getClass(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@\", null, annoClass);\n    },\n\n    /**\n     * Returns the class constructor's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getOwnConstructor(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@construct\", null, annoClass);\n    },\n\n    /**\n     * Returns the class constructor's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getConstructor(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@construct\", null, annoClass);\n    },\n\n    /**\n     * Returns the class destructor's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getOwnDestructor(clazz, annoClass) {\n      return this.__getOwnAnnos(clazz, \"@destruct\", null, annoClass);\n    },\n\n    /**\n     * Returns the class destructor's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getDestructor(clazz, annoClass) {\n      return this.__getAnnos(clazz, \"@destruct\", null, annoClass);\n    },\n\n    /**\n     * Returns the class member's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} member name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getOwnMember(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"members\", annoClass);\n    },\n\n    /**\n     * Returns the class member's annotations, from the class and superclass\n     * @param clazz {Class} the class to inspect\n     * @param name {String} member name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getMember(clazz, name, annoClass) {\n      return this.__getAnnos(clazz, name, \"members\", annoClass);\n    },\n\n    /**\n     * Returns the class property's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} property name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getOwnProperty(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"properties\", annoClass);\n    },\n\n    /**\n     * Returns the class property's annotations, from the class and superclasses\n     * @param clazz {Class} the class to inspect\n     * @param name {String} property name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getProperty(clazz, name, annoClass) {\n      return this.__getAnnos(clazz, name, \"properties\", annoClass);\n    },\n\n    /**\n     * Returns a list of property names that implement a given annotation.\n     * @param clazz {Class} the class to inspect\n     * @param annotation {String|Object} annotation to look for\n     * @return {String[]} the property names, never null\n     */\n    getPropertiesByAnnotation(clazz, annotation) {\n      var properties = [];\n\n      qx.Class.getProperties(clazz).forEach(function (property) {\n        if (qx.Annotation.getProperty(clazz, property).includes(annotation)) {\n          properties.push(property);\n        }\n      });\n\n      return properties;\n    },\n\n    /**\n     * Returns the class static's annotations, exclusively from the class\n     * @param clazz {Class} the class to inspect\n     * @param name {String} static name\n     * @param annoClass {Class?} optional class which the annotations being returned must implement\n     * @return {Object[]} the annotations, never null\n     */\n    getStatic(clazz, name, annoClass) {\n      return this.__getOwnAnnos(clazz, name, \"statics\", annoClass);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,eAAe,EAAE;IACnCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,QAAa,oBAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;QAC3C,IAAIH,KAAK,CAACI,aAAa,KAAKC,SAAS,EAAE;UACrC,OAAO,EAAE;QACX;QACA,IAAIC,KAAK,GAAGJ,KAAK,GAAGF,KAAK,CAACI,aAAa,CAACF,KAAK,CAAC,GAAGF,KAAK,CAACI,aAAa;QACpE,IAAIG,KAAK,GAAGD,KAAK,IAAIA,KAAK,CAACE,cAAc,CAACP,IAAI,CAAC,GAAGK,KAAK,CAACL,IAAI,CAAC,GAAG,IAAI;QACpE,IAAI,CAACM,KAAK,EAAE;UACV,OAAO,EAAE;QACX;QACA,IAAIJ,SAAS,EAAE;UACbI,KAAK,GAAGA,KAAK,CAACE,MAAM,CAAC,UAAUC,IAAI,EAAE;YACnC,OAAOA,IAAI,YAAYP,SAAS;UAClC,CAAC,CAAC;QACJ;QACA,OAAOI,KAAK;MACd,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACII,QAAU,oBAACX,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;QACxC,IAAIS,MAAM,GAAG,EAAE;QACf,KAAK,IAAIC,GAAG,GAAGb,KAAK,EAAEa,GAAG,EAAEA,GAAG,GAAGA,GAAG,CAACC,UAAU,EAAE;UAC/C,IAAID,GAAG,CAACT,aAAa,KAAKC,SAAS,EAAE;YACnC,IAAIC,KAAK,GAAGJ,KAAK,GAAGW,GAAG,CAACT,aAAa,CAACF,KAAK,CAAC,GAAGW,GAAG,CAACT,aAAa;YAChE,IAAIW,GAAG,GAAGT,KAAK,IAAIA,KAAK,CAACE,cAAc,CAACP,IAAI,CAAC,GAAGK,KAAK,CAACL,IAAI,CAAC,GAAG,IAAI;YAClE,IAAIc,GAAG,EAAE;cACP,IAAIZ,SAAS,EAAE;gBACbY,GAAG,GAAGA,GAAG,CAACN,MAAM,CAAC,UAAUC,IAAI,EAAE;kBAC/B,OAAOA,IAAI,YAAYP,SAAS;gBAClC,CAAC,CAAC;cACJ;cACAV,EAAE,CAACuB,IAAI,CAACC,KAAK,CAACC,MAAM,CAACN,MAAM,EAAEG,GAAG,CAAC;YACnC;UACF;QACF;QACA,OAAOH,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIO,WAAW,uBAACnB,KAAK,EAAEG,SAAS,EAAE;QAC5B,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAEG,SAAS,CAAC;MACxD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIiB,QAAQ,oBAACpB,KAAK,EAAEG,SAAS,EAAE;QACzB,OAAO,IAAI,CAACQ,QAAU,CAACX,KAAK,EAAE,GAAG,EAAE,IAAI,EAAEG,SAAS,CAAC;MACrD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIkB,iBAAiB,6BAACrB,KAAK,EAAEG,SAAS,EAAE;QAClC,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAEG,SAAS,CAAC;MACjE,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACImB,cAAc,0BAACtB,KAAK,EAAEG,SAAS,EAAE;QAC/B,OAAO,IAAI,CAACQ,QAAU,CAACX,KAAK,EAAE,YAAY,EAAE,IAAI,EAAEG,SAAS,CAAC;MAC9D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIoB,gBAAgB,4BAACvB,KAAK,EAAEG,SAAS,EAAE;QACjC,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAEG,SAAS,CAAC;MAChE,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIqB,aAAa,yBAACxB,KAAK,EAAEG,SAAS,EAAE;QAC9B,OAAO,IAAI,CAACQ,QAAU,CAACX,KAAK,EAAE,WAAW,EAAE,IAAI,EAAEG,SAAS,CAAC;MAC7D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIsB,YAAY,wBAACzB,KAAK,EAAEC,IAAI,EAAEE,SAAS,EAAE;QACnC,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAEC,IAAI,EAAE,SAAS,EAAEE,SAAS,CAAC;MAC9D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIuB,SAAS,qBAAC1B,KAAK,EAAEC,IAAI,EAAEE,SAAS,EAAE;QAChC,OAAO,IAAI,CAACQ,QAAU,CAACX,KAAK,EAAEC,IAAI,EAAE,SAAS,EAAEE,SAAS,CAAC;MAC3D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIwB,cAAc,0BAAC3B,KAAK,EAAEC,IAAI,EAAEE,SAAS,EAAE;QACrC,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAEC,IAAI,EAAE,YAAY,EAAEE,SAAS,CAAC;MACjE,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIyB,WAAW,uBAAC5B,KAAK,EAAEC,IAAI,EAAEE,SAAS,EAAE;QAClC,OAAO,IAAI,CAACQ,QAAU,CAACX,KAAK,EAAEC,IAAI,EAAE,YAAY,EAAEE,SAAS,CAAC;MAC9D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACI0B,yBAAyB,qCAAC7B,KAAK,EAAE8B,UAAU,EAAE;QAC3C,IAAIC,UAAU,GAAG,EAAE;QAEnBtC,EAAE,CAACuC,KAAK,CAACC,aAAa,CAACjC,KAAK,CAAC,CAACkC,OAAO,CAAC,UAAUC,QAAQ,EAAE;UACxD,IAAI1C,EAAE,CAAC2C,UAAU,CAACR,WAAW,CAAC5B,KAAK,EAAEmC,QAAQ,CAAC,CAACE,QAAQ,CAACP,UAAU,CAAC,EAAE;YACnEC,UAAU,CAACO,IAAI,CAACH,QAAQ,CAAC;UAC3B;QACF,CAAC,CAAC;QAEF,OAAOJ,UAAU;MACnB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIQ,SAAS,qBAACvC,KAAK,EAAEC,IAAI,EAAEE,SAAS,EAAE;QAChC,OAAO,IAAI,CAACJ,QAAa,CAACC,KAAK,EAAEC,IAAI,EAAE,SAAS,EAAEE,SAAS,CAAC;MAC9D;IACF;EACF,CAAC,CAAC;EA3QFV,EAAE,CAAC2C,UAAU,CAACxC,aAAa,GAAGA,aAAa;AAAC"
}