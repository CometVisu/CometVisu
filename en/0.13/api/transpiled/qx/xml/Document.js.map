{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "DOMDOC",
    "XMLHTTP",
    "isXmlDocument",
    "elem",
    "nodeType",
    "documentElement",
    "nodeName",
    "ownerDocument",
    "create",
    "namespaceUri",
    "qualifiedName",
    "core",
    "Environment",
    "get",
    "obj",
    "ActiveXObject",
    "setProperty",
    "str",
    "loadXML",
    "document",
    "implementation",
    "createDocument",
    "Error",
    "fromString",
    "dom",
    "xml",
    "Document",
    "parser",
    "DOMParser",
    "parseFromString",
    "defer",
    "domDoc",
    "httpReq",
    "i",
    "l",
    "length",
    "ex"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/xml/Document.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Cross browser XML document creation API\r\n *\r\n * The main purpose of this class is to allow you to create XML document objects in a\r\n * cross-browser fashion. Use <code>create</code> to create an empty document,\r\n * <code>fromString</code> to create one from an existing XML text. Both methods\r\n * return a *native DOM object*. That means you use standard DOM methods on such\r\n * an object (e.g. <code>createElement</code>).\r\n *\r\n * The following links provide further information on XML documents:\r\n *\r\n * * <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document\">W3C Interface Specification</a>\r\n * * <a href=\"http://msdn2.microsoft.com/en-us/library/ms535918.aspx\">MS xml Object</a>\r\n * * <a href=\"http://msdn2.microsoft.com/en-us/library/ms764622.aspx\">MSXML GUIDs and ProgIDs</a>\r\n * * <a href=\"https://developer.mozilla.org/en-US/docs/Parsing_and_serializing_XML\">MDN Parsing and Serializing XML</a>\r\n */\r\n/* global ActiveXObject */\r\n/* global window */\r\nqx.Bootstrap.define(\"qx.xml.Document\", {\r\n  statics: {\r\n    /** @type {String} ActiveX class name of DOMDocument (IE specific) */\r\n    DOMDOC: null,\r\n\r\n    /** @type {String} ActiveX class name of XMLHttpRequest (IE specific) */\r\n    XMLHTTP: null,\r\n\r\n    /**\r\n     * Whether the given element is a XML document or element\r\n     * which is part of a XML document.\r\n     *\r\n     * @param elem {Document|Element} Any DOM Document or Element\r\n     * @return {Boolean} Whether the document is a XML document\r\n     */\r\n    isXmlDocument(elem) {\r\n      if (elem.nodeType === 9) {\r\n        return elem.documentElement.nodeName !== \"HTML\";\r\n      } else if (elem.ownerDocument) {\r\n        return this.isXmlDocument(elem.ownerDocument);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Create an XML document.\r\n     *\r\n     * Returns a native DOM document object, set up for XML.\r\n     *\r\n     * @param namespaceUri {String ? null} The namespace URI of the document element to create or null.\r\n     * @param qualifiedName {String ? null} The qualified name of the document element to be created or null.\r\n     * @return {Document} empty XML object\r\n     *\r\n     * @ignore(ActiveXObject)\r\n     */\r\n    create(namespaceUri, qualifiedName) {\r\n      // ActiveX - This is the preferred way for IE9 as well since it has no XPath\r\n      // support when using the native implementation.createDocument\r\n      if (qx.core.Environment.get(\"plugin.activex\")) {\r\n        var obj = new ActiveXObject(this.DOMDOC);\r\n        //The SelectionLanguage property is no longer needed in MSXML 6; trying\r\n        // to set it causes an exception in IE9.\r\n        if (this.DOMDOC == \"MSXML2.DOMDocument.3.0\") {\r\n          obj.setProperty(\"SelectionLanguage\", \"XPath\");\r\n        }\r\n\r\n        if (qualifiedName) {\r\n          var str = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<';\r\n\r\n          str += qualifiedName;\r\n\r\n          if (namespaceUri) {\r\n            str += \" xmlns='\" + namespaceUri + \"'\";\r\n          }\r\n\r\n          str += \" />\";\r\n          obj.loadXML(str);\r\n        }\r\n\r\n        return obj;\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"xml.implementation\")) {\r\n        return document.implementation.createDocument(\r\n          namespaceUri || \"\",\r\n          qualifiedName || \"\",\r\n          null\r\n        );\r\n      }\r\n\r\n      throw new Error(\"No XML implementation available!\");\r\n    },\r\n\r\n    /**\r\n     * The string passed in is parsed into a DOM document.\r\n     *\r\n     * @param str {String} the string to be parsed\r\n     * @return {Document} XML document with given content\r\n     * @signature function(str)\r\n     *\r\n     * @ignore(DOMParser)\r\n     */\r\n    fromString(str) {\r\n      // Legacy IE/ActiveX\r\n      if (qx.core.Environment.get(\"plugin.activex\")) {\r\n        var dom = qx.xml.Document.create();\r\n        dom.loadXML(str);\r\n        return dom;\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"xml.domparser\")) {\r\n        var parser = new DOMParser();\r\n        return parser.parseFromString(str, \"text/xml\");\r\n      }\r\n\r\n      throw new Error(\"No XML implementation available!\");\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    // Detecting available ActiveX implementations.\r\n    if (qx.core.Environment.get(\"plugin.activex\")) {\r\n      // According to information on the Microsoft XML Team's WebLog\r\n      // it is recommended to check for availability of MSXML versions 6.0 and 3.0.\r\n      // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\r\n      var domDoc = [\"MSXML2.DOMDocument.6.0\", \"MSXML2.DOMDocument.3.0\"];\r\n      var httpReq = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\"];\r\n\r\n      for (var i = 0, l = domDoc.length; i < l; i++) {\r\n        try {\r\n          // Keep both objects in sync with the same version.\r\n          // This is important as there were compatibility issues detected.\r\n          new ActiveXObject(domDoc[i]);\r\n          new ActiveXObject(httpReq[i]);\r\n        } catch (ex) {\r\n          continue;\r\n        }\r\n\r\n        // Update static constants\r\n        statics.DOMDOC = domDoc[i];\r\n        statics.XMLHTTP = httpReq[i];\r\n\r\n        // Stop loop here\r\n        break;\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}