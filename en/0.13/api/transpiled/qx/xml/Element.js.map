{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__xpe",
    "XML_SERIALIZER",
    "serialize",
    "element",
    "dom",
    "Node",
    "isDocument",
    "documentElement",
    "XMLSerializer",
    "serializeToString",
    "xml",
    "outerHTML",
    "selectSingleNode",
    "query",
    "namespaces",
    "core",
    "Environment",
    "get",
    "XPathEvaluator",
    "xpe",
    "resolver",
    "prefix",
    "createNSResolver",
    "evaluate",
    "XPathResult",
    "FIRST_ORDERED_NODE_TYPE",
    "singleNodeValue",
    "err",
    "Error",
    "namespaceString",
    "ownerDocument",
    "setProperty",
    "selectNodes",
    "result",
    "ORDERED_NODE_SNAPSHOT_TYPE",
    "nodes",
    "i",
    "snapshotLength",
    "snapshotItem",
    "getElementsByTagNameNS",
    "namespaceURI",
    "tagname",
    "doc",
    "Element",
    "getSingleNodeText",
    "node",
    "getText",
    "setAttributeNS",
    "document",
    "namespaceUri",
    "name",
    "value",
    "attr",
    "createNode",
    "nodeValue",
    "setAttributeNode",
    "getAttributeNS",
    "attributes",
    "attribute",
    "getQualifiedItem",
    "createSubElementNS",
    "parent",
    "createElementNS",
    "appendChild",
    "defer",
    "window"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/xml/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Cross browser XML Element API\n *\n * API to select, query and serialize XML elements.\n *\n * Further information:\n *\n * * <a href=\"https://developer.mozilla.org/en-US/docs/Parsing_and_serializing_XML\">MDN Parsing and Serializing XML</a>\n *\n * Please note that nodes selected using the <code>selectSingleNode()</code> and\n * <code>selectNodes()</code> methods remain in their document context so\n * <code>qx.xml.Element.selectNodes(foo, \"//bar\");</code>\n * will search the entire document for any nodes named \"bar\", not just the\n * <code>foo</code> node.\n */\nqx.Class.define(\"qx.xml.Element\", {\n  statics: {\n    __xpe: null,\n\n    /**\n     * @type {Boolean} <code>true</code> if the native XMLSerializer should be used,\n     * <code>false</code> otherwise.\n     */\n    XML_SERIALIZER: false,\n\n    /**\n     * The subtree rooted by the specified element or document is serialized to a string.\n     *\n     * @param element {Element | Document} The root of the subtree to be serialized. This could be any node, including a Document.\n     * @return {String} Serialized subtree\n     */\n    serialize(element) {\n      if (qx.dom.Node.isDocument(element)) {\n        element = element.documentElement;\n      }\n\n      if (this.XML_SERIALIZER) {\n        return new XMLSerializer().serializeToString(element);\n      } else {\n        return element.xml || element.outerHTML;\n      }\n    },\n\n    /**\n     * Selects the first XmlNode that matches the XPath expression.\n     *\n     * @param element {Element | Document} root element for the search\n     * @param query {String} XPath query\n     * @param namespaces {Map} optional map of prefixes and their namespace URIs\n     * @return {Element} first matching element\n     */\n    selectSingleNode(element, query, namespaces) {\n      if (qx.core.Environment.get(\"html.xpath\")) {\n        if (!this.__xpe) {\n          this.__xpe = new XPathEvaluator();\n        }\n\n        var xpe = this.__xpe;\n\n        var resolver;\n\n        if (namespaces) {\n          resolver = function (prefix) {\n            return namespaces[prefix] || null;\n          };\n        } else {\n          resolver = xpe.createNSResolver(element);\n        }\n\n        try {\n          return xpe.evaluate(\n            query,\n            element,\n            resolver,\n            XPathResult.FIRST_ORDERED_NODE_TYPE,\n            null\n          ).singleNodeValue;\n        } catch (err) {\n          throw new Error(\n            \"selectSingleNode: query: \" +\n              query +\n              \", element: \" +\n              element +\n              \", error: \" +\n              err\n          );\n        }\n      }\n\n      if (qx.core.Environment.get(\"xml.selectsinglenode\")) {\n        if (namespaces) {\n          var namespaceString = \"\";\n          for (var prefix in namespaces) {\n            namespaceString +=\n              \"xmlns:\" + prefix + \"='\" + namespaces[prefix] + \"' \";\n          }\n\n          // If the element is a node, set the selection namespace on its parent document.\n          if (element.ownerDocument) {\n            element.ownerDocument.setProperty(\n              \"SelectionNamespaces\",\n              namespaceString\n            );\n          }\n          // element is a document\n          else {\n            element.setProperty(\"SelectionNamespaces\", namespaceString);\n          }\n        }\n\n        return element.selectSingleNode(query);\n      }\n\n      throw new Error(\"No XPath implementation available!\");\n    },\n\n    /**\n     * Selects a list of nodes matching the XPath expression.\n     *\n     * @param element {Element | Document} root element for the search\n     * @param query {String} XPath query\n     * @param namespaces {Map} optional map of prefixes and their namespace URIs\n     * @return {Element[]} List of matching elements\n     */\n    selectNodes(element, query, namespaces) {\n      if (qx.core.Environment.get(\"html.xpath\")) {\n        var xpe = this.__xpe;\n\n        if (!xpe) {\n          this.__xpe = xpe = new XPathEvaluator();\n        }\n\n        var resolver;\n\n        if (namespaces) {\n          resolver = function (prefix) {\n            return namespaces[prefix] || null;\n          };\n        } else {\n          resolver = xpe.createNSResolver(element);\n        }\n\n        try {\n          var result = xpe.evaluate(\n            query,\n            element,\n            resolver,\n            XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n            null\n          );\n        } catch (err) {\n          throw new Error(\n            \"selectNodes: query: \" +\n              query +\n              \", element: \" +\n              element +\n              \", error: \" +\n              err\n          );\n        }\n\n        var nodes = [];\n        for (var i = 0; i < result.snapshotLength; i++) {\n          nodes[i] = result.snapshotItem(i);\n        }\n\n        return nodes;\n      }\n\n      if (qx.core.Environment.get(\"xml.selectnodes\")) {\n        if (namespaces) {\n          var namespaceString = \"\";\n          for (var prefix in namespaces) {\n            namespaceString +=\n              \"xmlns:\" + prefix + \"='\" + namespaces[prefix] + \"' \";\n          }\n\n          // If the element is a node, set the selection namespace on its parent document.\n          if (element.ownerDocument) {\n            element.ownerDocument.setProperty(\n              \"SelectionNamespaces\",\n              namespaceString\n            );\n          }\n          // element is a document\n          else {\n            element.setProperty(\"SelectionNamespaces\", namespaceString);\n          }\n        }\n\n        return element.selectNodes(query);\n      }\n\n      throw new Error(\"No XPath implementation available!\");\n    },\n\n    /**\n     * Returns a list of elements with the given tag name belonging to the given namespace\n     *\n     * (See\n     * <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagNameNS\">MDN\n     * Reference</a>).\n     *\n     * @param element {Element | Document} the element from where the search should start.\n     *       Note that only the descendants of this element are included in the search, not the node itself.\n     * @param namespaceURI {var} is the namespace URI of elements to look for . For example, if you need to look\n     *       for XHTML elements, use the XHTML namespace URI, <tt>http://www.w3.org/1999/xhtml/</tt>.\n     * @param tagname {String} the tagname to look for\n     * @return {Element[]} a list of found elements in the order they appear in the tree.\n     */\n    getElementsByTagNameNS(element, namespaceURI, tagname) {\n      if (qx.core.Environment.get(\"xml.getelementsbytagnamens\")) {\n        return element.getElementsByTagNameNS(namespaceURI, tagname);\n      }\n\n      if (qx.core.Environment.get(\"xml.domproperties\")) {\n        var doc = element.ownerDocument || element;\n\n        doc.setProperty(\"SelectionLanguage\", \"XPath\");\n        doc.setProperty(\n          \"SelectionNamespaces\",\n          \"xmlns:ns='\" + namespaceURI + \"'\"\n        );\n\n        return qx.xml.Element.selectNodes(\n          element,\n          \"descendant-or-self::ns:\" + tagname\n        );\n      }\n\n      throw new Error(\"The client does not support this operation!\");\n    },\n\n    /**\n     * Selects the first XmlNode that matches the XPath expression and returns the text content of the element\n     *\n     * @param element {Element|Document} root element for the search\n     * @param query {String}  XPath query\n     * @return {String} the joined text content of the found element or null if not appropriate.\n     */\n    getSingleNodeText(element, query) {\n      var node = this.selectSingleNode(element, query);\n      return qx.dom.Node.getText(node);\n    },\n\n    /**\n     * Adds or sets an attribute with the given namespace on a node\n     *\n     * @param document {Document} The node's parent document, created e.g. by\n     * {@link qx.xml.Document#create}\n     * @param element {Element} XML/DOM element to modify\n     * @param namespaceUri {String} Namespace URI\n     * @param name {String} Attribute name\n     * @param value {String} Attribute value\n     */\n    setAttributeNS(document, element, namespaceUri, name, value) {\n      if (qx.core.Environment.get(\"xml.attributens\")) {\n        element.setAttributeNS(namespaceUri, name, value);\n      } else if (qx.core.Environment.get(\"xml.createnode\")) {\n        var attr = document.createNode(2, name, namespaceUri);\n        attr.nodeValue = value;\n        element.setAttributeNode(attr);\n      } else {\n        throw new Error(\"The client does not support this operation!\");\n      }\n    },\n\n    /**\n     * Get the value of the attribute with the given namespace and name\n     *\n     * @param element {Element} XML/DOM element to modify\n     * @param namespaceUri {String} Namespace URI\n     * @param name {String} Attribute name\n     * @return {String} the value of the attribute, empty string if not found\n     */\n    getAttributeNS(element, namespaceUri, name) {\n      if (qx.core.Environment.get(\"xml.attributens\")) {\n        var value = element.getAttributeNS(namespaceUri, name);\n        return value === null ? \"\" : value;\n      }\n\n      if (qx.core.Environment.get(\"xml.getqualifieditem\")) {\n        var attributes = element.attributes;\n        var value = null;\n        if (attributes) {\n          var attribute = attributes.getQualifiedItem(name, namespaceUri);\n          if (attribute) {\n            value = attribute.nodeValue;\n          }\n        }\n        return value === null ? \"\" : value;\n      }\n\n      throw new Error(\"The client does not support this operation!\");\n    },\n\n    /**\n     * Creates an element with the given namespace and appends it to an existing\n     * element\n     *\n     * @param document {Document} The node's parent document, created e.g. by\n     * {@link qx.xml.Document#create}\n     * @param parent {Element} The parent element for the new sub-element\n     * @param name {String} The new element's name\n     * @param namespaceUri {String} Namespace URI for the new element\n     *\n     * @return {Element} The newly created sub-element\n     */\n    createSubElementNS(document, parent, name, namespaceUri) {\n      if (qx.core.Environment.get(\"xml.createelementns\")) {\n        // the \"x\" prefix has no importance. when there's a conflict,\n        // mozilla engine assigns an alternative prefix automatically.\n        // not putting a prefix means to assign default namespace prefix\n        // to the given namespace uri.\n        var node = document.createElementNS(namespaceUri, \"x:\" + name);\n        parent.appendChild(node);\n        return node;\n      }\n\n      if (qx.core.Environment.get(\"xml.createnode\")) {\n        var node = document.createNode(1, name, namespaceUri);\n        parent.appendChild(node);\n        return node;\n      }\n\n      throw new Error(\"The client does not support this operation!\");\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    statics.XML_SERIALIZER =\n      window.XMLSerializer &&\n      !(\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"engine.version\") >= 9 &&\n        qx.core.Environment.get(\"browser.documentmode\") >= 9\n      );\n  }\n});\n"
  ],
  "mappings": "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"
}