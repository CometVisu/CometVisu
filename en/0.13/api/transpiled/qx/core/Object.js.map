{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "Object",
    "include",
    "core",
    "Environment",
    "filter",
    "data",
    "MBinding",
    "MLogging",
    "MEvent",
    "MProperty",
    "MObjectId",
    "MAssert",
    "construct",
    "statics",
    "$$type",
    "members",
    "__Property",
    "Property",
    "toHashCode",
    "$$hash",
    "$$disposed",
    "hasInterface",
    "constructor",
    "IDisposable",
    "ObjectRegistry",
    "register",
    "toUuid",
    "$$uuid",
    "util",
    "Uuid",
    "createUuidV4",
    "setExplicitUuid",
    "uuid",
    "Boolean",
    "Error",
    "toString",
    "classname",
    "base",
    "args",
    "varargs",
    "func",
    "callee",
    "name",
    "arguments",
    "length",
    "call",
    "apply",
    "Array",
    "prototype",
    "slice",
    "self",
    "clone",
    "clazz",
    "props",
    "getProperties",
    "user",
    "$$store",
    "setter",
    "$$method",
    "set",
    "i",
    "l",
    "hasOwnProperty",
    "__userData",
    "setUserData",
    "key",
    "value",
    "getUserData",
    "undefined",
    "resetUserData",
    "isDisposed",
    "isDisposing",
    "$$disposing",
    "dispose",
    "$$instance",
    "$$allowconstruct",
    "event",
    "Registration",
    "removeAllListeners",
    "mixins",
    "superclass",
    "$$destructor",
    "$$includes",
    "$$flatIncludes",
    "_disposeObjects",
    "DisposeUtil",
    "disposeObjects",
    "_disposeSingletonObjects",
    "_disposeArray",
    "field",
    "disposeArray",
    "_disposeMap",
    "disposeMap",
    "environment",
    "destruct",
    "inShutDown",
    "deleteAllListeners",
    "unregister",
    "properties",
    "store",
    "storeUser",
    "storeTheme",
    "theme",
    "storeInherit",
    "inherit",
    "storeUseinit",
    "useinit",
    "storeInit",
    "init",
    "$$properties",
    "dereference"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Object.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The qooxdoo root class. All other classes are direct or indirect subclasses of this one.\r\n *\r\n * This class contains methods for:\r\n *\r\n * * object management (creation and destruction)\r\n * * interfaces for event system\r\n * * generic setter/getter support\r\n * * interfaces for logging console\r\n * * user friendly OO interfaces like {@link #self} or {@link #base}\r\n *\r\n * @require(qx.core.ObjectRegistry)\r\n */\r\nqx.Class.define(\"qx.core.Object\", {\r\n  extend: Object,\r\n  include: qx.core.Environment.filter({\r\n    \"module.databinding\": qx.data.MBinding,\r\n    \"module.logger\": qx.core.MLogging,\r\n    \"module.events\": qx.core.MEvent,\r\n    \"module.property\": qx.core.MProperty,\r\n    \"module.objectid\": qx.core.MObjectId,\r\n    \"qx.debug\": qx.core.MAssert\r\n  }),\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   */\r\n  construct() {},\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** Internal type */\r\n    $$type: \"Object\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __Property: qx.core.Environment.get(\"module.property\")\r\n      ? qx.core.Property\r\n      : null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      BASICS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Return unique hash code of object\r\n     *\r\n     * @return {String} unique hash code of the object\r\n     */\r\n    toHashCode() {\r\n      if (!this.$$hash && !this.$$disposed) {\r\n        if (\r\n          !qx.core.Environment.get(\"qx.automaticMemoryManagement\") ||\r\n          qx.Class.hasInterface(this.constructor, qx.core.IDisposable)\r\n        ) {\r\n          qx.core.ObjectRegistry.register(this);\r\n        } else {\r\n          qx.core.ObjectRegistry.toHashCode(this);\r\n        }\r\n      }\r\n      return this.$$hash;\r\n    },\r\n\r\n    /**\r\n     * Returns a UUID for this object\r\n     *\r\n     * @return {String} a UUID\r\n     */\r\n    toUuid() {\r\n      if (!this.$$uuid) {\r\n        this.$$uuid = qx.util.Uuid.createUuidV4();\r\n      }\r\n\r\n      return this.$$uuid;\r\n    },\r\n\r\n    /**\r\n     * Sets a UUID; normally set automatically, you would only set this manually\r\n     * if you have a very special reason to do so - for example, you are using UUIDs which are\r\n     * synchronized from a special source, eg remote server.\r\n     *\r\n     * This can only be called once, and only if it has not been automatically allocated.  If\r\n     * you really do need to call this, call it as soon after construction as possible to avoid\r\n     * an exception.\r\n     *\r\n     * @param uuid {String} an ID which is unique across the whole application\r\n     */\r\n    setExplicitUuid(uuid) {\r\n      if (Boolean(this.$$uuid)) {\r\n        throw new Error(\"Cannot change the UUID of an object once set\");\r\n      }\r\n      this.$$uuid = uuid;\r\n    },\r\n\r\n    /**\r\n     * Returns a string representation of the qooxdoo object.\r\n     *\r\n     * @return {String} string representation of the object\r\n     */\r\n    toString() {\r\n      return this.classname + \"[\" + this.toHashCode() + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Call the same method of the super class.\r\n     *\r\n     * Either the compiler translate all calls to this.base\r\n     * into mypkg.MyBaseClass.prototype.myMethod.call(this, 123);\r\n     * this method is still needed for use in compile.js or playground\r\n     * which are not precompiled\r\n     *\r\n     * @param args {IArguments} the arguments variable of the calling method\r\n     * @param varargs {var?} variable number of arguments passed to the overwritten function\r\n     * @return {var} the return value of the method of the base class.\r\n     */\r\n    base(args, varargs) {\r\n      var func = args.callee.base;\r\n      if (!func) {\r\n        func = this[args.callee.name].base;\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (!qx.Bootstrap.isFunctionOrAsyncFunction(func)) {\r\n          throw new Error(\r\n            \"Cannot call super class. Method is not derived: \" +\r\n              args.callee.displayName\r\n          );\r\n        }\r\n      }\r\n\r\n      if (arguments.length === 1) {\r\n        return func.call(this);\r\n      } else {\r\n        return func.apply(this, Array.prototype.slice.call(arguments, 1));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the static class (to access static members of this class)\r\n     *\r\n     * @param args {arguments} the arguments variable of the calling method\r\n     * @return {var} the return value of the method of the base class.\r\n     */\r\n    self(args) {\r\n      return args.callee.self;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CLONE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     *\r\n     * Returns a clone of this object. Copies over all user configured\r\n     * property values. Do not configure a parent nor apply the appearance\r\n     * styles directly.\r\n     *\r\n     * @return {qx.core.Object} The clone\r\n     */\r\n    clone() {\r\n      if (!qx.core.Environment.get(\"module.property\")) {\r\n        throw new Error(\"Cloning only possible with properties.\");\r\n      }\r\n\r\n      var clazz = this.constructor;\r\n      var clone = new clazz();\r\n      var props = qx.Class.getProperties(clazz);\r\n      var user = this.__Property.$$store.user;\r\n      var setter = this.__Property.$$method.set;\r\n      var name;\r\n\r\n      // Iterate through properties\r\n      for (var i = 0, l = props.length; i < l; i++) {\r\n        name = props[i];\r\n        if (this.hasOwnProperty(user[name])) {\r\n          clone[setter[name]](this[user[name]]);\r\n        }\r\n      }\r\n\r\n      // Return clone\r\n      return clone;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      USER DATA\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** @type {Map} stored user data */\r\n    __userData: null,\r\n\r\n    /**\r\n     * Store user defined data inside the object.\r\n     *\r\n     * @param key {String} the key\r\n     * @param value {Object} the value of the user data\r\n     */\r\n    setUserData(key, value) {\r\n      if (!this.__userData) {\r\n        this.__userData = {};\r\n      }\r\n\r\n      this.__userData[key] = value;\r\n    },\r\n\r\n    /**\r\n     * Load user defined data from the object\r\n     *\r\n     * @param key {String} the key\r\n     * @return {Object} the user data\r\n     */\r\n    getUserData(key) {\r\n      if (!this.__userData) {\r\n        return null;\r\n      }\r\n      var data = this.__userData[key];\r\n      return data === undefined ? null : data;\r\n    },\r\n\r\n    /**\r\n     * Clears all user defined data from the object.\r\n     */\r\n    resetUserData() {\r\n      this.__userData = null;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      DISPOSER\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns true if the object is disposed.\r\n     *\r\n     * @return {Boolean} Whether the object has been disposed\r\n     */\r\n    isDisposed() {\r\n      return this.$$disposed || false;\r\n    },\r\n\r\n    /**\r\n     * Returns true if the object is being disposed, ie this.dispose() has started but\r\n     * not finished\r\n     *\r\n     * @return {Boolean} Whether the object is being disposed\r\n     */\r\n    isDisposing() {\r\n      return this.$$disposing || false;\r\n    },\r\n\r\n    /**\r\n     * Dispose this object\r\n     *\r\n     */\r\n    dispose() {\r\n      // Check first\r\n      if (this.$$disposed) {\r\n        return;\r\n      }\r\n\r\n      // Mark as disposed (directly, not at end, to omit recursions)\r\n      this.$$disposed = true;\r\n      this.$$disposing = true;\r\n      this.$$instance = null;\r\n      this.$$allowconstruct = null;\r\n\r\n      // Debug output\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 2) {\r\n          qx.Bootstrap.debug(\r\n            this,\r\n            \"Disposing \" + this.classname + \"[\" + this.toHashCode() + \"]\"\r\n          );\r\n        }\r\n      }\r\n\r\n      // Remove all listeners.\r\n      //\r\n      // This must be done early, since it calls\r\n      // qx.core.ObjectRegistry.toHashCode(target) which would add a\r\n      // hash code back in after code here has cleaned it up.\r\n      qx.event.Registration.removeAllListeners(this);\r\n\r\n      // Deconstructor support for classes\r\n      var clazz = this.constructor;\r\n      var mixins;\r\n\r\n      while (clazz.superclass) {\r\n        // Processing this class...\r\n        if (clazz.$$destructor) {\r\n          clazz.$$destructor.call(this);\r\n        }\r\n\r\n        // Destructor support for mixins\r\n        if (clazz.$$includes) {\r\n          mixins = clazz.$$flatIncludes;\r\n\r\n          for (var i = 0, l = mixins.length; i < l; i++) {\r\n            if (mixins[i].$$destructor) {\r\n              mixins[i].$$destructor.call(this);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Jump up to next super class\r\n        clazz = clazz.superclass;\r\n      }\r\n\r\n      this.$$disposing = false;\r\n\r\n      // Additional checks\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 0 && qx.Class.hasOwnInterface(this.constructor, qx.core.IDisposable)) {\r\n          var key, value;\r\n          for (key in this) {\r\n            value = this[key];\r\n\r\n            // Check for Objects but respect values attached to the prototype itself\r\n            if (\r\n              value !== null &&\r\n              typeof value === \"object\" &&\r\n              !qx.Bootstrap.isString(value)\r\n            ) {\r\n              // Check prototype value\r\n              // undefined is the best, but null may be used as a placeholder for\r\n              // private variables (hint: checks in qx.Class.define). We accept both.\r\n              if (this.constructor.prototype[key] != null) {\r\n                continue;\r\n              }\r\n\r\n              if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 1) {\r\n                qx.Bootstrap.warn(\r\n                  this,\r\n                  \"Missing destruct definition for '\" +\r\n                    key +\r\n                    \"' in \" +\r\n                    this.classname +\r\n                    \"[\" +\r\n                    this.toHashCode() +\r\n                    \"]: \" +\r\n                    value\r\n                );\r\n\r\n                delete this[key];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      DISPOSER UTILITIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Disconnects and disposes given objects from instance.\r\n     * Only works with qx.core.Object based objects e.g. Widgets.\r\n     *\r\n     * @param varargs {arguments} Names of fields (which store objects) to dispose\r\n     */\r\n    _disposeObjects(varargs) {\r\n      qx.util.DisposeUtil.disposeObjects(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * Disconnects and disposes given singleton objects from instance.\r\n     * Only works with qx.core.Object based objects e.g. Widgets.\r\n     *\r\n     * @param varargs {arguments} Names of fields (which store objects) to dispose\r\n     */\r\n    _disposeSingletonObjects(varargs) {\r\n      qx.util.DisposeUtil.disposeObjects(this, arguments, true);\r\n    },\r\n\r\n    /**\r\n     * Disposes all members of the given array and deletes\r\n     * the field which refers to the array afterwards.\r\n     *\r\n     * @param field {String} Name of the field which refers to the array\r\n     */\r\n    _disposeArray(field) {\r\n      qx.util.DisposeUtil.disposeArray(this, field);\r\n    },\r\n\r\n    /**\r\n     * Disposes all members of the given map and deletes\r\n     * the field which refers to the map afterwards.\r\n     *\r\n     * @param field {String} Name of the field which refers to the map\r\n     */\r\n    _disposeMap(field) {\r\n      qx.util.DisposeUtil.disposeMap(this, field);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     ENVIRONMENT SETTINGS\r\n  *****************************************************************************\r\n  */\r\n\r\n  environment: {\r\n    \"qx.debug.dispose.level\": 0,\r\n\r\n    // Ideally this would be in the mixin, but mixins do not support environment blocks\r\n    // Also, this would be better as false, not true but that would not be BC\r\n    \"qx.core.Object.allowUndefinedObjectId\": true\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (qx.core.Environment.get(\"module.events\")) {\r\n      if (!qx.core.ObjectRegistry.inShutDown) {\r\n        // Cleanup event listeners\r\n        qx.event.Registration.removeAllListeners(this);\r\n      } else {\r\n        // on shutdown, just clear the internal listener map\r\n        qx.event.Registration.deleteAllListeners(this);\r\n      }\r\n    }\r\n\r\n    // Cleanup object registry\r\n    qx.core.ObjectRegistry.unregister(this);\r\n\r\n    // Cleanup user data\r\n    this.__userData = null;\r\n\r\n    // only of properties are available\r\n    if (qx.core.Environment.get(\"module.property\")) {\r\n      // Cleanup properties\r\n      var clazz = this.constructor;\r\n      var properties;\r\n      var store = this.__Property.$$store;\r\n      var storeUser = store.user;\r\n      var storeTheme = store.theme;\r\n      var storeInherit = store.inherit;\r\n      var storeUseinit = store.useinit;\r\n      var storeInit = store.init;\r\n\r\n      while (clazz) {\r\n        properties = clazz.$$properties;\r\n        if (properties) {\r\n          for (var name in properties) {\r\n            if (properties[name].dereference) {\r\n              this[storeUser[name]] =\r\n                this[storeTheme[name]] =\r\n                this[storeInherit[name]] =\r\n                this[storeUseinit[name]] =\r\n                this[storeInit[name]] =\r\n                  undefined;\r\n            }\r\n          }\r\n        }\r\n\r\n        clazz = clazz.superclass;\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}