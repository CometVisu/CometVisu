{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Error",
    "construct",
    "exc",
    "args",
    "DEBUG",
    "core",
    "Assert",
    "assertNotUndefined",
    "__failMessage",
    "message",
    "inst",
    "call",
    "stack",
    "stacktrace",
    "__arguments",
    "__exc",
    "members",
    "toString",
    "getArguments",
    "getSourceException",
    "GlobalError"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/GlobalError.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Michael Haitz (mhaitz)\n\n************************************************************************ */\n\n/**\n * This exception is thrown by the {@link qx.event.GlobalError} handler if a\n * observed method throws an exception.\n */\nqx.Bootstrap.define(\"qx.core.GlobalError\", {\n  extend: Error,\n\n  /**\n   * @param exc {Error} source exception\n   * @param args {Array} arguments\n   */\n  construct(exc, args) {\n    // Do not use the Environment class to keep the minimal\n    // package size small [BUG #5068]\n    if (qx.Bootstrap.DEBUG) {\n      qx.core.Assert.assertNotUndefined(exc);\n    }\n\n    this.__failMessage =\n      \"GlobalError: \" + (exc && exc.message ? exc.message : exc);\n\n    var inst = Error.call(this, this.__failMessage);\n    // map stack trace properties since they're not added by Error's constructor\n    if (exc && exc.stack) {\n      this.stack = exc.stack;\n    }\n    if (!this.stack && inst.stack) {\n      this.stack = inst.stack;\n    }\n    if (inst.stacktrace) {\n      this.stacktrace = inst.stacktrace;\n    }\n\n    this.__arguments = args;\n    this.__exc = exc;\n  },\n\n  members: {\n    __exc: null,\n    __arguments: null,\n    __failMessage: null,\n\n    /**\n     * Returns the error message.\n     *\n     * @return {String} error message\n     */\n    toString() {\n      return this.__failMessage;\n    },\n\n    /**\n     * Returns the arguments which are\n     *\n     * @return {Object} arguments\n     */\n    getArguments() {\n      return this.__arguments;\n    },\n\n    /**\n     * Get the source exception\n     *\n     * @return {Error} source exception\n     */\n    getSourceException() {\n      return this.__exc;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,qBAAqB,EAAE;IACzCC,MAAM,EAAEC,KAAK;IAEb;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,GAAG,EAAEC,IAAI,EAAE;MACnB;MACA;MACA,IAAIT,EAAE,CAACC,SAAS,CAACS,KAAK,EAAE;QACtBV,EAAE,CAACW,IAAI,CAACC,MAAM,CAACC,kBAAkB,CAACL,GAAG,CAAC;MACxC;MAEA,IAAI,CAACM,SAAa,GAChB,eAAe,IAAIN,GAAG,IAAIA,GAAG,CAACO,OAAO,GAAGP,GAAG,CAACO,OAAO,GAAGP,GAAG,CAAC;MAE5D,IAAIQ,IAAI,GAAGV,KAAK,CAACW,IAAI,CAAC,IAAI,EAAE,IAAI,CAACH,SAAa,CAAC;MAC/C;MACA,IAAIN,GAAG,IAAIA,GAAG,CAACU,KAAK,EAAE;QACpB,IAAI,CAACA,KAAK,GAAGV,GAAG,CAACU,KAAK;MACxB;MACA,IAAI,CAAC,IAAI,CAACA,KAAK,IAAIF,IAAI,CAACE,KAAK,EAAE;QAC7B,IAAI,CAACA,KAAK,GAAGF,IAAI,CAACE,KAAK;MACzB;MACA,IAAIF,IAAI,CAACG,UAAU,EAAE;QACnB,IAAI,CAACA,UAAU,GAAGH,IAAI,CAACG,UAAU;MACnC;MAEA,IAAI,CAACC,SAAW,GAAGX,IAAI;MACvB,IAAI,CAACY,SAAK,GAAGb,GAAG;IAClB,CAAC;IAEDc,OAAO,EAAE;MACPD,SAAK,EAAE,IAAI;MACXD,SAAW,EAAE,IAAI;MACjBN,SAAa,EAAE,IAAI;MAEnB;AACJ;AACA;AACA;AACA;MACIS,QAAQ,WAAAA,SAAA,EAAG;QACT,OAAO,IAAI,CAACT,SAAa;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIU,YAAY,WAAAA,aAAA,EAAG;QACb,OAAO,IAAI,CAACJ,SAAW;MACzB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIK,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,OAAO,IAAI,CAACJ,SAAK;MACnB;IACF;EACF,CAAC,CAAC;EAvFFrB,EAAE,CAACW,IAAI,CAACe,WAAW,CAACvB,aAAa,GAAGA,aAAa;AAAC"
}