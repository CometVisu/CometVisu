{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "set",
    "data",
    "value",
    "setter",
    "core",
    "Property",
    "$$method",
    "isString",
    "firstUp",
    "undefined",
    "Error",
    "classname",
    "prop",
    "get",
    "getter",
    "reset",
    "resetter",
    "isPropertyInitialized",
    "MProperty"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MProperty.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This mixin offers the basic property features which include generic\r\n * setter, getter and resetter.\r\n */\r\nqx.Mixin.define(\"qx.core.MProperty\", {\r\n  members: {\r\n    /**\r\n     * Sets either multiple properties at once by using a property list or\r\n     * sets one property and its value by the first and second argument.\r\n     * As a fallback, if no generated property setter could be found, a\r\n     * handwritten setter will be searched and invoked if available.\r\n     *\r\n     * @param data {Object | String} a map of property values. The key is the name of the property.\r\n     * @param value {var?} the value, only used when <code>data</code> is a string.\r\n     * @return {Object} Returns this instance if <code>data</code> is a map\r\n     *   or a non-generated setter is called; otherwise returns <code>value</code>.\r\n     * @throws {Error} if a property defined does not exist\r\n     */\r\n    set(data, value) {\r\n      var setter = qx.core.Property.$$method.set;\r\n\r\n      if (qx.Bootstrap.isString(data)) {\r\n        if (!this[setter[data]]) {\r\n          if (this[\"set\" + qx.Bootstrap.firstUp(data)] != undefined) {\r\n            this[\"set\" + qx.Bootstrap.firstUp(data)](value);\r\n            return this;\r\n          }\r\n\r\n          throw new Error(\r\n            \"No such property: \" +\r\n              data +\r\n              \" in \" +\r\n              this.classname +\r\n              \" (\" +\r\n              this +\r\n              \")\"\r\n          );\r\n        }\r\n\r\n        return this[setter[data]](value);\r\n      } else {\r\n        for (var prop in data) {\r\n          if (!this[setter[prop]]) {\r\n            if (this[\"set\" + qx.Bootstrap.firstUp(prop)] != undefined) {\r\n              this[\"set\" + qx.Bootstrap.firstUp(prop)](data[prop]);\r\n              continue;\r\n            }\r\n\r\n            throw new Error(\r\n              \"No such property: \" +\r\n                prop +\r\n                \" in \" +\r\n                this.classname +\r\n                \" (\" +\r\n                this +\r\n                \")\"\r\n            );\r\n          }\r\n\r\n          this[setter[prop]](data[prop]);\r\n        }\r\n\r\n        return this;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the value of the given property. If no generated getter could be\r\n     * found, a fallback tries to access a handwritten getter.\r\n     *\r\n     * @param prop {String} Name of the property.\r\n     * @return {var} The value of the value\r\n     * @throws {Error} if a property defined does not exist\r\n     */\r\n    get(prop) {\r\n      var getter = qx.core.Property.$$method.get;\r\n\r\n      if (!this[getter[prop]]) {\r\n        if (this[\"get\" + qx.Bootstrap.firstUp(prop)] != undefined) {\r\n          return this[\"get\" + qx.Bootstrap.firstUp(prop)]();\r\n        }\r\n\r\n        throw new Error(\r\n          \"No such property: \" +\r\n            prop +\r\n            \" in \" +\r\n            this.classname +\r\n            \" (\" +\r\n            this +\r\n            \")\"\r\n        );\r\n      }\r\n\r\n      return this[getter[prop]]();\r\n    },\r\n\r\n    /**\r\n     * Resets the value of the given property. If no generated resetter could be\r\n     * found, a handwritten resetter will be invoked, if available.\r\n     *\r\n     * @param prop {String} Name of the property.\r\n     * @throws {Error} if a property defined does not exist\r\n     */\r\n    reset(prop) {\r\n      var resetter = qx.core.Property.$$method.reset;\r\n\r\n      if (!this[resetter[prop]]) {\r\n        if (this[\"reset\" + qx.Bootstrap.firstUp(prop)] != undefined) {\r\n          this[\"reset\" + qx.Bootstrap.firstUp(prop)]();\r\n          return;\r\n        }\r\n\r\n        throw new Error(\r\n          \"No such property: \" +\r\n            prop +\r\n            \" in \" +\r\n            this.classname +\r\n            \" (\" +\r\n            this +\r\n            \")\"\r\n        );\r\n      }\r\n\r\n      this[resetter[prop]]();\r\n    },\r\n\r\n    /**\r\n     * Checks if the property is initialized, i.e. has a defined init value or\r\n     * has got a value by a setter method.\r\n     *\r\n     * @param prop {String} Name of the property\r\n     * @return {Boolean} If the property is initialized\r\n     * @throws {Error} If the property defined does not exist\r\n     */\r\n    isPropertyInitialized(prop) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertString(prop);\r\n\r\n        if (!this[\"get\" + qx.Bootstrap.firstUp(prop)]) {\r\n          throw new Error(\r\n            \"No such property: \" +\r\n              prop +\r\n              \" in \" +\r\n              this.classname +\r\n              \" (\" +\r\n              this +\r\n              \")\"\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        this[\"$$user_\" + prop] !== undefined ||\r\n        this[\"$$init_\" + prop] !== undefined\r\n      );\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}