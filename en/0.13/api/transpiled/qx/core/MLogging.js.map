{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "__Logger",
    "log",
    "Logger",
    "debug",
    "varargs",
    "__logMessage",
    "arguments",
    "info",
    "warn",
    "error",
    "trace",
    "__P_172_1",
    "level",
    "argumentsArray",
    "lang",
    "Array",
    "fromArguments",
    "unshift",
    "apply",
    "core",
    "MLogging"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MLogging.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This mixin offers the basic logging features offered by {@link qx.log.Logger}.\r\n */\r\nqx.Mixin.define(\"qx.core.MLogging\", {\r\n  members: {\r\n    /** @type {Class} Pointer to the regular logger class */\r\n    __Logger: qx.log.Logger,\r\n\r\n    /**\r\n     * Logs a debug message.\r\n     *\r\n     * @param varargs {var} The item(s) to log. Any number of arguments is\r\n     * supported. If an argument is not a string, the object dump will be\r\n     * logged.\r\n     */\r\n    debug(varargs) {\r\n      this.__logMessage(\"debug\", arguments);\r\n    },\r\n\r\n    /**\r\n     * Logs an info message.\r\n     *\r\n     * @param varargs {var} The item(s) to log. Any number of arguments is\r\n     * supported. If an argument is not a string, the object dump will be\r\n     * logged.\r\n     */\r\n    info(varargs) {\r\n      this.__logMessage(\"info\", arguments);\r\n    },\r\n\r\n    /**\r\n     * Logs a warning message.\r\n     *\r\n     * @param varargs {var} The item(s) to log. Any number of arguments is\r\n     * supported. If an argument is not a string, the object dump will be\r\n     * logged.\r\n     */\r\n    warn(varargs) {\r\n      this.__logMessage(\"warn\", arguments);\r\n    },\r\n\r\n    /**\r\n     * Logs an error message.\r\n     *\r\n     * @param varargs {var} The item(s) to log. Any number of arguments is\r\n     * supported. If an argument is not a string, the object dump will be\r\n     * logged.\r\n     */\r\n    error(varargs) {\r\n      this.__logMessage(\"error\", arguments);\r\n    },\r\n\r\n    /**\r\n     * Logs an error message with the current stack trace\r\n     *\r\n     * @param varargs {var} The item(s) to log. Any number of arguments is\r\n     * supported. If an argument is not a string, the object dump will be\r\n     * logged.\r\n     */\r\n    trace(varargs) {\r\n      this.__logMessage(\"trace\", arguments);\r\n    },\r\n\r\n    /**\r\n     * Helper that calls the appropriate logger function with the current object\r\n     * and any number of items.\r\n     *\r\n     * @param level {String} The log level of the message\r\n     * @param varargs {arguments} Arguments list to be logged\r\n     */\r\n    __logMessage(level, varargs) {\r\n      var argumentsArray = qx.lang.Array.fromArguments(varargs);\r\n      argumentsArray.unshift(this);\r\n      this.__Logger[level].apply(this.__Logger, argumentsArray);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kBAAkB,EAAE;IAClCC,OAAO,EAAE;MACP;MACAC,SAAQ,EAAEP,EAAE,CAACQ,GAAG,CAACC,MAAM;MAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,KAAK,WAAAA,MAACC,OAAO,EAAE;QACb,IAAI,CAACC,SAAY,CAAC,OAAO,EAAEC,SAAS,CAAC;MACvC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,WAAAA,KAACH,OAAO,EAAE;QACZ,IAAI,CAACC,SAAY,CAAC,MAAM,EAAEC,SAAS,CAAC;MACtC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,IAAI,WAAAA,KAACJ,OAAO,EAAE;QACZ,IAAI,CAACC,SAAY,CAAC,MAAM,EAAEC,SAAS,CAAC;MACtC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIG,KAAK,WAAAA,MAACL,OAAO,EAAE;QACb,IAAI,CAACC,SAAY,CAAC,OAAO,EAAEC,SAAS,CAAC;MACvC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,KAAK,WAAAA,MAACN,OAAO,EAAE;QACb,IAAI,CAACC,SAAY,CAAC,OAAO,EAAEC,SAAS,CAAC;MACvC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACID,SAAY,WAAAM,UAACC,KAAK,EAAER,OAAO,EAAE;QAC3B,IAAIS,cAAc,GAAGpB,EAAE,CAACqB,IAAI,CAACC,KAAK,CAACC,aAAa,CAACZ,OAAO,CAAC;QACzDS,cAAc,CAACI,OAAO,CAAC,IAAI,CAAC;QAC5B,IAAI,CAACjB,SAAQ,CAACY,KAAK,CAAC,CAACM,KAAK,CAAC,IAAI,CAAClB,SAAQ,EAAEa,cAAc,CAAC;MAC3D;IACF;EACF,CAAC,CAAC;EA9FFpB,EAAE,CAAC0B,IAAI,CAACC,QAAQ,CAACxB,aAAa,GAAGA,aAAa;AAAC"
}