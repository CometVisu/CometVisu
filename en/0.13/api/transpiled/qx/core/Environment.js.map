{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "_checks",
    "_asyncChecks",
    "__cache",
    "_checksMap",
    "_defaults",
    "get",
    "key",
    "undefined",
    "check",
    "value",
    "classAndMethod",
    "_getClassNameFromEnvKey",
    "clazz",
    "method",
    "DEBUG",
    "warn",
    "trace",
    "envmappings",
    "implementation",
    "lastdot",
    "lastIndexOf",
    "classname",
    "slice",
    "methodname",
    "getByName",
    "getAsync",
    "callback",
    "self",
    "env",
    "window",
    "setTimeout",
    "call",
    "result",
    "select",
    "values",
    "__pickFromValues",
    "selectAsync",
    "__P_167_1",
    "hasOwnProperty",
    "id",
    "indexOf",
    "ids",
    "split",
    "i",
    "length",
    "Error",
    "_typeof",
    "keys",
    "filter",
    "map",
    "returnArray",
    "push",
    "invalidateCacheKey",
    "add",
    "Function",
    "displayName",
    "substr",
    "__createCheck",
    "addAsync",
    "getChecks",
    "getAsyncChecks",
    "_initDefaultQxValues",
    "createFuncReturning",
    "val",
    "prop",
    "__importFromGenerator",
    "__P_167_3",
    "$$environment",
    "__importFromUrl",
    "__P_167_4",
    "document",
    "location",
    "urlChecks",
    "search",
    "decodeURIComponent",
    "test",
    "parseFloat",
    "__P_167_2",
    "bind",
    "defer",
    "core",
    "Environment"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Environment.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2005-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class is the single point to access all settings that may be different\r\n * in different environments. This contains e.g. the browser name, engine\r\n * version but also qooxdoo or application specific settings.\r\n *\r\n * Its public API can be found in its four main methods. One pair of methods\r\n * is used to check the synchronous values of the environment. The other pair\r\n * of methods is used for asynchronous checks.\r\n *\r\n * The most often used method should be {@link #get}, which returns the\r\n * current value for a given environment check.\r\n *\r\n * All qooxdoo settings can be changed at compile time. See the manual\r\n * for more details about the environment key in the config. As you can see\r\n * from the methods API, there is no way to override an existing key. So if you\r\n * need to change a qooxdoo setting, you have to use the compiler to do so.\r\n *\r\n * The compiler is also responsible for requiring the necessary implementation\r\n * classes for each check. When using a check of a new category, make sure to\r\n * rebuild you application and let the compiler include the necessary files.\r\n *\r\n * When you define a new environment check, the compiler needs to know which class\r\n * implements the check; to do this, you can either prefix the name of your check\r\n * with your class name (eg `my.package.MyClass.someEnvCheck`) or you can create\r\n * short names like the ones below and then add an entry to your library's\r\n * Manifest.json (under `provides.environmentChecks`).\r\n *\r\n * The following table shows the available checks. If you are\r\n * interested in more details, check the reference to the implementation of\r\n * each check. Please do not use those check implementations directly, as the\r\n * Environment class comes with a smart caching feature.\r\n *\r\n * <table border=\"0\" cellspacing=\"10\">\r\n *   <tbody>\r\n *     <tr>\r\n *       <td colspan=\"4\"><h2>Synchronous checks</h2>\r\n *       </td>\r\n *     </tr>\r\n *     <tr>\r\n *       <th><h3>Key</h3></th>\r\n *       <th><h3>Type</h3></th>\r\n *       <th><h3>Example</h3></th>\r\n *       <th><h3>Details</h3></th>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>browser</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>browser.documentmode</td><td><i>Integer</i></td><td><code>0</code></td>\r\n *       <td>{@link qx.bom.client.Browser#getDocumentMode}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>browser.name</td><td><i>String</i></td><td><code> chrome </code></td>\r\n *       <td>{@link qx.bom.client.Browser#getName}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>browser.quirksmode</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Browser#getQuirksMode}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>browser.version</td><td><i>String</i></td><td><code>11.0</code></td>\r\n *       <td>{@link qx.bom.client.Browser#getVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>runtime</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>runtime.name</td><td><i> String </i></td><td><code> node.js </code></td>\r\n *       <td>{@link qx.bom.client.Runtime#getName}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>css</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.borderradius</td><td><i>String</i> or <i>null</i></td><td><code>borderRadius</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBorderRadius}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.borderimage</td><td><i>String</i> or <i>null</i></td><td><code>WebkitBorderImage</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBorderImage}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.borderimage.standardsyntax</td><td><i>Boolean</i> or <i>null</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBorderImageSyntax}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.boxmodel</td><td><i>String</i></td><td><code>content</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBoxModel}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.boxshadow</td><td><i>String</i> or <i>null</i></td><td><code>boxShadow</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBoxShadow}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.gradient.linear</td><td><i>String</i> or <i>null</i></td><td><code>-moz-linear-gradient</code></td>\r\n *       <td>{@link qx.bom.client.Css#getLinearGradient}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.gradient.radial</td><td><i>String</i> or <i>null</i></td><td><code>-moz-radial-gradient</code></td>\r\n *       <td>{@link qx.bom.client.Css#getRadialGradient}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.gradient.legacywebkit</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Css#getLegacyWebkitGradient}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.placeholder</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getPlaceholder}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.textoverflow</td><td><i>String</i> or <i>null</i></td><td><code>textOverflow</code></td>\r\n *       <td>{@link qx.bom.client.Css#getTextOverflow}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.rgba</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getRgba}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.usermodify</td><td><i>String</i> or <i>null</i></td><td><code>WebkitUserModify</code></td>\r\n *       <td>{@link qx.bom.client.Css#getUserModify}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.appearance</td><td><i>String</i> or <i>null</i></td><td><code>WebkitAppearance</code></td>\r\n *       <td>{@link qx.bom.client.Css#getAppearance}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.float</td><td><i>String</i> or <i>null</i></td><td><code>cssFloat</code></td>\r\n *       <td>{@link qx.bom.client.Css#getFloat}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.userselect</td><td><i>String</i> or <i>null</i></td><td><code>WebkitUserSelect</code></td>\r\n *       <td>{@link qx.bom.client.Css#getUserSelect}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.userselect.none</td><td><i>String</i> or <i>null</i></td><td><code>-moz-none</code></td>\r\n *       <td>{@link qx.bom.client.Css#getUserSelectNone}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.boxsizing</td><td><i>String</i> or <i>null</i></td><td><code>boxSizing</code></td>\r\n *       <td>{@link qx.bom.client.Css#getBoxSizing}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.animation</td><td><i>Object</i> or <i>null</i></td><td><code>{end-event: \"webkitAnimationEnd\", keyframes: \"@-webkit-keyframes\", play-state: null, name: \"WebkitAnimation\"}</code></td>\r\n *       <td>{@link qx.bom.client.CssAnimation#getSupport}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.animation.requestframe</td><td><i>String</i> or <i>null</i></td><td><code>mozRequestAnimationFrame</code></td>\r\n *       <td>{@link qx.bom.client.CssAnimation#getRequestAnimationFrame}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.transform</td><td><i>Object</i> or <i>null</i></td><td><code>{3d: true, origin: \"WebkitTransformOrigin\", name: \"WebkitTransform\", style: \"WebkitTransformStyle\", perspective: \"WebkitPerspective\", perspective-origin: \"WebkitPerspectiveOrigin\", backface-visibility: \"WebkitBackfaceVisibility\"}</code></td>\r\n *       <td>{@link qx.bom.client.CssTransform#getSupport}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.transform.3d</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.CssTransform#get3D}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.transition</td><td><i>Object</i> or <i>null</i></td><td><code>{end-event: \"webkitTransitionEnd\", name: \"WebkitTransition\"}</code></td>\r\n *       <td>{@link qx.bom.client.CssTransition#getSupport}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.inlineblock</td><td><i>String</i> or <i>null</i></td><td><code>inline-block</code></td>\r\n *       <td>{@link qx.bom.client.Css#getInlineBlock}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.opacity</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getOpacity}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.textShadow</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getTextShadow}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.alphaimageloaderneeded</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Css#getAlphaImageLoaderNeeded}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.pointerevents</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Css#getPointerEvents}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>css.flexboxSyntax</td><td><i>String</i> or <i>null</i></td><td><code>\"flex\"</code></td>\r\n *       <td>{@link qx.bom.client.Css#getFlexboxSyntax}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>device</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>device.name</td><td><i>String</i></td><td><code>pc</code></td>\r\n *       <td>{@link qx.bom.client.Device#getName}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>device.type</td><td><i>String</i></td><td><code>mobile</code></td>\r\n *       <td>{@link qx.bom.client.Device#getType}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>device.pixelRatio</td><td><i>Number</i></td><td><code>2</code></td>\r\n *       <td>{@link qx.bom.client.Device#getDevicePixelRatio}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>device.touch</td><td><i>String</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Device#getTouch}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>ecmascript</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.error.stacktrace</td><td><i>String</i> or <i>null</i></td><td><code>stack</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getStackTrace}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.mutationobserver</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getMutationObserver}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.bigint</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getBigInt}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.bigint.tolocalestring</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getBigIntToLocaleString}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.indexof<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayIndexOf}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.lastindexof<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayLastIndexOf}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.foreach<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayForEach}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.filter<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayFilter}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.map<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayMap}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.some<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArraySome}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.find<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayFind}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.findIndex<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayFindIndex}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.every<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayEvery}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.reduce<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayReduce}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.array.reduceright<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getArrayReduceRight}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.function.bind<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getFunctionBind}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.object.keys<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getObjectKeys}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.date.now<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getDateNow}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.date.parse<td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getDateParse}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.error.toString</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getErrorToString}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.string.trim</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getStringTrim}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.string.startsWith</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getStringStartsWith}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>ecmascript.string.endsWith</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.EcmaScript#getStringEndsWith}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>engine</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>engine.name</td><td><i>String</i></td><td><code>webkit</code></td>\r\n *       <td>{@link qx.bom.client.Engine#getName}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>engine.version</td><td><i>String</i></td><td><code>534.24</code></td>\r\n *       <td>{@link qx.bom.client.Engine#getVersion}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>event</b></td>\r\n *     </tr>\r\n *      <tr>\r\n *       <td>event.mspointer</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getMsPointer}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.touch</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Event#getTouch}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.help</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Event#getHelp}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.hashchange</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getHashChange}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.dispatchevent</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getDispatchEvent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.customevent</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getCustomEvent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.mouseevent</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getMouseEvent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.mousecreateevent</td><td><i>String</i></td><td><code>UIEvents</code></td>\r\n *       <td>{@link qx.bom.client.Event#getMouseCreateEvent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.mousewheel</td><td><i>Map</i></td><td><code>{type: \"wheel\", target: window}</code></td>\r\n *       <td>{@link qx.bom.client.Event#getMouseWheel}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.auxclick</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getAuxclickEvent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>event.passive</td><td><i>Map</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Event#getPassive}</td>\r\n *     </tr>\r\n *\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>html</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudio}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio.mp3</td><td><i>String</i></td><td><code>\"\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudioMp3}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio.ogg</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudioOgg}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio.wav</td><td><i>String</i></td><td><code>\"probably\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudioWav}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio.au</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudioAu}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.audio.aif</td><td><i>String</i></td><td><code>\"probably\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getAudioAif}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.canvas</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getCanvas}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.classlist</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getClassList}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.fullscreen</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getFullScreen}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.geolocation</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getGeoLocation}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.storage.local</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getLocalStorage}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.storage.session</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getSessionStorage}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.storage.userdata</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getUserDataStorage}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.svg</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getSvg}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.video</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getVideo}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.video.h264</td><td><i>String</i></td><td><code>\"probably\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getVideoH264}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.video.ogg</td><td><i>String</i></td><td><code>\"\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getVideoOgg}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.video.webm</td><td><i>String</i></td><td><code>\"maybe\"</code></td>\r\n *       <td>{@link qx.bom.client.Html#getVideoWebm}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.vml</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Html#getVml}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.webworker</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getWebWorker}</td>\r\n *     <tr>\r\n *       <td>html.filereader</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getFileReader}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.xpath</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getXPath}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.xul</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getXul}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.console</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getConsole}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.element.contains</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getContains}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.element.compareDocumentPosition</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getCompareDocumentPosition}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.element.textContent</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getTextContent}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.image.naturaldimensions</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getNaturalDimensions}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.history.state</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getHistoryState}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.selection</td><td><i>String</i></td><td><code>getSelection</code></td>\r\n *       <td>{@link qx.bom.client.Html#getSelection}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.node.isequalnode</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getIsEqualNode}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>XML</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.implementation</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getImplementation}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.domparser</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getDomParser}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.selectsinglenode</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getSelectSingleNode}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.selectnodes</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getSelectNodes}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.getelementsbytagnamens</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getElementsByTagNameNS}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.domproperties</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getDomProperties}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.attributens</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getAttributeNS}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.createelementns</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getCreateElementNS}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.createnode</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getCreateNode}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>xml.getqualifieditem</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Xml#getQualifiedItem}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>Stylesheets</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.stylesheet.createstylesheet</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Stylesheet#getCreateStyleSheet}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.stylesheet.insertrule</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Stylesheet#getInsertRule}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.stylesheet.deleterule</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Stylesheet#getDeleteRule}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.stylesheet.addimport</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Stylesheet#getAddImport}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.stylesheet.removeimport</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Stylesheet#getRemoveImport}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>io</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>io.maxrequests</td><td><i>Integer</i></td><td><code>4</code></td>\r\n *       <td>{@link qx.bom.client.Transport#getMaxConcurrentRequestCount}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>io.ssl</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Transport#getSsl}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>io.xhr</td><td><i>String</i></td><td><code>xhr</code></td>\r\n *       <td>{@link qx.bom.client.Transport#getXmlHttpRequest}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>locale</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>locale</td><td><i>String</i></td><td><code>de</code></td>\r\n *       <td>{@link qx.bom.client.Locale#getLocale}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>locale.variant</td><td><i>String</i></td><td><code>de</code></td>\r\n *       <td>{@link qx.bom.client.Locale#getVariant}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>locale.default</td><td><i>String</i></td><td><code>C</code></td>\r\n *       <td>default locale C as in good tradition of unix {@link qx.bom.client.Locale}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>os</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>os.name</td><td><i>String</i></td><td><code>osx</code></td>\r\n *       <td>{@link qx.bom.client.OperatingSystem#getName}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>os.version</td><td><i>String</i></td><td><code>10.6</code></td>\r\n *       <td>{@link qx.bom.client.OperatingSystem#getVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>os.scrollBarOverlayed</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Scroll#scrollBarOverlayed}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>phonegap</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>phonegap</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.PhoneGap#getPhoneGap}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>phonegap.notification</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.PhoneGap#getNotification}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>plugin</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.divx</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getDivX}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.divx.version</td><td><i>String</i></td><td></td>\r\n *       <td>{@link qx.bom.client.Plugin#getDivXVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.flash</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Flash#isAvailable}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.flash.express</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Flash#getExpressInstall}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.flash.strictsecurity</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Flash#getStrictSecurityModel}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.flash.version</td><td><i>String</i></td><td><code>10.2.154</code></td>\r\n *       <td>{@link qx.bom.client.Flash#getVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.gears</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getGears}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.activex</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getActiveX}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.skype</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getSkype}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.pdf</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getPdf}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.pdf.version</td><td><i>String</i></td><td></td>\r\n *       <td>{@link qx.bom.client.Plugin#getPdfVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.quicktime</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getQuicktime}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.quicktime.version</td><td><i>String</i></td><td><code>7.6</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getQuicktimeVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.silverlight</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getSilverlight}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.silverlight.version</td><td><i>String</i></td><td></td>\r\n *       <td>{@link qx.bom.client.Plugin#getSilverlightVersion}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.windowsmedia</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Plugin#getWindowsMedia}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.windowsmedia.version</td><td><i>String</i></td><td></td>\r\n *       <td>{@link qx.bom.client.Plugin#getWindowsMediaVersion}</td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>qx</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.allowUrlSettings</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.allowUrlVariants</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.application</td><td><i>String</i></td><td><code>name.space</code></td>\r\n *       <td><i>default:</i> <code>&lt;&lt;application name&gt;&gt;</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.aspects</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug.databinding</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug.dispose</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug.dispose.level</td><td><i>Integer</i></td><td><code>0</code></td>\r\n *       <td><i>default:</i> <code>0</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug.io</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>false</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *     <tr>\r\n *       <td>qx.debug.property.level</td><td><i>Integer</i></td><td><code>0</code></td>\r\n *       <td><i>default:</i> <code>0</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.debug.ui.queue</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.dynlocale</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.dyntheme</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.globalErrorHandling</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code> {@link qx.event.GlobalError}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.headless</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td><i>default:</i> <code>false</code> Whether the environment is headless (ie rhino/nodejs); note that\r\n *        headless will still have some kind of DOM emulation - normally that would be quite basic, unless\r\n *        <a href=\"https://www.npmjs.com/package/jsdom\">https://www.npmjs.com/package/jsdom</a> has been installed.\r\n *        The <code>qx.headless</code> allows code to detect whether there is an user interface, most typically\r\n *        whether to cater for input events.  This is set automatically by the compiler but would have to be\r\n *        manually configured if you use the generator.</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.mobile.nativescroll</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Scroll#getNativeScroll}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.promise.warnings</td><td><i>Boolean</i></td><td>same as <code>qx.debug</code></td>\r\n *       <td>true to enable runtime warnings in promises {@link qx.Promise}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.promise.longStackTraces</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>true to enable long stack traces in promises; this has a performance penalty but makes debugging asynchronous functions easier {@link qx.Promise}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.basecalls</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.comments</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.privates</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.strings</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.variables</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.optimization.variants</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>true if the corresponding <i>optimize</i> key is set in the config</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.revision</td><td><i>String</i></td><td><code>27348</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.theme</td><td><i>String</i></td><td><code>qx.theme.Modern</code></td>\r\n *       <td><i>default:</i> <code>&lt;&lt;initial theme name&gt;&gt;</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.version</td><td><i>String</i></td><td><code>${qxversion}</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>qx.blankpage</td><td><i>String</i></td><td><code>URI to blank.html page</code></td>\r\n *     </tr>\r\n\r\n *     <tr>\r\n *       <td colspan=\"4\"><b>module</b></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>module.databinding</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>module.logger</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>module.property</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>module.events</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>module.objectid</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td><i>default:</i> <code>true</code></td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td colspan=\"4\"><h3>Asynchronous checks</h3>\r\n *       </td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>html.dataurl</td><td><i>Boolean</i></td><td><code>true</code></td>\r\n *       <td>{@link qx.bom.client.Html#getDataUrl}</td>\r\n *     </tr>\r\n *     <tr>\r\n *       <td>plugin.pdfjs</td><td><i>Boolean</i></td><td><code>false</code></td>\r\n *       <td>{@link qx.bom.client.Pdfjs#getPdfjs}</td>\r\n *     </tr>\r\n *   </tbody>\r\n * </table>\r\n *\r\n */\r\nqx.Bootstrap.define(\"qx.core.Environment\", {\r\n  statics: {\r\n    /** Map containing the synchronous check functions. */\r\n    _checks: {},\r\n    /** Map containing the asynchronous check functions. */\r\n    _asyncChecks: {},\r\n\r\n    /** Internal cache for all checks. */\r\n    __cache: {},\r\n\r\n    /**\r\n     * Internal map for environment keys to check methods.\r\n     * Gets populated dynamically at runtime.\r\n     */\r\n    _checksMap: {},\r\n\r\n    _defaults: {\r\n      // an always-true key (e.g. for use in qx.core.Environment.filter() calls)\r\n      true: true,\r\n      // old settings retTrue\r\n      \"qx.allowUrlSettings\": false,\r\n      \"qx.allowUrlVariants\": false,\r\n      \"qx.debug.property.level\": 0,\r\n      // old variants\r\n      // make sure to reflect all changes to qx.debug here in the bootstrap class!\r\n      \"qx.debug\": true,\r\n      \"qx.debug.ui.queue\": true,\r\n      \"qx.debug.touchpad.detection\": false,\r\n      \"qx.aspects\": false,\r\n      \"qx.dynlocale\": true,\r\n      \"qx.dyntheme\": true,\r\n      \"qx.blankpage\": \"qx/static/blank.html\",\r\n      \"qx.debug.databinding\": false,\r\n      \"qx.debug.dispose\": false,\r\n      \"qx.debug.startupTimings\": false,\r\n      // generator optimization vectors\r\n      \"qx.optimization.basecalls\": false,\r\n      \"qx.optimization.comments\": false,\r\n      \"qx.optimization.privates\": false,\r\n      \"qx.optimization.strings\": false,\r\n      \"qx.optimization.variables\": false,\r\n      \"qx.optimization.variants\": false,\r\n      // qooxdoo modules\r\n      \"module.databinding\": true,\r\n      \"module.logger\": true,\r\n      \"module.property\": true,\r\n      \"module.events\": true,\r\n      \"module.objectid\": true,\r\n      \"qx.nativeScrollBars\": false,\r\n      \"qx.automaticMemoryManagement\": true,\r\n      \"qx.promise\": true,\r\n      \"qx.promise.warnings\": true,\r\n      \"qx.promise.longStackTraces\": true,\r\n      \"qx.command.bindEnabled\": false,\r\n      \"qx.headless\": false\r\n    },\r\n\r\n    /**\r\n     * The default accessor for the checks. It returns the value the current\r\n     * environment has for the given key. The key could be something like\r\n     * \"qx.debug\", \"css.textoverflow\" or \"io.ssl\". A complete list of\r\n     * checks can be found in the class comment of this class.\r\n     *\r\n     * Please keep in mind that the result is cached. If you want to run the\r\n     * check function again in case something could have been changed, take a\r\n     * look at the {@link #invalidateCacheKey} function.\r\n     *\r\n     * @param key {String} The name of the check you want to query.\r\n     * @return {var} The stored value depending on the given key.\r\n     *   (Details in the class doc)\r\n     */\r\n    get(key) {\r\n      // check the cache\r\n      if (this.__cache[key] != undefined) {\r\n        return this.__cache[key];\r\n      }\r\n\r\n      // search for a matching check\r\n      var check = this._checks[key];\r\n      if (check) {\r\n        // execute the check and write the result in the cache\r\n        var value = check();\r\n        this.__cache[key] = value;\r\n        return value;\r\n      }\r\n\r\n      // try class lookup\r\n      var classAndMethod = this._getClassNameFromEnvKey(key);\r\n      if (classAndMethod[0] != undefined) {\r\n        var clazz = classAndMethod[0];\r\n        var method = classAndMethod[1];\r\n        var value = clazz[method](); // call the check method\r\n        this.__cache[key] = value;\r\n        return value;\r\n      }\r\n\r\n      // debug flag\r\n      if (qx.Bootstrap.DEBUG) {\r\n        qx.Bootstrap.warn(\"The environment key '\" + key + \"' is undefined.\");\r\n        qx.Bootstrap.trace(this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Maps an environment key to a check class and method name.\r\n     *\r\n     * @param key {String} The name of the check you want to query.\r\n     * @return {Array} [className, methodName] of\r\n     *  the corresponding implementation.\r\n     */\r\n    _getClassNameFromEnvKey(key) {\r\n      var envmappings = this._checksMap;\r\n      if (envmappings[key] != undefined) {\r\n        var implementation = envmappings[key];\r\n        // separate class from method\r\n        var lastdot = implementation.lastIndexOf(\".\");\r\n        if (lastdot > -1) {\r\n          var classname = implementation.slice(0, lastdot);\r\n          var methodname = implementation.slice(lastdot + 1);\r\n          var clazz = qx.Bootstrap.getByName(classname);\r\n          if (clazz != undefined) {\r\n            return [clazz, methodname];\r\n          }\r\n        }\r\n      }\r\n      return [undefined, undefined];\r\n    },\r\n\r\n    /**\r\n     * Invokes the callback as soon as the check has been done. If no check\r\n     * could be found, a warning will be printed.\r\n     *\r\n     * @param key {String} The key of the asynchronous check.\r\n     * @param callback {Function} The function to call as soon as the check is\r\n     *   done. The function should have one argument which is the result of the\r\n     *   check.\r\n     * @param self {var} The context to use when invoking the callback.\r\n     */\r\n    getAsync(key, callback, self) {\r\n      // check the cache\r\n      var env = this;\r\n      if (this.__cache[key] != undefined) {\r\n        // force async behavior\r\n        window.setTimeout(function () {\r\n          callback.call(self, env.__cache[key]);\r\n        }, 0);\r\n        return;\r\n      }\r\n\r\n      var check = this._asyncChecks[key];\r\n      if (check) {\r\n        check(function (result) {\r\n          env.__cache[key] = result;\r\n          callback.call(self, result);\r\n        });\r\n        return;\r\n      }\r\n\r\n      // try class lookup\r\n      var classAndMethod = this._getClassNameFromEnvKey(key);\r\n      if (classAndMethod[0] != undefined) {\r\n        var clazz = classAndMethod[0];\r\n        var method = classAndMethod[1];\r\n        clazz[method](function (result) {\r\n          // call the check method\r\n          env.__cache[key] = result;\r\n          callback.call(self, result);\r\n        });\r\n        return;\r\n      }\r\n\r\n      // debug flag\r\n      if (qx.Bootstrap.DEBUG) {\r\n        qx.Bootstrap.warn(\"The environment key '\" + key + \"' is undefined.\");\r\n        qx.Bootstrap.trace(this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the proper value dependent on the check for the given key.\r\n     *\r\n     * @param key {String} The name of the check the select depends on.\r\n     * @param values {Map} A map containing the values which should be returned\r\n     *   in any case. The \"default\" key could be used as a catch all statement.\r\n     * @return {var} The value which is stored in the map for the given\r\n     *   check of the key.\r\n     */\r\n    select(key, values) {\r\n      return this.__pickFromValues(this.get(key), values);\r\n    },\r\n\r\n    /**\r\n     * Selects the proper function dependent on the asynchronous check.\r\n     *\r\n     * @param key {String} The key for the async check.\r\n     * @param values {Map} A map containing functions. The map keys should\r\n     *   contain all possibilities which could be returned by the given check\r\n     *   key. The \"default\" key could be used as a catch all statement.\r\n     *   The called function will get one parameter, the result of the query.\r\n     * @param self {var} The context which should be used when calling the\r\n     *   method in the values map.\r\n     */\r\n    selectAsync(key, values, self) {\r\n      this.getAsync(\r\n        key,\r\n        function (result) {\r\n          var value = this.__pickFromValues(key, values);\r\n          value.call(self, result);\r\n        },\r\n        this\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Internal helper which tries to pick the given key from the given values\r\n     * map. If that key is not found, it tries to use a key named \"default\".\r\n     * If there is also no default key, it prints out a warning and returns\r\n     * undefined.\r\n     *\r\n     * @param key {String} The key to search for in the values.\r\n     * @param values {Map} A map containing some keys.\r\n     * @return {var} The value stored as values[key] usually.\r\n     */\r\n    __pickFromValues(key, values) {\r\n      var value = values[key];\r\n      if (values.hasOwnProperty(key)) {\r\n        return value;\r\n      }\r\n\r\n      // check for piped values\r\n      for (var id in values) {\r\n        if (id.indexOf(\"|\") != -1) {\r\n          var ids = id.split(\"|\");\r\n          for (var i = 0; i < ids.length; i++) {\r\n            if (ids[i] == key) {\r\n              return values[id];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (values[\"default\"] !== undefined) {\r\n        return values[\"default\"];\r\n      }\r\n\r\n      if (qx.Bootstrap.DEBUG) {\r\n        throw new Error(\r\n          'No match for variant \"' +\r\n            key +\r\n            '\" (' +\r\n            typeof key +\r\n            \" type)\" +\r\n            \" in variants [\" +\r\n            qx.Bootstrap.keys(values) +\r\n            '] found, and no default (\"default\") given'\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Takes a given map containing the check names as keys and converts\r\n     * the map to an array only containing the values for check evaluating\r\n     * to <code>true</code>. This is especially handy for conditional\r\n     * includes of mixins.\r\n     * @param map {Map} A map containing check names as keys and values.\r\n     * @return {Array} An array containing the values.\r\n     */\r\n    filter(map) {\r\n      var returnArray = [];\r\n\r\n      for (var check in map) {\r\n        if (this.get(check)) {\r\n          returnArray.push(map[check]);\r\n        }\r\n      }\r\n\r\n      return returnArray;\r\n    },\r\n\r\n    /**\r\n     * Invalidates the cache for the given key.\r\n     *\r\n     * @param key {String} The key of the check.\r\n     */\r\n    invalidateCacheKey(key) {\r\n      delete this.__cache[key];\r\n    },\r\n\r\n    /**\r\n     * Add a check to the environment class. If there is already a check\r\n     * added for the given key, the add will be ignored.\r\n     *\r\n     * @param key {String} The key for the check e.g. html.featurexyz.\r\n     * @param check {var} It could be either a function or a simple value.\r\n     *   The function should be responsible for the check and should return the\r\n     *   result of the check.\r\n     */\r\n    add(key, check) {\r\n      // ignore already added checks.\r\n      if (this._checks[key] == undefined) {\r\n        // add functions directly\r\n        if (check instanceof Function) {\r\n          if (!this._checksMap[key] && check.displayName) {\r\n            this._checksMap[key] = check.displayName.substr(\r\n              0,\r\n              check.displayName.length - 2\r\n            );\r\n          }\r\n          this._checks[key] = check;\r\n          // otherwise, create a check function and use that\r\n        } else {\r\n          this._checks[key] = this.__createCheck(check);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds an asynchronous check to the environment. If there is already a check\r\n     * added for the given key, the add will be ignored.\r\n     *\r\n     * @param key {String} The key of the check e.g. html.featureabc\r\n     * @param check {Function} A function which should check for a specific\r\n     *   environment setting in an asynchronous way. The method should take two\r\n     *   arguments. First one is the callback and the second one is the context.\r\n     */\r\n    addAsync(key, check) {\r\n      if (this._checks[key] == undefined) {\r\n        this._asyncChecks[key] = check;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns all currently defined synchronous checks.\r\n     *\r\n     * @internal\r\n     * @return {Map} The map of synchronous checks\r\n     */\r\n    getChecks() {\r\n      return this._checks;\r\n    },\r\n\r\n    /**\r\n     * Returns all currently defined asynchronous checks.\r\n     *\r\n     * @internal\r\n     * @return {Map} The map of asynchronous checks\r\n     */\r\n    getAsyncChecks() {\r\n      return this._asyncChecks;\r\n    },\r\n\r\n    /**\r\n     * Initializer for the default values of the framework settings.\r\n     */\r\n    _initDefaultQxValues() {\r\n      var createFuncReturning = function (val) {\r\n        return function () {\r\n          return val;\r\n        };\r\n      };\r\n\r\n      for (var prop in this._defaults) {\r\n        this.add(prop, createFuncReturning(this._defaults[prop]));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Import checks from global qx.$$environment into the Environment class.\r\n     */\r\n    __importFromGenerator() {\r\n      // import the environment map\r\n      if (qx && qx.$$environment) {\r\n        for (var key in qx.$$environment) {\r\n          var value = qx.$$environment[key];\r\n\r\n          this._checks[key] = this.__createCheck(value);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks the URL for environment settings and imports these into the\r\n     * Environment class.\r\n     */\r\n    __importFromUrl() {\r\n      if (window.document && window.document.location) {\r\n        var urlChecks = window.document.location.search.slice(1).split(\"&\");\r\n\r\n        for (var i = 0; i < urlChecks.length; i++) {\r\n          var check = urlChecks[i].split(\":\");\r\n          if (check.length != 3 || check[0] != \"qxenv\") {\r\n            continue;\r\n          }\r\n\r\n          var key = check[1];\r\n          var value = decodeURIComponent(check[2]);\r\n\r\n          // implicit type conversion\r\n          if (value == \"true\") {\r\n            value = true;\r\n          } else if (value == \"false\") {\r\n            value = false;\r\n          } else if (/^(\\d|\\.)+$/.test(value)) {\r\n            value = parseFloat(value);\r\n          }\r\n\r\n          this._checks[key] = this.__createCheck(value);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Internal helper which creates a function returning the given value.\r\n     *\r\n     * @param value {var} The value which should be returned.\r\n     * @return {Function} A function which could be used by a test.\r\n     */\r\n    __createCheck(value) {\r\n      return qx.Bootstrap.bind(\r\n        function (value) {\r\n          return value;\r\n        },\r\n        null,\r\n        value\r\n      );\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    // create default values for the environment class\r\n    statics._initDefaultQxValues();\r\n    // load the checks from the generator\r\n    statics.__importFromGenerator();\r\n    // load the checks from the url\r\n    if (statics.get(\"qx.allowUrlSettings\") === true) {\r\n      statics.__importFromUrl();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}