{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "members",
    "__registeredObjects",
    "__registeredIdHashes",
    "_createQxObject",
    "id",
    "result",
    "_createQxObjectImpl",
    "obj",
    "undefined",
    "Init",
    "getApplication",
    "getAbsoluteIdOf",
    "suppressWarnings",
    "toHashCode",
    "getQxObjectId",
    "segs",
    "application",
    "error",
    "join",
    "unshift",
    "owner",
    "getQxOwner",
    "ownerId",
    "path",
    "register",
    "_cascadeQxObjectIdChanges",
    "unregister",
    "data",
    "hash",
    "getRegisteredObjects",
    "statics",
    "getQxObject",
    "getInstance",
    "Id"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Id.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\n/**\n * Provides a registry of top level objects\n */\nqx.Class.define(\"qx.core.Id\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  members: {\n    __registeredObjects: null,\n    __registeredIdHashes: null,\n\n    /*\n     * @Override\n     */\n    _createQxObject(id) {\n      // Create the object, but don't add it to the list of owned objects\n      var result = this._createQxObjectImpl(id);\n      return result;\n    },\n\n    /*\n     * @Override\n     */\n    _createQxObjectImpl(id) {\n      if (this.__registeredObjects) {\n        var obj = this.__registeredObjects[id];\n        if (obj !== undefined) {\n          return obj;\n        }\n      }\n\n      switch (id) {\n        case \"application\":\n          return qx.core.Init.getApplication() || undefined;\n      }\n\n      return undefined;\n    },\n\n    /**\n     * Returns an object path which can be used to locate an object anywhere in the application\n     * with a call to `qx.core.Id.getQxObject()`.\n     *\n     * This will return null if it is not possible to calculate a path because one of the\n     * ancestors has a null `qxObjectId`.\n     *\n     * This will also return null if the top-most ancestor is not one of the globals registered\n     * with `registerObject` or a known global (such as the application); however, by passing\n     * `true` as the `suppressWarnings` parameter, this will prevent errors from appearing in\n     * the console when this happens\n     *\n     * @param obj {qx.core.Object} the object\n     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created\n     * @return {String} full path to the object\n     */\n    getAbsoluteIdOf(obj, suppressWarnings) {\n      if (\n        this.__registeredIdHashes &&\n        this.__registeredIdHashes[obj.toHashCode()]\n      ) {\n        return obj.getQxObjectId();\n      }\n      var segs = [];\n      var application = qx.core.Init.getApplication();\n      while (obj) {\n        var id = obj.getQxObjectId();\n        if (!id) {\n          if (!suppressWarnings) {\n            this.error(\n              \"Cannot determine an absolute Object ID because one of the ancestor ObjectID's is null (got as far as \" +\n                segs.join(\"/\") +\n                \")\"\n            );\n          }\n          return null;\n        }\n        segs.unshift(id);\n        var owner = obj.getQxOwner();\n        if (owner) {\n          // Find the ID of the owner, *if* it is registered as a top level object\n          var ownerId = null;\n          if (owner === application) {\n            ownerId = \"application\";\n          } else {\n            ownerId =\n              (this.__registeredIdHashes &&\n                this.__registeredIdHashes[owner.toHashCode()]) ||\n              null;\n          }\n\n          // When we have found the ID of a top level object, add it to the path and stop\n          if (ownerId) {\n            segs.unshift(ownerId);\n            break;\n          }\n        } else {\n          if (!suppressWarnings) {\n            this.error(\n              \"Cannot determine a global absolute Object ID because the topmost object is not registered\"\n            );\n          }\n          return null;\n        }\n        obj = owner;\n      }\n      var path = segs.join(\"/\");\n      return path;\n    },\n\n    /**\n     * Registers an object with an ID; as this is registering a global object which is the root of a tree\n     * of objects with IDs, the `id` parameter can be provided to set the ID used for the root object - this\n     * allows an object to be registered under a well known, common name without affecting the API of the\n     * object.\n     *\n     * @param obj {qx.core.Object} the object to register\n     * @param id {String?} the ID to register the object under, otherwise the object's own Object Id is used\n     */\n    register(obj, id) {\n      if (!this.__registeredObjects) {\n        this.__registeredObjects = {};\n        this.__registeredIdHashes = {};\n      }\n      if (!id) {\n        id = obj.getQxObjectId();\n      }\n      this.__registeredObjects[id] = obj;\n      this.__registeredIdHashes[obj.toHashCode()] = id;\n      obj._cascadeQxObjectIdChanges();\n    },\n\n    /**\n     * Unregisters a previously registered object with an ID\n     *\n     * @param data {Object|String} the object to unregister, or the ID of the object\n     * @return {Boolean} whether there was an object to unregister\n     */\n    unregister(data) {\n      if (!this.__registeredObjects) {\n        return false;\n      }\n\n      var id;\n      if (typeof data == \"string\") {\n        id = data;\n      } else {\n        var hash = data.toHashCode();\n        id = this.__registeredIdHashes[hash];\n        if (!id) {\n          return false;\n        }\n      }\n\n      var obj = this.__registeredObjects[id];\n      if (obj) {\n        delete this.__registeredObjects[id];\n        delete this.__registeredIdHashes[obj.toHashCode()];\n        obj._cascadeQxObjectIdChanges();\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns a map of the objects that have been registered as id roots, with\n     * the topmost part of the ID as key.\n     * @return {Object}\n     */\n    getRegisteredObjects() {\n      return this.__registeredObjects;\n    }\n  },\n\n  statics: {\n    /**\n     * Returns a top level instance\n     *\n     * @param id {String} the ID to look for\n     * @return {qx.core.Object?} the object\n     */\n    getQxObject(id) {\n      return this.getInstance().getQxObject(id);\n    },\n\n    /**\n     * Helper for `qx.core.Id.getAbsoluteIdOf`\n     *\n     * @param obj {qx.core.Object} the object\n     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created\n     * @return {String} full path to the object\n     */\n    getAbsoluteIdOf(obj, suppressWarnings) {\n      return this.getInstance().getAbsoluteIdOf(obj, suppressWarnings);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}