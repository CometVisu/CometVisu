{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "members",
    "__registeredObjects",
    "__registeredIdHashes",
    "_createQxObject",
    "id",
    "result",
    "_createQxObjectImpl",
    "_qx$core$MObjectId",
    "object",
    "MObjectId",
    "handleObjects",
    "apply",
    "Id",
    "concat",
    "Array",
    "prototype",
    "slice",
    "call",
    "arguments",
    "undefined",
    "obj",
    "Init",
    "getApplication",
    "getAbsoluteIdOf",
    "suppressWarnings",
    "toHashCode",
    "getQxObjectId",
    "segs",
    "application",
    "error",
    "join",
    "unshift",
    "owner",
    "getQxOwner",
    "ownerId",
    "path",
    "register",
    "_cascadeQxObjectIdChanges",
    "unregister",
    "data",
    "hash",
    "getRegisteredObjects",
    "statics",
    "getQxObject",
    "getInstance"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Id.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\n/**\n * Provides a registry of top level objects\n */\nqx.Class.define(\"qx.core.Id\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  members: {\n    __registeredObjects: null,\n    __registeredIdHashes: null,\n\n    /*\n     * @Override\n     */\n    _createQxObject(id) {\n      // Create the object, but don't add it to the list of owned objects\n      var result = this._createQxObjectImpl(id);\n      return result;\n    },\n\n    /*\n     * @Override\n     */\n    _createQxObjectImpl(id) {\n      if (this.__registeredObjects) {\n        var obj = this.__registeredObjects[id];\n        if (obj !== undefined) {\n          return obj;\n        }\n      }\n\n      switch (id) {\n        case \"application\":\n          return qx.core.Init.getApplication() || undefined;\n      }\n\n      return undefined;\n    },\n\n    /**\n     * Returns an object path which can be used to locate an object anywhere in the application\n     * with a call to `qx.core.Id.getQxObject()`.\n     *\n     * This will return null if it is not possible to calculate a path because one of the\n     * ancestors has a null `qxObjectId`.\n     *\n     * This will also return null if the top-most ancestor is not one of the globals registered\n     * with `registerObject` or a known global (such as the application); however, by passing\n     * `true` as the `suppressWarnings` parameter, this will prevent errors from appearing in\n     * the console when this happens\n     *\n     * @param obj {qx.core.Object} the object\n     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created\n     * @return {String} full path to the object\n     */\n    getAbsoluteIdOf(obj, suppressWarnings) {\n      if (\n        this.__registeredIdHashes &&\n        this.__registeredIdHashes[obj.toHashCode()]\n      ) {\n        return obj.getQxObjectId();\n      }\n      var segs = [];\n      var application = qx.core.Init.getApplication();\n      while (obj) {\n        var id = obj.getQxObjectId();\n        if (!id) {\n          if (!suppressWarnings) {\n            this.error(\n              \"Cannot determine an absolute Object ID because one of the ancestor ObjectID's is null (got as far as \" +\n                segs.join(\"/\") +\n                \")\"\n            );\n          }\n          return null;\n        }\n        segs.unshift(id);\n        var owner = obj.getQxOwner();\n        if (owner) {\n          // Find the ID of the owner, *if* it is registered as a top level object\n          var ownerId = null;\n          if (owner === application) {\n            ownerId = \"application\";\n          } else {\n            ownerId =\n              (this.__registeredIdHashes &&\n                this.__registeredIdHashes[owner.toHashCode()]) ||\n              null;\n          }\n\n          // When we have found the ID of a top level object, add it to the path and stop\n          if (ownerId) {\n            segs.unshift(ownerId);\n            break;\n          }\n        } else {\n          if (!suppressWarnings) {\n            this.error(\n              \"Cannot determine a global absolute Object ID because the topmost object is not registered\"\n            );\n          }\n          return null;\n        }\n        obj = owner;\n      }\n      var path = segs.join(\"/\");\n      return path;\n    },\n\n    /**\n     * Registers an object with an ID; as this is registering a global object which is the root of a tree\n     * of objects with IDs, the `id` parameter can be provided to set the ID used for the root object - this\n     * allows an object to be registered under a well known, common name without affecting the API of the\n     * object.\n     *\n     * @param obj {qx.core.Object} the object to register\n     * @param id {String?} the ID to register the object under, otherwise the object's own Object Id is used\n     */\n    register(obj, id) {\n      if (!this.__registeredObjects) {\n        this.__registeredObjects = {};\n        this.__registeredIdHashes = {};\n      }\n      if (!id) {\n        id = obj.getQxObjectId();\n      }\n      this.__registeredObjects[id] = obj;\n      this.__registeredIdHashes[obj.toHashCode()] = id;\n      obj._cascadeQxObjectIdChanges();\n    },\n\n    /**\n     * Unregisters a previously registered object with an ID\n     *\n     * @param data {Object|String} the object to unregister, or the ID of the object\n     * @return {Boolean} whether there was an object to unregister\n     */\n    unregister(data) {\n      if (!this.__registeredObjects) {\n        return false;\n      }\n\n      var id;\n      if (typeof data == \"string\") {\n        id = data;\n      } else {\n        var hash = data.toHashCode();\n        id = this.__registeredIdHashes[hash];\n        if (!id) {\n          return false;\n        }\n      }\n\n      var obj = this.__registeredObjects[id];\n      if (obj) {\n        delete this.__registeredObjects[id];\n        delete this.__registeredIdHashes[obj.toHashCode()];\n        obj._cascadeQxObjectIdChanges();\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns a map of the objects that have been registered as id roots, with\n     * the topmost part of the ID as key.\n     * @return {Object}\n     */\n    getRegisteredObjects() {\n      return this.__registeredObjects;\n    }\n  },\n\n  statics: {\n    /**\n     * Returns a top level instance\n     *\n     * @param id {String} the ID to look for\n     * @return {qx.core.Object?} the object\n     */\n    getQxObject(id) {\n      return this.getInstance().getQxObject(id);\n    },\n\n    /**\n     * Helper for `qx.core.Id.getAbsoluteIdOf`\n     *\n     * @param obj {qx.core.Object} the object\n     * @param suppressWarnings {Boolean?} default: false; silently returns null if an ID cannot be created\n     * @return {String} full path to the object\n     */\n    getAbsoluteIdOf(obj, suppressWarnings) {\n      return this.getInstance().getAbsoluteIdOf(obj, suppressWarnings);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}