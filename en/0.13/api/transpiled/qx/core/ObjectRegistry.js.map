{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "inShutDown",
    "__registry",
    "__nextHash",
    "__postId",
    "__stackTraces",
    "register",
    "obj",
    "registry",
    "hash",
    "core",
    "ObjectRegistry",
    "toHashCode",
    "unregister",
    "$$hash",
    "clearHashCode",
    "createHashCode",
    "String",
    "$$discardedHashCode",
    "ex",
    "removeAttribute",
    "fromHashCode",
    "suppressWarnings",
    "log",
    "Logger",
    "warn",
    "hasHashCode",
    "shutdown",
    "hashes",
    "push",
    "sort",
    "a",
    "b",
    "parseInt",
    "i",
    "l",
    "length",
    "dispose",
    "error",
    "toString",
    "debug",
    "getRegistry",
    "getNextHash",
    "getPostId",
    "getStackTraces",
    "defer",
    "window",
    "top",
    "frames"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/ObjectRegistry.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Registration for all instances of qooxdoo classes. Mainly\r\n * used to manage them for the final shutdown sequence and to\r\n * use weak references when connecting widgets to DOM nodes etc.\r\n *\r\n * @ignore(qx.dev, qx.dev.Debug.*)\r\n */\r\nqx.Bootstrap.define(\"qx.core.ObjectRegistry\", {\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /**\r\n     * @type {Boolean} Whether the application is in the shutdown phase\r\n     * @deprecated {6.0} shutdown is not a valid mechanism to terminate apps\r\n     * */\r\n    inShutDown: false,\r\n\r\n    /** @type {Map} Internal data structure to store objects */\r\n    __registry: {},\r\n\r\n    /** @type {Integer} Next new hash code. */\r\n    __nextHash: 0,\r\n\r\n    /** @type {String} Post id for hash code creation. */\r\n    __postId: \"\",\r\n\r\n    /** @type {Map} Object hashes to stack traces (for dispose profiling only) */\r\n    __stackTraces: {},\r\n\r\n    /**\r\n     * Registers an object into the database. This adds a hashcode\r\n     * to the object (if not already done before) and stores it under\r\n     * this hashcode. You can access this object later using the hashcode\r\n     * by calling {@link #fromHashCode}.\r\n     *\r\n     * All registered objects are automatically disposed on application\r\n     * shutdown. Each registered object must at least have a method\r\n     * called <code>dispose</code>.\r\n     *\r\n     * @param obj {Object} Any object with a dispose() method\r\n     */\r\n    register(obj) {\r\n      var registry = this.__registry;\r\n      if (!registry) {\r\n        return;\r\n      }\r\n\r\n      var hash = qx.core.ObjectRegistry.toHashCode(obj);\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (!obj.dispose) {\r\n          throw new Error(\"Invalid object: \" + obj);\r\n        }\r\n      }\r\n\r\n      registry[hash] = obj;\r\n    },\r\n\r\n    /**\r\n     * Removes the given object from the database.\r\n     *\r\n     * @param obj {Object} Any previously registered object\r\n     */\r\n    unregister(obj) {\r\n      var hash = obj.$$hash;\r\n      if (hash == null) {\r\n        return;\r\n      }\r\n\r\n      var registry = this.__registry;\r\n      if (registry && registry[hash]) {\r\n        delete registry[hash];\r\n      }\r\n\r\n      this.clearHashCode(obj);\r\n    },\r\n\r\n    /**\r\n     * Returns an unique identifier for the given object. If such an identifier\r\n     * does not yet exist, create it.\r\n     *\r\n     * @param obj {Object} the object to get the hashcode for\r\n     * @return {String} unique identifier for the given object\r\n     */\r\n    toHashCode(obj) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (obj == null) {\r\n          throw new Error(\"Invalid object: \" + obj);\r\n        }\r\n      }\r\n\r\n      var hash = obj.$$hash;\r\n      if (hash != null) {\r\n        return hash;\r\n      }\r\n\r\n      // Create new hash code\r\n      hash = this.createHashCode();\r\n\r\n      // Store\r\n      obj.$$hash = hash;\r\n\r\n      if (qx.core.Environment.get(\"qx.debug.dispose\")) {\r\n        if (qx.dev && qx.dev.Debug && qx.dev.Debug.disposeProfilingActive) {\r\n          this.__stackTraces[hash] = qx.dev.StackTrace.getStackTrace();\r\n        }\r\n      }\r\n\r\n      return obj.$$hash;\r\n    },\r\n\r\n    /**\r\n     * Creates a hash code\r\n     *\r\n     * @return {String}\r\n     */\r\n    createHashCode() {\r\n      var hash = String(this.__nextHash++ + this.__postId);\r\n      return hash;\r\n    },\r\n\r\n    /**\r\n     * Clears the unique identifier on the given object.\r\n     *\r\n     * @param obj {Object} the object to clear the hashcode for\r\n     */\r\n    clearHashCode(obj) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (obj == null) {\r\n          throw new Error(\"Invalid object: \" + obj);\r\n        }\r\n      }\r\n\r\n      var hash = obj.$$hash;\r\n      if (hash != null) {\r\n        // Delete the hash code\r\n        try {\r\n          obj.$$discardedHashCode = hash;\r\n          delete obj.$$hash;\r\n        } catch (ex) {\r\n          // IE has trouble directly removing the hash\r\n          // but it's ok with using removeAttribute\r\n          if (obj.removeAttribute) {\r\n            obj.removeAttribute(\"$$hash\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get an object instance by its hash code as returned by {@link #toHashCode}.\r\n     * If the object is already disposed or the hashCode is invalid,\r\n     * <code>null</code> is returned.\r\n     *\r\n     * @param hash {String} The object's hash code.\r\n     * @param suppressWarnings {Boolean?} if true warnings are suppressed; default is false\r\n     * @return {qx.core.Object} The corresponding object or <code>null</code>.\r\n     */\r\n    fromHashCode(hash, suppressWarnings) {\r\n      var obj = this.__registry[hash] || null;\r\n      if (!obj && !suppressWarnings) {\r\n        qx.log.Logger.warn(\r\n          this,\r\n          \"Object with hash code \" +\r\n            hash +\r\n            \" does not exist (since Qooxdoo 6.0 fromHashCode requires that you explicitly register objects with qx.core.ObjectRegistry.register)\"\r\n        );\r\n      }\r\n      return obj;\r\n    },\r\n\r\n    /**\r\n     * Detects whether an object instance is indexed by its hash code as returned by {@link #toHashCode}.\r\n     * Unlike {@link #fromHashCode} this does not output warnings if the object does not exist\r\n     *\r\n     * @param hash {String} The object's hash code.\r\n     * @return {qx.core.Object} The corresponding object or <code>null</code>.\r\n     */\r\n    hasHashCode(hash) {\r\n      return !!this.__registry[hash];\r\n    },\r\n\r\n    /**\r\n     * Disposing all registered object and cleaning up registry. This is\r\n     * automatically executed at application shutdown.\r\n     *\r\n     * @deprecated {6.0} shutdown is not a valid means to clean up because destruction order\r\n     * is not defined and dispose()/destructors are deprecated in favour of automatic\r\n     * garbage collection\r\n     */\r\n    shutdown() {\r\n      this.inShutDown = true;\r\n\r\n      var registry = this.__registry;\r\n      var hashes = [];\r\n\r\n      for (var hash in registry) {\r\n        hashes.push(hash);\r\n      }\r\n\r\n      // sort the objects! Remove the objecs created at startup\r\n      // as late as possible\r\n      hashes.sort(function (a, b) {\r\n        return parseInt(b, 10) - parseInt(a, 10);\r\n      });\r\n\r\n      var obj,\r\n        i = 0,\r\n        l = hashes.length;\r\n      while (true) {\r\n        try {\r\n          for (; i < l; i++) {\r\n            hash = hashes[i];\r\n            obj = registry[hash];\r\n\r\n            if (obj && obj.dispose) {\r\n              obj.dispose();\r\n            }\r\n          }\r\n        } catch (ex) {\r\n          qx.Bootstrap.error(\r\n            this,\r\n            \"Could not dispose object \" + obj.toString() + \": \" + ex,\r\n            ex\r\n          );\r\n\r\n          if (i !== l) {\r\n            i++;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      qx.Bootstrap.debug(this, \"Disposed \" + l + \" objects\");\r\n\r\n      delete this.__registry;\r\n    },\r\n\r\n    /**\r\n     * Returns the object registry.\r\n     *\r\n     * @return {Object} The registry\r\n     */\r\n    getRegistry() {\r\n      return this.__registry;\r\n    },\r\n\r\n    /**\r\n     * Returns the next hash code that will be used.\r\n     *\r\n     * @return {Integer} The next hash code\r\n     * @internal\r\n     */\r\n    getNextHash() {\r\n      return this.__nextHash;\r\n    },\r\n\r\n    /**\r\n     * Returns the postfix that identifies the current iframe\r\n     *\r\n     * @return {Integer} The next hash code\r\n     * @internal\r\n     */\r\n    getPostId() {\r\n      return this.__postId;\r\n    },\r\n\r\n    /**\r\n     * Returns the map of stack traces recorded when objects are registered\r\n     * (for dispose profiling)\r\n     * @return {Map} Map: object hash codes to stack traces\r\n     * @internal\r\n     */\r\n    getStackTraces() {\r\n      return this.__stackTraces;\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    if (window && window.top) {\r\n      var frames = window.top.frames;\r\n      for (var i = 0; i < frames.length; i++) {\r\n        if (frames[i] === window) {\r\n          statics.__postId = \"-\" + (i + 1);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    statics.__postId = \"-0\";\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}