{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__gatherDependency",
    "__P_168_0",
    "event",
    "type",
    "Data",
    "dispatch",
    "Direct",
    "core",
    "Environment",
    "get",
    "Promise",
    "__checks",
    "Boolean",
    "String",
    "Number",
    "Integer",
    "PositiveNumber",
    "PositiveInteger",
    "Error",
    "RegExp",
    "Object",
    "Array",
    "Map",
    "Function",
    "Date",
    "Node",
    "Element",
    "Document",
    "Window",
    "Event",
    "Class",
    "Mixin",
    "Interface",
    "Theme",
    "Color",
    "Decorator",
    "Font",
    "__dereference",
    "$$inherit",
    "$$store",
    "runtime",
    "user",
    "theme",
    "inherit",
    "init",
    "useinit",
    "$$method",
    "getAsync",
    "set",
    "setImpl",
    "setAsync",
    "reset",
    "refresh",
    "setRuntime",
    "resetRuntime",
    "setThemed",
    "resetThemed",
    "$$allowedKeys",
    "name",
    "dereference",
    "inheritable",
    "nullable",
    "themeable",
    "refine",
    "apply",
    "check",
    "transform",
    "async",
    "deferredInit",
    "validate",
    "isEqual",
    "$$allowedGroupKeys",
    "group",
    "mode",
    "$$inheritable",
    "__executeOptimizedRefresh",
    "__P_168_3",
    "clazz",
    "inheritables",
    "__getInheritablesOfClass",
    "length",
    "refresher",
    "__createRefresher",
    "prototype",
    "$$refreshInheritables",
    "__P_168_4",
    "properties",
    "$$properties",
    "push",
    "superclass",
    "__P_168_5",
    "code",
    "i",
    "l",
    "join",
    "attachRefreshInheritables",
    "Property",
    "attachMethods",
    "config",
    "__attachGroupMethods",
    "__attachPropertyMethods",
    "__P_168_6",
    "upname",
    "firstUp",
    "members",
    "setter",
    "resetter",
    "styler",
    "unstyler",
    "argHandler",
    "shorthand",
    "a",
    "__P_168_7",
    "undefined",
    "__shouldBeDereferenced",
    "warn",
    "classname",
    "error",
    "method",
    "store",
    "getName",
    "$$install",
    "__installOptimizedGetter",
    "arguments",
    "setName",
    "__installOptimizedSetter",
    "executeOptimizedSetter",
    "value",
    "__P_168_8",
    "__errors",
    "obj",
    "id",
    "property",
    "variant",
    "constructor",
    "msg",
    "__unwrapFunctionFromCode",
    "__P_168_12",
    "instance",
    "args",
    "fn",
    "__installFunctionFromCode",
    "call",
    "__P_168_13",
    "setDisplayName",
    "executeOptimizedGetter",
    "__compileGetter",
    "__P_168_9",
    "__P_168_14",
    "__compileSetter",
    "__P_168_10",
    "__P_168_15",
    "lang",
    "incomingValue",
    "hasCallback",
    "__getStore",
    "__emitIsEqualFunction",
    "__emitSetterPreConditions",
    "__emitOldValue",
    "__emitIncomingValueTransformation",
    "__emitOldNewComparison",
    "__emitStoreValue",
    "__emitStoreComputedValue",
    "__emitStoreInheritedPropertyValue",
    "__emitNormalizeUndefinedValues",
    "__emitCallCallback",
    "_getChildren",
    "unshift",
    "__P_168_16",
    "__P_168_17",
    "__P_168_18",
    "__P_168_20",
    "__P_168_21",
    "resetValue",
    "__emitIncomingValueValidation",
    "select",
    "_true",
    "isDefined",
    "__P_168_22",
    "__P_168_23",
    "__P_168_19",
    "__P_168_24",
    "__P_168_25",
    "__P_168_26"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Property.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Internal class for handling of dynamic properties. Should only be used\r\n * through the methods provided by {@link qx.Class}.\r\n *\r\n * For a complete documentation of properties take a look at\r\n * http://qooxdoo.org/docs/#core/property_features.md.\r\n *\r\n *\r\n * *Normal properties*\r\n *\r\n * The <code>properties</code> key in the class definition map of {@link qx.Class#define}\r\n * is used to generate the properties.\r\n *\r\n * Valid keys of a property definition are:\r\n *\r\n * <table>\r\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\r\n *   <tr><th>check</th><td>Array, String, Function</td><td>\r\n *     The check is used to check the type the incoming value of a property. This will only\r\n *     be executed in the source version. The build version will not contain the checks.\r\n *     The check can be:\r\n *     <ul>\r\n *       <li>a custom check function. The function takes the incoming value as a parameter and must\r\n *           return a boolean value to indicate whether the values is valid.\r\n *       </li>\r\n *       <li>inline check code as a string e.g. <code>\"value &gt; 0 && value &lt; 100\"</code></li>\r\n *       <li>a class name e.g. <code>qx.ui.form.Button</code></li>\r\n *       <li>a name of an interface the value must implement</li>\r\n *       <li>an array of all valid values</li>\r\n *       <li>one of the predefined checks: Boolean, String, Number, Integer, Float, Double,\r\n *           Object, Array, Map, Class, Mixin, Interface, Theme, Error, RegExp, Function,\r\n *           Date, Node, Element, Document, Window, Event\r\n *       </li>\r\n *     <ul>\r\n *   </td></tr>\r\n *   <tr><th>init</th><td>var</td><td>\r\n *     Sets the default/initial value of the property. If no property value is set or the property\r\n *     gets reset, the getter will return the <code>init</code> value.\r\n *   </td></tr>\r\n *   <tr><th>apply</th><td>String</td><td>\r\n *     On change of the property value the method of the specified name will be called. The signature of\r\n *     the method is <code>function(newValue, oldValue, propertyName)</code>. It is conventional to name\r\n *     the callback <code>_apply</code> + <i>PropertyName</i>, with the property name camel-cased (e.g.\r\n *     \"<i>_applyFooBar</i>\" for a property <i>fooBar</i>).\r\n *   </td></tr>\r\n *   <tr><th>event</th><td>String</td><td>\r\n *     On change of the property value an event with the given name will be dispatched. The event type is\r\n *     {@link qx.event.type.Data}.\r\n *   </td></tr>\r\n *   <tr><th>themeable</th><td>Boolean</td><td>\r\n *     Whether this property can be set using themes.\r\n *   </td></tr>\r\n *   <tr><th>inheritable</th><td>Boolean</td><td>\r\n *     Whether the property value should be inheritable. If the property does not have an user defined or an\r\n *     init value, the property will try to get the value from the parent of the current object.\r\n *   </td></tr>\r\n *   <tr><th>nullable</th><td>Boolean</td><td>\r\n *     Whether <code>null</code> is an allowed value of the property. This is complementary to the check\r\n *     defined using the <code>check</code> key.\r\n *   </td></tr>\r\n *   <tr><th>refine</th><td>Boolean</td><td>\r\n *     Whether the property definition is a refinement of a property in one of the super classes of the class.\r\n *     Only the <code>init</code> value can be changed using refine.\r\n *   </td></tr>\r\n *   <tr><th>transform</th><td>String</td><td>\r\n *     On setting of the property value the method of the specified name will\r\n *     be called. The signature of the method is <code>function(value, oldValue)</code>.\r\n *     The parameter <code>value</code> is the value passed to the setter, the\r\n *     parameter <code>oldValue</code> is the current value, or undefined if no value\r\n *     has been set previously.\r\n *     The function must return the modified or unmodified value.\r\n *     Transformation occurs before the check function, so both may be\r\n *     specified if desired.  Alternatively, the transform function may throw\r\n *     an error if the value passed to it is invalid.\r\n *   </td></tr>\r\n *   <tr><th>validate</th><td>Function, String</td><td>\r\n *     On setting of the property value the method of the specified name will\r\n *     be called. The signature of the method is <code>function(value)</code>.\r\n *     The parameter <code>value</code> is the value passed to the setter.\r\n *     If the validation fails, an <code>qx.core.ValidationError</code> should\r\n *     be thrown by the validation function. Otherwise, just do nothing in the\r\n *     function.<br>\r\n *     If a string is given, the string should hold a reference to a member\r\n *     method.<br>\r\n *     <code>\"<i>methodname</i>\"</code> for example\r\n *     <code>\"__validateProperty\"</code><br>\r\n *     There are some default validators in the {@link qx.util.Validate} class.\r\n *     See this documentation for usage examples.\r\n *   </td></tr>\r\n *   <tr><th>dereference</th><td>Boolean</td><td>\r\n *     By default, the references to the values (current, init, ...) of the\r\n *     property will be stored as references on the object. When disposing\r\n *     this object, the references will not be deleted. Setting the\r\n *     dereference key to true tells the property system to delete all\r\n *     connections made by this property on dispose. This can be necessary for\r\n *     disconnecting DOM objects to allow the garbage collector to work\r\n *     properly.\r\n *   </td></tr>\r\n *   <tr><th>deferredInit</th><td>Boolean</td><td>\r\n *     Allow for a deferred initialization for reference types. Defaults to false.\r\n *   </td></tr>\r\n *   <tr><th>isEqual</th><td>Function, String</td><td>\r\n *     On setting of the property value the method of the specified name will\r\n *     be called to test if two values are equal. These checks for equality are\r\n *     performed by the Property-System to decide whether further actions (like\r\n *     e.g. calling applier methods or firing of events) are needed.\r\n *     The signature of the method is <code>function(valueA, valueB)</code>.\r\n *     <br/>\r\n *     The <i>isEqual</i>-value can be:\r\n *     <ul>\r\n *       <li>a custom check function.\r\n *           The function takes two values as parameter and must return a\r\n *           boolean value to indicate whether the values are considered\r\n *           equal e.g. <code>function (a, b) { return Object.is(a, b); }</code>.</li>\r\n *       <li>inline check code as a string\r\n *           which will be invoked with two parameters <code>a</code> and\r\n *           <code>b</code> and results in a boolean value to indicate whether\r\n *           the values are equal e.g. <code>\"a.length() == b.length()\"</code>.</li>\r\n *       <li>reference to a member method as string\r\n *           <code>\"<i>methodname</i>\"</code> which will be invoked with two\r\n *           parameters and returns a boolean value indicating whether the two\r\n *           values are considered equal for example <code>\"__areTheSame\"</code>.</li>\r\n *     </ul>\r\n *     The default implementation (if this key is undefined) will check the\r\n *     equality by using the <i>identity</i> operator (===) as if defined like\r\n *     <code>\"a===b\"</code>.\r\n *   </td></tr>\r\n * </table>\r\n *\r\n * *Property groups*\r\n *\r\n * Property groups are defined in a similar way but support a different set of keys:\r\n *\r\n * <table>\r\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\r\n *   <tr><th>group</th><td>String[]</td><td>\r\n *     A list of property names which should be set using the property group.\r\n *   </td></tr>\r\n *   <tr><th>mode</th><td>String</td><td>\r\n *     If mode is set to <code>\"shorthand\"</code>, the properties can be set using a CSS like shorthand mode.\r\n *   </td></tr>\r\n *   <tr><th>themeable</th><td>Boolean</td><td>\r\n *     Whether this property can be set using themes.\r\n *   </td></tr>\r\n * </table>\r\n *\r\n * @internal\r\n * @ignore(qx.Interface)\r\n */\r\nqx.Bootstrap.define(\"qx.core.Property\", {\r\n  statics: {\r\n    /**\r\n     * This is a method which does nothing than gathering dependencies for the\r\n     * module system. Calling this method is useless because it does nothing.\r\n     */\r\n    __gatherDependency() {\r\n      if (qx.core.Environment.get(\"module.events\")) {\r\n        qx.event.type.Data;\r\n        qx.event.dispatch.Direct;\r\n      }\r\n      if (qx.core.Environment.get(\"qx.promise\")) {\r\n        qx.Promise;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Built-in checks\r\n     * The keys could be used in the check of the properties\r\n     */\r\n    __checks: {\r\n      Boolean: \"qx.core.Assert.assertBoolean(value, msg) || true\",\r\n      String: \"qx.core.Assert.assertString(value, msg) || true\",\r\n\r\n      Number: \"qx.core.Assert.assertNumber(value, msg) || true\",\r\n      Integer: \"qx.core.Assert.assertInteger(value, msg) || true\",\r\n      PositiveNumber: \"qx.core.Assert.assertPositiveNumber(value, msg) || true\",\r\n      PositiveInteger:\r\n        \"qx.core.Assert.assertPositiveInteger(value, msg) || true\",\r\n\r\n      Error: \"qx.core.Assert.assertInstance(value, Error, msg) || true\",\r\n      RegExp: \"qx.core.Assert.assertInstance(value, RegExp, msg) || true\",\r\n\r\n      Object: \"qx.core.Assert.assertObject(value, msg) || true\",\r\n      Array: \"qx.core.Assert.assertArray(value, msg) || true\",\r\n      Map: \"qx.core.Assert.assertMap(value, msg) || true\",\r\n\r\n      Function: \"qx.core.Assert.assertFunction(value, msg) || true\",\r\n      Date: \"qx.core.Assert.assertInstance(value, Date, msg) || true\",\r\n      Node: \"value !== null && value.nodeType !== undefined\",\r\n      Element: \"value !== null && value.nodeType === 1 && value.attributes\",\r\n      Document:\r\n        \"value !== null && value.nodeType === 9 && value.documentElement\",\r\n      Window: \"value !== null && value.document\",\r\n      Event: \"value !== null && value.type !== undefined\",\r\n\r\n      Class: 'value !== null && value.$$type === \"Class\"',\r\n      Mixin: 'value !== null && value.$$type === \"Mixin\"',\r\n      Interface: 'value !== null && value.$$type === \"Interface\"',\r\n      Theme: 'value !== null && value.$$type === \"Theme\"',\r\n\r\n      Color:\r\n        \"qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)\",\r\n      Decorator:\r\n        \"value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)\",\r\n      Font: \"value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)\"\r\n    },\r\n\r\n    /**\r\n     * Contains types from {@link #__checks} list which need to be dereferenced\r\n     */\r\n    __dereference: {\r\n      Node: true,\r\n      Element: true,\r\n      Document: true,\r\n      Window: true,\r\n      Event: true\r\n    },\r\n\r\n    /**\r\n     * Inherit value, used to override defaults etc. to force inheritance\r\n     * even if property value is not undefined (through multi-values)\r\n     *\r\n     * @internal\r\n     */\r\n    $$inherit: \"inherit\",\r\n\r\n    /**\r\n     * Caching field names for each property created\r\n     *\r\n     * @internal\r\n     */\r\n    $$store: {\r\n      runtime: {},\r\n      user: {},\r\n      theme: {},\r\n      inherit: {},\r\n      init: {},\r\n      useinit: {}\r\n    },\r\n\r\n    /**\r\n     * Caching function names for each property created\r\n     *\r\n     * @internal\r\n     */\r\n    $$method: {\r\n      get: {},\r\n      getAsync: {},\r\n      set: {},\r\n      setImpl: {},\r\n      setAsync: {},\r\n      reset: {},\r\n      init: {},\r\n      refresh: {},\r\n      setRuntime: {},\r\n      resetRuntime: {},\r\n      setThemed: {},\r\n      resetThemed: {}\r\n    },\r\n\r\n    /**\r\n     * Supported keys for property definitions\r\n     *\r\n     * @internal\r\n     */\r\n    $$allowedKeys: {\r\n      \"@\": \"object\", // Anything\r\n      name: \"string\", // String\r\n      dereference: \"boolean\", // Boolean\r\n      inheritable: \"boolean\", // Boolean\r\n      nullable: \"boolean\", // Boolean\r\n      themeable: \"boolean\", // Boolean\r\n      refine: \"boolean\", // Boolean\r\n      init: null, // var\r\n      apply: \"string\", // String\r\n      event: \"string\", // String\r\n      check: null, // Array, String, Function\r\n      transform: \"string\", // String\r\n      async: \"boolean\", // Boolean\r\n      deferredInit: \"boolean\", // Boolean\r\n      validate: null, // String, Function\r\n      isEqual: null // String, Function\r\n    },\r\n\r\n    /**\r\n     * Supported keys for property group definitions\r\n     *\r\n     * @internal\r\n     */\r\n    $$allowedGroupKeys: {\r\n      \"@\": \"object\", // Anything\r\n      name: \"string\", // String\r\n      group: \"object\", // Array\r\n      mode: \"string\", // String\r\n      themeable: \"boolean\" // Boolean\r\n    },\r\n\r\n    /** Contains names of inheritable properties, filled by {@link qx.Class.define} */\r\n    $$inheritable: {},\r\n\r\n    /**\r\n     * Generate optimized refresh method and  attach it to the class' prototype\r\n     *\r\n     * @param clazz {Class} clazz to which the refresher should be added\r\n     */\r\n    __executeOptimizedRefresh(clazz) {\r\n      var inheritables = this.__getInheritablesOfClass(clazz);\r\n\r\n      if (!inheritables.length) {\r\n        var refresher = function () {};\r\n      } else {\r\n        refresher = this.__createRefresher(inheritables);\r\n      }\r\n\r\n      clazz.prototype.$$refreshInheritables = refresher;\r\n    },\r\n\r\n    /**\r\n     * Get the names of all inheritable properties of the given class\r\n     *\r\n     * @param clazz {Class} class to get the inheritable properties of\r\n     * @return {String[]} List of property names\r\n     */\r\n    __getInheritablesOfClass(clazz) {\r\n      var inheritable = [];\r\n\r\n      while (clazz) {\r\n        var properties = clazz.$$properties;\r\n\r\n        if (properties) {\r\n          for (var name in this.$$inheritable) {\r\n            // Whether the property is available in this class\r\n            // and whether it is inheritable in this class as well\r\n            if (properties[name] && properties[name].inheritable) {\r\n              inheritable.push(name);\r\n            }\r\n          }\r\n        }\r\n\r\n        clazz = clazz.superclass;\r\n      }\r\n\r\n      return inheritable;\r\n    },\r\n\r\n    /**\r\n     * Assemble the refresher code and return the generated function\r\n     *\r\n     * @param inheritables {String[]} list of inheritable properties\r\n     * @return {Function} refresher function\r\n     */\r\n    __createRefresher(inheritables) {\r\n      var inherit = this.$$store.inherit;\r\n      var init = this.$$store.init;\r\n      var refresh = this.$$method.refresh;\r\n\r\n      var code = [\r\n        \"var parent = this.getLayoutParent();\",\r\n        \"if (!parent) return;\"\r\n      ];\r\n\r\n      for (var i = 0, l = inheritables.length; i < l; i++) {\r\n        var name = inheritables[i];\r\n        code.push(\r\n          \"var value = parent.\",\r\n          inherit[name],\r\n          \";\",\r\n          \"if (value===undefined) value = parent.\",\r\n          init[name],\r\n          \";\",\r\n          \"this.\",\r\n          refresh[name],\r\n          \"(value);\"\r\n        );\r\n      }\r\n\r\n      return new Function(code.join(\"\"));\r\n    },\r\n\r\n    /**\r\n     * Attach $$refreshInheritables method stub to the given class\r\n     *\r\n     * @param clazz {Class} clazz to which the refresher should be added\r\n     */\r\n    attachRefreshInheritables(clazz) {\r\n      clazz.prototype.$$refreshInheritables = function () {\r\n        qx.core.Property.__executeOptimizedRefresh(clazz);\r\n        return this.$$refreshInheritables();\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Attach one property to class\r\n     *\r\n     * @param clazz {Class} Class to attach properties to\r\n     * @param name {String} Name of property\r\n     * @param config {Map} Configuration map of property\r\n     */\r\n    attachMethods(clazz, name, config) {\r\n      // Divide groups from \"normal\" properties\r\n      config.group\r\n        ? this.__attachGroupMethods(clazz, config, name)\r\n        : this.__attachPropertyMethods(clazz, config, name);\r\n    },\r\n\r\n    /**\r\n     * Attach group methods\r\n     *\r\n     * @param clazz {Class} Class to attach properties to\r\n     * @param config {Map} Property configuration\r\n     * @param name {String} Name of the property\r\n     */\r\n    __attachGroupMethods(clazz, config, name) {\r\n      var upname = qx.Bootstrap.firstUp(name);\r\n      var members = clazz.prototype;\r\n      var themeable = config.themeable === true;\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\r\n          qx.Bootstrap.debug(\"Generating property group: \" + name);\r\n        }\r\n      }\r\n\r\n      var setter = [];\r\n      var resetter = [];\r\n\r\n      if (themeable) {\r\n        var styler = [];\r\n        var unstyler = [];\r\n      }\r\n\r\n      var argHandler =\r\n        \"var a=arguments[0] instanceof Array?arguments[0]:arguments;\";\r\n\r\n      setter.push(argHandler);\r\n\r\n      if (themeable) {\r\n        styler.push(argHandler);\r\n      }\r\n\r\n      if (config.mode == \"shorthand\") {\r\n        var shorthand =\r\n          \"a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));\";\r\n        setter.push(shorthand);\r\n\r\n        if (themeable) {\r\n          styler.push(shorthand);\r\n        }\r\n      }\r\n\r\n      for (var i = 0, a = config.group, l = a.length; i < l; i++) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          if (!this.$$method.set[a[i]] || !this.$$method.reset[a[i]]) {\r\n            throw new Error(\r\n              \"Cannot create property group '\" +\r\n                name +\r\n                \"' including non-existing property '\" +\r\n                a[i] +\r\n                \"'!\"\r\n            );\r\n          }\r\n        }\r\n\r\n        setter.push(\"this.\", this.$$method.set[a[i]], \"(a[\", i, \"]);\");\r\n        resetter.push(\"this.\", this.$$method.reset[a[i]], \"();\");\r\n\r\n        if (themeable) {\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            if (!this.$$method.setThemed[a[i]]) {\r\n              throw new Error(\r\n                \"Cannot add the non themable property '\" +\r\n                  a[i] +\r\n                  \"' to the themable property group '\" +\r\n                  name +\r\n                  \"'\"\r\n              );\r\n            }\r\n          }\r\n\r\n          styler.push(\"this.\", this.$$method.setThemed[a[i]], \"(a[\", i, \"]);\");\r\n          unstyler.push(\"this.\", this.$$method.resetThemed[a[i]], \"();\");\r\n        }\r\n      }\r\n\r\n      // Attach setter\r\n      this.$$method.set[name] = \"set\" + upname;\r\n      members[this.$$method.set[name]] = new Function(setter.join(\"\"));\r\n\r\n      // Attach resetter\r\n      this.$$method.reset[name] = \"reset\" + upname;\r\n      members[this.$$method.reset[name]] = new Function(resetter.join(\"\"));\r\n\r\n      if (themeable) {\r\n        // Attach styler\r\n        this.$$method.setThemed[name] = \"setThemed\" + upname;\r\n        members[this.$$method.setThemed[name]] = new Function(styler.join(\"\"));\r\n\r\n        // Attach unstyler\r\n        this.$$method.resetThemed[name] = \"resetThemed\" + upname;\r\n        members[this.$$method.resetThemed[name]] = new Function(\r\n          unstyler.join(\"\")\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Attach property methods\r\n     *\r\n     * @param clazz {Class} Class to attach properties to\r\n     * @param config {Map} Property configuration\r\n     * @param name {String} Name of the property\r\n     */\r\n    __attachPropertyMethods(clazz, config, name) {\r\n      var upname = qx.Bootstrap.firstUp(name);\r\n      var members = clazz.prototype;\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\r\n          qx.Bootstrap.debug(\"Generating property wrappers: \" + name);\r\n        }\r\n      }\r\n\r\n      // Fill dispose value\r\n      if (\r\n        config.dereference === undefined &&\r\n        typeof config.check === \"string\"\r\n      ) {\r\n        config.dereference = this.__shouldBeDereferenced(config.check);\r\n      }\r\n\r\n      if (!qx.core.Environment.get(\"qx.promise\")) {\r\n        if (config.async) {\r\n          this.warn(\r\n            \"Asynchronous property \" +\r\n              clazz.classname +\r\n              \".\" +\r\n              name +\r\n              \" is switched to synchronous because qx.promise==false\"\r\n          );\r\n\r\n          config.async = false;\r\n        }\r\n        if (config.check == \"qx.Promise\") {\r\n          this.error(\r\n            \"Cannot implement check for property \" +\r\n              clazz.classname +\r\n              \".\" +\r\n              name +\r\n              \" because qx.promise==false\"\r\n          );\r\n\r\n          delete config.check;\r\n        }\r\n      }\r\n\r\n      // Check for method name conflicts\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        // Exclude qx.data.model.* because that's from marshalling and will cause conflicts to be reported\r\n        if (clazz.classname && !clazz.classname.match(/^qx.data.model/)) {\r\n          var allNames = [\r\n            \"get\" + upname,\r\n            \"set\" + upname,\r\n            \"reset\" + upname,\r\n            \"setRuntime\" + upname,\r\n            \"resetRuntime\" + upname\r\n          ];\r\n\r\n          if (config.async) {\r\n            allNames.push(\"get\" + upname + \"Async\");\r\n            allNames.push(\"set\" + upname + \"Async\");\r\n          }\r\n          if (\r\n            config.inheritable ||\r\n            config.apply ||\r\n            config.event ||\r\n            config.deferredInit\r\n          ) {\r\n            allNames.push(\"init\" + upname);\r\n          }\r\n          if (config.inheritable) {\r\n            allNames.push(\"refresh\" + upname);\r\n          }\r\n          if (config.themeable) {\r\n            allNames.push(\"getThemed\" + upname);\r\n            allNames.push(\"setThemed\" + upname);\r\n            allNames.push(\"resetThemed\" + upname);\r\n          }\r\n          if (config.check === \"Boolean\") {\r\n            allNames.push(\"is\" + upname);\r\n            allNames.push(\"toggle\" + upname);\r\n          }\r\n          allNames.forEach(function (name) {\r\n            if (clazz.superclass.prototype[name] !== undefined) {\r\n              var conflictingClass = null;\r\n              for (\r\n                var tmp = clazz.superclass;\r\n                tmp && tmp != qx.core.Object;\r\n                tmp = tmp.superclass\r\n              ) {\r\n                if (tmp.superclass.prototype[name] === undefined) {\r\n                  conflictingClass = tmp;\r\n                  break;\r\n                }\r\n              }\r\n              if (conflictingClass) {\r\n                qx.log.Logger.warn(\r\n                  \"Conflicting property method \" +\r\n                    clazz.classname +\r\n                    \".\" +\r\n                    name +\r\n                    \" with \" +\r\n                    conflictingClass.classname\r\n                );\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      var method = this.$$method;\r\n      var store = this.$$store;\r\n\r\n      store.runtime[name] = \"$$runtime_\" + name;\r\n      store.user[name] = \"$$user_\" + name;\r\n      store.theme[name] = \"$$theme_\" + name;\r\n      store.init[name] = \"$$init_\" + name;\r\n      store.inherit[name] = \"$$inherit_\" + name;\r\n      store.useinit[name] = \"$$useinit_\" + name;\r\n\r\n      var getName = (method.get[name] = \"get\" + upname);\r\n      members[method.get[name]] = new Function(\r\n        \"this.\" +\r\n          getName +\r\n          \".$$install && this.\" +\r\n          getName +\r\n          \".$$install();\" +\r\n          \"return this.\" +\r\n          getName +\r\n          \".apply(this, arguments);\"\r\n      );\r\n\r\n      if (config.async) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          if (members.hasOwnProperty(getName + \"Async\")) {\r\n            this.error(\r\n              \"Asynchronous property \" +\r\n                clazz.classname +\r\n                \".\" +\r\n                name +\r\n                \" is replacing \" +\r\n                getName +\r\n                \"Async() method in same class\"\r\n            );\r\n          } else if (members[getName + \"Async\"] !== undefined) {\r\n            this.warn(\r\n              \"Asynchronous property \" +\r\n                clazz.classname +\r\n                \".\" +\r\n                name +\r\n                \" is overriding \" +\r\n                getName +\r\n                \"Async() method\"\r\n            );\r\n          }\r\n        }\r\n        method.getAsync[name] = getName + \"Async\";\r\n        members[method.getAsync[name]] = new Function(\r\n          \"this.\" +\r\n            getName +\r\n            \".$$install && this.\" +\r\n            getName +\r\n            \".$$install.call(this);\" +\r\n            \"return this.\" +\r\n            getName +\r\n            \"Async.apply(this, arguments);\"\r\n        );\r\n      }\r\n      members[method.get[name]].$$install = function () {\r\n        qx.core.Property.__installOptimizedGetter(\r\n          clazz,\r\n          name,\r\n          \"get\",\r\n          arguments\r\n        );\r\n\r\n        if (config.async) {\r\n          qx.core.Property.__installOptimizedGetter(\r\n            clazz,\r\n            name,\r\n            \"getAsync\",\r\n            arguments\r\n          );\r\n        }\r\n      };\r\n\r\n      var setName = (method.set[name] = \"set\" + upname);\r\n      members[setName] = new Function(\r\n        \"this.\" +\r\n          setName +\r\n          \".$$install && this.\" +\r\n          setName +\r\n          \".$$install.call(this);\" +\r\n          \"return this.\" +\r\n          setName +\r\n          \".apply(this, arguments);\"\r\n      );\r\n\r\n      method.setAsync[name] = \"set\" + upname + \"Async\";\r\n      if (config.async) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          if (members.hasOwnProperty(setName + \"Async\")) {\r\n            this.error(\r\n              \"Asynchronous property \" +\r\n                clazz.classname +\r\n                \".\" +\r\n                name +\r\n                \" is replacing \" +\r\n                setName +\r\n                \"Async() method in same class\"\r\n            );\r\n          } else if (members[setName + \"Async\"] !== undefined) {\r\n            this.warn(\r\n              \"Asynchronous property \" +\r\n                clazz.classname +\r\n                \".\" +\r\n                name +\r\n                \" is overriding \" +\r\n                setName +\r\n                \"Async() method\"\r\n            );\r\n          }\r\n        }\r\n        members[setName + \"Async\"] = new Function(\r\n          \"this.\" +\r\n            setName +\r\n            \".$$install && this.\" +\r\n            setName +\r\n            \".$$install.call(this);\" +\r\n            \"return this.\" +\r\n            setName +\r\n            \"Async.apply(this, arguments);\"\r\n        );\r\n      }\r\n      method.setImpl[name] = \"$$set\" + upname + \"Impl\";\r\n      members[setName].$$install = function () {\r\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"set\");\r\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"setImpl\");\r\n        if (config.async) {\r\n          qx.core.Property.__installOptimizedSetter(clazz, name, \"setAsync\");\r\n        }\r\n      };\r\n\r\n      method.reset[name] = \"reset\" + upname;\r\n      members[method.reset[name]] = function () {\r\n        return qx.core.Property.executeOptimizedSetter(\r\n          this,\r\n          clazz,\r\n          name,\r\n          \"reset\"\r\n        );\r\n      };\r\n      members[method.reset[name]].$$install = function () {\r\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"reset\");\r\n      };\r\n\r\n      if (\r\n        config.inheritable ||\r\n        config.apply ||\r\n        config.event ||\r\n        config.deferredInit\r\n      ) {\r\n        method.init[name] = \"init\" + upname;\r\n        members[method.init[name]] = function (value) {\r\n          return qx.core.Property.executeOptimizedSetter(\r\n            this,\r\n            clazz,\r\n            name,\r\n            \"init\",\r\n            arguments\r\n          );\r\n        };\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          members[method.init[name]].$$propertyMethod = true;\r\n        }\r\n      }\r\n\r\n      if (config.inheritable) {\r\n        method.refresh[name] = \"refresh\" + upname;\r\n        members[method.refresh[name]] = function (value) {\r\n          return qx.core.Property.executeOptimizedSetter(\r\n            this,\r\n            clazz,\r\n            name,\r\n            \"refresh\",\r\n            arguments\r\n          );\r\n        };\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          members[method.refresh[name]].$$propertyMethod = true;\r\n        }\r\n      }\r\n\r\n      method.setRuntime[name] = \"setRuntime\" + upname;\r\n      members[method.setRuntime[name]] = function (value) {\r\n        return qx.core.Property.executeOptimizedSetter(\r\n          this,\r\n          clazz,\r\n          name,\r\n          \"setRuntime\",\r\n          arguments\r\n        );\r\n      };\r\n\r\n      method.resetRuntime[name] = \"resetRuntime\" + upname;\r\n      members[method.resetRuntime[name]] = function () {\r\n        return qx.core.Property.executeOptimizedSetter(\r\n          this,\r\n          clazz,\r\n          name,\r\n          \"resetRuntime\"\r\n        );\r\n      };\r\n\r\n      if (config.themeable) {\r\n        method.setThemed[name] = \"setThemed\" + upname;\r\n        members[method.setThemed[name]] = function (value) {\r\n          return qx.core.Property.executeOptimizedSetter(\r\n            this,\r\n            clazz,\r\n            name,\r\n            \"setThemed\",\r\n            arguments\r\n          );\r\n        };\r\n\r\n        method.resetThemed[name] = \"resetThemed\" + upname;\r\n        members[method.resetThemed[name]] = function () {\r\n          return qx.core.Property.executeOptimizedSetter(\r\n            this,\r\n            clazz,\r\n            name,\r\n            \"resetThemed\"\r\n          );\r\n        };\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          members[method.setThemed[name]].$$propertyMethod = true;\r\n          members[method.resetThemed[name]].$$propertyMethod = true;\r\n        }\r\n      }\r\n\r\n      if (config.check === \"Boolean\") {\r\n        members[\"toggle\" + upname] = new Function(\r\n          \"return this.\" +\r\n            method.set[name] +\r\n            \"(!this.\" +\r\n            method.get[name] +\r\n            \"())\"\r\n        );\r\n\r\n        members[\"is\" + upname] = new Function(\r\n          \"return this.\" + method.get[name] + \"()\"\r\n        );\r\n\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          members[\"toggle\" + upname].$$propertyMethod = true;\r\n          members[\"is\" + upname].$$propertyMethod = true;\r\n        }\r\n      }\r\n\r\n      // attach a flag to make generated property methods\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        members[method.get[name]].$$propertyMethod = true;\r\n        members[method.set[name]].$$propertyMethod = true;\r\n        members[method.reset[name]].$$propertyMethod = true;\r\n        members[method.setRuntime[name]].$$propertyMethod = true;\r\n        members[method.resetRuntime[name]].$$propertyMethod = true;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns if the reference for the given property check should be removed\r\n     * on dispose.\r\n     *\r\n     * @param check {var} The check of the property definition.\r\n     * @return {Boolean} If the dereference key should be set.\r\n     */\r\n    __shouldBeDereferenced(check) {\r\n      return !!this.__dereference[check];\r\n    },\r\n\r\n    /** @type {Map} Internal data field for error messages used by {@link #error} */\r\n    __errors: {\r\n      0: \"Could not change or apply init value after constructing phase!\",\r\n      1: \"Requires exactly one argument!\",\r\n      2: \"Undefined value is not allowed!\",\r\n      3: \"Does not allow any arguments!\",\r\n      4: \"Null value is not allowed!\",\r\n      5: \"Is invalid!\"\r\n    },\r\n\r\n    /**\r\n     * Error method used by the property system to report errors.\r\n     *\r\n     * @param obj {qx.core.Object} Any qooxdoo object\r\n     * @param id {Integer} Numeric error identifier\r\n     * @param property {String} Name of the property\r\n     * @param variant {String} Name of the method variant e.g. \"set\", \"reset\", ...\r\n     * @param value {var} Incoming value\r\n     */\r\n    error(obj, id, property, variant, value) {\r\n      var classname = obj.constructor.classname;\r\n      var msg =\r\n        \"Error in property \" +\r\n        property +\r\n        \" of class \" +\r\n        classname +\r\n        \" in method \" +\r\n        this.$$method[variant][property] +\r\n        \" with incoming value '\" +\r\n        value +\r\n        \"': \";\r\n\r\n      throw new Error(msg + (this.__errors[id] || \"Unknown reason: \" + id));\r\n    },\r\n\r\n    /**\r\n     * Compiles a string builder object to a function, executes the function and\r\n     * returns the return value.\r\n     *\r\n     * @param instance {Object} Instance which have called the original method\r\n     * @param members {Object} Prototype members map where the new function should be stored\r\n     * @param name {String} Name of the property\r\n     * @param variant {String} Function variant e.g. get, set, reset, ...\r\n     * @param code {Array} Array which contains the code\r\n     * @param args {arguments} Incoming arguments of wrapper method\r\n     * @return {var} Return value of the generated function\r\n     */\r\n    __unwrapFunctionFromCode(instance, members, name, variant, code, args) {\r\n      var fn = this.__installFunctionFromCode(\r\n        instance.constructor,\r\n        name,\r\n        variant,\r\n        code,\r\n        args\r\n      );\r\n\r\n      // Executing new function\r\n      if (args === undefined) {\r\n        return fn.call(instance);\r\n      } else if (qx.core.Environment.get(\"qx.debug\")) {\r\n        return fn.apply(instance, args);\r\n      } else {\r\n        return fn.call(instance, args[0]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Takes a string builder object, converts it into a function, and installs it as\r\n     * a property accessor\r\n     *\r\n     * @param clazz {Class} Class to install the method into\r\n     * @param name {String} Name of the property\r\n     * @param variant {String} Function variant e.g. get, set, reset, ...\r\n     * @param code {Array} Array which contains the code\r\n     * @param args {arguments} Incoming arguments of wrapper method\r\n     * @return {var} Return value of the generated function\r\n     */\r\n    __installFunctionFromCode(clazz, name, variant, code, args) {\r\n      var store = this.$$method[variant][name];\r\n\r\n      // Output generate code\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\r\n          qx.Bootstrap.debug(\r\n            \"Code[\" + this.$$method[variant][name] + \"]: \" + code.join(\"\")\r\n          );\r\n        }\r\n\r\n        // Overriding temporary wrapper\r\n        try {\r\n          clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\r\n        } catch (ex) {\r\n          throw new Error(\r\n            \"Malformed generated code to unwrap method: \" +\r\n              this.$$method[variant][name] +\r\n              \"\\n\" +\r\n              code.join(\"\")\r\n          );\r\n        }\r\n      } else {\r\n        clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\r\n      }\r\n\r\n      // Enable profiling code\r\n      if (qx.core.Environment.get(\"qx.aspects\")) {\r\n        clazz.prototype[store] = qx.core.Aspect.wrap(\r\n          clazz.classname + \".\" + store,\r\n          clazz.prototype[store],\r\n          \"property\"\r\n        );\r\n      }\r\n\r\n      qx.Bootstrap.setDisplayName(\r\n        clazz.prototype[store],\r\n        clazz.classname + \".prototype\",\r\n        store\r\n      );\r\n\r\n      return clazz.prototype[store];\r\n    },\r\n\r\n    /**\r\n     * Generates the optimized getter, installs it into the class prototype, and executes it\r\n     * Supported variants: get\r\n     *\r\n     * @param instance {Object} the instance which calls the method\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @return {var} Execute return value of apply generated function, generally the incoming value\r\n     */\r\n    executeOptimizedGetter(instance, clazz, name, variant) {\r\n      var code = this.__compileGetter(clazz, name, variant);\r\n      var members = clazz.prototype;\r\n      return this.__unwrapFunctionFromCode(\r\n        instance,\r\n        members,\r\n        name,\r\n        variant,\r\n        code\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Installs a getter into the class prototype, without executing it\r\n     * Supported variants: get\r\n     *\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     */\r\n    __installOptimizedGetter(clazz, name, variant) {\r\n      var code = this.__compileGetter(clazz, name, variant);\r\n      this.__installFunctionFromCode(clazz, name, variant, code);\r\n    },\r\n\r\n    /**\r\n     * Compiles a getter into a string builder array\r\n     * Supported variants: get\r\n     *\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @return {String[]} the string builder array\r\n     */\r\n    __compileGetter(clazz, name, variant) {\r\n      var config = clazz.$$properties[name];\r\n      var code = [];\r\n      var store = this.$$store;\r\n\r\n      if (variant == \"getAsync\") {\r\n        code.push(\r\n          \"return qx.Promise.resolve(this.\" + this.$$method.get[name] + \"());\"\r\n        );\r\n\r\n        return code;\r\n      }\r\n\r\n      code.push(\"if(this.\", store.runtime[name], \"!==undefined)\");\r\n      code.push(\"return this.\", store.runtime[name], \";\");\r\n\r\n      if (config.inheritable) {\r\n        code.push(\"else if(this.\", store.inherit[name], \"!==undefined)\");\r\n        code.push(\"return this.\", store.inherit[name], \";\");\r\n        code.push(\"else \");\r\n      }\r\n\r\n      code.push(\"if(this.\", store.user[name], \"!==undefined)\");\r\n      code.push(\"return this.\", store.user[name], \";\");\r\n\r\n      if (config.themeable) {\r\n        code.push(\"else if(this.\", store.theme[name], \"!==undefined)\");\r\n        code.push(\"return this.\", store.theme[name], \";\");\r\n      }\r\n\r\n      if (config.deferredInit && config.init === undefined) {\r\n        code.push(\"else if(this.\", store.init[name], \"!==undefined)\");\r\n        code.push(\"return this.\", store.init[name], \";\");\r\n      }\r\n\r\n      code.push(\"else \");\r\n\r\n      if (config.init !== undefined) {\r\n        if (config.inheritable) {\r\n          code.push(\"var init=this.\", store.init[name], \";\");\r\n\r\n          if (config.nullable) {\r\n            code.push(\"if(init==qx.core.Property.$$inherit)init=null;\");\r\n          }\r\n\r\n          code.push(\"return init;\");\r\n        } else {\r\n          code.push(\"return this.\", store.init[name], \";\");\r\n        }\r\n      } else if (config.inheritable || config.nullable) {\r\n        code.push(\"return null;\");\r\n      } else {\r\n        code.push(\r\n          'throw new Error(\"Property ',\r\n          name,\r\n          \" of an instance of \",\r\n          clazz.classname,\r\n          ' is not (yet) ready!\");'\r\n        );\r\n      }\r\n\r\n      return code;\r\n    },\r\n\r\n    /**\r\n     * Generates the optimized setter\r\n     * Supported variants: set, reset, init, refresh, style, unstyle\r\n     *\r\n     * @param instance {Object} the instance which calls the method\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @param args {arguments} Incoming arguments of wrapper method\r\n     * @return {var} Execute return value of apply generated function, generally the incoming value\r\n     */\r\n    executeOptimizedSetter(instance, clazz, name, variant, args) {\r\n      var code = this.__compileSetter(clazz, name, variant);\r\n      var members = clazz.prototype;\r\n      return this.__unwrapFunctionFromCode(\r\n        instance,\r\n        members,\r\n        name,\r\n        variant,\r\n        code,\r\n        args\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Installs a setter into the class prototype, without executing it\r\n     * Supported variants: set\r\n     *\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @return {var} Return value of the generated function\r\n     */\r\n    __installOptimizedSetter(clazz, name, variant) {\r\n      var code = this.__compileSetter(clazz, name, variant);\r\n      return this.__installFunctionFromCode(clazz, name, variant, code);\r\n    },\r\n\r\n    /**\r\n     * Compiles a setter into a string builder array\r\n     * Supported variants: set, setThemed, setRuntime, init\r\n     *\r\n     * @param instance {Object} the instance which calls the method\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @return {String[]} the string builder array\r\n     */\r\n    __compileSetter(clazz, name, variant) {\r\n      var config = clazz.$$properties[name];\r\n      var members = clazz.prototype;\r\n      var code = [];\r\n\r\n      var upname = qx.lang.String.firstUp(name);\r\n      if (variant == \"setAsync\") {\r\n        code.push(\r\n          \"return qx.Promise.resolve(this.$$set\" +\r\n            upname +\r\n            \"Impl.apply(this, arguments));\"\r\n        );\r\n\r\n        return code;\r\n      } else if (variant == \"set\") {\r\n        code.push(\r\n          \"this.$$set\" + upname + \"Impl.apply(this, arguments);\",\r\n          \"return value;\"\r\n        );\r\n\r\n        return code;\r\n      }\r\n\r\n      var incomingValue =\r\n        variant === \"setImpl\" ||\r\n        variant === \"setThemed\" ||\r\n        variant === \"setRuntime\" ||\r\n        (variant === \"init\" && config.init === undefined);\r\n      var hasCallback = config.apply || config.event || config.inheritable;\r\n\r\n      var store = this.__getStore(variant, name);\r\n\r\n      this.__emitIsEqualFunction(code, clazz, config, name);\r\n\r\n      this.__emitSetterPreConditions(\r\n        code,\r\n        config,\r\n        name,\r\n        variant,\r\n        incomingValue\r\n      );\r\n\r\n      if (incomingValue || hasCallback) {\r\n        this.__emitOldValue(code, config, name);\r\n      }\r\n\r\n      if (incomingValue) {\r\n        this.__emitIncomingValueTransformation(code, clazz, config, name);\r\n      }\r\n\r\n      if (hasCallback) {\r\n        this.__emitOldNewComparison(code, incomingValue, store, variant);\r\n      }\r\n\r\n      if (config.inheritable) {\r\n        code.push(\"var inherit=prop.$$inherit;\");\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (incomingValue) {\r\n          this.__emitIncomingValueValidation(\r\n            code,\r\n            config,\r\n            clazz,\r\n            name,\r\n            variant\r\n          );\r\n        }\r\n      }\r\n\r\n      if (!hasCallback) {\r\n        this.__emitStoreValue(code, name, variant, incomingValue);\r\n      } else {\r\n        this.__emitStoreComputedValue(\r\n          code,\r\n          config,\r\n          name,\r\n          variant,\r\n          incomingValue\r\n        );\r\n      }\r\n\r\n      if (config.inheritable) {\r\n        this.__emitStoreInheritedPropertyValue(code, config, name, variant);\r\n      } else if (hasCallback) {\r\n        this.__emitNormalizeUndefinedValues(code, config, name, variant);\r\n      }\r\n\r\n      if (hasCallback) {\r\n        // Emit callback and event firing; Refreshing children (5th parameter) requires the parent/children interface\r\n        this.__emitCallCallback(\r\n          code,\r\n          config,\r\n          name,\r\n          variant,\r\n          !!(config.inheritable && members._getChildren)\r\n        );\r\n      }\r\n\r\n      // Return value\r\n      if (incomingValue) {\r\n        code.unshift(\"function set(value){\");\r\n        code.push(\"}\");\r\n        if (\r\n          qx.core.Environment.get(\"qx.promise\") &&\r\n          (!config.check || config.check != \"qx.Promise\")\r\n        ) {\r\n          code.push(\r\n            \"var promise;\",\r\n            \"if (qx.Promise.isPromise(value)) \",\r\n            \"promise = value.then(set.bind(this));\",\r\n            \"else \",\r\n            \"promise = set.apply(this, arguments);\"\r\n          );\r\n\r\n          if (variant == \"setImpl\") {\r\n            code.push(\"return promise;\");\r\n          } else {\r\n            code.push(\"return value;\");\r\n          }\r\n        } else {\r\n          code.push(\"set.apply(this, arguments);\", \"return value;\");\r\n        }\r\n      }\r\n\r\n      return code;\r\n    },\r\n\r\n    /**\r\n     * Get the object to store the value for the given variant\r\n     *\r\n     * @param variant {String} Method variant.\r\n     * @param name {String} name of the property\r\n     *\r\n     * @return {Object} the value store\r\n     */\r\n    __getStore(variant, name) {\r\n      if (variant === \"setRuntime\" || variant === \"resetRuntime\") {\r\n        var store = this.$$store.runtime[name];\r\n      } else if (variant === \"setThemed\" || variant === \"resetThemed\") {\r\n        store = this.$$store.theme[name];\r\n      } else if (variant === \"init\") {\r\n        store = this.$$store.init[name];\r\n      } else {\r\n        store = this.$$store.user[name];\r\n      }\r\n\r\n      return store;\r\n    },\r\n\r\n    /**\r\n     * Emit code for the equality check evaluation\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     */\r\n    __emitIsEqualFunction(code, clazz, config, name) {\r\n      code.push(\"var equ=\");\r\n\r\n      if (typeof config.isEqual === \"function\") {\r\n        code.push(\r\n          \"function(a,b){return !!\",\r\n          clazz.classname,\r\n          \".$$properties.\",\r\n          name,\r\n          \".isEqual.call(this,a,b);};\"\r\n        );\r\n      } else if (typeof config.isEqual === \"string\") {\r\n        var members = clazz.prototype;\r\n        // Name of member?\r\n        if (members[config.isEqual] !== undefined) {\r\n          code.push(\"this.\", config.isEqual, \";\");\r\n        }\r\n        // 'inline' code\r\n        else {\r\n          code.push(\"function(a,b){return !!(\", config.isEqual, \");};\");\r\n        }\r\n      } else if (typeof config.isEqual === \"undefined\") {\r\n        code.push(\"function(a,b){return a===b;};\");\r\n      } else {\r\n        throw new Error(\r\n          \"Invalid type for 'isEqual' attribute \" +\r\n            \"of property '\" +\r\n            name +\r\n            \"' in class '\" +\r\n            clazz.classname +\r\n            \"'\"\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to check the arguments preconditions\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\r\n     */\r\n    __emitSetterPreConditions(code, config, name, variant, incomingValue) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        code.push(\"var prop=qx.core.Property;\");\r\n\r\n        if (variant === \"init\") {\r\n          code.push(\r\n            'if(this.$$initialized)prop.error(this,0,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n        }\r\n\r\n        if (variant === \"refresh\") {\r\n          // do nothing\r\n          // refresh() is internal => no arguments test\r\n          // also note that refresh() supports \"undefined\" values\r\n        } else if (incomingValue) {\r\n          // Check argument length\r\n          code.push(\r\n            'if(arguments.length!==1)prop.error(this,1,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n\r\n          // Undefined check\r\n          code.push(\r\n            'if(value===undefined)prop.error(this,2,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n        } else {\r\n          // Check argument length\r\n          code.push(\r\n            'if(arguments.length!==0)prop.error(this,3,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n        }\r\n      } else {\r\n        if (!config.nullable || config.check || config.inheritable) {\r\n          code.push(\"var prop=qx.core.Property;\");\r\n        }\r\n\r\n        // Undefined check\r\n        if (variant === \"setImpl\") {\r\n          code.push(\r\n            'if(value===undefined)prop.error(this,2,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to apply the \"validate\" and \"transform\" config keys.\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     */\r\n    __emitIncomingValueTransformation(code, clazz, config, name) {\r\n      // Call user-provided transform method, if one is provided.  Transform\r\n      // method should either throw an error or return the new value.\r\n      if (config.transform) {\r\n        code.push(\"value=this.\", config.transform, \"(value, old);\");\r\n      }\r\n\r\n      // Call user-provided validate method, if one is provided.  Validate\r\n      // method should either throw an error or do nothing.\r\n      if (config.validate) {\r\n        // if it is a string\r\n        if (typeof config.validate === \"string\") {\r\n          code.push(\"this.\", config.validate, \"(value);\");\r\n          // if its a function otherwise\r\n        } else if (config.validate instanceof Function) {\r\n          code.push(clazz.classname, \".$$properties.\", name);\r\n          code.push(\".validate.call(this, value);\");\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code, which returns if the incoming value equals the current value.\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\r\n     * @param store {Object} The data store to use for the incoming value\r\n     * @param variant {String} Method variant.\r\n     */\r\n    __emitOldNewComparison(code, incomingValue, store, variant) {\r\n      var resetValue =\r\n        variant === \"reset\" ||\r\n        variant === \"resetThemed\" ||\r\n        variant === \"resetRuntime\";\r\n\r\n      if (incomingValue) {\r\n        code.push(\"if(equ.call(this,this.\", store, \",value))return value;\");\r\n      } else if (resetValue) {\r\n        code.push(\"if(this.\", store, \"===undefined)return;\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code, which performs validation of the incoming value according to\r\n     * the \"nullable\", \"check\" and \"inheritable\" config keys.\r\n     *\r\n     * @signature function(code, config, clazz, name, variant)\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param clazz {Class} the class which originally defined the property\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     */\r\n    __emitIncomingValueValidation: qx.core.Environment.select(\"qx.debug\", {\r\n      true(code, config, clazz, name, variant) {\r\n        // Null check\r\n        if (!config.nullable) {\r\n          code.push(\r\n            'if(value===null)prop.error(this,4,\"',\r\n            name,\r\n            '\",\"',\r\n            variant,\r\n            '\",value);'\r\n          );\r\n        }\r\n\r\n        // Processing check definition\r\n        if (config.check !== undefined) {\r\n          code.push(\r\n            \"var msg = \\\"Invalid incoming value for property '\" +\r\n              name +\r\n              \"' of class '\" +\r\n              clazz.classname +\r\n              \"'\\\";\"\r\n          );\r\n\r\n          // Accept \"null\"\r\n          if (config.nullable) {\r\n            code.push(\"if(value!==null)\");\r\n          }\r\n\r\n          // Inheritable properties always accept \"inherit\" as value\r\n          if (config.inheritable) {\r\n            code.push(\"if(value!==inherit)\");\r\n          }\r\n\r\n          code.push(\"if(\");\r\n\r\n          if (this.__checks[config.check] !== undefined) {\r\n            code.push(\"!(\", this.__checks[config.check], \")\");\r\n          } else if (qx.Class.isDefined(config.check)) {\r\n            code.push(\r\n              'qx.core.Assert.assertInstance(value, qx.Class.getByName(\"',\r\n              config.check,\r\n              '\"), msg)'\r\n            );\r\n          } else if (qx.Interface && qx.Interface.isDefined(config.check)) {\r\n            code.push(\r\n              'qx.core.Assert.assertInterface(value, qx.Interface.getByName(\"',\r\n              config.check,\r\n              '\"), msg)'\r\n            );\r\n          } else if (typeof config.check === \"function\") {\r\n            code.push(\"!\", clazz.classname, \".$$properties.\", name);\r\n            code.push(\".check.call(this, value)\");\r\n          } else if (typeof config.check === \"string\") {\r\n            code.push(\"!(\", config.check, \")\");\r\n          } else if (config.check instanceof Array) {\r\n            code.push(\r\n              \"qx.core.Assert.assertInArray(value, \",\r\n              clazz.classname,\r\n              \".$$properties.\",\r\n              name,\r\n              \".check, msg)\"\r\n            );\r\n          } else {\r\n            throw new Error(\r\n              \"Could not add check to property \" +\r\n                name +\r\n                \" of class \" +\r\n                clazz.classname\r\n            );\r\n          }\r\n\r\n          code.push(')prop.error(this,5,\"', name, '\",\"', variant, '\",value);');\r\n        }\r\n      },\r\n\r\n      false: undefined\r\n    }),\r\n\r\n    /**\r\n     * Emit code to store the incoming value\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\r\n     */\r\n    __emitStoreValue(code, name, variant, incomingValue) {\r\n      if (variant === \"setRuntime\") {\r\n        code.push(\"this.\", this.$$store.runtime[name], \"=value;\");\r\n      } else if (variant === \"resetRuntime\") {\r\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\r\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\r\n      } else if (variant === \"setImpl\") {\r\n        code.push(\"this.\", this.$$store.user[name], \"=value;\");\r\n      } else if (variant === \"reset\") {\r\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\r\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\r\n      } else if (variant === \"setThemed\") {\r\n        code.push(\"this.\", this.$$store.theme[name], \"=value;\");\r\n      } else if (variant === \"resetThemed\") {\r\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\r\n        code.push(\"delete this.\", this.$$store.theme[name], \";\");\r\n      } else if (variant === \"init\" && incomingValue) {\r\n        code.push(\"this.\", this.$$store.init[name], \"=value;\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to store the incoming value and compute the \"old\" and \"computed\"\r\n     * values.\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\r\n     */\r\n    __emitStoreComputedValue(code, config, name, variant, incomingValue) {\r\n      code.push(\"var computed;\");\r\n\r\n      // OLD = RUNTIME VALUE\r\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\r\n\r\n      if (variant === \"setRuntime\") {\r\n        // Replace it with new value\r\n        code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\r\n      } else if (variant === \"resetRuntime\") {\r\n        // Delete field\r\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\r\n\r\n        // Complex computation of new value\r\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\r\n        code.push(\"computed=this.\", this.$$store.user[name], \";\");\r\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined)\");\r\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\r\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\r\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\r\n        code.push(\"}\");\r\n      } else {\r\n        // Use runtime value as it has higher priority\r\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\r\n\r\n        // Store incoming value\r\n        if (variant === \"setImpl\") {\r\n          code.push(\"this.\", this.$$store.user[name], \"=value;\");\r\n        } else if (variant === \"reset\") {\r\n          code.push(\"delete this.\", this.$$store.user[name], \";\");\r\n        } else if (variant === \"setThemed\") {\r\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\r\n        } else if (variant === \"resetThemed\") {\r\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\r\n        } else if (variant === \"init\" && incomingValue) {\r\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\r\n        }\r\n      }\r\n\r\n      code.push(\"}\");\r\n\r\n      // OLD = USER VALUE\r\n      code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\r\n\r\n      if (variant === \"setImpl\") {\r\n        // Replace it with new value\r\n        code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\r\n      } else if (variant === \"reset\") {\r\n        // Delete field\r\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\r\n\r\n        // Complex computation of new value\r\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\r\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\r\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\r\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\r\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\r\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\r\n        code.push(\"}\");\r\n      } else {\r\n        if (variant === \"setRuntime\") {\r\n          // Use runtime value where it has higher priority\r\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\r\n        } else if (config.inheritable) {\r\n          // Use user value where it has higher priority\r\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\r\n        } else {\r\n          // Use user value where it has higher priority\r\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\r\n        }\r\n\r\n        // Store incoming value\r\n        if (variant === \"setThemed\") {\r\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\r\n        } else if (variant === \"resetThemed\") {\r\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\r\n        } else if (variant === \"init\" && incomingValue) {\r\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\r\n        }\r\n      }\r\n\r\n      code.push(\"}\");\r\n\r\n      // OLD = THEMED VALUE\r\n      if (config.themeable) {\r\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined){\");\r\n\r\n        if (variant === \"setRuntime\") {\r\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\r\n        } else if (variant === \"setImpl\") {\r\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\r\n        }\r\n\r\n        // reset() is impossible, because the user has higher priority than\r\n        // the themed value, so the themed value has no chance to ever get used,\r\n        // when there is an user value, too.\r\n        else if (variant === \"setThemed\") {\r\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\r\n        } else if (variant === \"resetThemed\") {\r\n          // Delete entry\r\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\r\n\r\n          // Fallback to init value\r\n          code.push(\"if(this.\", this.$$store.init[name], \"!==undefined){\");\r\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\r\n          code.push(\"}\");\r\n        } else if (variant === \"init\") {\r\n          if (incomingValue) {\r\n            code.push(\"this.\", this.$$store.init[name], \"=value;\");\r\n          }\r\n\r\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\r\n        } else if (variant === \"refresh\") {\r\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\r\n        }\r\n\r\n        code.push(\"}\");\r\n      }\r\n\r\n      // OLD = INIT VALUE\r\n      code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\r\n\r\n      if (variant === \"init\") {\r\n        if (incomingValue) {\r\n          code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\r\n        } else {\r\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n        }\r\n\r\n        // useinit flag is already initialized\r\n      }\r\n\r\n      // reset(), resetRuntime() and resetStyle() are impossible, because the user and themed values have a\r\n      // higher priority than the init value, so the init value has no chance to ever get used,\r\n      // when there is an user or themed value, too.\r\n      else if (\r\n        variant === \"setImpl\" ||\r\n        variant === \"setRuntime\" ||\r\n        variant === \"setThemed\" ||\r\n        variant === \"refresh\"\r\n      ) {\r\n        code.push(\"delete this.\", this.$$store.useinit[name], \";\");\r\n\r\n        if (variant === \"setRuntime\") {\r\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\r\n        } else if (variant === \"setImpl\") {\r\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\r\n        } else if (variant === \"setThemed\") {\r\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\r\n        } else if (variant === \"refresh\") {\r\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n        }\r\n      }\r\n\r\n      code.push(\"}\");\r\n\r\n      // OLD = NONE\r\n\r\n      // reset(), resetRuntime() and resetStyle() are impossible because otherwise there\r\n      // is already an old value\r\n      if (\r\n        variant === \"setImpl\" ||\r\n        variant === \"setRuntime\" ||\r\n        variant === \"setThemed\" ||\r\n        variant === \"init\"\r\n      ) {\r\n        code.push(\"else{\");\r\n\r\n        if (variant === \"setRuntime\") {\r\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\r\n        } else if (variant === \"setImpl\") {\r\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\r\n        } else if (variant === \"setThemed\") {\r\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\r\n        } else if (variant === \"init\") {\r\n          if (incomingValue) {\r\n            code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\r\n          } else {\r\n            code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n          }\r\n\r\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\r\n        }\r\n\r\n        // refresh() will work with the undefined value, later\r\n        code.push(\"}\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to compute the \"old\" value.\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     */\r\n    __emitOldValue(code, config, name) {\r\n      if (config.inheritable) {\r\n        code.push(\"var old=this.\", this.$$store.inherit[name], \";\");\r\n      } else {\r\n        code.push(\"var old;\");\r\n      }\r\n\r\n      // OLD = RUNTIME VALUE\r\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\r\n      code.push(\"old=this.\", this.$$store.runtime[name], \";\");\r\n      code.push(\"}\");\r\n\r\n      // OLD = USER VALUE\r\n      if (!config.inheritable) {\r\n        code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\r\n        code.push(\"old=this.\", this.$$store.user[name], \";\");\r\n        code.push(\"}\");\r\n\r\n        // OLD = THEMED VALUE\r\n        if (config.themeable) {\r\n          code.push(\r\n            \"else if(this.\",\r\n            this.$$store.theme[name],\r\n            \"!==undefined){\"\r\n          );\r\n\r\n          code.push(\"old=this.\", this.$$store.theme[name], \";\");\r\n          code.push(\"}\");\r\n        }\r\n\r\n        // OLD = INIT VALUE\r\n        code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\r\n        code.push(\"old=this.\", this.$$store.init[name], \";\");\r\n        code.push(\"}\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to store the value of an inheritable property\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     */\r\n    __emitStoreInheritedPropertyValue(code, config, name, variant) {\r\n      code.push(\"if(computed===undefined||computed===inherit){\");\r\n\r\n      if (variant === \"refresh\") {\r\n        code.push(\"computed=value;\");\r\n      } else {\r\n        code.push(\r\n          \"var pa=this.getLayoutParent();if(pa)computed=pa.\",\r\n          this.$$store.inherit[name],\r\n          \";\"\r\n        );\r\n      }\r\n\r\n      // Fallback to init value if inheritance was unsuccessful\r\n      code.push(\"if((computed===undefined||computed===inherit)&&\");\r\n      code.push(\"this.\", this.$$store.init[name], \"!==undefined&&\");\r\n      code.push(\"this.\", this.$$store.init[name], \"!==inherit){\");\r\n      code.push(\"computed=this.\", this.$$store.init[name], \";\");\r\n      code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\r\n      code.push(\"}else{\");\r\n      code.push(\"delete this.\", this.$$store.useinit[name], \";}\");\r\n\r\n      code.push(\"}\");\r\n\r\n      // Compare old/new computed value\r\n      code.push(\"if(equ.call(this,old,computed))return value;\");\r\n\r\n      // Note: At this point computed can be \"inherit\" or \"undefined\".\r\n\r\n      // Normalize \"inherit\" to undefined and delete inherited value\r\n      code.push(\"if(computed===inherit){\");\r\n      code.push(\r\n        \"computed=undefined;delete this.\",\r\n        this.$$store.inherit[name],\r\n        \";\"\r\n      );\r\n\r\n      code.push(\"}\");\r\n\r\n      // Only delete inherited value\r\n      code.push(\"else if(computed===undefined)\");\r\n      code.push(\"delete this.\", this.$$store.inherit[name], \";\");\r\n\r\n      // Store inherited value\r\n      code.push(\"else this.\", this.$$store.inherit[name], \"=computed;\");\r\n\r\n      // Protect against normalization\r\n      code.push(\"var backup=computed;\");\r\n\r\n      // After storage finally normalize computed and old value\r\n      if (config.init !== undefined && variant !== \"init\") {\r\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\r\n      } else {\r\n        code.push(\"if(old===undefined)old=null;\");\r\n      }\r\n      code.push(\"if(computed===undefined||computed==inherit)computed=null;\");\r\n    },\r\n\r\n    /**\r\n     * Emit code to normalize the old and incoming values from undefined to\r\n     * <code>null</code>.\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     * @param variant {String} Method variant.\r\n     */\r\n    __emitNormalizeUndefinedValues(code, config, name, variant) {\r\n      // Properties which are not inheritable have no possibility to get\r\n      // undefined at this position. (Hint: set(), setRuntime() and setThemed() only allow non undefined values)\r\n      if (\r\n        variant !== \"setImpl\" &&\r\n        variant !== \"setRuntime\" &&\r\n        variant !== \"setThemed\"\r\n      ) {\r\n        code.push(\"if(computed===undefined)computed=null;\");\r\n      }\r\n\r\n      // Compare old/new computed value\r\n      code.push(\"if(equ.call(this,old,computed))return value;\");\r\n\r\n      // Normalize old value\r\n      if (config.init !== undefined && variant !== \"init\") {\r\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\r\n      } else {\r\n        code.push(\"if(old===undefined)old=null;\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Emit code to call the apply method and fire the change event\r\n     *\r\n     * @param code {String[]} String array to append the code to\r\n     * @param config {Object} The property configuration map\r\n     * @param name {String} name of the property\r\n     * @param variant {String} variant of the method e.g. setThemed\r\n     * @param refresh {Boolean} if true, emit code to update the inherited values of child objects\r\n     */\r\n    __emitCallCallback(code, config, name, variant, refresh) {\r\n      // Execute user configured setter\r\n      code.push(\"var self=this;\", \"var promise;\");\r\n      if (config.apply) {\r\n        code.push(\r\n          \"promise = this.\",\r\n          config.apply,\r\n          '(computed, old, \"',\r\n          name,\r\n          '\", \"',\r\n          variant,\r\n          '\");'\r\n        );\r\n      }\r\n\r\n      if (config.async) {\r\n        code.push(\r\n          \"function fire() {\",\r\n          \"var promiseData = qx.Promise.resolve(computed);\",\r\n          \"var promise = promiseData;\"\r\n        );\r\n\r\n        // Fire event\r\n        if (config.event) {\r\n          code.push(\r\n            \"var reg=qx.event.Registration;\",\r\n            \"if(reg.hasListener(self, '\",\r\n            config.event,\r\n            \"')) {\",\r\n            \"promise = reg.fireEventAsync(self, '\",\r\n            config.event,\r\n            \"', qx.event.type.Data, [computed, old]\",\r\n            \");\",\r\n            \"promise = promise.then(function() { return computed; });\",\r\n            \"}\",\r\n            \"if(reg.hasListener(self, '\",\r\n            config.event,\r\n            \"Async'))\",\r\n            \"promise = promise.then(function() {\",\r\n            \"return reg.fireEventAsync(self, '\",\r\n            config.event,\r\n            \"Async', qx.event.type.Data, [promiseData, old]\",\r\n            \");\",\r\n            \"});\"\r\n          );\r\n        }\r\n\r\n        // Emit code to update the inherited values of child objects\r\n        if (refresh) {\r\n          code.push(\r\n            \"var a=self._getChildren();\",\r\n            \"if(a)\",\r\n            \"for(var i=0,l=a.length;i<l;i++){\",\r\n            \"if(a[i].\",\r\n            this.$$method.refresh[name],\r\n            \")\",\r\n            \"a[i].\",\r\n            this.$$method.refresh[name],\r\n            \"(backup);\",\r\n            \"}\"\r\n          );\r\n        }\r\n\r\n        code.push(\"return promise;\", \"}\");\r\n      } else {\r\n        code.push(\"function fire() {\", \"  var tracker={};\");\r\n\r\n        // Fire event\r\n        if (config.event) {\r\n          code.push(\r\n            \"var reg=qx.event.Registration;\",\r\n\r\n            \"if(reg.hasListener(self, '\",\r\n            config.event,\r\n            \"'))\",\r\n            \"qx.event.Utils.track(tracker, reg.fireEvent(self, '\",\r\n            config.event,\r\n            \"', qx.event.type.Data, [computed, old]\",\r\n            \"));\"\r\n          );\r\n\r\n          if (qx.core.Environment.get(\"qx.promise\")) {\r\n            code.push(\r\n              \"if(reg.hasListener(self, '\",\r\n              config.event,\r\n              \"Async'))\",\r\n              \"qx.event.Utils.then(tracker, function() {\\n\" +\r\n                \"  return reg.fireEventAsync(self, '\",\r\n              config.event,\r\n              \"Async', qx.event.type.Data, [qx.Promise.resolve(computed), old]\",\r\n              \");\\n\" + \"});\"\r\n            );\r\n          }\r\n        }\r\n        // Emit code to update the inherited values of child objects\r\n        if (refresh) {\r\n          code.push(\r\n            \"var a=self._getChildren();\",\r\n            \"if(a)\",\r\n            \"for(var i=0,l=a.length;i<l;i++){\",\r\n            \"if(a[i].\",\r\n            this.$$method.refresh[name],\r\n            \")\",\r\n            \"a[i].\",\r\n            this.$$method.refresh[name],\r\n            \"(backup);\",\r\n            \"}\"\r\n          );\r\n        }\r\n\r\n        code.push(\r\n          \"if (tracker.promise)\\n\",\r\n          \"  return tracker.promise.then(function() { return computed; });\",\r\n          \"return computed;\",\r\n          \"}\"\r\n        );\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"qx.promise\")) {\r\n        code.push(\r\n          \"if(qx.Promise.isPromise(promise)) \" + \"return promise.then(fire); \"\r\n        );\r\n      }\r\n      code.push(\"return fire();\");\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}