{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__gatherDependency",
    "event",
    "type",
    "Data",
    "dispatch",
    "Direct",
    "core",
    "Environment",
    "get",
    "Promise",
    "__checks",
    "Boolean",
    "String",
    "Number",
    "Integer",
    "PositiveNumber",
    "PositiveInteger",
    "Error",
    "RegExp",
    "Object",
    "Array",
    "Map",
    "Function",
    "Date",
    "Node",
    "Element",
    "Document",
    "Window",
    "Event",
    "Class",
    "Mixin",
    "Interface",
    "Theme",
    "Color",
    "Decorator",
    "Font",
    "__dereference",
    "$$inherit",
    "$$store",
    "runtime",
    "user",
    "theme",
    "inherit",
    "init",
    "useinit",
    "$$method",
    "getAsync",
    "set",
    "setImpl",
    "setAsync",
    "reset",
    "refresh",
    "setRuntime",
    "resetRuntime",
    "setThemed",
    "resetThemed",
    "$$allowedKeys",
    "name",
    "dereference",
    "inheritable",
    "nullable",
    "themeable",
    "refine",
    "apply",
    "check",
    "transform",
    "async",
    "deferredInit",
    "validate",
    "isEqual",
    "$$allowedGroupKeys",
    "group",
    "mode",
    "$$inheritable",
    "__executeOptimizedRefresh",
    "clazz",
    "inheritables",
    "__getInheritablesOfClass",
    "length",
    "refresher",
    "__createRefresher",
    "prototype",
    "$$refreshInheritables",
    "properties",
    "$$properties",
    "push",
    "superclass",
    "code",
    "i",
    "l",
    "join",
    "attachRefreshInheritables",
    "Property",
    "attachMethods",
    "config",
    "__attachGroupMethods",
    "__attachPropertyMethods",
    "upname",
    "firstUp",
    "members",
    "setter",
    "resetter",
    "styler",
    "unstyler",
    "argHandler",
    "shorthand",
    "a",
    "undefined",
    "__shouldBeDereferenced",
    "warn",
    "classname",
    "error",
    "method",
    "store",
    "getName",
    "$$install",
    "__installOptimizedGetter",
    "arguments",
    "setName",
    "__installOptimizedSetter",
    "executeOptimizedSetter",
    "value",
    "__errors",
    "obj",
    "id",
    "property",
    "variant",
    "constructor",
    "msg",
    "__unwrapFunctionFromCode",
    "instance",
    "args",
    "fn",
    "__installFunctionFromCode",
    "call",
    "setDisplayName",
    "executeOptimizedGetter",
    "__compileGetter",
    "__compileSetter",
    "lang",
    "incomingValue",
    "hasCallback",
    "__getStore",
    "__emitIsEqualFunction",
    "__emitSetterPreConditions",
    "__emitOldValue",
    "__emitIncomingValueTransformation",
    "__emitOldNewComparison",
    "__emitStoreValue",
    "__emitStoreComputedValue",
    "__emitStoreInheritedPropertyValue",
    "__emitNormalizeUndefinedValues",
    "__emitCallCallback",
    "_getChildren",
    "unshift",
    "resetValue",
    "__emitIncomingValueValidation",
    "select",
    "isDefined"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/Property.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Internal class for handling of dynamic properties. Should only be used\n * through the methods provided by {@link qx.Class}.\n *\n * For a complete documentation of properties take a look at\n * http://qooxdoo.org/docs/#core/property_features.md.\n *\n *\n * *Normal properties*\n *\n * The <code>properties</code> key in the class definition map of {@link qx.Class#define}\n * is used to generate the properties.\n *\n * Valid keys of a property definition are:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>check</th><td>Array, String, Function</td><td>\n *     The check is used to check the type the incoming value of a property. This will only\n *     be executed in the source version. The build version will not contain the checks.\n *     The check can be:\n *     <ul>\n *       <li>a custom check function. The function takes the incoming value as a parameter and must\n *           return a boolean value to indicate whether the values is valid.\n *       </li>\n *       <li>inline check code as a string e.g. <code>\"value &gt; 0 && value &lt; 100\"</code></li>\n *       <li>a class name e.g. <code>qx.ui.form.Button</code></li>\n *       <li>a name of an interface the value must implement</li>\n *       <li>an array of all valid values</li>\n *       <li>one of the predefined checks: Boolean, String, Number, Integer, Float, Double,\n *           Object, Array, Map, Class, Mixin, Interface, Theme, Error, RegExp, Function,\n *           Date, Node, Element, Document, Window, Event\n *       </li>\n *     <ul>\n *   </td></tr>\n *   <tr><th>init</th><td>var</td><td>\n *     Sets the default/initial value of the property. If no property value is set or the property\n *     gets reset, the getter will return the <code>init</code> value.\n *   </td></tr>\n *   <tr><th>apply</th><td>String</td><td>\n *     On change of the property value the method of the specified name will be called. The signature of\n *     the method is <code>function(newValue, oldValue, propertyName)</code>. It is conventional to name\n *     the callback <code>_apply</code> + <i>PropertyName</i>, with the property name camel-cased (e.g.\n *     \"<i>_applyFooBar</i>\" for a property <i>fooBar</i>).\n *   </td></tr>\n *   <tr><th>event</th><td>String</td><td>\n *     On change of the property value an event with the given name will be dispatched. The event type is\n *     {@link qx.event.type.Data}.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n *   <tr><th>inheritable</th><td>Boolean</td><td>\n *     Whether the property value should be inheritable. If the property does not have an user defined or an\n *     init value, the property will try to get the value from the parent of the current object.\n *   </td></tr>\n *   <tr><th>nullable</th><td>Boolean</td><td>\n *     Whether <code>null</code> is an allowed value of the property. This is complementary to the check\n *     defined using the <code>check</code> key.\n *   </td></tr>\n *   <tr><th>refine</th><td>Boolean</td><td>\n *     Whether the property definition is a refinement of a property in one of the super classes of the class.\n *     Only the <code>init</code> value can be changed using refine.\n *   </td></tr>\n *   <tr><th>transform</th><td>String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value, oldValue)</code>.\n *     The parameter <code>value</code> is the value passed to the setter, the\n *     parameter <code>oldValue</code> is the current value, or undefined if no value\n *     has been set previously.\n *     The function must return the modified or unmodified value.\n *     Transformation occurs before the check function, so both may be\n *     specified if desired.  Alternatively, the transform function may throw\n *     an error if the value passed to it is invalid.\n *   </td></tr>\n *   <tr><th>validate</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value)</code>.\n *     The parameter <code>value</code> is the value passed to the setter.\n *     If the validation fails, an <code>qx.core.ValidationError</code> should\n *     be thrown by the validation function. Otherwise, just do nothing in the\n *     function.<br>\n *     If a string is given, the string should hold a reference to a member\n *     method.<br>\n *     <code>\"<i>methodname</i>\"</code> for example\n *     <code>\"__validateProperty\"</code><br>\n *     There are some default validators in the {@link qx.util.Validate} class.\n *     See this documentation for usage examples.\n *   </td></tr>\n *   <tr><th>dereference</th><td>Boolean</td><td>\n *     By default, the references to the values (current, init, ...) of the\n *     property will be stored as references on the object. When disposing\n *     this object, the references will not be deleted. Setting the\n *     dereference key to true tells the property system to delete all\n *     connections made by this property on dispose. This can be necessary for\n *     disconnecting DOM objects to allow the garbage collector to work\n *     properly.\n *   </td></tr>\n *   <tr><th>deferredInit</th><td>Boolean</td><td>\n *     Allow for a deferred initialization for reference types. Defaults to false.\n *   </td></tr>\n *   <tr><th>isEqual</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called to test if two values are equal. These checks for equality are\n *     performed by the Property-System to decide whether further actions (like\n *     e.g. calling applier methods or firing of events) are needed.\n *     The signature of the method is <code>function(valueA, valueB)</code>.\n *     <br/>\n *     The <i>isEqual</i>-value can be:\n *     <ul>\n *       <li>a custom check function.\n *           The function takes two values as parameter and must return a\n *           boolean value to indicate whether the values are considered\n *           equal e.g. <code>function (a, b) { return Object.is(a, b); }</code>.</li>\n *       <li>inline check code as a string\n *           which will be invoked with two parameters <code>a</code> and\n *           <code>b</code> and results in a boolean value to indicate whether\n *           the values are equal e.g. <code>\"a.length() == b.length()\"</code>.</li>\n *       <li>reference to a member method as string\n *           <code>\"<i>methodname</i>\"</code> which will be invoked with two\n *           parameters and returns a boolean value indicating whether the two\n *           values are considered equal for example <code>\"__areTheSame\"</code>.</li>\n *     </ul>\n *     The default implementation (if this key is undefined) will check the\n *     equality by using the <i>identity</i> operator (===) as if defined like\n *     <code>\"a===b\"</code>.\n *   </td></tr>\n * </table>\n *\n * *Property groups*\n *\n * Property groups are defined in a similar way but support a different set of keys:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>group</th><td>String[]</td><td>\n *     A list of property names which should be set using the property group.\n *   </td></tr>\n *   <tr><th>mode</th><td>String</td><td>\n *     If mode is set to <code>\"shorthand\"</code>, the properties can be set using a CSS like shorthand mode.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n * </table>\n *\n * @internal\n * @ignore(qx.Interface)\n */\nqx.Bootstrap.define(\"qx.core.Property\", {\n  statics: {\n    /**\n     * This is a method which does nothing than gathering dependencies for the\n     * module system. Calling this method is useless because it does nothing.\n     */\n    __gatherDependency() {\n      if (qx.core.Environment.get(\"module.events\")) {\n        qx.event.type.Data;\n        qx.event.dispatch.Direct;\n      }\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        qx.Promise;\n      }\n    },\n\n    /**\n     * Built-in checks\n     * The keys could be used in the check of the properties\n     */\n    __checks: {\n      Boolean: \"qx.core.Assert.assertBoolean(value, msg) || true\",\n      String: \"qx.core.Assert.assertString(value, msg) || true\",\n\n      Number: \"qx.core.Assert.assertNumber(value, msg) || true\",\n      Integer: \"qx.core.Assert.assertInteger(value, msg) || true\",\n      PositiveNumber: \"qx.core.Assert.assertPositiveNumber(value, msg) || true\",\n      PositiveInteger:\n        \"qx.core.Assert.assertPositiveInteger(value, msg) || true\",\n\n      Error: \"qx.core.Assert.assertInstance(value, Error, msg) || true\",\n      RegExp: \"qx.core.Assert.assertInstance(value, RegExp, msg) || true\",\n\n      Object: \"qx.core.Assert.assertObject(value, msg) || true\",\n      Array: \"qx.core.Assert.assertArray(value, msg) || true\",\n      Map: \"qx.core.Assert.assertMap(value, msg) || true\",\n\n      Function: \"qx.core.Assert.assertFunction(value, msg) || true\",\n      Date: \"qx.core.Assert.assertInstance(value, Date, msg) || true\",\n      Node: \"value !== null && value.nodeType !== undefined\",\n      Element: \"value !== null && value.nodeType === 1 && value.attributes\",\n      Document:\n        \"value !== null && value.nodeType === 9 && value.documentElement\",\n      Window: \"value !== null && value.document\",\n      Event: \"value !== null && value.type !== undefined\",\n\n      Class: 'value !== null && value.$$type === \"Class\"',\n      Mixin: 'value !== null && value.$$type === \"Mixin\"',\n      Interface: 'value !== null && value.$$type === \"Interface\"',\n      Theme: 'value !== null && value.$$type === \"Theme\"',\n\n      Color:\n        \"qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)\",\n      Decorator:\n        \"value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)\",\n      Font: \"value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)\"\n    },\n\n    /**\n     * Contains types from {@link #__checks} list which need to be dereferenced\n     */\n    __dereference: {\n      Node: true,\n      Element: true,\n      Document: true,\n      Window: true,\n      Event: true\n    },\n\n    /**\n     * Inherit value, used to override defaults etc. to force inheritance\n     * even if property value is not undefined (through multi-values)\n     *\n     * @internal\n     */\n    $$inherit: \"inherit\",\n\n    /**\n     * Caching field names for each property created\n     *\n     * @internal\n     */\n    $$store: {\n      runtime: {},\n      user: {},\n      theme: {},\n      inherit: {},\n      init: {},\n      useinit: {}\n    },\n\n    /**\n     * Caching function names for each property created\n     *\n     * @internal\n     */\n    $$method: {\n      get: {},\n      getAsync: {},\n      set: {},\n      setImpl: {},\n      setAsync: {},\n      reset: {},\n      init: {},\n      refresh: {},\n      setRuntime: {},\n      resetRuntime: {},\n      setThemed: {},\n      resetThemed: {}\n    },\n\n    /**\n     * Supported keys for property definitions\n     *\n     * @internal\n     */\n    $$allowedKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      dereference: \"boolean\", // Boolean\n      inheritable: \"boolean\", // Boolean\n      nullable: \"boolean\", // Boolean\n      themeable: \"boolean\", // Boolean\n      refine: \"boolean\", // Boolean\n      init: null, // var\n      apply: \"string\", // String\n      event: \"string\", // String\n      check: null, // Array, String, Function\n      transform: \"string\", // String\n      async: \"boolean\", // Boolean\n      deferredInit: \"boolean\", // Boolean\n      validate: null, // String, Function\n      isEqual: null // String, Function\n    },\n\n    /**\n     * Supported keys for property group definitions\n     *\n     * @internal\n     */\n    $$allowedGroupKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      group: \"object\", // Array\n      mode: \"string\", // String\n      themeable: \"boolean\" // Boolean\n    },\n\n    /** Contains names of inheritable properties, filled by {@link qx.Class.define} */\n    $$inheritable: {},\n\n    /**\n     * Generate optimized refresh method and  attach it to the class' prototype\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    __executeOptimizedRefresh(clazz) {\n      var inheritables = this.__getInheritablesOfClass(clazz);\n\n      if (!inheritables.length) {\n        var refresher = function () {};\n      } else {\n        refresher = this.__createRefresher(inheritables);\n      }\n\n      clazz.prototype.$$refreshInheritables = refresher;\n    },\n\n    /**\n     * Get the names of all inheritable properties of the given class\n     *\n     * @param clazz {Class} class to get the inheritable properties of\n     * @return {String[]} List of property names\n     */\n    __getInheritablesOfClass(clazz) {\n      var inheritable = [];\n\n      while (clazz) {\n        var properties = clazz.$$properties;\n\n        if (properties) {\n          for (var name in this.$$inheritable) {\n            // Whether the property is available in this class\n            // and whether it is inheritable in this class as well\n            if (properties[name] && properties[name].inheritable) {\n              inheritable.push(name);\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return inheritable;\n    },\n\n    /**\n     * Assemble the refresher code and return the generated function\n     *\n     * @param inheritables {String[]} list of inheritable properties\n     * @return {Function} refresher function\n     */\n    __createRefresher(inheritables) {\n      var inherit = this.$$store.inherit;\n      var init = this.$$store.init;\n      var refresh = this.$$method.refresh;\n\n      var code = [\n        \"var parent = this.getLayoutParent();\",\n        \"if (!parent) return;\"\n      ];\n\n      for (var i = 0, l = inheritables.length; i < l; i++) {\n        var name = inheritables[i];\n        code.push(\n          \"var value = parent.\",\n          inherit[name],\n          \";\",\n          \"if (value===undefined) value = parent.\",\n          init[name],\n          \";\",\n          \"this.\",\n          refresh[name],\n          \"(value);\"\n        );\n      }\n\n      return new Function(code.join(\"\"));\n    },\n\n    /**\n     * Attach $$refreshInheritables method stub to the given class\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    attachRefreshInheritables(clazz) {\n      clazz.prototype.$$refreshInheritables = function () {\n        qx.core.Property.__executeOptimizedRefresh(clazz);\n        return this.$$refreshInheritables();\n      };\n    },\n\n    /**\n     * Attach one property to class\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param name {String} Name of property\n     * @param config {Map} Configuration map of property\n     */\n    attachMethods(clazz, name, config) {\n      // Divide groups from \"normal\" properties\n      config.group\n        ? this.__attachGroupMethods(clazz, config, name)\n        : this.__attachPropertyMethods(clazz, config, name);\n    },\n\n    /**\n     * Attach group methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachGroupMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n      var themeable = config.themeable === true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property group: \" + name);\n        }\n      }\n\n      var setter = [];\n      var resetter = [];\n\n      if (themeable) {\n        var styler = [];\n        var unstyler = [];\n      }\n\n      var argHandler =\n        \"var a=arguments[0] instanceof Array?arguments[0]:arguments;\";\n\n      setter.push(argHandler);\n\n      if (themeable) {\n        styler.push(argHandler);\n      }\n\n      if (config.mode == \"shorthand\") {\n        var shorthand =\n          \"a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));\";\n        setter.push(shorthand);\n\n        if (themeable) {\n          styler.push(shorthand);\n        }\n      }\n\n      for (var i = 0, a = config.group, l = a.length; i < l; i++) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (!this.$$method.set[a[i]] || !this.$$method.reset[a[i]]) {\n            throw new Error(\n              \"Cannot create property group '\" +\n                name +\n                \"' including non-existing property '\" +\n                a[i] +\n                \"'!\"\n            );\n          }\n        }\n\n        setter.push(\"this.\", this.$$method.set[a[i]], \"(a[\", i, \"]);\");\n        resetter.push(\"this.\", this.$$method.reset[a[i]], \"();\");\n\n        if (themeable) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (!this.$$method.setThemed[a[i]]) {\n              throw new Error(\n                \"Cannot add the non themable property '\" +\n                  a[i] +\n                  \"' to the themable property group '\" +\n                  name +\n                  \"'\"\n              );\n            }\n          }\n\n          styler.push(\"this.\", this.$$method.setThemed[a[i]], \"(a[\", i, \"]);\");\n          unstyler.push(\"this.\", this.$$method.resetThemed[a[i]], \"();\");\n        }\n      }\n\n      // Attach setter\n      this.$$method.set[name] = \"set\" + upname;\n      members[this.$$method.set[name]] = new Function(setter.join(\"\"));\n\n      // Attach resetter\n      this.$$method.reset[name] = \"reset\" + upname;\n      members[this.$$method.reset[name]] = new Function(resetter.join(\"\"));\n\n      if (themeable) {\n        // Attach styler\n        this.$$method.setThemed[name] = \"setThemed\" + upname;\n        members[this.$$method.setThemed[name]] = new Function(styler.join(\"\"));\n\n        // Attach unstyler\n        this.$$method.resetThemed[name] = \"resetThemed\" + upname;\n        members[this.$$method.resetThemed[name]] = new Function(\n          unstyler.join(\"\")\n        );\n      }\n    },\n\n    /**\n     * Attach property methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachPropertyMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property wrappers: \" + name);\n        }\n      }\n\n      // Fill dispose value\n      if (\n        config.dereference === undefined &&\n        typeof config.check === \"string\"\n      ) {\n        config.dereference = this.__shouldBeDereferenced(config.check);\n      }\n\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        if (config.async) {\n          this.warn(\n            \"Asynchronous property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" is switched to synchronous because qx.promise==false\"\n          );\n\n          config.async = false;\n        }\n        if (config.check == \"qx.Promise\") {\n          this.error(\n            \"Cannot implement check for property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" because qx.promise==false\"\n          );\n\n          delete config.check;\n        }\n      }\n\n      // Check for method name conflicts\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // Exclude qx.data.model.* because that's from marshalling and will cause conflicts to be reported\n        if (clazz.classname && !clazz.classname.match(/^qx.data.model/)) {\n          var allNames = [\n            \"get\" + upname,\n            \"set\" + upname,\n            \"reset\" + upname,\n            \"setRuntime\" + upname,\n            \"resetRuntime\" + upname\n          ];\n\n          if (config.async) {\n            allNames.push(\"get\" + upname + \"Async\");\n            allNames.push(\"set\" + upname + \"Async\");\n          }\n          if (\n            config.inheritable ||\n            config.apply ||\n            config.event ||\n            config.deferredInit\n          ) {\n            allNames.push(\"init\" + upname);\n          }\n          if (config.inheritable) {\n            allNames.push(\"refresh\" + upname);\n          }\n          if (config.themeable) {\n            allNames.push(\"getThemed\" + upname);\n            allNames.push(\"setThemed\" + upname);\n            allNames.push(\"resetThemed\" + upname);\n          }\n          if (config.check === \"Boolean\") {\n            allNames.push(\"is\" + upname);\n            allNames.push(\"toggle\" + upname);\n          }\n          allNames.forEach(function (name) {\n            if (clazz.superclass.prototype[name] !== undefined) {\n              var conflictingClass = null;\n              for (\n                var tmp = clazz.superclass;\n                tmp && tmp != qx.core.Object;\n                tmp = tmp.superclass\n              ) {\n                if (tmp.superclass.prototype[name] === undefined) {\n                  conflictingClass = tmp;\n                  break;\n                }\n              }\n              if (conflictingClass) {\n                qx.log.Logger.warn(\n                  \"Conflicting property method \" +\n                    clazz.classname +\n                    \".\" +\n                    name +\n                    \" with \" +\n                    conflictingClass.classname\n                );\n              }\n            }\n          });\n        }\n      }\n\n      var method = this.$$method;\n      var store = this.$$store;\n\n      store.runtime[name] = \"$$runtime_\" + name;\n      store.user[name] = \"$$user_\" + name;\n      store.theme[name] = \"$$theme_\" + name;\n      store.init[name] = \"$$init_\" + name;\n      store.inherit[name] = \"$$inherit_\" + name;\n      store.useinit[name] = \"$$useinit_\" + name;\n\n      var getName = (method.get[name] = \"get\" + upname);\n      members[method.get[name]] = new Function(\n        \"this.\" +\n          getName +\n          \".$$install && this.\" +\n          getName +\n          \".$$install();\" +\n          \"return this.\" +\n          getName +\n          \".apply(this, arguments);\"\n      );\n\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(getName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                getName +\n                \"Async() method in same class\"\n            );\n          } else if (members[getName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                getName +\n                \"Async() method\"\n            );\n          }\n        }\n        method.getAsync[name] = getName + \"Async\";\n        members[method.getAsync[name]] = new Function(\n          \"this.\" +\n            getName +\n            \".$$install && this.\" +\n            getName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            getName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      members[method.get[name]].$$install = function () {\n        qx.core.Property.__installOptimizedGetter(\n          clazz,\n          name,\n          \"get\",\n          arguments\n        );\n\n        if (config.async) {\n          qx.core.Property.__installOptimizedGetter(\n            clazz,\n            name,\n            \"getAsync\",\n            arguments\n          );\n        }\n      };\n\n      var setName = (method.set[name] = \"set\" + upname);\n      members[setName] = new Function(\n        \"this.\" +\n          setName +\n          \".$$install && this.\" +\n          setName +\n          \".$$install.call(this);\" +\n          \"return this.\" +\n          setName +\n          \".apply(this, arguments);\"\n      );\n\n      method.setAsync[name] = \"set\" + upname + \"Async\";\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(setName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                setName +\n                \"Async() method in same class\"\n            );\n          } else if (members[setName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                setName +\n                \"Async() method\"\n            );\n          }\n        }\n        members[setName + \"Async\"] = new Function(\n          \"this.\" +\n            setName +\n            \".$$install && this.\" +\n            setName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            setName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      method.setImpl[name] = \"$$set\" + upname + \"Impl\";\n      members[setName].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"set\");\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"setImpl\");\n        if (config.async) {\n          qx.core.Property.__installOptimizedSetter(clazz, name, \"setAsync\");\n        }\n      };\n\n      method.reset[name] = \"reset\" + upname;\n      members[method.reset[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"reset\"\n        );\n      };\n      members[method.reset[name]].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"reset\");\n      };\n\n      if (\n        config.inheritable ||\n        config.apply ||\n        config.event ||\n        config.deferredInit\n      ) {\n        method.init[name] = \"init\" + upname;\n        members[method.init[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"init\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.init[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.inheritable) {\n        method.refresh[name] = \"refresh\" + upname;\n        members[method.refresh[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"refresh\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.refresh[name]].$$propertyMethod = true;\n        }\n      }\n\n      method.setRuntime[name] = \"setRuntime\" + upname;\n      members[method.setRuntime[name]] = function (value) {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"setRuntime\",\n          arguments\n        );\n      };\n\n      method.resetRuntime[name] = \"resetRuntime\" + upname;\n      members[method.resetRuntime[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"resetRuntime\"\n        );\n      };\n\n      if (config.themeable) {\n        method.setThemed[name] = \"setThemed\" + upname;\n        members[method.setThemed[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"setThemed\",\n            arguments\n          );\n        };\n\n        method.resetThemed[name] = \"resetThemed\" + upname;\n        members[method.resetThemed[name]] = function () {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"resetThemed\"\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.setThemed[name]].$$propertyMethod = true;\n          members[method.resetThemed[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.check === \"Boolean\") {\n        members[\"toggle\" + upname] = new Function(\n          \"return this.\" +\n            method.set[name] +\n            \"(!this.\" +\n            method.get[name] +\n            \"())\"\n        );\n\n        members[\"is\" + upname] = new Function(\n          \"return this.\" + method.get[name] + \"()\"\n        );\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[\"toggle\" + upname].$$propertyMethod = true;\n          members[\"is\" + upname].$$propertyMethod = true;\n        }\n      }\n\n      // attach a flag to make generated property methods\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        members[method.get[name]].$$propertyMethod = true;\n        members[method.set[name]].$$propertyMethod = true;\n        members[method.reset[name]].$$propertyMethod = true;\n        members[method.setRuntime[name]].$$propertyMethod = true;\n        members[method.resetRuntime[name]].$$propertyMethod = true;\n      }\n    },\n\n    /**\n     * Returns if the reference for the given property check should be removed\n     * on dispose.\n     *\n     * @param check {var} The check of the property definition.\n     * @return {Boolean} If the dereference key should be set.\n     */\n    __shouldBeDereferenced(check) {\n      return !!this.__dereference[check];\n    },\n\n    /** @type {Map} Internal data field for error messages used by {@link #error} */\n    __errors: {\n      0: \"Could not change or apply init value after constructing phase!\",\n      1: \"Requires exactly one argument!\",\n      2: \"Undefined value is not allowed!\",\n      3: \"Does not allow any arguments!\",\n      4: \"Null value is not allowed!\",\n      5: \"Is invalid!\"\n    },\n\n    /**\n     * Error method used by the property system to report errors.\n     *\n     * @param obj {qx.core.Object} Any qooxdoo object\n     * @param id {Integer} Numeric error identifier\n     * @param property {String} Name of the property\n     * @param variant {String} Name of the method variant e.g. \"set\", \"reset\", ...\n     * @param value {var} Incoming value\n     */\n    error(obj, id, property, variant, value) {\n      var classname = obj.constructor.classname;\n      var msg =\n        \"Error in property \" +\n        property +\n        \" of class \" +\n        classname +\n        \" in method \" +\n        this.$$method[variant][property] +\n        \" with incoming value '\" +\n        value +\n        \"': \";\n\n      throw new Error(msg + (this.__errors[id] || \"Unknown reason: \" + id));\n    },\n\n    /**\n     * Compiles a string builder object to a function, executes the function and\n     * returns the return value.\n     *\n     * @param instance {Object} Instance which have called the original method\n     * @param members {Object} Prototype members map where the new function should be stored\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __unwrapFunctionFromCode(instance, members, name, variant, code, args) {\n      var fn = this.__installFunctionFromCode(\n        instance.constructor,\n        name,\n        variant,\n        code,\n        args\n      );\n\n      // Executing new function\n      if (args === undefined) {\n        return fn.call(instance);\n      } else if (qx.core.Environment.get(\"qx.debug\")) {\n        return fn.apply(instance, args);\n      } else {\n        return fn.call(instance, args[0]);\n      }\n    },\n\n    /**\n     * Takes a string builder object, converts it into a function, and installs it as\n     * a property accessor\n     *\n     * @param clazz {Class} Class to install the method into\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __installFunctionFromCode(clazz, name, variant, code, args) {\n      var store = this.$$method[variant][name];\n\n      // Output generate code\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\n            \"Code[\" + this.$$method[variant][name] + \"]: \" + code.join(\"\")\n          );\n        }\n\n        // Overriding temporary wrapper\n        try {\n          clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n        } catch (ex) {\n          throw new Error(\n            \"Malformed generated code to unwrap method: \" +\n              this.$$method[variant][name] +\n              \"\\n\" +\n              code.join(\"\")\n          );\n        }\n      } else {\n        clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n      }\n\n      // Enable profiling code\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        clazz.prototype[store] = qx.core.Aspect.wrap(\n          clazz.classname + \".\" + store,\n          clazz.prototype[store],\n          \"property\"\n        );\n      }\n\n      qx.Bootstrap.setDisplayName(\n        clazz.prototype[store],\n        clazz.classname + \".prototype\",\n        store\n      );\n\n      return clazz.prototype[store];\n    },\n\n    /**\n     * Generates the optimized getter, installs it into the class prototype, and executes it\n     * Supported variants: get\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedGetter(instance, clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code\n      );\n    },\n\n    /**\n     * Installs a getter into the class prototype, without executing it\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __installOptimizedGetter(clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a getter into a string builder array\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileGetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var code = [];\n      var store = this.$$store;\n\n      if (variant == \"getAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.\" + this.$$method.get[name] + \"());\"\n        );\n\n        return code;\n      }\n\n      code.push(\"if(this.\", store.runtime[name], \"!==undefined)\");\n      code.push(\"return this.\", store.runtime[name], \";\");\n\n      if (config.inheritable) {\n        code.push(\"else if(this.\", store.inherit[name], \"!==undefined)\");\n        code.push(\"return this.\", store.inherit[name], \";\");\n        code.push(\"else \");\n      }\n\n      code.push(\"if(this.\", store.user[name], \"!==undefined)\");\n      code.push(\"return this.\", store.user[name], \";\");\n\n      if (config.themeable) {\n        code.push(\"else if(this.\", store.theme[name], \"!==undefined)\");\n        code.push(\"return this.\", store.theme[name], \";\");\n      }\n\n      if (config.deferredInit && config.init === undefined) {\n        code.push(\"else if(this.\", store.init[name], \"!==undefined)\");\n        code.push(\"return this.\", store.init[name], \";\");\n      }\n\n      code.push(\"else \");\n\n      if (config.init !== undefined) {\n        if (config.inheritable) {\n          code.push(\"var init=this.\", store.init[name], \";\");\n\n          if (config.nullable) {\n            code.push(\"if(init==qx.core.Property.$$inherit)init=null;\");\n          }\n\n          code.push(\"return init;\");\n        } else {\n          code.push(\"return this.\", store.init[name], \";\");\n        }\n      } else if (config.inheritable || config.nullable) {\n        code.push(\"return null;\");\n      } else {\n        code.push(\n          'throw new Error(\"Property ',\n          name,\n          \" of an instance of \",\n          clazz.classname,\n          ' is not (yet) ready!\");'\n        );\n      }\n\n      return code;\n    },\n\n    /**\n     * Generates the optimized setter\n     * Supported variants: set, reset, init, refresh, style, unstyle\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedSetter(instance, clazz, name, variant, args) {\n      var code = this.__compileSetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code,\n        args\n      );\n    },\n\n    /**\n     * Installs a setter into the class prototype, without executing it\n     * Supported variants: set\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Return value of the generated function\n     */\n    __installOptimizedSetter(clazz, name, variant) {\n      var code = this.__compileSetter(clazz, name, variant);\n      return this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a setter into a string builder array\n     * Supported variants: set, setThemed, setRuntime, init\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileSetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var members = clazz.prototype;\n      var code = [];\n\n      var upname = qx.lang.String.firstUp(name);\n      if (variant == \"setAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.$$set\" +\n            upname +\n            \"Impl.apply(this, arguments));\"\n        );\n\n        return code;\n      } else if (variant == \"set\") {\n        code.push(\n          \"this.$$set\" + upname + \"Impl.apply(this, arguments);\",\n          \"return value;\"\n        );\n\n        return code;\n      }\n\n      var incomingValue =\n        variant === \"setImpl\" ||\n        variant === \"setThemed\" ||\n        variant === \"setRuntime\" ||\n        (variant === \"init\" && config.init === undefined);\n      var hasCallback = config.apply || config.event || config.inheritable;\n\n      var store = this.__getStore(variant, name);\n\n      this.__emitIsEqualFunction(code, clazz, config, name);\n\n      this.__emitSetterPreConditions(\n        code,\n        config,\n        name,\n        variant,\n        incomingValue\n      );\n\n      if (incomingValue || hasCallback) {\n        this.__emitOldValue(code, config, name);\n      }\n\n      if (incomingValue) {\n        this.__emitIncomingValueTransformation(code, clazz, config, name);\n      }\n\n      if (hasCallback) {\n        this.__emitOldNewComparison(code, incomingValue, store, variant);\n      }\n\n      if (config.inheritable) {\n        code.push(\"var inherit=prop.$$inherit;\");\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (incomingValue) {\n          this.__emitIncomingValueValidation(\n            code,\n            config,\n            clazz,\n            name,\n            variant\n          );\n        }\n      }\n\n      if (!hasCallback) {\n        this.__emitStoreValue(code, name, variant, incomingValue);\n      } else {\n        this.__emitStoreComputedValue(\n          code,\n          config,\n          name,\n          variant,\n          incomingValue\n        );\n      }\n\n      if (config.inheritable) {\n        this.__emitStoreInheritedPropertyValue(code, config, name, variant);\n      } else if (hasCallback) {\n        this.__emitNormalizeUndefinedValues(code, config, name, variant);\n      }\n\n      if (hasCallback) {\n        // Emit callback and event firing; Refreshing children (5th parameter) requires the parent/children interface\n        this.__emitCallCallback(\n          code,\n          config,\n          name,\n          variant,\n          !!(config.inheritable && members._getChildren)\n        );\n      }\n\n      // Return value\n      if (incomingValue) {\n        code.unshift(\"function set(value){\");\n        code.push(\"}\");\n        if (\n          qx.core.Environment.get(\"qx.promise\") &&\n          (!config.check || config.check != \"qx.Promise\")\n        ) {\n          code.push(\n            \"var promise;\",\n            \"if (qx.Promise.isPromise(value)) \",\n            \"promise = value.then(set.bind(this));\",\n            \"else \",\n            \"promise = set.apply(this, arguments);\"\n          );\n\n          if (variant == \"setImpl\") {\n            code.push(\"return promise;\");\n          } else {\n            code.push(\"return value;\");\n          }\n        } else {\n          code.push(\"set.apply(this, arguments);\", \"return value;\");\n        }\n      }\n\n      return code;\n    },\n\n    /**\n     * Get the object to store the value for the given variant\n     *\n     * @param variant {String} Method variant.\n     * @param name {String} name of the property\n     *\n     * @return {Object} the value store\n     */\n    __getStore(variant, name) {\n      if (variant === \"setRuntime\" || variant === \"resetRuntime\") {\n        var store = this.$$store.runtime[name];\n      } else if (variant === \"setThemed\" || variant === \"resetThemed\") {\n        store = this.$$store.theme[name];\n      } else if (variant === \"init\") {\n        store = this.$$store.init[name];\n      } else {\n        store = this.$$store.user[name];\n      }\n\n      return store;\n    },\n\n    /**\n     * Emit code for the equality check evaluation\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIsEqualFunction(code, clazz, config, name) {\n      code.push(\"var equ=\");\n\n      if (typeof config.isEqual === \"function\") {\n        code.push(\n          \"function(a,b){return !!\",\n          clazz.classname,\n          \".$$properties.\",\n          name,\n          \".isEqual.call(this,a,b);};\"\n        );\n      } else if (typeof config.isEqual === \"string\") {\n        var members = clazz.prototype;\n        // Name of member?\n        if (members[config.isEqual] !== undefined) {\n          code.push(\"this.\", config.isEqual, \";\");\n        }\n        // 'inline' code\n        else {\n          code.push(\"function(a,b){return !!(\", config.isEqual, \");};\");\n        }\n      } else if (typeof config.isEqual === \"undefined\") {\n        code.push(\"function(a,b){return a===b;};\");\n      } else {\n        throw new Error(\n          \"Invalid type for 'isEqual' attribute \" +\n            \"of property '\" +\n            name +\n            \"' in class '\" +\n            clazz.classname +\n            \"'\"\n        );\n      }\n    },\n\n    /**\n     * Emit code to check the arguments preconditions\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitSetterPreConditions(code, config, name, variant, incomingValue) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        code.push(\"var prop=qx.core.Property;\");\n\n        if (variant === \"init\") {\n          code.push(\n            'if(this.$$initialized)prop.error(this,0,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        if (variant === \"refresh\") {\n          // do nothing\n          // refresh() is internal => no arguments test\n          // also note that refresh() supports \"undefined\" values\n        } else if (incomingValue) {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==1)prop.error(this,1,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n\n          // Undefined check\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        } else {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==0)prop.error(this,3,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      } else {\n        if (!config.nullable || config.check || config.inheritable) {\n          code.push(\"var prop=qx.core.Property;\");\n        }\n\n        // Undefined check\n        if (variant === \"setImpl\") {\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      }\n    },\n\n    /**\n     * Emit code to apply the \"validate\" and \"transform\" config keys.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIncomingValueTransformation(code, clazz, config, name) {\n      // Call user-provided transform method, if one is provided.  Transform\n      // method should either throw an error or return the new value.\n      if (config.transform) {\n        code.push(\"value=this.\", config.transform, \"(value, old);\");\n      }\n\n      // Call user-provided validate method, if one is provided.  Validate\n      // method should either throw an error or do nothing.\n      if (config.validate) {\n        // if it is a string\n        if (typeof config.validate === \"string\") {\n          code.push(\"this.\", config.validate, \"(value);\");\n          // if its a function otherwise\n        } else if (config.validate instanceof Function) {\n          code.push(clazz.classname, \".$$properties.\", name);\n          code.push(\".validate.call(this, value);\");\n        }\n      }\n    },\n\n    /**\n     * Emit code, which returns if the incoming value equals the current value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     * @param store {Object} The data store to use for the incoming value\n     * @param variant {String} Method variant.\n     */\n    __emitOldNewComparison(code, incomingValue, store, variant) {\n      var resetValue =\n        variant === \"reset\" ||\n        variant === \"resetThemed\" ||\n        variant === \"resetRuntime\";\n\n      if (incomingValue) {\n        code.push(\"if(equ.call(this,this.\", store, \",value))return value;\");\n      } else if (resetValue) {\n        code.push(\"if(this.\", store, \"===undefined)return;\");\n      }\n    },\n\n    /**\n     * Emit code, which performs validation of the incoming value according to\n     * the \"nullable\", \"check\" and \"inheritable\" config keys.\n     *\n     * @signature function(code, config, clazz, name, variant)\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitIncomingValueValidation: qx.core.Environment.select(\"qx.debug\", {\n      true(code, config, clazz, name, variant) {\n        // Null check\n        if (!config.nullable) {\n          code.push(\n            'if(value===null)prop.error(this,4,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        // Processing check definition\n        if (config.check !== undefined) {\n          code.push(\n            \"var msg = \\\"Invalid incoming value for property '\" +\n              name +\n              \"' of class '\" +\n              clazz.classname +\n              \"'\\\";\"\n          );\n\n          // Accept \"null\"\n          if (config.nullable) {\n            code.push(\"if(value!==null)\");\n          }\n\n          // Inheritable properties always accept \"inherit\" as value\n          if (config.inheritable) {\n            code.push(\"if(value!==inherit)\");\n          }\n\n          code.push(\"if(\");\n\n          if (this.__checks[config.check] !== undefined) {\n            code.push(\"!(\", this.__checks[config.check], \")\");\n          } else if (qx.Class.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInstance(value, qx.Class.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (qx.Interface && qx.Interface.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInterface(value, qx.Interface.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (typeof config.check === \"function\") {\n            code.push(\"!\", clazz.classname, \".$$properties.\", name);\n            code.push(\".check.call(this, value)\");\n          } else if (typeof config.check === \"string\") {\n            code.push(\"!(\", config.check, \")\");\n          } else if (config.check instanceof Array) {\n            code.push(\n              \"qx.core.Assert.assertInArray(value, \",\n              clazz.classname,\n              \".$$properties.\",\n              name,\n              \".check, msg)\"\n            );\n          } else {\n            throw new Error(\n              \"Could not add check to property \" +\n                name +\n                \" of class \" +\n                clazz.classname\n            );\n          }\n\n          code.push(')prop.error(this,5,\"', name, '\",\"', variant, '\",value);');\n        }\n      },\n\n      false: undefined\n    }),\n\n    /**\n     * Emit code to store the incoming value\n     *\n     * @param code {String[]} String array to append the code to\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreValue(code, name, variant, incomingValue) {\n      if (variant === \"setRuntime\") {\n        code.push(\"this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n      } else if (variant === \"setImpl\") {\n        code.push(\"this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n      } else if (variant === \"setThemed\") {\n        code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n      } else if (variant === \"resetThemed\") {\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.theme[name], \";\");\n      } else if (variant === \"init\" && incomingValue) {\n        code.push(\"this.\", this.$$store.init[name], \"=value;\");\n      }\n    },\n\n    /**\n     * Emit code to store the incoming value and compute the \"old\" and \"computed\"\n     * values.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreComputedValue(code, config, name, variant, incomingValue) {\n      code.push(\"var computed;\");\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n\n      if (variant === \"setRuntime\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        // Use runtime value as it has higher priority\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n\n        // Store incoming value\n        if (variant === \"setImpl\") {\n          code.push(\"this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"reset\") {\n          code.push(\"delete this.\", this.$$store.user[name], \";\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n\n      if (variant === \"setImpl\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        if (variant === \"setRuntime\") {\n          // Use runtime value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (config.inheritable) {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        } else {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        }\n\n        // Store incoming value\n        if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = THEMED VALUE\n      if (config.themeable) {\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined){\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        }\n\n        // reset() is impossible, because the user has higher priority than\n        // the themed value, so the themed value has no chance to ever get used,\n        // when there is an user value, too.\n        else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          // Delete entry\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n\n          // Fallback to init value\n          code.push(\"if(this.\", this.$$store.init[name], \"!==undefined){\");\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n          code.push(\"}\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"this.\", this.$$store.init[name], \"=value;\");\n          }\n\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        }\n\n        code.push(\"}\");\n      }\n\n      // OLD = INIT VALUE\n      code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n\n      if (variant === \"init\") {\n        if (incomingValue) {\n          code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n        } else {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n\n        // useinit flag is already initialized\n      }\n\n      // reset(), resetRuntime() and resetStyle() are impossible, because the user and themed values have a\n      // higher priority than the init value, so the init value has no chance to ever get used,\n      // when there is an user or themed value, too.\n      else if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"refresh\"\n      ) {\n        code.push(\"delete this.\", this.$$store.useinit[name], \";\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = NONE\n\n      // reset(), resetRuntime() and resetStyle() are impossible because otherwise there\n      // is already an old value\n      if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"init\"\n      ) {\n        code.push(\"else{\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n          } else {\n            code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          }\n\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        }\n\n        // refresh() will work with the undefined value, later\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to compute the \"old\" value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitOldValue(code, config, name) {\n      if (config.inheritable) {\n        code.push(\"var old=this.\", this.$$store.inherit[name], \";\");\n      } else {\n        code.push(\"var old;\");\n      }\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n      code.push(\"old=this.\", this.$$store.runtime[name], \";\");\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      if (!config.inheritable) {\n        code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n        code.push(\"old=this.\", this.$$store.user[name], \";\");\n        code.push(\"}\");\n\n        // OLD = THEMED VALUE\n        if (config.themeable) {\n          code.push(\n            \"else if(this.\",\n            this.$$store.theme[name],\n            \"!==undefined){\"\n          );\n\n          code.push(\"old=this.\", this.$$store.theme[name], \";\");\n          code.push(\"}\");\n        }\n\n        // OLD = INIT VALUE\n        code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n        code.push(\"old=this.\", this.$$store.init[name], \";\");\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to store the value of an inheritable property\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitStoreInheritedPropertyValue(code, config, name, variant) {\n      code.push(\"if(computed===undefined||computed===inherit){\");\n\n      if (variant === \"refresh\") {\n        code.push(\"computed=value;\");\n      } else {\n        code.push(\n          \"var pa=this.getLayoutParent();if(pa)computed=pa.\",\n          this.$$store.inherit[name],\n          \";\"\n        );\n      }\n\n      // Fallback to init value if inheritance was unsuccessful\n      code.push(\"if((computed===undefined||computed===inherit)&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==undefined&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==inherit){\");\n      code.push(\"computed=this.\", this.$$store.init[name], \";\");\n      code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n      code.push(\"}else{\");\n      code.push(\"delete this.\", this.$$store.useinit[name], \";}\");\n\n      code.push(\"}\");\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Note: At this point computed can be \"inherit\" or \"undefined\".\n\n      // Normalize \"inherit\" to undefined and delete inherited value\n      code.push(\"if(computed===inherit){\");\n      code.push(\n        \"computed=undefined;delete this.\",\n        this.$$store.inherit[name],\n        \";\"\n      );\n\n      code.push(\"}\");\n\n      // Only delete inherited value\n      code.push(\"else if(computed===undefined)\");\n      code.push(\"delete this.\", this.$$store.inherit[name], \";\");\n\n      // Store inherited value\n      code.push(\"else this.\", this.$$store.inherit[name], \"=computed;\");\n\n      // Protect against normalization\n      code.push(\"var backup=computed;\");\n\n      // After storage finally normalize computed and old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n      code.push(\"if(computed===undefined||computed==inherit)computed=null;\");\n    },\n\n    /**\n     * Emit code to normalize the old and incoming values from undefined to\n     * <code>null</code>.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitNormalizeUndefinedValues(code, config, name, variant) {\n      // Properties which are not inheritable have no possibility to get\n      // undefined at this position. (Hint: set(), setRuntime() and setThemed() only allow non undefined values)\n      if (\n        variant !== \"setImpl\" &&\n        variant !== \"setRuntime\" &&\n        variant !== \"setThemed\"\n      ) {\n        code.push(\"if(computed===undefined)computed=null;\");\n      }\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Normalize old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n    },\n\n    /**\n     * Emit code to call the apply method and fire the change event\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} variant of the method e.g. setThemed\n     * @param refresh {Boolean} if true, emit code to update the inherited values of child objects\n     */\n    __emitCallCallback(code, config, name, variant, refresh) {\n      // Execute user configured setter\n      code.push(\"var self=this;\", \"var promise;\");\n      if (config.apply) {\n        code.push(\n          \"promise = this.\",\n          config.apply,\n          '(computed, old, \"',\n          name,\n          '\", \"',\n          variant,\n          '\");'\n        );\n      }\n\n      if (config.async) {\n        code.push(\n          \"function fire() {\",\n          \"var promiseData = qx.Promise.resolve(computed);\",\n          \"var promise = promiseData;\"\n        );\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"')) {\",\n            \"promise = reg.fireEventAsync(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \");\",\n            \"promise = promise.then(function() { return computed; });\",\n            \"}\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"Async'))\",\n            \"promise = promise.then(function() {\",\n            \"return reg.fireEventAsync(self, '\",\n            config.event,\n            \"Async', qx.event.type.Data, [promiseData, old]\",\n            \");\",\n            \"});\"\n          );\n        }\n\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\"return promise;\", \"}\");\n      } else {\n        code.push(\"function fire() {\", \"  var tracker={};\");\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"'))\",\n            \"qx.event.Utils.track(tracker, reg.fireEvent(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \"));\"\n          );\n\n          if (qx.core.Environment.get(\"qx.promise\")) {\n            code.push(\n              \"if(reg.hasListener(self, '\",\n              config.event,\n              \"Async'))\",\n              \"qx.event.Utils.then(tracker, function() {\\n\" +\n                \"  return reg.fireEventAsync(self, '\",\n              config.event,\n              \"Async', qx.event.type.Data, [qx.Promise.resolve(computed), old]\",\n              \");\\n\" + \"});\"\n            );\n          }\n        }\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\n          \"if (tracker.promise)\\n\",\n          \"  return tracker.promise.then(function() { return computed; });\",\n          \"return computed;\",\n          \"}\"\n        );\n      }\n\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        code.push(\n          \"if(qx.Promise.isPromise(promise)) \" + \"return promise.then(fire); \"\n        );\n      }\n      code.push(\"return fire();\");\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}