{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "__Registration",
    "event",
    "Registration",
    "addListener",
    "type",
    "listener",
    "self",
    "capture",
    "$$disposed",
    "addListenerOnce",
    "context",
    "id",
    "callback",
    "e",
    "removeListenerById",
    "call",
    "$$wrapped_callback",
    "toHashCode",
    "removeListener",
    "$$hash",
    "hasListener",
    "dispatchEvent",
    "evt",
    "__pendingEvents",
    "__promiseWaitForPendingEvents",
    "__trackPendingEvent",
    "result",
    "core",
    "Environment",
    "get",
    "Promise",
    "isPromise",
    "resolve",
    "hashCode",
    "newPromise",
    "then",
    "promise",
    "Object",
    "keys",
    "length",
    "err",
    "reject",
    "waitForPendingEvents",
    "fireEvent",
    "clazz",
    "args",
    "fireEventAsync",
    "Error",
    "classname",
    "fireNonBubblingEvent",
    "fireNonBubblingEventAsync",
    "fireDataEvent",
    "data",
    "oldData",
    "cancelable",
    "undefined",
    "Data",
    "fireDataEventAsync",
    "MEvent"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MEvent.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * This mixin offers basic event handling capabilities. It includes the\n * commonly known methods for managing event listeners and firing events.\n *\n * @use(qx.event.dispatch.Direct)\n * @use(qx.event.handler.Object)\n */\nqx.Mixin.define(\"qx.core.MEvent\", {\n  members: {\n    /** @type {Class} Pointer to the regular event registration class */\n    __Registration: qx.event.Registration,\n\n    /**\n     * Add event listener to this object.\n     *\n     * @param type {String} name of the event type\n     * @param listener {Function} event callback function\n     * @param self {Object ? null} Reference to the 'this' variable inside\n     *         the event listener. When not given, the corresponding dispatcher\n     *         usually falls back to a default, which is the target\n     *         by convention. Note this is not a strict requirement, i.e.\n     *         custom dispatchers can follow a different strategy.\n     * @param capture {Boolean ? false} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event. The default is\n     *         to attach the event handler to the bubbling phase.\n     * @return {String} An opaque id, which can be used to remove the event listener\n     *         using the {@link #removeListenerById} method.\n     */\n    addListener(type, listener, self, capture) {\n      if (!this.$$disposed) {\n        return this.__Registration.addListener(\n          this,\n          type,\n          listener,\n          self,\n          capture\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Add event listener to this object, which is only called once. After the\n     * listener is called the event listener gets removed.\n     *\n     * @param type {String} name of the event type\n     * @param listener {Function} event callback function\n     * @param context {Object ? window} reference to the 'this' variable inside the callback\n     * @param capture {Boolean ? false} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event. The default is\n     *         to attach the event handler to the bubbling phase.\n     * @return {String} An opaque id, which can be used to remove the event listener\n     *         using the {@link #removeListenerById} method.\n     */\n    addListenerOnce(type, listener, context, capture) {\n      var self = this; // self is needed to remove the listener inside the callback\n      if (!context) {\n        context = this;\n      }\n      var id; // store id in closure context\n      var callback = function (e) {\n        self.removeListenerById(id);\n        listener.call(context, e);\n      };\n      // check for wrapped callback storage\n      if (!listener.$$wrapped_callback) {\n        listener.$$wrapped_callback = {};\n      }\n      // store the call for each type in case the listener is\n      // used for more than one type [BUG #8038]\n      listener.$$wrapped_callback[type + this.toHashCode()] = callback;\n      id = this.addListener(type, callback, context, capture);\n      return id;\n    },\n\n    /**\n     * Remove event listener from this object\n     *\n     * @param type {String} name of the event type\n     * @param listener {Function} event callback function\n     * @param self {Object ? null} reference to the 'this' variable inside the callback\n     * @param capture {Boolean} Whether to remove the event listener of\n     *   the bubbling or of the capturing phase.\n     * @return {Boolean} Whether the event was removed successfully (has existed)\n     */\n    removeListener(type, listener, self, capture) {\n      if (!this.$$disposed) {\n        // special handling for wrapped once listener\n        if (\n          listener.$$wrapped_callback &&\n          listener.$$wrapped_callback[type + this.$$hash]\n        ) {\n          var callback = listener.$$wrapped_callback[type + this.$$hash];\n          delete listener.$$wrapped_callback[type + this.$$hash];\n          listener = callback;\n        }\n        return this.__Registration.removeListener(\n          this,\n          type,\n          listener,\n          self,\n          capture\n        );\n      }\n      return false;\n    },\n\n    /**\n     * Removes an event listener from an event target by an id returned by\n     * {@link #addListener}\n     *\n     * @param id {String} The id returned by {@link #addListener}\n     * @return {Boolean} Whether the event was removed successfully (has existed)\n     */\n    removeListenerById(id) {\n      if (!this.$$disposed) {\n        return this.__Registration.removeListenerById(this, id);\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if there are one or more listeners for an event type.\n     *\n     * @param type {String} name of the event type\n     * @param capture {Boolean ? false} Whether to check for listeners of\n     *         the bubbling or of the capturing phase.\n     * @return {Boolean} Whether the object has a listener of the given type.\n     */\n    hasListener(type, capture) {\n      return this.__Registration.hasListener(this, type, capture);\n    },\n\n    /**\n     * Dispatch an event on this object\n     *\n     * @param evt {qx.event.type.Event} event to dispatch\n     * @return {Boolean} Whether the event default was prevented or not.\n     *     Returns true, when the event was NOT prevented.\n     */\n    dispatchEvent(evt) {\n      if (!this.$$disposed) {\n        return this.__Registration.dispatchEvent(this, evt);\n      }\n\n      return true;\n    },\n\n    /** @type{Object<String,qx.Promise>} list of pending events, indexed by hash code */\n    __pendingEvents: null,\n\n    /** @type{qx.Promise} promise that callers are waiting on, ready for when all events are finished */\n    __promiseWaitForPendingEvents: null,\n\n    /**\n     * Internal helper method to track promises returned from event handlers\n     *\n     * @param {var} result the result from the event handler\n     * @returns {qx.Promise|var} the value to return\n     */\n    __trackPendingEvent(result) {\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (!qx.Promise.isPromise(result)) {\n          return result;\n        }\n        if (!this.__pendingEvents) {\n          this.__pendingEvents = {};\n        }\n        if (!(result instanceof qx.Promise)) {\n          result = qx.Promise.resolve(result);\n        }\n        let hashCode = result.toHashCode();\n        let newPromise = result\n          .then(result => {\n            delete this.__pendingEvents[hashCode];\n            let promise = this.__promiseWaitForPendingEvents;\n            if (promise && Object.keys(this.__pendingEvents).length == 0) {\n              this.__pendingEvents = null;\n              this.__promiseWaitForPendingEvents = null;\n              promise.resolve();\n            }\n            return result;\n          })\n          .catch(err => {\n            delete this.__pendingEvents[hashCode];\n            let promise = this.__promiseWaitForPendingEvents;\n            if (promise && Object.keys(this.__pendingEvents).length == 0) {\n              this.__pendingEvents = null;\n              this.__promiseWaitForPendingEvents = null;\n              promise.reject(err);\n            }\n            throw err;\n          });\n        this.__pendingEvents[hashCode] = newPromise;\n        return newPromise;\n      } else {\n        return result;\n      }\n    },\n\n    /**\n     * Waits for all pending events to be resolved\n     */\n    async waitForPendingEvents() {\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (!this.__pendingEvents) {\n          return;\n        }\n        if (!this.__promiseWaitForPendingEvents) {\n          this.__promiseWaitForPendingEvents = new qx.Promise();\n        }\n        let promise = this.__promiseWaitForPendingEvents;\n        await promise;\n      }\n    },\n\n    /**\n     * Creates and dispatches an event on this object.\n     *\n     * @param type {String} Event type to fire\n     * @param clazz {Class?qx.event.type.Event} The event class\n     * @param args {Array?null} Arguments, which will be passed to\n     *       the event's init method.\n     * @return {Boolean|qx.Promise} whether the event default was prevented or not.\n     *     Returns true, when the event was NOT prevented.\n     */\n    fireEvent(type, clazz, args) {\n      if (!this.$$disposed) {\n        return this.__trackPendingEvent(\n          this.__Registration.fireEvent(this, type, clazz, args)\n        );\n      }\n\n      return true;\n    },\n\n    /**\n     * Creates and dispatches an event on this object; equivalent to fireEvent, except that it\n     * always returns a promise\n     *\n     * @param type {String} Event type to fire\n     * @param clazz {Class?qx.event.type.Event} The event class\n     * @param args {Array?null} Arguments, which will be passed to\n     *       the event's init method.\n     * @return {qx.Promise} a promise aggregated from the event handlers;\n     *  if the default was prevented, the promise is rejected\n     */\n    fireEventAsync(type, clazz, args) {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        throw new Error(\n          this.classname +\n            \".fireEventAsync not supported because qx.promise==false\"\n        );\n      }\n\n      if (!this.$$disposed) {\n        return this.__trackPendingEvent(\n          this.__Registration.fireEventAsync(this, type, clazz, args)\n        );\n      }\n\n      return qx.Promise.resolve(true);\n    },\n\n    /**\n     * Create an event object and dispatch it on this object.\n     * The event dispatched with this method does never bubble! Use only if you\n     * are sure that bubbling is not required.\n     *\n     * @param type {String} Event type to fire\n     * @param clazz {Class?qx.event.type.Event} The event class\n     * @param args {Array?null} Arguments, which will be passed to\n     *       the event's init method.\n     * @return {Boolean} Whether the event default was prevented or not.\n     *     Returns true, when the event was NOT prevented.\n     */\n    fireNonBubblingEvent(type, clazz, args) {\n      if (!this.$$disposed) {\n        return this.__trackPendingEvent(\n          this.__Registration.fireNonBubblingEvent(this, type, clazz, args)\n        );\n      }\n\n      return true;\n    },\n\n    /**\n     * Create an event object and dispatch it on this object; equivalent to fireNonBubblingEvent,\n     * except that it always returns a promise.\n     *\n     * The event dispatched with this method does never bubble! Use only if you\n     * are sure that bubbling is not required.\n     *\n     * @param type {String} Event type to fire\n     * @param clazz {Class?qx.event.type.Event} The event class\n     * @param args {Array?null} Arguments, which will be passed to\n     *       the event's init method.\n     * @return {qx.Promise} a promise aggregated from the event handlers;\n     *  if the default was prevented, the promise is rejected\n     */\n    fireNonBubblingEventAsync(type, clazz, args) {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        throw new Error(\n          this.classname +\n            \".fireNonBubblingEventAsync not supported because qx.promise==false\"\n        );\n      }\n\n      if (!this.$$disposed) {\n        return this.__trackPendingEvent(\n          this.__Registration.fireNonBubblingEventAsync(this, type, clazz, args)\n        );\n      }\n\n      return qx.Promise.resolve(true);\n    },\n\n    /**\n     * Creates and dispatches an non-bubbling data event on this object.\n     *\n     * @param type {String} Event type to fire\n     * @param data {var} User defined data attached to the event object\n     * @param oldData {var?null} The event's old data (optional)\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link qx.event.type.Event#preventDefault}\n     * @return {Boolean|qx.Promise} whether the event default was prevented or not.\n     *     Returns true, when the event was NOT prevented.\n     */\n    fireDataEvent(type, data, oldData, cancelable) {\n      if (!this.$$disposed) {\n        if (oldData === undefined) {\n          oldData = null;\n        }\n        return this.__trackPendingEvent(\n          this.__Registration.fireEvent(this, type, qx.event.type.Data, [\n            data,\n            oldData,\n            !!cancelable\n          ])\n        );\n      }\n\n      return true;\n    },\n\n    /**\n     * Creates and dispatches an non-bubbling data event on this object; equivalent to\n     * fireEvent, except that it always returns a promise.\n     *\n     * @param type {String} Event type to fire\n     * @param data {var} User defined data attached to the event object\n     * @param oldData {var?null} The event's old data (optional)\n     * @param cancelable {Boolean?false} Whether or not an event can have its default\n     *     action prevented. The default action can either be the browser's\n     *     default action of a native event (e.g. open the context menu on a\n     *     right click) or the default action of a qooxdoo class (e.g. close\n     *     the window widget). The default action can be prevented by calling\n     *     {@link qx.event.type.Event#preventDefault}\n     * @return {qx.Promise} a promise aggregated from the event handlers;\n     *  if the default was prevented, the promise is rejected\n     */\n    fireDataEventAsync(type, data, oldData, cancelable) {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        throw new Error(\n          this.classname +\n            \".fireDataEventAsync not supported because qx.promise==false\"\n        );\n      }\n\n      if (!this.$$disposed) {\n        if (oldData === undefined) {\n          oldData = null;\n        }\n        return this.__trackPendingEvent(\n          this.__Registration.fireEventAsync(this, type, qx.event.type.Data, [\n            data,\n            oldData,\n            !!cancelable\n          ])\n        );\n      }\n\n      return qx.Promise.resolve(true);\n    }\n  }\n});\n"
  ],
  "mappings": ";;+CACA,oJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EADAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gBAAhB,EAAkC;IAChCC,OAAO,EAAE;MACP;MACAC,SAAc,EAAEP,EAAE,CAACQ,KAAH,CAASC,YAFlB;;MAIP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,WApBO,uBAoBKC,IApBL,EAoBWC,QApBX,EAoBqBC,IApBrB,EAoB2BC,OApB3B,EAoBoC;QACzC,IAAI,CAAC,KAAKC,UAAV,EAAsB;UACpB,OAAO,KAAKR,SAAL,CAAoBG,WAApB,CACL,IADK,EAELC,IAFK,EAGLC,QAHK,EAILC,IAJK,EAKLC,OALK,CAAP;QAOD;;QAED,OAAO,IAAP;MACD,CAhCM;;MAkCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,eA/CO,2BA+CSL,IA/CT,EA+CeC,QA/Cf,EA+CyBK,OA/CzB,EA+CkCH,OA/ClC,EA+C2C;QAChD,IAAID,IAAI,GAAG,IAAX,CADgD,CAC/B;;QACjB,IAAI,CAACI,OAAL,EAAc;UACZA,OAAO,GAAG,IAAV;QACD;;QACD,IAAIC,EAAJ,CALgD,CAKxC;;QACR,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,CAAV,EAAa;UAC1BP,IAAI,CAACQ,kBAAL,CAAwBH,EAAxB;UACAN,QAAQ,CAACU,IAAT,CAAcL,OAAd,EAAuBG,CAAvB;QACD,CAHD,CANgD,CAUhD;;;QACA,IAAI,CAACR,QAAQ,CAACW,kBAAd,EAAkC;UAChCX,QAAQ,CAACW,kBAAT,GAA8B,EAA9B;QACD,CAb+C,CAchD;QACA;;;QACAX,QAAQ,CAACW,kBAAT,CAA4BZ,IAAI,GAAG,KAAKa,UAAL,EAAnC,IAAwDL,QAAxD;QACAD,EAAE,GAAG,KAAKR,WAAL,CAAiBC,IAAjB,EAAuBQ,QAAvB,EAAiCF,OAAjC,EAA0CH,OAA1C,CAAL;QACA,OAAOI,EAAP;MACD,CAlEM;;MAoEP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIO,cA9EO,0BA8EQd,IA9ER,EA8EcC,QA9Ed,EA8EwBC,IA9ExB,EA8E8BC,OA9E9B,EA8EuC;QAC5C,IAAI,CAAC,KAAKC,UAAV,EAAsB;UACpB;UACA,IACEH,QAAQ,CAACW,kBAAT,IACAX,QAAQ,CAACW,kBAAT,CAA4BZ,IAAI,GAAG,KAAKe,MAAxC,CAFF,EAGE;YACA,IAAIP,QAAQ,GAAGP,QAAQ,CAACW,kBAAT,CAA4BZ,IAAI,GAAG,KAAKe,MAAxC,CAAf;YACA,OAAOd,QAAQ,CAACW,kBAAT,CAA4BZ,IAAI,GAAG,KAAKe,MAAxC,CAAP;YACAd,QAAQ,GAAGO,QAAX;UACD;;UACD,OAAO,KAAKZ,SAAL,CAAoBkB,cAApB,CACL,IADK,EAELd,IAFK,EAGLC,QAHK,EAILC,IAJK,EAKLC,OALK,CAAP;QAOD;;QACD,OAAO,KAAP;MACD,CAlGM;;MAoGP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIO,kBA3GO,8BA2GYH,EA3GZ,EA2GgB;QACrB,IAAI,CAAC,KAAKH,UAAV,EAAsB;UACpB,OAAO,KAAKR,SAAL,CAAoBc,kBAApB,CAAuC,IAAvC,EAA6CH,EAA7C,CAAP;QACD;;QAED,OAAO,KAAP;MACD,CAjHM;;MAmHP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIS,WA3HO,uBA2HKhB,IA3HL,EA2HWG,OA3HX,EA2HoB;QACzB,OAAO,KAAKP,SAAL,CAAoBoB,WAApB,CAAgC,IAAhC,EAAsChB,IAAtC,EAA4CG,OAA5C,CAAP;MACD,CA7HM;;MA+HP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIc,aAtIO,yBAsIOC,GAtIP,EAsIY;QACjB,IAAI,CAAC,KAAKd,UAAV,EAAsB;UACpB,OAAO,KAAKR,SAAL,CAAoBqB,aAApB,CAAkC,IAAlC,EAAwCC,GAAxC,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CA5IM;;MA8IP;MACAC,SAAe,EAAE,IA/IV;;MAiJP;MACAC,SAA6B,EAAE,IAlJxB;;MAoJP;AACJ;AACA;AACA;AACA;AACA;MACIC,SA1JO,qBA0JaC,MA1Jb,EA0JqB;QAAA;;QAC1B,IAAIjC,EAAE,CAACkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,CAAJ,EAA2C;UACzC,IAAI,CAACpC,EAAE,CAACqC,OAAH,CAAWC,SAAX,CAAqBL,MAArB,CAAL,EAAmC;YACjC,OAAOA,MAAP;UACD;;UACD,IAAI,CAAC,KAAKH,SAAV,EAA2B;YACzB,KAAKA,SAAL,GAAuB,EAAvB;UACD;;UACD,IAAI,EAAEG,MAAM,YAAYjC,EAAE,CAACqC,OAAvB,CAAJ,EAAqC;YACnCJ,MAAM,GAAGjC,EAAE,CAACqC,OAAH,CAAWE,OAAX,CAAmBN,MAAnB,CAAT;UACD;;UACD,IAAIO,QAAQ,GAAGP,MAAM,CAACT,UAAP,EAAf;UACA,IAAIiB,UAAU,GAAGR,MAAM,CACpBS,IADc,CACT,UAAAT,MAAM,EAAI;YACd,OAAO,KAAI,CAACH,SAAL,CAAqBU,QAArB,CAAP;YACA,IAAIG,OAAO,GAAG,KAAI,CAACZ,SAAnB;;YACA,IAAIY,OAAO,IAAIC,MAAM,CAACC,IAAP,CAAY,KAAI,CAACf,SAAjB,EAAkCgB,MAAlC,IAA4C,CAA3D,EAA8D;cAC5D,KAAI,CAAChB,SAAL,GAAuB,IAAvB;cACA,KAAI,CAACC,SAAL,GAAqC,IAArC;cACAY,OAAO,CAACJ,OAAR;YACD;;YACD,OAAON,MAAP;UACD,CAVc,WAWR,UAAAc,GAAG,EAAI;YACZ,OAAO,KAAI,CAACjB,SAAL,CAAqBU,QAArB,CAAP;YACA,IAAIG,OAAO,GAAG,KAAI,CAACZ,SAAnB;;YACA,IAAIY,OAAO,IAAIC,MAAM,CAACC,IAAP,CAAY,KAAI,CAACf,SAAjB,EAAkCgB,MAAlC,IAA4C,CAA3D,EAA8D;cAC5D,KAAI,CAAChB,SAAL,GAAuB,IAAvB;cACA,KAAI,CAACC,SAAL,GAAqC,IAArC;cACAY,OAAO,CAACK,MAAR,CAAeD,GAAf;YACD;;YACD,MAAMA,GAAN;UACD,CApBc,CAAjB;UAqBA,KAAKjB,SAAL,CAAqBU,QAArB,IAAiCC,UAAjC;UACA,OAAOA,UAAP;QACD,CAlCD,MAkCO;UACL,OAAOR,MAAP;QACD;MACF,CAhMM;;MAkMP;AACJ;AACA;MACUgB,oBArMC,kCAqMsB;QAAA;;QAAA;UAAA;UAAA;YAAA;cAAA;gBAAA,KACvBjD,EAAE,CAACkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,CADuB;kBAAA;kBAAA;gBAAA;;gBAAA,IAEpB,MAAI,CAACN,SAFe;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAKzB,IAAI,CAAC,MAAI,CAACC,SAAV,EAAyC;kBACvC,MAAI,CAACA,SAAL,GAAqC,IAAI/B,EAAE,CAACqC,OAAP,EAArC;gBACD;;gBACGM,OARqB,GAQX,MAAI,CAACZ,SARM;gBAAA;gBAAA,OASnBY,OATmB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAW5B,CAhNM;;MAkNP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIO,SA5NO,qBA4NGvC,IA5NH,EA4NSwC,KA5NT,EA4NgBC,IA5NhB,EA4NsB;QAC3B,IAAI,CAAC,KAAKrC,UAAV,EAAsB;UACpB,OAAO,KAAKiB,SAAL,CACL,KAAKzB,SAAL,CAAoB2C,SAApB,CAA8B,IAA9B,EAAoCvC,IAApC,EAA0CwC,KAA1C,EAAiDC,IAAjD,CADK,CAAP;QAGD;;QAED,OAAO,IAAP;MACD,CApOM;;MAsOP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,cAjPO,0BAiPQ1C,IAjPR,EAiPcwC,KAjPd,EAiPqBC,IAjPrB,EAiP2B;QAChC,IAAI,CAACpD,EAAE,CAACkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,CAAL,EAA4C;UAC1C,MAAM,IAAIkB,KAAJ,CACJ,KAAKC,SAAL,GACE,yDAFE,CAAN;QAID;;QAED,IAAI,CAAC,KAAKxC,UAAV,EAAsB;UACpB,OAAO,KAAKiB,SAAL,CACL,KAAKzB,SAAL,CAAoB8C,cAApB,CAAmC,IAAnC,EAAyC1C,IAAzC,EAA+CwC,KAA/C,EAAsDC,IAAtD,CADK,CAAP;QAGD;;QAED,OAAOpD,EAAE,CAACqC,OAAH,CAAWE,OAAX,CAAmB,IAAnB,CAAP;MACD,CAhQM;;MAkQP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIiB,oBA9QO,gCA8Qc7C,IA9Qd,EA8QoBwC,KA9QpB,EA8Q2BC,IA9Q3B,EA8QiC;QACtC,IAAI,CAAC,KAAKrC,UAAV,EAAsB;UACpB,OAAO,KAAKiB,SAAL,CACL,KAAKzB,SAAL,CAAoBiD,oBAApB,CAAyC,IAAzC,EAA+C7C,IAA/C,EAAqDwC,KAArD,EAA4DC,IAA5D,CADK,CAAP;QAGD;;QAED,OAAO,IAAP;MACD,CAtRM;;MAwRP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIK,yBAtSO,qCAsSmB9C,IAtSnB,EAsSyBwC,KAtSzB,EAsSgCC,IAtShC,EAsSsC;QAC3C,IAAI,CAACpD,EAAE,CAACkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,CAAL,EAA4C;UAC1C,MAAM,IAAIkB,KAAJ,CACJ,KAAKC,SAAL,GACE,oEAFE,CAAN;QAID;;QAED,IAAI,CAAC,KAAKxC,UAAV,EAAsB;UACpB,OAAO,KAAKiB,SAAL,CACL,KAAKzB,SAAL,CAAoBkD,yBAApB,CAA8C,IAA9C,EAAoD9C,IAApD,EAA0DwC,KAA1D,EAAiEC,IAAjE,CADK,CAAP;QAGD;;QAED,OAAOpD,EAAE,CAACqC,OAAH,CAAWE,OAAX,CAAmB,IAAnB,CAAP;MACD,CArTM;;MAuTP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACImB,aAtUO,yBAsUO/C,IAtUP,EAsUagD,IAtUb,EAsUmBC,OAtUnB,EAsU4BC,UAtU5B,EAsUwC;QAC7C,IAAI,CAAC,KAAK9C,UAAV,EAAsB;UACpB,IAAI6C,OAAO,KAAKE,SAAhB,EAA2B;YACzBF,OAAO,GAAG,IAAV;UACD;;UACD,OAAO,KAAK5B,SAAL,CACL,KAAKzB,SAAL,CAAoB2C,SAApB,CAA8B,IAA9B,EAAoCvC,IAApC,EAA0CX,EAAE,CAACQ,KAAH,CAASG,IAAT,CAAcoD,IAAxD,EAA8D,CAC5DJ,IAD4D,EAE5DC,OAF4D,EAG5D,CAAC,CAACC,UAH0D,CAA9D,CADK,CAAP;QAOD;;QAED,OAAO,IAAP;MACD,CArVM;;MAuVP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,kBAvWO,8BAuWYrD,IAvWZ,EAuWkBgD,IAvWlB,EAuWwBC,OAvWxB,EAuWiCC,UAvWjC,EAuW6C;QAClD,IAAI,CAAC7D,EAAE,CAACkC,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,YAAxB,CAAL,EAA4C;UAC1C,MAAM,IAAIkB,KAAJ,CACJ,KAAKC,SAAL,GACE,6DAFE,CAAN;QAID;;QAED,IAAI,CAAC,KAAKxC,UAAV,EAAsB;UACpB,IAAI6C,OAAO,KAAKE,SAAhB,EAA2B;YACzBF,OAAO,GAAG,IAAV;UACD;;UACD,OAAO,KAAK5B,SAAL,CACL,KAAKzB,SAAL,CAAoB8C,cAApB,CAAmC,IAAnC,EAAyC1C,IAAzC,EAA+CX,EAAE,CAACQ,KAAH,CAASG,IAAT,CAAcoD,IAA7D,EAAmE,CACjEJ,IADiE,EAEjEC,OAFiE,EAGjE,CAAC,CAACC,UAH+D,CAAnE,CADK,CAAP;QAOD;;QAED,OAAO7D,EAAE,CAACqC,OAAH,CAAWE,OAAX,CAAmB,IAAnB,CAAP;MACD;IA7XM;EADuB,CAAlC;EAzBAvC,EAAE,CAACkC,IAAH,CAAQ+B,MAAR,CAAe9D,aAAf,GAA+BA,aAA/B"
}