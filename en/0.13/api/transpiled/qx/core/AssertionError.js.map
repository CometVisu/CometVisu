{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "type",
    "BaseError",
    "construct",
    "comment",
    "failMessage",
    "call",
    "__trace",
    "dev",
    "StackTrace",
    "getStackTrace",
    "members",
    "core",
    "AssertionError"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/AssertionError.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Assertion errors are thrown if an assertion in {@link qx.core.Assert}\n * fails.\n */\nqx.Bootstrap.define(\"qx.core.AssertionError\", {\n  extend: qx.type.BaseError,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param comment {String} Comment passed to the assertion call\n   * @param failMessage {String} Fail message provided by the assertion\n   */\n  construct(comment, failMessage) {\n    qx.type.BaseError.call(this, comment, failMessage);\n    this.__trace = qx.dev.StackTrace.getStackTrace();\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __trace: null,\n\n    /**\n     * Stack trace of the error\n     *\n     * @return {String[]} The stack trace of the location the exception was thrown\n     */\n    getStackTrace() {\n      return this.__trace;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,wBAApB,EAA8C;IAC5CC,MAAM,EAAEL,EAAE,CAACM,IAAH,CAAQC,SAD4B;;IAG5C;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;IACEC,SAb4C,qBAalCC,OAbkC,EAazBC,WAbyB,EAaZ;MAC9BV,EAAE,CAACM,IAAH,CAAQC,SAAR,CAAkBI,IAAlB,CAAuB,IAAvB,EAA6BF,OAA7B,EAAsCC,WAAtC;MACA,KAAKE,SAAL,GAAeZ,EAAE,CAACa,GAAH,CAAOC,UAAP,CAAkBC,aAAlB,EAAf;IACD,CAhB2C;;IAkB5C;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACPJ,SAAO,EAAE,IADF;;MAGP;AACJ;AACA;AACA;AACA;MACIG,aARO,2BAQS;QACd,OAAO,KAAKH,SAAZ;MACD;IAVM;EAxBmC,CAA9C;EAtBAZ,EAAE,CAACiB,IAAH,CAAQC,cAAR,CAAuBf,aAAvB,GAAuCA,aAAvC"
}