{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "type",
    "BaseError",
    "construct",
    "comment",
    "failMessage",
    "call",
    "__trace",
    "dev",
    "StackTrace",
    "getStackTrace",
    "members",
    "core",
    "AssertionError"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/AssertionError.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Assertion errors are thrown if an assertion in {@link qx.core.Assert}\n * fails.\n */\nqx.Bootstrap.define(\"qx.core.AssertionError\", {\n  extend: qx.type.BaseError,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param comment {String} Comment passed to the assertion call\n   * @param failMessage {String} Fail message provided by the assertion\n   */\n  construct(comment, failMessage) {\n    qx.type.BaseError.call(this, comment, failMessage);\n    this.__trace = qx.dev.StackTrace.getStackTrace();\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __trace: null,\n\n    /**\n     * Stack trace of the error\n     *\n     * @return {String[]} The stack trace of the location the exception was thrown\n     */\n    getStackTrace() {\n      return this.__trace;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,wBAAwB,EAAE;IAC5CC,MAAM,EAAEL,EAAE,CAACM,IAAI,CAACC,SAAS;IAEzB;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;IACEC,SAAS,qBAACC,OAAO,EAAEC,WAAW,EAAE;MAC9BV,EAAE,CAACM,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC,IAAI,EAAEF,OAAO,EAAEC,WAAW,CAAC;MAClD,IAAI,CAACE,SAAO,GAAGZ,EAAE,CAACa,GAAG,CAACC,UAAU,CAACC,aAAa,EAAE;IAClD,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPJ,SAAO,EAAE,IAAI;MAEb;AACJ;AACA;AACA;AACA;MACIG,aAAa,2BAAG;QACd,OAAO,IAAI,CAACH,SAAO;MACrB;IACF;EACF,CAAC,CAAC;EA1DFZ,EAAE,CAACiB,IAAI,CAACC,cAAc,CAACf,aAAa,GAAGA,aAAa;AAAC"
}