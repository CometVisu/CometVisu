{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "qxOwner",
    "init",
    "check",
    "nullable",
    "apply",
    "qxObjectId",
    "value",
    "indexOf",
    "members",
    "__ownedQxObjects",
    "__changingQxOwner",
    "_applyQxOwner",
    "oldValue",
    "Error",
    "_applyQxObjectId",
    "owner",
    "getQxOwner",
    "__onOwnedObjectIdChange",
    "_cascadeQxObjectIdChanges",
    "obj",
    "newId",
    "oldId",
    "getContentElement",
    "contentElement",
    "updateObjectId",
    "name",
    "core",
    "Object",
    "getQxObject",
    "id",
    "undefined",
    "controlId",
    "pos",
    "substring",
    "result",
    "segs",
    "split",
    "target",
    "found",
    "every",
    "seg",
    "length",
    "tmp",
    "_createQxObject",
    "childControl",
    "getChildControl",
    "Environment",
    "get",
    "classname",
    "_createQxObjectImpl",
    "addOwnedQxObject",
    "thatOwner",
    "__removeOwnedQxObjectImpl",
    "getQxObjectId",
    "setQxOwner",
    "setQxObjectId",
    "removeOwnedQxObject",
    "args",
    "getOwnedQxObjects",
    "values",
    "MObjectId"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MObjectId.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\n/**\n * A mixin providing objects by ID and owners.\n *\n * The typical use of IDs is to override the `_createQxObjectImpl` method and create\n * new instances on demand; all code should access these instances by calling\n * `getQxObject`.\n */\nqx.Mixin.define(\"qx.core.MObjectId\", {\n  /*\n   * ****************************************************************************\n   * PROPERTIES\n   * ****************************************************************************\n   */\n\n  properties: {\n    /** The owning object */\n    qxOwner: {\n      init: null,\n      check: \"qx.core.Object\",\n      nullable: true,\n      apply: \"_applyQxOwner\"\n    },\n\n    /** {String} The ID of the object.  */\n    qxObjectId: {\n      init: null,\n      check(value) {\n        return (\n          value === null || (typeof value == \"string\" && value.indexOf(\"/\") < 0)\n        );\n      },\n      nullable: true,\n      apply: \"_applyQxObjectId\"\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n  members: {\n    __ownedQxObjects: null,\n    __changingQxOwner: false,\n\n    /**\n     * Apply owner\n     */\n    _applyQxOwner(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        throw new Error(\n          \"Please use API methods to change owner, not the property\"\n        );\n      }\n    },\n\n    /**\n     * Apply objectId\n     */\n    _applyQxObjectId(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        var owner = this.getQxOwner();\n        if (owner) {\n          owner.__onOwnedObjectIdChange(this, value, oldValue);\n        }\n        this._cascadeQxObjectIdChanges();\n      }\n    },\n\n    /**\n     * Called when a child's objectId changes\n     */\n    __onOwnedObjectIdChange(obj, newId, oldId) {\n      delete this.__ownedQxObjects[oldId];\n      this.__ownedQxObjects[newId] = obj;\n    },\n\n    /**\n     * Reflect changes to IDs or owners\n     */\n    _cascadeQxObjectIdChanges() {\n      if (typeof this.getContentElement == \"function\") {\n        var contentElement = this.getContentElement();\n        if (contentElement) {\n          contentElement.updateObjectId();\n        }\n      }\n      if (this.__ownedQxObjects) {\n        for (var name in this.__ownedQxObjects) {\n          var obj = this.__ownedQxObjects[name];\n          if (obj instanceof qx.core.Object) {\n            obj._cascadeQxObjectIdChanges();\n          }\n        }\n      }\n    },\n\n    /**\n     * Returns the object with the specified ID\n     *\n     * @param id\n     *          {String} ID of the object\n     * @return {qx.core.Object?} the found object\n     */\n    getQxObject(id) {\n      if (this.__ownedQxObjects) {\n        var obj = this.__ownedQxObjects[id];\n        if (obj !== undefined) {\n          return obj;\n        }\n      }\n\n      // Separate out the child control ID\n      var controlId = null;\n      var pos = id.indexOf(\"#\");\n      if (pos > -1) {\n        controlId = id.substring(pos + 1);\n        id = id.substring(0, pos);\n      }\n\n      var result = undefined;\n\n      // Handle paths\n      if (id.indexOf(\"/\") > -1) {\n        var segs = id.split(\"/\");\n        var target = this;\n        var found = segs.every(function (seg) {\n          if (!seg.length) {\n            return true;\n          }\n          if (!target) {\n            return false;\n          }\n          var tmp = target.getQxObject(seg);\n          if (tmp !== undefined) {\n            target = tmp;\n            return true;\n          }\n        });\n        if (found) {\n          result = target;\n        }\n      } else {\n        // No object, creating the object\n        result = this._createQxObject(id);\n      }\n\n      if (result && controlId) {\n        var childControl = result.getChildControl(controlId);\n        return childControl;\n      }\n\n      if (!qx.core.Environment.get(\"qx.core.Object.allowUndefinedObjectId\")) {\n        if (result === undefined) {\n          throw new Error(\n            `Cannot find a QX Object in ${this.classname} [${this}] with id=${id}`\n          );\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Creates the object and adds it to a list; most classes are expected to\n     * override `_createQxObjectImpl` NOT this method.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObject(id) {\n      var result = this._createQxObjectImpl(id);\n      if (result !== undefined) {\n        this.addOwnedQxObject(result, id);\n      }\n      return result;\n    },\n\n    /**\n     * Creates the object, intended to be overridden. Null is a valid return\n     * value and will be cached by `getQxObject`, however `undefined` is NOT a\n     * valid value and so will not be cached meaning that `_createQxObjectImpl`\n     * will be called multiple times until a valid value is returned.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObjectImpl(id) {\n      return undefined;\n    },\n\n    /**\n     * Adds an object as owned by this object\n     *\n     * @param obj {qx.core.Object} the object to register\n     * @param id {String?} the id to set when registering the object\n     */\n    addOwnedQxObject(obj, id) {\n      if (!this.__ownedQxObjects) {\n        this.__ownedQxObjects = {};\n      }\n\n      if (!(obj instanceof qx.core.Object)) {\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        this.__ownedQxObjects[id] = obj;\n        return;\n      }\n\n      var thatOwner = obj.getQxOwner();\n      if (thatOwner === this) {\n        return;\n      }\n      obj.__changingQxOwner = true;\n      try {\n        if (thatOwner) {\n          thatOwner.__removeOwnedQxObjectImpl(obj);\n        }\n        if (id === undefined) {\n          id = obj.getQxObjectId();\n        }\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        if (obj.getQxOwner() != null) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because it is already owned by another object this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        obj.setQxOwner(this);\n        obj.setQxObjectId(id);\n        obj._cascadeQxObjectIdChanges();\n      } finally {\n        obj.__changingQxOwner = false;\n      }\n      this.__ownedQxObjects[id] = obj;\n    },\n\n    /**\n     * Discards an object from the list of owned objects; note that this does\n     * not dispose of the object, simply forgets it if it exists.\n     *\n     * @param args {String|Object} the ID of the object to discard, or the object itself\n     */\n    removeOwnedQxObject(args) {\n      if (!this.__ownedQxObjects) {\n        throw new Error(\n          \"Cannot discard object because it is not owned by this, this=\" +\n            this +\n            \", object=\" +\n            obj\n        );\n      }\n\n      var id;\n      var obj;\n      if (typeof args === \"string\") {\n        if (args.indexOf(\"/\") > -1) {\n          throw new Error(\"Cannot discard owned objects based on a path\");\n        }\n        id = args;\n        obj = this.__ownedQxObjects[id];\n        if (obj === undefined) {\n          return;\n        }\n      } else {\n        obj = args;\n        if (!(obj instanceof qx.core.Object)) {\n          throw new Error(\n            \"Cannot discard object by reference because it is not a Qooxdoo object, please remove it using the original ID; object=\" +\n              obj\n          );\n        }\n        id = obj.getQxObjectId();\n        if (this.__ownedQxObjects[id] !== obj) {\n          throw new Error(\n            \"Cannot discard object because it is not owned by this, this=\" +\n              this +\n              \", object=\" +\n              obj\n          );\n        }\n      }\n\n      if (obj !== null) {\n        if (!(obj instanceof qx.core.Object)) {\n          this.__removeOwnedQxObjectImpl(obj);\n          delete this.__ownedQxObjects[id];\n        } else {\n          obj.__changingQxOwner = true;\n          try {\n            this.__removeOwnedQxObjectImpl(obj);\n            obj._cascadeQxObjectIdChanges();\n          } finally {\n            obj.__changingQxOwner = false;\n          }\n        }\n      }\n    },\n\n    /**\n     * Removes an owned object\n     *\n     * @param obj {qx.core.Object} the object\n     */\n    __removeOwnedQxObjectImpl(obj) {\n      if (obj !== null) {\n        var id = obj.getQxObjectId();\n        obj.setQxOwner(null);\n        delete this.__ownedQxObjects[id];\n      }\n    },\n\n    /**\n     * Returns an array of objects that are owned by this object, or an empty\n     * array if none exists.\n     *\n     * @return {Array}\n     */\n    getOwnedQxObjects() {\n      return this.__ownedQxObjects ? Object.values(this.__ownedQxObjects) : [];\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}