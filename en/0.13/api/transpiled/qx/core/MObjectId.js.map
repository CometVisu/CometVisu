{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "qxOwner",
    "init",
    "check",
    "nullable",
    "apply",
    "qxObjectId",
    "value",
    "indexOf",
    "members",
    "__ownedQxObjects",
    "__changingQxOwner",
    "_applyQxOwner",
    "oldValue",
    "Error",
    "_applyQxObjectId",
    "owner",
    "getQxOwner",
    "__onOwnedObjectIdChange",
    "_cascadeQxObjectIdChanges",
    "__P_165_2",
    "obj",
    "newId",
    "oldId",
    "getContentElement",
    "contentElement",
    "updateObjectId",
    "name",
    "core",
    "Object",
    "getQxObject",
    "id",
    "undefined",
    "controlId",
    "pos",
    "substring",
    "result",
    "segs",
    "split",
    "target",
    "found",
    "every",
    "seg",
    "length",
    "tmp",
    "_createQxObject",
    "childControl",
    "getChildControl",
    "Environment",
    "get",
    "concat",
    "classname",
    "_createQxObjectImpl",
    "addOwnedQxObject",
    "thatOwner",
    "__removeOwnedQxObjectImpl",
    "getQxObjectId",
    "setQxOwner",
    "setQxObjectId",
    "removeOwnedQxObject",
    "args",
    "__P_165_3",
    "getOwnedQxObjects",
    "values",
    "MObjectId"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MObjectId.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2017 Zenesis Limited, http://www.zenesis.com\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A mixin providing objects by ID and owners.\r\n *\r\n * The typical use of IDs is to override the `_createQxObjectImpl` method and create\r\n * new instances on demand; all code should access these instances by calling\r\n * `getQxObject`.\r\n */\r\nqx.Mixin.define(\"qx.core.MObjectId\", {\r\n  /*\r\n   * ****************************************************************************\r\n   * PROPERTIES\r\n   * ****************************************************************************\r\n   */\r\n\r\n  properties: {\r\n    /** The owning object */\r\n    qxOwner: {\r\n      init: null,\r\n      check: \"qx.core.Object\",\r\n      nullable: true,\r\n      apply: \"_applyQxOwner\"\r\n    },\r\n\r\n    /** {String} The ID of the object.  */\r\n    qxObjectId: {\r\n      init: null,\r\n      check(value) {\r\n        return (\r\n          value === null || (typeof value == \"string\" && value.indexOf(\"/\") < 0)\r\n        );\r\n      },\r\n      nullable: true,\r\n      apply: \"_applyQxObjectId\"\r\n    }\r\n  },\r\n\r\n  /*\r\n   * ****************************************************************************\r\n   * MEMBERS\r\n   * ****************************************************************************\r\n   */\r\n\r\n  members: {\r\n    __ownedQxObjects: null,\r\n    __changingQxOwner: false,\r\n\r\n    /**\r\n     * Apply owner\r\n     */\r\n    _applyQxOwner(value, oldValue) {\r\n      if (!this.__changingQxOwner) {\r\n        throw new Error(\r\n          \"Please use API methods to change owner, not the property\"\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Apply objectId\r\n     */\r\n    _applyQxObjectId(value, oldValue) {\r\n      if (!this.__changingQxOwner) {\r\n        var owner = this.getQxOwner();\r\n        if (owner) {\r\n          owner.__onOwnedObjectIdChange(this, value, oldValue);\r\n        }\r\n        this._cascadeQxObjectIdChanges();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Called when a child's objectId changes\r\n     */\r\n    __onOwnedObjectIdChange(obj, newId, oldId) {\r\n      delete this.__ownedQxObjects[oldId];\r\n      this.__ownedQxObjects[newId] = obj;\r\n    },\r\n\r\n    /**\r\n     * Reflect changes to IDs or owners\r\n     */\r\n    _cascadeQxObjectIdChanges() {\r\n      if (typeof this.getContentElement == \"function\") {\r\n        var contentElement = this.getContentElement();\r\n        if (contentElement) {\r\n          contentElement.updateObjectId();\r\n        }\r\n      }\r\n      if (this.__ownedQxObjects) {\r\n        for (var name in this.__ownedQxObjects) {\r\n          var obj = this.__ownedQxObjects[name];\r\n          if (obj instanceof qx.core.Object) {\r\n            obj._cascadeQxObjectIdChanges();\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the object with the specified ID\r\n     *\r\n     * @param id\r\n     *          {String} ID of the object\r\n     * @return {qx.core.Object?} the found object\r\n     */\r\n    getQxObject(id) {\r\n      if (this.__ownedQxObjects) {\r\n        var obj = this.__ownedQxObjects[id];\r\n        if (obj !== undefined) {\r\n          return obj;\r\n        }\r\n      }\r\n\r\n      // Separate out the child control ID\r\n      var controlId = null;\r\n      var pos = id.indexOf(\"#\");\r\n      if (pos > -1) {\r\n        controlId = id.substring(pos + 1);\r\n        id = id.substring(0, pos);\r\n      }\r\n\r\n      var result = undefined;\r\n\r\n      // Handle paths\r\n      if (id.indexOf(\"/\") > -1) {\r\n        var segs = id.split(\"/\");\r\n        var target = this;\r\n        var found = segs.every(function (seg) {\r\n          if (!seg.length) {\r\n            return true;\r\n          }\r\n          if (!target) {\r\n            return false;\r\n          }\r\n          var tmp = target.getQxObject(seg);\r\n          if (tmp !== undefined) {\r\n            target = tmp;\r\n            return true;\r\n          }\r\n        });\r\n        if (found) {\r\n          result = target;\r\n        }\r\n      } else {\r\n        // No object, creating the object\r\n        result = this._createQxObject(id);\r\n      }\r\n\r\n      if (result && controlId) {\r\n        var childControl = result.getChildControl(controlId);\r\n        return childControl;\r\n      }\r\n\r\n      if (!qx.core.Environment.get(\"qx.core.Object.allowUndefinedObjectId\")) {\r\n        if (result === undefined) {\r\n          throw new Error(\r\n            `Cannot find a QX Object in ${this.classname} [${this}] with id=${id}`\r\n          );\r\n        }\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * Creates the object and adds it to a list; most classes are expected to\r\n     * override `_createQxObjectImpl` NOT this method.\r\n     *\r\n     * @param id {String} ID of the object\r\n     * @return {qx.core.Object?} the created object\r\n     */\r\n    _createQxObject(id) {\r\n      var result = this._createQxObjectImpl(id);\r\n      if (result !== undefined) {\r\n        this.addOwnedQxObject(result, id);\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     * Creates the object, intended to be overridden. Null is a valid return\r\n     * value and will be cached by `getQxObject`, however `undefined` is NOT a\r\n     * valid value and so will not be cached meaning that `_createQxObjectImpl`\r\n     * will be called multiple times until a valid value is returned.\r\n     *\r\n     * @param id {String} ID of the object\r\n     * @return {qx.core.Object?} the created object\r\n     */\r\n    _createQxObjectImpl(id) {\r\n      return undefined;\r\n    },\r\n\r\n    /**\r\n     * Adds an object as owned by this object\r\n     *\r\n     * @param obj {qx.core.Object} the object to register\r\n     * @param id {String?} the id to set when registering the object\r\n     */\r\n    addOwnedQxObject(obj, id) {\r\n      if (!this.__ownedQxObjects) {\r\n        this.__ownedQxObjects = {};\r\n      }\r\n\r\n      if (!(obj instanceof qx.core.Object)) {\r\n        if (!id) {\r\n          throw new Error(\r\n            \"Cannot register an object that has no ID, obj=\" + obj\r\n          );\r\n        }\r\n        if (this.__ownedQxObjects[id]) {\r\n          throw new Error(\r\n            \"Cannot register an object with ID '\" +\r\n              id +\r\n              \"' because that ID is already in use, this=\" +\r\n              this +\r\n              \", obj=\" +\r\n              obj\r\n          );\r\n        }\r\n        this.__ownedQxObjects[id] = obj;\r\n        return;\r\n      }\r\n\r\n      var thatOwner = obj.getQxOwner();\r\n      if (thatOwner === this) {\r\n        return;\r\n      }\r\n      obj.__changingQxOwner = true;\r\n      try {\r\n        if (thatOwner) {\r\n          thatOwner.__removeOwnedQxObjectImpl(obj);\r\n        }\r\n        if (id === undefined) {\r\n          id = obj.getQxObjectId();\r\n        }\r\n        if (!id) {\r\n          throw new Error(\r\n            \"Cannot register an object that has no ID, obj=\" + obj\r\n          );\r\n        }\r\n        if (this.__ownedQxObjects[id]) {\r\n          throw new Error(\r\n            \"Cannot register an object with ID '\" +\r\n              id +\r\n              \"' because that ID is already in use, this=\" +\r\n              this +\r\n              \", obj=\" +\r\n              obj\r\n          );\r\n        }\r\n        if (obj.getQxOwner() != null) {\r\n          throw new Error(\r\n            \"Cannot register an object with ID '\" +\r\n              id +\r\n              \"' because it is already owned by another object this=\" +\r\n              this +\r\n              \", obj=\" +\r\n              obj\r\n          );\r\n        }\r\n        obj.setQxOwner(this);\r\n        obj.setQxObjectId(id);\r\n        obj._cascadeQxObjectIdChanges();\r\n      } finally {\r\n        obj.__changingQxOwner = false;\r\n      }\r\n      this.__ownedQxObjects[id] = obj;\r\n    },\r\n\r\n    /**\r\n     * Discards an object from the list of owned objects; note that this does\r\n     * not dispose of the object, simply forgets it if it exists.\r\n     *\r\n     * @param args {String|Object} the ID of the object to discard, or the object itself\r\n     */\r\n    removeOwnedQxObject(args) {\r\n      if (!this.__ownedQxObjects) {\r\n        throw new Error(\r\n          \"Cannot discard object because it is not owned by this, this=\" +\r\n            this +\r\n            \", object=\" +\r\n            obj\r\n        );\r\n      }\r\n\r\n      var id;\r\n      var obj;\r\n      if (typeof args === \"string\") {\r\n        if (args.indexOf(\"/\") > -1) {\r\n          throw new Error(\"Cannot discard owned objects based on a path\");\r\n        }\r\n        id = args;\r\n        obj = this.__ownedQxObjects[id];\r\n        if (obj === undefined) {\r\n          return;\r\n        }\r\n      } else {\r\n        obj = args;\r\n        if (!(obj instanceof qx.core.Object)) {\r\n          throw new Error(\r\n            \"Cannot discard object by reference because it is not a Qooxdoo object, please remove it using the original ID; object=\" +\r\n              obj\r\n          );\r\n        }\r\n        id = obj.getQxObjectId();\r\n        if (this.__ownedQxObjects[id] !== obj) {\r\n          throw new Error(\r\n            \"Cannot discard object because it is not owned by this, this=\" +\r\n              this +\r\n              \", object=\" +\r\n              obj\r\n          );\r\n        }\r\n      }\r\n\r\n      if (obj !== null) {\r\n        if (!(obj instanceof qx.core.Object)) {\r\n          this.__removeOwnedQxObjectImpl(obj);\r\n          delete this.__ownedQxObjects[id];\r\n        } else {\r\n          obj.__changingQxOwner = true;\r\n          try {\r\n            this.__removeOwnedQxObjectImpl(obj);\r\n            obj._cascadeQxObjectIdChanges();\r\n          } finally {\r\n            obj.__changingQxOwner = false;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes an owned object\r\n     *\r\n     * @param obj {qx.core.Object} the object\r\n     */\r\n    __removeOwnedQxObjectImpl(obj) {\r\n      if (obj !== null) {\r\n        var id = obj.getQxObjectId();\r\n        obj.setQxOwner(null);\r\n        delete this.__ownedQxObjects[id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns an array of objects that are owned by this object, or an empty\r\n     * array if none exists.\r\n     *\r\n     * @return {Array}\r\n     */\r\n    getOwnedQxObjects() {\r\n      return this.__ownedQxObjects ? Object.values(this.__ownedQxObjects) : [];\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}