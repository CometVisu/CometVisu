{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "qxOwner",
    "init",
    "check",
    "nullable",
    "apply",
    "qxObjectId",
    "value",
    "indexOf",
    "statics",
    "handleObjects",
    "clazz",
    "instance",
    "id",
    "_objectsDef$id",
    "_clazz$$$includes",
    "objectsDef",
    "$$objects",
    "clazzObject",
    "call",
    "undefined",
    "_iterator",
    "_createForOfIteratorHelper",
    "$$includes",
    "_step",
    "s",
    "n",
    "done",
    "mixin",
    "mixinObject",
    "core",
    "MObjectId",
    "err",
    "e",
    "f",
    "members",
    "__ownedQxObjects",
    "__changingQxOwner",
    "_applyQxOwner",
    "oldValue",
    "Error",
    "_applyQxObjectId",
    "owner",
    "getQxOwner",
    "__onOwnedObjectIdChange",
    "_cascadeQxObjectIdChanges",
    "obj",
    "newId",
    "oldId",
    "getContentElement",
    "contentElement",
    "updateObjectId",
    "name",
    "Object",
    "getQxObject",
    "controlId",
    "pos",
    "substring",
    "result",
    "segments",
    "split",
    "target",
    "found",
    "every",
    "segment",
    "length",
    "tmp",
    "_createQxObject",
    "childControl",
    "getChildControl",
    "Environment",
    "get",
    "concat",
    "classname",
    "_createQxObjectImpl",
    "addOwnedQxObject",
    "thatOwner",
    "__removeOwnedQxObjectImpl",
    "getQxObjectId",
    "setQxOwner",
    "setQxObjectId",
    "removeOwnedQxObject",
    "args",
    "getOwnedQxObjects",
    "values"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/core/MObjectId.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\n/**\n * A mixin providing objects by ID and owners.\n *\n * The typical use of IDs is to override the `_createQxObjectImpl` method and create\n * new instances on demand; all code should access these instances by calling\n * `getQxObject`.\n */\nqx.Mixin.define(\"qx.core.MObjectId\", {\n  /*\n   * ****************************************************************************\n   * PROPERTIES\n   * ****************************************************************************\n   */\n\n  properties: {\n    /** The owning object */\n    qxOwner: {\n      init: null,\n      check: \"qx.core.Object\",\n      nullable: true,\n      apply: \"_applyQxOwner\"\n    },\n\n    /** {String} The ID of the object.  */\n    qxObjectId: {\n      init: null,\n      check(value) {\n        return (\n          value === null || (typeof value == \"string\" && value.indexOf(\"/\") < 0)\n        );\n      },\n      nullable: true,\n      apply: \"_applyQxObjectId\"\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n  statics: {\n    handleObjects(clazz, instance, id) {\n      const objectsDef = clazz.$$objects;\n      const clazzObject = objectsDef?.[id]?.call(instance);\n\n      if (clazzObject !== undefined) {\n        return clazzObject;\n      }\n\n      for (const mixin of clazz.$$includes ?? []) {\n        const mixinObject = qx.core.MObjectId.handleObjects(\n          mixin,\n          instance,\n          id\n        );\n\n        if (mixinObject !== undefined) {\n          return mixinObject;\n        }\n      }\n\n      return undefined;\n    }\n  },\n\n  members: {\n    __ownedQxObjects: null,\n    __changingQxOwner: false,\n\n    /**\n     * Apply owner\n     */\n    _applyQxOwner(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        throw new Error(\n          \"Please use API methods to change owner, not the property\"\n        );\n      }\n    },\n\n    /**\n     * Apply objectId\n     */\n    _applyQxObjectId(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        var owner = this.getQxOwner();\n        if (owner) {\n          owner.__onOwnedObjectIdChange(this, value, oldValue);\n        }\n        this._cascadeQxObjectIdChanges();\n      }\n    },\n\n    /**\n     * Called when a child's objectId changes\n     */\n    __onOwnedObjectIdChange(obj, newId, oldId) {\n      delete this.__ownedQxObjects[oldId];\n      this.__ownedQxObjects[newId] = obj;\n    },\n\n    /**\n     * Reflect changes to IDs or owners\n     */\n    _cascadeQxObjectIdChanges() {\n      if (typeof this.getContentElement == \"function\") {\n        var contentElement = this.getContentElement();\n        if (contentElement) {\n          contentElement.updateObjectId();\n        }\n      }\n      if (this.__ownedQxObjects) {\n        for (var name in this.__ownedQxObjects) {\n          var obj = this.__ownedQxObjects[name];\n          if (obj instanceof qx.core.Object) {\n            obj._cascadeQxObjectIdChanges();\n          }\n        }\n      }\n    },\n\n    /**\n     * Returns the object with the specified ID\n     *\n     * @param id\n     *          {String} ID of the object\n     * @return {qx.core.Object?} the found object\n     */\n    getQxObject(id) {\n      if (this.__ownedQxObjects) {\n        var obj = this.__ownedQxObjects[id];\n        if (obj !== undefined) {\n          return obj;\n        }\n      }\n\n      // Separate out the child control ID\n      var controlId = null;\n      var pos = id.indexOf(\"#\");\n      if (pos > -1) {\n        controlId = id.substring(pos + 1);\n        id = id.substring(0, pos);\n      }\n\n      var result = undefined;\n\n      // Handle paths\n      if (id.indexOf(\"/\") > -1) {\n        var segments = id.split(\"/\");\n        var target = this;\n        var found = segments.every(segment => {\n          if (!segment.length) {\n            return true;\n          }\n          if (!target) {\n            return false;\n          }\n          var tmp;\n          if (segment === \"..\") {\n            tmp = target.getQxOwner();\n          } else {\n            tmp = target.getQxObject(segment);\n          }\n          if (tmp !== undefined) {\n            target = tmp;\n            return true;\n          }\n        });\n        if (found) {\n          result = target;\n        }\n      } else {\n        // No object, creating the object\n        result = this._createQxObject(id);\n      }\n\n      if (result && controlId) {\n        var childControl = result.getChildControl(controlId);\n        return childControl;\n      }\n\n      if (!qx.core.Environment.get(\"qx.core.Object.allowUndefinedObjectId\")) {\n        if (result === undefined) {\n          throw new Error(\n            `Cannot find a QX Object in ${this.classname} [${this}] with id=${id}`\n          );\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Creates the object and adds it to a list; most classes are expected to\n     * override `_createQxObjectImpl` NOT this method.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObject(id) {\n      var result = this._createQxObjectImpl(id);\n      if (result !== undefined) {\n        this.addOwnedQxObject(result, id);\n      }\n      return result;\n    },\n\n    /**\n     * Creates the object, intended to be overridden. Null is a valid return\n     * value and will be cached by `getQxObject`, however `undefined` is NOT a\n     * valid value and so will not be cached meaning that `_createQxObjectImpl`\n     * will be called multiple times until a valid value is returned.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObjectImpl(id) {\n      return undefined;\n    },\n\n    /**\n     * Adds an object as owned by this object\n     *\n     * @param obj {qx.core.Object} the object to register\n     * @param id {String?} the id to set when registering the object\n     */\n    addOwnedQxObject(obj, id) {\n      if (!this.__ownedQxObjects) {\n        this.__ownedQxObjects = {};\n      }\n\n      if (!(obj instanceof qx.core.Object)) {\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        this.__ownedQxObjects[id] = obj;\n        return;\n      }\n\n      var thatOwner = obj.getQxOwner();\n      if (thatOwner === this) {\n        return;\n      }\n      obj.__changingQxOwner = true;\n      try {\n        if (thatOwner) {\n          thatOwner.__removeOwnedQxObjectImpl(obj);\n        }\n        if (id === undefined) {\n          id = obj.getQxObjectId();\n        }\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        if (obj.getQxOwner() != null) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because it is already owned by another object this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        obj.setQxOwner(this);\n        obj.setQxObjectId(id);\n        obj._cascadeQxObjectIdChanges();\n      } finally {\n        obj.__changingQxOwner = false;\n      }\n      this.__ownedQxObjects[id] = obj;\n    },\n\n    /**\n     * Discards an object from the list of owned objects; note that this does\n     * not dispose of the object, simply forgets it if it exists.\n     *\n     * @param args {String|Object} the ID of the object to discard, or the object itself\n     */\n    removeOwnedQxObject(args) {\n      if (!this.__ownedQxObjects) {\n        throw new Error(\n          \"Cannot discard object because it is not owned by this, this=\" +\n            this +\n            \", object=\" +\n            obj\n        );\n      }\n\n      var id;\n      var obj;\n      if (typeof args === \"string\") {\n        if (args.indexOf(\"/\") > -1) {\n          throw new Error(\"Cannot discard owned objects based on a path\");\n        }\n        id = args;\n        obj = this.__ownedQxObjects[id];\n        if (obj === undefined) {\n          return;\n        }\n      } else {\n        obj = args;\n        if (!(obj instanceof qx.core.Object)) {\n          throw new Error(\n            \"Cannot discard object by reference because it is not a Qooxdoo object, please remove it using the original ID; object=\" +\n              obj\n          );\n        }\n        id = obj.getQxObjectId();\n        if (this.__ownedQxObjects[id] !== obj) {\n          throw new Error(\n            \"Cannot discard object because it is not owned by this, this=\" +\n              this +\n              \", object=\" +\n              obj\n          );\n        }\n      }\n\n      if (obj !== null) {\n        if (!(obj instanceof qx.core.Object)) {\n          this.__removeOwnedQxObjectImpl(obj);\n          delete this.__ownedQxObjects[id];\n        } else {\n          obj.__changingQxOwner = true;\n          try {\n            this.__removeOwnedQxObjectImpl(obj);\n            obj._cascadeQxObjectIdChanges();\n          } finally {\n            obj.__changingQxOwner = false;\n          }\n        }\n      }\n    },\n\n    /**\n     * Removes an owned object\n     *\n     * @param obj {qx.core.Object} the object\n     */\n    __removeOwnedQxObjectImpl(obj) {\n      if (obj !== null) {\n        var id = obj.getQxObjectId();\n        obj.setQxOwner(null);\n        delete this.__ownedQxObjects[id];\n      }\n    },\n\n    /**\n     * Returns an array of objects that are owned by this object, or an empty\n     * array if none exists.\n     *\n     * @return {Array}\n     */\n    getOwnedQxObjects() {\n      return this.__ownedQxObjects ? Object.values(this.__ownedQxObjects) : [];\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}