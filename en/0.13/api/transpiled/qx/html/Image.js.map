{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Element",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "constructor",
    "call",
    "registerProperty",
    "_setSourceProperty",
    "writer",
    "key",
    "property",
    "value",
    "JSON",
    "stringify",
    "_setScaleProperty",
    "members",
    "__paddingTop",
    "__paddingLeft",
    "tagNameHint",
    "setPadding",
    "paddingLeft",
    "paddingTop",
    "getNodeName",
    "setStyle",
    "elem",
    "getDomElement",
    "getAllStyles",
    "getStyle",
    "backgroundRepeat",
    "source",
    "_getProperty",
    "scale",
    "repeat",
    "bom",
    "element",
    "Decoration",
    "update",
    "_removeProperty",
    "direct",
    "_setProperty",
    "_createDomElement",
    "core",
    "Environment",
    "get",
    "setNodeName",
    "getTagName",
    "Image",
    "superclass",
    "prototype",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "setSource",
    "getSource",
    "resetSource",
    "setScale",
    "getScale"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/html/Image.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This is a simple image class using the low level image features of\n * qooxdoo and wraps it for the qx.html layer.\n */\nqx.Class.define(\"qx.html.Image\", {\n  extend: qx.html.Element,\n\n  /**\n   * Creates a new Image\n   *\n   * @see constructor for {Element}\n   */\n  construct(tagName, styles, attributes) {\n    super(tagName, styles, attributes);\n    this.registerProperty(\n      \"source\",\n      null,\n      this._setSourceProperty,\n      (writer, key, property) =>\n        property.value && writer(\"src=\" + JSON.stringify(property.value))\n    );\n\n    this.registerProperty(\"scale\", null, this._setScaleProperty);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __paddingTop: null,\n    __paddingLeft: null,\n\n    // this member variable is only used for IE browsers to be able\n    // to the tag name which will be set. This is heavily connected to the runtime\n    // change of decorators and the use of external (=unmanaged images). It is\n    // necessary to be able to determine what tag will be used e.g. before the\n    // ImageLoader has finished its loading of an external image.\n    // See Bug #3894 for more details\n    tagNameHint: null,\n\n    /**\n     * Maps padding to background-position if the widget is rendered as a\n     * background image\n     * @param paddingLeft {Integer} left padding value\n     * @param paddingTop {Integer} top padding value\n     */\n    setPadding(paddingLeft, paddingTop) {\n      this.__paddingLeft = paddingLeft;\n      this.__paddingTop = paddingTop;\n\n      if (this.getNodeName() == \"div\") {\n        this.setStyle(\n          \"backgroundPosition\",\n          paddingLeft + \"px \" + paddingTop + \"px\"\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ELEMENT API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Implementation of setter for the \"source\" property\n     *\n     * @param value {String?} value to set\n     */\n    _setSourceProperty(value) {\n      var elem = this.getDomElement();\n\n      // To prevent any wrong background-position or -repeat it is necessary\n      // to reset those styles whenever a background-image is updated.\n      // This is only necessary if any backgroundImage was set already.\n      // See bug #3376 for details\n      var styles = this.getAllStyles() || {};\n\n      if (this.getNodeName() == \"div\" && this.getStyle(\"backgroundImage\")) {\n        styles.backgroundRepeat = null;\n      }\n\n      var source = this._getProperty(\"source\");\n      var scale = this._getProperty(\"scale\");\n      var repeat = scale ? \"scale\" : \"no-repeat\";\n\n      // Source can be null in certain circumstances.\n      // See bug #3701 for details.\n      if (source != null) {\n        // Normalize \"\" to null\n        source = source || null;\n\n        styles.paddingTop = this.__paddingTop;\n        styles.paddingLeft = this.__paddingLeft;\n\n        qx.bom.element.Decoration.update(elem, source, repeat, styles);\n      }\n    },\n\n    _setScaleProperty(value) {\n      // Nothing\n    },\n\n    // overridden\n    _removeProperty(key, direct) {\n      if (key == \"source\") {\n        // Work-around check for null in #_applyProperty, introduced with fix\n        // for bug #3701. Use empty string that is later normalized to null.\n        // This fixes bug #4524.\n        this._setProperty(key, \"\", direct);\n      } else {\n        this._setProperty(key, null, direct);\n      }\n    },\n\n    // overridden\n    _createDomElement() {\n      var scale = this._getProperty(\"scale\");\n      var repeat = scale ? \"scale\" : \"no-repeat\";\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var source = this._getProperty(\"source\");\n\n        if (this.tagNameHint != null) {\n          this.setNodeName(this.tagNameHint);\n        } else {\n          this.setNodeName(\n            qx.bom.element.Decoration.getTagName(repeat, source)\n          );\n        }\n      } else {\n        this.setNodeName(qx.bom.element.Decoration.getTagName(repeat));\n      }\n\n      return super._createDomElement();\n    },\n\n    // overridden\n    // be sure that style attributes are merged and not overwritten\n    _copyData(fromMarkup, propertiesFromDom) {\n      return super._copyData(true, propertiesFromDom);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMAGE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the image source\n     *\n     * @param value {Boolean} Whether the HTML mode should be used.\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setSource(value) {\n      this._setProperty(\"source\", value);\n      return this;\n    },\n\n    /**\n     * Returns the image source.\n     *\n     * @return {String} Current image source.\n     */\n    getSource() {\n      return this._getProperty(\"source\");\n    },\n\n    /**\n     * Resets the current source to null which means that no image\n     * is shown anymore.\n     * @return {qx.html.Image} The current instance for chaining\n     */\n    resetSource() {\n      // webkit browser do not allow to remove the required \"src\" attribute.\n      // If removing the attribute the old image is still visible.\n      if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        this._setProperty(\"source\", \"qx/static/blank.gif\");\n      } else {\n        this._removeProperty(\"source\", true);\n      }\n      return this;\n    },\n\n    /**\n     * Whether the image should be scaled or not.\n     *\n     * @param value {Boolean} Scale the image\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setScale(value) {\n      this._setProperty(\"scale\", value);\n      return this;\n    },\n\n    /**\n     * Returns whether the image is scaled or not.\n     *\n     * @return {Boolean} Whether the image is scaled\n     */\n    getScale() {\n      return this._getProperty(\"scale\");\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}