{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Element",
    "construct",
    "slotName",
    "match",
    "Error",
    "concat",
    "constructor",
    "call",
    "name",
    "Slot",
    "DEFAULT",
    "_defaultChildren",
    "members",
    "inject",
    "_serializeImpl",
    "serializer",
    "_this$_children",
    "openTag",
    "_nodeName",
    "pushQxObject",
    "id",
    "getQxObjectIdFor",
    "setAttribute",
    "_children",
    "length",
    "i",
    "closeTag",
    "popQxObject",
    "getDefaultChildren",
    "addDefaultChild",
    "child",
    "push",
    "e",
    "sealDefaultChildren",
    "Object",
    "seal",
    "getName",
    "getAttribute",
    "statics"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/html/Slot.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2023 ZenesisUK https://www.zenesis.com/\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Will Johnson (WillsterJohnson)\n\n************************************************************************ */\n\n/**\n * The slot turns JSX from a syntax convenience into a declaratively expressive system.\n *\n * Passing children to a custom tag:\n * ```jsx\n * const MyFirstSlot = () => (\n *   <p>\n *     <slot />\n *   </p>\n * );\n *\n * const UseFirstSlot = (\n *   <MyFirstSlot>\n *     Lorem Ipsum Dolor Sit Amet\n *   </MyFirstSlot>\n * );\n * ```\n * Output:\n * ```html\n * <p>\n *   Lorem Ipsum Dolor Sit Amet\n * </p>\n * ```\n *\n * Declared children of the slot are the default children to use when no\n * children are passed or injected. Default children may be *any* valid JSX.\n *\n * Slots are named by passing a `name` attribute to the slot, and used by\n * passing a corresponding `slot` attribute to the child. In this way, slots\n * can be used to declare multiple remote children of the Custom Tag.\n */\nqx.Class.define(\"qx.html.Slot\", {\n  extend: qx.html.Element,\n\n  /**\n   * Creates a new Slot\n   *\n   * @see constructor for {Element}\n   */\n  construct(slotName) {\n    if (\n      typeof slotName === \"string\" &&\n      !slotName?.match(/^[a-zA-Z0-9\\-\\_]+$/)\n    ) {\n      throw new Error(\n        `Slot name \"${slotName}\" is invalid! Slot names may only contain alphanumeric characters, hyphens, and underscores.`\n      );\n    }\n\n    super(\"slot\", {}, { name: slotName ?? qx.html.Slot.DEFAULT });\n    this._defaultChildren = [];\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**@override */\n    inject() {\n      throw new Error(\n        \"Cannot inject into <slot>! Injections only work for the top-most element of a JSX expression.\"\n      );\n    },\n\n    /**@override */\n    _serializeImpl(serializer) {\n      serializer.openTag(this._nodeName);\n      serializer.pushQxObject(this);\n\n      let id = serializer.getQxObjectIdFor(this);\n      if (id) {\n        serializer.setAttribute(\"data-qx-object-id\", `\"${id}\"`);\n      }\n\n      // Children\n      if (this._children?.length) {\n        for (var i = 0; i < this._children.length; i++) {\n          this._children[i]._serializeImpl(serializer);\n        }\n      } else {\n        for (var i = 0; i < this._defaultChildren.length; i++) {\n          this._defaultChildren[i]._serializeImpl(serializer);\n        }\n      }\n      serializer.closeTag();\n      serializer.popQxObject(this);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SLOT API\n    ---------------------------------------------------------------------------\n    */\n\n    _defaultChildren: null,\n\n    /**\n     * @returns {ReadonlyArray<qx.html.Node>} The default children of this slot\n     */\n    getDefaultChildren() {\n      return this._defaultChildren;\n    },\n\n    addDefaultChild(child) {\n      try {\n        this._defaultChildren.push(child);\n      } catch (e) {\n        throw new Error(\n          \"Cannot modify default children of <slot> outside of declaration!\"\n        );\n      }\n    },\n\n    sealDefaultChildren() {\n      Object.seal(this._defaultChildren);\n    },\n\n    getName() {\n      return this.getAttribute(\"name\");\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n  statics: {\n    DEFAULT: \"qx.html.Slot.DEFAULT\"\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}