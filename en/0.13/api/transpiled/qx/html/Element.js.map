{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Node",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "__styleValues",
    "__attribValues",
    "key",
    "Error",
    "classname",
    "initCssClass",
    "registerProperty",
    "value",
    "_domNode",
    "innerHTML",
    "writer",
    "property",
    "name",
    "statics",
    "DEBUG",
    "_hasRoots",
    "_defaultRoot",
    "_modified",
    "_visibility",
    "_scroll",
    "_actions",
    "__selection",
    "__focusHandler",
    "__mouseCapture",
    "__SELF_CLOSING_TAGS",
    "_scheduleFlush",
    "job",
    "Element",
    "__deferredCall",
    "schedule",
    "flush",
    "obj",
    "focusHandler",
    "__getFocusHandler",
    "focusedDomElement",
    "getFocus",
    "__willBecomeInvisible",
    "blur",
    "activeDomElement",
    "getActive",
    "bom",
    "deactivate",
    "captureDomElement",
    "__getCaptureElement",
    "releaseCapture",
    "later",
    "modified",
    "hc",
    "_willBeSeeable",
    "dom",
    "Hierarchy",
    "isRendered",
    "push",
    "i",
    "l",
    "length",
    "visibility",
    "element",
    "$$disposed",
    "style",
    "display",
    "isVisible",
    "core",
    "Environment",
    "get",
    "document",
    "documentMode",
    "scroll",
    "elem",
    "offsetWidth",
    "done",
    "__lazyScrollX",
    "scrollLeft",
    "__lazyScrollY",
    "scrollTop",
    "intoViewX",
    "__lazyScrollIntoViewX",
    "child",
    "getDomElement",
    "Scroll",
    "align",
    "intoViewY",
    "__lazyScrollIntoViewY",
    "activityEndActions",
    "action",
    "type",
    "args",
    "unshift",
    "apply",
    "selection",
    "Selection",
    "set",
    "start",
    "end",
    "event",
    "handler",
    "Appear",
    "refresh",
    "eventManager",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "Focus",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "domElement",
    "fromDomElement",
    "fromDomNode",
    "setDefaultRoot",
    "root",
    "getDefaultRoot",
    "properties",
    "cssClass",
    "init",
    "nullable",
    "check",
    "members",
    "__root",
    "__styleJobs",
    "__attribJobs",
    "_createDomElement",
    "create",
    "_nodeName",
    "serialize",
    "__childrenHaveChanged",
    "importQxObjectIds",
    "_serializeImpl",
    "data",
    "Attribute",
    "lang",
    "Object",
    "clone",
    "keys",
    "Style",
    "css",
    "compile",
    "_properties",
    "call",
    "undefined",
    "JSON",
    "stringify",
    "_children",
    "connectWidget",
    "widget",
    "connectObject",
    "disconnectWidget",
    "disconnectObject",
    "_addChildImpl",
    "_removeChildImpl",
    "getQxObject",
    "id",
    "thisId",
    "getQxObjectId",
    "thisAttributeId",
    "getAttribute",
    "setAttribute",
    "setQxObjectId",
    "resolveImpl",
    "node",
    "attributeId",
    "endsWith",
    "warn",
    "segs",
    "split",
    "parentNode",
    "addOwnedQxObject",
    "subId",
    "Array",
    "shift",
    "pop",
    "join",
    "Id",
    "children",
    "getChildren",
    "forEach",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "str",
    "classes",
    "startsWith",
    "SVGAnimatedString",
    "baseVal",
    "setCssClass",
    "setStyles",
    "setCss",
    "setVisible",
    "_syncData",
    "jobs",
    "reset",
    "setRoot",
    "isRoot",
    "useMarkup",
    "helper",
    "createElement",
    "getHelperElement",
    "useElement",
    "firstChild",
    "useNode",
    "isFocusable",
    "tabIndex",
    "focusable",
    "FOCUSABLE_ELEMENTS",
    "setSelectable",
    "userSelect",
    "setStyle",
    "isNativelyFocusable",
    "fadeIn",
    "duration",
    "col",
    "qxWeb",
    "isPlaying",
    "stop",
    "once",
    "show",
    "getAnimationHandles",
    "fadeOut",
    "hide",
    "_applyVisible",
    "oldValue",
    "toHashCode",
    "_parent",
    "_scheduleChildrenUpdate",
    "scrollChildIntoViewX",
    "direct",
    "thisEl",
    "childEl",
    "scrollChildIntoViewY",
    "scrollToX",
    "x",
    "lazy",
    "getScrollX",
    "scrollToY",
    "y",
    "getScrollY",
    "disableScrolling",
    "enableScrolling",
    "addListener",
    "__onScroll",
    "removeListener",
    "__inScroll",
    "e",
    "setText",
    "self",
    "Text",
    "remove",
    "add",
    "getText",
    "result",
    "getTextSelection",
    "el",
    "getTextSelectionLength",
    "getLength",
    "getTextSelectionStart",
    "getStart",
    "getTextSelectionEnd",
    "getEnd",
    "setTextSelection",
    "clearTextSelection",
    "clear",
    "__performAction",
    "actions",
    "focus",
    "activate",
    "capture",
    "containerCapture",
    "_applyStyle",
    "map",
    "removeStyle",
    "getStyle",
    "getAllStyles",
    "__breakClasses",
    "toLowerCase",
    "__combineClasses",
    "primaryClass",
    "getCssClass",
    "arr",
    "append",
    "values",
    "addClass",
    "nameLower",
    "removeClass",
    "removeAllClasses",
    "_applyCssClass",
    "getDimensions",
    "mode",
    "left",
    "top",
    "right",
    "bottom",
    "width",
    "height",
    "content",
    "loc",
    "Location",
    "Dimension",
    "getContentSize",
    "canBeSeen",
    "rect",
    "getBoundingClientRect",
    "setAttributes",
    "removeAttribute",
    "defer",
    "util",
    "DeferredCall",
    "destruct",
    "hash"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/html/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * High-performance, high-level DOM element creation and management.\n *\n * Includes support for HTML and style attributes. Elements also have\n * got a powerful children and visibility management.\n *\n * Processes DOM insertion and modification with advanced logic\n * to reduce the real transactions.\n *\n * From the view of the parent you can use the following children management\n * methods:\n * {@link #getChildren}, {@link #indexOf}, {@link #hasChild}, {@link #add},\n * {@link #addAt}, {@link #remove}, {@link #removeAt}, {@link #removeAll}\n *\n * Each child itself also has got some powerful methods to control its\n * position:\n * {@link #getParent}, {@link #free},\n * {@link #insertInto}, {@link #insertBefore}, {@link #insertAfter},\n * {@link #moveTo}, {@link #moveBefore}, {@link #moveAfter},\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.module.Animation)\n */\nqx.Class.define(\"qx.html.Element\", {\n  extend: qx.html.Node,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a new Element\n   *\n   * @param tagName {String?\"div\"} Tag name of the element to create\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct(tagName, styles, attributes) {\n    super(tagName || \"div\");\n\n    this.__styleValues = styles || null;\n    this.__attribValues = attributes || null;\n    if (attributes) {\n      for (var key in attributes) {\n        if (!key) {\n          throw new Error(\"Invalid unnamed attribute in \" + this.classname);\n        }\n      }\n    }\n    this.initCssClass();\n\n    this.registerProperty(\n      \"innerHtml\",\n      null,\n      function (value) {\n        if (this._domNode) {\n          this._domNode.innerHTML = value;\n        }\n      },\n      function (writer, property, name) {\n        if (property.value) {\n          writer(property.value);\n        }\n      }\n    );\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /*\n    ---------------------------------------------------------------------------\n      STATIC DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} If debugging should be enabled */\n    DEBUG: false,\n\n    /** @type {Integer} number of roots */\n    _hasRoots: 0,\n\n    /** @type {Element} the default root to use */\n    _defaultRoot: null,\n\n    /** @type {Map} Contains the modified {@link qx.html.Element}s. The key is the hash code. */\n    _modified: {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should get hidden or visible at the next flush. The key is the hash code. */\n    _visibility: {},\n\n    /** @type {Map} Contains the {@link qx.html.Element}s which should scrolled at the next flush */\n    _scroll: {},\n\n    /** @type {Array} List of post actions for elements. The key is the action name. The value the {@link qx.html.Element}. */\n    _actions: [],\n\n    /**  @type {Map} List of all selections. */\n    __selection: {},\n\n    __focusHandler: null,\n\n    __mouseCapture: null,\n\n    __SELF_CLOSING_TAGS: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC ELEMENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedule a deferred element queue flush. If the widget subsystem is used\n     * this method gets overwritten by {@link qx.ui.core.queue.Manager}.\n     *\n     * @param job {String} The job descriptor. Should always be <code>\"element\"</code>.\n     */\n    _scheduleFlush(job) {\n      qx.html.Element.__deferredCall.schedule();\n    },\n\n    /**\n     * Flush the global modified list\n     */\n    flush() {\n      var obj;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this.DEBUG) {\n          qx.log.Logger.debug(this, \"Flushing elements...\");\n        }\n      }\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // blur elements, which will be removed\n        var focusHandler = this.__getFocusHandler();\n        var focusedDomElement = focusHandler.getFocus();\n        if (\n          focusedDomElement &&\n          this.__willBecomeInvisible(focusedDomElement)\n        ) {\n          focusHandler.blur(focusedDomElement);\n        }\n\n        // deactivate elements, which will be removed\n        var activeDomElement = focusHandler.getActive();\n        if (activeDomElement && this.__willBecomeInvisible(activeDomElement)) {\n          qx.bom.Element.deactivate(activeDomElement);\n        }\n\n        // release capture for elements, which will be removed\n        var captureDomElement = this.__getCaptureElement();\n        if (\n          captureDomElement &&\n          this.__willBecomeInvisible(captureDomElement)\n        ) {\n          qx.bom.Element.releaseCapture(captureDomElement);\n        }\n      }\n\n      var later = [];\n      var modified = qx.html.Element._modified;\n\n      for (var hc in modified) {\n        obj = modified[hc];\n        // Ignore all hidden elements except iframes\n        // but keep them until they get visible (again)\n        if (obj._willBeSeeable() || obj.classname == \"qx.html.Iframe\") {\n          // Separately queue rendered elements\n          if (obj._domNode && qx.dom.Hierarchy.isRendered(obj._domNode)) {\n            later.push(obj);\n          }\n\n          // Flush invisible elements first\n          else {\n            if (qx.core.Environment.get(\"qx.debug\")) {\n              if (this.DEBUG) {\n                obj.debug(\"Flush invisible element\");\n              }\n            }\n\n            obj.flush();\n          }\n\n          // Cleanup modification list\n          delete modified[hc];\n        }\n      }\n\n      for (var i = 0, l = later.length; i < l; i++) {\n        obj = later[i];\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (this.DEBUG) {\n            obj.debug(\"Flush rendered element\");\n          }\n        }\n\n        obj.flush();\n      }\n\n      // Process visibility list\n      var visibility = this._visibility;\n\n      for (var hc in visibility) {\n        obj = visibility[hc];\n\n        var element = obj._domNode;\n        if (!element) {\n          delete visibility[hc];\n          continue;\n        }\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (this.DEBUG) {\n            qx.log.Logger.debug(\n              this,\n              \"Switching visibility to: \" + obj.isVisible()\n            );\n          }\n        }\n\n        // hiding or showing an object and deleting it right after that may\n        // cause an disposed object in the visibility queue [BUG #3607]\n        if (!obj.$$disposed) {\n          element.style.display = obj.isVisible() ? \"\" : \"none\";\n          // also hide the element (fixed some rendering problem in IE<8 & IE8 quirks)\n          if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n            if (!(document.documentMode >= 8)) {\n              element.style.visibility = obj.isVisible() ? \"visible\" : \"hidden\";\n            }\n          }\n        }\n\n        delete visibility[hc];\n      }\n\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        // Process scroll list\n        var scroll = this._scroll;\n        for (var hc in scroll) {\n          obj = scroll[hc];\n          var elem = obj._domNode;\n\n          if (elem && elem.offsetWidth) {\n            var done = true;\n\n            // ScrollToX\n            if (obj.__lazyScrollX != null) {\n              obj._domNode.scrollLeft = obj.__lazyScrollX;\n              delete obj.__lazyScrollX;\n            }\n\n            // ScrollToY\n            if (obj.__lazyScrollY != null) {\n              obj._domNode.scrollTop = obj.__lazyScrollY;\n              delete obj.__lazyScrollY;\n            }\n\n            // ScrollIntoViewX\n            var intoViewX = obj.__lazyScrollIntoViewX;\n            if (intoViewX != null) {\n              var child = intoViewX.element.getDomElement();\n\n              if (child && child.offsetWidth) {\n                qx.bom.element.Scroll.intoViewX(child, elem, intoViewX.align);\n                delete obj.__lazyScrollIntoViewX;\n              } else {\n                done = false;\n              }\n            }\n\n            // ScrollIntoViewY\n            var intoViewY = obj.__lazyScrollIntoViewY;\n            if (intoViewY != null) {\n              var child = intoViewY.element.getDomElement();\n\n              if (child && child.offsetWidth) {\n                qx.bom.element.Scroll.intoViewY(child, elem, intoViewY.align);\n                delete obj.__lazyScrollIntoViewY;\n              } else {\n                done = false;\n              }\n            }\n\n            // Clear flag if all things are done\n            // Otherwise wait for the next flush\n            if (done) {\n              delete scroll[hc];\n            }\n          }\n        }\n\n        var activityEndActions = {\n          releaseCapture: 1,\n          blur: 1,\n          deactivate: 1\n        };\n\n        // Process action list\n        for (var i = 0; i < this._actions.length; i++) {\n          var action = this._actions[i];\n          var element = action.element._domNode;\n          if (\n            !element ||\n            (!activityEndActions[action.type] &&\n              !action.element._willBeSeeable())\n          ) {\n            continue;\n          }\n          var args = action.args;\n          args.unshift(element);\n          qx.bom.Element[action.type].apply(qx.bom.Element, args);\n        }\n        this._actions = [];\n      }\n\n      // Process selection\n      for (var hc in this.__selection) {\n        var selection = this.__selection[hc];\n        var elem = selection.element._domNode;\n        if (elem) {\n          qx.bom.Selection.set(elem, selection.start, selection.end);\n          delete this.__selection[hc];\n        }\n      }\n\n      // Fire appear/disappear events\n      qx.event.handler.Appear.refresh();\n    },\n\n    /**\n     * Get the focus handler\n     *\n     * @return {qx.event.handler.Focus} The focus handler\n     */\n    __getFocusHandler() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__focusHandler) {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__focusHandler = eventManager.getHandler(qx.event.handler.Focus);\n        }\n        return this.__focusHandler;\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__getFocusHandler in headless environment\"\n        );\n      }\n    },\n\n    /**\n     * Get the mouse capture element\n     *\n     * @return {Element} The mouse capture DOM element\n     */\n    __getCaptureElement() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        if (!this.__mouseCapture) {\n          var eventManager = qx.event.Registration.getManager(window);\n          this.__mouseCapture = eventManager.getDispatcher(\n            qx.event.dispatch.MouseCapture\n          );\n        }\n        return this.__mouseCapture.getCaptureElement();\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__getCaptureElement in headless environment\"\n        );\n      }\n    },\n\n    /**\n     * Whether the given DOM element will become invisible after the flush\n     *\n     * @param domElement {Element} The DOM element to check\n     * @return {Boolean} Whether the element will become invisible\n     */\n    __willBecomeInvisible(domElement) {\n      var element = this.fromDomElement(domElement);\n      return element && !element._willBeSeeable();\n    },\n\n    /**\n     * Finds the Widget for a given DOM element\n     *\n     * @param domElement {DOM} the DOM element\n     * @return {qx.ui.core.Widget} the Widget that created the DOM element\n     * @deprecated {6.1} see qx.html.Node.fromDomNode\n     */\n    fromDomElement(domElement) {\n      return qx.html.Node.fromDomNode(domElement);\n    },\n\n    /**\n     * Sets the default Root element\n     *\n     * @param root {Element} the new default root\n     */\n    setDefaultRoot(root) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this._defaultRoot && root) {\n          qx.log.Logger.warn(\n            qx.html.Element,\n            \"Changing default root, from \" + this._defaultRoot + \" to \" + root\n          );\n        }\n      }\n      this._defaultRoot = root;\n    },\n\n    /**\n     * Returns the default root\n     *\n     * @return {Element} the default root\n     */\n    getDefaultRoot() {\n      return this._defaultRoot;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * @type{String} The primary CSS class for this element\n     *\n     * The implementation will add and remove this class from the list of classes,\n     * this property is provided as a means to easily set the primary class.  Because\n     * SCSS supports inheritance, it's more useful to be able to allow the SCSS\n     * definition to control the inheritance hierarchy of classes.\n     *\n     * For example, a dialog could be implemented in code as a Dialog class derived from\n     * a Window class, but the presentation may be so different that the theme author\n     * would choose to not use inheritance at all.\n     */\n    cssClass: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      apply: \"_applyCssClass\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED HELPERS/DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Boolean} Marker for always visible root nodes (often the body node) */\n    __root: false,\n\n    __lazyScrollIntoViewX: null,\n    __lazyScrollIntoViewY: null,\n\n    __lazyScrollX: null,\n    __lazyScrollY: null,\n\n    __styleJobs: null,\n    __attribJobs: null,\n\n    __styleValues: null,\n    __attribValues: null,\n\n    /*\n     * @Override\n     */\n    _createDomElement() {\n      return qx.dom.Element.create(this._nodeName);\n    },\n\n    /*\n     * @Override\n     */\n    serialize(writer) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return super.serialize(writer);\n    },\n\n    /*\n     * @Override\n     */\n    _serializeImpl(writer) {\n      writer(\"<\", this._nodeName);\n\n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        for (var key in data) {\n          writer(\" \");\n          Attribute.serialize(writer, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues || {};\n      if (!this.isVisible()) {\n        data = qx.lang.Object.clone(data);\n        data.display = \"none\";\n      }\n      if (Object.keys(data).length) {\n        var Style = qx.bom.element.Style;\n        var css = Style.compile(data);\n        if (css) {\n          writer(' style=\"', css, '\"');\n        }\n      }\n\n      // Copy properties\n      var data = this._properties;\n      if (data) {\n        for (var key in this._properties) {\n          let property = this._properties[key];\n          if (property.serialize) {\n            writer(\" \");\n            property.serialize.call(this, writer, key, property);\n          } else if (property.value !== undefined && property.value !== null) {\n            writer(\" \");\n            let value = JSON.stringify(property.value);\n            writer(key, \"=\", value);\n          }\n        }\n      }\n\n      // Children\n      if (!this._children || !this._children.length) {\n        if (qx.html.Element.__SELF_CLOSING_TAGS[this._nodeName]) {\n          writer(\">\");\n        } else {\n          writer(\"></\", this._nodeName, \">\");\n        }\n      } else {\n        writer(\">\");\n        for (var i = 0; i < this._children.length; i++) {\n          this._children[i]._serializeImpl(writer);\n        }\n        writer(\"</\", this._nodeName, \">\");\n      }\n    },\n\n    /**\n     * Connects a widget to this element, and to the DOM element in this Element.  They\n     * remain associated until disposed or disconnectWidget is called\n     *\n     * @param widget {qx.ui.core.Widget} the widget to associate\n     * @deprecated {6.1} see connectObject\n     */\n    connectWidget(widget) {\n      return this.connectObject(widget);\n    },\n\n    /**\n     * Disconnects a widget from this element and the DOM element.  The DOM element remains\n     * untouched, except that it can no longer be used to find the Widget.\n     *\n     * @param qxObject {qx.core.Object} the Widget\n     * @deprecated {6.1} see disconnectObject\n     */\n    disconnectWidget(widget) {\n      return this.disconnectObject(widget);\n    },\n\n    /*\n     * @Override\n     */\n    _addChildImpl(child) {\n      super._addChildImpl(child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    _removeChildImpl(child) {\n      super._removeChildImpl(child);\n      this.__childrenHaveChanged = true;\n    },\n\n    /*\n     * @Override\n     */\n    getQxObject(id) {\n      if (this.__childrenHaveChanged) {\n        this.importQxObjectIds();\n        this.__childrenHaveChanged = false;\n      }\n      return super.getQxObject(id);\n    },\n\n    /**\n     * When a tree of virtual dom is loaded via JSX code, the paths in the `data-qx-object-id`\n     * attribute are relative to the JSX, and these attribuite values need to be loaded into the\n     * `qxObjectId` property - while resolving the parent parts of the path.\n     *\n     * EG\n     *  <div data-qx-object-id=\"root\">\n     *    <div>\n     *      <div data-qx-object-id=\"root/child\">\n     *\n     * The root DIV has to take on the qxObjectId of \"root\", and the third DIV has to have the\n     * ID \"child\" and be owned by the first DIV.\n     *\n     * This function imports and resolves those IDs\n     */\n    importQxObjectIds() {\n      let thisId = this.getQxObjectId();\n      let thisAttributeId = this.getAttribute(\"data-qx-object-id\");\n      if (thisId) {\n        this.setAttribute(\"data-qx-object-id\", thisId, true);\n      } else if (thisAttributeId) {\n        this.setQxObjectId(thisAttributeId);\n      }\n\n      const resolveImpl = node => {\n        if (!(node instanceof qx.html.Element)) {\n          return;\n        }\n        let id = node.getQxObjectId();\n        let attributeId = node.getAttribute(\"data-qx-object-id\");\n        if (id) {\n          if (attributeId && !attributeId.endsWith(id)) {\n            this.warn(\n              `Attribute ID ${attributeId} is not compatible with the qxObjectId ${id}; the qxObjectId will take prescedence`\n            );\n          }\n          node.setAttribute(\"data-qx-object-id\", id, true);\n        } else if (attributeId) {\n          let segs = attributeId ? attributeId.split(\"/\") : [];\n\n          // Only one segment is easy, add directly to the parent\n          if (segs.length == 1) {\n            let parentNode = this;\n            parentNode.addOwnedQxObject(node, attributeId);\n\n            // Lots of segments\n          } else if (segs.length > 1) {\n            let parentNode = null;\n\n            // If the first segment is the outer parent\n            if (segs[0] == thisAttributeId || segs[0] == thisId) {\n              // Only two segments, means that the parent is the outer and the last segment\n              //  is the ID of the node being examined\n              if (segs.length == 2) {\n                parentNode = this;\n\n                // Otherwise resolve it further\n              } else {\n                // Extract the segments, exclude the first and last, and that leaves us with a relative ID path\n                let subId = qx.lang.Array.clone(segs);\n                subId.shift();\n                subId.pop();\n                subId = subId.join(\"/\");\n                parentNode = this.getQxObject(subId);\n              }\n\n              // Not the outer node, then resolve as a global.\n            } else {\n              parentNode = qx.core.Id.getQxObject(attributeId);\n            }\n\n            if (!parentNode) {\n              throw new Error(\n                `Cannot resolve object id ancestors, id=${attributeId}`\n              );\n            }\n\n            parentNode.addOwnedQxObject(node, segs[segs.length - 1]);\n          }\n        }\n\n        let children = node.getChildren();\n        if (children) {\n          children.forEach(resolveImpl);\n        }\n      };\n\n      let children = this.getChildren();\n      if (children) {\n        children.forEach(resolveImpl);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SUPPORT FOR ATTRIBUTE/STYLE/EVENT FLUSH\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Copies data between the internal representation and the DOM. This\n     * simply copies all the data and only works well directly after\n     * element creation. After this the data must be synced using {@link #_syncData}\n     *\n     * @param fromMarkup {Boolean} Whether the copy should respect styles\n     *   given from markup\n     */\n    _copyData(fromMarkup, propertiesFromDom) {\n      super._copyData(fromMarkup, propertiesFromDom);\n      var elem = this._domNode;\n\n      // Copy attributes\n      var data = this.__attribValues;\n      if (data) {\n        var Attribute = qx.bom.element.Attribute;\n        if (fromMarkup) {\n          var str;\n          let classes = {};\n          str = this.getAttribute(\"class\");\n          (str ? str.split(\" \") : []).forEach(name => {\n            if (name.startsWith(\"qx-\")) {\n              classes[name] = true;\n            }\n          });\n\n          str = Attribute.get(elem, \"class\");\n          if (!qx.core.Environment.get(\"qx.headless\")) {\n            if (str instanceof window.SVGAnimatedString) {\n              str = str.baseVal;\n            }\n          }\n          (str ? str.split(\" \") : []).forEach(name => (classes[name] = true));\n          classes = Object.keys(classes);\n\n          var segs = classes;\n          if (segs.length) {\n            this.setCssClass(segs[0]);\n            this.setAttribute(\"class\", classes.join(\" \"));\n          } else {\n            this.setCssClass(null);\n            this.setAttribute(\"class\", null);\n          }\n        }\n        for (var key in data) {\n          Attribute.set(elem, key, data[key]);\n        }\n      }\n\n      // Copy styles\n      var data = this.__styleValues;\n      if (data) {\n        var Style = qx.bom.element.Style;\n\n        if (fromMarkup) {\n          Style.setStyles(elem, data);\n        } else {\n          // Set styles at once which is a lot faster in most browsers\n          // compared to separate modifications of many single style properties.\n          Style.setCss(elem, Style.compile(data));\n        }\n      }\n\n      // Copy visibility\n      if (!fromMarkup) {\n        var display = elem.style.display || \"\";\n        if (display == \"\" && !this.isVisible()) {\n          elem.style.display = \"none\";\n        } else if (display == \"none\" && this.isVisible()) {\n          elem.style.display = \"\";\n        }\n      } else {\n        var display = elem.style.display || \"\";\n        this.setVisible(display != \"none\");\n      }\n    },\n\n    /**\n     * Synchronizes data between the internal representation and the DOM. This\n     * is the counterpart of {@link #_copyData} and is used for further updates\n     * after the element has been created.\n     *\n     */\n    _syncData() {\n      super._syncData();\n      var elem = this._domNode;\n\n      var Attribute = qx.bom.element.Attribute;\n      var Style = qx.bom.element.Style;\n\n      // Sync attributes\n      var jobs = this.__attribJobs;\n      if (jobs) {\n        var data = this.__attribValues;\n        if (data) {\n          var value;\n          for (var key in jobs) {\n            value = data[key];\n\n            if (value !== undefined) {\n              Attribute.set(elem, key, value);\n            } else {\n              Attribute.reset(elem, key);\n            }\n          }\n        }\n\n        this.__attribJobs = null;\n      }\n\n      // Sync styles\n      var jobs = this.__styleJobs;\n      if (jobs) {\n        var data = this.__styleValues;\n        if (data) {\n          var styles = {};\n          for (var key in jobs) {\n            styles[key] = data[key];\n          }\n\n          Style.setStyles(elem, styles);\n        }\n\n        this.__styleJobs = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DOM ELEMENT ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's root flag, which indicates\n     * whether the element should be a root element or not.\n     * @param root {Boolean} The root flag.\n     */\n    setRoot(root) {\n      if (root && !this.__root) {\n        qx.html.Element._hasRoots++;\n      } else if (!root && this.__root) {\n        qx.html.Element._hasRoots--;\n      }\n      this.__root = root;\n    },\n\n    /*\n     * @Override\n     */\n    isRoot() {\n      return this.__root;\n    },\n\n    /**\n     * Uses existing markup for this element. This is mainly used\n     * to insert pre-built markup blocks into the element hierarchy.\n     *\n     * @param html {String} HTML markup with one root element\n     *   which is used as the main element for this instance.\n     * @return {Element} The created DOM element\n     */\n    useMarkup(html) {\n      if (this._domNode) {\n        throw new Error(\"Could not overwrite existing element!\");\n      }\n\n      // Prepare extraction\n      // We have a IE specific issue with \"Unknown error\" messages\n      // when we try to use the same DOM node again. I am not sure\n      // why this happens. Would be a good performance improvement,\n      // but does not seem to work.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var helper = document.createElement(\"div\");\n      } else {\n        var helper = qx.dom.Element.getHelperElement();\n      }\n\n      // Extract first element\n      helper.innerHTML = html;\n      this.useElement(helper.firstChild);\n\n      return this._domNode;\n    },\n\n    /**\n     * Uses an existing element instead of creating one. This may be interesting\n     * when the DOM element is directly needed to add content etc.\n     *\n     * @param elem {Element} Element to reuse\n     * @deprecated {6.1} see useNode\n     */\n    useElement(elem) {\n      this.useNode(elem);\n    },\n\n    /**\n     * Whether the element is focusable (or will be when created)\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isFocusable() {\n      var tabIndex = this.getAttribute(\"tabIndex\");\n      if (tabIndex >= 1) {\n        return true;\n      }\n\n      var focusable = qx.event.handler.Focus.FOCUSABLE_ELEMENTS;\n      if (tabIndex >= 0 && focusable[this._nodeName]) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Set whether the element is selectable. It uses the qooxdoo attribute\n     * qxSelectable with the values 'on' or 'off'.\n     * In webkit, a special css property will be used (-webkit-user-select).\n     *\n     * @param value {Boolean} True, if the element should be selectable.\n     */\n    setSelectable(value) {\n      this.setAttribute(\"qxSelectable\", value ? \"on\" : \"off\");\n      var userSelect = qx.core.Environment.get(\"css.userselect\");\n      if (userSelect) {\n        this.setStyle(\n          userSelect,\n          value ? \"text\" : qx.core.Environment.get(\"css.userselect.none\")\n        );\n      }\n    },\n\n    /**\n     * Whether the element is natively focusable (or will be when created)\n     *\n     * This ignores the configured tabIndex.\n     *\n     * @return {Boolean} <code>true</code> when the element is focusable.\n     */\n    isNativelyFocusable() {\n      return !!qx.event.handler.Focus.FOCUSABLE_ELEMENTS[this._nodeName];\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Fades in the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n      // create the element right away\n      if (!this._domNode) {\n        this.flush();\n        col.push(this._domNode);\n      }\n      if (this._domNode) {\n        col.fadeIn(duration).once(\n          \"animationEnd\",\n          function () {\n            this.show();\n            qx.html.Element.flush();\n          },\n          this\n        );\n\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n    /**\n     * Fades out the element.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut(duration) {\n      var col = qxWeb(this._domNode);\n      if (col.isPlaying()) {\n        col.stop();\n      }\n\n      if (this._domNode) {\n        col.fadeOut(duration).once(\n          \"animationEnd\",\n          function () {\n            this.hide();\n            qx.html.Element.flush();\n          },\n          this\n        );\n\n        return col.getAnimationHandles()[0];\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /*\n     * @Override\n     */\n    _applyVisible(value, oldValue) {\n      super._applyVisible(value, oldValue);\n      if (value) {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n\n        // Must be sure that the element gets included into the DOM.\n        if (this._parent) {\n          this._parent._scheduleChildrenUpdate();\n        }\n      } else {\n        if (this._domNode) {\n          qx.html.Element._visibility[this.toHashCode()] = this;\n          qx.html.Element._scheduleFlush(\"element\");\n        }\n      }\n    },\n\n    /**\n     * Marks the element as visible which means that a previously applied\n     * CSS style of display=none gets removed and the element will inserted\n     * into the DOM, when this had not already happened before.\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    show() {\n      this.setVisible(true);\n      return this;\n    },\n\n    /**\n     * Marks the element as hidden which means it will kept in DOM (if it\n     * is already there, but configured hidden using a CSS style of display=none).\n     *\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    hide() {\n      this.setVisible(false);\n      return this;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX(elem, align, direct) {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (\n        direct !== false &&\n        thisEl &&\n        thisEl.offsetWidth &&\n        childEl &&\n        childEl.offsetWidth\n      ) {\n        qx.bom.element.Scroll.intoViewX(childEl, thisEl, align);\n      } else {\n        this.__lazyScrollIntoViewX = {\n          element: elem,\n          align: align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollX;\n    },\n\n    /**\n     * Scrolls the given child element into view. Only scrolls children.\n     * Do not influence elements on top of this element.\n     *\n     * If the element is currently invisible it gets scrolled automatically\n     * at the next time it is visible again (queued).\n     *\n     * @param elem {qx.html.Element} The element to scroll into the viewport.\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY(elem, align, direct) {\n      var thisEl = this._domNode;\n      var childEl = elem.getDomElement();\n\n      if (\n        direct !== false &&\n        thisEl &&\n        thisEl.offsetWidth &&\n        childEl &&\n        childEl.offsetWidth\n      ) {\n        qx.bom.element.Scroll.intoViewY(childEl, thisEl, align);\n      } else {\n        this.__lazyScrollIntoViewY = {\n          element: elem,\n          align: align\n        };\n\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollY;\n    },\n\n    /**\n     * Scrolls the element to the given left position.\n     *\n     * @param x {Integer} Horizontal scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToX(x, lazy) {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth) {\n        thisEl.scrollLeft = x;\n        delete this.__lazyScrollX;\n      } else {\n        this.__lazyScrollX = x;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewX;\n    },\n\n    /**\n     * Get the horizontal scroll position.\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX() {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollLeft;\n      }\n\n      return this.__lazyScrollX || 0;\n    },\n\n    /**\n     * Scrolls the element to the given top position.\n     *\n     * @param y {Integer} Vertical scroll position\n     * @param lazy {Boolean?false} Whether the scrolling should be performed\n     *    during element flush.\n     */\n    scrollToY(y, lazy) {\n      var thisEl = this._domNode;\n      if (lazy !== true && thisEl && thisEl.offsetWidth) {\n        thisEl.scrollTop = y;\n        delete this.__lazyScrollY;\n      } else {\n        this.__lazyScrollY = y;\n        qx.html.Element._scroll[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      delete this.__lazyScrollIntoViewY;\n    },\n\n    /**\n     * Get the vertical scroll position.\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY() {\n      var thisEl = this._domNode;\n      if (thisEl) {\n        return thisEl.scrollTop;\n      }\n\n      return this.__lazyScrollY || 0;\n    },\n\n    /**\n     * Disables browser-native scrolling\n     */\n    disableScrolling() {\n      this.enableScrolling();\n      this.scrollToX(0);\n      this.scrollToY(0);\n      this.addListener(\"scroll\", this.__onScroll, this);\n    },\n\n    /**\n     * Re-enables browser-native scrolling\n     */\n    enableScrolling() {\n      this.removeListener(\"scroll\", this.__onScroll, this);\n    },\n\n    __inScroll: null,\n\n    /**\n     * Handler for the scroll-event\n     *\n     * @param e {qx.event.type.Native} scroll-event\n     */\n    __onScroll(e) {\n      if (!this.__inScroll) {\n        this.__inScroll = true;\n        this._domNode.scrollTop = 0;\n        this._domNode.scrollLeft = 0;\n        delete this.__inScroll;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /*\n     * Sets the text value of this element; it will delete children first, except\n     * for the first node which (if it is a Text node) will have it's value updated\n     *\n     * @param value {String} the text to set\n     */\n    setText(value) {\n      var self = this;\n      var children = this._children ? qx.lang.Array.clone(this._children) : [];\n      if (children[0] instanceof qx.html.Text) {\n        children[0].setText(value);\n        children.shift();\n        children.forEach(function (child) {\n          self.remove(child);\n        });\n      } else {\n        children.forEach(function (child) {\n          self.remove(child);\n        });\n        this.add(new qx.html.Text(value));\n      }\n    },\n\n    /**\n     * Returns the text value, accumulated from all child nodes\n     *\n     * @return {String} the text value\n     */\n    getText() {\n      var result = [];\n      if (this._children) {\n        this._children.forEach(function (child) {\n          result.push(child.getText());\n        });\n      }\n      return result.join(\"\");\n    },\n\n    /**\n     * Get the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {String|null}\n     */\n    getTextSelection() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.get(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the length of selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getLength(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the start of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionStart() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getStart(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Get the end of the selection of the element.\n     *\n     * If the underlaying DOM element is not yet created, this methods returns\n     * a null value.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionEnd() {\n      var el = this._domNode;\n      if (el) {\n        return qx.bom.Selection.getEnd(el);\n      }\n\n      return null;\n    },\n\n    /**\n     * Set the selection of the element with the given start and end value.\n     * If no end value is passed the selection will extend to the end.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     * @param start {Integer} start of the selection (zero based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection(start, end) {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.set(el, start, end);\n        return;\n      }\n\n      // if element not created, save the selection for flushing\n      qx.html.Element.__selection[this.toHashCode()] = {\n        element: this,\n        start: start,\n        end: end\n      };\n\n      qx.html.Element._scheduleFlush(\"element\");\n    },\n\n    /**\n     * Clears the selection of the element.\n     *\n     * This method only works if the underlying DOM element is already created.\n     *\n     */\n    clearTextSelection() {\n      var el = this._domNode;\n      if (el) {\n        qx.bom.Selection.clear(el);\n      }\n      delete qx.html.Element.__selection[this.toHashCode()];\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS/ACTIVATE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Takes the action to process as argument and queues this action if the\n     * underlying DOM element is not yet created.\n     *\n     * Note that \"actions\" are functions in `qx.bom.Element` and only apply to\n     * environments with a user interface.  This will throw an error if the user\n     * interface is headless\n     *\n     * @param action {String} action to queue\n     * @param args {Array} optional list of arguments for the action\n     */\n    __performAction(action, args) {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        var actions = qx.html.Element._actions;\n\n        actions.push({\n          type: action,\n          element: this,\n          args: args || []\n        });\n\n        qx.html.Element._scheduleFlush(\"element\");\n      } else {\n        throw new Error(\n          \"Unexpected use of qx.html.Element.__performAction in headles environment\"\n        );\n      }\n    },\n\n    /**\n     * Focus this element.\n     *\n     * If the underlaying DOM element is not yet created, the\n     * focus is queued for processing after the element creation.\n     *\n     * Silently does nothing when in a headless environment\n     */\n    focus() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"focus\");\n      }\n    },\n\n    /**\n     * Mark this element to get blurred on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    blur() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"blur\");\n      }\n    },\n\n    /**\n     * Mark this element to get activated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    activate() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"activate\");\n      }\n    },\n\n    /**\n     * Mark this element to get deactivated on the next flush of the queue\n     *\n     * Silently does nothing when in a headless environment\n     *\n     */\n    deactivate() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"deactivate\");\n      }\n    },\n\n    /**\n     * Captures all mouse events to this element\n     *\n     * Silently does nothing when in a headless environment\n     *\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(containerCapture) {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"capture\", [containerCapture !== false]);\n      }\n    },\n\n    /**\n     * Releases this element from a previous {@link #capture} call\n     *\n     * Silently does nothing when in a headless environment\n     */\n    releaseCapture() {\n      if (!qx.core.Environment.get(\"qx.headless\")) {\n        this.__performAction(\"releaseCapture\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyle(key, value, direct) {\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this.__styleValues[key] == value) {\n        return this;\n      }\n\n      this._applyStyle(key, value, this.__styleValues[key]);\n      if (value == null) {\n        delete this.__styleValues[key];\n      } else {\n        this.__styleValues[key] = value;\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode) {\n        // Omit queuing in direct mode\n        if (direct) {\n          qx.bom.element.Style.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        // Store job info\n        this.__styleJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Called by setStyle when a value of a style changes; this is intended to be\n     * overridden to allow the element to update properties etc according to the\n     * style\n     *\n     * @param key {String} the style value\n     * @param value {String?} the value to set\n     * @param oldValue {String?} The previous value (not from DOM)\n     */\n    _applyStyle(key, value, oldValue) {\n      // Nothing\n    },\n\n    /**\n     * Convenience method to modify a set of styles at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setStyles(map, direct) {\n      // inline calls to \"set\" because this method is very\n      // performance critical!\n\n      var Style = qx.bom.element.Style;\n\n      if (!this.__styleValues) {\n        this.__styleValues = {};\n      }\n\n      if (this._domNode) {\n        // Dynamically create if needed\n        if (!this.__styleJobs) {\n          this.__styleJobs = {};\n        }\n\n        for (var key in map) {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n\n          // Omit queuing in direct mode\n          if (direct) {\n            Style.set(this._domNode, key, value);\n            continue;\n          }\n\n          // Store job info\n          this.__styleJobs[key] = true;\n        }\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      } else {\n        for (var key in map) {\n          var value = map[key];\n          if (this.__styleValues[key] == value) {\n            continue;\n          }\n\n          this._applyStyle(key, value, this.__styleValues[key]);\n          if (value == null) {\n            delete this.__styleValues[key];\n          } else {\n            this.__styleValues[key] = value;\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Removes the given style attribute\n     *\n     * @param key {String} the name of the style attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeStyle(key, direct) {\n      this.setStyle(key, null, direct);\n      return this;\n    },\n\n    /**\n     * Get the value of the given style attribute.\n     *\n     * @param key {String} name of the style attribute\n     * @return {var} the value of the style attribute\n     */\n    getStyle(key) {\n      return this.__styleValues ? this.__styleValues[key] : null;\n    },\n\n    /**\n     * Returns a map of all styles. Do not modify the result map!\n     *\n     * @return {Map} All styles or <code>null</code> when none are configured.\n     */\n    getAllStyles() {\n      return this.__styleValues || null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CSS CLASS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n    __breakClasses() {\n      var map = {};\n      (this.getAttribute(\"class\") || \"\").split(\" \").forEach(function (name) {\n        if (name) {\n          map[name.toLowerCase()] = name;\n        }\n      });\n      return map;\n    },\n\n    __combineClasses(map) {\n      var primaryClass = this.getCssClass();\n      var arr = [];\n      if (primaryClass) {\n        arr.push(primaryClass);\n        delete map[primaryClass.toLowerCase()];\n      }\n      qx.lang.Array.append(arr, Object.values(map));\n      return arr.length ? arr.join(\" \") : null;\n    },\n\n    /**\n     * Adds a css class to the element.\n     *\n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    addClass(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass() || \"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n\n        classes[nameLower] = name;\n      });\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n    /**\n     * Removes a CSS class from the current element.\n     *\n     * @param name {String} Name of the CSS class.\n     * @return {Element} this, for chaining\n     */\n    removeClass(name) {\n      var classes = this.__breakClasses();\n      var primaryClass = (this.getCssClass() || \"\").toLowerCase();\n      name.split(\" \").forEach(name => {\n        var nameLower = name.toLowerCase();\n        if (nameLower == primaryClass) {\n          this.setCssClass(null);\n        }\n\n        delete classes[nameLower];\n      });\n\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n      return this;\n    },\n\n    /**\n     * Removes all CSS classed from the current element.\n     */\n    removeAllClasses() {\n      this.setCssClass(null);\n      this.setAttribute(\"class\", \"\");\n    },\n\n    /**\n     * Apply method for cssClass\n     */\n    _applyCssClass(value, oldValue) {\n      var classes = this.__breakClasses();\n      if (oldValue) {\n        oldValue.split(\" \").forEach(name => delete classes[name.toLowerCase()]);\n      }\n      if (value) {\n        value.split(\" \").forEach(name => (classes[name.toLowerCase()] = name));\n      }\n      this.setAttribute(\"class\", this.__combineClasses(classes));\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE AND POSITION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the size and position of this element; this is just a helper method that wraps\n     * the calls to qx.bom.*\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).\n     *\n     * @param mode {String} the type of size required, see above\n     * @return {Object} a map, containing:\n     *  left, right, top, bottom - document co-ords\n     *  content - Object, containing:\n     *    width, height: maximum permissible content size\n     */\n    getDimensions(mode) {\n      if (!this._domNode) {\n        return {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: 0,\n          height: 0,\n          content: {\n            width: 0,\n            height: 0\n          }\n        };\n      }\n      var loc = qx.bom.element.Location.get(this._domNode, mode);\n      loc.content = qx.bom.element.Dimension.getContentSize(this._domNode);\n      loc.width = loc.right - loc.left;\n      loc.height = loc.bottom - loc.top;\n      return loc;\n    },\n\n    /**\n     * Detects whether the DOM Node is visible\n     */\n    canBeSeen() {\n      if (this._domNode && this.isVisible()) {\n        var rect = this._domNode.getBoundingClientRect();\n        if (\n          rect.top > 0 ||\n          rect.left > 0 ||\n          rect.width > 0 ||\n          rect.height > 0\n        ) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ATTRIBUTE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set up the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param value {var} the value\n     * @param direct {Boolean?false} Whether the value should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttribute(key, value, direct) {\n      if (!this.__attribValues) {\n        this.__attribValues = {};\n      }\n\n      if (this.__attribValues[key] == value) {\n        return this;\n      }\n\n      if (value == null) {\n        delete this.__attribValues[key];\n      } else {\n        this.__attribValues[key] = value;\n      }\n\n      if (key == \"data-qx-object-id\") {\n        this.setQxObjectId(value);\n      }\n\n      // Uncreated elements simply copy all data\n      // on creation. We don't need to remember any\n      // jobs. It is a simple full list copy.\n      if (this._domNode) {\n        // Omit queuing in direct mode\n        if (direct) {\n          qx.bom.element.Attribute.set(this._domNode, key, value);\n          return this;\n        }\n\n        // Dynamically create if needed\n        if (!this.__attribJobs) {\n          this.__attribJobs = {};\n        }\n\n        // Store job info\n        this.__attribJobs[key] = true;\n\n        // Register modification\n        qx.html.Element._modified[this.toHashCode()] = this;\n        qx.html.Element._scheduleFlush(\"element\");\n      }\n\n      return this;\n    },\n\n    /**\n     * Convenience method to modify a set of attributes at once.\n     *\n     * @param map {Map} a map where the key is the name of the property\n     *    and the value is the value to use.\n     * @param direct {Boolean?false} Whether the values should be applied\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    setAttributes(map, direct) {\n      for (var key in map) {\n        this.setAttribute(key, map[key], direct);\n      }\n\n      return this;\n    },\n\n    /**\n     * Removes the given attribute\n     *\n     * @param key {String} the name of the attribute\n     * @param direct {Boolean?false} Whether the value should be removed\n     *    directly (without queuing)\n     * @return {qx.html.Element} this object (for chaining support)\n     */\n    removeAttribute(key, direct) {\n      return this.setAttribute(key, null, direct);\n    },\n\n    /**\n     * Get the value of the given attribute.\n     *\n     * @param key {String} name of the attribute\n     * @return {var} the value of the attribute\n     */\n    getAttribute(key) {\n      return this.__attribValues ? this.__attribValues[key] : null;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DEFER\n   *****************************************************************************\n   */\n\n  defer(statics) {\n    statics.__deferredCall = new qx.util.DeferredCall(statics.flush, statics);\n    statics.__SELF_CLOSING_TAGS = {};\n    [\n      \"area\",\n      \"base\",\n      \"br\",\n      \"col\",\n      \"embed\",\n      \"hr\",\n      \"img\",\n      \"input\",\n      \"link\",\n      \"meta\",\n      \"param\",\n      \"source\",\n      \"track\",\n      \"wbr\"\n    ].forEach(function (tagName) {\n      statics.__SELF_CLOSING_TAGS[tagName] = true;\n    });\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct() {\n    var hash = this.toHashCode();\n    if (hash) {\n      delete qx.html.Element._modified[hash];\n      delete qx.html.Element._scroll[hash];\n    }\n    this.setRoot(false);\n\n    this.__attribValues =\n      this.__styleValues =\n      this.__attribJobs =\n      this.__styleJobs =\n      this.__lazyScrollIntoViewX =\n      this.__lazyScrollIntoViewY =\n        null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iBAAhB,EAAmC;IACjCC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,IADiB;;IAGjC;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,SAlBiC,qBAkBvBC,OAlBuB,EAkBdC,MAlBc,EAkBNC,UAlBM,EAkBM;MACrC,oCAAMF,OAAO,IAAI,KAAjB;MAEA,KAAKG,SAAL,GAAqBF,MAAM,IAAI,IAA/B;MACA,KAAKG,SAAL,GAAsBF,UAAU,IAAI,IAApC;;MACA,IAAIA,UAAJ,EAAgB;QACd,KAAK,IAAIG,GAAT,IAAgBH,UAAhB,EAA4B;UAC1B,IAAI,CAACG,GAAL,EAAU;YACR,MAAM,IAAIC,KAAJ,CAAU,kCAAkC,KAAKC,SAAjD,CAAN;UACD;QACF;MACF;;MACD,KAAKC,YAAL;MAEA,KAAKC,gBAAL,CACE,WADF,EAEE,IAFF,EAGE,UAAUC,KAAV,EAAiB;QACf,IAAI,KAAKC,QAAT,EAAmB;UACjB,KAAKA,QAAL,CAAcC,SAAd,GAA0BF,KAA1B;QACD;MACF,CAPH,EAQE,UAAUG,MAAV,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;QAChC,IAAID,QAAQ,CAACJ,KAAb,EAAoB;UAClBG,MAAM,CAACC,QAAQ,CAACJ,KAAV,CAAN;QACD;MACF,CAZH;IAcD,CA9CgC;;IAgDjC;AACF;AACA;AACA;AACA;IAEEM,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;;MAEI;MACAC,KAAK,EAAE,KARA;;MAUP;MACAC,SAAS,EAAE,CAXJ;;MAaP;MACAC,YAAY,EAAE,IAdP;;MAgBP;MACAC,SAAS,EAAE,EAjBJ;;MAmBP;MACAC,WAAW,EAAE,EApBN;;MAsBP;MACAC,OAAO,EAAE,EAvBF;;MAyBP;MACAC,QAAQ,EAAE,EA1BH;;MA4BP;MACAC,SAAW,EAAE,EA7BN;MA+BPC,SAAc,EAAE,IA/BT;MAiCPC,SAAc,EAAE,IAjCT;MAmCPC,SAAmB,EAAE,IAnCd;;MAqCP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;MACIC,cAjDO,0BAiDQC,GAjDR,EAiDa;QAClBvC,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBC,SAAhB,CAA+BC,QAA/B;MACD,CAnDM;;MAqDP;AACJ;AACA;MACIC,KAxDO,mBAwDC;QACN,IAAIC,GAAJ;QAQ6C;UAC3C;UACA,IAAIC,YAAY,GAAG,KAAKC,SAAL,EAAnB;;UACA,IAAIC,iBAAiB,GAAGF,YAAY,CAACG,QAAb,EAAxB;;UACA,IACED,iBAAiB,IACjB,KAAKE,SAAL,CAA2BF,iBAA3B,CAFF,EAGE;YACAF,YAAY,CAACK,IAAb,CAAkBH,iBAAlB;UACD,CAT0C,CAW3C;;;UACA,IAAII,gBAAgB,GAAGN,YAAY,CAACO,SAAb,EAAvB;;UACA,IAAID,gBAAgB,IAAI,KAAKF,SAAL,CAA2BE,gBAA3B,CAAxB,EAAsE;YACpEnD,EAAE,CAACqD,GAAH,CAAOb,OAAP,CAAec,UAAf,CAA0BH,gBAA1B;UACD,CAf0C,CAiB3C;;;UACA,IAAII,iBAAiB,GAAG,KAAKC,SAAL,EAAxB;;UACA,IACED,iBAAiB,IACjB,KAAKN,SAAL,CAA2BM,iBAA3B,CAFF,EAGE;YACAvD,EAAE,CAACqD,GAAH,CAAOb,OAAP,CAAeiB,cAAf,CAA8BF,iBAA9B;UACD;QACF;QAED,IAAIG,KAAK,GAAG,EAAZ;QACA,IAAIC,QAAQ,GAAG3D,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBV,SAA/B;;QAEA,KAAK,IAAI8B,EAAT,IAAeD,QAAf,EAAyB;UACvBf,GAAG,GAAGe,QAAQ,CAACC,EAAD,CAAd,CADuB,CAEvB;UACA;;UACA,IAAIhB,GAAG,CAACiB,cAAJ,MAAwBjB,GAAG,CAAC3B,SAAJ,IAAiB,gBAA7C,EAA+D;YAC7D;YACA,IAAI2B,GAAG,CAACvB,QAAJ,IAAgBrB,EAAE,CAAC8D,GAAH,CAAOC,SAAP,CAAiBC,UAAjB,CAA4BpB,GAAG,CAACvB,QAAhC,CAApB,EAA+D;cAC7DqC,KAAK,CAACO,IAAN,CAAWrB,GAAX;YACD,CAFD,CAIA;YAJA,KAKK;cAOHA,GAAG,CAACD,KAAJ;YACD,CAf4D,CAiB7D;;;YACA,OAAOgB,QAAQ,CAACC,EAAD,CAAf;UACD;QACF;;QAED,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;UAC5CtB,GAAG,GAAGc,KAAK,CAACQ,CAAD,CAAX;UAQAtB,GAAG,CAACD,KAAJ;QACD,CA3EK,CA6EN;;;QACA,IAAI0B,UAAU,GAAG,KAAKtC,WAAtB;;QAEA,KAAK,IAAI6B,EAAT,IAAeS,UAAf,EAA2B;UACzBzB,GAAG,GAAGyB,UAAU,CAACT,EAAD,CAAhB;UAEA,IAAIU,OAAO,GAAG1B,GAAG,CAACvB,QAAlB;;UACA,IAAI,CAACiD,OAAL,EAAc;YACZ,OAAOD,UAAU,CAACT,EAAD,CAAjB;YACA;UACD;;UAWD;UACA;UACA,IAAI,CAAChB,GAAG,CAAC2B,UAAT,EAAqB;YACnBD,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB7B,GAAG,CAAC8B,SAAJ,KAAkB,EAAlB,GAAuB,MAA/C,CADmB,CAEnB;;YACA,IAAI1E,EAAE,CAAC2E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA9C,EAAwD;cACtD,IAAI,EAAEC,QAAQ,CAACC,YAAT,IAAyB,CAA3B,CAAJ,EAAmC;gBACjCT,OAAO,CAACE,KAAR,CAAcH,UAAd,GAA2BzB,GAAG,CAAC8B,SAAJ,KAAkB,SAAlB,GAA8B,QAAzD;cACD;YACF;UACF;;UAED,OAAOL,UAAU,CAACT,EAAD,CAAjB;QACD;;QAE4C;UAC3C;UACA,IAAIoB,MAAM,GAAG,KAAKhD,OAAlB;;UACA,KAAK,IAAI4B,EAAT,IAAeoB,MAAf,EAAuB;YACrBpC,GAAG,GAAGoC,MAAM,CAACpB,EAAD,CAAZ;YACA,IAAIqB,IAAI,GAAGrC,GAAG,CAACvB,QAAf;;YAEA,IAAI4D,IAAI,IAAIA,IAAI,CAACC,WAAjB,EAA8B;cAC5B,IAAIC,IAAI,GAAG,IAAX,CAD4B,CAG5B;;cACA,IAAIvC,GAAG,CAACwC,UAAJ,IAAqB,IAAzB,EAA+B;gBAC7BxC,GAAG,CAACvB,QAAJ,CAAagE,UAAb,GAA0BzC,GAAG,CAACwC,UAA9B;gBACA,OAAOxC,GAAG,CAACwC,UAAX;cACD,CAP2B,CAS5B;;;cACA,IAAIxC,GAAG,CAAC0C,UAAJ,IAAqB,IAAzB,EAA+B;gBAC7B1C,GAAG,CAACvB,QAAJ,CAAakE,SAAb,GAAyB3C,GAAG,CAAC0C,UAA7B;gBACA,OAAO1C,GAAG,CAAC0C,UAAX;cACD,CAb2B,CAe5B;;;cACA,IAAIE,SAAS,GAAG5C,GAAG,CAAC6C,UAApB;;cACA,IAAID,SAAS,IAAI,IAAjB,EAAuB;gBACrB,IAAIE,KAAK,GAAGF,SAAS,CAAClB,OAAV,CAAkBqB,aAAlB,EAAZ;;gBAEA,IAAID,KAAK,IAAIA,KAAK,CAACR,WAAnB,EAAgC;kBAC9BlF,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAesB,MAAf,CAAsBJ,SAAtB,CAAgCE,KAAhC,EAAuCT,IAAvC,EAA6CO,SAAS,CAACK,KAAvD;kBACA,OAAOjD,GAAG,CAAC6C,UAAX;gBACD,CAHD,MAGO;kBACLN,IAAI,GAAG,KAAP;gBACD;cACF,CA1B2B,CA4B5B;;;cACA,IAAIW,SAAS,GAAGlD,GAAG,CAACmD,UAApB;;cACA,IAAID,SAAS,IAAI,IAAjB,EAAuB;gBACrB,IAAIJ,KAAK,GAAGI,SAAS,CAACxB,OAAV,CAAkBqB,aAAlB,EAAZ;;gBAEA,IAAID,KAAK,IAAIA,KAAK,CAACR,WAAnB,EAAgC;kBAC9BlF,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAesB,MAAf,CAAsBE,SAAtB,CAAgCJ,KAAhC,EAAuCT,IAAvC,EAA6Ca,SAAS,CAACD,KAAvD;kBACA,OAAOjD,GAAG,CAACmD,UAAX;gBACD,CAHD,MAGO;kBACLZ,IAAI,GAAG,KAAP;gBACD;cACF,CAvC2B,CAyC5B;cACA;;;cACA,IAAIA,IAAJ,EAAU;gBACR,OAAOH,MAAM,CAACpB,EAAD,CAAb;cACD;YACF;UACF;;UAED,IAAIoC,kBAAkB,GAAG;YACvBvC,cAAc,EAAE,CADO;YAEvBP,IAAI,EAAE,CAFiB;YAGvBI,UAAU,EAAE;UAHW,CAAzB,CAxD2C,CA8D3C;;UACA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjC,QAAL,CAAcmC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;YAC7C,IAAI+B,MAAM,GAAG,KAAKhE,QAAL,CAAciC,CAAd,CAAb;YACA,IAAII,OAAO,GAAG2B,MAAM,CAAC3B,OAAP,CAAejD,QAA7B;;YACA,IACE,CAACiD,OAAD,IACC,CAAC0B,kBAAkB,CAACC,MAAM,CAACC,IAAR,CAAnB,IACC,CAACD,MAAM,CAAC3B,OAAP,CAAeT,cAAf,EAHL,EAIE;cACA;YACD;;YACD,IAAIsC,IAAI,GAAGF,MAAM,CAACE,IAAlB;YACAA,IAAI,CAACC,OAAL,CAAa9B,OAAb;YACAtE,EAAE,CAACqD,GAAH,CAAOb,OAAP,CAAeyD,MAAM,CAACC,IAAtB,EAA4BG,KAA5B,CAAkCrG,EAAE,CAACqD,GAAH,CAAOb,OAAzC,EAAkD2D,IAAlD;UACD;;UACD,KAAKlE,QAAL,GAAgB,EAAhB;QACD,CA/LK,CAiMN;;QACA,KAAK,IAAI2B,EAAT,IAAe,KAAK1B,SAApB,EAAiC;UAC/B,IAAIoE,SAAS,GAAG,KAAKpE,SAAL,CAAiB0B,EAAjB,CAAhB;UACA,IAAIqB,IAAI,GAAGqB,SAAS,CAAChC,OAAV,CAAkBjD,QAA7B;;UACA,IAAI4D,IAAJ,EAAU;YACRjF,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiBC,GAAjB,CAAqBvB,IAArB,EAA2BqB,SAAS,CAACG,KAArC,EAA4CH,SAAS,CAACI,GAAtD;YACA,OAAO,KAAKxE,SAAL,CAAiB0B,EAAjB,CAAP;UACD;QACF,CAzMK,CA2MN;;;QACA5D,EAAE,CAAC2G,KAAH,CAASC,OAAT,CAAiBC,MAAjB,CAAwBC,OAAxB;MACD,CArQM;;MAuQP;AACJ;AACA;AACA;AACA;MACIhE,SA5QO,uBA4Qa;QAC2B;UAC3C,IAAI,CAAC,KAAKX,SAAV,EAA0B;YACxB,IAAI4E,YAAY,GAAG/G,EAAE,CAAC2G,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiCC,MAAjC,CAAnB;YACA,KAAK/E,SAAL,GAAsB4E,YAAY,CAACI,UAAb,CAAwBnH,EAAE,CAAC2G,KAAH,CAASC,OAAT,CAAiBQ,KAAzC,CAAtB;UACD;;UACD,OAAO,KAAKjF,SAAZ;QACD;MAKF,CAxRM;;MA0RP;AACJ;AACA;AACA;AACA;MACIqB,SA/RO,uBA+Re;QACyB;UAC3C,IAAI,CAAC,KAAKpB,SAAV,EAA0B;YACxB,IAAI2E,YAAY,GAAG/G,EAAE,CAAC2G,KAAH,CAASK,YAAT,CAAsBC,UAAtB,CAAiCC,MAAjC,CAAnB;YACA,KAAK9E,SAAL,GAAsB2E,YAAY,CAACM,aAAb,CACpBrH,EAAE,CAAC2G,KAAH,CAASW,QAAT,CAAkBC,YADE,CAAtB;UAGD;;UACD,OAAO,KAAKnF,SAAL,CAAoBoF,iBAApB,EAAP;QACD;MAKF,CA7SM;;MA+SP;AACJ;AACA;AACA;AACA;AACA;MACIvE,SArTO,qBAqTewE,UArTf,EAqT2B;QAChC,IAAInD,OAAO,GAAG,KAAKoD,cAAL,CAAoBD,UAApB,CAAd;QACA,OAAOnD,OAAO,IAAI,CAACA,OAAO,CAACT,cAAR,EAAnB;MACD,CAxTM;;MA0TP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI6D,cAjUO,0BAiUQD,UAjUR,EAiUoB;QACzB,OAAOzH,EAAE,CAACO,IAAH,CAAQC,IAAR,CAAamH,WAAb,CAAyBF,UAAzB,CAAP;MACD,CAnUM;;MAqUP;AACJ;AACA;AACA;AACA;MACIG,cA1UO,0BA0UQC,IA1UR,EA0Uc;QASnB,KAAKhG,YAAL,GAAoBgG,IAApB;MACD,CApVM;;MAsVP;AACJ;AACA;AACA;AACA;MACIC,cA3VO,4BA2VU;QACf,OAAO,KAAKjG,YAAZ;MACD;IA7VM,CAtDwB;;IAsZjC;AACF;AACA;AACA;AACA;IAEEkG,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,EAAE;QACRC,IAAI,EAAE,IADE;QAERC,QAAQ,EAAE,IAFF;QAGRC,KAAK,EAAE,QAHC;QAIR9B,KAAK,EAAE;MAJC;IAbA,CA5ZqB;;IAibjC;AACF;AACA;AACA;AACA;IAEE+B,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;;MAEI;MACAC,UAAM,EAAE,KARD;MAUP5C,UAAqB,EAAE,IAVhB;MAWPM,UAAqB,EAAE,IAXhB;MAaPX,UAAa,EAAE,IAbR;MAcPE,UAAa,EAAE,IAdR;MAgBPgD,UAAW,EAAE,IAhBN;MAiBPC,UAAY,EAAE,IAjBP;MAmBP1H,SAAa,EAAE,IAnBR;MAoBPC,SAAc,EAAE,IApBT;;MAsBP;AACJ;AACA;MACI0H,iBAzBO,+BAyBa;QAClB,OAAOxI,EAAE,CAAC8D,GAAH,CAAOtB,OAAP,CAAeiG,MAAf,CAAsB,KAAKC,SAA3B,CAAP;MACD,CA3BM;;MA6BP;AACJ;AACA;MACIC,SAhCO,qBAgCGpH,MAhCH,EAgCW;QAChB,IAAI,KAAKqH,UAAT,EAAgC;UAC9B,KAAKC,iBAAL;UACA,KAAKD,UAAL,GAA6B,KAA7B;QACD;;QACD,iEAAuBrH,MAAvB;MACD,CAtCM;;MAwCP;AACJ;AACA;MACIuH,cA3CO,0BA2CQvH,MA3CR,EA2CgB;QACrBA,MAAM,CAAC,GAAD,EAAM,KAAKmH,SAAX,CAAN,CADqB,CAGrB;;QACA,IAAIK,IAAI,GAAG,KAAKjI,SAAhB;;QACA,IAAIiI,IAAJ,EAAU;UACR,IAAIC,SAAS,GAAGhJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe0E,SAA/B;;UACA,KAAK,IAAIjI,GAAT,IAAgBgI,IAAhB,EAAsB;YACpBxH,MAAM,CAAC,GAAD,CAAN;YACAyH,SAAS,CAACL,SAAV,CAAoBpH,MAApB,EAA4BR,GAA5B,EAAiCgI,IAAI,CAAChI,GAAD,CAArC;UACD;QACF,CAXoB,CAarB;;;QACA,IAAIgI,IAAI,GAAG,KAAKlI,SAAL,IAAsB,EAAjC;;QACA,IAAI,CAAC,KAAK6D,SAAL,EAAL,EAAuB;UACrBqE,IAAI,GAAG/I,EAAE,CAACiJ,IAAH,CAAQC,MAAR,CAAeC,KAAf,CAAqBJ,IAArB,CAAP;UACAA,IAAI,CAACtE,OAAL,GAAe,MAAf;QACD;;QACD,IAAIyE,MAAM,CAACE,IAAP,CAAYL,IAAZ,EAAkB3E,MAAtB,EAA8B;UAC5B,IAAIiF,KAAK,GAAGrJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe+E,KAA3B;UACA,IAAIC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAcR,IAAd,CAAV;;UACA,IAAIO,GAAJ,EAAS;YACP/H,MAAM,CAAC,UAAD,EAAa+H,GAAb,EAAkB,GAAlB,CAAN;UACD;QACF,CAzBoB,CA2BrB;;;QACA,IAAIP,IAAI,GAAG,KAAKS,WAAhB;;QACA,IAAIT,IAAJ,EAAU;UACR,KAAK,IAAIhI,GAAT,IAAgB,KAAKyI,WAArB,EAAkC;YAChC,IAAIhI,QAAQ,GAAG,KAAKgI,WAAL,CAAiBzI,GAAjB,CAAf;;YACA,IAAIS,QAAQ,CAACmH,SAAb,EAAwB;cACtBpH,MAAM,CAAC,GAAD,CAAN;cACAC,QAAQ,CAACmH,SAAT,CAAmBc,IAAnB,CAAwB,IAAxB,EAA8BlI,MAA9B,EAAsCR,GAAtC,EAA2CS,QAA3C;YACD,CAHD,MAGO,IAAIA,QAAQ,CAACJ,KAAT,KAAmBsI,SAAnB,IAAgClI,QAAQ,CAACJ,KAAT,KAAmB,IAAvD,EAA6D;cAClEG,MAAM,CAAC,GAAD,CAAN;cACA,IAAIH,KAAK,GAAGuI,IAAI,CAACC,SAAL,CAAepI,QAAQ,CAACJ,KAAxB,CAAZ;cACAG,MAAM,CAACR,GAAD,EAAM,GAAN,EAAWK,KAAX,CAAN;YACD;UACF;QACF,CAzCoB,CA2CrB;;;QACA,IAAI,CAAC,KAAKyI,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAezF,MAAvC,EAA+C;UAC7C,IAAIpE,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBH,SAAhB,CAAoC,KAAKqG,SAAzC,CAAJ,EAAyD;YACvDnH,MAAM,CAAC,GAAD,CAAN;UACD,CAFD,MAEO;YACLA,MAAM,CAAC,KAAD,EAAQ,KAAKmH,SAAb,EAAwB,GAAxB,CAAN;UACD;QACF,CAND,MAMO;UACLnH,MAAM,CAAC,GAAD,CAAN;;UACA,KAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2F,SAAL,CAAezF,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;YAC9C,KAAK2F,SAAL,CAAe3F,CAAf,EAAkB4E,cAAlB,CAAiCvH,MAAjC;UACD;;UACDA,MAAM,CAAC,IAAD,EAAO,KAAKmH,SAAZ,EAAuB,GAAvB,CAAN;QACD;MACF,CApGM;;MAsGP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIoB,aA7GO,yBA6GOC,MA7GP,EA6Ge;QACpB,OAAO,KAAKC,aAAL,CAAmBD,MAAnB,CAAP;MACD,CA/GM;;MAiHP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,gBAxHO,4BAwHUF,MAxHV,EAwHkB;QACvB,OAAO,KAAKG,gBAAL,CAAsBH,MAAtB,CAAP;MACD,CA1HM;;MA4HP;AACJ;AACA;MACII,aA/HO,yBA+HOzE,KA/HP,EA+Hc;QACnB,8DAAoBA,KAApB;;QACA,KAAKkD,UAAL,GAA6B,IAA7B;MACD,CAlIM;;MAoIP;AACJ;AACA;MACIwB,gBAvIO,4BAuIU1E,KAvIV,EAuIiB;QACtB,iEAAuBA,KAAvB;;QACA,KAAKkD,UAAL,GAA6B,IAA7B;MACD,CA1IM;;MA4IP;AACJ;AACA;MACIyB,WA/IO,uBA+IKC,EA/IL,EA+IS;QACd,IAAI,KAAK1B,UAAT,EAAgC;UAC9B,KAAKC,iBAAL;UACA,KAAKD,UAAL,GAA6B,KAA7B;QACD;;QACD,mEAAyB0B,EAAzB;MACD,CArJM;;MAuJP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIzB,iBAtKO,+BAsKa;QAAA;;QAClB,IAAI0B,MAAM,GAAG,KAAKC,aAAL,EAAb;QACA,IAAIC,eAAe,GAAG,KAAKC,YAAL,CAAkB,mBAAlB,CAAtB;;QACA,IAAIH,MAAJ,EAAY;UACV,KAAKI,YAAL,CAAkB,mBAAlB,EAAuCJ,MAAvC,EAA+C,IAA/C;QACD,CAFD,MAEO,IAAIE,eAAJ,EAAqB;UAC1B,KAAKG,aAAL,CAAmBH,eAAnB;QACD;;QAED,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;UAC1B,IAAI,EAAEA,IAAI,YAAY9K,EAAE,CAACO,IAAH,CAAQiC,OAA1B,CAAJ,EAAwC;YACtC;UACD;;UACD,IAAI8H,EAAE,GAAGQ,IAAI,CAACN,aAAL,EAAT;UACA,IAAIO,WAAW,GAAGD,IAAI,CAACJ,YAAL,CAAkB,mBAAlB,CAAlB;;UACA,IAAIJ,EAAJ,EAAQ;YACN,IAAIS,WAAW,IAAI,CAACA,WAAW,CAACC,QAAZ,CAAqBV,EAArB,CAApB,EAA8C;cAC5C,KAAI,CAACW,IAAL,wBACkBF,WADlB,oDACuET,EADvE;YAGD;;YACDQ,IAAI,CAACH,YAAL,CAAkB,mBAAlB,EAAuCL,EAAvC,EAA2C,IAA3C;UACD,CAPD,MAOO,IAAIS,WAAJ,EAAiB;YACtB,IAAIG,IAAI,GAAGH,WAAW,GAAGA,WAAW,CAACI,KAAZ,CAAkB,GAAlB,CAAH,GAA4B,EAAlD,CADsB,CAGtB;;YACA,IAAID,IAAI,CAAC9G,MAAL,IAAe,CAAnB,EAAsB;cACpB,IAAIgH,UAAU,GAAG,KAAjB;cACAA,UAAU,CAACC,gBAAX,CAA4BP,IAA5B,EAAkCC,WAAlC,EAFoB,CAIpB;YACD,CALD,MAKO,IAAIG,IAAI,CAAC9G,MAAL,GAAc,CAAlB,EAAqB;cAC1B,IAAIgH,WAAU,GAAG,IAAjB,CAD0B,CAG1B;;cACA,IAAIF,IAAI,CAAC,CAAD,CAAJ,IAAWT,eAAX,IAA8BS,IAAI,CAAC,CAAD,CAAJ,IAAWX,MAA7C,EAAqD;gBACnD;gBACA;gBACA,IAAIW,IAAI,CAAC9G,MAAL,IAAe,CAAnB,EAAsB;kBACpBgH,WAAU,GAAG,KAAb,CADoB,CAGpB;gBACD,CAJD,MAIO;kBACL;kBACA,IAAIE,KAAK,GAAGtL,EAAE,CAACiJ,IAAH,CAAQsC,KAAR,CAAcpC,KAAd,CAAoB+B,IAApB,CAAZ;kBACAI,KAAK,CAACE,KAAN;kBACAF,KAAK,CAACG,GAAN;kBACAH,KAAK,GAAGA,KAAK,CAACI,IAAN,CAAW,GAAX,CAAR;kBACAN,WAAU,GAAG,KAAI,CAACf,WAAL,CAAiBiB,KAAjB,CAAb;gBACD,CAdkD,CAgBnD;;cACD,CAjBD,MAiBO;gBACLF,WAAU,GAAGpL,EAAE,CAAC2E,IAAH,CAAQgH,EAAR,CAAWtB,WAAX,CAAuBU,WAAvB,CAAb;cACD;;cAED,IAAI,CAACK,WAAL,EAAiB;gBACf,MAAM,IAAIpK,KAAJ,kDACsC+J,WADtC,EAAN;cAGD;;cAEDK,WAAU,CAACC,gBAAX,CAA4BP,IAA5B,EAAkCI,IAAI,CAACA,IAAI,CAAC9G,MAAL,GAAc,CAAf,CAAtC;YACD;UACF;;UAED,IAAIwH,QAAQ,GAAGd,IAAI,CAACe,WAAL,EAAf;;UACA,IAAID,QAAJ,EAAc;YACZA,QAAQ,CAACE,OAAT,CAAiBjB,WAAjB;UACD;QACF,CA7DD;;QA+DA,IAAIe,QAAQ,GAAG,KAAKC,WAAL,EAAf;;QACA,IAAID,QAAJ,EAAc;UACZA,QAAQ,CAACE,OAAT,CAAiBjB,WAAjB;QACD;MACF,CAlPM;;MAoPP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIkB,SAlQO,qBAkQGC,UAlQH,EAkQeC,iBAlQf,EAkQkC;QACvC,0DAAgBD,UAAhB,EAA4BC,iBAA5B;;QACA,IAAIhH,IAAI,GAAG,KAAK5D,QAAhB,CAFuC,CAIvC;;QACA,IAAI0H,IAAI,GAAG,KAAKjI,SAAhB;;QACA,IAAIiI,IAAJ,EAAU;UACR,IAAIC,SAAS,GAAGhJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe0E,SAA/B;;UACA,IAAIgD,UAAJ,EAAgB;YACd,IAAIE,GAAJ;YACA,IAAIC,OAAO,GAAG,EAAd;YACAD,GAAG,GAAG,KAAKxB,YAAL,CAAkB,OAAlB,CAAN;YACA,CAACwB,GAAG,GAAGA,GAAG,CAACf,KAAJ,CAAU,GAAV,CAAH,GAAoB,EAAxB,EAA4BW,OAA5B,CAAoC,UAAArK,IAAI,EAAI;cAC1C,IAAIA,IAAI,CAAC2K,UAAL,CAAgB,KAAhB,CAAJ,EAA4B;gBAC1BD,OAAO,CAAC1K,IAAD,CAAP,GAAgB,IAAhB;cACD;YACF,CAJD;YAMAyK,GAAG,GAAGlD,SAAS,CAACnE,GAAV,CAAcI,IAAd,EAAoB,OAApB,CAAN;YAC6C;cAC3C,IAAIiH,GAAG,YAAYhF,MAAM,CAACmF,iBAA1B,EAA6C;gBAC3CH,GAAG,GAAGA,GAAG,CAACI,OAAV;cACD;YACF;YACD,CAACJ,GAAG,GAAGA,GAAG,CAACf,KAAJ,CAAU,GAAV,CAAH,GAAoB,EAAxB,EAA4BW,OAA5B,CAAoC,UAAArK,IAAI;cAAA,OAAK0K,OAAO,CAAC1K,IAAD,CAAP,GAAgB,IAArB;YAAA,CAAxC;YACA0K,OAAO,GAAGjD,MAAM,CAACE,IAAP,CAAY+C,OAAZ,CAAV;YAEA,IAAIjB,IAAI,GAAGiB,OAAX;;YACA,IAAIjB,IAAI,CAAC9G,MAAT,EAAiB;cACf,KAAKmI,WAAL,CAAiBrB,IAAI,CAAC,CAAD,CAArB;cACA,KAAKP,YAAL,CAAkB,OAAlB,EAA2BwB,OAAO,CAACT,IAAR,CAAa,GAAb,CAA3B;YACD,CAHD,MAGO;cACL,KAAKa,WAAL,CAAiB,IAAjB;cACA,KAAK5B,YAAL,CAAkB,OAAlB,EAA2B,IAA3B;YACD;UACF;;UACD,KAAK,IAAI5J,GAAT,IAAgBgI,IAAhB,EAAsB;YACpBC,SAAS,CAACxC,GAAV,CAAcvB,IAAd,EAAoBlE,GAApB,EAAyBgI,IAAI,CAAChI,GAAD,CAA7B;UACD;QACF,CAvCsC,CAyCvC;;;QACA,IAAIgI,IAAI,GAAG,KAAKlI,SAAhB;;QACA,IAAIkI,IAAJ,EAAU;UACR,IAAIM,KAAK,GAAGrJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe+E,KAA3B;;UAEA,IAAI2C,UAAJ,EAAgB;YACd3C,KAAK,CAACmD,SAAN,CAAgBvH,IAAhB,EAAsB8D,IAAtB;UACD,CAFD,MAEO;YACL;YACA;YACAM,KAAK,CAACoD,MAAN,CAAaxH,IAAb,EAAmBoE,KAAK,CAACE,OAAN,CAAcR,IAAd,CAAnB;UACD;QACF,CArDsC,CAuDvC;;;QACA,IAAI,CAACiD,UAAL,EAAiB;UACf,IAAIvH,OAAO,GAAGQ,IAAI,CAACT,KAAL,CAAWC,OAAX,IAAsB,EAApC;;UACA,IAAIA,OAAO,IAAI,EAAX,IAAiB,CAAC,KAAKC,SAAL,EAAtB,EAAwC;YACtCO,IAAI,CAACT,KAAL,CAAWC,OAAX,GAAqB,MAArB;UACD,CAFD,MAEO,IAAIA,OAAO,IAAI,MAAX,IAAqB,KAAKC,SAAL,EAAzB,EAA2C;YAChDO,IAAI,CAACT,KAAL,CAAWC,OAAX,GAAqB,EAArB;UACD;QACF,CAPD,MAOO;UACL,IAAIA,OAAO,GAAGQ,IAAI,CAACT,KAAL,CAAWC,OAAX,IAAsB,EAApC;UACA,KAAKiI,UAAL,CAAgBjI,OAAO,IAAI,MAA3B;QACD;MACF,CArUM;;MAuUP;AACJ;AACA;AACA;AACA;AACA;MACIkI,SA7UO,uBA6UK;QACV;;QACA,IAAI1H,IAAI,GAAG,KAAK5D,QAAhB;QAEA,IAAI2H,SAAS,GAAGhJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe0E,SAA/B;QACA,IAAIK,KAAK,GAAGrJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe+E,KAA3B,CALU,CAOV;;QACA,IAAIuD,IAAI,GAAG,KAAKrE,UAAhB;;QACA,IAAIqE,IAAJ,EAAU;UACR,IAAI7D,IAAI,GAAG,KAAKjI,SAAhB;;UACA,IAAIiI,IAAJ,EAAU;YACR,IAAI3H,KAAJ;;YACA,KAAK,IAAIL,GAAT,IAAgB6L,IAAhB,EAAsB;cACpBxL,KAAK,GAAG2H,IAAI,CAAChI,GAAD,CAAZ;;cAEA,IAAIK,KAAK,KAAKsI,SAAd,EAAyB;gBACvBV,SAAS,CAACxC,GAAV,CAAcvB,IAAd,EAAoBlE,GAApB,EAAyBK,KAAzB;cACD,CAFD,MAEO;gBACL4H,SAAS,CAAC6D,KAAV,CAAgB5H,IAAhB,EAAsBlE,GAAtB;cACD;YACF;UACF;;UAED,KAAKwH,UAAL,GAAoB,IAApB;QACD,CAzBS,CA2BV;;;QACA,IAAIqE,IAAI,GAAG,KAAKtE,UAAhB;;QACA,IAAIsE,IAAJ,EAAU;UACR,IAAI7D,IAAI,GAAG,KAAKlI,SAAhB;;UACA,IAAIkI,IAAJ,EAAU;YACR,IAAIpI,MAAM,GAAG,EAAb;;YACA,KAAK,IAAII,GAAT,IAAgB6L,IAAhB,EAAsB;cACpBjM,MAAM,CAACI,GAAD,CAAN,GAAcgI,IAAI,CAAChI,GAAD,CAAlB;YACD;;YAEDsI,KAAK,CAACmD,SAAN,CAAgBvH,IAAhB,EAAsBtE,MAAtB;UACD;;UAED,KAAK2H,UAAL,GAAmB,IAAnB;QACD;MACF,CAvXM;;MAyXP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;MACIwE,OApYO,mBAoYCjF,IApYD,EAoYO;QACZ,IAAIA,IAAI,IAAI,CAAC,KAAKQ,UAAlB,EAA0B;UACxBrI,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBZ,SAAhB;QACD,CAFD,MAEO,IAAI,CAACiG,IAAD,IAAS,KAAKQ,UAAlB,EAA0B;UAC/BrI,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBZ,SAAhB;QACD;;QACD,KAAKyG,UAAL,GAAcR,IAAd;MACD,CA3YM;;MA6YP;AACJ;AACA;MACIkF,MAhZO,oBAgZE;QACP,OAAO,KAAK1E,UAAZ;MACD,CAlZM;;MAoZP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI2E,SA5ZO,qBA4ZGzM,IA5ZH,EA4ZS;QACd,IAAI,KAAKc,QAAT,EAAmB;UACjB,MAAM,IAAIL,KAAJ,CAAU,uCAAV,CAAN;QACD,CAHa,CAKd;QACA;QACA;QACA;QACA;;;QACA,IAAIhB,EAAE,CAAC2E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA9C,EAAwD;UACtD,IAAIoI,MAAM,GAAGnI,QAAQ,CAACoI,aAAT,CAAuB,KAAvB,CAAb;QACD,CAFD,MAEO;UACL,IAAID,MAAM,GAAGjN,EAAE,CAAC8D,GAAH,CAAOtB,OAAP,CAAe2K,gBAAf,EAAb;QACD,CAda,CAgBd;;;QACAF,MAAM,CAAC3L,SAAP,GAAmBf,IAAnB;QACA,KAAK6M,UAAL,CAAgBH,MAAM,CAACI,UAAvB;QAEA,OAAO,KAAKhM,QAAZ;MACD,CAjbM;;MAmbP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI+L,UA1bO,sBA0bInI,IA1bJ,EA0bU;QACf,KAAKqI,OAAL,CAAarI,IAAb;MACD,CA5bM;;MA8bP;AACJ;AACA;AACA;AACA;MACIsI,WAncO,yBAmcO;QACZ,IAAIC,QAAQ,GAAG,KAAK9C,YAAL,CAAkB,UAAlB,CAAf;;QACA,IAAI8C,QAAQ,IAAI,CAAhB,EAAmB;UACjB,OAAO,IAAP;QACD;;QAED,IAAIC,SAAS,GAAGzN,EAAE,CAAC2G,KAAH,CAASC,OAAT,CAAiBQ,KAAjB,CAAuBsG,kBAAvC;;QACA,IAAIF,QAAQ,IAAI,CAAZ,IAAiBC,SAAS,CAAC,KAAK/E,SAAN,CAA9B,EAAgD;UAC9C,OAAO,IAAP;QACD;;QAED,OAAO,KAAP;MACD,CA/cM;;MAidP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIiF,aAxdO,yBAwdOvM,KAxdP,EAwdc;QACnB,KAAKuJ,YAAL,CAAkB,cAAlB,EAAkCvJ,KAAK,GAAG,IAAH,GAAU,KAAjD;QACA,IAAIwM,UAAU,GAAG5N,EAAE,CAAC2E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,CAAjB;;QACA,IAAI+I,UAAJ,EAAgB;UACd,KAAKC,QAAL,CACED,UADF,EAEExM,KAAK,GAAG,MAAH,GAAYpB,EAAE,CAAC2E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,qBAAxB,CAFnB;QAID;MACF,CAjeM;;MAmeP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIiJ,mBA1eO,iCA0ee;QACpB,OAAO,CAAC,CAAC9N,EAAE,CAAC2G,KAAH,CAASC,OAAT,CAAiBQ,KAAjB,CAAuBsG,kBAAvB,CAA0C,KAAKhF,SAA/C,CAAT;MACD,CA5eM;;MA8eP;AACJ;AACA;AACA;AACA;;MACI;AACJ;AACA;AACA;AACA;AACA;MACIqF,MAzfO,kBAyfAC,QAzfA,EAyfU;QACf,IAAIC,GAAG,GAAGC,KAAK,CAAC,KAAK7M,QAAN,CAAf;;QACA,IAAI4M,GAAG,CAACE,SAAJ,EAAJ,EAAqB;UACnBF,GAAG,CAACG,IAAJ;QACD,CAJc,CAKf;;;QACA,IAAI,CAAC,KAAK/M,QAAV,EAAoB;UAClB,KAAKsB,KAAL;UACAsL,GAAG,CAAChK,IAAJ,CAAS,KAAK5C,QAAd;QACD;;QACD,IAAI,KAAKA,QAAT,EAAmB;UACjB4M,GAAG,CAACF,MAAJ,CAAWC,QAAX,EAAqBK,IAArB,CACE,cADF,EAEE,YAAY;YACV,KAAKC,IAAL;YACAtO,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBG,KAAhB;UACD,CALH,EAME,IANF;UASA,OAAOsL,GAAG,CAACM,mBAAJ,GAA0B,CAA1B,CAAP;QACD;MACF,CA/gBM;;MAihBP;AACJ;AACA;AACA;AACA;AACA;MACIC,OAvhBO,mBAuhBCR,QAvhBD,EAuhBW;QAChB,IAAIC,GAAG,GAAGC,KAAK,CAAC,KAAK7M,QAAN,CAAf;;QACA,IAAI4M,GAAG,CAACE,SAAJ,EAAJ,EAAqB;UACnBF,GAAG,CAACG,IAAJ;QACD;;QAED,IAAI,KAAK/M,QAAT,EAAmB;UACjB4M,GAAG,CAACO,OAAJ,CAAYR,QAAZ,EAAsBK,IAAtB,CACE,cADF,EAEE,YAAY;YACV,KAAKI,IAAL;YACAzO,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBG,KAAhB;UACD,CALH,EAME,IANF;UASA,OAAOsL,GAAG,CAACM,mBAAJ,GAA0B,CAA1B,CAAP;QACD;MACF,CAziBM;;MA2iBP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;MACIG,aApjBO,yBAojBOtN,KApjBP,EAojBcuN,QApjBd,EAojBwB;QAC7B,8DAAoBvN,KAApB,EAA2BuN,QAA3B;;QACA,IAAIvN,KAAJ,EAAW;UACT,IAAI,KAAKC,QAAT,EAAmB;YACjBrB,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBT,WAAhB,CAA4B,KAAK6M,UAAL,EAA5B,IAAiD,IAAjD;;YACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;UACD,CAJQ,CAMT;;;UACA,IAAI,KAAKuM,OAAT,EAAkB;YAChB,KAAKA,OAAL,CAAaC,uBAAb;UACD;QACF,CAVD,MAUO;UACL,IAAI,KAAKzN,QAAT,EAAmB;YACjBrB,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBT,WAAhB,CAA4B,KAAK6M,UAAL,EAA5B,IAAiD,IAAjD;;YACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;UACD;QACF;MACF,CAtkBM;;MAwkBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIgM,IA/kBO,kBA+kBA;QACL,KAAK5B,UAAL,CAAgB,IAAhB;QACA,OAAO,IAAP;MACD,CAllBM;;MAolBP;AACJ;AACA;AACA;AACA;AACA;MACI+B,IA1lBO,kBA0lBA;QACL,KAAK/B,UAAL,CAAgB,KAAhB;QACA,OAAO,IAAP;MACD,CA7lBM;;MA+lBP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIqC,oBApnBO,gCAonBc9J,IApnBd,EAonBoBY,KApnBpB,EAonB2BmJ,MApnB3B,EAonBmC;QACxC,IAAIC,MAAM,GAAG,KAAK5N,QAAlB;QACA,IAAI6N,OAAO,GAAGjK,IAAI,CAACU,aAAL,EAAd;;QAEA,IACEqJ,MAAM,KAAK,KAAX,IACAC,MADA,IAEAA,MAAM,CAAC/J,WAFP,IAGAgK,OAHA,IAIAA,OAAO,CAAChK,WALV,EAME;UACAlF,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAesB,MAAf,CAAsBJ,SAAtB,CAAgC0J,OAAhC,EAAyCD,MAAzC,EAAiDpJ,KAAjD;QACD,CARD,MAQO;UACL,KAAKJ,UAAL,GAA6B;YAC3BnB,OAAO,EAAEW,IADkB;YAE3BY,KAAK,EAAEA;UAFoB,CAA7B;UAKA7F,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBR,OAAhB,CAAwB,KAAK4M,UAAL,EAAxB,IAA6C,IAA7C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,KAAK8C,UAAZ;MACD,CA3oBM;;MA6oBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI+J,oBA5pBO,gCA4pBclK,IA5pBd,EA4pBoBY,KA5pBpB,EA4pB2BmJ,MA5pB3B,EA4pBmC;QACxC,IAAIC,MAAM,GAAG,KAAK5N,QAAlB;QACA,IAAI6N,OAAO,GAAGjK,IAAI,CAACU,aAAL,EAAd;;QAEA,IACEqJ,MAAM,KAAK,KAAX,IACAC,MADA,IAEAA,MAAM,CAAC/J,WAFP,IAGAgK,OAHA,IAIAA,OAAO,CAAChK,WALV,EAME;UACAlF,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAesB,MAAf,CAAsBE,SAAtB,CAAgCoJ,OAAhC,EAAyCD,MAAzC,EAAiDpJ,KAAjD;QACD,CARD,MAQO;UACL,KAAKE,UAAL,GAA6B;YAC3BzB,OAAO,EAAEW,IADkB;YAE3BY,KAAK,EAAEA;UAFoB,CAA7B;UAKA7F,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBR,OAAhB,CAAwB,KAAK4M,UAAL,EAAxB,IAA6C,IAA7C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,KAAKgD,UAAZ;MACD,CAnrBM;;MAqrBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI8J,SA5rBO,qBA4rBGC,CA5rBH,EA4rBMC,IA5rBN,EA4rBY;QACjB,IAAIL,MAAM,GAAG,KAAK5N,QAAlB;;QACA,IAAIiO,IAAI,KAAK,IAAT,IAAiBL,MAAjB,IAA2BA,MAAM,CAAC/J,WAAtC,EAAmD;UACjD+J,MAAM,CAAC5J,UAAP,GAAoBgK,CAApB;UACA,OAAO,KAAKjK,UAAZ;QACD,CAHD,MAGO;UACL,KAAKA,UAAL,GAAqBiK,CAArB;UACArP,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBR,OAAhB,CAAwB,KAAK4M,UAAL,EAAxB,IAA6C,IAA7C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,KAAKmD,UAAZ;MACD,CAxsBM;;MA0sBP;AACJ;AACA;AACA;AACA;MACI8J,UA/sBO,wBA+sBM;QACX,IAAIN,MAAM,GAAG,KAAK5N,QAAlB;;QACA,IAAI4N,MAAJ,EAAY;UACV,OAAOA,MAAM,CAAC5J,UAAd;QACD;;QAED,OAAO,KAAKD,UAAL,IAAsB,CAA7B;MACD,CAttBM;;MAwtBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIoK,SA/tBO,qBA+tBGC,CA/tBH,EA+tBMH,IA/tBN,EA+tBY;QACjB,IAAIL,MAAM,GAAG,KAAK5N,QAAlB;;QACA,IAAIiO,IAAI,KAAK,IAAT,IAAiBL,MAAjB,IAA2BA,MAAM,CAAC/J,WAAtC,EAAmD;UACjD+J,MAAM,CAAC1J,SAAP,GAAmBkK,CAAnB;UACA,OAAO,KAAKnK,UAAZ;QACD,CAHD,MAGO;UACL,KAAKA,UAAL,GAAqBmK,CAArB;UACAzP,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBR,OAAhB,CAAwB,KAAK4M,UAAL,EAAxB,IAA6C,IAA7C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,KAAKyD,UAAZ;MACD,CA3uBM;;MA6uBP;AACJ;AACA;AACA;AACA;MACI2J,UAlvBO,wBAkvBM;QACX,IAAIT,MAAM,GAAG,KAAK5N,QAAlB;;QACA,IAAI4N,MAAJ,EAAY;UACV,OAAOA,MAAM,CAAC1J,SAAd;QACD;;QAED,OAAO,KAAKD,UAAL,IAAsB,CAA7B;MACD,CAzvBM;;MA2vBP;AACJ;AACA;MACIqK,gBA9vBO,8BA8vBY;QACjB,KAAKC,eAAL;QACA,KAAKR,SAAL,CAAe,CAAf;QACA,KAAKI,SAAL,CAAe,CAAf;QACA,KAAKK,WAAL,CAAiB,QAAjB,EAA2B,KAAKC,UAAhC,EAA4C,IAA5C;MACD,CAnwBM;;MAqwBP;AACJ;AACA;MACIF,eAxwBO,6BAwwBW;QAChB,KAAKG,cAAL,CAAoB,QAApB,EAA8B,KAAKD,UAAnC,EAA+C,IAA/C;MACD,CA1wBM;MA4wBPE,UAAU,EAAE,IA5wBL;;MA8wBP;AACJ;AACA;AACA;AACA;MACIF,UAnxBO,sBAmxBIG,CAnxBJ,EAmxBO;QACZ,IAAI,CAAC,KAAKD,UAAV,EAAsB;UACpB,KAAKA,UAAL,GAAkB,IAAlB;UACA,KAAK3O,QAAL,CAAckE,SAAd,GAA0B,CAA1B;UACA,KAAKlE,QAAL,CAAcgE,UAAd,GAA2B,CAA3B;UACA,OAAO,KAAK2K,UAAZ;QACD;MACF,CA1xBM;;MA4xBP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;MACIE,OAxyBO,mBAwyBC9O,KAxyBD,EAwyBQ;QACb,IAAI+O,IAAI,GAAG,IAAX;QACA,IAAIvE,QAAQ,GAAG,KAAK/B,SAAL,GAAiB7J,EAAE,CAACiJ,IAAH,CAAQsC,KAAR,CAAcpC,KAAd,CAAoB,KAAKU,SAAzB,CAAjB,GAAuD,EAAtE;;QACA,IAAI+B,QAAQ,CAAC,CAAD,CAAR,YAAuB5L,EAAE,CAACO,IAAH,CAAQ6P,IAAnC,EAAyC;UACvCxE,QAAQ,CAAC,CAAD,CAAR,CAAYsE,OAAZ,CAAoB9O,KAApB;UACAwK,QAAQ,CAACJ,KAAT;UACAI,QAAQ,CAACE,OAAT,CAAiB,UAAUpG,KAAV,EAAiB;YAChCyK,IAAI,CAACE,MAAL,CAAY3K,KAAZ;UACD,CAFD;QAGD,CAND,MAMO;UACLkG,QAAQ,CAACE,OAAT,CAAiB,UAAUpG,KAAV,EAAiB;YAChCyK,IAAI,CAACE,MAAL,CAAY3K,KAAZ;UACD,CAFD;UAGA,KAAK4K,GAAL,CAAS,IAAItQ,EAAE,CAACO,IAAH,CAAQ6P,IAAZ,CAAiBhP,KAAjB,CAAT;QACD;MACF,CAvzBM;;MAyzBP;AACJ;AACA;AACA;AACA;MACImP,OA9zBO,qBA8zBG;QACR,IAAIC,MAAM,GAAG,EAAb;;QACA,IAAI,KAAK3G,SAAT,EAAoB;UAClB,KAAKA,SAAL,CAAeiC,OAAf,CAAuB,UAAUpG,KAAV,EAAiB;YACtC8K,MAAM,CAACvM,IAAP,CAAYyB,KAAK,CAAC6K,OAAN,EAAZ;UACD,CAFD;QAGD;;QACD,OAAOC,MAAM,CAAC9E,IAAP,CAAY,EAAZ,CAAP;MACD,CAt0BM;;MAw0BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI+E,gBAh1BO,8BAg1BY;QACjB,IAAIC,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN,OAAO1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiB1B,GAAjB,CAAqB6L,EAArB,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CAv1BM;;MAy1BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,sBAj2BO,oCAi2BkB;QACvB,IAAID,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN,OAAO1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiBqK,SAAjB,CAA2BF,EAA3B,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CAx2BM;;MA02BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,qBAl3BO,mCAk3BiB;QACtB,IAAIH,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN,OAAO1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiBuK,QAAjB,CAA0BJ,EAA1B,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CAz3BM;;MA23BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIK,mBAn4BO,iCAm4Be;QACpB,IAAIL,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN,OAAO1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiByK,MAAjB,CAAwBN,EAAxB,CAAP;QACD;;QAED,OAAO,IAAP;MACD,CA14BM;;MA44BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIO,gBAr5BO,4BAq5BUxK,KAr5BV,EAq5BiBC,GAr5BjB,EAq5BsB;QAC3B,IAAIgK,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiBC,GAAjB,CAAqBkK,EAArB,EAAyBjK,KAAzB,EAAgCC,GAAhC;UACA;QACD,CAL0B,CAO3B;;;QACA1G,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBN,SAAhB,CAA4B,KAAK0M,UAAL,EAA5B,IAAiD;UAC/CtK,OAAO,EAAE,IADsC;UAE/CmC,KAAK,EAAEA,KAFwC;UAG/CC,GAAG,EAAEA;QAH0C,CAAjD;;QAMA1G,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;MACD,CAp6BM;;MAs6BP;AACJ;AACA;AACA;AACA;AACA;MACI4O,kBA56BO,gCA46Bc;QACnB,IAAIR,EAAE,GAAG,KAAKrP,QAAd;;QACA,IAAIqP,EAAJ,EAAQ;UACN1Q,EAAE,CAACqD,GAAH,CAAOkD,SAAP,CAAiB4K,KAAjB,CAAuBT,EAAvB;QACD;;QACD,OAAO1Q,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBN,SAAhB,CAA4B,KAAK0M,UAAL,EAA5B,CAAP;MACD,CAl7BM;;MAo7BP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIwC,UAr8BO,sBAq8BSnL,MAr8BT,EAq8BiBE,IAr8BjB,EAq8BuB;QACiB;UAC3C,IAAIkL,OAAO,GAAGrR,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBP,QAA9B;UAEAoP,OAAO,CAACpN,IAAR,CAAa;YACXiC,IAAI,EAAED,MADK;YAEX3B,OAAO,EAAE,IAFE;YAGX6B,IAAI,EAAEA,IAAI,IAAI;UAHH,CAAb;;UAMAnG,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;MAKF,CAr9BM;;MAu9BP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIgP,KA/9BO,mBA+9BC;QACuC;UAC3C,KAAKF,UAAL,CAAqB,OAArB;QACD;MACF,CAn+BM;;MAq+BP;AACJ;AACA;AACA;AACA;AACA;MACIlO,IA3+BO,kBA2+BA;QACwC;UAC3C,KAAKkO,UAAL,CAAqB,MAArB;QACD;MACF,CA/+BM;;MAi/BP;AACJ;AACA;AACA;AACA;AACA;MACIG,QAv/BO,sBAu/BI;QACoC;UAC3C,KAAKH,UAAL,CAAqB,UAArB;QACD;MACF,CA3/BM;;MA6/BP;AACJ;AACA;AACA;AACA;AACA;MACI9N,UAngCO,wBAmgCM;QACkC;UAC3C,KAAK8N,UAAL,CAAqB,YAArB;QACD;MACF,CAvgCM;;MAygCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,OAlhCO,mBAkhCCC,gBAlhCD,EAkhCmB;QACqB;UAC3C,KAAKL,UAAL,CAAqB,SAArB,EAAgC,CAACK,gBAAgB,KAAK,KAAtB,CAAhC;QACD;MACF,CAthCM;;MAwhCP;AACJ;AACA;AACA;AACA;MACIhO,cA7hCO,4BA6hCU;QAC8B;UAC3C,KAAK2N,UAAL,CAAqB,gBAArB;QACD;MACF,CAjiCM;;MAmiCP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvD,QAljCO,oBAkjCE9M,GAljCF,EAkjCOK,KAljCP,EAkjCc4N,MAljCd,EAkjCsB;QAC3B,IAAI,CAAC,KAAKnO,SAAV,EAAyB;UACvB,KAAKA,SAAL,GAAqB,EAArB;QACD;;QAED,IAAI,KAAKA,SAAL,CAAmBE,GAAnB,KAA2BK,KAA/B,EAAsC;UACpC,OAAO,IAAP;QACD;;QAED,KAAKsQ,WAAL,CAAiB3Q,GAAjB,EAAsBK,KAAtB,EAA6B,KAAKP,SAAL,CAAmBE,GAAnB,CAA7B;;QACA,IAAIK,KAAK,IAAI,IAAb,EAAmB;UACjB,OAAO,KAAKP,SAAL,CAAmBE,GAAnB,CAAP;QACD,CAFD,MAEO;UACL,KAAKF,SAAL,CAAmBE,GAAnB,IAA0BK,KAA1B;QACD,CAd0B,CAgB3B;QACA;QACA;;;QACA,IAAI,KAAKC,QAAT,EAAmB;UACjB;UACA,IAAI2N,MAAJ,EAAY;YACVhP,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe+E,KAAf,CAAqB7C,GAArB,CAAyB,KAAKnF,QAA9B,EAAwCN,GAAxC,EAA6CK,KAA7C;YACA,OAAO,IAAP;UACD,CALgB,CAOjB;;;UACA,IAAI,CAAC,KAAKkH,UAAV,EAAuB;YACrB,KAAKA,UAAL,GAAmB,EAAnB;UACD,CAVgB,CAYjB;;;UACA,KAAKA,UAAL,CAAiBvH,GAAjB,IAAwB,IAAxB,CAbiB,CAejB;;UACAf,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBV,SAAhB,CAA0B,KAAK8M,UAAL,EAA1B,IAA+C,IAA/C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,IAAP;MACD,CA1lCM;;MA4lCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIoP,WArmCO,uBAqmCK3Q,GArmCL,EAqmCUK,KArmCV,EAqmCiBuN,QArmCjB,EAqmC2B,CAChC;MACD,CAvmCM;;MAymCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACInC,SAlnCO,qBAknCGmF,GAlnCH,EAknCQ3C,MAlnCR,EAknCgB;QACrB;QACA;QAEA,IAAI3F,KAAK,GAAGrJ,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe+E,KAA3B;;QAEA,IAAI,CAAC,KAAKxI,SAAV,EAAyB;UACvB,KAAKA,SAAL,GAAqB,EAArB;QACD;;QAED,IAAI,KAAKQ,QAAT,EAAmB;UACjB;UACA,IAAI,CAAC,KAAKiH,UAAV,EAAuB;YACrB,KAAKA,UAAL,GAAmB,EAAnB;UACD;;UAED,KAAK,IAAIvH,GAAT,IAAgB4Q,GAAhB,EAAqB;YACnB,IAAIvQ,KAAK,GAAGuQ,GAAG,CAAC5Q,GAAD,CAAf;;YACA,IAAI,KAAKF,SAAL,CAAmBE,GAAnB,KAA2BK,KAA/B,EAAsC;cACpC;YACD;;YAED,KAAKsQ,WAAL,CAAiB3Q,GAAjB,EAAsBK,KAAtB,EAA6B,KAAKP,SAAL,CAAmBE,GAAnB,CAA7B;;YACA,IAAIK,KAAK,IAAI,IAAb,EAAmB;cACjB,OAAO,KAAKP,SAAL,CAAmBE,GAAnB,CAAP;YACD,CAFD,MAEO;cACL,KAAKF,SAAL,CAAmBE,GAAnB,IAA0BK,KAA1B;YACD,CAXkB,CAanB;;;YACA,IAAI4N,MAAJ,EAAY;cACV3F,KAAK,CAAC7C,GAAN,CAAU,KAAKnF,QAAf,EAAyBN,GAAzB,EAA8BK,KAA9B;cACA;YACD,CAjBkB,CAmBnB;;;YACA,KAAKkH,UAAL,CAAiBvH,GAAjB,IAAwB,IAAxB;UACD,CA3BgB,CA6BjB;;;UACAf,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBV,SAAhB,CAA0B,KAAK8M,UAAL,EAA1B,IAA+C,IAA/C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD,CAhCD,MAgCO;UACL,KAAK,IAAIvB,GAAT,IAAgB4Q,GAAhB,EAAqB;YACnB,IAAIvQ,KAAK,GAAGuQ,GAAG,CAAC5Q,GAAD,CAAf;;YACA,IAAI,KAAKF,SAAL,CAAmBE,GAAnB,KAA2BK,KAA/B,EAAsC;cACpC;YACD;;YAED,KAAKsQ,WAAL,CAAiB3Q,GAAjB,EAAsBK,KAAtB,EAA6B,KAAKP,SAAL,CAAmBE,GAAnB,CAA7B;;YACA,IAAIK,KAAK,IAAI,IAAb,EAAmB;cACjB,OAAO,KAAKP,SAAL,CAAmBE,GAAnB,CAAP;YACD,CAFD,MAEO;cACL,KAAKF,SAAL,CAAmBE,GAAnB,IAA0BK,KAA1B;YACD;UACF;QACF;;QAED,OAAO,IAAP;MACD,CA7qCM;;MA+qCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIwQ,WAvrCO,uBAurCK7Q,GAvrCL,EAurCUiO,MAvrCV,EAurCkB;QACvB,KAAKnB,QAAL,CAAc9M,GAAd,EAAmB,IAAnB,EAAyBiO,MAAzB;QACA,OAAO,IAAP;MACD,CA1rCM;;MA4rCP;AACJ;AACA;AACA;AACA;AACA;MACI6C,QAlsCO,oBAksCE9Q,GAlsCF,EAksCO;QACZ,OAAO,KAAKF,SAAL,GAAqB,KAAKA,SAAL,CAAmBE,GAAnB,CAArB,GAA+C,IAAtD;MACD,CApsCM;;MAssCP;AACJ;AACA;AACA;AACA;MACI+Q,YA3sCO,0BA2sCQ;QACb,OAAO,KAAKjR,SAAL,IAAsB,IAA7B;MACD,CA7sCM;;MA+sCP;AACJ;AACA;AACA;AACA;MACIkR,UAptCO,wBAotCU;QACf,IAAIJ,GAAG,GAAG,EAAV;QACA,CAAC,KAAKjH,YAAL,CAAkB,OAAlB,KAA8B,EAA/B,EAAmCS,KAAnC,CAAyC,GAAzC,EAA8CW,OAA9C,CAAsD,UAAUrK,IAAV,EAAgB;UACpE,IAAIA,IAAJ,EAAU;YACRkQ,GAAG,CAAClQ,IAAI,CAACuQ,WAAL,EAAD,CAAH,GAA0BvQ,IAA1B;UACD;QACF,CAJD;QAKA,OAAOkQ,GAAP;MACD,CA5tCM;MA8tCPM,UA9tCO,sBA8tCUN,GA9tCV,EA8tCe;QACpB,IAAIO,YAAY,GAAG,KAAKC,WAAL,EAAnB;QACA,IAAIC,GAAG,GAAG,EAAV;;QACA,IAAIF,YAAJ,EAAkB;UAChBE,GAAG,CAACnO,IAAJ,CAASiO,YAAT;UACA,OAAOP,GAAG,CAACO,YAAY,CAACF,WAAb,EAAD,CAAV;QACD;;QACDhS,EAAE,CAACiJ,IAAH,CAAQsC,KAAR,CAAc8G,MAAd,CAAqBD,GAArB,EAA0BlJ,MAAM,CAACoJ,MAAP,CAAcX,GAAd,CAA1B;QACA,OAAOS,GAAG,CAAChO,MAAJ,GAAagO,GAAG,CAAC1G,IAAJ,CAAS,GAAT,CAAb,GAA6B,IAApC;MACD,CAvuCM;;MAyuCP;AACJ;AACA;AACA;AACA;AACA;MACI6G,QA/uCO,oBA+uCE9Q,IA/uCF,EA+uCQ;QAAA;;QACb,IAAI0K,OAAO,GAAG,KAAK4F,UAAL,EAAd;;QACA,IAAIG,YAAY,GAAG,CAAC,KAAKC,WAAL,MAAsB,EAAvB,EAA2BH,WAA3B,EAAnB;QACAvQ,IAAI,CAAC0J,KAAL,CAAW,GAAX,EAAgBW,OAAhB,CAAwB,UAAArK,IAAI,EAAI;UAC9B,IAAI+Q,SAAS,GAAG/Q,IAAI,CAACuQ,WAAL,EAAhB;;UACA,IAAIQ,SAAS,IAAIN,YAAjB,EAA+B;YAC7B,MAAI,CAAC3F,WAAL,CAAiB,IAAjB;UACD;;UAEDJ,OAAO,CAACqG,SAAD,CAAP,GAAqB/Q,IAArB;QACD,CAPD;QAQA,KAAKkJ,YAAL,CAAkB,OAAlB,EAA2B,KAAKsH,UAAL,CAAsB9F,OAAtB,CAA3B;QACA,OAAO,IAAP;MACD,CA5vCM;;MA8vCP;AACJ;AACA;AACA;AACA;AACA;MACIsG,WApwCO,uBAowCKhR,IApwCL,EAowCW;QAAA;;QAChB,IAAI0K,OAAO,GAAG,KAAK4F,UAAL,EAAd;;QACA,IAAIG,YAAY,GAAG,CAAC,KAAKC,WAAL,MAAsB,EAAvB,EAA2BH,WAA3B,EAAnB;QACAvQ,IAAI,CAAC0J,KAAL,CAAW,GAAX,EAAgBW,OAAhB,CAAwB,UAAArK,IAAI,EAAI;UAC9B,IAAI+Q,SAAS,GAAG/Q,IAAI,CAACuQ,WAAL,EAAhB;;UACA,IAAIQ,SAAS,IAAIN,YAAjB,EAA+B;YAC7B,MAAI,CAAC3F,WAAL,CAAiB,IAAjB;UACD;;UAED,OAAOJ,OAAO,CAACqG,SAAD,CAAd;QACD,CAPD;QASA,KAAK7H,YAAL,CAAkB,OAAlB,EAA2B,KAAKsH,UAAL,CAAsB9F,OAAtB,CAA3B;QACA,OAAO,IAAP;MACD,CAlxCM;;MAoxCP;AACJ;AACA;MACIuG,gBAvxCO,8BAuxCY;QACjB,KAAKnG,WAAL,CAAiB,IAAjB;QACA,KAAK5B,YAAL,CAAkB,OAAlB,EAA2B,EAA3B;MACD,CA1xCM;;MA4xCP;AACJ;AACA;MACIgI,cA/xCO,0BA+xCQvR,KA/xCR,EA+xCeuN,QA/xCf,EA+xCyB;QAC9B,IAAIxC,OAAO,GAAG,KAAK4F,UAAL,EAAd;;QACA,IAAIpD,QAAJ,EAAc;UACZA,QAAQ,CAACxD,KAAT,CAAe,GAAf,EAAoBW,OAApB,CAA4B,UAAArK,IAAI;YAAA,OAAI,OAAO0K,OAAO,CAAC1K,IAAI,CAACuQ,WAAL,EAAD,CAAlB;UAAA,CAAhC;QACD;;QACD,IAAI5Q,KAAJ,EAAW;UACTA,KAAK,CAAC+J,KAAN,CAAY,GAAZ,EAAiBW,OAAjB,CAAyB,UAAArK,IAAI;YAAA,OAAK0K,OAAO,CAAC1K,IAAI,CAACuQ,WAAL,EAAD,CAAP,GAA8BvQ,IAAnC;UAAA,CAA7B;QACD;;QACD,KAAKkJ,YAAL,CAAkB,OAAlB,EAA2B,KAAKsH,UAAL,CAAsB9F,OAAtB,CAA3B;MACD,CAxyCM;;MA0yCP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIyG,aAl0CO,yBAk0COC,IAl0CP,EAk0Ca;QAClB,IAAI,CAAC,KAAKxR,QAAV,EAAoB;UAClB,OAAO;YACLyR,IAAI,EAAE,CADD;YAELC,GAAG,EAAE,CAFA;YAGLC,KAAK,EAAE,CAHF;YAILC,MAAM,EAAE,CAJH;YAKLC,KAAK,EAAE,CALF;YAMLC,MAAM,EAAE,CANH;YAOLC,OAAO,EAAE;cACPF,KAAK,EAAE,CADA;cAEPC,MAAM,EAAE;YAFD;UAPJ,CAAP;QAYD;;QACD,IAAIE,GAAG,GAAGrT,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAegP,QAAf,CAAwBzO,GAAxB,CAA4B,KAAKxD,QAAjC,EAA2CwR,IAA3C,CAAV;QACAQ,GAAG,CAACD,OAAJ,GAAcpT,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAeiP,SAAf,CAAyBC,cAAzB,CAAwC,KAAKnS,QAA7C,CAAd;QACAgS,GAAG,CAACH,KAAJ,GAAYG,GAAG,CAACL,KAAJ,GAAYK,GAAG,CAACP,IAA5B;QACAO,GAAG,CAACF,MAAJ,GAAaE,GAAG,CAACJ,MAAJ,GAAaI,GAAG,CAACN,GAA9B;QACA,OAAOM,GAAP;MACD,CAt1CM;;MAw1CP;AACJ;AACA;MACII,SA31CO,uBA21CK;QACV,IAAI,KAAKpS,QAAL,IAAiB,KAAKqD,SAAL,EAArB,EAAuC;UACrC,IAAIgP,IAAI,GAAG,KAAKrS,QAAL,CAAcsS,qBAAd,EAAX;;UACA,IACED,IAAI,CAACX,GAAL,GAAW,CAAX,IACAW,IAAI,CAACZ,IAAL,GAAY,CADZ,IAEAY,IAAI,CAACR,KAAL,GAAa,CAFb,IAGAQ,IAAI,CAACP,MAAL,GAAc,CAJhB,EAKE;YACA,OAAO,IAAP;UACD;QACF;;QACD,OAAO,KAAP;MACD,CAx2CM;;MA02CP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIxI,YAz3CO,wBAy3CM5J,GAz3CN,EAy3CWK,KAz3CX,EAy3CkB4N,MAz3ClB,EAy3C0B;QAC/B,IAAI,CAAC,KAAKlO,SAAV,EAA0B;UACxB,KAAKA,SAAL,GAAsB,EAAtB;QACD;;QAED,IAAI,KAAKA,SAAL,CAAoBC,GAApB,KAA4BK,KAAhC,EAAuC;UACrC,OAAO,IAAP;QACD;;QAED,IAAIA,KAAK,IAAI,IAAb,EAAmB;UACjB,OAAO,KAAKN,SAAL,CAAoBC,GAApB,CAAP;QACD,CAFD,MAEO;UACL,KAAKD,SAAL,CAAoBC,GAApB,IAA2BK,KAA3B;QACD;;QAED,IAAIL,GAAG,IAAI,mBAAX,EAAgC;UAC9B,KAAK6J,aAAL,CAAmBxJ,KAAnB;QACD,CAjB8B,CAmB/B;QACA;QACA;;;QACA,IAAI,KAAKC,QAAT,EAAmB;UACjB;UACA,IAAI2N,MAAJ,EAAY;YACVhP,EAAE,CAACqD,GAAH,CAAOiB,OAAP,CAAe0E,SAAf,CAAyBxC,GAAzB,CAA6B,KAAKnF,QAAlC,EAA4CN,GAA5C,EAAiDK,KAAjD;YACA,OAAO,IAAP;UACD,CALgB,CAOjB;;;UACA,IAAI,CAAC,KAAKmH,UAAV,EAAwB;YACtB,KAAKA,UAAL,GAAoB,EAApB;UACD,CAVgB,CAYjB;;;UACA,KAAKA,UAAL,CAAkBxH,GAAlB,IAAyB,IAAzB,CAbiB,CAejB;;UACAf,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBV,SAAhB,CAA0B,KAAK8M,UAAL,EAA1B,IAA+C,IAA/C;;UACA5O,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBF,cAAhB,CAA+B,SAA/B;QACD;;QAED,OAAO,IAAP;MACD,CAp6CM;;MAs6CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIsR,aA/6CO,yBA+6COjC,GA/6CP,EA+6CY3C,MA/6CZ,EA+6CoB;QACzB,KAAK,IAAIjO,GAAT,IAAgB4Q,GAAhB,EAAqB;UACnB,KAAKhH,YAAL,CAAkB5J,GAAlB,EAAuB4Q,GAAG,CAAC5Q,GAAD,CAA1B,EAAiCiO,MAAjC;QACD;;QAED,OAAO,IAAP;MACD,CAr7CM;;MAu7CP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI6E,eA/7CO,2BA+7CS9S,GA/7CT,EA+7CciO,MA/7Cd,EA+7CsB;QAC3B,OAAO,KAAKrE,YAAL,CAAkB5J,GAAlB,EAAuB,IAAvB,EAA6BiO,MAA7B,CAAP;MACD,CAj8CM;;MAm8CP;AACJ;AACA;AACA;AACA;AACA;MACItE,YAz8CO,wBAy8CM3J,GAz8CN,EAy8CW;QAChB,OAAO,KAAKD,SAAL,GAAsB,KAAKA,SAAL,CAAoBC,GAApB,CAAtB,GAAiD,IAAxD;MACD;IA38CM,CAvbwB;;IAq4DjC;AACF;AACA;AACA;AACA;IAEE+S,KA34DiC,iBA24D3BpS,OA34D2B,EA24DlB;MACbA,OAAO,CAACe,SAAR,GAAyB,IAAIzC,EAAE,CAAC+T,IAAH,CAAQC,YAAZ,CAAyBtS,OAAO,CAACiB,KAAjC,EAAwCjB,OAAxC,CAAzB;MACAA,OAAO,CAACW,SAAR,GAA8B,EAA9B;MACA,CACE,MADF,EAEE,MAFF,EAGE,IAHF,EAIE,KAJF,EAKE,OALF,EAME,IANF,EAOE,KAPF,EAQE,OARF,EASE,MATF,EAUE,MAVF,EAWE,OAXF,EAYE,QAZF,EAaE,OAbF,EAcE,KAdF,EAeEyJ,OAfF,CAeU,UAAUpL,OAAV,EAAmB;QAC3BgB,OAAO,CAACW,SAAR,CAA4B3B,OAA5B,IAAuC,IAAvC;MACD,CAjBD;IAkBD,CAh6DgC;;IAk6DjC;AACF;AACA;AACA;AACA;IAEEuT,QAx6DiC,sBAw6DtB;MACT,IAAIC,IAAI,GAAG,KAAKtF,UAAL,EAAX;;MACA,IAAIsF,IAAJ,EAAU;QACR,OAAOlU,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBV,SAAhB,CAA0BoS,IAA1B,CAAP;QACA,OAAOlU,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBR,OAAhB,CAAwBkS,IAAxB,CAAP;MACD;;MACD,KAAKpH,OAAL,CAAa,KAAb;MAEA,KAAKhM,SAAL,GACE,KAAKD,SAAL,GACA,KAAK0H,UAAL,GACA,KAAKD,UAAL,GACA,KAAK7C,UAAL,GACA,KAAKM,UAAL,GACE,IANJ;IAOD;EAv7DgC,CAAnC;EA1CA/F,EAAE,CAACO,IAAH,CAAQiC,OAAR,CAAgBrC,aAAhB,GAAgCA,aAAhC"
}