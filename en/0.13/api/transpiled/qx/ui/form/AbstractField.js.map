{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "IForm",
    "include",
    "MForm",
    "type",
    "statics",
    "__stylesheet",
    "__addedPlaceholderRules",
    "__addPlaceholderRules",
    "__P_350_2",
    "AbstractField",
    "engine",
    "Environment",
    "get",
    "browser",
    "colorManager",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "appearanceProperties",
    "Appearance",
    "styleFrom",
    "showingPlaceholder",
    "styles",
    "color",
    "font",
    "resolve",
    "Font",
    "lang",
    "Object",
    "mergeWith",
    "getStyles",
    "selector",
    "parseFloat",
    "separator",
    "join",
    "style",
    "Stylesheet",
    "addRule",
    "construct",
    "value",
    "constructor",
    "call",
    "__useQxPlaceholder",
    "setValue",
    "getContentElement",
    "addListener",
    "_onChangeContent",
    "_syncPlaceholder",
    "addClass",
    "locale",
    "Manager",
    "_onChangeLocale",
    "events",
    "input",
    "changeValue",
    "properties",
    "textAlign",
    "check",
    "nullable",
    "themeable",
    "apply",
    "readOnly",
    "event",
    "init",
    "selectable",
    "refine",
    "focusable",
    "maxLength",
    "Infinity",
    "liveUpdate",
    "liveUpdateOnRxMatch",
    "transform",
    "placeholder",
    "filter",
    "members",
    "__nullValue",
    "_placeholder",
    "__oldValue",
    "__oldInputValue",
    "__font",
    "__webfontListenerId",
    "getFocusElement",
    "el",
    "_createInputElement",
    "html",
    "Input",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "updateInsets",
    "_updateInsets",
    "changes",
    "superclass",
    "prototype",
    "inner",
    "size",
    "pixel",
    "local",
    "margin",
    "innerWidth",
    "innerHeight",
    "insets",
    "getInsets",
    "_getPlaceholderElement",
    "setStyles",
    "paddingTop",
    "paddingRight",
    "right",
    "paddingBottom",
    "bottom",
    "paddingLeft",
    "_renderContentElement",
    "position",
    "element",
    "_createContentElement",
    "setSelectable",
    "getSelectable",
    "setEnabled",
    "getEnabled",
    "_onHtmlInput",
    "setAttribute",
    "backgroundImage",
    "util",
    "ResourceManager",
    "toUri",
    "_applyEnabled",
    "old",
    "_showPlaceholder",
    "_removePlaceholder",
    "getPlaceholder",
    "__textSize",
    "_getContentHint",
    "_applyFont",
    "removeListenerById",
    "Type",
    "isString",
    "bom",
    "webfonts",
    "WebFont",
    "isValid",
    "_onWebFontStatusChange",
    "getDefaultStyles",
    "getTextColor",
    "Element",
    "flush",
    "Label",
    "getTextSize",
    "queue",
    "Layout",
    "add",
    "_applyTextColor",
    "setStyle",
    "removeStyle",
    "_applyMaxLength",
    "removeAttribute",
    "_string2RegExp",
    "RegExp",
    "tabFocus",
    "selectAllText",
    "_getTextSize",
    "e",
    "getData",
    "fireEvents",
    "getFilter",
    "filteredValue",
    "_validateInput",
    "fireDataEvent",
    "getLiveUpdate",
    "__fireChangeValueEvent",
    "fireRx",
    "getLiveUpdateOnRxMatch",
    "match",
    "ev",
    "valid",
    "__P_350_10",
    "fireNonBubblingEvent",
    "Data",
    "isDisposed",
    "elem",
    "getValue",
    "oldValue",
    "data",
    "Error",
    "resetValue",
    "getTextSelection",
    "getTextSelectionLength",
    "getTextSelectionStart",
    "getTextSelectionEnd",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "setLayoutParent",
    "parent",
    "getLayoutParent",
    "getParent",
    "remove",
    "fieldValue",
    "hasState",
    "addState",
    "_onPointerDownPlaceholder",
    "window",
    "setTimeout",
    "focus",
    "bind",
    "removeState",
    "zIndex",
    "whiteSpace",
    "cursor",
    "visibility",
    "select",
    "_true",
    "content",
    "translate",
    "setPlaceholder",
    "_onChangeTheme",
    "dispose",
    "removeSheet",
    "index",
    "search",
    "processedValue",
    "length",
    "charAt",
    "substring",
    "_applyPlaceholder",
    "_this",
    "removeListener",
    "getNodeName",
    "getDomElement",
    "addListenerOnce",
    "_applyTextAlign",
    "_applyReadOnly",
    "setFocusable",
    "defer",
    "css",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/AbstractField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This is a basic form field with common functionality for\r\n * {@link TextArea} and {@link TextField}.\r\n *\r\n * On every keystroke the value is synchronized with the\r\n * value of the textfield. Value changes can be monitored by listening to the\r\n * {@link #input} or {@link #changeValue} events, respectively.\r\n */\r\nqx.Class.define(\"qx.ui.form.AbstractField\", {\r\n  extend: qx.ui.core.Widget,\r\n  implement: [qx.ui.form.IStringForm, qx.ui.form.IForm],\r\n\r\n  include: [qx.ui.form.MForm],\r\n\r\n  type: \"abstract\",\r\n\r\n  statics: {\r\n    /** Stylesheet needed to style the native placeholder element. */\r\n    __stylesheet: null,\r\n\r\n    __addedPlaceholderRules: false,\r\n\r\n    /**\r\n     * Adds the CSS rules needed to style the native placeholder element.\r\n     */\r\n    __addPlaceholderRules() {\r\n      if (qx.ui.form.AbstractField.__addedPlaceholderRules) {\r\n        return;\r\n      }\r\n      qx.ui.form.AbstractField.__addedPlaceholderRules = true;\r\n      var engine = qx.core.Environment.get(\"engine.name\");\r\n      var browser = qx.core.Environment.get(\"browser.name\");\r\n      var colorManager = qx.theme.manager.Color.getInstance();\r\n\r\n      var appearanceProperties =\r\n        qx.theme.manager.Appearance.getInstance().styleFrom(\"textfield\", {\r\n          showingPlaceholder: true\r\n        });\r\n\r\n      var styles = {};\r\n\r\n      var color = null;\r\n      var font = null;\r\n      if (appearanceProperties) {\r\n        color = appearanceProperties[\"textColor\"]\r\n          ? colorManager.resolve(appearanceProperties[\"textColor\"])\r\n          : null;\r\n        font = appearanceProperties[\"font\"]\r\n          ? qx.theme.manager.Font.getInstance().resolve(\r\n              appearanceProperties[\"font\"]\r\n            )\r\n          : null;\r\n      }\r\n      if (!color) {\r\n        color = colorManager.resolve(\"text-placeholder\");\r\n      }\r\n      if (color) {\r\n        styles.color = color + \" !important\";\r\n      }\r\n      if (font) {\r\n        qx.lang.Object.mergeWith(styles, font.getStyles(), false);\r\n      }\r\n\r\n      var selector;\r\n      if (engine == \"gecko\") {\r\n        // see https://developer.mozilla.org/de/docs/CSS/:-moz-placeholder for details\r\n        if (parseFloat(qx.core.Environment.get(\"engine.version\")) >= 19) {\r\n          selector = \"input::-moz-placeholder, textarea::-moz-placeholder\";\r\n        } else {\r\n          selector = \"input:-moz-placeholder, textarea:-moz-placeholder\";\r\n        }\r\n      } else if (engine == \"webkit\" && browser != \"edge\") {\r\n        selector =\r\n          \"input.qx-placeholder-color::-webkit-input-placeholder, textarea.qx-placeholder-color::-webkit-input-placeholder\";\r\n      } else if (engine == \"mshtml\" || browser == \"edge\") {\r\n        var separator = browser == \"edge\" ? \"::\" : \":\";\r\n        selector = [\r\n          \"input.qx-placeholder-color\",\r\n          \"-ms-input-placeholder, textarea.qx-placeholder-color\",\r\n          \"-ms-input-placeholder\"\r\n        ].join(separator);\r\n        qx.ui.style.Stylesheet.getInstance().addRule(\r\n          selector,\r\n          \"color: \" + color + \" !important\"\r\n        );\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param value {String} initial text value of the input field ({@link #setValue}).\r\n   */\r\n  construct(value) {\r\n    super();\r\n\r\n    // shortcut for placeholder feature detection\r\n    this.__useQxPlaceholder = !qx.core.Environment.get(\"css.placeholder\");\r\n\r\n    if (value != null) {\r\n      this.setValue(value);\r\n    }\r\n\r\n    this.getContentElement().addListener(\"change\", this._onChangeContent, this);\r\n\r\n    // use qooxdoo placeholder if no native placeholder is supported\r\n    if (this.__useQxPlaceholder) {\r\n      // assign the placeholder text after the appearance has been applied\r\n      this.addListener(\"syncAppearance\", this._syncPlaceholder, this);\r\n    } else {\r\n      // add rules for native placeholder color\r\n      qx.ui.form.AbstractField.__addPlaceholderRules();\r\n      // add a class to the input to restrict the placeholder color\r\n      this.getContentElement().addClass(\"qx-placeholder-color\");\r\n    }\r\n\r\n    // translation support\r\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n      qx.locale.Manager.getInstance().addListener(\r\n        \"changeLocale\",\r\n        this._onChangeLocale,\r\n        this\r\n      );\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * The event is fired on every keystroke modifying the value of the field.\r\n     *\r\n     * The method {@link qx.event.type.Data#getData} returns the\r\n     * current value of the text field.\r\n     */\r\n    input: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * The event is fired each time the text field looses focus and the\r\n     * text field values has changed.\r\n     *\r\n     * If you change {@link #liveUpdate} to true, the changeValue event will\r\n     * be fired after every keystroke and not only after every focus loss. In\r\n     * that mode, the changeValue event is equal to the {@link #input} event.\r\n     *\r\n     * The method {@link qx.event.type.Data#getData} returns the\r\n     * current text value of the field.\r\n     */\r\n    changeValue: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Alignment of the text\r\n     */\r\n    textAlign: {\r\n      check: [\"left\", \"center\", \"right\"],\r\n      nullable: true,\r\n      themeable: true,\r\n      apply: \"_applyTextAlign\"\r\n    },\r\n\r\n    /** Whether the field is read only */\r\n    readOnly: {\r\n      check: \"Boolean\",\r\n      apply: \"_applyReadOnly\",\r\n      event: \"changeReadOnly\",\r\n      init: false\r\n    },\r\n\r\n    // overridden\r\n    selectable: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    // overridden\r\n    focusable: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    /** Maximal number of characters that can be entered in the TextArea. */\r\n    maxLength: {\r\n      apply: \"_applyMaxLength\",\r\n      check: \"PositiveInteger\",\r\n      init: Infinity\r\n    },\r\n\r\n    /**\r\n     * Whether the {@link #changeValue} event should be fired on every key\r\n     * input. If set to true, the changeValue event is equal to the\r\n     * {@link #input} event.\r\n     */\r\n    liveUpdate: {\r\n      check: \"Boolean\",\r\n      init: false\r\n    },\r\n\r\n    /**\r\n     * Fire a {@link #changeValue} event whenever the content of the\r\n     * field matches the given regular expression. Accepts both regular\r\n     * expression objects as well as strings for input.\r\n     */\r\n    liveUpdateOnRxMatch: {\r\n      check: \"RegExp\",\r\n      transform: \"_string2RegExp\",\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * String value which will be shown as a hint if the field is all of:\r\n     * unset, unfocused and enabled. Set to null to not show a placeholder\r\n     * text.\r\n     */\r\n    placeholder: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      apply: \"_applyPlaceholder\"\r\n    },\r\n\r\n    /**\r\n     * RegExp responsible for filtering the value of the textfield. the RegExp\r\n     * gives the range of valid values.\r\n     * Note: The regexp specified is applied to each character in turn,\r\n     * NOT to the entire string. So only regular expressions matching a\r\n     * single character make sense in the context.\r\n     * The following example only allows digits in the textfield.\r\n     * <pre class='javascript'>field.setFilter(/[0-9]/);</pre>\r\n     */\r\n    filter: {\r\n      check: \"RegExp\",\r\n      nullable: true,\r\n      init: null\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    __nullValue: true,\r\n    _placeholder: null,\r\n    __oldValue: null,\r\n    __oldInputValue: null,\r\n    __useQxPlaceholder: true,\r\n    __font: null,\r\n    __webfontListenerId: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    getFocusElement() {\r\n      var el = this.getContentElement();\r\n      if (el) {\r\n        return el;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Creates the input element. Derived classes may override this\r\n     * method, to create different input elements.\r\n     *\r\n     * @return {qx.html.Input} a new input element.\r\n     */\r\n    _createInputElement() {\r\n      return new qx.html.Input(\"text\");\r\n    },\r\n\r\n    // overridden\r\n    renderLayout(left, top, width, height) {\r\n      var updateInsets = this._updateInsets;\r\n      var changes = super.renderLayout(left, top, width, height);\r\n\r\n      // Directly return if superclass has detected that no\r\n      // changes needs to be applied\r\n      if (!changes) {\r\n        return;\r\n      }\r\n\r\n      var inner = changes.size || updateInsets;\r\n      var pixel = \"px\";\r\n\r\n      if (inner || changes.local || changes.margin) {\r\n        var innerWidth = width;\r\n        var innerHeight = height;\r\n      }\r\n\r\n      var input = this.getContentElement();\r\n\r\n      // we don't need to update positions on native placeholders\r\n      if (updateInsets && this.__useQxPlaceholder) {\r\n        if (this.__useQxPlaceholder) {\r\n          var insets = this.getInsets();\r\n          this._getPlaceholderElement().setStyles({\r\n            paddingTop: insets.top + pixel,\r\n            paddingRight: insets.right + pixel,\r\n            paddingBottom: insets.bottom + pixel,\r\n            paddingLeft: insets.left + pixel\r\n          });\r\n        }\r\n      }\r\n\r\n      if (inner || changes.margin) {\r\n        // we don't need to update dimensions on native placeholders\r\n        if (this.__useQxPlaceholder) {\r\n          var insets = this.getInsets();\r\n          this._getPlaceholderElement().setStyles({\r\n            width: innerWidth - insets.left - insets.right + pixel,\r\n            height: innerHeight - insets.top - insets.bottom + pixel\r\n          });\r\n        }\r\n\r\n        input.setStyles({\r\n          width: innerWidth + pixel,\r\n          height: innerHeight + pixel\r\n        });\r\n\r\n        this._renderContentElement(innerHeight, input);\r\n      }\r\n\r\n      if (changes.position) {\r\n        if (this.__useQxPlaceholder) {\r\n          this._getPlaceholderElement().setStyles({\r\n            left: left + pixel,\r\n            top: top + pixel\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Hook into {@link qx.ui.form.AbstractField#renderLayout} method.\r\n     * Called after the contentElement has a width and an innerWidth.\r\n     *\r\n     * Note: This was introduced to fix BUG#1585\r\n     *\r\n     * @param innerHeight {Integer} The inner height of the element.\r\n     * @param element {Element} The element.\r\n     */\r\n    _renderContentElement(innerHeight, element) {\r\n      //use it in child classes\r\n    },\r\n\r\n    // overridden\r\n    _createContentElement() {\r\n      // create and add the input element\r\n      var el = this._createInputElement();\r\n\r\n      // initialize the html input\r\n      el.setSelectable(this.getSelectable());\r\n      el.setEnabled(this.getEnabled());\r\n\r\n      // Add listener for input event\r\n      el.addListener(\"input\", this._onHtmlInput, this);\r\n\r\n      // Disable HTML5 spell checking\r\n      el.setAttribute(\"spellcheck\", \"false\");\r\n      el.addClass(\"qx-abstract-field\");\r\n\r\n      // IE8 in standard mode needs some extra love here to receive events.\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") == 8\r\n      ) {\r\n        el.setStyles({\r\n          backgroundImage:\r\n            \"url(\" +\r\n            qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") +\r\n            \")\"\r\n        });\r\n      }\r\n\r\n      return el;\r\n    },\r\n\r\n    // overridden\r\n    _applyEnabled(value, old) {\r\n      super._applyEnabled(value, old);\r\n\r\n      this.getContentElement().setEnabled(value);\r\n\r\n      if (this.__useQxPlaceholder) {\r\n        if (value) {\r\n          this._showPlaceholder();\r\n        } else {\r\n          this._removePlaceholder();\r\n        }\r\n      } else {\r\n        var input = this.getContentElement();\r\n        // remove the placeholder on disabled input elements\r\n        input.setAttribute(\"placeholder\", value ? this.getPlaceholder() : \"\");\r\n      }\r\n    },\r\n\r\n    // default text sizes\r\n    /**\r\n     * @lint ignoreReferenceField(__textSize)\r\n     */\r\n    __textSize: {\r\n      width: 16,\r\n      height: 16\r\n    },\r\n\r\n    // overridden\r\n    _getContentHint() {\r\n      return {\r\n        width: this.__textSize.width * 10,\r\n        height: this.__textSize.height || 16\r\n      };\r\n    },\r\n\r\n    // overridden\r\n    _applyFont(value, old) {\r\n      if (old && this.__font && this.__webfontListenerId) {\r\n        this.__font.removeListenerById(this.__webfontListenerId);\r\n        this.__webfontListenerId = null;\r\n      }\r\n\r\n      // Apply\r\n      var styles;\r\n      if (value) {\r\n        if (qx.lang.Type.isString(value)) {\r\n          value = qx.theme.manager.Font.getInstance().resolve(value);\r\n        }\r\n        this.__font = value;\r\n        if (\r\n          this.__font instanceof qx.bom.webfonts.WebFont &&\r\n          !this.__font.isValid()\r\n        ) {\r\n          this.__webfontListenerId = this.__font.addListener(\r\n            \"changeStatus\",\r\n            this._onWebFontStatusChange,\r\n            this\r\n          );\r\n        }\r\n        styles = this.__font.getStyles();\r\n      } else {\r\n        styles = qx.bom.Font.getDefaultStyles();\r\n      }\r\n\r\n      // check if text color already set - if so this local value has higher priority\r\n      if (this.getTextColor() != null) {\r\n        delete styles[\"color\"];\r\n      }\r\n\r\n      // apply the font to the content element\r\n      // IE 8 - 10 (but not 11 Preview) will ignore the lineHeight value\r\n      // unless it's applied directly.\r\n      if (\r\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n        qx.core.Environment.get(\"browser.documentmode\") < 11\r\n      ) {\r\n        qx.html.Element.flush();\r\n        this.getContentElement().setStyles(styles, true);\r\n      } else {\r\n        this.getContentElement().setStyles(styles);\r\n      }\r\n\r\n      // the font will adjust automatically on native placeholders\r\n      if (this.__useQxPlaceholder) {\r\n        // don't apply the color to the placeholder\r\n        delete styles[\"color\"];\r\n        // apply the font to the placeholder\r\n        this._getPlaceholderElement().setStyles(styles);\r\n      }\r\n\r\n      // Compute text size\r\n      if (value) {\r\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\r\n      } else {\r\n        delete this.__textSize;\r\n      }\r\n\r\n      // Update layout\r\n      qx.ui.core.queue.Layout.add(this);\r\n    },\r\n\r\n    // overridden\r\n    _applyTextColor(value, old) {\r\n      if (value) {\r\n        this.getContentElement().setStyle(\r\n          \"color\",\r\n          qx.theme.manager.Color.getInstance().resolve(value)\r\n        );\r\n      } else {\r\n        this.getContentElement().removeStyle(\"color\");\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyMaxLength(value, old) {\r\n      if (value) {\r\n        this.getContentElement().setAttribute(\"maxLength\", value);\r\n      } else {\r\n        this.getContentElement().removeAttribute(\"maxLength\");\r\n      }\r\n    },\r\n\r\n    // property transform\r\n    _string2RegExp(value, old) {\r\n      if (qx.lang.Type.isString(value)) {\r\n        value = new RegExp(value);\r\n      }\r\n      return value;\r\n    },\r\n\r\n    // overridden\r\n    tabFocus() {\r\n      super.tabFocus();\r\n\r\n      this.selectAllText();\r\n    },\r\n\r\n    /**\r\n     * Returns the text size.\r\n     * @return {Map} The text size.\r\n     */\r\n    _getTextSize() {\r\n      return this.__textSize;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENTS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event listener for native input events. Redirects the event\r\n     * to the widget. Also checks for the filter and max length.\r\n     *\r\n     * @param e {qx.event.type.Data} Input event\r\n     */\r\n    _onHtmlInput(e) {\r\n      var value = e.getData();\r\n      var fireEvents = true;\r\n\r\n      this.__nullValue = false;\r\n\r\n      // value unchanged; Firefox fires \"input\" when pressing ESC [BUG #5309]\r\n      if (this.__oldInputValue && this.__oldInputValue === value) {\r\n        fireEvents = false;\r\n      }\r\n\r\n      // check for the filter\r\n      if (this.getFilter() != null) {\r\n        var filteredValue = this._validateInput(value);\r\n        if (filteredValue != value) {\r\n          fireEvents = this.__oldInputValue !== filteredValue;\r\n          value = filteredValue;\r\n          this.getContentElement().setValue(value);\r\n        }\r\n      }\r\n      // fire the events, if necessary\r\n      if (fireEvents) {\r\n        // store the old input value\r\n        this.fireDataEvent(\"input\", value, this.__oldInputValue);\r\n        this.__oldInputValue = value;\r\n\r\n        // check for the live change event\r\n        if (this.getLiveUpdate()) {\r\n          this.__fireChangeValueEvent(value);\r\n        }\r\n        // check for the liveUpdateOnRxMatch change event\r\n        else {\r\n          var fireRx = this.getLiveUpdateOnRxMatch();\r\n          if (fireRx && value.match(fireRx)) {\r\n            this.__fireChangeValueEvent(value);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Triggers text size recalculation after a web font was loaded\r\n     *\r\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\r\n     */\r\n    _onWebFontStatusChange(ev) {\r\n      if (ev.getData().valid === true) {\r\n        var styles = this.__font.getStyles();\r\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\r\n        qx.ui.core.queue.Layout.add(this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles the firing of the changeValue event including the local cache\r\n     * for sending the old value in the event.\r\n     *\r\n     * @param value {String} The new value.\r\n     */\r\n    __fireChangeValueEvent(value) {\r\n      var old = this.__oldValue;\r\n      this.__oldValue = value;\r\n      if (old != value) {\r\n        this.fireNonBubblingEvent(\"changeValue\", qx.event.type.Data, [\r\n          value,\r\n          old\r\n        ]);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      TEXTFIELD VALUE API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Sets the value of the textfield to the given value.\r\n     *\r\n     * @param value {String} The new value\r\n     */\r\n    setValue(value) {\r\n      if (this.isDisposed()) {\r\n        return null;\r\n      }\r\n\r\n      // handle null values\r\n      if (value === null) {\r\n        // just do nothing if null is already set\r\n        if (this.__nullValue) {\r\n          return value;\r\n        }\r\n        value = \"\";\r\n        this.__nullValue = true;\r\n      } else {\r\n        this.__nullValue = false;\r\n        // native placeholders will be removed by the browser\r\n        if (this.__useQxPlaceholder) {\r\n          this._removePlaceholder();\r\n        }\r\n      }\r\n\r\n      if (qx.lang.Type.isString(value)) {\r\n        var elem = this.getContentElement();\r\n        if (elem.getValue() != value) {\r\n          var oldValue = elem.getValue();\r\n          elem.setValue(value);\r\n          var data = this.__nullValue ? null : value;\r\n          this.__oldValue = oldValue;\r\n          this.__fireChangeValueEvent(data);\r\n          // reset the input value on setValue calls [BUG #6892]\r\n          this.__oldInputValue = this.__oldValue;\r\n        }\r\n        // native placeholders will be shown by the browser\r\n        if (this.__useQxPlaceholder) {\r\n          this._showPlaceholder();\r\n        }\r\n        return value;\r\n      }\r\n      throw new Error(\"Invalid value type: \" + value);\r\n    },\r\n\r\n    /**\r\n     * Returns the current value of the textfield.\r\n     *\r\n     * @return {String|null} The current value\r\n     */\r\n    getValue() {\r\n      return this.isDisposed() || this.__nullValue\r\n        ? null\r\n        : this.getContentElement().getValue();\r\n    },\r\n\r\n    /**\r\n     * Resets the value to the default\r\n     */\r\n    resetValue() {\r\n      this.setValue(null);\r\n    },\r\n\r\n    /**\r\n     * Event listener for change event of content element\r\n     *\r\n     * @param e {qx.event.type.Data} Incoming change event\r\n     */\r\n    _onChangeContent(e) {\r\n      this.__nullValue = e.getData() === null;\r\n      this.__fireChangeValueEvent(e.getData());\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      TEXTFIELD SELECTION API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the current selection.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @return {String|null}\r\n     */\r\n    getTextSelection() {\r\n      return this.getContentElement().getTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Returns the current selection length.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @return {Integer|null}\r\n     */\r\n    getTextSelectionLength() {\r\n      return this.getContentElement().getTextSelectionLength();\r\n    },\r\n\r\n    /**\r\n     * Returns the start of the text selection\r\n     *\r\n     * @return {Integer|null} Start of selection or null if not available\r\n     */\r\n    getTextSelectionStart() {\r\n      return this.getContentElement().getTextSelectionStart();\r\n    },\r\n\r\n    /**\r\n     * Returns the end of the text selection\r\n     *\r\n     * @return {Integer|null} End of selection or null if not available\r\n     */\r\n    getTextSelectionEnd() {\r\n      return this.getContentElement().getTextSelectionEnd();\r\n    },\r\n\r\n    /**\r\n     * Set the selection to the given start and end (zero-based).\r\n     * If no end value is given the selection will extend to the\r\n     * end of the textfield's content.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @param start {Integer} start of the selection (zero-based)\r\n     * @param end {Integer} end of the selection\r\n     */\r\n    setTextSelection(start, end) {\r\n      this.getContentElement().setTextSelection(start, end);\r\n    },\r\n\r\n    /**\r\n     * Clears the current selection.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     */\r\n    clearTextSelection() {\r\n      this.getContentElement().clearTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Selects the whole content\r\n     *\r\n     */\r\n    selectAllText() {\r\n      this.setTextSelection(0);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PLACEHOLDER HELPERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    setLayoutParent(parent) {\r\n      super.setLayoutParent(parent);\r\n      if (this.__useQxPlaceholder) {\r\n        if (parent) {\r\n          this.getLayoutParent()\r\n            .getContentElement()\r\n            .add(this._getPlaceholderElement());\r\n        } else {\r\n          var placeholder = this._getPlaceholderElement();\r\n          placeholder.getParent().remove(placeholder);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper to show the placeholder text in the field. It checks for all\r\n     * states and possible conditions and shows the placeholder only if allowed.\r\n     */\r\n    _showPlaceholder() {\r\n      var fieldValue = this.getValue() || \"\";\r\n      var placeholder = this.getPlaceholder();\r\n      if (\r\n        placeholder != null &&\r\n        fieldValue == \"\" &&\r\n        !this.hasState(\"focused\") &&\r\n        !this.hasState(\"disabled\")\r\n      ) {\r\n        if (this.hasState(\"showingPlaceholder\")) {\r\n          this._syncPlaceholder();\r\n        } else {\r\n          // the placeholder will be set as soon as the appearance is applied\r\n          this.addState(\"showingPlaceholder\");\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove the fake placeholder\r\n     */\r\n    _onPointerDownPlaceholder() {\r\n      window.setTimeout(\r\n        function () {\r\n          this.focus();\r\n        }.bind(this),\r\n        0\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Helper to remove the placeholder. Deletes the placeholder text from the\r\n     * field and removes the state.\r\n     */\r\n    _removePlaceholder() {\r\n      if (this.hasState(\"showingPlaceholder\")) {\r\n        if (this.__useQxPlaceholder) {\r\n          this._getPlaceholderElement().setStyle(\"visibility\", \"hidden\");\r\n        }\r\n        this.removeState(\"showingPlaceholder\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the placeholder text with the DOM\r\n     */\r\n    _syncPlaceholder() {\r\n      if (this.hasState(\"showingPlaceholder\") && this.__useQxPlaceholder) {\r\n        this._getPlaceholderElement().setStyle(\"visibility\", \"visible\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the placeholder label and creates it if necessary.\r\n     */\r\n    _getPlaceholderElement() {\r\n      if (this._placeholder == null) {\r\n        // create the placeholder\r\n        this._placeholder = new qx.html.Label();\r\n        var colorManager = qx.theme.manager.Color.getInstance();\r\n        this._placeholder.setStyles({\r\n          zIndex: 11,\r\n          position: \"absolute\",\r\n          color: colorManager.resolve(\"text-placeholder\"),\r\n          whiteSpace: \"normal\", // enable wrap by default\r\n          cursor: \"text\",\r\n          visibility: \"hidden\"\r\n        });\r\n\r\n        this._placeholder.addListener(\r\n          \"pointerdown\",\r\n          this._onPointerDownPlaceholder,\r\n          this\r\n        );\r\n      }\r\n      return this._placeholder;\r\n    },\r\n\r\n    /**\r\n     * Locale change event handler\r\n     *\r\n     * @signature function(e)\r\n     * @param e {Event} the change event\r\n     */\r\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\r\n      true(e) {\r\n        var content = this.getPlaceholder();\r\n        if (content && content.translate) {\r\n          this.setPlaceholder(content.translate());\r\n        }\r\n      },\r\n\r\n      false: null\r\n    }),\r\n\r\n    // overridden\r\n    _onChangeTheme() {\r\n      super._onChangeTheme();\r\n      if (this._placeholder) {\r\n        // delete the placeholder element because it uses a theme dependent color\r\n        this._placeholder.dispose();\r\n        this._placeholder = null;\r\n      }\r\n      if (!this.__useQxPlaceholder && qx.ui.form.AbstractField.__stylesheet) {\r\n        qx.bom.Stylesheet.removeSheet(qx.ui.form.AbstractField.__stylesheet);\r\n        qx.ui.form.AbstractField.__stylesheet = null;\r\n        qx.ui.form.AbstractField.__addPlaceholderRules();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Validates the the input value.\r\n     *\r\n     * @param value {Object} The value to check\r\n     * @returns The checked value\r\n     */\r\n    _validateInput(value) {\r\n      var filteredValue = value;\r\n      var filter = this.getFilter();\r\n\r\n      // If no filter is set return just the value\r\n      if (filter !== null) {\r\n        filteredValue = \"\";\r\n        var index = value.search(filter);\r\n        var processedValue = value;\r\n\r\n        while (index >= 0 && processedValue.length > 0) {\r\n          filteredValue = filteredValue + processedValue.charAt(index);\r\n          processedValue = processedValue.substring(\r\n            index + 1,\r\n            processedValue.length\r\n          );\r\n\r\n          index = processedValue.search(filter);\r\n        }\r\n      }\r\n\r\n      return filteredValue;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyPlaceholder(value, old) {\r\n      if (this.__useQxPlaceholder) {\r\n        this._getPlaceholderElement().setValue(value);\r\n        if (value != null) {\r\n          this.addListener(\"focusin\", this._removePlaceholder, this);\r\n          this.addListener(\"focusout\", this._showPlaceholder, this);\r\n          this._showPlaceholder();\r\n        } else {\r\n          this.removeListener(\"focusin\", this._removePlaceholder, this);\r\n          this.removeListener(\"focusout\", this._showPlaceholder, this);\r\n          this._removePlaceholder();\r\n        }\r\n      } else {\r\n        // only apply if the widget is enabled\r\n        if (this.getEnabled()) {\r\n          this.getContentElement().setAttribute(\"placeholder\", value);\r\n\r\n          if (\r\n            qx.core.Environment.get(\"browser.name\") === \"firefox\" &&\r\n            parseFloat(qx.core.Environment.get(\"browser.version\")) < 36 &&\r\n            this.getContentElement().getNodeName() === \"textarea\" &&\r\n            !this.getContentElement().getDomElement()\r\n          ) {\r\n            /* qx Bug #8870: Firefox 35 will not display a text area's\r\n               placeholder text if the attribute is set before the\r\n               element is added to the DOM. This is fixed in FF 36. */\r\n            this.addListenerOnce(\"appear\", () => {\r\n              this.getContentElement()\r\n                .getDomElement()\r\n                .removeAttribute(\"placeholder\");\r\n              this.getContentElement()\r\n                .getDomElement()\r\n                .setAttribute(\"placeholder\", value);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyTextAlign(value, old) {\r\n      this.getContentElement().setStyle(\"textAlign\", value);\r\n    },\r\n\r\n    // property apply\r\n    _applyReadOnly(value, old) {\r\n      var element = this.getContentElement();\r\n\r\n      element.setAttribute(\"readOnly\", value);\r\n\r\n      if (value) {\r\n        this.addState(\"readonly\");\r\n        this.setFocusable(false);\r\n      } else {\r\n        this.removeState(\"readonly\");\r\n        this.setFocusable(true);\r\n      }\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    var css =\r\n      \"border: none;\" +\r\n      \"padding: 0;\" +\r\n      \"margin: 0;\" +\r\n      \"display : block;\" +\r\n      \"background : transparent;\" +\r\n      \"outline: none;\" +\r\n      \"appearance: none;\" +\r\n      \"position: absolute;\" +\r\n      \"autoComplete: off;\" +\r\n      \"resize: none;\" +\r\n      \"border-radius: 0;\";\r\n\r\n    qx.ui.style.Stylesheet.getInstance().addRule(\".qx-abstract-field\", css);\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n  destruct() {\r\n    if (this._placeholder) {\r\n      this._placeholder.removeListener(\r\n        \"pointerdown\",\r\n        this._onPointerDownPlaceholder,\r\n        this\r\n      );\r\n\r\n      var parent = this._placeholder.getParent();\r\n      if (parent) {\r\n        parent.remove(this._placeholder);\r\n      }\r\n      this._placeholder.dispose();\r\n    }\r\n\r\n    this._placeholder = this.__font = null;\r\n\r\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n      qx.locale.Manager.getInstance().removeListener(\r\n        \"changeLocale\",\r\n        this._onChangeLocale,\r\n        this\r\n      );\r\n    }\r\n\r\n    if (this.__font && this.__webfontListenerId) {\r\n      this.__font.removeListenerById(this.__webfontListenerId);\r\n    }\r\n\r\n    this.getContentElement().removeListener(\"input\", this._onHtmlInput, this);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}