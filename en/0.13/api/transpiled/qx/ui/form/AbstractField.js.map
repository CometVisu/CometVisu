{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "IForm",
    "include",
    "MForm",
    "type",
    "statics",
    "__stylesheet",
    "__addedPlaceholderRules",
    "__addPlaceholderRules",
    "AbstractField",
    "engine",
    "Environment",
    "get",
    "browser",
    "colorManager",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "appearanceProperties",
    "Appearance",
    "styleFrom",
    "showingPlaceholder",
    "styles",
    "color",
    "font",
    "resolve",
    "Font",
    "lang",
    "Object",
    "mergeWith",
    "getStyles",
    "selector",
    "parseFloat",
    "separator",
    "join",
    "style",
    "Stylesheet",
    "addRule",
    "construct",
    "value",
    "__useQxPlaceholder",
    "setValue",
    "getContentElement",
    "addListener",
    "_onChangeContent",
    "_syncPlaceholder",
    "addClass",
    "locale",
    "Manager",
    "_onChangeLocale",
    "events",
    "input",
    "changeValue",
    "properties",
    "textAlign",
    "check",
    "nullable",
    "themeable",
    "apply",
    "readOnly",
    "event",
    "init",
    "selectable",
    "refine",
    "focusable",
    "maxLength",
    "Infinity",
    "liveUpdate",
    "liveUpdateOnRxMatch",
    "transform",
    "placeholder",
    "filter",
    "members",
    "__nullValue",
    "_placeholder",
    "__oldValue",
    "__oldInputValue",
    "__font",
    "__webfontListenerId",
    "getFocusElement",
    "el",
    "_createInputElement",
    "html",
    "Input",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "updateInsets",
    "_updateInsets",
    "changes",
    "inner",
    "size",
    "pixel",
    "local",
    "margin",
    "innerWidth",
    "innerHeight",
    "insets",
    "getInsets",
    "_getPlaceholderElement",
    "setStyles",
    "paddingTop",
    "paddingRight",
    "right",
    "paddingBottom",
    "bottom",
    "paddingLeft",
    "_renderContentElement",
    "position",
    "element",
    "_createContentElement",
    "setSelectable",
    "getSelectable",
    "setEnabled",
    "getEnabled",
    "_onHtmlInput",
    "setAttribute",
    "backgroundImage",
    "util",
    "ResourceManager",
    "toUri",
    "_applyEnabled",
    "old",
    "_showPlaceholder",
    "_removePlaceholder",
    "getPlaceholder",
    "__textSize",
    "_getContentHint",
    "_applyFont",
    "removeListenerById",
    "Type",
    "isString",
    "bom",
    "webfonts",
    "WebFont",
    "isValid",
    "_onWebFontStatusChange",
    "getDefaultStyles",
    "getTextColor",
    "Element",
    "flush",
    "Label",
    "getTextSize",
    "queue",
    "Layout",
    "add",
    "_applyTextColor",
    "setStyle",
    "removeStyle",
    "_applyMaxLength",
    "removeAttribute",
    "_string2RegExp",
    "RegExp",
    "tabFocus",
    "selectAllText",
    "_getTextSize",
    "e",
    "getData",
    "fireEvents",
    "getFilter",
    "filteredValue",
    "_validateInput",
    "fireDataEvent",
    "getLiveUpdate",
    "__fireChangeValueEvent",
    "fireRx",
    "getLiveUpdateOnRxMatch",
    "match",
    "ev",
    "valid",
    "fireNonBubblingEvent",
    "Data",
    "isDisposed",
    "elem",
    "getValue",
    "oldValue",
    "data",
    "Error",
    "resetValue",
    "getTextSelection",
    "getTextSelectionLength",
    "getTextSelectionStart",
    "getTextSelectionEnd",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "setLayoutParent",
    "parent",
    "getLayoutParent",
    "getParent",
    "remove",
    "fieldValue",
    "hasState",
    "addState",
    "_onPointerDownPlaceholder",
    "window",
    "setTimeout",
    "focus",
    "bind",
    "removeState",
    "zIndex",
    "whiteSpace",
    "cursor",
    "visibility",
    "select",
    "content",
    "translate",
    "setPlaceholder",
    "_onChangeTheme",
    "dispose",
    "removeSheet",
    "index",
    "search",
    "processedValue",
    "length",
    "charAt",
    "substring",
    "_applyPlaceholder",
    "removeListener",
    "getNodeName",
    "getDomElement",
    "addListenerOnce",
    "_applyTextAlign",
    "_applyReadOnly",
    "setFocusable",
    "defer",
    "css",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/AbstractField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This is a basic form field with common functionality for\n * {@link TextArea} and {@link TextField}.\n *\n * On every keystroke the value is synchronized with the\n * value of the textfield. Value changes can be monitored by listening to the\n * {@link #input} or {@link #changeValue} events, respectively.\n */\nqx.Class.define(\"qx.ui.form.AbstractField\", {\n  extend: qx.ui.core.Widget,\n  implement: [qx.ui.form.IStringForm, qx.ui.form.IForm],\n\n  include: [qx.ui.form.MForm],\n\n  type: \"abstract\",\n\n  statics: {\n    /** Stylesheet needed to style the native placeholder element. */\n    __stylesheet: null,\n\n    __addedPlaceholderRules: false,\n\n    /**\n     * Adds the CSS rules needed to style the native placeholder element.\n     */\n    __addPlaceholderRules() {\n      if (qx.ui.form.AbstractField.__addedPlaceholderRules) {\n        return;\n      }\n      qx.ui.form.AbstractField.__addedPlaceholderRules = true;\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var colorManager = qx.theme.manager.Color.getInstance();\n\n      var appearanceProperties =\n        qx.theme.manager.Appearance.getInstance().styleFrom(\"textfield\", {\n          showingPlaceholder: true\n        });\n\n      var styles = {};\n\n      var color = null;\n      var font = null;\n      if (appearanceProperties) {\n        color = appearanceProperties[\"textColor\"]\n          ? colorManager.resolve(appearanceProperties[\"textColor\"])\n          : null;\n        font = appearanceProperties[\"font\"]\n          ? qx.theme.manager.Font.getInstance().resolve(\n              appearanceProperties[\"font\"]\n            )\n          : null;\n      }\n      if (!color) {\n        color = colorManager.resolve(\"text-placeholder\");\n      }\n      if (color) {\n        styles.color = color + \" !important\";\n      }\n      if (font) {\n        qx.lang.Object.mergeWith(styles, font.getStyles(), false);\n      }\n\n      var selector;\n      if (engine == \"gecko\") {\n        // see https://developer.mozilla.org/de/docs/CSS/:-moz-placeholder for details\n        if (parseFloat(qx.core.Environment.get(\"engine.version\")) >= 19) {\n          selector = \"input::-moz-placeholder, textarea::-moz-placeholder\";\n        } else {\n          selector = \"input:-moz-placeholder, textarea:-moz-placeholder\";\n        }\n      } else if (engine == \"webkit\" && browser != \"edge\") {\n        selector =\n          \"input.qx-placeholder-color::-webkit-input-placeholder, textarea.qx-placeholder-color::-webkit-input-placeholder\";\n      } else if (engine == \"mshtml\" || browser == \"edge\") {\n        var separator = browser == \"edge\" ? \"::\" : \":\";\n        selector = [\n          \"input.qx-placeholder-color\",\n          \"-ms-input-placeholder, textarea.qx-placeholder-color\",\n          \"-ms-input-placeholder\"\n        ].join(separator);\n        qx.ui.style.Stylesheet.getInstance().addRule(\n          selector,\n          \"color: \" + color + \" !important\"\n        );\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} initial text value of the input field ({@link #setValue}).\n   */\n  construct(value) {\n    super();\n\n    // shortcut for placeholder feature detection\n    this.__useQxPlaceholder = !qx.core.Environment.get(\"css.placeholder\");\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    this.getContentElement().addListener(\"change\", this._onChangeContent, this);\n\n    // use qooxdoo placeholder if no native placeholder is supported\n    if (this.__useQxPlaceholder) {\n      // assign the placeholder text after the appearance has been applied\n      this.addListener(\"syncAppearance\", this._syncPlaceholder, this);\n    } else {\n      // add rules for native placeholder color\n      qx.ui.form.AbstractField.__addPlaceholderRules();\n      // add a class to the input to restrict the placeholder color\n      this.getContentElement().addClass(\"qx-placeholder-color\");\n    }\n\n    // translation support\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The event is fired on every keystroke modifying the value of the field.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current value of the text field.\n     */\n    input: \"qx.event.type.Data\",\n\n    /**\n     * The event is fired each time the text field looses focus and the\n     * text field values has changed.\n     *\n     * If you change {@link #liveUpdate} to true, the changeValue event will\n     * be fired after every keystroke and not only after every focus loss. In\n     * that mode, the changeValue event is equal to the {@link #input} event.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Alignment of the text\n     */\n    textAlign: {\n      check: [\"left\", \"center\", \"right\"],\n      nullable: true,\n      themeable: true,\n      apply: \"_applyTextAlign\"\n    },\n\n    /** Whether the field is read only */\n    readOnly: {\n      check: \"Boolean\",\n      apply: \"_applyReadOnly\",\n      event: \"changeReadOnly\",\n      init: false\n    },\n\n    // overridden\n    selectable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /** Maximal number of characters that can be entered in the TextArea. */\n    maxLength: {\n      apply: \"_applyMaxLength\",\n      check: \"PositiveInteger\",\n      init: Infinity\n    },\n\n    /**\n     * Whether the {@link #changeValue} event should be fired on every key\n     * input. If set to true, the changeValue event is equal to the\n     * {@link #input} event.\n     */\n    liveUpdate: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n     * Fire a {@link #changeValue} event whenever the content of the\n     * field matches the given regular expression. Accepts both regular\n     * expression objects as well as strings for input.\n     */\n    liveUpdateOnRxMatch: {\n      check: \"RegExp\",\n      transform: \"_string2RegExp\",\n      init: null\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /**\n     * RegExp responsible for filtering the value of the textfield. the RegExp\n     * gives the range of valid values.\n     * Note: The regexp specified is applied to each character in turn,\n     * NOT to the entire string. So only regular expressions matching a\n     * single character make sense in the context.\n     * The following example only allows digits in the textfield.\n     * <pre class='javascript'>field.setFilter(/[0-9]/);</pre>\n     */\n    filter: {\n      check: \"RegExp\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __nullValue: true,\n    _placeholder: null,\n    __oldValue: null,\n    __oldInputValue: null,\n    __useQxPlaceholder: true,\n    __font: null,\n    __webfontListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getFocusElement() {\n      var el = this.getContentElement();\n      if (el) {\n        return el;\n      }\n    },\n\n    /**\n     * Creates the input element. Derived classes may override this\n     * method, to create different input elements.\n     *\n     * @return {qx.html.Input} a new input element.\n     */\n    _createInputElement() {\n      return new qx.html.Input(\"text\");\n    },\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var updateInsets = this._updateInsets;\n      var changes = super.renderLayout(left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return;\n      }\n\n      var inner = changes.size || updateInsets;\n      var pixel = \"px\";\n\n      if (inner || changes.local || changes.margin) {\n        var innerWidth = width;\n        var innerHeight = height;\n      }\n\n      var input = this.getContentElement();\n\n      // we don't need to update positions on native placeholders\n      if (updateInsets && this.__useQxPlaceholder) {\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            paddingTop: insets.top + pixel,\n            paddingRight: insets.right + pixel,\n            paddingBottom: insets.bottom + pixel,\n            paddingLeft: insets.left + pixel\n          });\n        }\n      }\n\n      if (inner || changes.margin) {\n        // we don't need to update dimensions on native placeholders\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            width: innerWidth - insets.left - insets.right + pixel,\n            height: innerHeight - insets.top - insets.bottom + pixel\n          });\n        }\n\n        input.setStyles({\n          width: innerWidth + pixel,\n          height: innerHeight + pixel\n        });\n\n        this._renderContentElement(innerHeight, input);\n      }\n\n      if (changes.position) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyles({\n            left: left + pixel,\n            top: top + pixel\n          });\n        }\n      }\n    },\n\n    /**\n     * Hook into {@link qx.ui.form.AbstractField#renderLayout} method.\n     * Called after the contentElement has a width and an innerWidth.\n     *\n     * Note: This was introduced to fix BUG#1585\n     *\n     * @param innerHeight {Integer} The inner height of the element.\n     * @param element {Element} The element.\n     */\n    _renderContentElement(innerHeight, element) {\n      //use it in child classes\n    },\n\n    // overridden\n    _createContentElement() {\n      // create and add the input element\n      var el = this._createInputElement();\n\n      // initialize the html input\n      el.setSelectable(this.getSelectable());\n      el.setEnabled(this.getEnabled());\n\n      // Add listener for input event\n      el.addListener(\"input\", this._onHtmlInput, this);\n\n      // Disable HTML5 spell checking\n      el.setAttribute(\"spellcheck\", \"false\");\n      el.addClass(\"qx-abstract-field\");\n\n      // IE8 in standard mode needs some extra love here to receive events.\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") == 8\n      ) {\n        el.setStyles({\n          backgroundImage:\n            \"url(\" +\n            qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") +\n            \")\"\n        });\n      }\n\n      return el;\n    },\n\n    // overridden\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      this.getContentElement().setEnabled(value);\n\n      if (this.__useQxPlaceholder) {\n        if (value) {\n          this._showPlaceholder();\n        } else {\n          this._removePlaceholder();\n        }\n      } else {\n        var input = this.getContentElement();\n        // remove the placeholder on disabled input elements\n        input.setAttribute(\"placeholder\", value ? this.getPlaceholder() : \"\");\n      }\n    },\n\n    // default text sizes\n    /**\n     * @lint ignoreReferenceField(__textSize)\n     */\n    __textSize: {\n      width: 16,\n      height: 16\n    },\n\n    // overridden\n    _getContentHint() {\n      return {\n        width: this.__textSize.width * 10,\n        height: this.__textSize.height || 16\n      };\n    },\n\n    // overridden\n    _applyFont(value, old) {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n\n      // Apply\n      var styles;\n      if (value) {\n        if (qx.lang.Type.isString(value)) {\n          value = qx.theme.manager.Font.getInstance().resolve(value);\n        }\n        this.__font = value;\n        if (\n          this.__font instanceof qx.bom.webfonts.WebFont &&\n          !this.__font.isValid()\n        ) {\n          this.__webfontListenerId = this.__font.addListener(\n            \"changeStatus\",\n            this._onWebFontStatusChange,\n            this\n          );\n        }\n        styles = this.__font.getStyles();\n      } else {\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      // apply the font to the content element\n      // IE 8 - 10 (but not 11 Preview) will ignore the lineHeight value\n      // unless it's applied directly.\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 11\n      ) {\n        qx.html.Element.flush();\n        this.getContentElement().setStyles(styles, true);\n      } else {\n        this.getContentElement().setStyles(styles);\n      }\n\n      // the font will adjust automatically on native placeholders\n      if (this.__useQxPlaceholder) {\n        // don't apply the color to the placeholder\n        delete styles[\"color\"];\n        // apply the font to the placeholder\n        this._getPlaceholderElement().setStyles(styles);\n      }\n\n      // Compute text size\n      if (value) {\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n      } else {\n        delete this.__textSize;\n      }\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // overridden\n    _applyTextColor(value, old) {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\",\n          qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n    // property apply\n    _applyMaxLength(value, old) {\n      if (value) {\n        this.getContentElement().setAttribute(\"maxLength\", value);\n      } else {\n        this.getContentElement().removeAttribute(\"maxLength\");\n      }\n    },\n\n    // property transform\n    _string2RegExp(value, old) {\n      if (qx.lang.Type.isString(value)) {\n        value = new RegExp(value);\n      }\n      return value;\n    },\n\n    // overridden\n    tabFocus() {\n      super.tabFocus();\n\n      this.selectAllText();\n    },\n\n    /**\n     * Returns the text size.\n     * @return {Map} The text size.\n     */\n    _getTextSize() {\n      return this.__textSize;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for native input events. Redirects the event\n     * to the widget. Also checks for the filter and max length.\n     *\n     * @param e {qx.event.type.Data} Input event\n     */\n    _onHtmlInput(e) {\n      var value = e.getData();\n      var fireEvents = true;\n\n      this.__nullValue = false;\n\n      // value unchanged; Firefox fires \"input\" when pressing ESC [BUG #5309]\n      if (this.__oldInputValue && this.__oldInputValue === value) {\n        fireEvents = false;\n      }\n\n      // check for the filter\n      if (this.getFilter() != null) {\n        var filteredValue = this._validateInput(value);\n        if (filteredValue != value) {\n          fireEvents = this.__oldInputValue !== filteredValue;\n          value = filteredValue;\n          this.getContentElement().setValue(value);\n        }\n      }\n      // fire the events, if necessary\n      if (fireEvents) {\n        // store the old input value\n        this.fireDataEvent(\"input\", value, this.__oldInputValue);\n        this.__oldInputValue = value;\n\n        // check for the live change event\n        if (this.getLiveUpdate()) {\n          this.__fireChangeValueEvent(value);\n        }\n        // check for the liveUpdateOnRxMatch change event\n        else {\n          var fireRx = this.getLiveUpdateOnRxMatch();\n          if (fireRx && value.match(fireRx)) {\n            this.__fireChangeValueEvent(value);\n          }\n        }\n      }\n    },\n\n    /**\n     * Triggers text size recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange(ev) {\n      if (ev.getData().valid === true) {\n        var styles = this.__font.getStyles();\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    /**\n     * Handles the firing of the changeValue event including the local cache\n     * for sending the old value in the event.\n     *\n     * @param value {String} The new value.\n     */\n    __fireChangeValueEvent(value) {\n      var old = this.__oldValue;\n      this.__oldValue = value;\n      if (old != value) {\n        this.fireNonBubblingEvent(\"changeValue\", qx.event.type.Data, [\n          value,\n          old\n        ]);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD VALUE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value of the textfield to the given value.\n     *\n     * @param value {String} The new value\n     */\n    setValue(value) {\n      if (this.isDisposed()) {\n        return null;\n      }\n\n      // handle null values\n      if (value === null) {\n        // just do nothing if null is already set\n        if (this.__nullValue) {\n          return value;\n        }\n        value = \"\";\n        this.__nullValue = true;\n      } else {\n        this.__nullValue = false;\n        // native placeholders will be removed by the browser\n        if (this.__useQxPlaceholder) {\n          this._removePlaceholder();\n        }\n      }\n\n      if (qx.lang.Type.isString(value)) {\n        var elem = this.getContentElement();\n        if (elem.getValue() != value) {\n          var oldValue = elem.getValue();\n          elem.setValue(value);\n          var data = this.__nullValue ? null : value;\n          this.__oldValue = oldValue;\n          this.__fireChangeValueEvent(data);\n          // reset the input value on setValue calls [BUG #6892]\n          this.__oldInputValue = this.__oldValue;\n        }\n        // native placeholders will be shown by the browser\n        if (this.__useQxPlaceholder) {\n          this._showPlaceholder();\n        }\n        return value;\n      }\n      throw new Error(\"Invalid value type: \" + value);\n    },\n\n    /**\n     * Returns the current value of the textfield.\n     *\n     * @return {String|null} The current value\n     */\n    getValue() {\n      return this.isDisposed() || this.__nullValue\n        ? null\n        : this.getContentElement().getValue();\n    },\n\n    /**\n     * Resets the value to the default\n     */\n    resetValue() {\n      this.setValue(null);\n    },\n\n    /**\n     * Event listener for change event of content element\n     *\n     * @param e {qx.event.type.Data} Incoming change event\n     */\n    _onChangeContent(e) {\n      this.__nullValue = e.getData() === null;\n      this.__fireChangeValueEvent(e.getData());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection() {\n      return this.getContentElement().getTextSelection();\n    },\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength() {\n      return this.getContentElement().getTextSelectionLength();\n    },\n\n    /**\n     * Returns the start of the text selection\n     *\n     * @return {Integer|null} Start of selection or null if not available\n     */\n    getTextSelectionStart() {\n      return this.getContentElement().getTextSelectionStart();\n    },\n\n    /**\n     * Returns the end of the text selection\n     *\n     * @return {Integer|null} End of selection or null if not available\n     */\n    getTextSelectionEnd() {\n      return this.getContentElement().getTextSelectionEnd();\n    },\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection(start, end) {\n      this.getContentElement().setTextSelection(start, end);\n    },\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection() {\n      this.getContentElement().clearTextSelection();\n    },\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText() {\n      this.setTextSelection(0);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PLACEHOLDER HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    setLayoutParent(parent) {\n      super.setLayoutParent(parent);\n      if (this.__useQxPlaceholder) {\n        if (parent) {\n          this.getLayoutParent()\n            .getContentElement()\n            .add(this._getPlaceholderElement());\n        } else {\n          var placeholder = this._getPlaceholderElement();\n          placeholder.getParent().remove(placeholder);\n        }\n      }\n    },\n\n    /**\n     * Helper to show the placeholder text in the field. It checks for all\n     * states and possible conditions and shows the placeholder only if allowed.\n     */\n    _showPlaceholder() {\n      var fieldValue = this.getValue() || \"\";\n      var placeholder = this.getPlaceholder();\n      if (\n        placeholder != null &&\n        fieldValue == \"\" &&\n        !this.hasState(\"focused\") &&\n        !this.hasState(\"disabled\")\n      ) {\n        if (this.hasState(\"showingPlaceholder\")) {\n          this._syncPlaceholder();\n        } else {\n          // the placeholder will be set as soon as the appearance is applied\n          this.addState(\"showingPlaceholder\");\n        }\n      }\n    },\n\n    /**\n     * Remove the fake placeholder\n     */\n    _onPointerDownPlaceholder() {\n      window.setTimeout(\n        function () {\n          this.focus();\n        }.bind(this),\n        0\n      );\n    },\n\n    /**\n     * Helper to remove the placeholder. Deletes the placeholder text from the\n     * field and removes the state.\n     */\n    _removePlaceholder() {\n      if (this.hasState(\"showingPlaceholder\")) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyle(\"visibility\", \"hidden\");\n        }\n        this.removeState(\"showingPlaceholder\");\n      }\n    },\n\n    /**\n     * Updates the placeholder text with the DOM\n     */\n    _syncPlaceholder() {\n      if (this.hasState(\"showingPlaceholder\") && this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setStyle(\"visibility\", \"visible\");\n      }\n    },\n\n    /**\n     * Returns the placeholder label and creates it if necessary.\n     */\n    _getPlaceholderElement() {\n      if (this._placeholder == null) {\n        // create the placeholder\n        this._placeholder = new qx.html.Label();\n        var colorManager = qx.theme.manager.Color.getInstance();\n        this._placeholder.setStyles({\n          zIndex: 11,\n          position: \"absolute\",\n          color: colorManager.resolve(\"text-placeholder\"),\n          whiteSpace: \"normal\", // enable wrap by default\n          cursor: \"text\",\n          visibility: \"hidden\"\n        });\n\n        this._placeholder.addListener(\n          \"pointerdown\",\n          this._onPointerDownPlaceholder,\n          this\n        );\n      }\n      return this._placeholder;\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        var content = this.getPlaceholder();\n        if (content && content.translate) {\n          this.setPlaceholder(content.translate());\n        }\n      },\n\n      false: null\n    }),\n\n    // overridden\n    _onChangeTheme() {\n      super._onChangeTheme();\n      if (this._placeholder) {\n        // delete the placeholder element because it uses a theme dependent color\n        this._placeholder.dispose();\n        this._placeholder = null;\n      }\n      if (!this.__useQxPlaceholder && qx.ui.form.AbstractField.__stylesheet) {\n        qx.bom.Stylesheet.removeSheet(qx.ui.form.AbstractField.__stylesheet);\n        qx.ui.form.AbstractField.__stylesheet = null;\n        qx.ui.form.AbstractField.__addPlaceholderRules();\n      }\n    },\n\n    /**\n     * Validates the the input value.\n     *\n     * @param value {Object} The value to check\n     * @returns The checked value\n     */\n    _validateInput(value) {\n      var filteredValue = value;\n      var filter = this.getFilter();\n\n      // If no filter is set return just the value\n      if (filter !== null) {\n        filteredValue = \"\";\n        var index = value.search(filter);\n        var processedValue = value;\n\n        while (index >= 0 && processedValue.length > 0) {\n          filteredValue = filteredValue + processedValue.charAt(index);\n          processedValue = processedValue.substring(\n            index + 1,\n            processedValue.length\n          );\n\n          index = processedValue.search(filter);\n        }\n      }\n\n      return filteredValue;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPlaceholder(value, old) {\n      if (this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setValue(value);\n        if (value != null) {\n          this.addListener(\"focusin\", this._removePlaceholder, this);\n          this.addListener(\"focusout\", this._showPlaceholder, this);\n          this._showPlaceholder();\n        } else {\n          this.removeListener(\"focusin\", this._removePlaceholder, this);\n          this.removeListener(\"focusout\", this._showPlaceholder, this);\n          this._removePlaceholder();\n        }\n      } else {\n        // only apply if the widget is enabled\n        if (this.getEnabled()) {\n          this.getContentElement().setAttribute(\"placeholder\", value);\n\n          if (\n            qx.core.Environment.get(\"browser.name\") === \"firefox\" &&\n            parseFloat(qx.core.Environment.get(\"browser.version\")) < 36 &&\n            this.getContentElement().getNodeName() === \"textarea\" &&\n            !this.getContentElement().getDomElement()\n          ) {\n            /* qx Bug #8870: Firefox 35 will not display a text area's\n               placeholder text if the attribute is set before the\n               element is added to the DOM. This is fixed in FF 36. */\n            this.addListenerOnce(\"appear\", () => {\n              this.getContentElement()\n                .getDomElement()\n                .removeAttribute(\"placeholder\");\n              this.getContentElement()\n                .getDomElement()\n                .setAttribute(\"placeholder\", value);\n            });\n          }\n        }\n      }\n    },\n\n    // property apply\n    _applyTextAlign(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n    // property apply\n    _applyReadOnly(value, old) {\n      var element = this.getContentElement();\n\n      element.setAttribute(\"readOnly\", value);\n\n      if (value) {\n        this.addState(\"readonly\");\n        this.setFocusable(false);\n      } else {\n        this.removeState(\"readonly\");\n        this.setFocusable(true);\n      }\n    }\n  },\n\n  defer(statics) {\n    var css =\n      \"border: none;\" +\n      \"padding: 0;\" +\n      \"margin: 0;\" +\n      \"display : block;\" +\n      \"background : transparent;\" +\n      \"outline: none;\" +\n      \"appearance: none;\" +\n      \"position: absolute;\" +\n      \"autoComplete: off;\" +\n      \"resize: none;\" +\n      \"border-radius: 0;\";\n\n    qx.ui.style.Stylesheet.getInstance().addRule(\".qx-abstract-field\", css);\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct() {\n    if (this._placeholder) {\n      this._placeholder.removeListener(\n        \"pointerdown\",\n        this._onPointerDownPlaceholder,\n        this\n      );\n\n      var parent = this._placeholder.getParent();\n      if (parent) {\n        parent.remove(this._placeholder);\n      }\n      this._placeholder.dispose();\n    }\n\n    this._placeholder = this.__font = null;\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.getContentElement().removeListener(\"input\", this._onHtmlInput, this);\n  }\n});\n"
  ],
  "mappings": "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"
}