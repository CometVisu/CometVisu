{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IBooleanForm",
    "IExecutable",
    "IRadioItem",
    "construct",
    "label",
    "icon",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "_onKeyDown",
    "_onKeyUp",
    "_onExecute",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "value",
    "check",
    "nullable",
    "event",
    "apply",
    "group",
    "triState",
    "members",
    "_applyGroup",
    "old",
    "remove",
    "add",
    "_applyValue",
    "addState",
    "removeState",
    "ariaPressed",
    "Boolean",
    "isTriState",
    "_applyTriState",
    "getValue",
    "e",
    "toggleValue",
    "getTarget",
    "hasState",
    "isLeftPressed",
    "capture",
    "stopPropagation",
    "releaseCapture",
    "execute",
    "getKeyIdentifier",
    "ToggleButton"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ToggleButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A toggle Button widget\n *\n * If the user presses the button by tapping on it pressing the enter or\n * space key, the button toggles between the pressed an not pressed states.\n */\nqx.Class.define(\"qx.ui.form.ToggleButton\", {\n  extend: qx.ui.basic.Atom,\n  include: [qx.ui.core.MExecutable],\n\n  implement: [\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IRadioItem\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a ToggleButton.\n   *\n   * @param label {String} The text on the button.\n   * @param icon {String} An URI to the icon of the button.\n   */\n  construct(label, icon) {\n    super(label, icon);\n\n    // register pointer events\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n\n    // register keyboard events\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // register execute event\n    this.addListener(\"execute\", this._onExecute, this);\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"button\");\n    contentEl.setAttribute(\"aria-pressed\", false);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"toggle-button\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeValue\",\n      apply: \"_applyValue\",\n      init: false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons. */\n    group: {\n      check: \"qx.ui.form.RadioGroup\",\n      nullable: true,\n      apply: \"_applyGroup\"\n    },\n\n    /**\n     * Whether the button has a third state. Use this for tri-state checkboxes.\n     *\n     * When enabled, the value null of the property value stands for \"undetermined\",\n     * while true is mapped to \"enabled\" and false to \"disabled\" as usual. Note\n     * that the value property is set to false initially.\n     *\n     */\n    triState: {\n      check: \"Boolean\",\n      apply: \"_applyTriState\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup(value, old) {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n    /**\n     * Changes the state of the button dependent on the checked value.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      let ariaPressed = Boolean(value);\n      if (this.isTriState()) {\n        if (value === null) {\n          ariaPressed = \"mixed\";\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n\n      this.getContentElement().setAttribute(\"aria-pressed\", ariaPressed);\n    },\n\n    /**\n     * Apply value property when triState property is modified.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyTriState(value, old) {\n      this._applyValue(this.getValue());\n    },\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute(e) {\n      this.toggleValue();\n    },\n\n    /**\n     * Listener method for \"pointerover\" event.\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver(e) {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.addState(\"hovered\");\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n    },\n\n    /**\n     * Listener method for \"pointerout\" event.\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" state (if \"pressed\" state is set)</li>\n     * <li>Removes \"pressed\" state (if \"pressed\" state is set and button is not checked)\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerOut(e) {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\")) {\n        if (!this.getValue()) {\n          this.removeState(\"pressed\");\n        }\n\n        this.addState(\"abandoned\");\n      }\n    },\n\n    /**\n     * Listener method for \"pointerdown\" event.\n     * <ul>\n     * <li>Activates capturing</li>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerDown(e) {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"pointerup\" event.\n     * <ul>\n     * <li>Releases capturing</li>\n     * <li>Removes \"pressed\" state (if not \"abandoned\" state is set and \"pressed\" state is set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Toggles {@link #value} (if state \"abandoned\" is not set and state \"pressed\" is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerUp(e) {\n      this.releaseCapture();\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n      } else if (this.hasState(\"pressed\")) {\n        this.execute();\n      }\n\n      this.removeState(\"pressed\");\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown(e) {\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          e.stopPropagation();\n      }\n    },\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\". It also toggles the {@link #value} property.\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp(e) {\n      if (!this.hasState(\"pressed\")) {\n        return;\n      }\n\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.execute();\n\n          this.removeState(\"pressed\");\n          e.stopPropagation();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}