{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IBooleanForm",
    "IExecutable",
    "IRadioItem",
    "construct",
    "label",
    "icon",
    "constructor",
    "call",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "_onKeyDown",
    "_onKeyUp",
    "_onExecute",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "value",
    "check",
    "nullable",
    "event",
    "apply",
    "group",
    "triState",
    "executeBehavior",
    "readOnly",
    "members",
    "_applyGroup",
    "old",
    "remove",
    "add",
    "_applyValue",
    "addState",
    "removeState",
    "ariaPressed",
    "Boolean",
    "isTriState",
    "_applyTriState",
    "getValue",
    "e",
    "getReadOnly",
    "getExecuteBehavior",
    "newValue",
    "currentValue",
    "setValue",
    "toggleValue",
    "getTarget",
    "hasState",
    "isLeftPressed",
    "capture",
    "stopPropagation",
    "releaseCapture",
    "execute",
    "getKeyIdentifier",
    "ToggleButton"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ToggleButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A toggle Button widget\n *\n * If the user presses the button by tapping on it pressing the enter or\n * space key, the button toggles between the pressed an not pressed states.\n */\nqx.Class.define(\"qx.ui.form.ToggleButton\", {\n  extend: qx.ui.basic.Atom,\n  include: [qx.ui.core.MExecutable],\n\n  implement: [\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IRadioItem\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Creates a ToggleButton.\n   *\n   * @param label {String} The text on the button.\n   * @param icon {String} An URI to the icon of the button.\n   */\n  construct(label, icon) {\n    super(label, icon);\n\n    // register pointer events\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n\n    // register keyboard events\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // register execute event\n    this.addListener(\"execute\", this._onExecute, this);\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"button\");\n    contentEl.setAttribute(\"aria-pressed\", false);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"toggle-button\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeValue\",\n      apply: \"_applyValue\",\n      init: false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons. */\n    group: {\n      check: \"qx.ui.form.RadioGroup\",\n      nullable: true,\n      apply: \"_applyGroup\"\n    },\n\n    /**\n     * Whether the button has a third state. Use this for tri-state checkboxes.\n     *\n     * When enabled, the value null of the property value stands for \"undetermined\",\n     * while true is mapped to \"enabled\" and false to \"disabled\" as usual. Note\n     * that the value property is set to false initially.\n     *\n     */\n    triState: {\n      check: \"Boolean\",\n      apply: \"_applyTriState\",\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * The behavior when the button is executed (e.g. clicked). Only useful for tri-state checkboxes.\n     * If \"cycle\" is set, the button cycles through the states \"disabled\", \"undetermined\", and \"enabled\"\n     * If \"toggle\" is set, the button toggles between \"disabled\" and \"enabled\".\n     */\n    executeBehavior: {\n      check: [\"cycle\", \"toggle\"],\n      init: \"toggle\"\n    },\n\n    /**\n     * Whether the field is read only\n     */\n    readOnly: {\n      check: \"Boolean\",\n      event: \"changeReadOnly\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons */\n    _applyGroup(value, old) {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n    /**\n     * Changes the state of the button dependent on the checked value.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      let ariaPressed = Boolean(value);\n      if (this.isTriState()) {\n        if (value === null) {\n          ariaPressed = \"mixed\";\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n\n      this.getContentElement().setAttribute(\"aria-pressed\", ariaPressed);\n    },\n\n    /**\n     * Apply value property when triState property is modified.\n     *\n     * @param value {Boolean} Current value\n     * @param old {Boolean} Previous value\n     */\n    _applyTriState(value, old) {\n      this._applyValue(this.getValue());\n    },\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute(e) {\n      if (this.getReadOnly()) {\n        return;\n      }\n      if (this.isTriState() && this.getExecuteBehavior() === \"cycle\") {\n        let newValue;\n        let currentValue = this.getValue();\n        if (currentValue === null) {\n          newValue = true;\n        } else if (currentValue === true) {\n          newValue = false;\n        } else {\n          newValue = null;\n        }\n        this.setValue(newValue);\n      } else {\n        this.toggleValue();\n      }\n    },\n\n    /**\n     * Listener method for \"pointerover\" event.\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver(e) {\n      if (e.getTarget() !== this) {\n        return;\n      }\n      if (this.getReadOnly()) {\n        return;\n      }\n\n      this.addState(\"hovered\");\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n    },\n\n    /**\n     * Listener method for \"pointerout\" event.\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" state (if \"pressed\" state is set)</li>\n     * <li>Removes \"pressed\" state (if \"pressed\" state is set and button is not checked)\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerOut(e) {\n      if (e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\")) {\n        if (!this.getValue()) {\n          this.removeState(\"pressed\");\n        }\n\n        this.addState(\"abandoned\");\n      }\n    },\n\n    /**\n     * Listener method for \"pointerdown\" event.\n     * <ul>\n     * <li>Activates capturing</li>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerDown(e) {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n      if (this.getReadOnly()) {\n        return;\n      }\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"pointerup\" event.\n     * <ul>\n     * <li>Releases capturing</li>\n     * <li>Removes \"pressed\" state (if not \"abandoned\" state is set and \"pressed\" state is set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Toggles {@link #value} (if state \"abandoned\" is not set and state \"pressed\" is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPointerUp(e) {\n      this.releaseCapture();\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n      } else if (this.hasState(\"pressed\")) {\n        this.execute();\n      }\n\n      this.removeState(\"pressed\");\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown(e) {\n      if (this.getReadOnly()) {\n        return;\n      }\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          e.stopPropagation();\n      }\n    },\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\". It also toggles the {@link #value} property.\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp(e) {\n      if (!this.hasState(\"pressed\")) {\n        return;\n      }\n\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.execute();\n\n          this.removeState(\"pressed\");\n          e.stopPropagation();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}