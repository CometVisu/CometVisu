{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "scroll",
    "AbstractScrollArea",
    "implement",
    "IMultiSelection",
    "form",
    "IForm",
    "IField",
    "IModelSelection",
    "include",
    "MRemoteChildrenHandling",
    "MMultiSelectionHandling",
    "MForm",
    "MModelSelection",
    "construct",
    "horizontal",
    "constructor",
    "call",
    "__content",
    "_createListItemContainer",
    "addListener",
    "_onAddChild",
    "_onRemoveChild",
    "getChildControl",
    "add",
    "setOrientation",
    "initOrientation",
    "_onKeyPress",
    "_onKeyInput",
    "__pressedString",
    "__childrenBindings",
    "Map",
    "events",
    "addItem",
    "removeItem",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "orientation",
    "check",
    "apply",
    "spacing",
    "themeable",
    "enableInlineFind",
    "readOnly",
    "event",
    "members",
    "__lastKeyPress",
    "SELECTION_MANAGER",
    "selection",
    "ScrollArea",
    "getChildrenContainer",
    "e",
    "child",
    "getData",
    "implementsInterface",
    "IListItem",
    "set",
    "toHashCode",
    "bind",
    "fireDataEvent",
    "binding",
    "get",
    "removeBinding",
    "handleKeyPress",
    "_getManager",
    "container",
    "Composite",
    "_applyOrientation",
    "value",
    "old",
    "getContentElement",
    "setAttribute",
    "content",
    "oldLayout",
    "getLayout",
    "layout",
    "HBox",
    "VBox",
    "setLayout",
    "setAllowGrowX",
    "setAllowGrowY",
    "_applySpacing",
    "getSpacing",
    "dispose",
    "setSpacing",
    "_applyReadOnly",
    "setReadOnly",
    "addState",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "removeState",
    "isEnabled",
    "_applyEnabled",
    "List",
    "superclass",
    "prototype",
    "isReadOnly",
    "getKeyIdentifier",
    "isAltPressed",
    "items",
    "getSelection",
    "i",
    "length",
    "fireEvent",
    "getEnableInlineFind",
    "mode",
    "getSelectionMode",
    "Date",
    "valueOf",
    "getChar",
    "matchedItem",
    "findItemByLabelFuzzy",
    "setSelection",
    "search",
    "toLowerCase",
    "getChildren",
    "l",
    "currentLabel",
    "getLabel",
    "indexOf",
    "findItem",
    "ignoreCase",
    "item",
    "label",
    "isRich",
    "control",
    "labelNode",
    "getDomElement",
    "bom",
    "element",
    "Attribute",
    "translate",
    "toString",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/List.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A list of items. Displays an automatically scrolling list for all\n * added {@link qx.ui.form.IListItem} instances (typically this would be instances of\n * {@link qx.ui.form.ListItem} but can also be other Atoms, such as {@link qx.ui.form.CheckBox}).\n * Supports various selection options: single, multi, ...\n */\nqx.Class.define(\"qx.ui.form.List\", {\n  extend: qx.ui.core.scroll.AbstractScrollArea,\n  implement: [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IForm,\n    qx.ui.form.IField,\n    qx.ui.form.IModelSelection\n  ],\n\n  include: [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.form.MForm,\n    qx.ui.form.MModelSelection\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param horizontal {Boolean?false} Whether the list should be horizontal.\n   */\n  construct(horizontal) {\n    super();\n\n    // Create content\n    this.__content = this._createListItemContainer();\n\n    // Used to fire item add/remove events\n    this.__content.addListener(\"addChildWidget\", this._onAddChild, this);\n    this.__content.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n\n    // Add to scrollpane\n    this.getChildControl(\"pane\").add(this.__content);\n\n    // Apply orientation\n    if (horizontal) {\n      this.setOrientation(\"horizontal\");\n    } else {\n      this.initOrientation();\n    }\n\n    // Add keypress listener\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"keyinput\", this._onKeyInput);\n\n    // initialize the search string\n    this.__pressedString = \"\";\n    this.__childrenBindings = new Map();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem: \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"list\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 100\n    },\n\n    // overridden\n    height: {\n      refine: true,\n      init: 200\n    },\n\n    /**\n     * Whether the list should be rendered horizontal or vertical.\n     */\n    orientation: {\n      check: [\"horizontal\", \"vertical\"],\n      init: \"vertical\",\n      apply: \"_applyOrientation\"\n    },\n\n    /** Spacing between the items */\n    spacing: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applySpacing\",\n      themeable: true\n    },\n\n    /** Controls whether the inline-find feature is activated or not */\n    enableInlineFind: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether the list is read only when enabled */\n    readOnly: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeReadOnly\",\n      apply: \"_applyReadOnly\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __pressedString: null,\n    __lastKeyPress: null,\n\n    /** @type {qx.ui.core.Widget} The children container */\n    __content: null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER: qx.ui.core.selection.ScrollArea,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getChildrenContainer() {\n      return this.__content;\n    },\n\n    __childrenBindings: null,\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild(e) {\n      const child = e.getData();\n      if (qx.Class.implementsInterface(child, qx.ui.form.IListItem)) {\n        this.__childrenBindings.set(\n          child.toHashCode(),\n          this.bind(\"readOnly\", child, \"readOnly\")\n        );\n      }\n\n      this.fireDataEvent(\"addItem\", child);\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild(e) {\n      const child = e.getData();\n      const binding = this.__childrenBindings.get(child.toHashCode());\n      if (binding) {\n        child.removeBinding(binding);\n        this.__childrenBindings.delete(child.toHashCode());\n      }\n      this.fireDataEvent(\"removeItem\", child);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Used to route external <code>keypress</code> events to the list\n     * handling (in fact the manager of the list)\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    handleKeyPress(e) {\n      if (!this._onKeyPress(e)) {\n        this._getManager().handleKeyPress(e);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This container holds the list item widgets.\n     *\n     * @return {qx.ui.container.Composite} Container for the list item widgets\n     */\n    _createListItemContainer() {\n      return new qx.ui.container.Composite();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyOrientation(value, old) {\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-orientation\", value);\n\n      var content = this.__content;\n\n      // save old layout for disposal\n      var oldLayout = content.getLayout();\n\n      // Create new layout\n      var horizontal = value === \"horizontal\";\n      var layout = horizontal\n        ? new qx.ui.layout.HBox()\n        : new qx.ui.layout.VBox();\n\n      // Configure content\n      content.setLayout(layout);\n      content.setAllowGrowX(!horizontal);\n      content.setAllowGrowY(horizontal);\n\n      // Configure spacing\n      this._applySpacing(this.getSpacing());\n\n      // dispose old layout\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n    },\n\n    // property apply\n    _applySpacing(value, old) {\n      this.__content.getLayout().setSpacing(value);\n    },\n\n    // property readOnly\n    _applyReadOnly(value) {\n      this._getManager().setReadOnly(value);\n      if (value) {\n        this.addState(\"readonly\");\n        this.addState(\"disabled\");\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      } else {\n        this.removeState(\"readonly\");\n\n        if (this.isEnabled()) {\n          this.removeState(\"disabled\");\n\n          // Re-add draggable\n          if (this.isDraggable()) {\n            this._applyDraggable(true, false);\n          }\n\n          // Re-add droppable\n          if (this.isDroppable()) {\n            this._applyDroppable(true, false);\n          }\n        }\n      }\n    },\n\n    // override\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      // If editable has just been turned on, we need to correct for readOnly status\n      if (value && this.isReadOnly()) {\n        this.addState(\"disabled\");\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for <code>keypress</code> events.\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     * @return {Boolean} Whether the event was processed\n     */\n    _onKeyPress(e) {\n      // Execute action on press <ENTER>\n      if (e.getKeyIdentifier() == \"Enter\" && !e.isAltPressed()) {\n        var items = this.getSelection();\n        for (var i = 0; i < items.length; i++) {\n          items[i].fireEvent(\"action\");\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FIND SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handles the inline find - if enabled\n     *\n     * @param e {qx.event.type.KeyInput} key input event\n     */\n    _onKeyInput(e) {\n      // do nothing if the find is disabled\n      if (!this.getEnableInlineFind()) {\n        return;\n      }\n\n      // Only useful in single or one selection mode\n      var mode = this.getSelectionMode();\n      if (!(mode === \"single\" || mode === \"one\")) {\n        return;\n      }\n\n      // Reset string after a second of non pressed key\n      if (new Date().valueOf() - this.__lastKeyPress > 1000) {\n        this.__pressedString = \"\";\n      }\n\n      // Combine keys the user pressed to a string\n      this.__pressedString += e.getChar();\n\n      // Find matching item\n      var matchedItem = this.findItemByLabelFuzzy(this.__pressedString);\n\n      // if an item was found, select it\n      if (matchedItem) {\n        this.setSelection([matchedItem]);\n      }\n\n      // Store timestamp\n      this.__lastKeyPress = new Date().valueOf();\n    },\n\n    /**\n     * Takes the given string and tries to find a ListItem\n     * which starts with this string. The search is not case sensitive and the\n     * first found ListItem will be returned. If there could not be found any\n     * qualifying list item, null will be returned.\n     *\n     * @param search {String} The text with which the label of the ListItem should start with\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItemByLabelFuzzy(search) {\n      // lower case search text\n      search = search.toLowerCase();\n\n      // get all items of the list\n      var items = this.getChildren();\n\n      // go threw all items\n      for (var i = 0, l = items.length; i < l; i++) {\n        // get the label of the current item\n        var currentLabel = items[i].getLabel();\n\n        // if the label fits with the search text (ignore case, begins with)\n        if (currentLabel && currentLabel.toLowerCase().indexOf(search) == 0) {\n          // just return the first found element\n          return items[i];\n        }\n      }\n\n      // if no element was found, return null\n      return null;\n    },\n\n    /**\n     * Find an item by its {@link qx.ui.basic.Atom#getLabel}.\n     *\n     * @param search {String} A label or any item\n     * @param ignoreCase {Boolean?true} description\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItem(search, ignoreCase) {\n      // lowercase search\n      if (ignoreCase !== false) {\n        search = search.toLowerCase();\n      }\n\n      // get all items of the list\n      var items = this.getChildren();\n      var item;\n\n      // go through all items\n      for (var i = 0, l = items.length; i < l; i++) {\n        item = items[i];\n\n        // get the content of the label; text content when rich\n        var label;\n\n        if (item.isRich()) {\n          var control = item.getChildControl(\"label\", true);\n          if (control) {\n            var labelNode = control.getContentElement().getDomElement();\n            if (labelNode) {\n              label = qx.bom.element.Attribute.get(labelNode, \"text\");\n            }\n          }\n        } else {\n          label = item.getLabel();\n        }\n\n        if (label != null) {\n          if (label.translate) {\n            label = label.translate();\n          }\n          if (ignoreCase !== false) {\n            label = label.toLowerCase();\n          }\n\n          if (label.toString() == search.toString()) {\n            return item;\n          }\n        }\n      }\n\n      return null;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__content\");\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}