{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "core",
    "AbstractVirtualBox",
    "implement",
    "IStringForm",
    "construct",
    "model",
    "_this",
    "constructor",
    "call",
    "textField",
    "_createChildControl",
    "dropdown",
    "getChildControl",
    "setSelectionMode",
    "__selection",
    "getSelection",
    "addListener",
    "__onSelectionChange",
    "bind",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "width",
    "value",
    "nullable",
    "placeholder",
    "check",
    "apply",
    "defaultFormat",
    "members",
    "__localBindId",
    "__textFieldBindId",
    "__ignoreChangeSelection",
    "getTextSelection",
    "getTextSelectionLength",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "selectAllText",
    "resetAllTextSelection",
    "tabFocus",
    "field",
    "getFocusElement",
    "focus",
    "VirtualComboBox",
    "superclass",
    "prototype",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "toggle",
    "_beforeOpen",
    "__selectFirstMatch",
    "_handleKeyboard",
    "action",
    "_getAction",
    "setValue",
    "getValue",
    "keyIdentifier",
    "getKeyIdentifier",
    "isOpen",
    "isVisible",
    "isModifierPressed",
    "_isModifierPressed",
    "_handlePointer",
    "getType",
    "close",
    "__P_362_1",
    "selected",
    "getItem",
    "__convertValue",
    "_applyPlaceholder",
    "old",
    "setPlaceholder",
    "__P_362_5",
    "selection",
    "undefined",
    "removeAll",
    "getModel",
    "lookupTable",
    "_getLookupTable",
    "i",
    "l",
    "length",
    "modelItem",
    "itemLabel",
    "indexOf",
    "setPreselected",
    "__P_362_6",
    "labelOptions",
    "getLabelOptions",
    "formatter",
    "getDefaultFormat",
    "labelPath",
    "getLabelPath",
    "result",
    "data",
    "SingleValueBinding",
    "resolvePropertyChain",
    "lang",
    "Type",
    "isString",
    "converter",
    "util",
    "Delegate",
    "getMethod",
    "String",
    "stripTags",
    "destruct",
    "removeAllBindings",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/VirtualComboBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (d_wagner)\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A virtual form widget that allows text entry as well as selection from a\r\n * drop-down.\r\n *\r\n * @childControl textfield {qx.ui.form.TextField} Field for text entry.\r\n * @childControl button {qx.ui.form.Button} Opens the drop-down.\r\n */\r\nqx.Class.define(\"qx.ui.form.VirtualComboBox\", {\r\n  extend: qx.ui.form.core.AbstractVirtualBox,\r\n\r\n  implement: [qx.ui.form.IStringForm],\r\n\r\n  construct(model) {\r\n    super(model);\r\n\r\n    var textField = this._createChildControl(\"textfield\");\r\n    this._createChildControl(\"button\");\r\n\r\n    var dropdown = this.getChildControl(\"dropdown\");\r\n    dropdown.getChildControl(\"list\").setSelectionMode(\"single\");\r\n\r\n    this.__selection = dropdown.getSelection();\r\n    this.__selection.addListener(\"change\", this.__onSelectionChange, this);\r\n\r\n    this.bind(\"value\", textField, \"value\");\r\n    textField.bind(\"value\", this, \"value\");\r\n\r\n    // forward the focusin and focusout events to the textfield. The textfield\r\n    // is not focusable so the events need to be forwarded manually.\r\n    this.addListener(\"focusin\", e => {\r\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\r\n    });\r\n\r\n    this.addListener(\"focusout\", e => {\r\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\r\n      this.fireNonBubblingEvent(\"blur\", qx.event.type.Focus);\r\n    });\r\n  },\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"virtual-combobox\"\r\n    },\r\n\r\n    // overridden\r\n    width: {\r\n      refine: true,\r\n      init: 120\r\n    },\r\n\r\n    /**\r\n     * The currently selected or entered value.\r\n     */\r\n    value: {\r\n      nullable: true,\r\n      event: \"changeValue\"\r\n    },\r\n\r\n    /**\r\n     * String value which will be shown as a hint if the field is all of:\r\n     * unset, unfocused and enabled. Set to null to not show a placeholder\r\n     * text.\r\n     */\r\n    placeholder: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      apply: \"_applyPlaceholder\"\r\n    },\r\n\r\n    /**\r\n     * Formatting function that will be applied to the value of a selected model\r\n     * item's label before it is written to the text field. Also used to find\r\n     * and preselect the first list entry that begins with the current content\r\n     * of the text field when the drop-down list is opened. Can be used e.g. to\r\n     * strip HTML tags from rich-formatted item labels. The function will be\r\n     * called with the item's label (String) as the only parameter.\r\n     */\r\n    defaultFormat: {\r\n      check: \"Function\",\r\n      init: null,\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    /** @type {var} Binding id between local value and text field value. */\r\n    __localBindId: null,\r\n\r\n    /** @type {var} Binding id between text field value and local value. */\r\n    __textFieldBindId: null,\r\n\r\n    /** @type {qx.data.Array} the drop-down selection. */\r\n    __selection: null,\r\n\r\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\r\n    __ignoreChangeSelection: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the current selection. This method only works if the widget is\r\n     * already created and added to the document.\r\n     *\r\n     * @return {String|null} The current text selection.\r\n     */\r\n    getTextSelection() {\r\n      return this.getChildControl(\"textfield\").getTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Returns the current selection length. This method only works if the\r\n     * widget is already created and added to the document.\r\n     *\r\n     * @return {Integer|null} The current text selection length.\r\n     */\r\n    getTextSelectionLength() {\r\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\r\n    },\r\n\r\n    /**\r\n     * Set the selection to the given start and end (zero-based). If no end\r\n     * value is given the selection will extend to the end of the textfield's\r\n     * content. This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @param start {Integer} Start of the selection (zero-based).\r\n     * @param end {Integer} End of the selection.\r\n     */\r\n    setTextSelection(start, end) {\r\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\r\n    },\r\n\r\n    /**\r\n     * Clears the current selection. This method only works if the widget is\r\n     * already created and added to the document.\r\n     */\r\n    clearTextSelection() {\r\n      this.getChildControl(\"textfield\").clearTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Selects the whole content.\r\n     */\r\n    selectAllText() {\r\n      this.getChildControl(\"textfield\").selectAllText();\r\n    },\r\n\r\n    /**\r\n     * Clear any text selection, then select all text.\r\n     */\r\n    resetAllTextSelection() {\r\n      this.clearTextSelection();\r\n      this.selectAllText();\r\n    },\r\n\r\n    // overridden\r\n    tabFocus() {\r\n      var field = this.getChildControl(\"textfield\");\r\n\r\n      field.getFocusElement().focus();\r\n      field.selectAllText();\r\n    },\r\n\r\n    // overridden\r\n    focus() {\r\n      super.focus();\r\n      this.getChildControl(\"textfield\").getFocusElement().focus();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      INTERNAL API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"textfield\":\r\n          control = new qx.ui.form.TextField();\r\n          control.setFocusable(false);\r\n          control.addState(\"inner\");\r\n          this._add(control, { flex: 1 });\r\n          break;\r\n\r\n        case \"button\":\r\n          control = new qx.ui.form.Button();\r\n          control.setFocusable(false);\r\n          control.setKeepActive(true);\r\n          control.addState(\"inner\");\r\n          control.addListener(\"execute\", this.toggle, this);\r\n          this._add(control);\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id, hash);\r\n    },\r\n\r\n    // overridden\r\n    _beforeOpen() {\r\n      this.__selectFirstMatch();\r\n    },\r\n\r\n    // overridden\r\n    _handleKeyboard(event) {\r\n      var action = this._getAction(event);\r\n\r\n      switch (action) {\r\n        case \"select\":\r\n          this.setValue(this.getChildControl(\"textfield\").getValue());\r\n          break;\r\n\r\n        default:\r\n          super._handleKeyboard(event);\r\n          break;\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _getAction(event) {\r\n      var keyIdentifier = event.getKeyIdentifier();\r\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\r\n      var isModifierPressed = this._isModifierPressed(event);\r\n\r\n      if (!isOpen && !isModifierPressed && keyIdentifier === \"Enter\") {\r\n        return \"select\";\r\n      } else {\r\n        return super._getAction(event);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _handlePointer(event) {\r\n      super._handlePointer(event);\r\n\r\n      var type = event.getType();\r\n      if (type !== \"tap\") {\r\n        return;\r\n      }\r\n\r\n      this.close();\r\n    },\r\n\r\n    /**\r\n     * Handler to synchronize selection changes with the value property.\r\n     *\r\n     * @param event {qx.event.type.Data} The change event from the qx.data.Array.\r\n     */\r\n    __onSelectionChange(event) {\r\n      if (this.__ignoreChangeSelection == true) {\r\n        return;\r\n      }\r\n\r\n      var selected = this.__selection.getItem(0);\r\n      if (selected) {\r\n        selected = this.__convertValue(selected);\r\n        this.setValue(selected);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    // property apply\r\n    _applyPlaceholder(value, old) {\r\n      this.getChildControl(\"textfield\").setPlaceholder(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Selects the first list item that starts with the text field's value.\r\n     */\r\n    __selectFirstMatch() {\r\n      var value = this.getValue();\r\n      var dropdown = this.getChildControl(\"dropdown\");\r\n      var selection = dropdown.getSelection();\r\n      var selected = selection.getItem(0);\r\n\r\n      // try to preselect the matching item even if there is no current selection\r\n      if (selected === undefined || this.__convertValue(selected) !== value) {\r\n        // only reset the old selection if there is one\r\n        if (selected !== undefined) {\r\n          // reset the old selection\r\n          this.__ignoreChangeSelection = true;\r\n          selection.removeAll();\r\n          this.__ignoreChangeSelection = false;\r\n        }\r\n\r\n        // No calculation is needed when the value is empty\r\n        if (value == null || value == \"\") {\r\n          return;\r\n        }\r\n\r\n        var model = this.getModel();\r\n        var lookupTable = dropdown.getChildControl(\"list\")._getLookupTable();\r\n        for (var i = 0, l = lookupTable.length; i < l; i++) {\r\n          var modelItem = model.getItem(lookupTable[i]);\r\n          var itemLabel = this.__convertValue(modelItem);\r\n\r\n          if (itemLabel && itemLabel.indexOf(value) == 0) {\r\n            dropdown.setPreselected(modelItem);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper method to convert the model item to a String.\r\n     *\r\n     * @param modelItem {var} The model item to convert.\r\n     * @return {String} The converted value.\r\n     */\r\n    __convertValue(modelItem) {\r\n      var labelOptions = this.getLabelOptions();\r\n      var formatter = this.getDefaultFormat();\r\n      var labelPath = this.getLabelPath();\r\n      var result = null;\r\n\r\n      if (labelPath != null) {\r\n        result = qx.data.SingleValueBinding.resolvePropertyChain(\r\n          modelItem,\r\n          labelPath\r\n        );\r\n      } else if (qx.lang.Type.isString(modelItem)) {\r\n        result = modelItem;\r\n      }\r\n\r\n      var converter = qx.util.Delegate.getMethod(labelOptions, \"converter\");\r\n      if (converter != null) {\r\n        result = converter(result);\r\n      }\r\n\r\n      if (result != null && formatter != null) {\r\n        result = formatter(qx.lang.String.stripTags(result));\r\n      }\r\n\r\n      return result;\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    var textField = this.getChildControl(\"textfield\");\r\n    this.removeAllBindings();\r\n    textField.removeAllBindings();\r\n\r\n    this.__selection.removeListener(\"change\", this.__onSelectionChange, this);\r\n    this.__selection = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}