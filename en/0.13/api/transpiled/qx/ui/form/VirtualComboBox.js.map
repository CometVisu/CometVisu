{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "core",
    "AbstractVirtualBox",
    "implement",
    "IStringForm",
    "construct",
    "model",
    "textField",
    "_createChildControl",
    "dropdown",
    "getChildControl",
    "setSelectionMode",
    "__selection",
    "getSelection",
    "addListener",
    "__onSelectionChange",
    "bind",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "width",
    "value",
    "nullable",
    "placeholder",
    "check",
    "apply",
    "defaultFormat",
    "members",
    "__localBindId",
    "__textFieldBindId",
    "__ignoreChangeSelection",
    "getTextSelection",
    "getTextSelectionLength",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "selectAllText",
    "resetAllTextSelection",
    "tabFocus",
    "field",
    "getFocusElement",
    "focus",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "toggle",
    "_beforeOpen",
    "__selectFirstMatch",
    "_handleKeyboard",
    "action",
    "_getAction",
    "setValue",
    "getValue",
    "keyIdentifier",
    "getKeyIdentifier",
    "isOpen",
    "isVisible",
    "isModifierPressed",
    "_isModifierPressed",
    "_handlePointer",
    "getType",
    "close",
    "selected",
    "getItem",
    "__convertValue",
    "_applyPlaceholder",
    "old",
    "setPlaceholder",
    "selection",
    "undefined",
    "removeAll",
    "getModel",
    "lookupTable",
    "_getLookupTable",
    "i",
    "l",
    "length",
    "modelItem",
    "itemLabel",
    "indexOf",
    "setPreselected",
    "labelOptions",
    "getLabelOptions",
    "formatter",
    "getDefaultFormat",
    "labelPath",
    "getLabelPath",
    "result",
    "data",
    "SingleValueBinding",
    "resolvePropertyChain",
    "lang",
    "Type",
    "isString",
    "converter",
    "util",
    "Delegate",
    "getMethod",
    "String",
    "stripTags",
    "destruct",
    "removeAllBindings",
    "removeListener",
    "VirtualComboBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/VirtualComboBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A virtual form widget that allows text entry as well as selection from a\n * drop-down.\n *\n * @childControl textfield {qx.ui.form.TextField} Field for text entry.\n * @childControl button {qx.ui.form.Button} Opens the drop-down.\n */\nqx.Class.define(\"qx.ui.form.VirtualComboBox\", {\n  extend: qx.ui.form.core.AbstractVirtualBox,\n\n  implement: [qx.ui.form.IStringForm],\n\n  construct(model) {\n    super(model);\n\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    var dropdown = this.getChildControl(\"dropdown\");\n    dropdown.getChildControl(\"list\").setSelectionMode(\"single\");\n\n    this.__selection = dropdown.getSelection();\n    this.__selection.addListener(\"change\", this.__onSelectionChange, this);\n\n    this.bind(\"value\", textField, \"value\");\n    textField.bind(\"value\", this, \"value\");\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", e => {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    });\n\n    this.addListener(\"focusout\", e => {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n      this.fireNonBubblingEvent(\"blur\", qx.event.type.Focus);\n    });\n  },\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"virtual-combobox\"\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    },\n\n    /**\n     * The currently selected or entered value.\n     */\n    value: {\n      nullable: true,\n      event: \"changeValue\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /**\n     * Formatting function that will be applied to the value of a selected model\n     * item's label before it is written to the text field. Also used to find\n     * and preselect the first list entry that begins with the current content\n     * of the text field when the drop-down list is opened. Can be used e.g. to\n     * strip HTML tags from rich-formatted item labels. The function will be\n     * called with the item's label (String) as the only parameter.\n     */\n    defaultFormat: {\n      check: \"Function\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    /** @type {var} Binding id between local value and text field value. */\n    __localBindId: null,\n\n    /** @type {var} Binding id between text field value and local value. */\n    __textFieldBindId: null,\n\n    /** @type {qx.data.Array} the drop-down selection. */\n    __selection: null,\n\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\n    __ignoreChangeSelection: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection. This method only works if the widget is\n     * already created and added to the document.\n     *\n     * @return {String|null} The current text selection.\n     */\n    getTextSelection() {\n      return this.getChildControl(\"textfield\").getTextSelection();\n    },\n\n    /**\n     * Returns the current selection length. This method only works if the\n     * widget is already created and added to the document.\n     *\n     * @return {Integer|null} The current text selection length.\n     */\n    getTextSelectionLength() {\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\n    },\n\n    /**\n     * Set the selection to the given start and end (zero-based). If no end\n     * value is given the selection will extend to the end of the textfield's\n     * content. This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} Start of the selection (zero-based).\n     * @param end {Integer} End of the selection.\n     */\n    setTextSelection(start, end) {\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\n    },\n\n    /**\n     * Clears the current selection. This method only works if the widget is\n     * already created and added to the document.\n     */\n    clearTextSelection() {\n      this.getChildControl(\"textfield\").clearTextSelection();\n    },\n\n    /**\n     * Selects the whole content.\n     */\n    selectAllText() {\n      this.getChildControl(\"textfield\").selectAllText();\n    },\n\n    /**\n     * Clear any text selection, then select all text.\n     */\n    resetAllTextSelection() {\n      this.clearTextSelection();\n      this.selectAllText();\n    },\n\n    // overridden\n    tabFocus() {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n    // overridden\n    focus() {\n      super.focus();\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    // overridden\n    _beforeOpen() {\n      this.__selectFirstMatch();\n    },\n\n    // overridden\n    _handleKeyboard(event) {\n      var action = this._getAction(event);\n\n      switch (action) {\n        case \"select\":\n          this.setValue(this.getChildControl(\"textfield\").getValue());\n          break;\n\n        default:\n          super._handleKeyboard(event);\n          break;\n      }\n    },\n\n    // overridden\n    _getAction(event) {\n      var keyIdentifier = event.getKeyIdentifier();\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\n      var isModifierPressed = this._isModifierPressed(event);\n\n      if (!isOpen && !isModifierPressed && keyIdentifier === \"Enter\") {\n        return \"select\";\n      } else {\n        return super._getAction(event);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _handlePointer(event) {\n      super._handlePointer(event);\n\n      var type = event.getType();\n      if (type !== \"tap\") {\n        return;\n      }\n\n      this.close();\n    },\n\n    /**\n     * Handler to synchronize selection changes with the value property.\n     *\n     * @param event {qx.event.type.Data} The change event from the qx.data.Array.\n     */\n    __onSelectionChange(event) {\n      if (this.__ignoreChangeSelection == true) {\n        return;\n      }\n\n      var selected = this.__selection.getItem(0);\n      if (selected) {\n        selected = this.__convertValue(selected);\n        this.setValue(selected);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n    // property apply\n    _applyPlaceholder(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Selects the first list item that starts with the text field's value.\n     */\n    __selectFirstMatch() {\n      var value = this.getValue();\n      var dropdown = this.getChildControl(\"dropdown\");\n      var selection = dropdown.getSelection();\n      var selected = selection.getItem(0);\n\n      // try to preselect the matching item even if there is no current selection\n      if (selected === undefined || this.__convertValue(selected) !== value) {\n        // only reset the old selection if there is one\n        if (selected !== undefined) {\n          // reset the old selection\n          this.__ignoreChangeSelection = true;\n          selection.removeAll();\n          this.__ignoreChangeSelection = false;\n        }\n\n        // No calculation is needed when the value is empty\n        if (value == null || value == \"\") {\n          return;\n        }\n\n        var model = this.getModel();\n        var lookupTable = dropdown.getChildControl(\"list\")._getLookupTable();\n        for (var i = 0, l = lookupTable.length; i < l; i++) {\n          var modelItem = model.getItem(lookupTable[i]);\n          var itemLabel = this.__convertValue(modelItem);\n\n          if (itemLabel && itemLabel.indexOf(value) == 0) {\n            dropdown.setPreselected(modelItem);\n            break;\n          }\n        }\n      }\n    },\n\n    /**\n     * Helper method to convert the model item to a String.\n     *\n     * @param modelItem {var} The model item to convert.\n     * @return {String} The converted value.\n     */\n    __convertValue(modelItem) {\n      var labelOptions = this.getLabelOptions();\n      var formatter = this.getDefaultFormat();\n      var labelPath = this.getLabelPath();\n      var result = null;\n\n      if (labelPath != null) {\n        result = qx.data.SingleValueBinding.resolvePropertyChain(\n          modelItem,\n          labelPath\n        );\n      } else if (qx.lang.Type.isString(modelItem)) {\n        result = modelItem;\n      }\n\n      var converter = qx.util.Delegate.getMethod(labelOptions, \"converter\");\n      if (converter != null) {\n        result = converter(result);\n      }\n\n      if (result != null && formatter != null) {\n        result = formatter(qx.lang.String.stripTags(result));\n      }\n\n      return result;\n    }\n  },\n\n  destruct() {\n    var textField = this.getChildControl(\"textfield\");\n    this.removeAllBindings();\n    textField.removeAllBindings();\n\n    this.__selection.removeListener(\"change\", this.__onSelectionChange, this);\n    this.__selection = null;\n  }\n});\n"
  ],
  "mappings": "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"
}