{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "core",
    "AbstractVirtualBox",
    "implement",
    "IStringForm",
    "construct",
    "model",
    "textField",
    "_createChildControl",
    "dropdown",
    "getChildControl",
    "setSelectionMode",
    "__selection",
    "getSelection",
    "addListener",
    "__onSelectionChange",
    "bind",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "width",
    "value",
    "nullable",
    "placeholder",
    "check",
    "apply",
    "defaultFormat",
    "members",
    "__localBindId",
    "__textFieldBindId",
    "__ignoreChangeSelection",
    "getTextSelection",
    "getTextSelectionLength",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "selectAllText",
    "resetAllTextSelection",
    "tabFocus",
    "field",
    "getFocusElement",
    "focus",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "toggle",
    "_beforeOpen",
    "__selectFirstMatch",
    "_handleKeyboard",
    "action",
    "_getAction",
    "setValue",
    "getValue",
    "keyIdentifier",
    "getKeyIdentifier",
    "isOpen",
    "isVisible",
    "isModifierPressed",
    "_isModifierPressed",
    "_handlePointer",
    "getType",
    "close",
    "selected",
    "getItem",
    "__convertValue",
    "_applyPlaceholder",
    "old",
    "setPlaceholder",
    "selection",
    "undefined",
    "removeAll",
    "getModel",
    "lookupTable",
    "_getLookupTable",
    "i",
    "l",
    "length",
    "modelItem",
    "itemLabel",
    "indexOf",
    "setPreselected",
    "labelOptions",
    "getLabelOptions",
    "formatter",
    "getDefaultFormat",
    "labelPath",
    "getLabelPath",
    "result",
    "data",
    "SingleValueBinding",
    "resolvePropertyChain",
    "lang",
    "Type",
    "isString",
    "converter",
    "util",
    "Delegate",
    "getMethod",
    "String",
    "stripTags",
    "destruct",
    "removeAllBindings",
    "removeListener",
    "VirtualComboBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/VirtualComboBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A virtual form widget that allows text entry as well as selection from a\n * drop-down.\n *\n * @childControl textfield {qx.ui.form.TextField} Field for text entry.\n * @childControl button {qx.ui.form.Button} Opens the drop-down.\n */\nqx.Class.define(\"qx.ui.form.VirtualComboBox\", {\n  extend: qx.ui.form.core.AbstractVirtualBox,\n\n  implement: [qx.ui.form.IStringForm],\n\n  construct(model) {\n    super(model);\n\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    var dropdown = this.getChildControl(\"dropdown\");\n    dropdown.getChildControl(\"list\").setSelectionMode(\"single\");\n\n    this.__selection = dropdown.getSelection();\n    this.__selection.addListener(\"change\", this.__onSelectionChange, this);\n\n    this.bind(\"value\", textField, \"value\");\n    textField.bind(\"value\", this, \"value\");\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", e => {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    });\n\n    this.addListener(\"focusout\", e => {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n      this.fireNonBubblingEvent(\"blur\", qx.event.type.Focus);\n    });\n  },\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"virtual-combobox\"\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    },\n\n    /**\n     * The currently selected or entered value.\n     */\n    value: {\n      nullable: true,\n      event: \"changeValue\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /**\n     * Formatting function that will be applied to the value of a selected model\n     * item's label before it is written to the text field. Also used to find\n     * and preselect the first list entry that begins with the current content\n     * of the text field when the drop-down list is opened. Can be used e.g. to\n     * strip HTML tags from rich-formatted item labels. The function will be\n     * called with the item's label (String) as the only parameter.\n     */\n    defaultFormat: {\n      check: \"Function\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    /** @type {var} Binding id between local value and text field value. */\n    __localBindId: null,\n\n    /** @type {var} Binding id between text field value and local value. */\n    __textFieldBindId: null,\n\n    /** @type {qx.data.Array} the drop-down selection. */\n    __selection: null,\n\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\n    __ignoreChangeSelection: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection. This method only works if the widget is\n     * already created and added to the document.\n     *\n     * @return {String|null} The current text selection.\n     */\n    getTextSelection() {\n      return this.getChildControl(\"textfield\").getTextSelection();\n    },\n\n    /**\n     * Returns the current selection length. This method only works if the\n     * widget is already created and added to the document.\n     *\n     * @return {Integer|null} The current text selection length.\n     */\n    getTextSelectionLength() {\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\n    },\n\n    /**\n     * Set the selection to the given start and end (zero-based). If no end\n     * value is given the selection will extend to the end of the textfield's\n     * content. This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} Start of the selection (zero-based).\n     * @param end {Integer} End of the selection.\n     */\n    setTextSelection(start, end) {\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\n    },\n\n    /**\n     * Clears the current selection. This method only works if the widget is\n     * already created and added to the document.\n     */\n    clearTextSelection() {\n      this.getChildControl(\"textfield\").clearTextSelection();\n    },\n\n    /**\n     * Selects the whole content.\n     */\n    selectAllText() {\n      this.getChildControl(\"textfield\").selectAllText();\n    },\n\n    /**\n     * Clear any text selection, then select all text.\n     */\n    resetAllTextSelection() {\n      this.clearTextSelection();\n      this.selectAllText();\n    },\n\n    // overridden\n    tabFocus() {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n    // overridden\n    focus() {\n      super.focus();\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    // overridden\n    _beforeOpen() {\n      this.__selectFirstMatch();\n    },\n\n    // overridden\n    _handleKeyboard(event) {\n      var action = this._getAction(event);\n\n      switch (action) {\n        case \"select\":\n          this.setValue(this.getChildControl(\"textfield\").getValue());\n          break;\n\n        default:\n          super._handleKeyboard(event);\n          break;\n      }\n    },\n\n    // overridden\n    _getAction(event) {\n      var keyIdentifier = event.getKeyIdentifier();\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\n      var isModifierPressed = this._isModifierPressed(event);\n\n      if (!isOpen && !isModifierPressed && keyIdentifier === \"Enter\") {\n        return \"select\";\n      } else {\n        return super._getAction(event);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _handlePointer(event) {\n      super._handlePointer(event);\n\n      var type = event.getType();\n      if (type !== \"tap\") {\n        return;\n      }\n\n      this.close();\n    },\n\n    /**\n     * Handler to synchronize selection changes with the value property.\n     *\n     * @param event {qx.event.type.Data} The change event from the qx.data.Array.\n     */\n    __onSelectionChange(event) {\n      if (this.__ignoreChangeSelection == true) {\n        return;\n      }\n\n      var selected = this.__selection.getItem(0);\n      if (selected) {\n        selected = this.__convertValue(selected);\n        this.setValue(selected);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n    // property apply\n    _applyPlaceholder(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Selects the first list item that starts with the text field's value.\n     */\n    __selectFirstMatch() {\n      var value = this.getValue();\n      var dropdown = this.getChildControl(\"dropdown\");\n      var selection = dropdown.getSelection();\n      var selected = selection.getItem(0);\n\n      // try to preselect the matching item even if there is no current selection\n      if (selected === undefined || this.__convertValue(selected) !== value) {\n        // only reset the old selection if there is one\n        if (selected !== undefined) {\n          // reset the old selection\n          this.__ignoreChangeSelection = true;\n          selection.removeAll();\n          this.__ignoreChangeSelection = false;\n        }\n\n        // No calculation is needed when the value is empty\n        if (value == null || value == \"\") {\n          return;\n        }\n\n        var model = this.getModel();\n        var lookupTable = dropdown.getChildControl(\"list\")._getLookupTable();\n        for (var i = 0, l = lookupTable.length; i < l; i++) {\n          var modelItem = model.getItem(lookupTable[i]);\n          var itemLabel = this.__convertValue(modelItem);\n\n          if (itemLabel && itemLabel.indexOf(value) == 0) {\n            dropdown.setPreselected(modelItem);\n            break;\n          }\n        }\n      }\n    },\n\n    /**\n     * Helper method to convert the model item to a String.\n     *\n     * @param modelItem {var} The model item to convert.\n     * @return {String} The converted value.\n     */\n    __convertValue(modelItem) {\n      var labelOptions = this.getLabelOptions();\n      var formatter = this.getDefaultFormat();\n      var labelPath = this.getLabelPath();\n      var result = null;\n\n      if (labelPath != null) {\n        result = qx.data.SingleValueBinding.resolvePropertyChain(\n          modelItem,\n          labelPath\n        );\n      } else if (qx.lang.Type.isString(modelItem)) {\n        result = modelItem;\n      }\n\n      var converter = qx.util.Delegate.getMethod(labelOptions, \"converter\");\n      if (converter != null) {\n        result = converter(result);\n      }\n\n      if (result != null && formatter != null) {\n        result = formatter(qx.lang.String.stripTags(result));\n      }\n\n      return result;\n    }\n  },\n\n  destruct() {\n    var textField = this.getChildControl(\"textfield\");\n    this.removeAllBindings();\n    textField.removeAllBindings();\n\n    this.__selection.removeListener(\"change\", this.__onSelectionChange, this);\n    this.__selection = null;\n  }\n});\n"
  ],
  "mappings": "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"
}