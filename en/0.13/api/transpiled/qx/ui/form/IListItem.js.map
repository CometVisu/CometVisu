{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "events",
    "changeReadOnly",
    "members",
    "setReadOnly",
    "value",
    "assertArgumentsCount",
    "arguments",
    "resetReadOnly",
    "getReadOnly",
    "ui",
    "form",
    "IListItem"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/IListItem.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021 Zenesis Ltd (https://www.zenesis.com)\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (github.com/johnspackman)\n\n************************************************************************ */\n\n/**\n * This is a marker interface for classes which can act as a children of\n * {@link qx.ui.form.List}\n */\nqx.Interface.define(\"qx.ui.form.IListItem\", {\n    /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired when the value was modified */\n    changeReadOnly: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      READONLY PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the element's value.\n     *\n     * @param value {Boolean|null} The new value of the element.\n     * @return {Boolean|null}\n     */\n    setReadOnly(value) {\n      this.assertArgumentsCount(arguments, 1, 1);\n    },\n\n    /**\n     * Resets the element's value to its initial value.\n     */\n    resetReadOnly() {},\n\n    /**\n     * The element's user set value.\n     *\n     * @return {Boolean|null} The value.\n     */\n    getReadOnly() {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACxC;AACJ;AACA;AACA;AACA;;IAEEC,MAAM,EAAE;MACN;MACAC,cAAc,EAAE;IAClB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAXA,WAAWA,CAACC,KAAK,EAAE;QACjB,IAAI,CAACC,oBAAoB,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5C,CAAC;MAED;AACJ;AACA;MACIC,aAAa,WAAbA,aAAaA,CAAA,EAAG,CAAC,CAAC;MAElB;AACJ;AACA;AACA;AACA;MACIC,WAAW,WAAXA,WAAWA,CAAA,EAAG,CAAC;IACjB;EACF,CAAC,CAAC;EArEFd,EAAE,CAACe,EAAE,CAACC,IAAI,CAACC,SAAS,CAACd,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}