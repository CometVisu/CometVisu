{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "command",
    "_this",
    "constructor",
    "call",
    "setCommand",
    "getContentElement",
    "setAttribute",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "addListenerOnce",
    "el",
    "getDomElement",
    "focus",
    "_onTap",
    "_onKeyDown",
    "_onKeyUp",
    "e",
    "stopPropagation",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "members",
    "_forwardStates",
    "focused",
    "hovered",
    "pressed",
    "disabled",
    "press",
    "hasState",
    "addState",
    "release",
    "removeState",
    "reset",
    "isEnabled",
    "getTarget",
    "isLeftPressed",
    "capture",
    "releaseCapture",
    "hasPressed",
    "hasAbandoned",
    "execute",
    "getKeyIdentifier",
    "Button"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Button.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A Button widget which supports various states and allows it to be used\r\n * via the mouse, touch, pen and the keyboard.\r\n *\r\n * If the user presses the button by clicking on it, or the <code>Enter</code> or\r\n * <code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.\r\n *\r\n * If the {@link qx.ui.core.MExecutable#command} property is set, the\r\n * command is executed as well.\r\n *\r\n * *Example*\r\n *\r\n * Here is a little example of how to use the widget.\r\n *\r\n * <pre class='javascript'>\r\n *   var button = new qx.ui.form.Button(\"Hello World\");\r\n *\r\n *   button.addListener(\"execute\", function(e) {\r\n *     alert(\"Button was clicked\");\r\n *   }, this);\r\n *\r\n *   this.getRoot().add(button);\r\n * </pre>\r\n *\r\n * This example creates a button with the label \"Hello World\" and attaches an\r\n * event listener to the {@link #execute} event.\r\n *\r\n * *External Documentation*\r\n *\r\n * <a href='http://qooxdoo.org/docs/#desktop/widget/button.md' target='_blank'>\r\n * Documentation of this widget in the qooxdoo manual.</a>\r\n */\r\nqx.Class.define(\"qx.ui.form.Button\", {\r\n  extend: qx.ui.basic.Atom,\r\n  include: [qx.ui.core.MExecutable],\r\n  implement: [qx.ui.form.IExecutable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param label {String} label of the atom\r\n   * @param icon {String?null} Icon URL of the atom\r\n   * @param command {qx.ui.command.Command?null} Command instance to connect with\r\n   */\r\n  construct(label, icon, command) {\r\n    super(label, icon);\r\n\r\n    if (command != null) {\r\n      this.setCommand(command);\r\n    }\r\n\r\n    // ARIA attrs\r\n    this.getContentElement().setAttribute(\"role\", \"button\");\r\n\r\n    // Add listeners\r\n    this.addListener(\"pointerover\", this._onPointerOver);\r\n    this.addListener(\"pointerout\", this._onPointerOut);\r\n    this.addListener(\"pointerdown\", this._onPointerDown);\r\n    this.addListener(\"pointerup\", this._onPointerUp);\r\n\r\n    // it seems that touching a button (at least on ios and android)\r\n    // does not immediately focus it before triggering the tap event\r\n    // this causes problem with change events for any input field that\r\n    // previously held focus, as their change event will arrive AFTER\r\n    // the execute event on the button ... \r\n    // we have to call focus on the dom element itself, to make\r\n    // sure we are in time. Otherwhise the virtual dom in qooxdoo will\r\n    // delay the effect and the fix will only work when tapping 'slowly' ... \r\n    this.addListenerOnce('appear',() => {\r\n      let el = this.getContentElement().getDomElement();\r\n      this.addListener('touchstart', () => { el.focus();  });\r\n    });\r\n\r\n    this.addListener(\"tap\", this._onTap);\r\n\r\n    this.addListener(\"keydown\", this._onKeyDown);\r\n    this.addListener(\"keyup\", this._onKeyUp);\r\n    // Stop events\r\n    this.addListener(\"dblclick\", function (e) {\r\n      e.stopPropagation();\r\n    });\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"button\"\r\n    },\r\n\r\n    // overridden\r\n    focusable: {\r\n      refine: true,\r\n      init: true\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    // overridden\r\n    /**\r\n     * @lint ignoreReferenceField(_forwardStates)\r\n     */\r\n    _forwardStates: {\r\n      focused: true,\r\n      hovered: true,\r\n      pressed: true,\r\n      disabled: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      USER API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Manually press the button\r\n     */\r\n    press() {\r\n      if (this.hasState(\"abandoned\")) {\r\n        return;\r\n      }\r\n\r\n      this.addState(\"pressed\");\r\n    },\r\n\r\n    /**\r\n     * Manually release the button\r\n     */\r\n    release() {\r\n      if (this.hasState(\"pressed\")) {\r\n        this.removeState(\"pressed\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Completely reset the button (remove all states)\r\n     */\r\n    reset() {\r\n      this.removeState(\"pressed\");\r\n      this.removeState(\"abandoned\");\r\n      this.removeState(\"hovered\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Listener method for \"pointerover\" event\r\n     * <ul>\r\n     * <li>Adds state \"hovered\"</li>\r\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\r\n     * </ul>\r\n     *\r\n     * @param e {qx.event.type.Pointer} Mouse event\r\n     */\r\n    _onPointerOver(e) {\r\n      if (!this.isEnabled() || e.getTarget() !== this) {\r\n        return;\r\n      }\r\n\r\n      if (this.hasState(\"abandoned\")) {\r\n        this.removeState(\"abandoned\");\r\n        this.addState(\"pressed\");\r\n      }\r\n\r\n      this.addState(\"hovered\");\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"pointerout\" event\r\n     * <ul>\r\n     * <li>Removes \"hovered\" state</li>\r\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\r\n     * </ul>\r\n     *\r\n     * @param e {qx.event.type.Pointer} Mouse event\r\n     */\r\n    _onPointerOut(e) {\r\n      if (!this.isEnabled() || e.getTarget() !== this) {\r\n        return;\r\n      }\r\n\r\n      this.removeState(\"hovered\");\r\n\r\n      if (this.hasState(\"pressed\")) {\r\n        this.removeState(\"pressed\");\r\n        this.addState(\"abandoned\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"pointerdown\" event\r\n     * <ul>\r\n     * <li>Removes \"abandoned\" state</li>\r\n     * <li>Adds \"pressed\" state</li>\r\n     * </ul>\r\n     *\r\n     * @param e {qx.event.type.Pointer} Mouse event\r\n     */\r\n    _onPointerDown(e) {\r\n      if (!e.isLeftPressed()) {\r\n        return;\r\n      }\r\n\r\n      e.stopPropagation();\r\n\r\n      // Activate capturing if the button get a pointerout while\r\n      // the button is pressed.\r\n      this.capture();\r\n\r\n      this.removeState(\"abandoned\");\r\n      this.addState(\"pressed\");\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"pointerup\" event\r\n     * <ul>\r\n     * <li>Removes \"pressed\" state (if set)</li>\r\n     * <li>Removes \"abandoned\" state (if set)</li>\r\n     * <li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>\r\n     *</ul>\r\n     *\r\n     * @param e {qx.event.type.Pointer} Mouse event\r\n     */\r\n    _onPointerUp(e) {\r\n      this.releaseCapture();\r\n\r\n      // We must remove the states before executing the command\r\n      // because in cases were the window lost the focus while\r\n      // executing we get the capture phase back (mouseout).\r\n      var hasPressed = this.hasState(\"pressed\");\r\n      var hasAbandoned = this.hasState(\"abandoned\");\r\n\r\n      if (hasPressed) {\r\n        this.removeState(\"pressed\");\r\n      }\r\n\r\n      if (hasAbandoned) {\r\n        this.removeState(\"abandoned\");\r\n      }\r\n\r\n      e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"tap\" event which stops the propagation.\r\n     *\r\n     * @param e {qx.event.type.Pointer} Pointer event\r\n     */\r\n    _onTap(e) {\r\n      // \"execute\" is fired here so that the button can be dragged\r\n      // without executing it (e.g. in a TabBar with overflow)\r\n      this.execute();\r\n      e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"keydown\" event.<br/>\r\n     * Removes \"abandoned\" and adds \"pressed\" state\r\n     * for the keys \"Enter\" or \"Space\"\r\n     *\r\n     * @param e {Event} Key event\r\n     */\r\n    _onKeyDown(e) {\r\n      switch (e.getKeyIdentifier()) {\r\n        case \"Enter\":\r\n        case \"Space\":\r\n          this.removeState(\"abandoned\");\r\n          this.addState(\"pressed\");\r\n          e.stopPropagation();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listener method for \"keyup\" event.<br/>\r\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\r\n     * for the keys \"Enter\" or \"Space\"\r\n     *\r\n     * @param e {Event} Key event\r\n     */\r\n    _onKeyUp(e) {\r\n      switch (e.getKeyIdentifier()) {\r\n        case \"Enter\":\r\n        case \"Space\":\r\n          if (this.hasState(\"pressed\")) {\r\n            this.removeState(\"abandoned\");\r\n            this.removeState(\"pressed\");\r\n            this.execute();\r\n            e.stopPropagation();\r\n          }\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}