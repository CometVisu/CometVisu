{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "command",
    "setCommand",
    "getContentElement",
    "setAttribute",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onPointerDown",
    "_onPointerUp",
    "_onTap",
    "_onKeyDown",
    "_onKeyUp",
    "e",
    "stopPropagation",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "members",
    "_forwardStates",
    "focused",
    "hovered",
    "pressed",
    "disabled",
    "press",
    "hasState",
    "addState",
    "release",
    "removeState",
    "reset",
    "isEnabled",
    "getTarget",
    "isLeftPressed",
    "capture",
    "releaseCapture",
    "hasPressed",
    "hasAbandoned",
    "execute",
    "getKeyIdentifier",
    "Button"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Button.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A Button widget which supports various states and allows it to be used\n * via the mouse, touch, pen and the keyboard.\n *\n * If the user presses the button by clicking on it, or the <code>Enter</code> or\n * <code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.\n *\n * If the {@link qx.ui.core.MExecutable#command} property is set, the\n * command is executed as well.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.form.Button(\"Hello World\");\n *\n *   button.addListener(\"execute\", function(e) {\n *     alert(\"Button was clicked\");\n *   }, this);\n *\n *   this.getRoot().add(button);\n * </pre>\n *\n * This example creates a button with the label \"Hello World\" and attaches an\n * event listener to the {@link #execute} event.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/button.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.form.Button\", {\n  extend: qx.ui.basic.Atom,\n  include: [qx.ui.core.MExecutable],\n  implement: [qx.ui.form.IExecutable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} label of the atom\n   * @param icon {String?null} Icon URL of the atom\n   * @param command {qx.ui.command.Command?null} Command instance to connect with\n   */\n  construct(label, icon, command) {\n    super(label, icon);\n\n    if (command != null) {\n      this.setCommand(command);\n    }\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"button\");\n\n    // Add listeners\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n    this.addListener(\"pointerdown\", this._onPointerDown);\n    this.addListener(\"pointerup\", this._onPointerUp);\n    this.addListener(\"tap\", this._onTap);\n\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // Stop events\n    this.addListener(\"dblclick\", function (e) {\n      e.stopPropagation();\n    });\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"button\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      hovered: true,\n      pressed: true,\n      disabled: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Manually press the button\n     */\n    press() {\n      if (this.hasState(\"abandoned\")) {\n        return;\n      }\n\n      this.addState(\"pressed\");\n    },\n\n    /**\n     * Manually release the button\n     */\n    release() {\n      if (this.hasState(\"pressed\")) {\n        this.removeState(\"pressed\");\n      }\n    },\n\n    /**\n     * Completely reset the button (remove all states)\n     */\n    reset() {\n      this.removeState(\"pressed\");\n      this.removeState(\"abandoned\");\n      this.removeState(\"hovered\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerOver(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n\n      this.addState(\"hovered\");\n    },\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerOut(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\")) {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n      }\n    },\n\n    /**\n     * Listener method for \"pointerdown\" event\n     * <ul>\n     * <li>Removes \"abandoned\" state</li>\n     * <li>Adds \"pressed\" state</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerDown(e) {\n      if (!e.isLeftPressed()) {\n        return;\n      }\n\n      e.stopPropagation();\n\n      // Activate capturing if the button get a pointerout while\n      // the button is pressed.\n      this.capture();\n\n      this.removeState(\"abandoned\");\n      this.addState(\"pressed\");\n    },\n\n    /**\n     * Listener method for \"pointerup\" event\n     * <ul>\n     * <li>Removes \"pressed\" state (if set)</li>\n     * <li>Removes \"abandoned\" state (if set)</li>\n     * <li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>\n     *</ul>\n     *\n     * @param e {qx.event.type.Pointer} Mouse event\n     */\n    _onPointerUp(e) {\n      this.releaseCapture();\n\n      // We must remove the states before executing the command\n      // because in cases were the window lost the focus while\n      // executing we get the capture phase back (mouseout).\n      var hasPressed = this.hasState(\"pressed\");\n      var hasAbandoned = this.hasState(\"abandoned\");\n\n      if (hasPressed) {\n        this.removeState(\"pressed\");\n      }\n\n      if (hasAbandoned) {\n        this.removeState(\"abandoned\");\n      }\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"tap\" event which stops the propagation.\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onTap(e) {\n      // \"execute\" is fired here so that the button can be dragged\n      // without executing it (e.g. in a TabBar with overflow)\n      this.execute();\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener method for \"keydown\" event.<br/>\n     * Removes \"abandoned\" and adds \"pressed\" state\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyDown(e) {\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n          e.stopPropagation();\n      }\n    },\n\n    /**\n     * Listener method for \"keyup\" event.<br/>\n     * Removes \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\n     * for the keys \"Enter\" or \"Space\"\n     *\n     * @param e {Event} Key event\n     */\n    _onKeyUp(e) {\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          if (this.hasState(\"pressed\")) {\n            this.removeState(\"abandoned\");\n            this.removeState(\"pressed\");\n            this.execute();\n            e.stopPropagation();\n          }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}