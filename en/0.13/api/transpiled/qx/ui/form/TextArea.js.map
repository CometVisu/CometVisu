{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractField",
    "construct",
    "value",
    "constructor",
    "call",
    "initWrap",
    "addListener",
    "_onRoll",
    "_onResize",
    "properties",
    "wrap",
    "check",
    "init",
    "apply",
    "appearance",
    "refine",
    "singleStep",
    "minimalLineHeight",
    "autoSize",
    "members",
    "__areaClone",
    "__areaHeight",
    "__originalAreaHeight",
    "setValue",
    "TextArea",
    "superclass",
    "prototype",
    "__autoSize",
    "e",
    "getPointerType",
    "contentElement",
    "getContentElement",
    "scrollY",
    "getScrollY",
    "scrollToY",
    "getDelta",
    "y",
    "getSingleStep",
    "newScrollY",
    "stop",
    "dispose",
    "__P_369_3",
    "_this",
    "isAutoSize",
    "clone",
    "__getAreaClone",
    "getBounds",
    "_getAreaHeight",
    "scrolledHeight",
    "Math",
    "round",
    "_getScrolledAreaHeight",
    "getMaxHeight",
    "insets",
    "getInsets",
    "innerMaxHeight",
    "top",
    "bottom",
    "setStyle",
    "desiredHeight",
    "max",
    "_setAreaHeight",
    "addListenerOnce",
    "getInnerSize",
    "height",
    "core",
    "queue",
    "Layout",
    "add",
    "Manager",
    "flush",
    "__forceRewrap",
    "cloneDom",
    "getDomElement",
    "parentNode",
    "html",
    "Element",
    "Environment",
    "get",
    "setWrap",
    "getWrap",
    "style",
    "overflow",
    "overflowX",
    "getValue",
    "__scrollCloneToBottom",
    "scrollTop",
    "__P_369_4",
    "__createAreaClone",
    "__P_369_7",
    "orig",
    "cloneHtml",
    "bom",
    "Input",
    "useNode",
    "setStyles",
    "position",
    "left",
    "removeAttribute",
    "setAttribute",
    "insertBefore",
    "__P_369_6",
    "_createInputElement",
    "overflowY",
    "_applyWrap",
    "old",
    "_placeholder",
    "whiteSpace",
    "_applyMinimalLineHeight",
    "_applyAutoSize",
    "removeListener",
    "_applyDimension",
    "__P_369_5",
    "content",
    "element",
    "width",
    "getStyle",
    "parseInt",
    "Dimension",
    "getWidth",
    "__warnAutoSizeAndHeight",
    "__P_369_8",
    "getHeight",
    "warn",
    "_getContentHint",
    "hint",
    "getMinimalLineHeight",
    "_getTextSize",
    "destruct",
    "setAutoSize"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/TextArea.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n     * Tristan Koch (tristankoch)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The TextField is a multi-line text input field.\r\n */\r\nqx.Class.define(\"qx.ui.form.TextArea\", {\r\n  extend: qx.ui.form.AbstractField,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param value {String?\"\"} The text area's initial value\r\n   */\r\n  construct(value) {\r\n    super(value);\r\n    this.initWrap();\r\n\r\n    this.addListener(\"roll\", this._onRoll, this);\r\n    this.addListener(\"resize\", this._onResize, this);\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** Controls whether text wrap is activated or not. */\r\n    wrap: {\r\n      check: \"Boolean\",\r\n      init: true,\r\n      apply: \"_applyWrap\"\r\n    },\r\n\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"textarea\"\r\n    },\r\n\r\n    /** Factor for scrolling the <code>TextArea</code> with the mouse wheel. */\r\n    singleStep: {\r\n      check: \"Integer\",\r\n      init: 20\r\n    },\r\n\r\n    /** Minimal line height. On default this is set to four lines. */\r\n    minimalLineHeight: {\r\n      check: \"Integer\",\r\n      apply: \"_applyMinimalLineHeight\",\r\n      init: 4\r\n    },\r\n\r\n    /**\r\n     * Whether the <code>TextArea</code> should automatically adjust to\r\n     * the height of the content.\r\n     *\r\n     * To set the initial height, modify {@link #minHeight}. If you wish\r\n     * to set a minHeight below four lines of text, also set\r\n     * {@link #minimalLineHeight}. In order to limit growing to a certain\r\n     * height, set {@link #maxHeight} respectively. Please note that\r\n     * autoSize is ignored when the {@link #height} property is in use.\r\n     */\r\n    autoSize: {\r\n      check: \"Boolean\",\r\n      apply: \"_applyAutoSize\",\r\n      init: false\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __areaClone: null,\r\n    __areaHeight: null,\r\n    __originalAreaHeight: null,\r\n\r\n    // overridden\r\n    setValue(value) {\r\n      value = super.setValue(value);\r\n      this.__autoSize();\r\n\r\n      return value;\r\n    },\r\n\r\n    /**\r\n     * Handles the roll for scrolling the <code>TextArea</code>.\r\n     *\r\n     * @param e {qx.event.type.Roll} roll event.\r\n     */\r\n    _onRoll(e) {\r\n      // only wheel\r\n      if (e.getPointerType() != \"wheel\") {\r\n        return;\r\n      }\r\n      var contentElement = this.getContentElement();\r\n      var scrollY = contentElement.getScrollY();\r\n\r\n      contentElement.scrollToY(\r\n        scrollY + (e.getDelta().y / 30) * this.getSingleStep()\r\n      );\r\n\r\n      var newScrollY = contentElement.getScrollY();\r\n\r\n      if (newScrollY != scrollY) {\r\n        e.stop();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * When the element resizes we throw away the clone and trigger autosize again, otherwise the clone would have\r\n     * another width and the autosize calculation would be faulty.\r\n     *\r\n     * @param e {qx.event.type.Data} resize event.\r\n     */\r\n    _onResize(e) {\r\n      if (this.__areaClone) {\r\n        this.__areaClone.dispose();\r\n        this.__areaClone = null;\r\n        this.__autoSize();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      AUTO SIZE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Adjust height of <code>TextArea</code> so that content fits without scroll bar.\r\n     *\r\n     */\r\n    __autoSize() {\r\n      if (this.isAutoSize()) {\r\n        var clone = this.__getAreaClone();\r\n\r\n        if (clone && this.getBounds()) {\r\n          // Remember original area height\r\n          this.__originalAreaHeight =\r\n            this.__originalAreaHeight || this._getAreaHeight();\r\n\r\n          var scrolledHeight = Math.round(this._getScrolledAreaHeight());\r\n\r\n          // Show scroll-bar when above maxHeight, if defined\r\n          if (this.getMaxHeight()) {\r\n            var insets = this.getInsets();\r\n            var innerMaxHeight =\r\n              -insets.top + this.getMaxHeight() - insets.bottom;\r\n            if (scrolledHeight > innerMaxHeight) {\r\n              this.getContentElement().setStyle(\"overflowY\", \"auto\");\r\n            } else {\r\n              this.getContentElement().setStyle(\"overflowY\", \"hidden\");\r\n            }\r\n          }\r\n\r\n          // Never shrink below original area height\r\n          var desiredHeight = Math.max(\r\n            scrolledHeight,\r\n            this.__originalAreaHeight\r\n          );\r\n\r\n          // Set new height\r\n          this._setAreaHeight(desiredHeight);\r\n\r\n          // On init, the clone is not yet present. Try again on appear.\r\n        } else {\r\n          this.getContentElement().addListenerOnce(\"appear\", () => {\r\n            this.__autoSize();\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get actual height of <code>TextArea</code>\r\n     *\r\n     * @return {Integer} Height of <code>TextArea</code>\r\n     */\r\n    _getAreaHeight() {\r\n      return this.getInnerSize().height;\r\n    },\r\n\r\n    /**\r\n     * Set actual height of <code>TextArea</code>\r\n     *\r\n     * @param height {Integer} Desired height of <code>TextArea</code>\r\n     */\r\n    _setAreaHeight(height) {\r\n      if (this._getAreaHeight() !== height) {\r\n        this.__areaHeight = height;\r\n\r\n        qx.ui.core.queue.Layout.add(this);\r\n\r\n        // Apply height directly. This works-around a visual glitch in WebKit\r\n        // browsers where a line-break causes the text to be moved upwards\r\n        // for one line. Since this change appears instantly whereas the queue\r\n        // is computed later, a flicker is visible.\r\n        qx.ui.core.queue.Manager.flush();\r\n\r\n        this.__forceRewrap();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get scrolled area height. Equals the total height of the <code>TextArea</code>,\r\n     * as if no scroll-bar was visible.\r\n     *\r\n     * @return {Integer} Height of scrolled area\r\n     */\r\n    _getScrolledAreaHeight() {\r\n      var clone = this.__getAreaClone();\r\n      var cloneDom = clone.getDomElement();\r\n\r\n      if (cloneDom) {\r\n        // Clone created but not yet in DOM. Try again.\r\n        if (!cloneDom.parentNode) {\r\n          qx.html.Element.flush();\r\n          return this._getScrolledAreaHeight();\r\n        }\r\n\r\n        // In WebKit and IE8, \"wrap\" must have been \"soft\" on DOM level before setting\r\n        // \"off\" can disable wrapping. To fix, make sure wrap is toggled.\r\n        // Otherwise, the height of an auto-size text area with wrapping\r\n        // disabled initially is incorrectly computed as if wrapping was enabled.\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") === \"webkit\" ||\r\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\"\r\n        ) {\r\n          clone.setWrap(!this.getWrap(), true);\r\n        }\r\n\r\n        clone.setWrap(this.getWrap(), true);\r\n\r\n        // Webkit needs overflow \"hidden\" in order to correctly compute height\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") === \"webkit\" ||\r\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\"\r\n        ) {\r\n          cloneDom.style.overflow = \"hidden\";\r\n        }\r\n\r\n        // IE >= 8 needs overflow \"visible\" in order to correctly compute height\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n          qx.core.Environment.get(\"browser.documentmode\") >= 8\r\n        ) {\r\n          cloneDom.style.overflow = \"visible\";\r\n          cloneDom.style.overflowX = \"hidden\";\r\n        }\r\n\r\n        // Update value\r\n        clone.setValue(this.getValue() || \"\");\r\n\r\n        // Force IE > 8 to update size measurements\r\n        if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\r\n          cloneDom.style.height = \"auto\";\r\n          qx.html.Element.flush();\r\n          cloneDom.style.height = \"0\";\r\n        }\r\n\r\n        // Recompute\r\n        this.__scrollCloneToBottom(clone);\r\n\r\n        if (\r\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\r\n          qx.core.Environment.get(\"browser.documentmode\") == 8\r\n        ) {\r\n          // Flush required for scrollTop to return correct value\r\n          // when initial value should be taken into consideration\r\n          if (!cloneDom.scrollTop) {\r\n            qx.html.Element.flush();\r\n          }\r\n        }\r\n\r\n        return cloneDom.scrollTop;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the area clone.\r\n     *\r\n     * @return {Element|null} DOM Element or <code>null</code> if there is no\r\n     * original element\r\n     */\r\n    __getAreaClone() {\r\n      this.__areaClone = this.__areaClone || this.__createAreaClone();\r\n      return this.__areaClone;\r\n    },\r\n\r\n    /**\r\n     * Creates and prepares the area clone.\r\n     *\r\n     * @return {Element} Element\r\n     */\r\n    __createAreaClone() {\r\n      var orig, clone, cloneDom, cloneHtml;\r\n\r\n      orig = this.getContentElement();\r\n\r\n      // An existing DOM element is required\r\n      if (!orig.getDomElement()) {\r\n        return null;\r\n      }\r\n\r\n      // Create DOM clone\r\n      cloneDom = qx.bom.Element.clone(orig.getDomElement());\r\n\r\n      // Convert to qx.html Element\r\n      cloneHtml = new qx.html.Input(\"textarea\");\r\n      cloneHtml.useNode(cloneDom);\r\n      clone = cloneHtml;\r\n\r\n      // Push out of view\r\n      // Zero height (i.e. scrolled area equals height)\r\n      clone.setStyles(\r\n        {\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: \"-9999px\",\r\n          height: 0,\r\n          overflow: \"hidden\"\r\n        },\r\n\r\n        true\r\n      );\r\n\r\n      // Fix attributes\r\n      clone.removeAttribute(\"id\");\r\n      clone.removeAttribute(\"name\");\r\n      clone.setAttribute(\"tabIndex\", \"-1\");\r\n\r\n      // Copy value\r\n      clone.setValue(orig.getValue() || \"\");\r\n\r\n      // Attach to DOM\r\n      clone.insertBefore(orig);\r\n\r\n      // Make sure scrollTop is actual height\r\n      this.__scrollCloneToBottom(clone);\r\n\r\n      return clone;\r\n    },\r\n\r\n    /**\r\n     * Scroll <code>TextArea</code> to bottom. That way, scrollTop reflects the height\r\n     * of the <code>TextArea</code>.\r\n     *\r\n     * @param clone {Element} The <code>TextArea</code> to scroll\r\n     */\r\n    __scrollCloneToBottom(clone) {\r\n      clone = clone.getDomElement();\r\n      if (clone) {\r\n        clone.scrollTop = 10000;\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FIELD API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createInputElement() {\r\n      return new qx.html.Input(\"textarea\", {\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\"\r\n      });\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyWrap(value, old) {\r\n      this.getContentElement().setWrap(value);\r\n      if (this._placeholder) {\r\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\r\n        this._placeholder.setStyle(\"whiteSpace\", whiteSpace);\r\n      }\r\n      this.__autoSize();\r\n    },\r\n\r\n    // property apply\r\n    _applyMinimalLineHeight() {\r\n      qx.ui.core.queue.Layout.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyAutoSize(value, old) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.__warnAutoSizeAndHeight();\r\n      }\r\n\r\n      if (value) {\r\n        this.__autoSize();\r\n        this.addListener(\"input\", this.__autoSize, this);\r\n\r\n        // This is done asynchronously on purpose. The style given would\r\n        // otherwise be overridden by the DOM changes queued in the\r\n        // property apply for wrap. See [BUG #4493] for more details.\r\n        if (!this.getBounds()) {\r\n          this.addListenerOnce(\"appear\", function () {\r\n            this.getContentElement().setStyle(\"overflowY\", \"hidden\");\r\n          });\r\n        } else {\r\n          this.getContentElement().setStyle(\"overflowY\", \"hidden\");\r\n        }\r\n      } else {\r\n        this.removeListener(\"input\", this.__autoSize);\r\n        this.getContentElement().setStyle(\"overflowY\", \"auto\");\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyDimension(value) {\r\n      super._applyDimension();\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.__warnAutoSizeAndHeight();\r\n      }\r\n\r\n      if (value === this.getMaxHeight()) {\r\n        this.__autoSize();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Force rewrapping of text.\r\n     *\r\n     * The distribution of characters depends on the space available.\r\n     * Unfortunately, browsers do not reliably (or not at all) rewrap text when\r\n     * the size of the text area changes.\r\n     *\r\n     * This method is called on change of the area's size.\r\n     */\r\n    __forceRewrap() {\r\n      var content = this.getContentElement();\r\n      var element = content.getDomElement();\r\n\r\n      // Temporarily increase width\r\n      var width = content.getStyle(\"width\");\r\n      content.setStyle(\"width\", parseInt(width, 10) + 1000 + \"px\", true);\r\n\r\n      // Force browser to render\r\n      if (element) {\r\n        qx.bom.element.Dimension.getWidth(element);\r\n      }\r\n\r\n      // Restore width\r\n      content.setStyle(\"width\", width, true);\r\n    },\r\n\r\n    /**\r\n     * Warn when both autoSize and height property are set.\r\n     *\r\n     */\r\n    __warnAutoSizeAndHeight() {\r\n      if (this.isAutoSize() && this.getHeight()) {\r\n        this.warn(\r\n          \"autoSize is ignored when the height property is set. \" +\r\n            \"If you want to set an initial height, use the minHeight \" +\r\n            \"property instead.\"\r\n        );\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LAYOUT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _getContentHint() {\r\n      var hint = super._getContentHint();\r\n\r\n      // lines of text\r\n      hint.height = hint.height * this.getMinimalLineHeight();\r\n\r\n      // 20 character wide\r\n      hint.width = this._getTextSize().width * 20;\r\n\r\n      if (this.isAutoSize()) {\r\n        hint.height = this.__areaHeight || hint.height;\r\n      }\r\n\r\n      return hint;\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    this.setAutoSize(false);\r\n    if (this.__areaClone) {\r\n      this.__areaClone.dispose();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}