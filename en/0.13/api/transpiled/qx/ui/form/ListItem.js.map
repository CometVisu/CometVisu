{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "implement",
    "form",
    "IModel",
    "IListItem",
    "include",
    "MModelProperty",
    "construct",
    "label",
    "icon",
    "model",
    "constructor",
    "call",
    "setModel",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "events",
    "action",
    "properties",
    "appearance",
    "refine",
    "init",
    "readOnly",
    "check",
    "event",
    "apply",
    "members",
    "_forwardStates",
    "focused",
    "hovered",
    "selected",
    "dragover",
    "_applyReadOnly",
    "value",
    "addState",
    "removeState",
    "getReadOnly",
    "destruct",
    "removeListener",
    "ListItem"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ListItem.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A item for a list. Could be added to all List like widgets but also\n * to the {@link qx.ui.form.SelectBox} and {@link qx.ui.form.ComboBox}.\n */\nqx.Class.define(\"qx.ui.form.ListItem\", {\n  extend: qx.ui.basic.Atom,\n  implement: [qx.ui.form.IModel, qx.ui.form.IListItem],\n  include: [qx.ui.form.MModelProperty],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   * @param model {String?null} The items value\n   */\n  construct(label, icon, model) {\n    super(label, icon);\n\n    if (model != null) {\n      this.setModel(model);\n    }\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** (Fired by {@link qx.ui.form.List}) */\n    action: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    appearance: {\n      refine: true,\n      init: \"listitem\"\n    },\n\n    /**\n     * Whether the field is read only\n     */\n    readOnly: {\n      check: \"Boolean\",\n      event: \"changeReadOnly\",\n      apply: \"_applyReadOnly\",\n      init: false\n    }\n  },\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      hovered: true,\n      selected: true,\n      dragover: true\n    },\n\n    _applyReadOnly(value) {\n      if (value) {\n        this.addState(\"readonly\");\n      } else {\n        this.removeState(\"readonly\");\n      }\n    },\n\n    /**\n     * Event handler for the pointer over event.\n     */\n    _onPointerOver() {\n      if (!this.getReadOnly()) {\n        this.addState(\"hovered\");\n      }\n    },\n\n    /**\n     * Event handler for the pointer out event.\n     */\n    _onPointerOut() {\n      this.removeState(\"hovered\");\n    }\n  },\n\n  destruct() {\n    this.removeListener(\"pointerover\", this._onPointerOver, this);\n    this.removeListener(\"pointerout\", this._onPointerOut, this);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qBAAqB,EAAE;IACrCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,IAAI;IACxBC,SAAS,EAAE,CAACV,EAAE,CAACO,EAAE,CAACI,IAAI,CAACC,MAAM,EAAEZ,EAAE,CAACO,EAAE,CAACI,IAAI,CAACE,SAAS,CAAC;IACpDC,OAAO,EAAE,CAACd,EAAE,CAACO,EAAE,CAACI,IAAI,CAACI,cAAc,CAAC;IAEpC;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;MAC5BnB,EAAA,CAAAO,EAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAW,WAAA,CAAAC,IAAA,OAAMJ,KAAK,EAAEC,IAAI;MAEjB,IAAIC,KAAK,IAAI,IAAI,EAAE;QACjB,IAAI,CAACG,QAAQ,CAACH,KAAK,CAAC;MACtB;MAEA,IAAI,CAACI,WAAW,CAAC,aAAa,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC;MAC1D,IAAI,CAACD,WAAW,CAAC,YAAY,EAAE,IAAI,CAACE,aAAa,EAAE,IAAI,CAAC;IAC1D,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,MAAM,EAAE;MACN;MACAC,MAAM,EAAE;IACV,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACVC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;AACJ;AACA;MACIC,QAAQ,EAAE;QACRC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,gBAAgB;QACvBJ,IAAI,EAAE;MACR;IACF,CAAC;IAED;IACAK,OAAO,EAAE;MACP;MACA;AACJ;AACA;MACIC,cAAc,EAAE;QACdC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;MACZ,CAAC;MAEDC,cAAc,WAAAA,eAACC,KAAK,EAAE;QACpB,IAAIA,KAAK,EAAE;UACT,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC;QAC3B,CAAC,MAAM;UACL,IAAI,CAACC,WAAW,CAAC,UAAU,CAAC;QAC9B;MACF,CAAC;MAED;AACJ;AACA;MACIrB,cAAc,WAAAA,eAAA,EAAG;QACf,IAAI,CAAC,IAAI,CAACsB,WAAW,CAAC,CAAC,EAAE;UACvB,IAAI,CAACF,QAAQ,CAAC,SAAS,CAAC;QAC1B;MACF,CAAC;MAED;AACJ;AACA;MACInB,aAAa,WAAAA,cAAA,EAAG;QACd,IAAI,CAACoB,WAAW,CAAC,SAAS,CAAC;MAC7B;IACF,CAAC;IAEDE,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACC,cAAc,CAAC,aAAa,EAAE,IAAI,CAACxB,cAAc,EAAE,IAAI,CAAC;MAC7D,IAAI,CAACwB,cAAc,CAAC,YAAY,EAAE,IAAI,CAACvB,aAAa,EAAE,IAAI,CAAC;IAC7D;EACF,CAAC,CAAC;EA9HFzB,EAAE,CAACO,EAAE,CAACI,IAAI,CAACsC,QAAQ,CAAC9C,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}