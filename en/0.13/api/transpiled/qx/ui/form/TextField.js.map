{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractField",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowY",
    "allowShrinkY",
    "members",
    "_renderContentElement",
    "innerHeight",
    "element",
    "core",
    "Environment",
    "get",
    "parseInt",
    "setStyles",
    "_createContentElement",
    "el",
    "TextField",
    "superclass",
    "prototype",
    "call",
    "deviceType",
    "addListener",
    "_onKeyPress",
    "evt",
    "getKeyIdentifier",
    "isFocusable",
    "blur",
    "setFocusable",
    "destruct",
    "getContentElement",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/TextField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The TextField is a single-line text input field.\n */\nqx.Class.define(\"qx.ui.form.TextField\", {\n  extend: qx.ui.form.AbstractField,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"textfield\"\n    },\n\n    // overridden\n    allowGrowY: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowShrinkY: {\n      refine: true,\n      init: false\n    }\n  },\n\n  members: {\n    // overridden\n    _renderContentElement(innerHeight, element) {\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        (parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 9 ||\n          qx.core.Environment.get(\"browser.documentmode\") < 9)\n      ) {\n        element.setStyles({\n          \"line-height\": innerHeight + \"px\"\n        });\n      }\n    },\n\n    // overridden\n    _createContentElement() {\n      var el = super._createContentElement();\n      var deviceType = qx.core.Environment.get(\"device.type\");\n      if (deviceType == \"tablet\" || deviceType == \"mobile\") {\n        el.addListener(\"keypress\", this._onKeyPress, this);\n      }\n\n      return el;\n    },\n\n    /**\n     * Close the virtual keyboard if the Enter key is pressed.\n     * @param evt {qx.event.type.KeySequence} the keypress event.\n     */\n    _onKeyPress(evt) {\n      // On return\n      if (evt.getKeyIdentifier() == \"Enter\") {\n        if (this.isFocusable()) {\n          this.blur();\n        } else {\n          // When the text field is not focusable, blur() will raise an exception on\n          // touch devices and the virtual keyboard is not closed. To work around this\n          // issue, we're enabling the focus just for the blur() call.\n          this.setFocusable(true);\n          this.blur();\n          this.setFocusable(false);\n        }\n      }\n    }\n  },\n\n  destruct() {\n    this.getContentElement().removeListener(\"keypress\", this._onKeyPress, this);\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACtCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,aAAa;IAEhC;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAC,UAAU,EAAE;QACVF,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAE,YAAY,EAAE;QACZH,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR;IACF,CAAC;IAEDG,OAAO,EAAE;MACP;MACAC,qBAAqB,WAAAA,sBAACC,WAAW,EAAEC,OAAO,EAAE;QAC1C,IACEnB,EAAE,CAACoB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC,IAAI,QAAQ,KACjDC,QAAQ,CAACvB,EAAE,CAACoB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAC1DtB,EAAE,CAACoB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,EACtD;UACAH,OAAO,CAACK,SAAS,CAAC;YAChB,aAAa,EAAEN,WAAW,GAAG;UAC/B,CAAC,CAAC;QACJ;MACF,CAAC;MAED;MACAO,qBAAqB,WAAAA,sBAAA,EAAG;QACtB,IAAIC,EAAE,GAAA1B,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAmB,SAAA,CAAAC,UAAA,CAAAC,SAAA,CAAAJ,qBAAA,CAAAK,IAAA,MAAgC;QACtC,IAAIC,UAAU,GAAG/B,EAAE,CAACoB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC;QACvD,IAAIS,UAAU,IAAI,QAAQ,IAAIA,UAAU,IAAI,QAAQ,EAAE;UACpDL,EAAE,CAACM,WAAW,CAAC,UAAU,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAAC;QACpD;QAEA,OAAOP,EAAE;MACX,CAAC;MAED;AACJ;AACA;AACA;MACIO,WAAW,WAAAA,YAACC,GAAG,EAAE;QACf;QACA,IAAIA,GAAG,CAACC,gBAAgB,EAAE,IAAI,OAAO,EAAE;UACrC,IAAI,IAAI,CAACC,WAAW,EAAE,EAAE;YACtB,IAAI,CAACC,IAAI,EAAE;UACb,CAAC,MAAM;YACL;YACA;YACA;YACA,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC;YACvB,IAAI,CAACD,IAAI,EAAE;YACX,IAAI,CAACC,YAAY,CAAC,KAAK,CAAC;UAC1B;QACF;MACF;IACF,CAAC;IAEDC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACC,iBAAiB,EAAE,CAACC,cAAc,CAAC,UAAU,EAAE,IAAI,CAACR,WAAW,EAAE,IAAI,CAAC;IAC7E;EACF,CAAC,CAAC;EAtGFjC,EAAE,CAACO,EAAE,CAACC,IAAI,CAACmB,SAAS,CAACxB,aAAa,GAAGA,aAAa;AAAC"
}