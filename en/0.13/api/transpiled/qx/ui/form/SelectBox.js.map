{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "core",
    "ISingleSelection",
    "IModelSelection",
    "IField",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "_createChildControl",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onTap",
    "_onKeyInput",
    "__onChangeSelection",
    "properties",
    "appearance",
    "refine",
    "init",
    "rich",
    "check",
    "apply",
    "members",
    "__preSelectedItem",
    "_applyRich",
    "value",
    "oldValue",
    "getChildControl",
    "setRich",
    "_defaultFormat",
    "item",
    "isRich",
    "getLabel",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Spacer",
    "_add",
    "flex",
    "basic",
    "Atom",
    "setCenter",
    "setAnonymous",
    "Image",
    "_forwardStates",
    "focused",
    "_getItems",
    "getChildrenContainer",
    "getChildren",
    "_isAllowEmptySelection",
    "getSelectionMode",
    "e",
    "listItem",
    "getData",
    "list",
    "getSelection",
    "setSelection",
    "resetSelection",
    "__updateIcon",
    "__updateLabel",
    "old",
    "getOldData",
    "current",
    "getContentElement",
    "setAttribute",
    "atom",
    "icon",
    "getIcon",
    "resetIcon",
    "setIcon",
    "label",
    "format",
    "getFormat",
    "call",
    "translate",
    "resetLabel",
    "setLabel",
    "isEnabled",
    "getTarget",
    "hasState",
    "removeState",
    "addState",
    "toggle",
    "_onKeyPress",
    "iden",
    "getKeyIdentifier",
    "isAltPressed",
    "stop",
    "clone",
    "setTarget",
    "_list",
    "setBubbles",
    "dispatchEvent",
    "_onListPointerDown",
    "_onListChangeSelection",
    "length",
    "removeListener",
    "popup",
    "context",
    "getSelectionContext",
    "isVisible",
    "contentEl",
    "currentContentEl",
    "getAttribute",
    "removeAttribute",
    "_onPopupChangeVisibility",
    "hasChildren",
    "distance",
    "getLayoutLocation",
    "viewPortHeight",
    "bom",
    "Viewport",
    "getHeight",
    "toTop",
    "top",
    "toBottom",
    "bottom",
    "availableHeigth",
    "maxListHeight",
    "getMaxListHeight",
    "setMaxHeight",
    "destruct",
    "SelectBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A form widget which allows a single selection. Looks somewhat like\n * a normal button, but opens a list of items to select when tapping on it.\n *\n * Keep in mind that the SelectBox widget has always a selected item (due to the\n * single selection mode). Right after adding the first item a <code>changeSelection</code>\n * event is fired.\n *\n * <pre class='javascript'>\n * var selectBox = new qx.ui.form.SelectBox();\n *\n * selectBox.addListener(\"changeSelection\", function(e) {\n *   // ...\n * });\n *\n * // now the 'changeSelection' event is fired\n * selectBox.add(new qx.ui.form.ListItem(\"Item 1\"));\n * </pre>\n *\n * @childControl spacer {qx.ui.core.Spacer} flexible spacer widget\n * @childControl atom {qx.ui.basic.Atom} shows the text and icon of the content\n * @childControl arrow {qx.ui.basic.Image} shows the arrow to open the popup\n */\nqx.Class.define(\"qx.ui.form.SelectBox\", {\n  extend: qx.ui.form.AbstractSelectBox,\n  implement: [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IModelSelection,\n    qx.ui.form.IField\n  ],\n\n  include: [qx.ui.core.MSingleSelectionHandling, qx.ui.form.MModelSelection],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    this._createChildControl(\"atom\");\n    this._createChildControl(\"spacer\");\n    this._createChildControl(\"arrow\");\n\n    // Register listener\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n    this.addListener(\"tap\", this._onTap, this);\n\n    this.addListener(\"keyinput\", this._onKeyInput, this);\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"selectbox\"\n    },\n\n    rich: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyRich\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {qx.ui.basic.Atom} instance */\n    __preSelectedItem: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    _applyRich(value, oldValue) {\n      this.getChildControl(\"atom\").setRich(value);\n    },\n\n    // overridden\n    _defaultFormat(item) {\n      if (item) {\n        if (typeof item.isRich == \"function\" && item.isRich()) {\n          this.setRich(true);\n        }\n        return item.getLabel();\n      }\n      return null;\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"spacer\":\n          control = new qx.ui.core.Spacer();\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"atom\":\n          control = new qx.ui.basic.Atom(\" \");\n          control.setCenter(false);\n          control.setAnonymous(true);\n\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"arrow\":\n          control = new qx.ui.basic.Image();\n          control.setAnonymous(true);\n\n          this._add(control);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the list items for the selection.\n     *\n     * @return {qx.ui.basic.Atom[]} List items to select.\n     */\n    _getItems() {\n      return this.getChildrenContainer().getChildren();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection() {\n      return this.getChildrenContainer().getSelectionMode() !== \"one\";\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection(e) {\n      var listItem = e.getData()[0];\n\n      var list = this.getChildControl(\"list\");\n      if (list.getSelection()[0] != listItem) {\n        if (listItem) {\n          list.setSelection([listItem]);\n        } else {\n          list.resetSelection();\n        }\n      }\n\n      this.__updateIcon();\n      this.__updateLabel();\n\n      // ARIA attrs\n      const old = e.getOldData() ? e.getOldData()[0] : null;\n      const current = this.getSelection()[0];\n      if (old && old !== current) {\n        old.getContentElement().setAttribute(\"aria-selected\", false);\n      }\n      if (current) {\n        current.getContentElement().setAttribute(\"aria-selected\", true);\n      }\n    },\n\n    /**\n     * Sets the icon inside the list to match the selected ListItem.\n     */\n    __updateIcon() {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var icon = listItem ? listItem.getIcon() : \"\";\n      icon == null ? atom.resetIcon() : atom.setIcon(icon);\n    },\n\n    /**\n     * Sets the label inside the list to match the selected ListItem.\n     */\n    __updateLabel() {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var label = listItem ? listItem.getLabel() : \"\";\n      var format = this.getFormat();\n      if (format != null && listItem) {\n        label = format.call(this, listItem);\n      }\n\n      // check for translation\n      if (label && label.translate) {\n        label = label.translate();\n      }\n      label == null ? atom.resetLabel() : atom.setLabel(label);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n\n      this.addState(\"hovered\");\n    },\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOut(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\")) {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n      }\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onTap(e) {\n      this.toggle();\n    },\n\n    // overridden\n    _onKeyPress(e) {\n      var iden = e.getKeyIdentifier();\n      if ((iden == \"Down\" || iden == \"Up\") && e.isAltPressed()) {\n        this.toggle();\n        e.stop();\n      } else if (iden == \"Enter\" || iden == \"Space\") {\n        // Apply pre-selected item (translate quick selection to real selection)\n        if (this.__preSelectedItem) {\n          this.setSelection([this.__preSelectedItem]);\n          this.__preSelectedItem = null;\n        }\n\n        this.toggle();\n        e.stop();\n      } else {\n        super._onKeyPress(e);\n      }\n    },\n\n    /**\n     * Forwards key event to list widget.\n     *\n     * @param e {qx.event.type.KeyInput} Key event\n     */\n    _onKeyInput(e) {\n      // clone the event and re-calibrate the event\n      var clone = e.clone();\n      clone.setTarget(this._list);\n      clone.setBubbles(false);\n\n      // forward it to the list\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n    // overridden\n    _onListPointerDown(e) {\n      // Apply pre-selected item (translate quick selection to real selection)\n      if (this.__preSelectedItem) {\n        this.setSelection([this.__preSelectedItem]);\n        this.__preSelectedItem = null;\n      }\n    },\n\n    // overridden\n    _onListChangeSelection(e) {\n      var current = e.getData();\n      var old = e.getOldData();\n\n      // Remove old listeners for icon and label changes.\n      if (old && old.length > 0) {\n        old[0].removeListener(\"changeIcon\", this.__updateIcon, this);\n        old[0].removeListener(\"changeLabel\", this.__updateLabel, this);\n      }\n\n      if (current.length > 0) {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var popup = this.getChildControl(\"popup\");\n        var list = this.getChildControl(\"list\");\n        var context = list.getSelectionContext();\n\n        if (popup.isVisible() && (context == \"quick\" || context == \"key\")) {\n          this.__preSelectedItem = current[0];\n        } else {\n          this.setSelection([current[0]]);\n          this.__preSelectedItem = null;\n        }\n\n        // Add listeners for icon and label changes\n        current[0].addListener(\"changeIcon\", this.__updateIcon, this);\n        current[0].addListener(\"changeLabel\", this.__updateLabel, this);\n      } else {\n        this.resetSelection();\n      }\n\n      // Set aria-activedescendant\n      const contentEl = this.getContentElement();\n      if (!contentEl) {\n        return;\n      }\n      const currentContentEl =\n        current && current[0] ? current[0].getContentElement() : null;\n      if (currentContentEl) {\n        contentEl.setAttribute(\n          \"aria-activedescendant\",\n          currentContentEl.getAttribute(\"id\")\n        );\n      } else {\n        contentEl.removeAttribute(\"aria-activedescendant\");\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility(e) {\n      super._onPopupChangeVisibility(e);\n\n      // Synchronize the current selection to the list selection\n      // when the popup is closed. The list selection may be invalid\n      // because of the quick selection handling which is not\n      // directly applied to the selectbox\n      var popup = this.getChildControl(\"popup\");\n      if (!popup.isVisible()) {\n        var list = this.getChildControl(\"list\");\n\n        // check if the list has any children before selecting\n        if (list.hasChildren()) {\n          list.setSelection(this.getSelection());\n        }\n      } else {\n        // ensure that the list is never bigger that the max list height and\n        // the available space in the viewport\n        var distance = popup.getLayoutLocation(this);\n        var viewPortHeight = qx.bom.Viewport.getHeight();\n        // distance to the bottom and top borders of the viewport\n        var toTop = distance.top;\n        var toBottom = viewPortHeight - distance.bottom;\n        var availableHeigth = toTop > toBottom ? toTop : toBottom;\n\n        var maxListHeight = this.getMaxListHeight();\n        var list = this.getChildControl(\"list\");\n        if (maxListHeight == null || maxListHeight > availableHeigth) {\n          list.setMaxHeight(availableHeigth);\n        } else if (maxListHeight < availableHeigth) {\n          list.setMaxHeight(maxListHeight);\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__preSelectedItem = null;\n  }\n});\n"
  ],
  "mappings": "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"
}