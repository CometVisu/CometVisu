{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "core",
    "ISingleSelection",
    "IModelSelection",
    "IField",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "constructor",
    "call",
    "_createChildControl",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onTap",
    "_onKeyInput",
    "__onChangeSelection",
    "properties",
    "appearance",
    "refine",
    "init",
    "rich",
    "check",
    "apply",
    "members",
    "__preSelectedItem",
    "_applyRich",
    "value",
    "oldValue",
    "getChildControl",
    "setRich",
    "_defaultFormat",
    "item",
    "isRich",
    "getLabel",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Spacer",
    "_add",
    "flex",
    "basic",
    "Atom",
    "setCenter",
    "setAnonymous",
    "Image",
    "SelectBox",
    "superclass",
    "prototype",
    "_forwardStates",
    "focused",
    "_getItems",
    "getChildrenContainer",
    "getChildren",
    "_isAllowEmptySelection",
    "getSelectionMode",
    "__P_357_0",
    "e",
    "listItem",
    "getData",
    "list",
    "getSelection",
    "setSelection",
    "resetSelection",
    "__updateIcon",
    "__updateLabel",
    "old",
    "getOldData",
    "current",
    "getContentElement",
    "setAttribute",
    "__P_357_2",
    "atom",
    "icon",
    "getIcon",
    "resetIcon",
    "setIcon",
    "__P_357_3",
    "label",
    "format",
    "getFormat",
    "translate",
    "resetLabel",
    "setLabel",
    "isEnabled",
    "getTarget",
    "hasState",
    "removeState",
    "addState",
    "toggle",
    "_onKeyPress",
    "iden",
    "getKeyIdentifier",
    "isAltPressed",
    "stop",
    "clone",
    "setTarget",
    "_list",
    "setBubbles",
    "dispatchEvent",
    "_onListPointerDown",
    "_onListChangeSelection",
    "length",
    "removeListener",
    "popup",
    "context",
    "getSelectionContext",
    "isVisible",
    "contentEl",
    "currentContentEl",
    "getAttribute",
    "removeAttribute",
    "_onPopupChangeVisibility",
    "hasChildren",
    "distance",
    "getLayoutLocation",
    "viewPortHeight",
    "bom",
    "Viewport",
    "getHeight",
    "toTop",
    "top",
    "toBottom",
    "bottom",
    "availableHeigth",
    "maxListHeight",
    "getMaxListHeight",
    "setMaxHeight",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A form widget which allows a single selection. Looks somewhat like\n * a normal button, but opens a list of items to select when tapping on it.\n *\n * Keep in mind that the SelectBox widget has always a selected item (due to the\n * single selection mode). Right after adding the first item a <code>changeSelection</code>\n * event is fired.\n *\n * <pre class='javascript'>\n * var selectBox = new qx.ui.form.SelectBox();\n *\n * selectBox.addListener(\"changeSelection\", function(e) {\n *   // ...\n * });\n *\n * // now the 'changeSelection' event is fired\n * selectBox.add(new qx.ui.form.ListItem(\"Item 1\"));\n * </pre>\n *\n * @childControl spacer {qx.ui.core.Spacer} flexible spacer widget\n * @childControl atom {qx.ui.basic.Atom} shows the text and icon of the content\n * @childControl arrow {qx.ui.basic.Image} shows the arrow to open the popup\n */\nqx.Class.define(\"qx.ui.form.SelectBox\", {\n  extend: qx.ui.form.AbstractSelectBox,\n  implement: [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IModelSelection,\n    qx.ui.form.IField\n  ],\n\n  include: [qx.ui.core.MSingleSelectionHandling, qx.ui.form.MModelSelection],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    this._createChildControl(\"atom\");\n    this._createChildControl(\"spacer\");\n    this._createChildControl(\"arrow\");\n\n    // Register listener\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n    this.addListener(\"tap\", this._onTap, this);\n\n    this.addListener(\"keyinput\", this._onKeyInput, this);\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"selectbox\"\n    },\n\n    rich: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyRich\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {qx.ui.basic.Atom} instance */\n    __preSelectedItem: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    _applyRich(value, oldValue) {\n      this.getChildControl(\"atom\").setRich(value);\n    },\n\n    // overridden\n    _defaultFormat(item) {\n      if (item) {\n        if (typeof item.isRich == \"function\" && item.isRich()) {\n          this.setRich(true);\n        }\n        return item.getLabel();\n      }\n      return null;\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"spacer\":\n          control = new qx.ui.core.Spacer();\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"atom\":\n          control = new qx.ui.basic.Atom(\" \");\n          control.setCenter(false);\n          control.setAnonymous(true);\n\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"arrow\":\n          control = new qx.ui.basic.Image();\n          control.setAnonymous(true);\n\n          this._add(control);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the list items for the selection.\n     *\n     * @return {qx.ui.basic.Atom[]} List items to select.\n     */\n    _getItems() {\n      return this.getChildrenContainer().getChildren();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection() {\n      return this.getChildrenContainer().getSelectionMode() !== \"one\";\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection(e) {\n      var listItem = e.getData()[0];\n\n      var list = this.getChildControl(\"list\");\n      if (list.getSelection()[0] != listItem) {\n        if (listItem) {\n          list.setSelection([listItem]);\n        } else {\n          list.resetSelection();\n        }\n      }\n\n      this.__updateIcon();\n      this.__updateLabel();\n\n      // ARIA attrs\n      const old = e.getOldData() ? e.getOldData()[0] : null;\n      const current = this.getSelection()[0];\n      if (old && old !== current) {\n        old.getContentElement().setAttribute(\"aria-selected\", false);\n      }\n      if (current) {\n        current.getContentElement().setAttribute(\"aria-selected\", true);\n      }\n    },\n\n    /**\n     * Sets the icon inside the list to match the selected ListItem.\n     */\n    __updateIcon() {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var icon = listItem ? listItem.getIcon() : \"\";\n      icon == null ? atom.resetIcon() : atom.setIcon(icon);\n    },\n\n    /**\n     * Sets the label inside the list to match the selected ListItem.\n     */\n    __updateLabel() {\n      var listItem = this.getChildControl(\"list\").getSelection()[0];\n      var atom = this.getChildControl(\"atom\");\n      var label = listItem ? listItem.getLabel() : \"\";\n      var format = this.getFormat();\n      if (format != null && listItem) {\n        label = format.call(this, listItem);\n      }\n\n      // check for translation\n      if (label && label.translate) {\n        label = label.translate();\n      }\n      label == null ? atom.resetLabel() : atom.setLabel(label);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for \"pointerover\" event\n     * <ul>\n     * <li>Adds state \"hovered\"</li>\n     * <li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOver(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      if (this.hasState(\"abandoned\")) {\n        this.removeState(\"abandoned\");\n        this.addState(\"pressed\");\n      }\n\n      this.addState(\"hovered\");\n    },\n\n    /**\n     * Listener method for \"pointerout\" event\n     * <ul>\n     * <li>Removes \"hovered\" state</li>\n     * <li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n     * </ul>\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onPointerOut(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.removeState(\"hovered\");\n\n      if (this.hasState(\"pressed\")) {\n        this.removeState(\"pressed\");\n        this.addState(\"abandoned\");\n      }\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     */\n    _onTap(e) {\n      this.toggle();\n    },\n\n    // overridden\n    _onKeyPress(e) {\n      var iden = e.getKeyIdentifier();\n      if ((iden == \"Down\" || iden == \"Up\") && e.isAltPressed()) {\n        this.toggle();\n        e.stop();\n      } else if (iden == \"Enter\" || iden == \"Space\") {\n        // Apply pre-selected item (translate quick selection to real selection)\n        if (this.__preSelectedItem) {\n          this.setSelection([this.__preSelectedItem]);\n          this.__preSelectedItem = null;\n        }\n\n        this.toggle();\n        e.stop();\n      } else {\n        super._onKeyPress(e);\n      }\n    },\n\n    /**\n     * Forwards key event to list widget.\n     *\n     * @param e {qx.event.type.KeyInput} Key event\n     */\n    _onKeyInput(e) {\n      // clone the event and re-calibrate the event\n      var clone = e.clone();\n      clone.setTarget(this._list);\n      clone.setBubbles(false);\n\n      // forward it to the list\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n    // overridden\n    _onListPointerDown(e) {\n      // Apply pre-selected item (translate quick selection to real selection)\n      if (this.__preSelectedItem) {\n        this.setSelection([this.__preSelectedItem]);\n        this.__preSelectedItem = null;\n      }\n    },\n\n    // overridden\n    _onListChangeSelection(e) {\n      var current = e.getData();\n      var old = e.getOldData();\n\n      // Remove old listeners for icon and label changes.\n      if (old && old.length > 0) {\n        old[0].removeListener(\"changeIcon\", this.__updateIcon, this);\n        old[0].removeListener(\"changeLabel\", this.__updateLabel, this);\n      }\n\n      if (current.length > 0) {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var popup = this.getChildControl(\"popup\");\n        var list = this.getChildControl(\"list\");\n        var context = list.getSelectionContext();\n\n        if (popup.isVisible() && (context == \"quick\" || context == \"key\")) {\n          this.__preSelectedItem = current[0];\n        } else {\n          this.setSelection([current[0]]);\n          this.__preSelectedItem = null;\n        }\n\n        // Add listeners for icon and label changes\n        current[0].addListener(\"changeIcon\", this.__updateIcon, this);\n        current[0].addListener(\"changeLabel\", this.__updateLabel, this);\n      } else {\n        this.resetSelection();\n      }\n\n      // Set aria-activedescendant\n      const contentEl = this.getContentElement();\n      if (!contentEl) {\n        return;\n      }\n      const currentContentEl =\n        current && current[0] ? current[0].getContentElement() : null;\n      if (currentContentEl) {\n        contentEl.setAttribute(\n          \"aria-activedescendant\",\n          currentContentEl.getAttribute(\"id\")\n        );\n      } else {\n        contentEl.removeAttribute(\"aria-activedescendant\");\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility(e) {\n      super._onPopupChangeVisibility(e);\n\n      // Synchronize the current selection to the list selection\n      // when the popup is closed. The list selection may be invalid\n      // because of the quick selection handling which is not\n      // directly applied to the selectbox\n      var popup = this.getChildControl(\"popup\");\n      if (!popup.isVisible()) {\n        var list = this.getChildControl(\"list\");\n\n        // check if the list has any children before selecting\n        if (list.hasChildren()) {\n          list.setSelection(this.getSelection());\n        }\n      } else {\n        // ensure that the list is never bigger that the max list height and\n        // the available space in the viewport\n        var distance = popup.getLayoutLocation(this);\n        var viewPortHeight = qx.bom.Viewport.getHeight();\n        // distance to the bottom and top borders of the viewport\n        var toTop = distance.top;\n        var toBottom = viewPortHeight - distance.bottom;\n        var availableHeigth = toTop > toBottom ? toTop : toBottom;\n\n        var maxListHeight = this.getMaxListHeight();\n        var list = this.getChildControl(\"list\");\n        if (maxListHeight == null || maxListHeight > availableHeigth) {\n          list.setMaxHeight(availableHeigth);\n        } else if (maxListHeight < availableHeigth) {\n          list.setMaxHeight(maxListHeight);\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__preSelectedItem = null;\n  }\n});\n"
  ],
  "mappings": "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"
}