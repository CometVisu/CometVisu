{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "form",
    "MForm",
    "implement",
    "IForm",
    "type",
    "construct",
    "constructor",
    "call",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "addListener",
    "_onKeyPress",
    "_onBlur",
    "_onResize",
    "properties",
    "focusable",
    "refine",
    "init",
    "width",
    "maxListHeight",
    "check",
    "apply",
    "nullable",
    "format",
    "item",
    "_defaultFormat",
    "readOnly",
    "event",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "List",
    "set",
    "keepFocus",
    "height",
    "maxHeight",
    "getMaxListHeight",
    "selectionMode",
    "quickSelection",
    "bind",
    "listId",
    "toHashCode",
    "childrenContainerEl",
    "getChildrenContainer",
    "_onListAddItem",
    "_onListChangeSelection",
    "__onListPointerDownImpl",
    "getChildControl",
    "close",
    "popup",
    "Popup",
    "VBox",
    "setAutoHide",
    "setKeepActive",
    "add",
    "_onPopupChangeVisibility",
    "AbstractSelectBox",
    "superclass",
    "prototype",
    "_applyMaxListHeight",
    "value",
    "old",
    "setMaxHeight",
    "_applyReadOnly",
    "open",
    "placeToWidget",
    "show",
    "isVisible",
    "hide",
    "toggle",
    "isListOpen",
    "valueLabel",
    "getLabel",
    "rich",
    "getRich",
    "replace",
    "bom",
    "String",
    "unescape",
    "e",
    "identifier",
    "getKeyIdentifier",
    "listPopup",
    "isHidden",
    "stopPropagation",
    "stop",
    "handleKeyPress",
    "setMinWidth",
    "getData",
    "ariaSelected",
    "getAttribute",
    "undefined",
    "Error",
    "getReadOnly",
    "_onListPointerDown",
    "visible",
    "addState",
    "removeState"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/AbstractSelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Basic class for a selectbox like lists. Basically supports a popup\n * with a list and the whole children management.\n *\n * @childControl list {qx.ui.form.List} list component of the selectbox\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list\n *\n */\nqx.Class.define(\"qx.ui.form.AbstractSelectBox\", {\n  extend: qx.ui.core.Widget,\n  include: [qx.ui.core.MRemoteChildrenHandling, qx.ui.form.MForm],\n\n  implement: [qx.ui.form.IForm],\n\n  type: \"abstract\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"button\");\n    contentEl.setAttribute(\"aria-haspopup\", \"listbox\");\n    contentEl.setAttribute(\"aria-expanded\", false);\n\n    // Register listeners\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"blur\", this._onBlur, this);\n\n    // register the resize listener\n    this.addListener(\"resize\", this._onResize, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    },\n\n    /**\n     * The maximum height of the list popup. Setting this value to\n     * <code>null</code> will set cause the list to be auto-sized.\n     */\n    maxListHeight: {\n      check: \"Number\",\n      apply: \"_applyMaxListHeight\",\n      nullable: true,\n      init: 200\n    },\n\n    /**\n     * Formatter which format the value from the selected <code>ListItem</code>.\n     * Uses the default formatter {@link #_defaultFormat}.\n     */\n    format: {\n      check: \"Function\",\n      init(item) {\n        return this._defaultFormat(item);\n      },\n      nullable: true\n    },\n\n    /**\n     * Whether the field is read only\n     */\n    readOnly: {\n      check: \"Boolean\",\n      event: \"changeReadOnly\",\n      apply: \"_applyReadOnly\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"list\": {\n          control = new qx.ui.form.List().set({\n            focusable: false,\n            keepFocus: true,\n            height: null,\n            width: null,\n            maxHeight: this.getMaxListHeight(),\n            selectionMode: \"one\",\n            quickSelection: true\n          });\n\n          this.bind(\"readOnly\", control, \"readOnly\");\n\n          const listId = \"list-\" + control.toHashCode();\n          const childrenContainerEl = control\n            .getChildrenContainer()\n            .getContentElement();\n          childrenContainerEl.setAttribute(\"id\", listId);\n          childrenContainerEl.setAttribute(\"role\", \"listbox\");\n          this.getContentElement().setAttribute(\"aria-owns\", listId);\n\n          control.addListener(\"addItem\", this._onListAddItem, this);\n          control.addListener(\n            \"changeSelection\",\n            this._onListChangeSelection,\n            this\n          );\n\n          control.addListener(\n            \"pointerdown\",\n            this.__onListPointerDownImpl,\n            this\n          );\n\n          control.getChildControl(\"pane\").addListener(\"tap\", this.close, this);\n          break;\n        }\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox());\n          control.setAutoHide(false);\n          control.setKeepActive(true);\n          control.add(this.getChildControl(\"list\"));\n\n          control.addListener(\n            \"changeVisibility\",\n            this._onPopupChangeVisibility,\n            this\n          );\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaxListHeight(value, old) {\n      this.getChildControl(\"list\").setMaxHeight(value);\n    },\n\n    _applyReadOnly() {\n      // no-op\n    },\n    /*\n    ---------------------------------------------------------------------------\n    PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */ /**\n     * Returns the list widget.\n     * @return {qx.ui.form.List} the list\n     */ getChildrenContainer() {\n      return this.getChildControl(\"list\");\n    },\n    \n    /*\n    ---------------------------------------------------------------------------\n    LIST STUFF\n    ---------------------------------------------------------------------------\n    */\n    \n    /**\n     * Shows the list popup.\n     */\n    open() {\n      var popup = this.getChildControl(\"popup\");\n\n      popup.placeToWidget(this, true);\n      popup.show();\n    },\n\n    /**\n     * Hides the list popup.\n     */\n    close() {\n      var popup = this.getChildControl(\"popup\", true);\n      if (popup && popup.isVisible()) {\n        popup.hide();\n      }\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     */\n    toggle() {\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\n      if (isListOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FORMAT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Return the formatted label text from the <code>ListItem</code>.\n     * The formatter removes all HTML tags and converts all HTML entities\n     * to string characters when the rich property is <code>true</code>.\n     *\n     * @param item {qx.ui.form.IListItem} The list item to format.\n     * @return {String} The formatted text.\n     */\n    _defaultFormat(item) {\n      var valueLabel = item ? item.getLabel() : \"\";\n      var rich = item ? item.getRich() : false;\n\n      if (rich) {\n        valueLabel = valueLabel.replace(/<[^>]+?>/g, \"\");\n        valueLabel = qx.bom.String.unescape(valueLabel);\n      }\n\n      return valueLabel;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param e {qx.event.type.Focus} The blur event.\n     */\n    _onBlur(e) {\n      this.close();\n    },\n\n    /**\n     * Reacts on special keys and forwards other key events to the list widget.\n     *\n     * @param e {qx.event.type.KeySequence} Keypress event\n     */\n    _onKeyPress(e) {\n      // get the key identifier\n      var identifier = e.getKeyIdentifier();\n      var listPopup = this.getChildControl(\"popup\");\n\n      // disabled pageUp and pageDown keys\n      if (\n        listPopup.isHidden() &&\n        (identifier == \"PageDown\" || identifier == \"PageUp\")\n      ) {\n        e.stopPropagation();\n      }\n\n      // hide the list always on escape and tab\n      else if (\n        !listPopup.isHidden() &&\n        (identifier == \"Escape\" || identifier == \"Tab\")\n      ) {\n        this.close();\n        e.stop();\n      }\n\n      // forward the rest of the events to the list\n      else {\n        this.getChildControl(\"list\").handleKeyPress(e);\n      }\n    },\n\n    /**\n     * Updates list minimum size.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onResize(e) {\n      this.getChildControl(\"popup\").setMinWidth(e.getData().width);\n    },\n\n    /**\n     * Sets ARIA attributes on the item\n     *\n     * @param e {qx.event.type.Data} Data Event\n     */\n    _onListAddItem(e) {\n      const item = e.getData();\n      const contentEl = item.getContentElement();\n      contentEl.setAttribute(\"id\", \"list-item-\" + item.toHashCode());\n      contentEl.setAttribute(\"role\", \"option\");\n      const ariaSelected = contentEl.getAttribute(\"aria-selected\");\n      // aria-selected may be already set from changeSelection listener\n      if (ariaSelected === null || ariaSelected === undefined) {\n        contentEl.setAttribute(\"aria-selected\", false);\n      }\n    },\n\n    /**\n     * Syncs the own property from the list change\n     *\n     * @param e {qx.event.type.Data} Data Event\n     */\n    _onListChangeSelection(e) {\n      throw new Error(\"Abstract method: _onListChangeSelection()\");\n    },\n\n    __onListPointerDownImpl(e) {\n      if (this.getReadOnly()) {\n        return;\n      }\n      this._onListPointerDown(e);\n    },\n    /**\n     * Redirects pointerdown event from the list to this widget.\n     *\n     * @param e {qx.event.type.Pointer} Pointer Event\n     */\n    _onListPointerDown(e) {\n      throw new Error(\"Abstract method: _onListPointerDown()\");\n    },\n\n    /**\n     * Redirects changeVisibility event from the list to this widget.\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onPopupChangeVisibility(e) {\n      const visible = e.getData() == \"visible\";\n      visible ? this.addState(\"popupOpen\") : this.removeState(\"popupOpen\");\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-expanded\", visible);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}