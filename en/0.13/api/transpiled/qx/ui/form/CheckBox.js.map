{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "ToggleButton",
    "include",
    "MForm",
    "MModelProperty",
    "implement",
    "IForm",
    "IModel",
    "IListItem",
    "construct",
    "label",
    "constructor",
    "call",
    "setValue",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "removeAttribute",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowX",
    "members",
    "_forwardStates",
    "invalid",
    "focused",
    "undetermined",
    "checked",
    "hovered",
    "_bindableProperties",
    "_applyValue",
    "value",
    "old",
    "addState",
    "removeState",
    "ariaChecked",
    "Boolean",
    "isTriState",
    "CheckBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/CheckBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A check box widget with an optional label.\n */\nqx.Class.define(\"qx.ui.form.CheckBox\", {\n  extend: qx.ui.form.ToggleButton,\n  include: [qx.ui.form.MForm, qx.ui.form.MModelProperty],\n\n  implement: [qx.ui.form.IForm, qx.ui.form.IModel, qx.ui.form.IListItem],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String?null} An optional label for the check box.\n   */\n  construct(label) {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 1);\n    }\n\n    super(label);\n\n    // Initialize the checkbox to a valid value (the default is null which\n    // is invalid)\n    this.setValue(false);\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"checkbox\");\n    contentEl.removeAttribute(\"aria-pressed\");\n    contentEl.setAttribute(\"aria-checked\", false);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"checkbox\"\n    },\n\n    // overridden\n    allowGrowX: {\n      refine: true,\n      init: false\n    }\n  },\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      invalid: true,\n      focused: true,\n      undetermined: true,\n      checked: true,\n      hovered: true\n    },\n\n    /**\n     * overridden (from MExecutable to keep the icon out of the binding)\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties: [\"enabled\", \"label\", \"toolTipText\", \"value\", \"menu\"],\n\n    // overridden\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      let ariaChecked = Boolean(value);\n      if (this.isTriState()) {\n        if (value === null) {\n          ariaChecked = \"mixed\";\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-checked\", ariaChecked);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qBAAqB,EAAE;IACrCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,YAAY;IAC/BC,OAAO,EAAE,CAACV,EAAE,CAACO,EAAE,CAACC,IAAI,CAACG,KAAK,EAAEX,EAAE,CAACO,EAAE,CAACC,IAAI,CAACI,cAAc,CAAC;IAEtDC,SAAS,EAAE,CAACb,EAAE,CAACO,EAAE,CAACC,IAAI,CAACM,KAAK,EAAEd,EAAE,CAACO,EAAE,CAACC,IAAI,CAACO,MAAM,EAAEf,EAAE,CAACO,EAAE,CAACC,IAAI,CAACQ,SAAS,CAAC;IAEtE;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAE;MAKflB,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,YAAA,CAAAU,WAAA,CAAAC,IAAA,OAAMF,KAAK;;MAEX;MACA;MACA,IAAI,CAACG,QAAQ,CAAC,KAAK,CAAC;;MAEpB;MACA,IAAMC,SAAS,GAAG,IAAI,CAACC,iBAAiB,EAAE;MAC1CD,SAAS,CAACE,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;MAC1CF,SAAS,CAACG,eAAe,CAAC,cAAc,CAAC;MACzCH,SAAS,CAACE,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC;IAC/C,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEE,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAC,UAAU,EAAE;QACVF,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR;IACF,CAAC;IAED;IACAE,OAAO,EAAE;MACP;AACJ;AACA;MACIC,cAAc,EAAE;QACdC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,IAAI;QACbC,YAAY,EAAE,IAAI;QAClBC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE;MACX,CAAC;MAED;AACJ;AACA;AACA;MACIC,mBAAmB,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC;MAEzE;MACAC,WAAW,WAAAA,YAACC,KAAK,EAAEC,GAAG,EAAE;QACtBD,KAAK,GAAG,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAAC,SAAS,CAAC;QAE9D,IAAIC,WAAW,GAAGC,OAAO,CAACL,KAAK,CAAC;QAChC,IAAI,IAAI,CAACM,UAAU,EAAE,EAAE;UACrB,IAAIN,KAAK,KAAK,IAAI,EAAE;YAClBI,WAAW,GAAG,OAAO;YACrB,IAAI,CAACF,QAAQ,CAAC,cAAc,CAAC;UAC/B,CAAC,MAAM,IAAID,GAAG,KAAK,IAAI,EAAE;YACvB,IAAI,CAACE,WAAW,CAAC,cAAc,CAAC;UAClC;QACF;;QAEA;QACA,IAAI,CAACpB,iBAAiB,EAAE,CAACC,YAAY,CAAC,cAAc,EAAEoB,WAAW,CAAC;MACpE;IACF;EACF,CAAC,CAAC;EAjHF5C,EAAE,CAACO,EAAE,CAACC,IAAI,CAACuC,QAAQ,CAAC5C,aAAa,GAAGA,aAAa;AAAC"
}