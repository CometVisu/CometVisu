{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "__groups",
    "_buttons",
    "_buttonOptions",
    "_validationManager",
    "_createValidationManager",
    "_resetter",
    "_createResetter",
    "events",
    "change",
    "members",
    "_groupCounter",
    "add",
    "item",
    "label",
    "validator",
    "name",
    "validatorContext",
    "options",
    "__isFirstAdd",
    "push",
    "title",
    "items",
    "labels",
    "names",
    "headerOptions",
    "replace",
    "fireEvent",
    "addGroupHeader",
    "addButton",
    "button",
    "__P_356_1",
    "length",
    "remove",
    "i",
    "group",
    "j",
    "storedItem",
    "splice",
    "removeGroupHeader",
    "targetGroup",
    "concat",
    "removeButton",
    "storedButton",
    "getItems",
    "getItem",
    "reset",
    "redefineResetter",
    "redefine",
    "redefineResetterItem",
    "redefineItem",
    "validate",
    "getValidationManager",
    "getGroups",
    "getButtons",
    "getButtonOptions",
    "ui",
    "form",
    "validation",
    "Manager",
    "Resetter",
    "destruct",
    "dispose",
    "Form"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Form.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The form object is responsible for managing form items. For that, it takes\r\n * advantage of two existing qooxdoo classes.\r\n * The {@link qx.ui.form.Resetter} is used for resetting and the\r\n * {@link qx.ui.form.validation.Manager} is used for all validation purposes.\r\n *\r\n * The view code can be found in the used renderer ({@link qx.ui.form.renderer}).\r\n */\r\nqx.Class.define(\"qx.ui.form.Form\", {\r\n  extend: qx.core.Object,\r\n\r\n  construct() {\r\n    super();\r\n\r\n    this.__groups = [];\r\n    this._buttons = [];\r\n    this._buttonOptions = [];\r\n    this._validationManager = this._createValidationManager();\r\n    this._resetter = this._createResetter();\r\n  },\r\n\r\n  events: {\r\n    /** Fired as soon as something changes in the form.*/\r\n    change: \"qx.event.type.Event\"\r\n  },\r\n\r\n  members: {\r\n    __groups: null,\r\n    _validationManager: null,\r\n    _groupCounter: 0,\r\n    _buttons: null,\r\n    _buttonOptions: null,\r\n    _resetter: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       ADD\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Adds a form item to the form including its internal\r\n     * {@link qx.ui.form.validation.Manager} and {@link qx.ui.form.Resetter}.\r\n     *\r\n     * *Hint:* The order of all add calls represent the order in the layout.\r\n     *\r\n     * @param item {qx.ui.form.IForm} A supported form item.\r\n     * @param label {String} The string, which should be used as label.\r\n     * @param validator {Function | qx.ui.form.validation.AsyncValidator ? null}\r\n     *   The validator which is used by the validation\r\n     *   {@link qx.ui.form.validation.Manager}.\r\n     * @param name {String?null} The name which is used by the data binding\r\n     *   controller {@link qx.data.controller.Form}.\r\n     * @param validatorContext {var?null} The context of the validator.\r\n     * @param options {Map?null} An additional map containing custom data which\r\n     *   will be available in your form renderer specific to the added item.\r\n     */\r\n    add(item, label, validator, name, validatorContext, options) {\r\n      if (this.__isFirstAdd()) {\r\n        this.__groups.push({\r\n          title: null,\r\n          items: [],\r\n          labels: [],\r\n          names: [],\r\n          options: [],\r\n          headerOptions: {}\r\n        });\r\n      }\r\n      // save the given arguments\r\n      this.__groups[this._groupCounter].items.push(item);\r\n      this.__groups[this._groupCounter].labels.push(label);\r\n      this.__groups[this._groupCounter].options.push(options);\r\n      // if no name is given, use the label without not working character\r\n      if (name == null) {\r\n        name = label.replace(\r\n          /\\s+|&|-|\\+|\\*|\\/|\\||!|\\.|,|:|\\?|;|~|%|\\{|\\}|\\(|\\)|\\[|\\]|<|>|=|\\^|@|\\\\/g,\r\n          \"\"\r\n        );\r\n      }\r\n      this.__groups[this._groupCounter].names.push(name);\r\n\r\n      // add the item to the validation manager\r\n      this._validationManager.add(item, validator, validatorContext);\r\n      // add the item to the reset manager\r\n      this._resetter.add(item);\r\n      // fire the change event\r\n      this.fireEvent(\"change\");\r\n    },\r\n\r\n    /**\r\n     * Adds a group header to the form.\r\n     *\r\n     * *Hint:* The order of all add calls represent the order in the layout.\r\n     *\r\n     * @param title {String} The title of the group header.\r\n     * @param options {Map?null} A special set of custom data which will be\r\n     *   given to the renderer.\r\n     */\r\n    addGroupHeader(title, options) {\r\n      if (!this.__isFirstAdd()) {\r\n        this._groupCounter++;\r\n      }\r\n      this.__groups.push({\r\n        title: title,\r\n        items: [],\r\n        labels: [],\r\n        names: [],\r\n        options: [],\r\n        headerOptions: options\r\n      });\r\n\r\n      // fire the change event\r\n      this.fireEvent(\"change\");\r\n    },\r\n\r\n    /**\r\n     * Adds a button to the form.\r\n     *\r\n     * *Hint:* The order of all add calls represent the order in the layout.\r\n     *\r\n     * @param button {qx.ui.form.Button} The button to add.\r\n     * @param options {Map?null} An additional map containing custom data which\r\n     *   will be available in your form renderer specific to the added button.\r\n     */\r\n    addButton(button, options) {\r\n      this._buttons.push(button);\r\n      this._buttonOptions.push(options || null);\r\n      // fire the change event\r\n      this.fireEvent(\"change\");\r\n    },\r\n\r\n    /**\r\n     * Returns whether something has already been added.\r\n     *\r\n     * @return {Boolean} true, if nothing has been added jet.\r\n     */\r\n    __isFirstAdd() {\r\n      return this.__groups.length === 0;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       REMOVE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Removes the given item from the form.\r\n     *\r\n     * @param item {qx.ui.form.IForm} A supported form item.\r\n     * @return {Boolean} <code>true</code>, if the item could be removed.\r\n     */\r\n    remove(item) {\r\n      for (var i = 0; i < this.__groups.length; i++) {\r\n        var group = this.__groups[i];\r\n        for (var j = 0; j < group.items.length; j++) {\r\n          var storedItem = group.items[j];\r\n          if (storedItem === item) {\r\n            // remove all stored data\r\n            group.items.splice(j, 1);\r\n            group.labels.splice(j, 1);\r\n            group.names.splice(j, 1);\r\n            group.options.splice(j, 1);\r\n\r\n            // remove the item to the validation manager\r\n            this._validationManager.remove(item);\r\n            // remove the item to the reset manager\r\n            this._resetter.remove(item);\r\n\r\n            // fire the change event\r\n            this.fireEvent(\"change\");\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Removes the given group header from the form. All items in the group will be moved to\r\n     * another group (usually the previous group). If there is more than one group with\r\n     * the same title, only the first group will be removed.\r\n     *\r\n     * @param title {String} The title.\r\n     * @return {Boolean} <code>true</code>, if the header could be removed.\r\n     */\r\n    removeGroupHeader(title) {\r\n      for (var i = 0; i < this.__groups.length; i++) {\r\n        var group = this.__groups[i];\r\n        if (group.title === title) {\r\n          var targetGroup;\r\n\r\n          // if it's the first group\r\n          if (i == 0) {\r\n            // if it's the only group\r\n            if (this.__groups.length == 1) {\r\n              // remove the title and the header options\r\n              group.title = null;\r\n              group.headerOptions = {};\r\n              // fire the change event\r\n              this.fireEvent(\"change\");\r\n              return true;\r\n            } else {\r\n              // add to the next\r\n              targetGroup = this.__groups[i + 1];\r\n            }\r\n          } else {\r\n            // add to the previous group\r\n            targetGroup = this.__groups[i - 1];\r\n          }\r\n\r\n          // copy the data over\r\n          targetGroup.items = targetGroup.items.concat(group.items);\r\n          targetGroup.labels = targetGroup.labels.concat(group.labels);\r\n          targetGroup.names = targetGroup.names.concat(group.names);\r\n          targetGroup.options = targetGroup.options.concat(group.options);\r\n\r\n          // delete the group\r\n          this.__groups.splice(i, 1);\r\n\r\n          this._groupCounter--;\r\n\r\n          // fire the change event\r\n          this.fireEvent(\"change\");\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Removes the given button from the form.\r\n     *\r\n     * @param button {qx.ui.form.Button} The button to remove.\r\n     * @return {Boolean} <code>true</code>, if the button could be removed.\r\n     */\r\n    removeButton(button) {\r\n      for (var i = 0; i < this._buttons.length; i++) {\r\n        var storedButton = this._buttons[i];\r\n        if (storedButton === button) {\r\n          this._buttons.splice(i, 1);\r\n          this._buttonOptions.splice(i, 1);\r\n          // fire the change event\r\n          this.fireEvent(\"change\");\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Returns all added items as a map.\r\n     *\r\n     * @return {Map} A map containing for every item an entry with its name.\r\n     */\r\n    getItems() {\r\n      var items = {};\r\n      // go threw all groups\r\n      for (var i = 0; i < this.__groups.length; i++) {\r\n        var group = this.__groups[i];\r\n        // get all items\r\n        for (var j = 0; j < group.names.length; j++) {\r\n          var name = group.names[j];\r\n          items[name] = group.items[j];\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n\r\n    /**\r\n     * Return an item by name.\r\n     *\r\n     * @param name {string} Item name.\r\n     * @return {qx.ui.form.IForm|null} The form item or null.\r\n     */\r\n    getItem(name) {\r\n      for (var i = 0; i < this.__groups.length; i++) {\r\n        var group = this.__groups[i];\r\n        for (var j = 0; j < group.names.length; j++) {\r\n          if (group.names[j] === name) {\r\n            return group.items[j];\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       RESET SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Resets the form. This means reseting all form items and the validation.\r\n     */\r\n    reset() {\r\n      this._resetter.reset();\r\n      this._validationManager.reset();\r\n    },\r\n\r\n    /**\r\n     * Redefines the values used for resetting. It calls\r\n     * {@link qx.ui.form.Resetter#redefine} to get that.\r\n     */\r\n    redefineResetter() {\r\n      this._resetter.redefine();\r\n    },\r\n\r\n    /**\r\n     * Redefines the value used for resetting of the given item. It calls\r\n     * {@link qx.ui.form.Resetter#redefineItem} to get that.\r\n     *\r\n     * @param item {qx.ui.core.Widget} The item to redefine.\r\n     */\r\n    redefineResetterItem(item) {\r\n      this._resetter.redefineItem(item);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       VALIDATION\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Validates the form using the\r\n     * {@link qx.ui.form.validation.Manager#validate} method.\r\n     *\r\n     * @return {Boolean|null} The validation result.\r\n     */\r\n    validate() {\r\n      return this._validationManager.validate();\r\n    },\r\n\r\n    /**\r\n     * Returns the internally used validation manager. If you want to do some\r\n     * enhanced validation tasks, you need to use the validation manager.\r\n     *\r\n     * @return {qx.ui.form.validation.Manager} The used manager.\r\n     */\r\n    getValidationManager() {\r\n      return this._validationManager;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       RENDERER SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Accessor method for the renderer which returns all added items in a\r\n     * array containing a map of all items:\r\n     * {title: title, items: [], labels: [], names: []}\r\n     *\r\n     * @return {Array} An array containing all necessary data for the renderer.\r\n     * @internal\r\n     */\r\n    getGroups() {\r\n      return this.__groups;\r\n    },\r\n\r\n    /**\r\n     * Accessor method for the renderer which returns all added buttons in an\r\n     * array.\r\n     * @return {Array} An array containing all added buttons.\r\n     * @internal\r\n     */\r\n    getButtons() {\r\n      return this._buttons;\r\n    },\r\n\r\n    /**\r\n     * Accessor method for the renderer which returns all added options for\r\n     * the buttons in an array.\r\n     * @return {Array} An array containing all added options for the buttons.\r\n     * @internal\r\n     */\r\n    getButtonOptions() {\r\n      return this._buttonOptions;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       INTERNAL\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Creates and returns the used validation manager.\r\n     *\r\n     * @return {qx.ui.form.validation.Manager} The validation manager.\r\n     */\r\n    _createValidationManager() {\r\n      return new qx.ui.form.validation.Manager();\r\n    },\r\n\r\n    /**\r\n     * Creates and returns the used resetter.\r\n     *\r\n     * @return {qx.ui.form.Resetter} the resetter class.\r\n     */\r\n    _createResetter() {\r\n      return new qx.ui.form.Resetter();\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n  destruct() {\r\n    // holding references to widgets --> must set to null\r\n    this.__groups = this._buttons = this._buttonOptions = null;\r\n    this._validationManager.dispose();\r\n    this._resetter.dispose();\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}