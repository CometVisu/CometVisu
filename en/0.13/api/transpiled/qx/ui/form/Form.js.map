{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "__groups",
    "_buttons",
    "_buttonOptions",
    "_validationManager",
    "_createValidationManager",
    "_resetter",
    "_createResetter",
    "events",
    "change",
    "members",
    "_groupCounter",
    "add",
    "item",
    "label",
    "validator",
    "name",
    "validatorContext",
    "options",
    "__isFirstAdd",
    "push",
    "title",
    "items",
    "labels",
    "names",
    "headerOptions",
    "replace",
    "fireEvent",
    "addGroupHeader",
    "addButton",
    "button",
    "length",
    "remove",
    "i",
    "group",
    "j",
    "storedItem",
    "splice",
    "removeGroupHeader",
    "targetGroup",
    "concat",
    "removeButton",
    "storedButton",
    "getItems",
    "getItem",
    "reset",
    "redefineResetter",
    "redefine",
    "redefineResetterItem",
    "redefineItem",
    "validate",
    "getValidationManager",
    "getGroups",
    "getButtons",
    "getButtonOptions",
    "ui",
    "form",
    "validation",
    "Manager",
    "Resetter",
    "destruct",
    "dispose",
    "Form"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Form.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The form object is responsible for managing form items. For that, it takes\n * advantage of two existing qooxdoo classes.\n * The {@link qx.ui.form.Resetter} is used for resetting and the\n * {@link qx.ui.form.validation.Manager} is used for all validation purposes.\n *\n * The view code can be found in the used renderer ({@link qx.ui.form.renderer}).\n */\nqx.Class.define(\"qx.ui.form.Form\", {\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n\n    this.__groups = [];\n    this._buttons = [];\n    this._buttonOptions = [];\n    this._validationManager = this._createValidationManager();\n    this._resetter = this._createResetter();\n  },\n\n  events: {\n    /** Fired as soon as something changes in the form.*/\n    change: \"qx.event.type.Event\"\n  },\n\n  members: {\n    __groups: null,\n    _validationManager: null,\n    _groupCounter: 0,\n    _buttons: null,\n    _buttonOptions: null,\n    _resetter: null,\n\n    /*\n    ---------------------------------------------------------------------------\n       ADD\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a form item to the form including its internal\n     * {@link qx.ui.form.validation.Manager} and {@link qx.ui.form.Resetter}.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param item {qx.ui.form.IForm} A supported form item.\n     * @param label {String} The string, which should be used as label.\n     * @param validator {Function | qx.ui.form.validation.AsyncValidator ? null}\n     *   The validator which is used by the validation\n     *   {@link qx.ui.form.validation.Manager}.\n     * @param name {String?null} The name which is used by the data binding\n     *   controller {@link qx.data.controller.Form}.\n     * @param validatorContext {var?null} The context of the validator.\n     * @param options {Map?null} An additional map containing custom data which\n     *   will be available in your form renderer specific to the added item.\n     */\n    add(item, label, validator, name, validatorContext, options) {\n      if (this.__isFirstAdd()) {\n        this.__groups.push({\n          title: null,\n          items: [],\n          labels: [],\n          names: [],\n          options: [],\n          headerOptions: {}\n        });\n      }\n      // save the given arguments\n      this.__groups[this._groupCounter].items.push(item);\n      this.__groups[this._groupCounter].labels.push(label);\n      this.__groups[this._groupCounter].options.push(options);\n      // if no name is given, use the label without not working character\n      if (name == null) {\n        name = label.replace(\n          /\\s+|&|-|\\+|\\*|\\/|\\||!|\\.|,|:|\\?|;|~|%|\\{|\\}|\\(|\\)|\\[|\\]|<|>|=|\\^|@|\\\\/g,\n          \"\"\n        );\n      }\n      this.__groups[this._groupCounter].names.push(name);\n\n      // add the item to the validation manager\n      this._validationManager.add(item, validator, validatorContext);\n      // add the item to the reset manager\n      this._resetter.add(item);\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n    /**\n     * Adds a group header to the form.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param title {String} The title of the group header.\n     * @param options {Map?null} A special set of custom data which will be\n     *   given to the renderer.\n     */\n    addGroupHeader(title, options) {\n      if (!this.__isFirstAdd()) {\n        this._groupCounter++;\n      }\n      this.__groups.push({\n        title: title,\n        items: [],\n        labels: [],\n        names: [],\n        options: [],\n        headerOptions: options\n      });\n\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n    /**\n     * Adds a button to the form.\n     *\n     * *Hint:* The order of all add calls represent the order in the layout.\n     *\n     * @param button {qx.ui.form.Button} The button to add.\n     * @param options {Map?null} An additional map containing custom data which\n     *   will be available in your form renderer specific to the added button.\n     */\n    addButton(button, options) {\n      this._buttons.push(button);\n      this._buttonOptions.push(options || null);\n      // fire the change event\n      this.fireEvent(\"change\");\n    },\n\n    /**\n     * Returns whether something has already been added.\n     *\n     * @return {Boolean} true, if nothing has been added jet.\n     */\n    __isFirstAdd() {\n      return this.__groups.length === 0;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       REMOVE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes the given item from the form.\n     *\n     * @param item {qx.ui.form.IForm} A supported form item.\n     * @return {Boolean} <code>true</code>, if the item could be removed.\n     */\n    remove(item) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        for (var j = 0; j < group.items.length; j++) {\n          var storedItem = group.items[j];\n          if (storedItem === item) {\n            // remove all stored data\n            group.items.splice(j, 1);\n            group.labels.splice(j, 1);\n            group.names.splice(j, 1);\n            group.options.splice(j, 1);\n\n            // remove the item to the validation manager\n            this._validationManager.remove(item);\n            // remove the item to the reset manager\n            this._resetter.remove(item);\n\n            // fire the change event\n            this.fireEvent(\"change\");\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes the given group header from the form. All items in the group will be moved to\n     * another group (usually the previous group). If there is more than one group with\n     * the same title, only the first group will be removed.\n     *\n     * @param title {String} The title.\n     * @return {Boolean} <code>true</code>, if the header could be removed.\n     */\n    removeGroupHeader(title) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        if (group.title === title) {\n          var targetGroup;\n\n          // if it's the first group\n          if (i == 0) {\n            // if it's the only group\n            if (this.__groups.length == 1) {\n              // remove the title and the header options\n              group.title = null;\n              group.headerOptions = {};\n              // fire the change event\n              this.fireEvent(\"change\");\n              return true;\n            } else {\n              // add to the next\n              targetGroup = this.__groups[i + 1];\n            }\n          } else {\n            // add to the previous group\n            targetGroup = this.__groups[i - 1];\n          }\n\n          // copy the data over\n          targetGroup.items = targetGroup.items.concat(group.items);\n          targetGroup.labels = targetGroup.labels.concat(group.labels);\n          targetGroup.names = targetGroup.names.concat(group.names);\n          targetGroup.options = targetGroup.options.concat(group.options);\n\n          // delete the group\n          this.__groups.splice(i, 1);\n\n          this._groupCounter--;\n\n          // fire the change event\n          this.fireEvent(\"change\");\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes the given button from the form.\n     *\n     * @param button {qx.ui.form.Button} The button to remove.\n     * @return {Boolean} <code>true</code>, if the button could be removed.\n     */\n    removeButton(button) {\n      for (var i = 0; i < this._buttons.length; i++) {\n        var storedButton = this._buttons[i];\n        if (storedButton === button) {\n          this._buttons.splice(i, 1);\n          this._buttonOptions.splice(i, 1);\n          // fire the change event\n          this.fireEvent(\"change\");\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Returns all added items as a map.\n     *\n     * @return {Map} A map containing for every item an entry with its name.\n     */\n    getItems() {\n      var items = {};\n      // go threw all groups\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        // get all items\n        for (var j = 0; j < group.names.length; j++) {\n          var name = group.names[j];\n          items[name] = group.items[j];\n        }\n      }\n      return items;\n    },\n\n    /**\n     * Return an item by name.\n     *\n     * @param name {string} Item name.\n     * @return {qx.ui.form.IForm|null} The form item or null.\n     */\n    getItem(name) {\n      for (var i = 0; i < this.__groups.length; i++) {\n        var group = this.__groups[i];\n        for (var j = 0; j < group.names.length; j++) {\n          if (group.names[j] === name) {\n            return group.items[j];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       RESET SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Resets the form. This means reseting all form items and the validation.\n     */\n    reset() {\n      this._resetter.reset();\n      this._validationManager.reset();\n    },\n\n    /**\n     * Redefines the values used for resetting. It calls\n     * {@link qx.ui.form.Resetter#redefine} to get that.\n     */\n    redefineResetter() {\n      this._resetter.redefine();\n    },\n\n    /**\n     * Redefines the value used for resetting of the given item. It calls\n     * {@link qx.ui.form.Resetter#redefineItem} to get that.\n     *\n     * @param item {qx.ui.core.Widget} The item to redefine.\n     */\n    redefineResetterItem(item) {\n      this._resetter.redefineItem(item);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       VALIDATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Validates the form using the\n     * {@link qx.ui.form.validation.Manager#validate} method.\n     *\n     * @return {Boolean|null} The validation result.\n     */\n    validate() {\n      return this._validationManager.validate();\n    },\n\n    /**\n     * Returns the internally used validation manager. If you want to do some\n     * enhanced validation tasks, you need to use the validation manager.\n     *\n     * @return {qx.ui.form.validation.Manager} The used manager.\n     */\n    getValidationManager() {\n      return this._validationManager;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       RENDERER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Accessor method for the renderer which returns all added items in a\n     * array containing a map of all items:\n     * {title: title, items: [], labels: [], names: []}\n     *\n     * @return {Array} An array containing all necessary data for the renderer.\n     * @internal\n     */\n    getGroups() {\n      return this.__groups;\n    },\n\n    /**\n     * Accessor method for the renderer which returns all added buttons in an\n     * array.\n     * @return {Array} An array containing all added buttons.\n     * @internal\n     */\n    getButtons() {\n      return this._buttons;\n    },\n\n    /**\n     * Accessor method for the renderer which returns all added options for\n     * the buttons in an array.\n     * @return {Array} An array containing all added options for the buttons.\n     * @internal\n     */\n    getButtonOptions() {\n      return this._buttonOptions;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       INTERNAL\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates and returns the used validation manager.\n     *\n     * @return {qx.ui.form.validation.Manager} The validation manager.\n     */\n    _createValidationManager() {\n      return new qx.ui.form.validation.Manager();\n    },\n\n    /**\n     * Creates and returns the used resetter.\n     *\n     * @return {qx.ui.form.Resetter} the resetter class.\n     */\n    _createResetter() {\n      return new qx.ui.form.Resetter();\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct() {\n    // holding references to widgets --> must set to null\n    this.__groups = this._buttons = this._buttonOptions = null;\n    this._validationManager.dispose();\n    this._resetter.dispose();\n  }\n});\n"
  ],
  "mappings": "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"
}