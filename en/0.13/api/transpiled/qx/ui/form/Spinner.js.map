{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/form/Spinner.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "INumberForm",
    "IRange",
    "IForm",
    "include",
    "MContentPadding",
    "MForm",
    "construct",
    "min",
    "value",
    "max",
    "layout",
    "Grid",
    "setColumnFlex",
    "setRowFlex",
    "_setLayout",
    "addListener",
    "_onKeyDown",
    "_onKeyUp",
    "_onRoll",
    "locale",
    "Manager",
    "getInstance",
    "_onChangeLocale",
    "textField",
    "_createChildControl",
    "setMinimum",
    "setMaximum",
    "undefined",
    "setValue",
    "initValue",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "singleStep",
    "check",
    "pageStep",
    "minimum",
    "apply",
    "nullable",
    "maximum",
    "wrap",
    "editable",
    "numberFormat",
    "allowShrinkY",
    "members",
    "__lastValidValue",
    "__pageUpMode",
    "__pageDownMode",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFilter",
    "_getFilterRegExp",
    "addState",
    "setWidth",
    "setFocusable",
    "_onTextChange",
    "_add",
    "column",
    "row",
    "rowSpan",
    "RepeatButton",
    "_countUp",
    "_countDown",
    "decimalSeparator",
    "groupSeparator",
    "getNumberFormat",
    "getLocale",
    "Number",
    "getDecimalSeparator",
    "getGroupSeparator",
    "prefix",
    "postfix",
    "getPrefix",
    "getPostfix",
    "filterRegExp",
    "RegExp",
    "lang",
    "String",
    "escapeRegexpChars",
    "_forwardStates",
    "focused",
    "invalid",
    "tabFocus",
    "field",
    "getChildControl",
    "getFocusElement",
    "focus",
    "selectAllText",
    "_applyMinimum",
    "old",
    "getMaximum",
    "getValue",
    "_updateButtons",
    "_applyMaximum",
    "getMinimum",
    "_applyEnabled",
    "_checkValue",
    "_applyValue",
    "format",
    "_applyEditable",
    "setReadOnly",
    "_applyWrap",
    "_applyNumberFormat",
    "removeListener",
    "_onChangeNumberFormat",
    "_getContentPaddingTarget",
    "upButton",
    "downButton",
    "getEnabled",
    "setEnabled",
    "getWrap",
    "getKeyIdentifier",
    "Data",
    "press",
    "stopPropagation",
    "preventDefault",
    "release",
    "getPointerType",
    "delta",
    "getDelta",
    "y",
    "stop",
    "parse",
    "ex",
    "parseFloat",
    "isNaN",
    "ev",
    "setNumberFormat",
    "textfield",
    "newValue",
    "getPageStep",
    "getSingleStep",
    "diff",
    "gotoValue",
    "Math",
    "destruct",
    "nf",
    "Spinner"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Weiß (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A *spinner* is a control that allows you to adjust a numerical value,\n * typically within an allowed range. An obvious example would be to specify the\n * month of a year as a number in the range 1 - 12.\n *\n * To do so, a spinner encompasses a field to display the current value (a\n * textfield) and controls such as up and down buttons to change that value. The\n * current value can also be changed by editing the display field directly, or\n * using mouse wheel and cursor keys.\n *\n * An optional {@link #numberFormat} property allows you to control the format of\n * how a value can be entered and will be displayed.\n *\n * A brief, but non-trivial example:\n *\n * <pre class='javascript'>\n * var s = new qx.ui.form.Spinner();\n * s.set({\n *   maximum: 3000,\n *   minimum: -3000\n * });\n * var nf = new qx.util.format.NumberFormat();\n * nf.setMaximumFractionDigits(2);\n * s.setNumberFormat(nf);\n * </pre>\n *\n * A spinner instance without any further properties specified in the\n * constructor or a subsequent *set* command will appear with default\n * values and behaviour.\n *\n * @childControl textfield {qx.ui.form.TextField} holds the current value of the spinner\n * @childControl upbutton {qx.ui.form.Button} button to increase the value\n * @childControl downbutton {qx.ui.form.Button} button to decrease the value\n *\n */\nqx.Class.define(\"qx.ui.form.Spinner\",\n{\n  extend : qx.ui.core.Widget,\n  implement : [\n    qx.ui.form.INumberForm,\n    qx.ui.form.IRange,\n    qx.ui.form.IForm\n  ],\n  include : [\n    qx.ui.core.MContentPadding,\n    qx.ui.form.MForm\n  ],\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param min {Number} Minimum value\n   * @param value {Number} Current value\n   * @param max {Number} Maximum value\n   */\n  construct : function(min, value, max)\n  {\n    this.base(arguments);\n\n    // MAIN LAYOUT\n    var layout = new qx.ui.layout.Grid();\n    layout.setColumnFlex(0, 1);\n    layout.setRowFlex(0,1);\n    layout.setRowFlex(1,1);\n    this._setLayout(layout);\n\n    // EVENTS\n    this.addListener(\"keydown\", this._onKeyDown, this);\n    this.addListener(\"keyup\", this._onKeyUp, this);\n    this.addListener(\"roll\", this._onRoll, this);\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n\n    // CREATE CONTROLS\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"upbutton\");\n    this._createChildControl(\"downbutton\");\n\n    // INITIALIZATION\n    if (min != null) {\n      this.setMinimum(min);\n    }\n\n    if (max != null) {\n      this.setMaximum(max);\n    }\n\n    if (value !== undefined) {\n      this.setValue(value);\n    } else {\n      this.initValue();\n    }\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", function(e) {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    }, this);\n\n    this.addListener(\"focusout\", function(e) {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    }, this);\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties:\n  {\n    // overridden\n    appearance:\n    {\n      refine : true,\n      init : \"spinner\"\n    },\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n    /** The amount to increment on each event (keypress or pointerdown) */\n    singleStep:\n    {\n      check : \"Number\",\n      init : 1\n    },\n\n    /** The amount to increment on each pageup/pagedown keypress */\n    pageStep:\n    {\n      check : \"Number\",\n      init : 10\n    },\n\n    /** minimal value of the Range object */\n    minimum:\n    {\n      check : \"Number\",\n      apply : \"_applyMinimum\",\n      init : 0,\n      event: \"changeMinimum\"\n    },\n\n    /** The value of the spinner. */\n    value:\n    {\n      check : \"this._checkValue(value)\",\n      nullable : true,\n      apply : \"_applyValue\",\n      init : 0,\n      event : \"changeValue\"\n    },\n\n    /** maximal value of the Range object */\n    maximum:\n    {\n      check : \"Number\",\n      apply : \"_applyMaximum\",\n      init : 100,\n      event: \"changeMaximum\"\n    },\n\n    /** whether the value should wrap around */\n    wrap:\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyWrap\"\n    },\n\n    /** Controls whether the textfield of the spinner is editable or not */\n    editable :\n    {\n      check : \"Boolean\",\n      init : true,\n      apply : \"_applyEditable\"\n    },\n\n    /** Controls the display of the number in the textfield */\n    numberFormat :\n    {\n      check : \"qx.util.format.NumberFormat\",\n      apply : \"_applyNumberFormat\",\n      nullable : true\n    },\n\n    // overridden\n    allowShrinkY :\n    {\n      refine : true,\n      init : false\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /** Saved last value in case invalid text is entered */\n    __lastValidValue : null,\n\n    /** Whether the page-up button has been pressed */\n    __pageUpMode : false,\n\n    /** Whether the page-down button has been pressed */\n    __pageDownMode : false,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFilter(this._getFilterRegExp());\n          control.addState(\"inner\");\n          control.setWidth(40);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onTextChange, this);\n\n          this._add(control, {column: 0, row: 0, rowSpan: 2});\n          break;\n\n        case \"upbutton\":\n          control = new qx.ui.form.RepeatButton();\n          control.addState(\"inner\");\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._countUp, this);\n          this._add(control, {column: 1, row: 0});\n          break;\n\n        case \"downbutton\":\n          control = new qx.ui.form.RepeatButton();\n          control.addState(\"inner\");\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._countDown, this);\n          this._add(control, {column:1, row: 1});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Returns the regular expression used as the text field's filter\n     *\n     * @return {RegExp} The filter RegExp.\n     */\n    _getFilterRegExp : function()\n    {\n      var decimalSeparator, groupSeparator, locale;\n\n      if (this.getNumberFormat() !== null) {\n        locale = this.getNumberFormat().getLocale();\n      } else {\n        locale = qx.locale.Manager.getInstance().getLocale();\n      }\n\n      decimalSeparator = qx.locale.Number.getDecimalSeparator(locale);\n      groupSeparator = qx.locale.Number.getGroupSeparator(locale);\n\n      var prefix = \"\";\n      var postfix = \"\";\n      if (this.getNumberFormat() !== null) {\n        prefix = this.getNumberFormat().getPrefix() || \"\";\n        postfix = this.getNumberFormat().getPostfix() || \"\";\n      }\n\n      var filterRegExp = new RegExp(\"[0-9\" +\n        qx.lang.String.escapeRegexpChars(decimalSeparator) +\n        qx.lang.String.escapeRegexpChars(groupSeparator) +\n        qx.lang.String.escapeRegexpChars(prefix) +\n        qx.lang.String.escapeRegexpChars(postfix) +\n        \"\\-]\"\n      );\n\n      return filterRegExp;\n    },\n\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true,\n      invalid : true\n    },\n\n\n    // overridden\n    tabFocus : function()\n    {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Apply routine for the minimum property.\n     *\n     * It sets the value of the spinner to the maximum of the current spinner\n     * value and the given min property value.\n     *\n     * @param value {Number} The new value of the min property\n     * @param old {Number} The old value of the min property\n     */\n    _applyMinimum : function(value, old)\n    {\n      if (this.getMaximum() < value) {\n        this.setMaximum(value);\n      }\n\n      if (this.getValue() < value) {\n        this.setValue(value);\n      } else {\n        this._updateButtons();\n      }\n    },\n\n\n    /**\n     * Apply routine for the maximum property.\n     *\n     * It sets the value of the spinner to the minimum of the current spinner\n     * value and the given max property value.\n     *\n     * @param value {Number} The new value of the max property\n     * @param old {Number} The old value of the max property\n     */\n    _applyMaximum : function(value, old)\n    {\n      if (this.getMinimum() > value) {\n        this.setMinimum(value);\n      }\n\n      if (this.getValue() > value) {\n        this.setValue(value);\n      } else {\n        this._updateButtons();\n      }\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      this._updateButtons();\n    },\n\n\n    /**\n     * Check whether the value being applied is allowed.\n     *\n     * If you override this to change the allowed type, you will also\n     * want to override {@link #_applyValue}, {@link #_applyMinimum},\n     * {@link #_applyMaximum}, {@link #_countUp}, {@link #_countDown}, and\n     * {@link #_onTextChange} methods as those cater specifically to numeric\n     * values.\n     *\n     * @param value {var}\n     *   The value being set\n     * @return {Boolean}\n     *   <i>true</i> if the value is allowed;\n     *   <i>false> otherwise.\n     */\n    _checkValue : function(value) {\n      return typeof value === \"number\" && value >= this.getMinimum() && value <= this.getMaximum();\n    },\n\n\n    /**\n     * Apply routine for the value property.\n     *\n     * It disables / enables the buttons and handles the wrap around.\n     *\n     * @param value {Number} The new value of the spinner\n     * @param old {Number} The former value of the spinner\n     */\n    _applyValue: function(value, old)\n    {\n      var textField = this.getChildControl(\"textfield\");\n\n      this._updateButtons();\n\n      // save the last valid value of the spinner\n      this.__lastValidValue = value;\n\n      // write the value of the spinner to the textfield\n      if (value !== null) {\n        if (this.getNumberFormat()) {\n          textField.setValue(this.getNumberFormat().format(value));\n        } else {\n          textField.setValue(value + \"\");\n        }\n      } else {\n        textField.setValue(\"\");\n      }\n    },\n\n\n    /**\n     * Apply routine for the editable property.<br/>\n     * It sets the textfield of the spinner to not read only.\n     *\n     * @param value {Boolean} The new value of the editable property\n     * @param old {Boolean} The former value of the editable property\n     */\n    _applyEditable : function(value, old)\n    {\n      var textField = this.getChildControl(\"textfield\");\n\n      if (textField) {\n        textField.setReadOnly(!value);\n      }\n    },\n\n\n    /**\n     * Apply routine for the wrap property.<br/>\n     * Enables all buttons if the wrapping is enabled.\n     *\n     * @param value {Boolean} The new value of the wrap property\n     * @param old {Boolean} The former value of the wrap property\n     */\n    _applyWrap : function(value, old)\n    {\n      this._updateButtons();\n    },\n\n\n    /**\n     * Apply routine for the numberFormat property.<br/>\n     * When setting a number format, the display of the\n     * value in the text-field will be changed immediately.\n     *\n     * @param value {Boolean} The new value of the numberFormat property\n     * @param old {Boolean} The former value of the numberFormat property\n     */\n    _applyNumberFormat : function(value, old) {\n      var textField = this.getChildControl(\"textfield\");\n      textField.setFilter(this._getFilterRegExp());\n\n      if (old) {\n        old.removeListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n      }\n\n      var numberFormat = this.getNumberFormat();\n      if (numberFormat !== null) {\n        numberFormat.addListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n      }\n\n      this._applyValue(this.__lastValidValue, undefined);\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget : function() {\n      return this.getChildControl(\"textfield\");\n    },\n\n    /**\n     * Checks the min and max values, disables / enables the\n     * buttons and handles the wrap around.\n     */\n    _updateButtons : function() {\n      var upButton = this.getChildControl(\"upbutton\");\n      var downButton = this.getChildControl(\"downbutton\");\n      var value = this.getValue();\n\n      if (!this.getEnabled())\n      {\n        // If Spinner is disabled -> disable buttons\n        upButton.setEnabled(false);\n        downButton.setEnabled(false);\n      }\n      else\n      {\n        if (this.getWrap())\n        {\n          // If wraped -> always enable buttons\n          upButton.setEnabled(true);\n          downButton.setEnabled(true);\n        }\n        else\n        {\n          // check max value\n          if (value !== null && value < this.getMaximum()) {\n            upButton.setEnabled(true);\n          } else {\n            upButton.setEnabled(false);\n          }\n\n          // check min value\n          if (value !== null && value > this.getMinimum()) {\n            downButton.setEnabled(true);\n          } else {\n            downButton.setEnabled(false);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT-HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Callback for \"keyDown\" event.<br/>\n     * Controls the interval mode (\"single\" or \"page\")\n     * and the interval increase by detecting \"Up\"/\"Down\"\n     * and \"PageUp\"/\"PageDown\" keys.<br/>\n     * The corresponding button will be pressed.\n     *\n     * @param e {qx.event.type.KeySequence} keyDown event\n     */\n    _onKeyDown: function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"PageUp\":\n          // mark that the spinner is in page mode and process further\n          this.__pageUpMode = true;\n          this.getChildControl(\"textfield\").fireNonBubblingEvent(\"changeValue\", qx.event.type.Data);\n          this.getChildControl(\"upbutton\").press();\n          break;\n\n        case \"Up\":\n          this.getChildControl(\"textfield\").fireNonBubblingEvent(\"changeValue\", qx.event.type.Data);\n          this.getChildControl(\"upbutton\").press();\n          break;\n\n        case \"PageDown\":\n          // mark that the spinner is in page mode and process further\n          this.__pageDownMode = true;\n          this.getChildControl(\"textfield\").fireNonBubblingEvent(\"changeValue\", qx.event.type.Data);\n          this.getChildControl(\"downbutton\").press();\n          break;\n\n        case \"Down\":\n          this.getChildControl(\"textfield\").fireNonBubblingEvent(\"changeValue\", qx.event.type.Data);\n          this.getChildControl(\"downbutton\").press();\n          break;\n\n        default:\n          // Do not stop unused events\n          return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n\n    /**\n     * Callback for \"keyUp\" event.<br/>\n     * Detecting \"Up\"/\"Down\" and \"PageUp\"/\"PageDown\" keys.<br/>\n     * Releases the button and disabled the page mode, if necessary.\n     *\n     * @param e {qx.event.type.KeySequence} keyUp event\n     */\n    _onKeyUp: function(e)\n    {\n      switch(e.getKeyIdentifier())\n      {\n        case \"PageUp\":\n          this.getChildControl(\"upbutton\").release();\n          this.__pageUpMode = false;\n          break;\n\n        case \"Up\":\n          this.getChildControl(\"upbutton\").release();\n          break;\n\n        case \"PageDown\":\n          this.getChildControl(\"downbutton\").release();\n          this.__pageDownMode = false;\n          break;\n\n        case \"Down\":\n          this.getChildControl(\"downbutton\").release();\n          break;\n      }\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Callback method for the \"roll\" event.<br/>\n     * Increments or decrements the value of the spinner.\n     *\n     * @param e {qx.event.type.Roll} roll event\n     */\n    _onRoll: function(e)\n    {\n      // only wheel\n      if (e.getPointerType() != \"wheel\") {\n        return;\n      }\n      var delta = e.getDelta().y;\n      if (delta < 0) {\n        this._countUp();\n      } else if (delta > 0) {\n        this._countDown();\n      }\n\n      e.stop();\n    },\n\n\n    /**\n     * Callback method for the \"change\" event of the textfield.\n     *\n     * @param e {qx.event.type.Event} text change event or blur event\n     */\n    _onTextChange : function(e)\n    {\n      var textField = this.getChildControl(\"textfield\");\n      var value;\n\n      // if a number format is set\n      if (this.getNumberFormat())\n      {\n        // try to parse the current number using the number format\n        try {\n          value = this.getNumberFormat().parse(textField.getValue());\n        } catch(ex) {\n          // otherwise, process further\n        }\n      }\n\n      if (value === undefined)\n      {\n        // try to parse the number as a float\n        value = parseFloat(textField.getValue());\n      }\n\n      // if the result is a number\n      if (!isNaN(value))\n      {\n        // Fix value if invalid\n        if (value > this.getMaximum()) {\n          value = this.getMaximum();\n        } else if (value < this.getMinimum()) {\n          value = this.getMinimum();\n        }\n\n        // If value is the same than before, call directly _applyValue()\n        if (value === this.__lastValidValue) {\n          this._applyValue(this.__lastValidValue);\n        } else {\n          this.setValue(value);\n        }\n      }\n      else\n      {\n        // otherwise, reset the last valid value\n        this._applyValue(this.__lastValidValue, undefined);\n      }\n    },\n\n\n    /**\n     * Callback method for the locale Manager's \"changeLocale\" event.\n     *\n     * @param ev {qx.event.type.Event} locale change event\n     */\n\n    _onChangeLocale : function(ev)\n    {\n      if (this.getNumberFormat() !== null) {\n        this.setNumberFormat(this.getNumberFormat());\n        var textfield = this.getChildControl(\"textfield\");\n        textfield.setFilter(this._getFilterRegExp());\n        textfield.setValue(this.getNumberFormat().format(this.getValue()));\n      }\n    },\n\n\n    /**\n     * Callback method for the number format's \"changeNumberFormat\" event.\n     *\n     * @param ev {qx.event.type.Event} number format change event\n     */\n    _onChangeNumberFormat : function(ev) {\n      var textfield = this.getChildControl(\"textfield\");\n      textfield.setFilter(this._getFilterRegExp());\n      textfield.setValue(this.getNumberFormat().format(this.getValue()));\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERVAL HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Checks if the spinner is in page mode and counts either the single\n     * or page Step up.\n     *\n     */\n    _countUp: function()\n    {\n      if (this.__pageUpMode) {\n        var newValue = this.getValue() + this.getPageStep();\n      } else {\n        var newValue = this.getValue() + this.getSingleStep();\n      }\n\n      // handle the case where wrapping is enabled\n      if (this.getWrap())\n      {\n        if (newValue > this.getMaximum())\n        {\n          var diff = this.getMaximum() - newValue;\n          newValue = this.getMinimum() - diff - 1;\n        }\n      }\n\n      this.gotoValue(newValue);\n    },\n\n\n    /**\n     * Checks if the spinner is in page mode and counts either the single\n     * or page Step down.\n     *\n     */\n    _countDown: function()\n    {\n      if (this.__pageDownMode) {\n        var newValue = this.getValue() - this.getPageStep();\n      } else {\n        var newValue = this.getValue() - this.getSingleStep();\n      }\n\n      // handle the case where wrapping is enabled\n      if (this.getWrap())\n      {\n        if (newValue < this.getMinimum())\n        {\n          var diff = this.getMinimum() + newValue;\n          newValue = this.getMaximum() + diff + 1;\n        }\n      }\n\n      this.gotoValue(newValue);\n    },\n\n\n    /**\n     * Normalizes the incoming value to be in the valid range and\n     * applies it to the {@link #value} afterwards.\n     *\n     * @param value {Number} Any number\n     * @return {Number} The normalized number\n     */\n    gotoValue : function(value) {\n      return this.setValue(Math.min(this.getMaximum(), Math.max(this.getMinimum(), value)));\n    },\n\n    // overridden\n    focus : function()\n    {\n      this.base(arguments);\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    }\n  },\n\n\n  destruct : function()\n  {\n    var nf = this.getNumberFormat();\n    if (nf) {\n      nf.removeListener(\"changeNumberFormat\", this._onChangeNumberFormat, this);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\"changeLocale\", this._onChangeLocale, this);\n    }\n  }\n});\n"
  ]
}