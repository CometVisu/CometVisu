{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "IStringForm",
    "construct",
    "textField",
    "_createChildControl",
    "getContentElement",
    "setAttribute",
    "addListener",
    "_onTap",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "placeholder",
    "check",
    "nullable",
    "apply",
    "events",
    "changeValue",
    "members",
    "__preSelectedItem",
    "__onInputId",
    "_applyPlaceholder",
    "value",
    "old",
    "getChildControl",
    "setPlaceholder",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_onTextFieldChangeValue",
    "close",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "toggle",
    "setSelectionMode",
    "_forwardStates",
    "focused",
    "invalid",
    "tabFocus",
    "field",
    "getFocusElement",
    "focus",
    "selectAllText",
    "setValue",
    "textfield",
    "getValue",
    "resetValue",
    "_onKeyPress",
    "popup",
    "iden",
    "getKeyIdentifier",
    "isVisible",
    "listIdentifier",
    "_setPreselectedItem",
    "resetAllTextSelection",
    "stop",
    "includes",
    "open",
    "_onListPointerDown",
    "label",
    "getLabel",
    "getFormat",
    "call",
    "translate",
    "_onListChangeSelection",
    "current",
    "getData",
    "length",
    "list",
    "ctx",
    "getSelectionContext",
    "textFieldContentEl",
    "currentContentEl",
    "getAttribute",
    "removeAttribute",
    "_onPopupChangeVisibility",
    "item",
    "findItem",
    "setSelection",
    "resetSelection",
    "removeState",
    "getOldData",
    "fireDataEvent",
    "getTextSelection",
    "getTextSelectionLength",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "ComboBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ComboBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Sebastian Werner (wpbasti)\n     * Jonathan WeiÃŸ (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Basically a text fields which allows a selection from a list of\n * preconfigured options. Allows custom user input. Public API is value\n * oriented.\n *\n * To work with selections without custom input the ideal candidates are\n * the {@link SelectBox} or the {@link RadioGroup}.\n *\n * @childControl textfield {qx.ui.form.TextField} textfield component of the combobox\n * @childControl button {qx.ui.form.Button} button to open the list popup\n * @childControl list {qx.ui.form.List} list inside the popup\n */\nqx.Class.define(\"qx.ui.form.ComboBox\", {\n  extend: qx.ui.form.AbstractSelectBox,\n  implement: [qx.ui.form.IStringForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"combobox\");\n\n    this.addListener(\"tap\", this._onTap);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", e => {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    });\n\n    this.addListener(\"focusout\", e => {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    });\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"combobox\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Whenever the value is changed this event is fired\n     *\n     *  Event data: The new text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __preSelectedItem: null,\n    __onInputId: null,\n\n    // property apply\n    _applyPlaceholder(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          control.addListener(\n            \"changeValue\",\n            this._onTextFieldChangeValue,\n            this\n          );\n\n          control.addListener(\"blur\", this.close, this);\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n\n        case \"list\":\n          // Get the list from the AbstractSelectBox\n          control = super._createChildControlImpl(id);\n\n          // Change selection mode\n          control.setSelectionMode(\"single\");\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      invalid: true\n    },\n\n    // overridden\n    tabFocus() {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n    // overridden\n    focus() {\n      super.focus();\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    // interface implementation\n    setValue(value) {\n      var textfield = this.getChildControl(\"textfield\");\n      if (textfield.getValue() == value) {\n        return;\n      }\n\n      // Apply to text field\n      textfield.setValue(value);\n    },\n\n    // interface implementation\n    getValue() {\n      return this.getChildControl(\"textfield\").getValue();\n    },\n\n    // interface implementation\n    resetValue() {\n      this.getChildControl(\"textfield\").setValue(null);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onKeyPress(e) {\n      var popup = this.getChildControl(\"popup\");\n      var iden = e.getKeyIdentifier();\n\n      if (popup.isVisible()) {\n        const listIdentifier = [\n          \"Up\",\n          \"Down\",\n          \"PageUp\",\n          \"PageDown\",\n          \"Escape\",\n          \"Tab\"\n        ];\n\n        if (iden == \"Enter\") {\n          this._setPreselectedItem();\n          this.resetAllTextSelection();\n          this.close();\n          e.stop();\n        } else if (listIdentifier.includes(iden)) {\n          super._onKeyPress(e);\n        } else {\n          this.close();\n        }\n      } else {\n        if (iden == \"Down\") {\n          this.getChildControl(\"button\").addState(\"selected\");\n          this.open();\n          e.stop();\n        }\n      }\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer tap event\n     */\n    _onTap(e) {\n      this.close();\n    },\n\n    // overridden\n    _onListPointerDown(e) {\n      this._setPreselectedItem();\n    },\n\n    /**\n     * Apply pre-selected item\n     */\n    _setPreselectedItem() {\n      if (this.__preSelectedItem) {\n        var label = this.__preSelectedItem.getLabel();\n\n        if (this.getFormat() != null) {\n          label = this.getFormat().call(this, this.__preSelectedItem);\n        }\n\n        // check for translation\n        if (label && label.translate) {\n          label = label.translate();\n        }\n        this.setValue(label);\n        this.__preSelectedItem = null;\n      }\n    },\n\n    // overridden\n    _onListChangeSelection(e) {\n      var current = e.getData();\n      if (current.length > 0) {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var list = this.getChildControl(\"list\");\n        var ctx = list.getSelectionContext();\n        if (ctx == \"quick\" || ctx == \"key\") {\n          this.__preSelectedItem = current[0];\n        } else {\n          var label = current[0].getLabel();\n\n          if (this.getFormat() != null) {\n            label = this.getFormat().call(this, current[0]);\n          }\n\n          // check for translation\n          if (label && label.translate) {\n            label = label.translate();\n          }\n          this.setValue(label);\n          this.__preSelectedItem = null;\n        }\n      }\n\n      // Set aria-activedescendant\n      const textFieldContentEl =\n        this.getChildControl(\"textfield\").getContentElement();\n      if (!textFieldContentEl) {\n        return;\n      }\n      const currentContentEl =\n        current && current[0] ? current[0].getContentElement() : null;\n      if (currentContentEl) {\n        textFieldContentEl.setAttribute(\n          \"aria-activedescendant\",\n          currentContentEl.getAttribute(\"id\")\n        );\n      } else {\n        textFieldContentEl.removeAttribute(\"aria-activedescendant\");\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility(e) {\n      super._onPopupChangeVisibility(e);\n\n      // Synchronize the list with the current value on every\n      // opening of the popup. This is useful because through\n      // the quick selection mode, the list may keep an invalid\n      // selection on close or the user may enter text while\n      // the combobox is closed and reopen it afterwards.\n      var popup = this.getChildControl(\"popup\");\n      if (popup.isVisible()) {\n        var list = this.getChildControl(\"list\");\n        var value = this.getValue();\n        var item = null;\n\n        if (value) {\n          item = list.findItem(value);\n        }\n\n        if (item) {\n          list.setSelection([item]);\n        } else {\n          list.resetSelection();\n        }\n      }\n\n      // In all cases: Remove focused state from button\n      this.getChildControl(\"button\").removeState(\"selected\");\n    },\n\n    /**\n     * Reacts on value changes of the text field and syncs the\n     * value to the combobox.\n     *\n     * @param e {qx.event.type.Data} Change event\n     */\n    _onTextFieldChangeValue(e) {\n      var value = e.getData();\n\n      var list = this.getChildControl(\"list\");\n      let current = null;\n      if (value != null) {\n        // Select item when possible\n        current = list.findItem(value, false);\n        if (current) {\n          list.setSelection([current]);\n        } else {\n          list.resetSelection();\n        }\n      } else {\n        list.resetSelection();\n      }\n\n      // ARIA attrs\n      const old = e.getOldData() ? list.findItem(e.getOldData(), false) : null;\n      if (old && old !== current) {\n        old.getContentElement().setAttribute(\"aria-selected\", false);\n      }\n      if (current) {\n        current.getContentElement().setAttribute(\"aria-selected\", true);\n      }\n\n      // Fire event\n      this.fireDataEvent(\"changeValue\", value, e.getOldData());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection() {\n      return this.getChildControl(\"textfield\").getTextSelection();\n    },\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength() {\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\n    },\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection(start, end) {\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\n    },\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection() {\n      this.getChildControl(\"textfield\").clearTextSelection();\n    },\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText() {\n      this.getChildControl(\"textfield\").selectAllText();\n    },\n\n    /**\n     * Clear any text selection, then select all text\n     *\n     */\n    resetAllTextSelection() {\n      this.clearTextSelection();\n      this.selectAllText();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}