{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "IStringForm",
    "construct",
    "constructor",
    "call",
    "textField",
    "_createChildControl",
    "getContentElement",
    "setAttribute",
    "addListener",
    "_onTap",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "properties",
    "appearance",
    "refine",
    "init",
    "placeholder",
    "check",
    "nullable",
    "apply",
    "events",
    "changeValue",
    "members",
    "__preSelectedItem",
    "__onInputId",
    "_applyPlaceholder",
    "value",
    "old",
    "getChildControl",
    "setPlaceholder",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_onTextFieldChangeValue",
    "close",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "toggle",
    "ComboBox",
    "superclass",
    "prototype",
    "setSelectionMode",
    "_forwardStates",
    "focused",
    "invalid",
    "tabFocus",
    "field",
    "getFocusElement",
    "focus",
    "selectAllText",
    "setValue",
    "textfield",
    "getValue",
    "resetValue",
    "_onKeyPress",
    "popup",
    "iden",
    "getKeyIdentifier",
    "isVisible",
    "listIdentifier",
    "_setPreselectedItem",
    "resetAllTextSelection",
    "stop",
    "includes",
    "open",
    "_onListPointerDown",
    "label",
    "getLabel",
    "getFormat",
    "translate",
    "_onListChangeSelection",
    "current",
    "getData",
    "length",
    "list",
    "ctx",
    "getSelectionContext",
    "textFieldContentEl",
    "currentContentEl",
    "getAttribute",
    "removeAttribute",
    "_onPopupChangeVisibility",
    "item",
    "findItem",
    "setSelection",
    "resetSelection",
    "removeState",
    "getOldData",
    "fireDataEvent",
    "getTextSelection",
    "getTextSelectionLength",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/ComboBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n     * Sebastian Werner (wpbasti)\r\n     * Jonathan WeiÃŸ (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Basically a text fields which allows a selection from a list of\r\n * preconfigured options. Allows custom user input. Public API is value\r\n * oriented.\r\n *\r\n * To work with selections without custom input the ideal candidates are\r\n * the {@link SelectBox} or the {@link RadioGroup}.\r\n *\r\n * @childControl textfield {qx.ui.form.TextField} textfield component of the combobox\r\n * @childControl button {qx.ui.form.Button} button to open the list popup\r\n * @childControl list {qx.ui.form.List} list inside the popup\r\n */\r\nqx.Class.define(\"qx.ui.form.ComboBox\", {\r\n  extend: qx.ui.form.AbstractSelectBox,\r\n  implement: [qx.ui.form.IStringForm],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n\r\n    var textField = this._createChildControl(\"textfield\");\r\n    this._createChildControl(\"button\");\r\n\r\n    // ARIA attrs\r\n    this.getContentElement().setAttribute(\"role\", \"combobox\");\r\n\r\n    this.addListener(\"tap\", this._onTap);\r\n\r\n    // forward the focusin and focusout events to the textfield. The textfield\r\n    // is not focusable so the events need to be forwarded manually.\r\n    this.addListener(\"focusin\", e => {\r\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\r\n    });\r\n\r\n    this.addListener(\"focusout\", e => {\r\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\r\n    });\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"combobox\"\r\n    },\r\n\r\n    /**\r\n     * String value which will be shown as a hint if the field is all of:\r\n     * unset, unfocused and enabled. Set to null to not show a placeholder\r\n     * text.\r\n     */\r\n    placeholder: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      apply: \"_applyPlaceholder\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Whenever the value is changed this event is fired\r\n     *\r\n     *  Event data: The new text value of the field.\r\n     */\r\n    changeValue: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    __preSelectedItem: null,\r\n    __onInputId: null,\r\n\r\n    // property apply\r\n    _applyPlaceholder(value, old) {\r\n      this.getChildControl(\"textfield\").setPlaceholder(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"textfield\":\r\n          control = new qx.ui.form.TextField();\r\n          control.setFocusable(false);\r\n          control.addState(\"inner\");\r\n          control.addListener(\r\n            \"changeValue\",\r\n            this._onTextFieldChangeValue,\r\n            this\r\n          );\r\n\r\n          control.addListener(\"blur\", this.close, this);\r\n          this._add(control, { flex: 1 });\r\n          break;\r\n\r\n        case \"button\":\r\n          control = new qx.ui.form.Button();\r\n          control.setFocusable(false);\r\n          control.setKeepActive(true);\r\n          control.addState(\"inner\");\r\n          control.addListener(\"execute\", this.toggle, this);\r\n          this._add(control);\r\n          break;\r\n\r\n        case \"list\":\r\n          // Get the list from the AbstractSelectBox\r\n          control = super._createChildControlImpl(id);\r\n\r\n          // Change selection mode\r\n          control.setSelectionMode(\"single\");\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id);\r\n    },\r\n\r\n    // overridden\r\n    /**\r\n     * @lint ignoreReferenceField(_forwardStates)\r\n     */\r\n    _forwardStates: {\r\n      focused: true,\r\n      invalid: true\r\n    },\r\n\r\n    // overridden\r\n    tabFocus() {\r\n      var field = this.getChildControl(\"textfield\");\r\n\r\n      field.getFocusElement().focus();\r\n      field.selectAllText();\r\n    },\r\n\r\n    // overridden\r\n    focus() {\r\n      super.focus();\r\n      this.getChildControl(\"textfield\").getFocusElement().focus();\r\n    },\r\n\r\n    // interface implementation\r\n    setValue(value) {\r\n      var textfield = this.getChildControl(\"textfield\");\r\n      if (textfield.getValue() == value) {\r\n        return;\r\n      }\r\n\r\n      // Apply to text field\r\n      textfield.setValue(value);\r\n    },\r\n\r\n    // interface implementation\r\n    getValue() {\r\n      return this.getChildControl(\"textfield\").getValue();\r\n    },\r\n\r\n    // interface implementation\r\n    resetValue() {\r\n      this.getChildControl(\"textfield\").setValue(null);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _onKeyPress(e) {\r\n      var popup = this.getChildControl(\"popup\");\r\n      var iden = e.getKeyIdentifier();\r\n\r\n      if (popup.isVisible()) {\r\n        const listIdentifier = [\r\n          \"Up\",\r\n          \"Down\",\r\n          \"PageUp\",\r\n          \"PageDown\",\r\n          \"Escape\",\r\n          \"Tab\"\r\n        ];\r\n\r\n        if (iden == \"Enter\") {\r\n          this._setPreselectedItem();\r\n          this.resetAllTextSelection();\r\n          this.close();\r\n          e.stop();\r\n        } else if (listIdentifier.includes(iden)) {\r\n          super._onKeyPress(e);\r\n        } else {\r\n          this.close();\r\n        }\r\n      } else {\r\n        if (iden == \"Down\") {\r\n          this.getChildControl(\"button\").addState(\"selected\");\r\n          this.open();\r\n          e.stop();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles the popup's visibility.\r\n     *\r\n     * @param e {qx.event.type.Pointer} Pointer tap event\r\n     */\r\n    _onTap(e) {\r\n      this.close();\r\n    },\r\n\r\n    // overridden\r\n    _onListPointerDown(e) {\r\n      this._setPreselectedItem();\r\n    },\r\n\r\n    /**\r\n     * Apply pre-selected item\r\n     */\r\n    _setPreselectedItem() {\r\n      if (this.__preSelectedItem) {\r\n        var label = this.__preSelectedItem.getLabel();\r\n\r\n        if (this.getFormat() != null) {\r\n          label = this.getFormat().call(this, this.__preSelectedItem);\r\n        }\r\n\r\n        // check for translation\r\n        if (label && label.translate) {\r\n          label = label.translate();\r\n        }\r\n        this.setValue(label);\r\n        this.__preSelectedItem = null;\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _onListChangeSelection(e) {\r\n      var current = e.getData();\r\n      if (current.length > 0) {\r\n        // Ignore quick context (e.g. pointerover)\r\n        // and configure the new value when closing the popup afterwards\r\n        var list = this.getChildControl(\"list\");\r\n        var ctx = list.getSelectionContext();\r\n        if (ctx == \"quick\" || ctx == \"key\") {\r\n          this.__preSelectedItem = current[0];\r\n        } else {\r\n          var label = current[0].getLabel();\r\n\r\n          if (this.getFormat() != null) {\r\n            label = this.getFormat().call(this, current[0]);\r\n          }\r\n\r\n          // check for translation\r\n          if (label && label.translate) {\r\n            label = label.translate();\r\n          }\r\n          this.setValue(label);\r\n          this.__preSelectedItem = null;\r\n        }\r\n      }\r\n\r\n      // Set aria-activedescendant\r\n      const textFieldContentEl =\r\n        this.getChildControl(\"textfield\").getContentElement();\r\n      if (!textFieldContentEl) {\r\n        return;\r\n      }\r\n      const currentContentEl =\r\n        current && current[0] ? current[0].getContentElement() : null;\r\n      if (currentContentEl) {\r\n        textFieldContentEl.setAttribute(\r\n          \"aria-activedescendant\",\r\n          currentContentEl.getAttribute(\"id\")\r\n        );\r\n      } else {\r\n        textFieldContentEl.removeAttribute(\"aria-activedescendant\");\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _onPopupChangeVisibility(e) {\r\n      super._onPopupChangeVisibility(e);\r\n\r\n      // Synchronize the list with the current value on every\r\n      // opening of the popup. This is useful because through\r\n      // the quick selection mode, the list may keep an invalid\r\n      // selection on close or the user may enter text while\r\n      // the combobox is closed and reopen it afterwards.\r\n      var popup = this.getChildControl(\"popup\");\r\n      if (popup.isVisible()) {\r\n        var list = this.getChildControl(\"list\");\r\n        var value = this.getValue();\r\n        var item = null;\r\n\r\n        if (value) {\r\n          item = list.findItem(value);\r\n        }\r\n\r\n        if (item) {\r\n          list.setSelection([item]);\r\n        } else {\r\n          list.resetSelection();\r\n        }\r\n      }\r\n\r\n      // In all cases: Remove focused state from button\r\n      this.getChildControl(\"button\").removeState(\"selected\");\r\n    },\r\n\r\n    /**\r\n     * Reacts on value changes of the text field and syncs the\r\n     * value to the combobox.\r\n     *\r\n     * @param e {qx.event.type.Data} Change event\r\n     */\r\n    _onTextFieldChangeValue(e) {\r\n      var value = e.getData();\r\n\r\n      var list = this.getChildControl(\"list\");\r\n      let current = null;\r\n      if (value != null) {\r\n        // Select item when possible\r\n        current = list.findItem(value, false);\r\n        if (current) {\r\n          list.setSelection([current]);\r\n        } else {\r\n          list.resetSelection();\r\n        }\r\n      } else {\r\n        list.resetSelection();\r\n      }\r\n\r\n      // ARIA attrs\r\n      const old = e.getOldData() ? list.findItem(e.getOldData(), false) : null;\r\n      if (old && old !== current) {\r\n        old.getContentElement().setAttribute(\"aria-selected\", false);\r\n      }\r\n      if (current) {\r\n        current.getContentElement().setAttribute(\"aria-selected\", true);\r\n      }\r\n\r\n      // Fire event\r\n      this.fireDataEvent(\"changeValue\", value, e.getOldData());\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      TEXTFIELD SELECTION API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the current selection.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @return {String|null}\r\n     */\r\n    getTextSelection() {\r\n      return this.getChildControl(\"textfield\").getTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Returns the current selection length.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @return {Integer|null}\r\n     */\r\n    getTextSelectionLength() {\r\n      return this.getChildControl(\"textfield\").getTextSelectionLength();\r\n    },\r\n\r\n    /**\r\n     * Set the selection to the given start and end (zero-based).\r\n     * If no end value is given the selection will extend to the\r\n     * end of the textfield's content.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     * @param start {Integer} start of the selection (zero-based)\r\n     * @param end {Integer} end of the selection\r\n     */\r\n    setTextSelection(start, end) {\r\n      this.getChildControl(\"textfield\").setTextSelection(start, end);\r\n    },\r\n\r\n    /**\r\n     * Clears the current selection.\r\n     * This method only works if the widget is already created and\r\n     * added to the document.\r\n     *\r\n     */\r\n    clearTextSelection() {\r\n      this.getChildControl(\"textfield\").clearTextSelection();\r\n    },\r\n\r\n    /**\r\n     * Selects the whole content\r\n     *\r\n     */\r\n    selectAllText() {\r\n      this.getChildControl(\"textfield\").selectAllText();\r\n    },\r\n\r\n    /**\r\n     * Clear any text selection, then select all text\r\n     *\r\n     */\r\n    resetAllTextSelection() {\r\n      this.clearTextSelection();\r\n      this.selectAllText();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}