{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "menu",
    "command",
    "constructor",
    "call",
    "getContentElement",
    "setAttribute",
    "_setLayout",
    "layout",
    "HBox",
    "_createChildControl",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onKeyDown",
    "_onKeyUp",
    "setLabel",
    "setIcon",
    "setMenu",
    "setCommand",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "apply",
    "nullable",
    "check",
    "themeable",
    "show",
    "inheritable",
    "event",
    "members",
    "__cursorIsOut",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Button",
    "_onButtonExecute",
    "setFocusable",
    "_addAt",
    "flex",
    "MenuButton",
    "setShow",
    "SplitButton",
    "superclass",
    "prototype",
    "_forwardStates",
    "hovered",
    "focused",
    "_applyLabel",
    "value",
    "old",
    "button",
    "getChildControl",
    "resetLabel",
    "_applyIcon",
    "resetIcon",
    "_applyMenu",
    "arrow",
    "resetEnabled",
    "setOpener",
    "_onChangeMenuVisibility",
    "setEnabled",
    "resetMenu",
    "removeListener",
    "resetOpener",
    "_applyShow",
    "e",
    "stopPropagation",
    "addState",
    "hasState",
    "related",
    "getRelatedTarget",
    "contains",
    "getMenu",
    "isVisible",
    "removeState",
    "getKeyIdentifier",
    "execute"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/SplitButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A button which acts as a normal button and shows a menu on one\r\n * of the sides to open something like a history list.\r\n *\r\n * @childControl button {qx.ui.form.Button} button to execute action\r\n * @childControl arrow {qx.ui.form.MenuButton} arrow to open the popup\r\n */\r\nqx.Class.define(\"qx.ui.form.SplitButton\", {\r\n  extend: qx.ui.core.Widget,\r\n  include: [qx.ui.core.MExecutable],\r\n  implement: [qx.ui.form.IExecutable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param label {String} Label to use\r\n   * @param icon {String?null} Icon to use\r\n   * @param menu {qx.ui.menu.Menu} Connect to menu instance\r\n   * @param command {qx.ui.command.Command} Command instance to connect with\r\n   */\r\n  construct(label, icon, menu, command) {\r\n    super();\r\n\r\n    // ARIA attrs\r\n    this.getContentElement().setAttribute(\"role\", \"button\");\r\n\r\n    this._setLayout(new qx.ui.layout.HBox());\r\n\r\n    // Force arrow creation\r\n    this._createChildControl(\"arrow\");\r\n\r\n    // Add pointer listeners\r\n    this.addListener(\"pointerover\", this._onPointerOver, this, true);\r\n    this.addListener(\"pointerout\", this._onPointerOut, this, true);\r\n\r\n    // Add key listeners\r\n    this.addListener(\"keydown\", this._onKeyDown);\r\n    this.addListener(\"keyup\", this._onKeyUp);\r\n\r\n    // Process incoming arguments\r\n    if (label != null) {\r\n      this.setLabel(label);\r\n    }\r\n\r\n    if (icon != null) {\r\n      this.setIcon(icon);\r\n    }\r\n\r\n    if (menu != null) {\r\n      this.setMenu(menu);\r\n    }\r\n\r\n    if (command != null) {\r\n      this.setCommand(command);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"splitbutton\"\r\n    },\r\n\r\n    // overridden\r\n    focusable: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    /** The label/caption/text of the qx.ui.basic.Atom instance */\r\n    label: {\r\n      apply: \"_applyLabel\",\r\n      nullable: true,\r\n      check: \"String\"\r\n    },\r\n\r\n    /** Any URI String supported by qx.ui.basic.Image to display an icon */\r\n    icon: {\r\n      check: \"String\",\r\n      apply: \"_applyIcon\",\r\n      nullable: true,\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * Configure the visibility of the sub elements/widgets.\r\n     * Possible values: both, text, icon\r\n     */\r\n    show: {\r\n      init: \"both\",\r\n      check: [\"both\", \"label\", \"icon\"],\r\n      themeable: true,\r\n      inheritable: true,\r\n      apply: \"_applyShow\",\r\n      event: \"changeShow\"\r\n    },\r\n\r\n    /** The menu instance to show when tapping on the button */\r\n    menu: {\r\n      check: \"qx.ui.menu.Menu\",\r\n      nullable: true,\r\n      apply: \"_applyMenu\",\r\n      event: \"changeMenu\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __cursorIsOut: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"button\":\r\n          control = new qx.ui.form.Button();\r\n          control.addListener(\"execute\", this._onButtonExecute, this);\r\n          control.setFocusable(false);\r\n          this._addAt(control, 0, { flex: 1 });\r\n          break;\r\n\r\n        case \"arrow\":\r\n          control = new qx.ui.form.MenuButton();\r\n          control.setFocusable(false);\r\n          control.setShow(\"both\");\r\n          this._addAt(control, 1);\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id);\r\n    },\r\n\r\n    // overridden\r\n    /**\r\n     * @lint ignoreReferenceField(_forwardStates)\r\n     */\r\n    _forwardStates: {\r\n      hovered: 1,\r\n      focused: 1\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyLabel(value, old) {\r\n      var button = this.getChildControl(\"button\");\r\n      value == null ? button.resetLabel() : button.setLabel(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyIcon(value, old) {\r\n      var button = this.getChildControl(\"button\");\r\n      value == null ? button.resetIcon() : button.setIcon(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyMenu(value, old) {\r\n      var arrow = this.getChildControl(\"arrow\");\r\n\r\n      if (value) {\r\n        arrow.resetEnabled();\r\n        arrow.setMenu(value);\r\n        value.setOpener(this);\r\n\r\n        value.addListener(\r\n          \"changeVisibility\",\r\n          this._onChangeMenuVisibility,\r\n          this\r\n        );\r\n      } else {\r\n        arrow.setEnabled(false);\r\n        arrow.resetMenu();\r\n      }\r\n\r\n      if (old) {\r\n        old.removeListener(\r\n          \"changeVisibility\",\r\n          this._onChangeMenuVisibility,\r\n          this\r\n        );\r\n\r\n        old.resetOpener();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyShow(value, old) {\r\n      // pass: is already inherited to the button\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Listener for <code>pointerover</code> event\r\n     *\r\n     * @param e {qx.event.type.Pointer} pointerover event\r\n     */\r\n    _onPointerOver(e) {\r\n      // Captured listener\r\n      // Whole stop for event, do not let the\r\n      // inner buttons know about this event.\r\n      e.stopPropagation();\r\n\r\n      // Add hover state, is forwarded to the buttons\r\n      this.addState(\"hovered\");\r\n\r\n      // Delete cursor out flag\r\n      delete this.__cursorIsOut;\r\n    },\r\n\r\n    /**\r\n     * Listener for <code>pointerout</code> event\r\n     *\r\n     * @param e {qx.event.type.Pointer} pointerout event\r\n     */\r\n    _onPointerOut(e) {\r\n      // Captured listener\r\n      // Whole stop for event, do not let the\r\n      // inner buttons know about this event.\r\n      e.stopPropagation();\r\n\r\n      // First simple state check\r\n      if (!this.hasState(\"hovered\")) {\r\n        return;\r\n      }\r\n\r\n      // Only when the related target is not part of the button\r\n      var related = e.getRelatedTarget();\r\n      if (qx.ui.core.Widget.contains(this, related)) {\r\n        return;\r\n      }\r\n\r\n      // When the menu is visible (cursor moved to the menu)\r\n      // keep the hover state on the whole button\r\n      var menu = this.getMenu();\r\n      if (menu && menu.isVisible()) {\r\n        this.__cursorIsOut = true;\r\n        return;\r\n      }\r\n\r\n      // Finally remove state\r\n      this.removeState(\"hovered\");\r\n    },\r\n\r\n    /**\r\n     * Event listener for all keyboard events\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Event object\r\n     */\r\n    _onKeyDown(e) {\r\n      var button = this.getChildControl(\"button\");\r\n      switch (e.getKeyIdentifier()) {\r\n        case \"Enter\":\r\n        case \"Space\":\r\n          button.removeState(\"abandoned\");\r\n          button.addState(\"pressed\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for all keyboard events\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Event object\r\n     */\r\n    _onKeyUp(e) {\r\n      var button = this.getChildControl(\"button\");\r\n      switch (e.getKeyIdentifier()) {\r\n        case \"Enter\":\r\n        case \"Space\":\r\n          if (button.hasState(\"pressed\")) {\r\n            button.removeState(\"abandoned\");\r\n            button.removeState(\"pressed\");\r\n            button.execute();\r\n          }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for button's execute event.\r\n     *\r\n     * @param e {qx.event.type.Event} execute event of the button\r\n     */\r\n    _onButtonExecute(e) {\r\n      // forward execute event\r\n      this.execute();\r\n    },\r\n\r\n    /**\r\n     * Event listener for visibility changes of the menu\r\n     *\r\n     * @param e {qx.event.type.Data} property change event\r\n     */\r\n    _onChangeMenuVisibility(e) {\r\n      if (!this.getMenu().isVisible() && this.__cursorIsOut) {\r\n        this.removeState(\"hovered\");\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}