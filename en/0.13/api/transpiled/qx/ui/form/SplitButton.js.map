{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "menu",
    "command",
    "getContentElement",
    "setAttribute",
    "_setLayout",
    "layout",
    "HBox",
    "_createChildControl",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onKeyDown",
    "_onKeyUp",
    "setLabel",
    "setIcon",
    "setMenu",
    "setCommand",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "apply",
    "nullable",
    "check",
    "themeable",
    "show",
    "inheritable",
    "event",
    "members",
    "__cursorIsOut",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Button",
    "_onButtonExecute",
    "setFocusable",
    "_addAt",
    "flex",
    "MenuButton",
    "setShow",
    "_forwardStates",
    "hovered",
    "focused",
    "_applyLabel",
    "value",
    "old",
    "button",
    "getChildControl",
    "resetLabel",
    "_applyIcon",
    "resetIcon",
    "_applyMenu",
    "arrow",
    "resetEnabled",
    "setOpener",
    "_onChangeMenuVisibility",
    "setEnabled",
    "resetMenu",
    "removeListener",
    "resetOpener",
    "_applyShow",
    "e",
    "stopPropagation",
    "addState",
    "hasState",
    "related",
    "getRelatedTarget",
    "contains",
    "getMenu",
    "isVisible",
    "removeState",
    "getKeyIdentifier",
    "execute",
    "SplitButton"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/SplitButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A button which acts as a normal button and shows a menu on one\n * of the sides to open something like a history list.\n *\n * @childControl button {qx.ui.form.Button} button to execute action\n * @childControl arrow {qx.ui.form.MenuButton} arrow to open the popup\n */\nqx.Class.define(\"qx.ui.form.SplitButton\", {\n  extend: qx.ui.core.Widget,\n  include: [qx.ui.core.MExecutable],\n  implement: [qx.ui.form.IExecutable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   * @param menu {qx.ui.menu.Menu} Connect to menu instance\n   * @param command {qx.ui.command.Command} Command instance to connect with\n   */\n  construct(label, icon, menu, command) {\n    super();\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"button\");\n\n    this._setLayout(new qx.ui.layout.HBox());\n\n    // Force arrow creation\n    this._createChildControl(\"arrow\");\n\n    // Add pointer listeners\n    this.addListener(\"pointerover\", this._onPointerOver, this, true);\n    this.addListener(\"pointerout\", this._onPointerOut, this, true);\n\n    // Add key listeners\n    this.addListener(\"keydown\", this._onKeyDown);\n    this.addListener(\"keyup\", this._onKeyUp);\n\n    // Process incoming arguments\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    if (command != null) {\n      this.setCommand(command);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"splitbutton\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /** The label/caption/text of the qx.ui.basic.Atom instance */\n    label: {\n      apply: \"_applyLabel\",\n      nullable: true,\n      check: \"String\"\n    },\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon */\n    icon: {\n      check: \"String\",\n      apply: \"_applyIcon\",\n      nullable: true,\n      themeable: true\n    },\n\n    /**\n     * Configure the visibility of the sub elements/widgets.\n     * Possible values: both, text, icon\n     */\n    show: {\n      init: \"both\",\n      check: [\"both\", \"label\", \"icon\"],\n      themeable: true,\n      inheritable: true,\n      apply: \"_applyShow\",\n      event: \"changeShow\"\n    },\n\n    /** The menu instance to show when tapping on the button */\n    menu: {\n      check: \"qx.ui.menu.Menu\",\n      nullable: true,\n      apply: \"_applyMenu\",\n      event: \"changeMenu\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __cursorIsOut: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.addListener(\"execute\", this._onButtonExecute, this);\n          control.setFocusable(false);\n          this._addAt(control, 0, { flex: 1 });\n          break;\n\n        case \"arrow\":\n          control = new qx.ui.form.MenuButton();\n          control.setFocusable(false);\n          control.setShow(\"both\");\n          this._addAt(control, 1);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      hovered: 1,\n      focused: 1\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyLabel(value, old) {\n      var button = this.getChildControl(\"button\");\n      value == null ? button.resetLabel() : button.setLabel(value);\n    },\n\n    // property apply\n    _applyIcon(value, old) {\n      var button = this.getChildControl(\"button\");\n      value == null ? button.resetIcon() : button.setIcon(value);\n    },\n\n    // property apply\n    _applyMenu(value, old) {\n      var arrow = this.getChildControl(\"arrow\");\n\n      if (value) {\n        arrow.resetEnabled();\n        arrow.setMenu(value);\n        value.setOpener(this);\n\n        value.addListener(\n          \"changeVisibility\",\n          this._onChangeMenuVisibility,\n          this\n        );\n      } else {\n        arrow.setEnabled(false);\n        arrow.resetMenu();\n      }\n\n      if (old) {\n        old.removeListener(\n          \"changeVisibility\",\n          this._onChangeMenuVisibility,\n          this\n        );\n\n        old.resetOpener();\n      }\n    },\n\n    // property apply\n    _applyShow(value, old) {\n      // pass: is already inherited to the button\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener for <code>pointerover</code> event\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    _onPointerOver(e) {\n      // Captured listener\n      // Whole stop for event, do not let the\n      // inner buttons know about this event.\n      e.stopPropagation();\n\n      // Add hover state, is forwarded to the buttons\n      this.addState(\"hovered\");\n\n      // Delete cursor out flag\n      delete this.__cursorIsOut;\n    },\n\n    /**\n     * Listener for <code>pointerout</code> event\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    _onPointerOut(e) {\n      // Captured listener\n      // Whole stop for event, do not let the\n      // inner buttons know about this event.\n      e.stopPropagation();\n\n      // First simple state check\n      if (!this.hasState(\"hovered\")) {\n        return;\n      }\n\n      // Only when the related target is not part of the button\n      var related = e.getRelatedTarget();\n      if (qx.ui.core.Widget.contains(this, related)) {\n        return;\n      }\n\n      // When the menu is visible (cursor moved to the menu)\n      // keep the hover state on the whole button\n      var menu = this.getMenu();\n      if (menu && menu.isVisible()) {\n        this.__cursorIsOut = true;\n        return;\n      }\n\n      // Finally remove state\n      this.removeState(\"hovered\");\n    },\n\n    /**\n     * Event listener for all keyboard events\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyDown(e) {\n      var button = this.getChildControl(\"button\");\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          button.removeState(\"abandoned\");\n          button.addState(\"pressed\");\n      }\n    },\n\n    /**\n     * Event listener for all keyboard events\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyUp(e) {\n      var button = this.getChildControl(\"button\");\n      switch (e.getKeyIdentifier()) {\n        case \"Enter\":\n        case \"Space\":\n          if (button.hasState(\"pressed\")) {\n            button.removeState(\"abandoned\");\n            button.removeState(\"pressed\");\n            button.execute();\n          }\n      }\n    },\n\n    /**\n     * Event listener for button's execute event.\n     *\n     * @param e {qx.event.type.Event} execute event of the button\n     */\n    _onButtonExecute(e) {\n      // forward execute event\n      this.execute();\n    },\n\n    /**\n     * Event listener for visibility changes of the menu\n     *\n     * @param e {qx.event.type.Data} property change event\n     */\n    _onChangeMenuVisibility(e) {\n      if (!this.getMenu().isVisible() && this.__cursorIsOut) {\n        this.removeState(\"hovered\");\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wBAAhB,EAA0C;IACxCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,MADqB;IAExCC,OAAO,EAAE,CAACV,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWG,WAAZ,CAF+B;IAGxCC,SAAS,EAAE,CAACZ,EAAE,CAACO,EAAH,CAAMM,IAAN,CAAWC,WAAZ,CAH6B;;IAKxC;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAjBwC,qBAiB9BC,KAjB8B,EAiBvBC,IAjBuB,EAiBjBC,IAjBiB,EAiBXC,OAjBW,EAiBF;MACpC,yCADoC,CAGpC;;MACA,KAAKC,iBAAL,GAAyBC,YAAzB,CAAsC,MAAtC,EAA8C,QAA9C;;MAEA,KAAKC,UAAL,CAAgB,IAAItB,EAAE,CAACO,EAAH,CAAMgB,MAAN,CAAaC,IAAjB,EAAhB,EANoC,CAQpC;;;MACA,KAAKC,mBAAL,CAAyB,OAAzB,EAToC,CAWpC;;;MACA,KAAKC,WAAL,CAAiB,aAAjB,EAAgC,KAAKC,cAArC,EAAqD,IAArD,EAA2D,IAA3D;MACA,KAAKD,WAAL,CAAiB,YAAjB,EAA+B,KAAKE,aAApC,EAAmD,IAAnD,EAAyD,IAAzD,EAboC,CAepC;;MACA,KAAKF,WAAL,CAAiB,SAAjB,EAA4B,KAAKG,UAAjC;MACA,KAAKH,WAAL,CAAiB,OAAjB,EAA0B,KAAKI,QAA/B,EAjBoC,CAmBpC;;MACA,IAAId,KAAK,IAAI,IAAb,EAAmB;QACjB,KAAKe,QAAL,CAAcf,KAAd;MACD;;MAED,IAAIC,IAAI,IAAI,IAAZ,EAAkB;QAChB,KAAKe,OAAL,CAAaf,IAAb;MACD;;MAED,IAAIC,IAAI,IAAI,IAAZ,EAAkB;QAChB,KAAKe,OAAL,CAAaf,IAAb;MACD;;MAED,IAAIC,OAAO,IAAI,IAAf,EAAqB;QACnB,KAAKe,UAAL,CAAgBf,OAAhB;MACD;IACF,CApDuC;;IAsDxC;AACF;AACA;AACA;AACA;IAEEgB,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IADE;QAEVC,IAAI,EAAE;MAFI,CAFF;MAOV;MACAC,SAAS,EAAE;QACTF,MAAM,EAAE,IADC;QAETC,IAAI,EAAE;MAFG,CARD;;MAaV;MACAtB,KAAK,EAAE;QACLwB,KAAK,EAAE,aADF;QAELC,QAAQ,EAAE,IAFL;QAGLC,KAAK,EAAE;MAHF,CAdG;;MAoBV;MACAzB,IAAI,EAAE;QACJyB,KAAK,EAAE,QADH;QAEJF,KAAK,EAAE,YAFH;QAGJC,QAAQ,EAAE,IAHN;QAIJE,SAAS,EAAE;MAJP,CArBI;;MA4BV;AACJ;AACA;AACA;MACIC,IAAI,EAAE;QACJN,IAAI,EAAE,MADF;QAEJI,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAFH;QAGJC,SAAS,EAAE,IAHP;QAIJE,WAAW,EAAE,IAJT;QAKJL,KAAK,EAAE,YALH;QAMJM,KAAK,EAAE;MANH,CAhCI;;MAyCV;MACA5B,IAAI,EAAE;QACJwB,KAAK,EAAE,iBADH;QAEJD,QAAQ,EAAE,IAFN;QAGJD,KAAK,EAAE,YAHH;QAIJM,KAAK,EAAE;MAJH;IA1CI,CA5D4B;;IA8GxC;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACPC,SAAa,EAAE,IADR;;MAGP;AACJ;AACA;AACA;AACA;MAEI;MACAC,uBAVO,mCAUiBC,EAVjB,EAUqBC,IAVrB,EAU2B;QAChC,IAAIC,OAAJ;;QAEA,QAAQF,EAAR;UACE,KAAK,QAAL;YACEE,OAAO,GAAG,IAAIpD,EAAE,CAACO,EAAH,CAAMM,IAAN,CAAWwC,MAAf,EAAV;YACAD,OAAO,CAAC1B,WAAR,CAAoB,SAApB,EAA+B,KAAK4B,gBAApC,EAAsD,IAAtD;YACAF,OAAO,CAACG,YAAR,CAAqB,KAArB;;YACA,KAAKC,MAAL,CAAYJ,OAAZ,EAAqB,CAArB,EAAwB;cAAEK,IAAI,EAAE;YAAR,CAAxB;;YACA;;UAEF,KAAK,OAAL;YACEL,OAAO,GAAG,IAAIpD,EAAE,CAACO,EAAH,CAAMM,IAAN,CAAW6C,UAAf,EAAV;YACAN,OAAO,CAACG,YAAR,CAAqB,KAArB;YACAH,OAAO,CAACO,OAAR,CAAgB,MAAhB;;YACA,KAAKH,MAAL,CAAYJ,OAAZ,EAAqB,CAArB;;YACA;QAbJ;;QAgBA,OAAOA,OAAO,mFAAkCF,EAAlC,CAAd;MACD,CA9BM;MAgCP;;MACA;AACJ;AACA;MACIU,cAAc,EAAE;QACdC,OAAO,EAAE,CADK;QAEdC,OAAO,EAAE;MAFK,CApCT;;MAyCP;AACJ;AACA;AACA;AACA;MAEI;MACAC,WAhDO,uBAgDKC,KAhDL,EAgDYC,GAhDZ,EAgDiB;QACtB,IAAIC,MAAM,GAAG,KAAKC,eAAL,CAAqB,QAArB,CAAb;QACAH,KAAK,IAAI,IAAT,GAAgBE,MAAM,CAACE,UAAP,EAAhB,GAAsCF,MAAM,CAACnC,QAAP,CAAgBiC,KAAhB,CAAtC;MACD,CAnDM;MAqDP;MACAK,UAtDO,sBAsDIL,KAtDJ,EAsDWC,GAtDX,EAsDgB;QACrB,IAAIC,MAAM,GAAG,KAAKC,eAAL,CAAqB,QAArB,CAAb;QACAH,KAAK,IAAI,IAAT,GAAgBE,MAAM,CAACI,SAAP,EAAhB,GAAqCJ,MAAM,CAAClC,OAAP,CAAegC,KAAf,CAArC;MACD,CAzDM;MA2DP;MACAO,UA5DO,sBA4DIP,KA5DJ,EA4DWC,GA5DX,EA4DgB;QACrB,IAAIO,KAAK,GAAG,KAAKL,eAAL,CAAqB,OAArB,CAAZ;;QAEA,IAAIH,KAAJ,EAAW;UACTQ,KAAK,CAACC,YAAN;UACAD,KAAK,CAACvC,OAAN,CAAc+B,KAAd;UACAA,KAAK,CAACU,SAAN,CAAgB,IAAhB;UAEAV,KAAK,CAACtC,WAAN,CACE,kBADF,EAEE,KAAKiD,uBAFP,EAGE,IAHF;QAKD,CAVD,MAUO;UACLH,KAAK,CAACI,UAAN,CAAiB,KAAjB;UACAJ,KAAK,CAACK,SAAN;QACD;;QAED,IAAIZ,GAAJ,EAAS;UACPA,GAAG,CAACa,cAAJ,CACE,kBADF,EAEE,KAAKH,uBAFP,EAGE,IAHF;UAMAV,GAAG,CAACc,WAAJ;QACD;MACF,CAvFM;MAyFP;MACAC,UA1FO,sBA0FIhB,KA1FJ,EA0FWC,GA1FX,EA0FgB,CACrB;MACD,CA5FM;;MA8FP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;MACItC,cAzGO,0BAyGQsD,CAzGR,EAyGW;QAChB;QACA;QACA;QACAA,CAAC,CAACC,eAAF,GAJgB,CAMhB;;QACA,KAAKC,QAAL,CAAc,SAAd,EAPgB,CAShB;;QACA,OAAO,KAAKnC,SAAZ;MACD,CApHM;;MAsHP;AACJ;AACA;AACA;AACA;MACIpB,aA3HO,yBA2HOqD,CA3HP,EA2HU;QACf;QACA;QACA;QACAA,CAAC,CAACC,eAAF,GAJe,CAMf;;QACA,IAAI,CAAC,KAAKE,QAAL,CAAc,SAAd,CAAL,EAA+B;UAC7B;QACD,CATc,CAWf;;;QACA,IAAIC,OAAO,GAAGJ,CAAC,CAACK,gBAAF,EAAd;;QACA,IAAItF,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,MAAX,CAAkB8E,QAAlB,CAA2B,IAA3B,EAAiCF,OAAjC,CAAJ,EAA+C;UAC7C;QACD,CAfc,CAiBf;QACA;;;QACA,IAAInE,IAAI,GAAG,KAAKsE,OAAL,EAAX;;QACA,IAAItE,IAAI,IAAIA,IAAI,CAACuE,SAAL,EAAZ,EAA8B;UAC5B,KAAKzC,SAAL,GAAqB,IAArB;UACA;QACD,CAvBc,CAyBf;;;QACA,KAAK0C,WAAL,CAAiB,SAAjB;MACD,CAtJM;;MAwJP;AACJ;AACA;AACA;AACA;MACI7D,UA7JO,sBA6JIoD,CA7JJ,EA6JO;QACZ,IAAIf,MAAM,GAAG,KAAKC,eAAL,CAAqB,QAArB,CAAb;;QACA,QAAQc,CAAC,CAACU,gBAAF,EAAR;UACE,KAAK,OAAL;UACA,KAAK,OAAL;YACEzB,MAAM,CAACwB,WAAP,CAAmB,WAAnB;YACAxB,MAAM,CAACiB,QAAP,CAAgB,SAAhB;QAJJ;MAMD,CArKM;;MAuKP;AACJ;AACA;AACA;AACA;MACIrD,QA5KO,oBA4KEmD,CA5KF,EA4KK;QACV,IAAIf,MAAM,GAAG,KAAKC,eAAL,CAAqB,QAArB,CAAb;;QACA,QAAQc,CAAC,CAACU,gBAAF,EAAR;UACE,KAAK,OAAL;UACA,KAAK,OAAL;YACE,IAAIzB,MAAM,CAACkB,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;cAC9BlB,MAAM,CAACwB,WAAP,CAAmB,WAAnB;cACAxB,MAAM,CAACwB,WAAP,CAAmB,SAAnB;cACAxB,MAAM,CAAC0B,OAAP;YACD;;QAPL;MASD,CAvLM;;MAyLP;AACJ;AACA;AACA;AACA;MACItC,gBA9LO,4BA8LU2B,CA9LV,EA8La;QAClB;QACA,KAAKW,OAAL;MACD,CAjMM;;MAmMP;AACJ;AACA;AACA;AACA;MACIjB,uBAxMO,mCAwMiBM,CAxMjB,EAwMoB;QACzB,IAAI,CAAC,KAAKO,OAAL,GAAeC,SAAf,EAAD,IAA+B,KAAKzC,SAAxC,EAAuD;UACrD,KAAK0C,WAAL,CAAiB,SAAjB;QACD;MACF;IA5MM;EApH+B,CAA1C;EA1BA1F,EAAE,CAACO,EAAH,CAAMM,IAAN,CAAWgF,WAAX,CAAuB1F,aAAvB,GAAuCA,aAAvC"
}