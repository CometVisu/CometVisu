{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__modelSelection",
    "data",
    "Array",
    "addListener",
    "__onModelSelectionArrayChange",
    "__onModelSelectionChange",
    "events",
    "changeModelSelection",
    "members",
    "__inSelectionChange",
    "__P_352_2",
    "getSelection",
    "modelSelection",
    "i",
    "length",
    "item",
    "model",
    "getModel",
    "push",
    "setModelSelection",
    "e",
    "Error",
    "__P_352_1",
    "selectables",
    "getSelectables",
    "itemSelection",
    "toArray",
    "j",
    "selectable",
    "selectableModel",
    "setSelection",
    "currentSelection",
    "lang",
    "equals",
    "getModelSelection",
    "removeAll",
    "unshift",
    "getLength",
    "returnArray",
    "splice",
    "apply",
    "dispose",
    "destruct",
    "_disposeObjects",
    "ui",
    "form",
    "MModelSelection"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/MModelSelection.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * This mixin offers the selection of the model properties.\r\n * It can only be included if the object including it implements the\r\n * {@link qx.ui.core.ISingleSelection} interface and the selectables implement\r\n * the {@link qx.ui.form.IModel} interface.\r\n */\r\nqx.Mixin.define(\"qx.ui.form.MModelSelection\", {\r\n  construct() {\r\n    // create the selection array\r\n    this.__modelSelection = new qx.data.Array();\r\n\r\n    // listen to the changes\r\n    this.__modelSelection.addListener(\r\n      \"change\",\r\n      this.__onModelSelectionArrayChange,\r\n      this\r\n    );\r\n\r\n    this.addListener(\"changeSelection\", this.__onModelSelectionChange, this);\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * Pseudo event. It will never be fired because the array itself can not\r\n     * be changed. But the event description is needed for the data binding.\r\n     */\r\n    changeModelSelection: \"qx.event.type.Data\"\r\n  },\r\n\r\n  members: {\r\n    __modelSelection: null,\r\n    __inSelectionChange: false,\r\n\r\n    /**\r\n     * Handler for the selection change of the including class e.g. SelectBox,\r\n     * List, ...\r\n     * It sets the new modelSelection via {@link #setModelSelection}.\r\n     */\r\n    __onModelSelectionChange() {\r\n      if (this.__inSelectionChange) {\r\n        return;\r\n      }\r\n      var data = this.getSelection();\r\n\r\n      // create the array with the modes inside\r\n      var modelSelection = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        var item = data[i];\r\n        // fallback if getModel is not implemented\r\n        var model = item.getModel ? item.getModel() : null;\r\n        if (model !== null) {\r\n          modelSelection.push(model);\r\n        }\r\n      }\r\n\r\n      try {\r\n        this.setModelSelection(modelSelection);\r\n      } catch (e) {\r\n        throw new Error(\r\n          \"Could not set the model selection. Maybe your models are not unique? \" +\r\n            e\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listener for the change of the internal model selection data array.\r\n     */\r\n    __onModelSelectionArrayChange() {\r\n      this.__inSelectionChange = true;\r\n      var selectables = this.getSelectables(true);\r\n      var itemSelection = [];\r\n\r\n      var modelSelection = this.__modelSelection.toArray();\r\n      for (var i = 0; i < modelSelection.length; i++) {\r\n        var model = modelSelection[i];\r\n        for (var j = 0; j < selectables.length; j++) {\r\n          var selectable = selectables[j];\r\n          // fallback if getModel is not implemented\r\n          var selectableModel = selectable.getModel\r\n            ? selectable.getModel()\r\n            : null;\r\n          if (model === selectableModel) {\r\n            itemSelection.push(selectable);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.setSelection(itemSelection);\r\n      this.__inSelectionChange = false;\r\n\r\n      // check if the setting has worked\r\n      var currentSelection = this.getSelection();\r\n      if (!qx.lang.Array.equals(currentSelection, itemSelection)) {\r\n        // if not, set the actual selection\r\n        this.__onModelSelectionChange();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns always an array of the models of the selected items. If no\r\n     * item is selected or no model is given, the array will be empty.\r\n     *\r\n     * *CAREFUL!* The model selection can only work if every item item in the\r\n     * selection providing widget has a model property!\r\n     *\r\n     * @return {qx.data.Array} An array of the models of the selected items.\r\n     */\r\n    getModelSelection() {\r\n      return this.__modelSelection;\r\n    },\r\n\r\n    /**\r\n     * Takes the given models in the array and searches for the corresponding\r\n     * selectables. If an selectable does have that model attached, it will be\r\n     * selected.\r\n     *\r\n     * *Attention:* This method can have a time complexity of O(n^2)!\r\n     *\r\n     * *CAREFUL!* The model selection can only work if every item item in the\r\n     * selection providing widget has a model property!\r\n     *\r\n     * @param modelSelection {Array} An array of models, which should be\r\n     *   selected.\r\n     */\r\n    setModelSelection(modelSelection) {\r\n      // check for null values\r\n      if (!modelSelection) {\r\n        this.__modelSelection.removeAll();\r\n        return;\r\n      }\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertArray(modelSelection, \"Please use an array as parameter.\");\r\n      }\r\n\r\n      // add the first two parameter\r\n      modelSelection.unshift(this.__modelSelection.getLength()); // remove index\r\n      modelSelection.unshift(0); // start index\r\n\r\n      var returnArray = this.__modelSelection.splice.apply(\r\n        this.__modelSelection,\r\n        modelSelection\r\n      );\r\n\r\n      returnArray.dispose();\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    this._disposeObjects(\"__modelSelection\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}