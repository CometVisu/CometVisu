{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__modelSelection",
    "data",
    "Array",
    "addListener",
    "__onModelSelectionArrayChange",
    "__onModelSelectionChange",
    "events",
    "changeModelSelection",
    "members",
    "__inSelectionChange",
    "getSelection",
    "modelSelection",
    "i",
    "length",
    "item",
    "model",
    "getModel",
    "push",
    "setModelSelection",
    "e",
    "Error",
    "selectables",
    "getSelectables",
    "itemSelection",
    "toArray",
    "j",
    "selectable",
    "selectableModel",
    "setSelection",
    "currentSelection",
    "lang",
    "equals",
    "getModelSelection",
    "removeAll",
    "unshift",
    "getLength",
    "returnArray",
    "splice",
    "apply",
    "dispose",
    "destruct",
    "_disposeObjects",
    "ui",
    "form",
    "MModelSelection"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/MModelSelection.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * This mixin offers the selection of the model properties.\n * It can only be included if the object including it implements the\n * {@link qx.ui.core.ISingleSelection} interface and the selectables implement\n * the {@link qx.ui.form.IModel} interface.\n */\nqx.Mixin.define(\"qx.ui.form.MModelSelection\", {\n  construct() {\n    // create the selection array\n    this.__modelSelection = new qx.data.Array();\n\n    // listen to the changes\n    this.__modelSelection.addListener(\n      \"change\",\n      this.__onModelSelectionArrayChange,\n      this\n    );\n\n    this.addListener(\"changeSelection\", this.__onModelSelectionChange, this);\n  },\n\n  events: {\n    /**\n     * Pseudo event. It will never be fired because the array itself can not\n     * be changed. But the event description is needed for the data binding.\n     */\n    changeModelSelection: \"qx.event.type.Data\"\n  },\n\n  members: {\n    __modelSelection: null,\n    __inSelectionChange: false,\n\n    /**\n     * Handler for the selection change of the including class e.g. SelectBox,\n     * List, ...\n     * It sets the new modelSelection via {@link #setModelSelection}.\n     */\n    __onModelSelectionChange() {\n      if (this.__inSelectionChange) {\n        return;\n      }\n      var data = this.getSelection();\n\n      // create the array with the modes inside\n      var modelSelection = [];\n      for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        // fallback if getModel is not implemented\n        var model = item.getModel ? item.getModel() : null;\n        if (model !== null) {\n          modelSelection.push(model);\n        }\n      }\n\n      try {\n        this.setModelSelection(modelSelection);\n      } catch (e) {\n        throw new Error(\n          \"Could not set the model selection. Maybe your models are not unique? \" +\n            e\n        );\n      }\n    },\n\n    /**\n     * Listener for the change of the internal model selection data array.\n     */\n    __onModelSelectionArrayChange() {\n      this.__inSelectionChange = true;\n      var selectables = this.getSelectables(true);\n      var itemSelection = [];\n\n      var modelSelection = this.__modelSelection.toArray();\n      for (var i = 0; i < modelSelection.length; i++) {\n        var model = modelSelection[i];\n        for (var j = 0; j < selectables.length; j++) {\n          var selectable = selectables[j];\n          // fallback if getModel is not implemented\n          var selectableModel = selectable.getModel\n            ? selectable.getModel()\n            : null;\n          if (model === selectableModel) {\n            itemSelection.push(selectable);\n            break;\n          }\n        }\n      }\n      this.setSelection(itemSelection);\n      this.__inSelectionChange = false;\n\n      // check if the setting has worked\n      var currentSelection = this.getSelection();\n      if (!qx.lang.Array.equals(currentSelection, itemSelection)) {\n        // if not, set the actual selection\n        this.__onModelSelectionChange();\n      }\n    },\n\n    /**\n     * Returns always an array of the models of the selected items. If no\n     * item is selected or no model is given, the array will be empty.\n     *\n     * *CAREFUL!* The model selection can only work if every item item in the\n     * selection providing widget has a model property!\n     *\n     * @return {qx.data.Array} An array of the models of the selected items.\n     */\n    getModelSelection() {\n      return this.__modelSelection;\n    },\n\n    /**\n     * Takes the given models in the array and searches for the corresponding\n     * selectables. If an selectable does have that model attached, it will be\n     * selected.\n     *\n     * *Attention:* This method can have a time complexity of O(n^2)!\n     *\n     * *CAREFUL!* The model selection can only work if every item item in the\n     * selection providing widget has a model property!\n     *\n     * @param modelSelection {Array} An array of models, which should be\n     *   selected.\n     */\n    setModelSelection(modelSelection) {\n      // check for null values\n      if (!modelSelection) {\n        this.__modelSelection.removeAll();\n        return;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertArray(modelSelection, \"Please use an array as parameter.\");\n      }\n\n      // add the first two parameter\n      modelSelection.unshift(this.__modelSelection.getLength()); // remove index\n      modelSelection.unshift(0); // start index\n\n      var returnArray = this.__modelSelection.splice.apply(\n        this.__modelSelection,\n        modelSelection\n      );\n\n      returnArray.dispose();\n    }\n  },\n\n  destruct() {\n    this._disposeObjects(\"__modelSelection\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,4BAA4B,EAAE;IAC5CC,SAAS,uBAAG;MACV;MACA,IAAI,CAACC,SAAgB,GAAG,IAAIP,EAAE,CAACQ,IAAI,CAACC,KAAK,EAAE;;MAE3C;MACA,IAAI,CAACF,SAAgB,CAACG,WAAW,CAC/B,QAAQ,EACR,IAAI,CAACC,SAA6B,EAClC,IAAI,CACL;MAED,IAAI,CAACD,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAACE,SAAwB,EAAE,IAAI,CAAC;IAC1E,CAAC;IAEDC,MAAM,EAAE;MACN;AACJ;AACA;AACA;MACIC,oBAAoB,EAAE;IACxB,CAAC;IAEDC,OAAO,EAAE;MACPR,SAAgB,EAAE,IAAI;MACtBS,SAAmB,EAAE,KAAK;MAE1B;AACJ;AACA;AACA;AACA;MACIJ,SAAwB,uBAAG;QACzB,IAAI,IAAI,CAACI,SAAmB,EAAE;UAC5B;QACF;QACA,IAAIR,IAAI,GAAG,IAAI,CAACS,YAAY,EAAE;;QAE9B;QACA,IAAIC,cAAc,GAAG,EAAE;QACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;UACpC,IAAIE,IAAI,GAAGb,IAAI,CAACW,CAAC,CAAC;UAClB;UACA,IAAIG,KAAK,GAAGD,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACE,QAAQ,EAAE,GAAG,IAAI;UAClD,IAAID,KAAK,KAAK,IAAI,EAAE;YAClBJ,cAAc,CAACM,IAAI,CAACF,KAAK,CAAC;UAC5B;QACF;QAEA,IAAI;UACF,IAAI,CAACG,iBAAiB,CAACP,cAAc,CAAC;QACxC,CAAC,CAAC,OAAOQ,CAAC,EAAE;UACV,MAAM,IAAIC,KAAK,CACb,uEAAuE,GACrED,CAAC,CACJ;QACH;MACF,CAAC;MAED;AACJ;AACA;MACIf,SAA6B,uBAAG;QAC9B,IAAI,CAACK,SAAmB,GAAG,IAAI;QAC/B,IAAIY,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC;QAC3C,IAAIC,aAAa,GAAG,EAAE;QAEtB,IAAIZ,cAAc,GAAG,IAAI,CAACX,SAAgB,CAACwB,OAAO,EAAE;QACpD,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,cAAc,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAIG,KAAK,GAAGJ,cAAc,CAACC,CAAC,CAAC;UAC7B,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACR,MAAM,EAAEY,CAAC,EAAE,EAAE;YAC3C,IAAIC,UAAU,GAAGL,WAAW,CAACI,CAAC,CAAC;YAC/B;YACA,IAAIE,eAAe,GAAGD,UAAU,CAACV,QAAQ,GACrCU,UAAU,CAACV,QAAQ,EAAE,GACrB,IAAI;YACR,IAAID,KAAK,KAAKY,eAAe,EAAE;cAC7BJ,aAAa,CAACN,IAAI,CAACS,UAAU,CAAC;cAC9B;YACF;UACF;QACF;QACA,IAAI,CAACE,YAAY,CAACL,aAAa,CAAC;QAChC,IAAI,CAACd,SAAmB,GAAG,KAAK;;QAEhC;QACA,IAAIoB,gBAAgB,GAAG,IAAI,CAACnB,YAAY,EAAE;QAC1C,IAAI,CAACjB,EAAE,CAACqC,IAAI,CAAC5B,KAAK,CAAC6B,MAAM,CAACF,gBAAgB,EAAEN,aAAa,CAAC,EAAE;UAC1D;UACA,IAAI,CAAClB,SAAwB,EAAE;QACjC;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI2B,iBAAiB,+BAAG;QAClB,OAAO,IAAI,CAAChC,SAAgB;MAC9B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIkB,iBAAiB,6BAACP,cAAc,EAAE;QAChC;QACA,IAAI,CAACA,cAAc,EAAE;UACnB,IAAI,CAACX,SAAgB,CAACiC,SAAS,EAAE;UACjC;QACF;QAMA;QACAtB,cAAc,CAACuB,OAAO,CAAC,IAAI,CAAClC,SAAgB,CAACmC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC3DxB,cAAc,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE3B,IAAIE,WAAW,GAAG,IAAI,CAACpC,SAAgB,CAACqC,MAAM,CAACC,KAAK,CAClD,IAAI,CAACtC,SAAgB,EACrBW,cAAc,CACf;QAEDyB,WAAW,CAACG,OAAO,EAAE;MACvB;IACF,CAAC;IAEDC,QAAQ,sBAAG;MACT,IAAI,CAACC,eAAe,CAAC,WAAkB,CAAC;IAC1C;EACF,CAAC,CAAC;EAzKFhD,EAAE,CAACiD,EAAE,CAACC,IAAI,CAACC,eAAe,CAAChD,aAAa,GAAGA,aAAa;AAAC"
}