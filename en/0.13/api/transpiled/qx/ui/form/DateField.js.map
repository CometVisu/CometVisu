{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "form",
    "MForm",
    "implement",
    "IForm",
    "IDateForm",
    "construct",
    "constructor",
    "call",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "textField",
    "_createChildControl",
    "addListener",
    "_onTap",
    "_onBlur",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "_setDefaultDateFormat",
    "_addLocaleChangeListener",
    "events",
    "changeValue",
    "properties",
    "dateFormat",
    "check",
    "apply",
    "placeholder",
    "nullable",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "statics",
    "__dateFormat",
    "__formatter",
    "getDefaultDateFormatter",
    "format",
    "locale",
    "Date",
    "getDateFormat",
    "toString",
    "dispose",
    "util",
    "DateFormat",
    "Manager",
    "getInstance",
    "getLocale",
    "members",
    "__localeListenerId",
    "_forwardStates",
    "focused",
    "invalid",
    "setDateFormat",
    "DateField",
    "_this",
    "setValue",
    "value",
    "getChildControl",
    "dateChooser",
    "getValue",
    "textfieldValue",
    "length",
    "parse",
    "ex",
    "resetValue",
    "open",
    "popup",
    "placeToWidget",
    "show",
    "close",
    "isVisible",
    "hide",
    "toggle",
    "isListOpen",
    "_applyDateFormat",
    "old",
    "textfield",
    "dateStr",
    "currentDate",
    "_applyPlaceholder",
    "setPlaceholder",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_onTextFieldChangeValue",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "DateChooser",
    "setKeepFocus",
    "_onChangeDate",
    "Popup",
    "VBox",
    "setAutoHide",
    "add",
    "_onPopupChangeVisibility",
    "superclass",
    "prototype",
    "selectedDate",
    "_onKeyPress",
    "iden",
    "getKeyIdentifier",
    "isAltPressed",
    "stopPropagation",
    "getVisibility",
    "preventDefault",
    "handleKeyPress",
    "getData",
    "removeState",
    "chooser",
    "date",
    "list",
    "fireDataEvent",
    "isEmpty",
    "focus",
    "getFocusElement",
    "tabFocus",
    "field",
    "selectAllText",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "_this$getChildControl",
    "arguments",
    "addAriaDescribedBy",
    "_this$getChildControl2",
    "destruct",
    "removeListenerById"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/DateField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A *date field* is like a combo box with the date as popup. As button to\r\n * open the calendar a calendar icon is shown at the right to the textfield.\r\n *\r\n * To be conform with all form widgets, the {@link qx.ui.form.IForm} interface\r\n * is implemented.\r\n *\r\n * The following example creates a date field and sets the current\r\n * date as selected.\r\n *\r\n * <pre class='javascript'>\r\n * var dateField = new qx.ui.form.DateField();\r\n * this.getRoot().add(dateField, {top: 20, left: 20});\r\n * dateField.setValue(new Date());\r\n * </pre>\r\n *\r\n * @childControl list {qx.ui.control.DateChooser} date chooser component\r\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list control\r\n * @childControl textfield {qx.ui.form.TextField} text field for manual date entry\r\n * @childControl button {qx.ui.form.Button} button that opens the list control\r\n */\r\nqx.Class.define(\"qx.ui.form.DateField\", {\r\n  extend: qx.ui.core.Widget,\r\n  include: [qx.ui.core.MRemoteChildrenHandling, qx.ui.form.MForm],\r\n\r\n  implement: [qx.ui.form.IForm, qx.ui.form.IDateForm],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n\r\n    // set the layout\r\n    var layout = new qx.ui.layout.HBox();\r\n    this._setLayout(layout);\r\n    layout.setAlignY(\"middle\");\r\n\r\n    // text field\r\n    var textField = this._createChildControl(\"textfield\");\r\n    this._createChildControl(\"button\");\r\n\r\n    // register listeners\r\n    this.addListener(\"tap\", this._onTap, this);\r\n    this.addListener(\"blur\", this._onBlur, this);\r\n\r\n    // forward the focusin and focusout events to the textfield. The textfield\r\n    // is not focusable so the events need to be forwarded manually.\r\n    this.addListener(\"focusin\", e => {\r\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\r\n    });\r\n\r\n    this.addListener(\"focusout\", e => {\r\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\r\n    });\r\n\r\n    // initializes the DateField with the default format\r\n    this._setDefaultDateFormat();\r\n\r\n    // adds a locale change listener\r\n    this._addLocaleChangeListener();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Whenever the value is changed this event is fired\r\n     *\r\n     *  Event data: The new text value of the field.\r\n     */\r\n    changeValue: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** The formatter, which converts the selected date to a string. **/\r\n    dateFormat: {\r\n      check: \"qx.util.format.DateFormat\",\r\n      apply: \"_applyDateFormat\"\r\n    },\r\n\r\n    /**\r\n     * String value which will be shown as a hint if the field is all of:\r\n     * unset, unfocused and enabled. Set to null to not show a placeholder\r\n     * text.\r\n     */\r\n    placeholder: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      apply: \"_applyPlaceholder\"\r\n    },\r\n\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"datefield\"\r\n    },\r\n\r\n    // overridden\r\n    focusable: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    // overridden\r\n    width: {\r\n      refine: true,\r\n      init: 120\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    __dateFormat: null,\r\n    __formatter: null,\r\n\r\n    /**\r\n     * Get the shared default date formatter\r\n     *\r\n     * @return {qx.util.format.DateFormat} The shared date formatter\r\n     */\r\n    getDefaultDateFormatter() {\r\n      var format = qx.locale.Date.getDateFormat(\"medium\").toString();\r\n\r\n      if (format == this.__dateFormat) {\r\n        return this.__formatter;\r\n      }\r\n\r\n      if (this.__formatter) {\r\n        this.__formatter.dispose();\r\n      }\r\n\r\n      this.__formatter = new qx.util.format.DateFormat(\r\n        format,\r\n        qx.locale.Manager.getInstance().getLocale()\r\n      );\r\n\r\n      this.__dateFormat = format;\r\n\r\n      return this.__formatter;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    __localeListenerId: null,\r\n\r\n    /**\r\n     * @lint ignoreReferenceField(_forwardStates)\r\n     */\r\n    _forwardStates: {\r\n      focused: true,\r\n      invalid: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROTECTED METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    /**\r\n     * Sets the default date format which is returned by\r\n     * {@link #getDefaultDateFormatter}. You can override this method to\r\n     * define your own default format.\r\n     */\r\n    _setDefaultDateFormat() {\r\n      this.setDateFormat(qx.ui.form.DateField.getDefaultDateFormatter());\r\n    },\r\n\r\n    /**\r\n     * Checks for \"qx.dynlocale\" and adds a listener to the locale changes.\r\n     * On every change, {@link #_setDefaultDateFormat} is called to reinitialize\r\n     * the format. You can easily override that method to prevent that behavior.\r\n     */\r\n    _addLocaleChangeListener() {\r\n      // listen for locale changes\r\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n        this.__localeListenerId = qx.locale.Manager.getInstance().addListener(\r\n          \"changeLocale\",\r\n          () => {\r\n            this._setDefaultDateFormat();\r\n          }\r\n        );\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * This method sets the date, which will be formatted according to\r\n     * #dateFormat to the date field. It will also select the date in the\r\n     * calendar popup.\r\n     *\r\n     * @param value {Date} The date to set.\r\n     */\r\n    setValue(value) {\r\n      // set the date to the textfield\r\n      var textField = this.getChildControl(\"textfield\");\r\n      textField.setValue(this.getDateFormat().format(value));\r\n\r\n      // set the date in the datechooser\r\n      var dateChooser = this.getChildControl(\"list\");\r\n      dateChooser.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Returns the current set date, parsed from the input-field\r\n     * corresponding to the {@link #dateFormat}.\r\n     * If the given text could not be parsed, <code>null</code> will be returned.\r\n     *\r\n     * @return {Date} The currently set date.\r\n     */\r\n    getValue() {\r\n      // get the value of the textfield\r\n      var textfieldValue = this.getChildControl(\"textfield\").getValue();\r\n\r\n      // return the parsed date\r\n      try {\r\n        if (textfieldValue == null || textfieldValue.length == 0) {\r\n          return null;\r\n        }\r\n        return this.getDateFormat().parse(textfieldValue);\r\n      } catch (ex) {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Resets the DateField. The textfield will be empty and the datechooser\r\n     * will also have no selection.\r\n     */\r\n    resetValue() {\r\n      // set the date to the textfield\r\n      var textField = this.getChildControl(\"textfield\");\r\n      textField.setValue(\"\");\r\n\r\n      // set the date in the datechooser\r\n      var dateChooser = this.getChildControl(\"list\");\r\n      dateChooser.setValue(null);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LIST STUFF\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Shows the date chooser popup.\r\n     */\r\n    open() {\r\n      var popup = this.getChildControl(\"popup\");\r\n\r\n      popup.placeToWidget(this, true);\r\n      popup.show();\r\n    },\r\n\r\n    /**\r\n     * Hides the date chooser popup.\r\n     */\r\n    close() {\r\n      var popup = this.getChildControl(\"popup\", true);\r\n      if (popup && popup.isVisible()) {\r\n        popup.hide();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles the date chooser popup visibility.\r\n     */\r\n    toggle() {\r\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\r\n      if (isListOpen) {\r\n        this.close();\r\n      } else {\r\n        this.open();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply routine\r\n    _applyDateFormat(value, old) {\r\n      // if old is undefined or null do nothing\r\n      if (!old) {\r\n        return;\r\n      }\r\n\r\n      // get the date with the old date format\r\n      try {\r\n        var textfield = this.getChildControl(\"textfield\");\r\n        var dateStr = textfield.getValue();\r\n        if (dateStr != null) {\r\n          var currentDate = old.parse(dateStr);\r\n          textfield.setValue(value.format(currentDate));\r\n        }\r\n      } catch (ex) {\r\n        // do nothing if the former date could not be parsed\r\n      }\r\n    },\r\n\r\n    // property apply routine\r\n    _applyPlaceholder(value, old) {\r\n      this.getChildControl(\"textfield\").setPlaceholder(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"textfield\":\r\n          control = new qx.ui.form.TextField();\r\n          control.setFocusable(false);\r\n          control.addState(\"inner\");\r\n          control.addListener(\r\n            \"changeValue\",\r\n            this._onTextFieldChangeValue,\r\n            this\r\n          );\r\n\r\n          control.addListener(\"blur\", this.close, this);\r\n          this._add(control, { flex: 1 });\r\n          break;\r\n\r\n        case \"button\":\r\n          control = new qx.ui.form.Button();\r\n          control.setFocusable(false);\r\n          control.setKeepActive(true);\r\n          control.addState(\"inner\");\r\n          control.addListener(\"execute\", this.toggle, this);\r\n          this._add(control);\r\n          break;\r\n\r\n        case \"list\":\r\n          control = new qx.ui.control.DateChooser();\r\n          control.setFocusable(false);\r\n          control.setKeepFocus(true);\r\n          control.addListener(\"execute\", this._onChangeDate, this);\r\n          break;\r\n\r\n        case \"popup\":\r\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox());\r\n          control.setAutoHide(false);\r\n          control.add(this.getChildControl(\"list\"));\r\n          control.addListener(\"pointerup\", this._onChangeDate, this);\r\n          control.addListener(\r\n            \"changeVisibility\",\r\n            this._onPopupChangeVisibility,\r\n            this\r\n          );\r\n\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Handler method which handles the tap on the calender popup.\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event.\r\n     */\r\n    _onChangeDate(e) {\r\n      var textField = this.getChildControl(\"textfield\");\r\n\r\n      var selectedDate = this.getChildControl(\"list\").getValue();\r\n\r\n      textField.setValue(this.getDateFormat().format(selectedDate));\r\n      this.close();\r\n    },\r\n\r\n    /**\r\n     * Toggles the popup's visibility.\r\n     *\r\n     * @param e {qx.event.type.Pointer} Pointer tap event\r\n     */\r\n    _onTap(e) {\r\n      this.close();\r\n    },\r\n\r\n    /**\r\n     * Handler for the blur event of the current widget.\r\n     *\r\n     * @param e {qx.event.type.Focus} The blur event.\r\n     */\r\n    _onBlur(e) {\r\n      this.close();\r\n    },\r\n\r\n    /**\r\n     * Handler method which handles the key press. It forwards all key event\r\n     * to the opened date chooser except the escape key event. Escape closes\r\n     * the popup.\r\n     * If the list is cloned, all key events will not be processed further.\r\n     *\r\n     * @param e {qx.event.type.KeySequence} Keypress event\r\n     */\r\n    _onKeyPress(e) {\r\n      // get the key identifier\r\n      var iden = e.getKeyIdentifier();\r\n      if (iden == \"Down\" && e.isAltPressed()) {\r\n        this.toggle();\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n\r\n      // if the popup is closed, ignore all\r\n      var popup = this.getChildControl(\"popup\");\r\n      if (popup.getVisibility() == \"hidden\") {\r\n        return;\r\n      }\r\n\r\n      // hide the list always on escape\r\n      if (iden == \"Escape\") {\r\n        this.close();\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n\r\n      // Stop navigation keys when popup is open\r\n      if (\r\n        iden === \"Left\" ||\r\n        iden === \"Right\" ||\r\n        iden === \"Down\" ||\r\n        iden === \"Up\"\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      // forward the rest of the events to the date chooser\r\n      this.getChildControl(\"list\").handleKeyPress(e);\r\n    },\r\n\r\n    /**\r\n     * Redirects changeVisibility event from the list to this widget.\r\n     *\r\n     * @param e {qx.event.type.Data} Property change event\r\n     */\r\n    _onPopupChangeVisibility(e) {\r\n      e.getData() == \"visible\"\r\n        ? this.addState(\"popupOpen\")\r\n        : this.removeState(\"popupOpen\");\r\n\r\n      // Synchronize the chooser with the current value on every\r\n      // opening of the popup. This is needed when the value has been\r\n      // modified and not saved yet (e.g. no blur)\r\n      var popup = this.getChildControl(\"popup\");\r\n      if (popup.isVisible()) {\r\n        var chooser = this.getChildControl(\"list\");\r\n        var date = this.getValue();\r\n        chooser.setValue(date);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Reacts on value changes of the text field and syncs the\r\n     * value to the combobox.\r\n     *\r\n     * @param e {qx.event.type.Data} Change event\r\n     */\r\n    _onTextFieldChangeValue(e) {\r\n      // Apply to popup\r\n      var date = this.getValue();\r\n      if (date != null) {\r\n        var list = this.getChildControl(\"list\");\r\n        list.setValue(date);\r\n      }\r\n\r\n      // Fire event\r\n      this.fireDataEvent(\"changeValue\", this.getValue());\r\n    },\r\n\r\n    /**\r\n     * Checks if the textfield of the DateField is empty.\r\n     *\r\n     * @return {Boolean} True, if the textfield of the DateField is empty.\r\n     */\r\n    isEmpty() {\r\n      var value = this.getChildControl(\"textfield\").getValue();\r\n      return value == null || value == \"\";\r\n    },\r\n\r\n    // overridden\r\n    focus() {\r\n      super.focus();\r\n      this.getChildControl(\"textfield\").getFocusElement().focus();\r\n    },\r\n\r\n    // overridden\r\n    tabFocus() {\r\n      var field = this.getChildControl(\"textfield\");\r\n\r\n      field.getFocusElement().focus();\r\n      field.selectAllText();\r\n    },\r\n\r\n    // overridden\r\n    setAriaLabel(label) {\r\n      this.getChildControl(\"textfield\").setAriaLabel(label);\r\n    },\r\n\r\n    // overridden\r\n    addAriaLabelledBy(...labelWidgets) {\r\n      this.getChildControl(\"textfield\").addAriaLabelledBy(...labelWidgets);\r\n    },\r\n\r\n    // overridden\r\n    addAriaDescribedBy(...describingWidgets) {\r\n      this.getChildControl(\"textfield\").addAriaDescribedBy(\r\n        ...describingWidgets\r\n      );\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    // listen for locale changes\r\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n      if (this.__localeListenerId) {\r\n        qx.locale.Manager.getInstance().removeListenerById(\r\n          this.__localeListenerId\r\n        );\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}