{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "form",
    "MForm",
    "implement",
    "IForm",
    "IDateForm",
    "construct",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "textField",
    "_createChildControl",
    "addListener",
    "_onTap",
    "_onBlur",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "_setDefaultDateFormat",
    "_addLocaleChangeListener",
    "events",
    "changeValue",
    "properties",
    "dateFormat",
    "check",
    "apply",
    "placeholder",
    "nullable",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "statics",
    "__dateFormat",
    "__formatter",
    "getDefaultDateFormatter",
    "format",
    "locale",
    "Date",
    "getDateFormat",
    "toString",
    "dispose",
    "util",
    "DateFormat",
    "Manager",
    "getInstance",
    "getLocale",
    "members",
    "__localeListenerId",
    "_forwardStates",
    "focused",
    "invalid",
    "setDateFormat",
    "DateField",
    "setValue",
    "value",
    "getChildControl",
    "dateChooser",
    "getValue",
    "textfieldValue",
    "length",
    "parse",
    "ex",
    "resetValue",
    "open",
    "popup",
    "placeToWidget",
    "show",
    "close",
    "isVisible",
    "hide",
    "toggle",
    "isListOpen",
    "_applyDateFormat",
    "old",
    "textfield",
    "dateStr",
    "currentDate",
    "_applyPlaceholder",
    "setPlaceholder",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_onTextFieldChangeValue",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "DateChooser",
    "setKeepFocus",
    "_onChangeDate",
    "Popup",
    "VBox",
    "setAutoHide",
    "add",
    "_onPopupChangeVisibility",
    "selectedDate",
    "_onKeyPress",
    "iden",
    "getKeyIdentifier",
    "isAltPressed",
    "stopPropagation",
    "getVisibility",
    "preventDefault",
    "handleKeyPress",
    "getData",
    "removeState",
    "chooser",
    "date",
    "list",
    "fireDataEvent",
    "isEmpty",
    "focus",
    "getFocusElement",
    "tabFocus",
    "field",
    "selectAllText",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "addAriaDescribedBy",
    "destruct",
    "removeListenerById"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/DateField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A *date field* is like a combo box with the date as popup. As button to\n * open the calendar a calendar icon is shown at the right to the textfield.\n *\n * To be conform with all form widgets, the {@link qx.ui.form.IForm} interface\n * is implemented.\n *\n * The following example creates a date field and sets the current\n * date as selected.\n *\n * <pre class='javascript'>\n * var dateField = new qx.ui.form.DateField();\n * this.getRoot().add(dateField, {top: 20, left: 20});\n * dateField.setValue(new Date());\n * </pre>\n *\n * @childControl list {qx.ui.control.DateChooser} date chooser component\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list control\n * @childControl textfield {qx.ui.form.TextField} text field for manual date entry\n * @childControl button {qx.ui.form.Button} button that opens the list control\n */\nqx.Class.define(\"qx.ui.form.DateField\", {\n  extend: qx.ui.core.Widget,\n  include: [qx.ui.core.MRemoteChildrenHandling, qx.ui.form.MForm],\n\n  implement: [qx.ui.form.IForm, qx.ui.form.IDateForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // text field\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    // register listeners\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"blur\", this._onBlur, this);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", e => {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    });\n\n    this.addListener(\"focusout\", e => {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    });\n\n    // initializes the DateField with the default format\n    this._setDefaultDateFormat();\n\n    // adds a locale change listener\n    this._addLocaleChangeListener();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Whenever the value is changed this event is fired\n     *\n     *  Event data: The new text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The formatter, which converts the selected date to a string. **/\n    dateFormat: {\n      check: \"qx.util.format.DateFormat\",\n      apply: \"_applyDateFormat\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"datefield\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  statics: {\n    __dateFormat: null,\n    __formatter: null,\n\n    /**\n     * Get the shared default date formatter\n     *\n     * @return {qx.util.format.DateFormat} The shared date formatter\n     */\n    getDefaultDateFormatter() {\n      var format = qx.locale.Date.getDateFormat(\"medium\").toString();\n\n      if (format == this.__dateFormat) {\n        return this.__formatter;\n      }\n\n      if (this.__formatter) {\n        this.__formatter.dispose();\n      }\n\n      this.__formatter = new qx.util.format.DateFormat(\n        format,\n        qx.locale.Manager.getInstance().getLocale()\n      );\n\n      this.__dateFormat = format;\n\n      return this.__formatter;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __localeListenerId: null,\n\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      invalid: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Sets the default date format which is returned by\n     * {@link #getDefaultDateFormatter}. You can override this method to\n     * define your own default format.\n     */\n    _setDefaultDateFormat() {\n      this.setDateFormat(qx.ui.form.DateField.getDefaultDateFormatter());\n    },\n\n    /**\n     * Checks for \"qx.dynlocale\" and adds a listener to the locale changes.\n     * On every change, {@link #_setDefaultDateFormat} is called to reinitialize\n     * the format. You can easily override that method to prevent that behavior.\n     */\n    _addLocaleChangeListener() {\n      // listen for locale changes\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        this.__localeListenerId = qx.locale.Manager.getInstance().addListener(\n          \"changeLocale\",\n          () => {\n            this._setDefaultDateFormat();\n          }\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method sets the date, which will be formatted according to\n     * #dateFormat to the date field. It will also select the date in the\n     * calendar popup.\n     *\n     * @param value {Date} The date to set.\n     */\n    setValue(value) {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(this.getDateFormat().format(value));\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(value);\n    },\n\n    /**\n     * Returns the current set date, parsed from the input-field\n     * corresponding to the {@link #dateFormat}.\n     * If the given text could not be parsed, <code>null</code> will be returned.\n     *\n     * @return {Date} The currently set date.\n     */\n    getValue() {\n      // get the value of the textfield\n      var textfieldValue = this.getChildControl(\"textfield\").getValue();\n\n      // return the parsed date\n      try {\n        if (textfieldValue == null || textfieldValue.length == 0) {\n          return null;\n        }\n        return this.getDateFormat().parse(textfieldValue);\n      } catch (ex) {\n        return null;\n      }\n    },\n\n    /**\n     * Resets the DateField. The textfield will be empty and the datechooser\n     * will also have no selection.\n     */\n    resetValue() {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(\"\");\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(null);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LIST STUFF\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the date chooser popup.\n     */\n    open() {\n      var popup = this.getChildControl(\"popup\");\n\n      popup.placeToWidget(this, true);\n      popup.show();\n    },\n\n    /**\n     * Hides the date chooser popup.\n     */\n    close() {\n      var popup = this.getChildControl(\"popup\", true);\n      if (popup && popup.isVisible()) {\n        popup.hide();\n      }\n    },\n\n    /**\n     * Toggles the date chooser popup visibility.\n     */\n    toggle() {\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\n      if (isListOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply routine\n    _applyDateFormat(value, old) {\n      // if old is undefined or null do nothing\n      if (!old) {\n        return;\n      }\n\n      // get the date with the old date format\n      try {\n        var textfield = this.getChildControl(\"textfield\");\n        var dateStr = textfield.getValue();\n        if (dateStr != null) {\n          var currentDate = old.parse(dateStr);\n          textfield.setValue(value.format(currentDate));\n        }\n      } catch (ex) {\n        // do nothing if the former date could not be parsed\n      }\n    },\n\n    // property apply routine\n    _applyPlaceholder(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          control.addListener(\n            \"changeValue\",\n            this._onTextFieldChangeValue,\n            this\n          );\n\n          control.addListener(\"blur\", this.close, this);\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n\n        case \"list\":\n          control = new qx.ui.control.DateChooser();\n          control.setFocusable(false);\n          control.setKeepFocus(true);\n          control.addListener(\"execute\", this._onChangeDate, this);\n          break;\n\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox());\n          control.setAutoHide(false);\n          control.add(this.getChildControl(\"list\"));\n          control.addListener(\"pointerup\", this._onChangeDate, this);\n          control.addListener(\n            \"changeVisibility\",\n            this._onPopupChangeVisibility,\n            this\n          );\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler method which handles the tap on the calender popup.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event.\n     */\n    _onChangeDate(e) {\n      var textField = this.getChildControl(\"textfield\");\n\n      var selectedDate = this.getChildControl(\"list\").getValue();\n\n      textField.setValue(this.getDateFormat().format(selectedDate));\n      this.close();\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer tap event\n     */\n    _onTap(e) {\n      this.close();\n    },\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param e {qx.event.type.Focus} The blur event.\n     */\n    _onBlur(e) {\n      this.close();\n    },\n\n    /**\n     * Handler method which handles the key press. It forwards all key event\n     * to the opened date chooser except the escape key event. Escape closes\n     * the popup.\n     * If the list is cloned, all key events will not be processed further.\n     *\n     * @param e {qx.event.type.KeySequence} Keypress event\n     */\n    _onKeyPress(e) {\n      // get the key identifier\n      var iden = e.getKeyIdentifier();\n      if (iden == \"Down\" && e.isAltPressed()) {\n        this.toggle();\n        e.stopPropagation();\n        return;\n      }\n\n      // if the popup is closed, ignore all\n      var popup = this.getChildControl(\"popup\");\n      if (popup.getVisibility() == \"hidden\") {\n        return;\n      }\n\n      // hide the list always on escape\n      if (iden == \"Escape\") {\n        this.close();\n        e.stopPropagation();\n        return;\n      }\n\n      // Stop navigation keys when popup is open\n      if (\n        iden === \"Left\" ||\n        iden === \"Right\" ||\n        iden === \"Down\" ||\n        iden === \"Up\"\n      ) {\n        e.preventDefault();\n      }\n\n      // forward the rest of the events to the date chooser\n      this.getChildControl(\"list\").handleKeyPress(e);\n    },\n\n    /**\n     * Redirects changeVisibility event from the list to this widget.\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onPopupChangeVisibility(e) {\n      e.getData() == \"visible\"\n        ? this.addState(\"popupOpen\")\n        : this.removeState(\"popupOpen\");\n\n      // Synchronize the chooser with the current value on every\n      // opening of the popup. This is needed when the value has been\n      // modified and not saved yet (e.g. no blur)\n      var popup = this.getChildControl(\"popup\");\n      if (popup.isVisible()) {\n        var chooser = this.getChildControl(\"list\");\n        var date = this.getValue();\n        chooser.setValue(date);\n      }\n    },\n\n    /**\n     * Reacts on value changes of the text field and syncs the\n     * value to the combobox.\n     *\n     * @param e {qx.event.type.Data} Change event\n     */\n    _onTextFieldChangeValue(e) {\n      // Apply to popup\n      var date = this.getValue();\n      if (date != null) {\n        var list = this.getChildControl(\"list\");\n        list.setValue(date);\n      }\n\n      // Fire event\n      this.fireDataEvent(\"changeValue\", this.getValue());\n    },\n\n    /**\n     * Checks if the textfield of the DateField is empty.\n     *\n     * @return {Boolean} True, if the textfield of the DateField is empty.\n     */\n    isEmpty() {\n      var value = this.getChildControl(\"textfield\").getValue();\n      return value == null || value == \"\";\n    },\n\n    // overridden\n    focus() {\n      super.focus();\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    // overridden\n    tabFocus() {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n    // overridden\n    setAriaLabel(label) {\n      this.getChildControl(\"textfield\").setAriaLabel(label);\n    },\n\n    // overridden\n    addAriaLabelledBy(...labelWidgets) {\n      this.getChildControl(\"textfield\").addAriaLabelledBy(...labelWidgets);\n    },\n\n    // overridden\n    addAriaDescribedBy(...describingWidgets) {\n      this.getChildControl(\"textfield\").addAriaDescribedBy(\n        ...describingWidgets\n      );\n    }\n  },\n\n  destruct() {\n    // listen for locale changes\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      if (this.__localeListenerId) {\n        qx.locale.Manager.getInstance().removeListenerById(\n          this.__localeListenerId\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}