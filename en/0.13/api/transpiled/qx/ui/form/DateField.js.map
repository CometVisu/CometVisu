{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "form",
    "MForm",
    "implement",
    "IForm",
    "IDateForm",
    "construct",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "textField",
    "_createChildControl",
    "addListener",
    "_onTap",
    "_onBlur",
    "e",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Focus",
    "_setDefaultDateFormat",
    "_addLocaleChangeListener",
    "events",
    "changeValue",
    "properties",
    "dateFormat",
    "check",
    "apply",
    "placeholder",
    "nullable",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "statics",
    "__dateFormat",
    "__formatter",
    "getDefaultDateFormatter",
    "format",
    "locale",
    "Date",
    "getDateFormat",
    "toString",
    "dispose",
    "util",
    "DateFormat",
    "Manager",
    "getInstance",
    "getLocale",
    "members",
    "__localeListenerId",
    "_forwardStates",
    "focused",
    "invalid",
    "setDateFormat",
    "DateField",
    "setValue",
    "value",
    "getChildControl",
    "dateChooser",
    "getValue",
    "textfieldValue",
    "length",
    "parse",
    "ex",
    "resetValue",
    "open",
    "popup",
    "placeToWidget",
    "show",
    "close",
    "isVisible",
    "hide",
    "toggle",
    "isListOpen",
    "_applyDateFormat",
    "old",
    "textfield",
    "dateStr",
    "currentDate",
    "_applyPlaceholder",
    "setPlaceholder",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "TextField",
    "setFocusable",
    "addState",
    "_onTextFieldChangeValue",
    "_add",
    "flex",
    "Button",
    "setKeepActive",
    "DateChooser",
    "setKeepFocus",
    "_onChangeDate",
    "Popup",
    "VBox",
    "setAutoHide",
    "add",
    "_onPopupChangeVisibility",
    "selectedDate",
    "_onKeyPress",
    "iden",
    "getKeyIdentifier",
    "isAltPressed",
    "stopPropagation",
    "getVisibility",
    "preventDefault",
    "handleKeyPress",
    "getData",
    "removeState",
    "chooser",
    "date",
    "list",
    "fireDataEvent",
    "isEmpty",
    "focus",
    "getFocusElement",
    "tabFocus",
    "field",
    "selectAllText",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "addAriaDescribedBy",
    "destruct",
    "removeListenerById"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/DateField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A *date field* is like a combo box with the date as popup. As button to\n * open the calendar a calendar icon is shown at the right to the textfield.\n *\n * To be conform with all form widgets, the {@link qx.ui.form.IForm} interface\n * is implemented.\n *\n * The following example creates a date field and sets the current\n * date as selected.\n *\n * <pre class='javascript'>\n * var dateField = new qx.ui.form.DateField();\n * this.getRoot().add(dateField, {top: 20, left: 20});\n * dateField.setValue(new Date());\n * </pre>\n *\n * @childControl list {qx.ui.control.DateChooser} date chooser component\n * @childControl popup {qx.ui.popup.Popup} popup which shows the list control\n * @childControl textfield {qx.ui.form.TextField} text field for manual date entry\n * @childControl button {qx.ui.form.Button} button that opens the list control\n */\nqx.Class.define(\"qx.ui.form.DateField\", {\n  extend: qx.ui.core.Widget,\n  include: [qx.ui.core.MRemoteChildrenHandling, qx.ui.form.MForm],\n\n  implement: [qx.ui.form.IForm, qx.ui.form.IDateForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // text field\n    var textField = this._createChildControl(\"textfield\");\n    this._createChildControl(\"button\");\n\n    // register listeners\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"blur\", this._onBlur, this);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", e => {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    });\n\n    this.addListener(\"focusout\", e => {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    });\n\n    // initializes the DateField with the default format\n    this._setDefaultDateFormat();\n\n    // adds a locale change listener\n    this._addLocaleChangeListener();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Whenever the value is changed this event is fired\n     *\n     *  Event data: The new text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The formatter, which converts the selected date to a string. **/\n    dateFormat: {\n      check: \"qx.util.format.DateFormat\",\n      apply: \"_applyDateFormat\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"datefield\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  statics: {\n    __dateFormat: null,\n    __formatter: null,\n\n    /**\n     * Get the shared default date formatter\n     *\n     * @return {qx.util.format.DateFormat} The shared date formatter\n     */\n    getDefaultDateFormatter() {\n      var format = qx.locale.Date.getDateFormat(\"medium\").toString();\n\n      if (format == this.__dateFormat) {\n        return this.__formatter;\n      }\n\n      if (this.__formatter) {\n        this.__formatter.dispose();\n      }\n\n      this.__formatter = new qx.util.format.DateFormat(\n        format,\n        qx.locale.Manager.getInstance().getLocale()\n      );\n\n      this.__dateFormat = format;\n\n      return this.__formatter;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __localeListenerId: null,\n\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      invalid: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Sets the default date format which is returned by\n     * {@link #getDefaultDateFormatter}. You can override this method to\n     * define your own default format.\n     */\n    _setDefaultDateFormat() {\n      this.setDateFormat(qx.ui.form.DateField.getDefaultDateFormatter());\n    },\n\n    /**\n     * Checks for \"qx.dynlocale\" and adds a listener to the locale changes.\n     * On every change, {@link #_setDefaultDateFormat} is called to reinitialize\n     * the format. You can easily override that method to prevent that behavior.\n     */\n    _addLocaleChangeListener() {\n      // listen for locale changes\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        this.__localeListenerId = qx.locale.Manager.getInstance().addListener(\n          \"changeLocale\",\n          () => {\n            this._setDefaultDateFormat();\n          }\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method sets the date, which will be formatted according to\n     * #dateFormat to the date field. It will also select the date in the\n     * calendar popup.\n     *\n     * @param value {Date} The date to set.\n     */\n    setValue(value) {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(this.getDateFormat().format(value));\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(value);\n    },\n\n    /**\n     * Returns the current set date, parsed from the input-field\n     * corresponding to the {@link #dateFormat}.\n     * If the given text could not be parsed, <code>null</code> will be returned.\n     *\n     * @return {Date} The currently set date.\n     */\n    getValue() {\n      // get the value of the textfield\n      var textfieldValue = this.getChildControl(\"textfield\").getValue();\n\n      // return the parsed date\n      try {\n        if (textfieldValue == null || textfieldValue.length == 0) {\n          return null;\n        }\n        return this.getDateFormat().parse(textfieldValue);\n      } catch (ex) {\n        return null;\n      }\n    },\n\n    /**\n     * Resets the DateField. The textfield will be empty and the datechooser\n     * will also have no selection.\n     */\n    resetValue() {\n      // set the date to the textfield\n      var textField = this.getChildControl(\"textfield\");\n      textField.setValue(\"\");\n\n      // set the date in the datechooser\n      var dateChooser = this.getChildControl(\"list\");\n      dateChooser.setValue(null);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LIST STUFF\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the date chooser popup.\n     */\n    open() {\n      var popup = this.getChildControl(\"popup\");\n\n      popup.placeToWidget(this, true);\n      popup.show();\n    },\n\n    /**\n     * Hides the date chooser popup.\n     */\n    close() {\n      var popup = this.getChildControl(\"popup\", true);\n      if (popup && popup.isVisible()) {\n        popup.hide();\n      }\n    },\n\n    /**\n     * Toggles the date chooser popup visibility.\n     */\n    toggle() {\n      var isListOpen = this.getChildControl(\"popup\").isVisible();\n      if (isListOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply routine\n    _applyDateFormat(value, old) {\n      // if old is undefined or null do nothing\n      if (!old) {\n        return;\n      }\n\n      // get the date with the old date format\n      try {\n        var textfield = this.getChildControl(\"textfield\");\n        var dateStr = textfield.getValue();\n        if (dateStr != null) {\n          var currentDate = old.parse(dateStr);\n          textfield.setValue(value.format(currentDate));\n        }\n      } catch (ex) {\n        // do nothing if the former date could not be parsed\n      }\n    },\n\n    // property apply routine\n    _applyPlaceholder(value, old) {\n      this.getChildControl(\"textfield\").setPlaceholder(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n          control.addListener(\n            \"changeValue\",\n            this._onTextFieldChangeValue,\n            this\n          );\n\n          control.addListener(\"blur\", this.close, this);\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.setKeepActive(true);\n          control.addState(\"inner\");\n          control.addListener(\"execute\", this.toggle, this);\n          this._add(control);\n          break;\n\n        case \"list\":\n          control = new qx.ui.control.DateChooser();\n          control.setFocusable(false);\n          control.setKeepFocus(true);\n          control.addListener(\"execute\", this._onChangeDate, this);\n          break;\n\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox());\n          control.setAutoHide(false);\n          control.add(this.getChildControl(\"list\"));\n          control.addListener(\"pointerup\", this._onChangeDate, this);\n          control.addListener(\n            \"changeVisibility\",\n            this._onPopupChangeVisibility,\n            this\n          );\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler method which handles the tap on the calender popup.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event.\n     */\n    _onChangeDate(e) {\n      var textField = this.getChildControl(\"textfield\");\n\n      var selectedDate = this.getChildControl(\"list\").getValue();\n\n      textField.setValue(this.getDateFormat().format(selectedDate));\n      this.close();\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Pointer} Pointer tap event\n     */\n    _onTap(e) {\n      this.close();\n    },\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param e {qx.event.type.Focus} The blur event.\n     */\n    _onBlur(e) {\n      this.close();\n    },\n\n    /**\n     * Handler method which handles the key press. It forwards all key event\n     * to the opened date chooser except the escape key event. Escape closes\n     * the popup.\n     * If the list is cloned, all key events will not be processed further.\n     *\n     * @param e {qx.event.type.KeySequence} Keypress event\n     */\n    _onKeyPress(e) {\n      // get the key identifier\n      var iden = e.getKeyIdentifier();\n      if (iden == \"Down\" && e.isAltPressed()) {\n        this.toggle();\n        e.stopPropagation();\n        return;\n      }\n\n      // if the popup is closed, ignore all\n      var popup = this.getChildControl(\"popup\");\n      if (popup.getVisibility() == \"hidden\") {\n        return;\n      }\n\n      // hide the list always on escape\n      if (iden == \"Escape\") {\n        this.close();\n        e.stopPropagation();\n        return;\n      }\n\n      // Stop navigation keys when popup is open\n      if (\n        iden === \"Left\" ||\n        iden === \"Right\" ||\n        iden === \"Down\" ||\n        iden === \"Up\"\n      ) {\n        e.preventDefault();\n      }\n\n      // forward the rest of the events to the date chooser\n      this.getChildControl(\"list\").handleKeyPress(e);\n    },\n\n    /**\n     * Redirects changeVisibility event from the list to this widget.\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onPopupChangeVisibility(e) {\n      e.getData() == \"visible\"\n        ? this.addState(\"popupOpen\")\n        : this.removeState(\"popupOpen\");\n\n      // Synchronize the chooser with the current value on every\n      // opening of the popup. This is needed when the value has been\n      // modified and not saved yet (e.g. no blur)\n      var popup = this.getChildControl(\"popup\");\n      if (popup.isVisible()) {\n        var chooser = this.getChildControl(\"list\");\n        var date = this.getValue();\n        chooser.setValue(date);\n      }\n    },\n\n    /**\n     * Reacts on value changes of the text field and syncs the\n     * value to the combobox.\n     *\n     * @param e {qx.event.type.Data} Change event\n     */\n    _onTextFieldChangeValue(e) {\n      // Apply to popup\n      var date = this.getValue();\n      if (date != null) {\n        var list = this.getChildControl(\"list\");\n        list.setValue(date);\n      }\n\n      // Fire event\n      this.fireDataEvent(\"changeValue\", this.getValue());\n    },\n\n    /**\n     * Checks if the textfield of the DateField is empty.\n     *\n     * @return {Boolean} True, if the textfield of the DateField is empty.\n     */\n    isEmpty() {\n      var value = this.getChildControl(\"textfield\").getValue();\n      return value == null || value == \"\";\n    },\n\n    // overridden\n    focus() {\n      super.focus();\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    // overridden\n    tabFocus() {\n      var field = this.getChildControl(\"textfield\");\n\n      field.getFocusElement().focus();\n      field.selectAllText();\n    },\n\n    // overridden\n    setAriaLabel(label) {\n      this.getChildControl(\"textfield\").setAriaLabel(label);\n    },\n\n    // overridden\n    addAriaLabelledBy(...labelWidgets) {\n      this.getChildControl(\"textfield\").addAriaLabelledBy(...labelWidgets);\n    },\n\n    // overridden\n    addAriaDescribedBy(...describingWidgets) {\n      this.getChildControl(\"textfield\").addAriaDescribedBy(\n        ...describingWidgets\n      );\n    }\n  },\n\n  destruct() {\n    // listen for locale changes\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      if (this.__localeListenerId) {\n        qx.locale.Manager.getInstance().removeListenerById(\n          this.__localeListenerId\n        );\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}