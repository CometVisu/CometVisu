{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Button",
    "statics",
    "_fileInputElementIdCounter",
    "events",
    "changeFileSelection",
    "properties",
    "accept",
    "nullable",
    "check",
    "apply",
    "capture",
    "multiple",
    "directoriesOnly",
    "members",
    "__inputObject",
    "_applyAttribute",
    "value",
    "old",
    "attr",
    "setAttribute",
    "setEnabled",
    "FileSelectorButton",
    "superclass",
    "prototype",
    "call",
    "_createContentElement",
    "_this",
    "id",
    "input",
    "html",
    "Input",
    "label",
    "Element",
    "addListenerOnce",
    "e",
    "add",
    "inputEl",
    "getDomElement",
    "setVisible",
    "addEventListener",
    "fireDataEvent",
    "files"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/FileSelectorButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo\r\n\r\n   https://qooxdoo.org\r\n\r\n   Copyright:\r\n     2022 OETIKER+PARTNER AG\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tobias Oetiker (oetiker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The FileSelectorButton opens a window and lets the user pick one or several\r\n * files from the local filesystem. A FileList is returned which allows access\r\n * to the content of the selected files from javascript. The file(s) can now be\r\n *  processed in javascript, or it/they can be uploaded to a server.\r\n *\r\n * *Example*\r\n *\r\n * Post the content of the file to the server.\r\n *\r\n * ```javascript\r\n * let button = new qx.ui.form.FileSelectorButton(\"Select File\");\r\n * button.addListener('changeFileSelection',function(e){\r\n * let fileList = e.getData();\r\n *   let form = new FormData();\r\n *   form.append('file',fileList[0]);\r\n *   let req = new qx.io.request.Xhr(\"upload\",'POST').set({\r\n *     requestData: form\r\n *   });\r\n *   req.addListener('success',(e) => {\r\n *     let response = req.getResponse();\r\n *   });\r\n * });\r\n * ```\r\n *\r\n * Process the file directly in javascript using the FileReader API.\r\n *\r\n * ```javascript\r\n * let button = new qx.ui.form.FileSelectorButton(\"Select File\");\r\n * button.addListener('changeFileSelection',function(e){\r\n *   let fileList = e.getData();\r\n *   const reader = new FileReader();\r\n *   reader.addEventListener('load', () => {\r\n *     let response = reader.result;\r\n *     console.log(\"The first 4 chrs are: \" + response);\r\n *   });\r\n *   const file = fileList[0];\r\n *   reader.readAsText(file.slice(0,4));\r\n * });\r\n * ```\r\n *\r\n * [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications)\r\n */\r\n\r\nqx.Class.define(\"qx.ui.form.FileSelectorButton\", {\r\n  extend: qx.ui.form.Button,\r\n\r\n  statics: {\r\n    _fileInputElementIdCounter: 0\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * The event is fired when the file selection changes.\r\n     *\r\n     * The method {@link qx.event.type.Data#getData} returns the\r\n     * current [fileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\r\n     */\r\n    changeFileSelection: \"qx.event.type.Data\"\r\n  },\r\n\r\n  properties: {\r\n    /**\r\n     * What type of files should be offered in the fileselection dialog.\r\n     * Use a comma separated list of [Unique file type specifiers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers). If you dont set anything, all files\r\n     * are allowed.\r\n     *\r\n     * *Example*\r\n     *\r\n     * `.doc,.docx,application/msword`\r\n     */\r\n    accept: {\r\n      nullable: true,\r\n      check: \"String\",\r\n      apply: \"_applyAttribute\"\r\n    },\r\n\r\n    /**\r\n     * Specify that the camera should be used for getting the \"file\". The\r\n     * value defines which camera should be used for capturing images.\r\n     * `user` indicates the user-facing camera.\r\n     * `environment` indicates the camera facing away from the user.\r\n     */\r\n    capture: {\r\n      nullable: true,\r\n      check: [\"user\", \"environment\"],\r\n      apply: \"_applyAttribute\"\r\n    },\r\n\r\n    /**\r\n     * Set to \"true\" if you want to allow the selection of multiple files.\r\n     */\r\n    multiple: {\r\n      nullable: true,\r\n      check: \"Boolean\",\r\n      apply: \"_applyAttribute\"\r\n    },\r\n\r\n    /**\r\n     * If present, indicates that only directories should be available for\r\n     * selection.\r\n     */\r\n    directoriesOnly: {\r\n      nullable: true,\r\n      check: \"Boolean\",\r\n      apply: \"_applyAttribute\"\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __inputObject: null,\r\n\r\n    _applyAttribute(value, old, attr) {\r\n      if (attr === \"directoriesOnly\") {\r\n        // while the name of the attribute indicates that this only\r\n        // works for webkit browsers, this is not the case. These\r\n        // days the attribute is supported by\r\n        // [everyone](https://caniuse.com/?search=webkitdirectory).\r\n        attr = \"webkitdirectory\";\r\n      }\r\n      this.__inputObject.setAttribute(attr, value);\r\n    },\r\n\r\n    setEnabled(value){\r\n      this.__inputObject.setEnabled(value);\r\n      super.setEnabled(value);\r\n    },\r\n\r\n    _createContentElement() {\r\n      let id = \"qxFileSelector_\" + (++qx.ui.form.FileSelectorButton._fileInputElementIdCounter);\r\n      let input = (this.__inputObject = new qx.html.Input(\r\n        \"file\",\r\n        null,\r\n        { id: id }\r\n      ));\r\n\r\n      let label = new qx.html.Element(\"label\", {}, { for: id });\r\n      label.addListenerOnce(\"appear\", e => {\r\n        label.add(input);\r\n      });\r\n\r\n      input.addListenerOnce(\"appear\", e => {\r\n        let inputEl = input.getDomElement();\r\n        // since qx.html.Node does not even create the\r\n        // domNode if it is not set to visible initially\r\n        // we have to quickly hide it after creation.\r\n        input.setVisible(false);\r\n        inputEl.addEventListener(\"change\", e => {\r\n          this.fireDataEvent(\"changeFileSelection\", inputEl.files);\r\n          inputEl.value = \"\";\r\n        });\r\n      });\r\n      return label;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}