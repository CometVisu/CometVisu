{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "ISingleSelection",
    "form",
    "IField",
    "IForm",
    "IModelSelection",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "varargs",
    "__items",
    "addListener",
    "__onChangeSelection",
    "add",
    "apply",
    "arguments",
    "properties",
    "groupedProperty",
    "check",
    "event",
    "init",
    "groupProperty",
    "enabled",
    "wrap",
    "allowEmptySelection",
    "valid",
    "required",
    "invalidMessage",
    "requiredInvalidMessage",
    "nullable",
    "members",
    "getItems",
    "items",
    "item",
    "getGroupedProperty",
    "groupedPropertyUp",
    "lang",
    "String",
    "firstUp",
    "i",
    "l",
    "length",
    "includes",
    "_onItemChangeChecked",
    "push",
    "set",
    "getGroupProperty",
    "get",
    "setSelection",
    "isAllowEmptySelection",
    "getSelection",
    "remove",
    "Array",
    "reset",
    "removeListener",
    "resetSelection",
    "getChildren",
    "e",
    "getTarget",
    "_applyGroupedProperty",
    "value",
    "old",
    "oldFirstUp",
    "newFirstUp",
    "_applyInvalidMessage",
    "setInvalidMessage",
    "_applyValid",
    "setValid",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_applyAllowEmptySelection",
    "isSelectionEmpty",
    "selectNext",
    "index",
    "indexOf",
    "getWrap",
    "Math",
    "min",
    "getEnabled",
    "selectPrevious",
    "max",
    "_getItems",
    "_isAllowEmptySelection",
    "_isItemSelectable",
    "getData",
    "getOldData",
    "__isGroupFocused",
    "isFocusable",
    "focus",
    "focusHandler",
    "FocusHandler",
    "getInstance",
    "isFocused",
    "destruct",
    "_disposeArray",
    "RadioGroup"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/RadioGroup.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The radio group handles a collection of items from which only one item\n * can be selected. Selection another item will deselect the previously selected\n * item.\n *\n * This class is e.g. used to create radio groups or {@link qx.ui.form.RadioButton}\n * or {@link qx.ui.toolbar.RadioButton} instances.\n *\n * We also offer a widget for the same purpose which uses this class. So if\n * you like to act with a widget instead of a pure logic coupling of the\n * widgets, take a look at the {@link qx.ui.form.RadioButtonGroup} widget.\n */\nqx.Class.define(\"qx.ui.form.RadioGroup\", {\n  extend: qx.core.Object,\n  implement: [\n    qx.ui.core.ISingleSelection,\n    qx.ui.form.IField,\n    qx.ui.form.IForm,\n    qx.ui.form.IModelSelection\n  ],\n\n  include: [qx.ui.core.MSingleSelectionHandling, qx.ui.form.MModelSelection],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param varargs {qx.core.Object} A variable number of items, which are\n   *     initially added to the radio group, the first item will be selected.\n   */\n  construct(varargs) {\n    super();\n\n    // create item array\n    this.__items = [];\n\n    // add listener before call add!!!\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\n\n    if (varargs != null) {\n      this.add.apply(this, arguments);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The property name in each of the added widgets that is grouped\n     */\n    groupedProperty: {\n      check: \"String\",\n      apply: \"_applyGroupedProperty\",\n      event: \"changeGroupedProperty\",\n      init: \"value\"\n    },\n\n    /**\n     * The property name in each of the added widgets that is informed of the\n     * RadioGroup object it is a member of\n     */\n    groupProperty: {\n      check: \"String\",\n      event: \"changeGroupProperty\",\n      init: \"group\"\n    },\n\n    /**\n     * Whether the radio group is enabled\n     */\n    enabled: {\n      check: \"Boolean\",\n      apply: \"_applyEnabled\",\n      event: \"changeEnabled\",\n      init: true\n    },\n\n    /**\n     * Whether the selection should wrap around. This means that the successor of\n     * the last item is the first item.\n     */\n    wrap: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * If is set to <code>true</code> the selection could be empty,\n     * otherwise is always one <code>RadioButton</code> selected.\n     */\n    allowEmptySelection: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyAllowEmptySelection\"\n    },\n\n    /**\n     * Flag signaling if the group at all is valid. All children will have the\n     * same state.\n     */\n    valid: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyValid\",\n      event: \"changeValid\"\n    },\n\n    /**\n     * Flag signaling if the group is required.\n     */\n    required: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRequired\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip.\n     */\n    invalidMessage: {\n      check: \"String\",\n      init: \"\",\n      event: \"changeInvalidMessage\",\n      apply: \"_applyInvalidMessage\"\n    },\n\n    /**\n     * Message which is shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeInvalidMessage\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.ui.form.IRadioItem[]} The items of the radio group */\n    __items: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get all managed items\n     *\n     * @return {qx.ui.form.IRadioItem[]} All managed items.\n     */\n    getItems() {\n      return this.__items;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REGISTRY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add the passed items to the radio group.\n     *\n     * @param varargs {qx.ui.form.IRadioItem} A variable number of items to add.\n     */\n    add(varargs) {\n      var items = this.__items;\n      var item;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        item = arguments[i];\n\n        if (items.includes(item)) {\n          continue;\n        }\n\n        // Register listeners\n        item.addListener(\n          \"change\" + groupedPropertyUp,\n          this._onItemChangeChecked,\n          this\n        );\n\n        // Push RadioButton to array\n        items.push(item);\n\n        // Inform radio button about new group\n        item.set(this.getGroupProperty(), this);\n\n        // Need to update internal value?\n        if (item.get(groupedProperty)) {\n          this.setSelection([item]);\n        }\n      }\n\n      // Select first item when only one is registered\n      if (\n        !this.isAllowEmptySelection() &&\n        items.length > 0 &&\n        !this.getSelection()[0]\n      ) {\n        this.setSelection([items[0]]);\n      }\n    },\n\n    /**\n     * Remove an item from the radio group.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to remove.\n     */\n    remove(item) {\n      var items = this.__items;\n      var groupedProperty = this.getGroupedProperty();\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\n\n      if (items.includes(item)) {\n        // Remove RadioButton from array\n        qx.lang.Array.remove(items, item);\n\n        // Inform radio button about new group\n        if (item.get(this.getGroupProperty()) === this) {\n          item.reset(this.getGroupProperty());\n        }\n\n        // Deregister listeners\n        item.removeListener(\n          \"change\" + groupedPropertyUp,\n          this._onItemChangeChecked,\n          this\n        );\n\n        // if the radio was checked, set internal selection to null\n        if (item.get(groupedProperty)) {\n          this.resetSelection();\n        }\n      }\n    },\n\n    /**\n     * Returns an array containing the group's items.\n     *\n     * @return {qx.ui.form.IRadioItem[]} The item array\n     */\n    getChildren() {\n      return this.__items;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LISTENER FOR ITEM CHANGES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for <code>changeValue</code> event of every managed item.\n     *\n     * @param e {qx.event.type.Data} Data event\n     */\n    _onItemChangeChecked(e) {\n      var item = e.getTarget();\n      var groupedProperty = this.getGroupedProperty();\n\n      if (item.get(groupedProperty)) {\n        this.setSelection([item]);\n      } else if (this.getSelection()[0] == item) {\n        this.resetSelection();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyGroupedProperty(value, old) {\n      var item;\n      var oldFirstUp = qx.lang.String.firstUp(old);\n      var newFirstUp = qx.lang.String.firstUp(value);\n\n      for (var i = 0; i < this.__items.length; i++) {\n        item = this.__items[i];\n\n        // remove the listener for the old change event\n        item.removeListener(\n          \"change\" + oldFirstUp,\n          this._onItemChangeChecked,\n          this\n        );\n\n        // add the listener for the new change event\n        item.removeListener(\n          \"change\" + newFirstUp,\n          this._onItemChangeChecked,\n          this\n        );\n      }\n    },\n\n    // property apply\n    _applyInvalidMessage(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setInvalidMessage(value);\n      }\n    },\n\n    // property apply\n    _applyValid(value, old) {\n      for (var i = 0; i < this.__items.length; i++) {\n        this.__items[i].setValid(value);\n      }\n    },\n\n    // property apply\n    _applyEnabled(value, old) {\n      var items = this.__items;\n      if (value == null) {\n        for (var i = 0, l = items.length; i < l; i++) {\n          items[i].resetEnabled();\n        }\n      } else {\n        for (var i = 0, l = items.length; i < l; i++) {\n          items[i].setEnabled(value);\n        }\n      }\n    },\n\n    // property apply\n    _applyAllowEmptySelection(value, old) {\n      if (!value && this.isSelectionEmpty()) {\n        this.resetSelection();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Select the item following the given item.\n     */\n    selectNext() {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find next enabled item\n      if (this.getWrap()) {\n        index = (index + 1) % length;\n      } else {\n        index = Math.min(index + 1, length - 1);\n      }\n\n      while (i < length && !items[index].getEnabled()) {\n        index = (index + 1) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n    /**\n     * Select the item previous the given item.\n     */\n    selectPrevious() {\n      var item = this.getSelection()[0];\n      var items = this.__items;\n      var index = items.indexOf(item);\n      if (index == -1) {\n        return;\n      }\n\n      var i = 0;\n      var length = items.length;\n\n      // Find previous enabled item\n      if (this.getWrap()) {\n        index = (index - 1 + length) % length;\n      } else {\n        index = Math.max(index - 1, 0);\n      }\n\n      while (i < length && !items[index].getEnabled()) {\n        index = (index - 1 + length) % length;\n        i++;\n      }\n\n      this.setSelection([items[index]]);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS FOR SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the items for the selection.\n     *\n     * @return {qx.ui.form.IRadioItem[]} Items to select.\n     */\n    _getItems() {\n      return this.getItems();\n    },\n\n    /**\n     * Returns if the selection could be empty or not.\n     *\n     * @return {Boolean} <code>true</code> If selection could be empty,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowEmptySelection() {\n      return this.isAllowEmptySelection();\n    },\n\n    /**\n     * Returns whether the item is selectable. In opposite to the default\n     * implementation (which checks for visible items) every radio button\n     * which is part of the group is selected even if it is currently not visible.\n     *\n     * @param item {qx.ui.form.IRadioItem} The item to check if its selectable.\n     * @return {Boolean} <code>true</code> if the item is part of the radio group\n     *    <code>false</code> otherwise.\n     */\n    _isItemSelectable(item) {\n      return this.__items.indexOf(item) != -1;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    __onChangeSelection(e) {\n      var value = e.getData()[0];\n      var old = e.getOldData()[0];\n      var groupedProperty = this.getGroupedProperty();\n\n      if (old) {\n        old.set(groupedProperty, false);\n      }\n\n      if (value) {\n        value.set(groupedProperty, true);\n\n        // If Group is focused, the selection was changed by keyboard. Switch focus to new value\n        if (this.__isGroupFocused() && value.isFocusable()) {\n          value.focus();\n        }\n      }\n    },\n\n    /**\n     * Checks if this group is focused by checking focused state of each item\n     * @returns {Boolean} result\n     */\n    __isGroupFocused() {\n      const focusHandler = qx.ui.core.FocusHandler.getInstance();\n      for (const item of this._getItems()) {\n        if (focusHandler.isFocused(item)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeArray(\"__items\");\n  }\n});\n"
  ],
  "mappings": "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"
}