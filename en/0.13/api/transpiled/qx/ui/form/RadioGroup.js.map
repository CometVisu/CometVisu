{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "ISingleSelection",
    "form",
    "IField",
    "IForm",
    "IModelSelection",
    "include",
    "MSingleSelectionHandling",
    "MModelSelection",
    "construct",
    "varargs",
    "constructor",
    "call",
    "__items",
    "addListener",
    "__onChangeSelection",
    "add",
    "apply",
    "arguments",
    "properties",
    "groupedProperty",
    "check",
    "event",
    "init",
    "groupProperty",
    "enabled",
    "wrap",
    "allowEmptySelection",
    "valid",
    "required",
    "invalidMessage",
    "requiredInvalidMessage",
    "nullable",
    "members",
    "getItems",
    "items",
    "item",
    "getGroupedProperty",
    "groupedPropertyUp",
    "lang",
    "String",
    "firstUp",
    "i",
    "l",
    "length",
    "includes",
    "_onItemChangeChecked",
    "push",
    "set",
    "getGroupProperty",
    "get",
    "setSelection",
    "isAllowEmptySelection",
    "getSelection",
    "remove",
    "Array",
    "reset",
    "removeListener",
    "resetSelection",
    "getChildren",
    "e",
    "getTarget",
    "_applyGroupedProperty",
    "value",
    "old",
    "oldFirstUp",
    "newFirstUp",
    "_applyInvalidMessage",
    "setInvalidMessage",
    "_applyValid",
    "setValid",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_applyAllowEmptySelection",
    "isSelectionEmpty",
    "selectNext",
    "index",
    "indexOf",
    "getWrap",
    "Math",
    "min",
    "getEnabled",
    "selectPrevious",
    "max",
    "_getItems",
    "_isAllowEmptySelection",
    "_isItemSelectable",
    "__P_362_1",
    "getData",
    "getOldData",
    "__isGroupFocused",
    "isFocusable",
    "focus",
    "__P_362_2",
    "focusHandler",
    "FocusHandler",
    "getInstance",
    "_iterator",
    "_createForOfIteratorHelper",
    "_step",
    "s",
    "n",
    "done",
    "isFocused",
    "err",
    "f",
    "destruct",
    "_disposeArray",
    "RadioGroup"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/RadioGroup.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Christian Hagendorn (chris_schmidt)\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The radio group handles a collection of items from which only one item\r\n * can be selected. Selection another item will deselect the previously selected\r\n * item.\r\n *\r\n * This class is e.g. used to create radio groups or {@link qx.ui.form.RadioButton}\r\n * or {@link qx.ui.toolbar.RadioButton} instances.\r\n *\r\n * We also offer a widget for the same purpose which uses this class. So if\r\n * you like to act with a widget instead of a pure logic coupling of the\r\n * widgets, take a look at the {@link qx.ui.form.RadioButtonGroup} widget.\r\n */\r\nqx.Class.define(\"qx.ui.form.RadioGroup\", {\r\n  extend: qx.core.Object,\r\n  implement: [\r\n    qx.ui.core.ISingleSelection,\r\n    qx.ui.form.IField,\r\n    qx.ui.form.IForm,\r\n    qx.ui.form.IModelSelection\r\n  ],\r\n\r\n  include: [qx.ui.core.MSingleSelectionHandling, qx.ui.form.MModelSelection],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param varargs {qx.core.Object} A variable number of items, which are\r\n   *     initially added to the radio group, the first item will be selected.\r\n   */\r\n  construct(varargs) {\r\n    super();\r\n\r\n    // create item array\r\n    this.__items = [];\r\n\r\n    // add listener before call add!!!\r\n    this.addListener(\"changeSelection\", this.__onChangeSelection, this);\r\n\r\n    if (varargs != null) {\r\n      this.add.apply(this, arguments);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * The property name in each of the added widgets that is grouped\r\n     */\r\n    groupedProperty: {\r\n      check: \"String\",\r\n      apply: \"_applyGroupedProperty\",\r\n      event: \"changeGroupedProperty\",\r\n      init: \"value\"\r\n    },\r\n\r\n    /**\r\n     * The property name in each of the added widgets that is informed of the\r\n     * RadioGroup object it is a member of\r\n     */\r\n    groupProperty: {\r\n      check: \"String\",\r\n      event: \"changeGroupProperty\",\r\n      init: \"group\"\r\n    },\r\n\r\n    /**\r\n     * Whether the radio group is enabled\r\n     */\r\n    enabled: {\r\n      check: \"Boolean\",\r\n      apply: \"_applyEnabled\",\r\n      event: \"changeEnabled\",\r\n      init: true\r\n    },\r\n\r\n    /**\r\n     * Whether the selection should wrap around. This means that the successor of\r\n     * the last item is the first item.\r\n     */\r\n    wrap: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    },\r\n\r\n    /**\r\n     * If is set to <code>true</code> the selection could be empty,\r\n     * otherwise is always one <code>RadioButton</code> selected.\r\n     */\r\n    allowEmptySelection: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyAllowEmptySelection\"\r\n    },\r\n\r\n    /**\r\n     * Flag signaling if the group at all is valid. All children will have the\r\n     * same state.\r\n     */\r\n    valid: {\r\n      check: \"Boolean\",\r\n      init: true,\r\n      apply: \"_applyValid\",\r\n      event: \"changeValid\"\r\n    },\r\n\r\n    /**\r\n     * Flag signaling if the group is required.\r\n     */\r\n    required: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      event: \"changeRequired\"\r\n    },\r\n\r\n    /**\r\n     * Message which is shown in an invalid tooltip.\r\n     */\r\n    invalidMessage: {\r\n      check: \"String\",\r\n      init: \"\",\r\n      event: \"changeInvalidMessage\",\r\n      apply: \"_applyInvalidMessage\"\r\n    },\r\n\r\n    /**\r\n     * Message which is shown in an invalid tooltip if the {@link #required} is\r\n     * set to true.\r\n     */\r\n    requiredInvalidMessage: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      event: \"changeInvalidMessage\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /** @type {qx.ui.form.IRadioItem[]} The items of the radio group */\r\n    __items: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      UTILITIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Get all managed items\r\n     *\r\n     * @return {qx.ui.form.IRadioItem[]} All managed items.\r\n     */\r\n    getItems() {\r\n      return this.__items;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      REGISTRY\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Add the passed items to the radio group.\r\n     *\r\n     * @param varargs {qx.ui.form.IRadioItem} A variable number of items to add.\r\n     */\r\n    add(varargs) {\r\n      var items = this.__items;\r\n      var item;\r\n      var groupedProperty = this.getGroupedProperty();\r\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\r\n\r\n      for (var i = 0, l = arguments.length; i < l; i++) {\r\n        item = arguments[i];\r\n\r\n        if (items.includes(item)) {\r\n          continue;\r\n        }\r\n\r\n        // Register listeners\r\n        item.addListener(\r\n          \"change\" + groupedPropertyUp,\r\n          this._onItemChangeChecked,\r\n          this\r\n        );\r\n\r\n        // Push RadioButton to array\r\n        items.push(item);\r\n\r\n        // Inform radio button about new group\r\n        item.set(this.getGroupProperty(), this);\r\n\r\n        // Need to update internal value?\r\n        if (item.get(groupedProperty)) {\r\n          this.setSelection([item]);\r\n        }\r\n      }\r\n\r\n      // Select first item when only one is registered\r\n      if (\r\n        !this.isAllowEmptySelection() &&\r\n        items.length > 0 &&\r\n        !this.getSelection()[0]\r\n      ) {\r\n        this.setSelection([items[0]]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove an item from the radio group.\r\n     *\r\n     * @param item {qx.ui.form.IRadioItem} The item to remove.\r\n     */\r\n    remove(item) {\r\n      var items = this.__items;\r\n      var groupedProperty = this.getGroupedProperty();\r\n      var groupedPropertyUp = qx.lang.String.firstUp(groupedProperty);\r\n\r\n      if (items.includes(item)) {\r\n        // Remove RadioButton from array\r\n        qx.lang.Array.remove(items, item);\r\n\r\n        // Inform radio button about new group\r\n        if (item.get(this.getGroupProperty()) === this) {\r\n          item.reset(this.getGroupProperty());\r\n        }\r\n\r\n        // Deregister listeners\r\n        item.removeListener(\r\n          \"change\" + groupedPropertyUp,\r\n          this._onItemChangeChecked,\r\n          this\r\n        );\r\n\r\n        // if the radio was checked, set internal selection to null\r\n        if (item.get(groupedProperty)) {\r\n          this.resetSelection();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns an array containing the group's items.\r\n     *\r\n     * @return {qx.ui.form.IRadioItem[]} The item array\r\n     */\r\n    getChildren() {\r\n      return this.__items;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LISTENER FOR ITEM CHANGES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event listener for <code>changeValue</code> event of every managed item.\r\n     *\r\n     * @param e {qx.event.type.Data} Data event\r\n     */\r\n    _onItemChangeChecked(e) {\r\n      var item = e.getTarget();\r\n      var groupedProperty = this.getGroupedProperty();\r\n\r\n      if (item.get(groupedProperty)) {\r\n        this.setSelection([item]);\r\n      } else if (this.getSelection()[0] == item) {\r\n        this.resetSelection();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyGroupedProperty(value, old) {\r\n      var item;\r\n      var oldFirstUp = qx.lang.String.firstUp(old);\r\n      var newFirstUp = qx.lang.String.firstUp(value);\r\n\r\n      for (var i = 0; i < this.__items.length; i++) {\r\n        item = this.__items[i];\r\n\r\n        // remove the listener for the old change event\r\n        item.removeListener(\r\n          \"change\" + oldFirstUp,\r\n          this._onItemChangeChecked,\r\n          this\r\n        );\r\n\r\n        // add the listener for the new change event\r\n        item.removeListener(\r\n          \"change\" + newFirstUp,\r\n          this._onItemChangeChecked,\r\n          this\r\n        );\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyInvalidMessage(value, old) {\r\n      for (var i = 0; i < this.__items.length; i++) {\r\n        this.__items[i].setInvalidMessage(value);\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyValid(value, old) {\r\n      for (var i = 0; i < this.__items.length; i++) {\r\n        this.__items[i].setValid(value);\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyEnabled(value, old) {\r\n      var items = this.__items;\r\n      if (value == null) {\r\n        for (var i = 0, l = items.length; i < l; i++) {\r\n          items[i].resetEnabled();\r\n        }\r\n      } else {\r\n        for (var i = 0, l = items.length; i < l; i++) {\r\n          items[i].setEnabled(value);\r\n        }\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyAllowEmptySelection(value, old) {\r\n      if (!value && this.isSelectionEmpty()) {\r\n        this.resetSelection();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      SELECTION\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Select the item following the given item.\r\n     */\r\n    selectNext() {\r\n      var item = this.getSelection()[0];\r\n      var items = this.__items;\r\n      var index = items.indexOf(item);\r\n      if (index == -1) {\r\n        return;\r\n      }\r\n\r\n      var i = 0;\r\n      var length = items.length;\r\n\r\n      // Find next enabled item\r\n      if (this.getWrap()) {\r\n        index = (index + 1) % length;\r\n      } else {\r\n        index = Math.min(index + 1, length - 1);\r\n      }\r\n\r\n      while (i < length && !items[index].getEnabled()) {\r\n        index = (index + 1) % length;\r\n        i++;\r\n      }\r\n\r\n      this.setSelection([items[index]]);\r\n    },\r\n\r\n    /**\r\n     * Select the item previous the given item.\r\n     */\r\n    selectPrevious() {\r\n      var item = this.getSelection()[0];\r\n      var items = this.__items;\r\n      var index = items.indexOf(item);\r\n      if (index == -1) {\r\n        return;\r\n      }\r\n\r\n      var i = 0;\r\n      var length = items.length;\r\n\r\n      // Find previous enabled item\r\n      if (this.getWrap()) {\r\n        index = (index - 1 + length) % length;\r\n      } else {\r\n        index = Math.max(index - 1, 0);\r\n      }\r\n\r\n      while (i < length && !items[index].getEnabled()) {\r\n        index = (index - 1 + length) % length;\r\n        i++;\r\n      }\r\n\r\n      this.setSelection([items[index]]);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER METHODS FOR SELECTION API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the items for the selection.\r\n     *\r\n     * @return {qx.ui.form.IRadioItem[]} Items to select.\r\n     */\r\n    _getItems() {\r\n      return this.getItems();\r\n    },\r\n\r\n    /**\r\n     * Returns if the selection could be empty or not.\r\n     *\r\n     * @return {Boolean} <code>true</code> If selection could be empty,\r\n     *    <code>false</code> otherwise.\r\n     */\r\n    _isAllowEmptySelection() {\r\n      return this.isAllowEmptySelection();\r\n    },\r\n\r\n    /**\r\n     * Returns whether the item is selectable. In opposite to the default\r\n     * implementation (which checks for visible items) every radio button\r\n     * which is part of the group is selected even if it is currently not visible.\r\n     *\r\n     * @param item {qx.ui.form.IRadioItem} The item to check if its selectable.\r\n     * @return {Boolean} <code>true</code> if the item is part of the radio group\r\n     *    <code>false</code> otherwise.\r\n     */\r\n    _isItemSelectable(item) {\r\n      return this.__items.indexOf(item) != -1;\r\n    },\r\n\r\n    /**\r\n     * Event handler for <code>changeSelection</code>.\r\n     *\r\n     * @param e {qx.event.type.Data} Data event.\r\n     */\r\n    __onChangeSelection(e) {\r\n      var value = e.getData()[0];\r\n      var old = e.getOldData()[0];\r\n      var groupedProperty = this.getGroupedProperty();\r\n\r\n      if (old) {\r\n        old.set(groupedProperty, false);\r\n      }\r\n\r\n      if (value) {\r\n        value.set(groupedProperty, true);\r\n\r\n        // If Group is focused, the selection was changed by keyboard. Switch focus to new value\r\n        if (this.__isGroupFocused() && value.isFocusable()) {\r\n          value.focus();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if this group is focused by checking focused state of each item\r\n     * @returns {Boolean} result\r\n     */\r\n    __isGroupFocused() {\r\n      const focusHandler = qx.ui.core.FocusHandler.getInstance();\r\n      for (const item of this._getItems()) {\r\n        if (focusHandler.isFocused(item)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._disposeArray(\"__items\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}