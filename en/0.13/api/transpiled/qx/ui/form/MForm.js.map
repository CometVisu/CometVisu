{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "__onChangeLocale",
    "properties",
    "valid",
    "check",
    "init",
    "apply",
    "event",
    "required",
    "invalidMessage",
    "nullable",
    "requiredInvalidMessage",
    "members",
    "_applyValid",
    "value",
    "old",
    "removeState",
    "addState",
    "core",
    "Environment",
    "select",
    "e",
    "getInvalidMessage",
    "translate",
    "setInvalidMessage",
    "getRequiredInvalidMessage",
    "setRequiredInvalidMessage",
    "destruct",
    "removeListener",
    "ui",
    "form",
    "MForm"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/MForm.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Mixin handling the valid and required properties for the form widgets.\n */\nqx.Mixin.define(\"qx.ui.form.MForm\", {\n  construct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this.__onChangeLocale,\n        this\n      );\n    }\n  },\n\n  properties: {\n    /**\n     * Flag signaling if a widget is valid. If a widget is invalid, an invalid\n     * state will be set.\n     */\n    valid: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyValid\",\n      event: \"changeValid\"\n    },\n\n    /**\n     * Flag signaling if a widget is required.\n     */\n    required: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRequired\"\n    },\n\n    /**\n     * Message which will be shown in an tooltip if the widget is invalid.\n     */\n    invalidMessage: {\n      init: null,\n      nullable: true,\n      check: \"String\",\n      event: \"changeInvalidMessage\"\n    },\n\n    /**\n     * Message which will be shown in an invalid tooltip if the {@link #required} is\n     * set to true.\n     */\n    requiredInvalidMessage: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeRequiredInvalidMessage\"\n    }\n  },\n\n  members: {\n    // apply method\n    _applyValid(value, old) {\n      value ? this.removeState(\"invalid\") : this.addState(\"invalid\");\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    __onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        // invalid message\n        var invalidMessage = this.getInvalidMessage();\n        if (invalidMessage && invalidMessage.translate) {\n          this.setInvalidMessage(invalidMessage.translate());\n        }\n        // required invalid message\n        var requiredInvalidMessage = this.getRequiredInvalidMessage();\n        if (requiredInvalidMessage && requiredInvalidMessage.translate) {\n          this.setRequiredInvalidMessage(requiredInvalidMessage.translate());\n        }\n      },\n\n      false: null\n    })\n  },\n\n  destruct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this.__onChangeLocale,\n        this\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kBAAkB,EAAE;IAClCC,SAAS,uBAAG;MACmC;QAC3CN,EAAE,CAACO,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,WAAW,CACzC,cAAc,EACd,IAAI,CAACC,SAAgB,EACrB,IAAI,CACL;MACH;IACF,CAAC;IAEDC,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIC,QAAQ,EAAE;QACRJ,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,KAAK;QACXE,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;MACIE,cAAc,EAAE;QACdJ,IAAI,EAAE,IAAI;QACVK,QAAQ,EAAE,IAAI;QACdN,KAAK,EAAE,QAAQ;QACfG,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;MACII,sBAAsB,EAAE;QACtBP,KAAK,EAAE,QAAQ;QACfM,QAAQ,EAAE,IAAI;QACdH,KAAK,EAAE;MACT;IACF,CAAC;IAEDK,OAAO,EAAE;MACP;MACAC,WAAW,uBAACC,KAAK,EAAEC,GAAG,EAAE;QACtBD,KAAK,GAAG,IAAI,CAACE,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC;MAChE,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIhB,SAAgB,EAAEX,EAAE,CAAC4B,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,cAAc,EAAE;QAAA,uBACtDC,CAAC,EAAE;UACN;UACA,IAAIZ,cAAc,GAAG,IAAI,CAACa,iBAAiB,EAAE;UAC7C,IAAIb,cAAc,IAAIA,cAAc,CAACc,SAAS,EAAE;YAC9C,IAAI,CAACC,iBAAiB,CAACf,cAAc,CAACc,SAAS,EAAE,CAAC;UACpD;UACA;UACA,IAAIZ,sBAAsB,GAAG,IAAI,CAACc,yBAAyB,EAAE;UAC7D,IAAId,sBAAsB,IAAIA,sBAAsB,CAACY,SAAS,EAAE;YAC9D,IAAI,CAACG,yBAAyB,CAACf,sBAAsB,CAACY,SAAS,EAAE,CAAC;UACpE;QACF,CAAC;QAED,SAAO;MACT,CAAC;IACH,CAAC;IAEDI,QAAQ,sBAAG;MACoC;QAC3CrC,EAAE,CAACO,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAAC6B,cAAc,CAC5C,cAAc,EACd,IAAI,CAAC3B,SAAgB,EACrB,IAAI,CACL;MACH;IACF;EACF,CAAC,CAAC;EAjHFX,EAAE,CAACuC,EAAE,CAACC,IAAI,CAACC,KAAK,CAACtC,aAAa,GAAGA,aAAa;AAAC"
}