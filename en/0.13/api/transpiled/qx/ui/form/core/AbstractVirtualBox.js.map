{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "form",
    "MForm",
    "implement",
    "IForm",
    "type",
    "construct",
    "model",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "addListener",
    "_handleKeyboard",
    "_handlePointer",
    "_onBlur",
    "_onResize",
    "_createChildControl",
    "bind",
    "getChildControl",
    "initModel",
    "__defaultModel",
    "data",
    "Array",
    "properties",
    "focusable",
    "refine",
    "init",
    "width",
    "check",
    "apply",
    "event",
    "nullable",
    "deferredInit",
    "delegate",
    "labelPath",
    "labelOptions",
    "iconPath",
    "iconOptions",
    "itemHeight",
    "themeable",
    "maxListHeight",
    "allowGrowDropDown",
    "members",
    "_forwardStates",
    "focused",
    "invalid",
    "refresh",
    "queue",
    "add",
    "open",
    "_beforeOpen",
    "close",
    "_beforeClose",
    "toggle",
    "dropDown",
    "isVisible",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "VirtualDropDownList",
    "_onPopupChangeVisibility",
    "_getAction",
    "keyIdentifier",
    "getKeyIdentifier",
    "isOpen",
    "isModifierPressed",
    "_isModifierPressed",
    "_getBindPath",
    "source",
    "path",
    "bindPath",
    "isAltPressed",
    "isCtrlOrCommandPressed",
    "isShiftPressed",
    "isMetaPressed",
    "action",
    "setMinWidth",
    "getData",
    "addState",
    "removeState",
    "_applyModel",
    "value",
    "old",
    "setModel",
    "_applyDelegate",
    "setDelegate",
    "_applyLabelPath",
    "setLabelPath",
    "_applyLabelOptions",
    "setLabelOptions",
    "_applyIconPath",
    "setIconPath",
    "_applyIconOptions",
    "setIconOptions",
    "_applyRowHeight",
    "setItemHeight",
    "_applyMaxListHeight",
    "setMaxHeight",
    "destruct",
    "dispose",
    "AbstractVirtualBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/AbstractVirtualBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Basic class for widgets which need a virtual list as popup for example a\n * SelectBox. It's basically supports a drop-down as popup with a virtual list\n * and the whole children management.\n *\n * @childControl dropdown {qx.ui.form.core.VirtualDropDownList} The drop-down list.\n */\nqx.Class.define(\"qx.ui.form.core.AbstractVirtualBox\", {\n  extend: qx.ui.core.Widget,\n  include: qx.ui.form.MForm,\n  implement: qx.ui.form.IForm,\n  type: \"abstract\",\n\n  /**\n   * @param model {qx.data.Array?null} The model data for the widget.\n   */\n  construct(model) {\n    super();\n\n    // set the layout\n    var layout = new qx.ui.layout.HBox();\n    this._setLayout(layout);\n    layout.setAlignY(\"middle\");\n\n    // Register listeners\n    this.addListener(\"keypress\", this._handleKeyboard, this);\n    this.addListener(\"tap\", this._handlePointer, this);\n    this.addListener(\"blur\", this._onBlur, this);\n    this.addListener(\"resize\", this._onResize, this);\n\n    this._createChildControl(\"dropdown\");\n\n    this.bind(\n      \"allowGrowDropDown\",\n      this.getChildControl(\"dropdown\"),\n      \"allowGrowDropDown\"\n    );\n\n    if (model != null) {\n      this.initModel(model);\n    } else {\n      this.__defaultModel = new qx.data.Array();\n      this.initModel(this.__defaultModel);\n    }\n  },\n\n  properties: {\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 120\n    },\n\n    /** Data array containing the data which should be shown in the drop-down. */\n    model: {\n      check: \"qx.data.Array\",\n      apply: \"_applyModel\",\n      event: \"changeModel\",\n      nullable: false,\n      deferredInit: true\n    },\n\n    /**\n     * Delegation object which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate: {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a label. This is only needed if objects are stored in the\n     * model.\n     */\n    labelPath: {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      event: \"changeLabelPath\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions: {\n      apply: \"_applyLabelOptions\",\n      event: \"changeLabelOptions\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as an icon. This is only needed if objects are stored in the\n     * model and icons should be displayed.\n     */\n    iconPath: {\n      check: \"String\",\n      event: \"changeIconPath\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions: {\n      apply: \"_applyIconOptions\",\n      event: \"changeIconOptions\",\n      nullable: true\n    },\n\n    /** Default item height. */\n    itemHeight: {\n      check: \"Integer\",\n      init: 25,\n      apply: \"_applyRowHeight\",\n      themeable: true\n    },\n\n    /**\n     * The maximum height of the drop-down list. Setting this value to\n     * <code>null</code> will set cause the list to be auto-sized.\n     */\n    maxListHeight: {\n      check: \"Number\",\n      apply: \"_applyMaxListHeight\",\n      nullable: true,\n      init: 200\n    },\n\n    /**\n     * Allow the drop-down to grow wider than its parent.\n     */\n    allowGrowDropDown: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\",\n      event: \"changeAllowGrowDropDown\"\n    }\n  },\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {qx.data.Array} The initial model array of this virtual box. */\n    __defaultModel: null,\n\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      invalid: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh() {\n      this.getChildControl(\"dropdown\").getChildControl(\"list\").refresh();\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * Shows the drop-down.\n     */\n    open() {\n      this._beforeOpen();\n      this.getChildControl(\"dropdown\").open();\n    },\n\n    /**\n     * Hides the drop-down.\n     */\n    close() {\n      this._beforeClose();\n      this.getChildControl(\"dropdown\").close();\n    },\n\n    /**\n     * Toggles the drop-down visibility.\n     */\n    toggle() {\n      var dropDown = this.getChildControl(\"dropdown\");\n\n      if (dropDown.isVisible()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"dropdown\":\n          control = new qx.ui.form.core.VirtualDropDownList(this);\n          control.addListener(\n            \"changeVisibility\",\n            this._onPopupChangeVisibility,\n            this\n          );\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    /**\n     * This method is called before the drop-down is opened.\n     */\n    _beforeOpen() {},\n\n    /**\n     * This method is called before the drop-down is closed.\n     */\n    _beforeClose() {},\n\n    /**\n     * Returns the action dependent on the user interaction: e. q. <code>open</code>,\n     * or <code>close</code>.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     * @return {String|null} The action or <code>null</code> when interaction\n     *  doesn't hit any action.\n     */\n    _getAction(event) {\n      var keyIdentifier = event.getKeyIdentifier();\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\n      var isModifierPressed = this._isModifierPressed(event);\n\n      if (\n        !isOpen &&\n        !isModifierPressed &&\n        (keyIdentifier === \"Down\" || keyIdentifier === \"Up\")\n      ) {\n        return \"open\";\n      } else if (isOpen && !isModifierPressed && keyIdentifier === \"Escape\") {\n        return \"close\";\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Helper Method to create bind path depended on the passed path.\n     *\n     * @param source {String} The path to the selection.\n     * @param path {String?null} The path to the item's property.\n     * @return {String} The created path.\n     */\n    _getBindPath(source, path) {\n      var bindPath = source + \"[0]\";\n\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n\n      return bindPath;\n    },\n\n    /**\n     * Helper method to check if one modifier key is pressed. e.q.\n     * <code>Control</code>, <code>Shift</code>, <code>Meta</code> or\n     * <code>Alt</code>.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     * @return {Boolean} <code>True</code> when a modifier key is pressed,\n     *   <code>false</code> otherwise.\n     */\n    _isModifierPressed(event) {\n      var isAltPressed = event.isAltPressed();\n      var isCtrlOrCommandPressed = event.isCtrlOrCommandPressed();\n      var isShiftPressed = event.isShiftPressed();\n      var isMetaPressed = event.isMetaPressed();\n\n      return (\n        isAltPressed ||\n        isCtrlOrCommandPressed ||\n        isShiftPressed ||\n        isMetaPressed\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for the blur event of the current widget.\n     *\n     * @param event {qx.event.type.Focus} The blur event.\n     */\n    _onBlur(event) {\n      this.close();\n    },\n\n    /**\n     * Handles the complete keyboard events for user interaction. If there is\n     * no defined user interaction {@link #_getAction}, the event is delegated\n     * to the {@link qx.ui.form.core.VirtualDropDownList#_handleKeyboard} method.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     */\n    _handleKeyboard(event) {\n      var action = this._getAction(event);\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\n\n      switch (action) {\n        case \"open\":\n          this.open();\n          break;\n\n        case \"close\":\n          this.close();\n          break;\n\n        default:\n          if (isOpen) {\n            this.getChildControl(\"dropdown\")._handleKeyboard(event);\n          }\n          break;\n      }\n    },\n\n    /**\n     * Handles all pointer events dispatched on the widget.\n     *\n     * @param event {qx.event.type.Pointer|qx.event.type.Roll} The pointer event.\n     */\n    _handlePointer(event) {},\n\n    /**\n     * Updates drop-down minimum size.\n     *\n     * @param event {qx.event.type.Data} Data event.\n     */\n    _onResize(event) {\n      this.getChildControl(\"dropdown\").setMinWidth(event.getData().width);\n    },\n\n    /**\n     * Adds/removes the state 'popupOpen' depending on the visibility of the popup\n     *\n     * @param event {qx.event.type.Data} Data event\n     */\n    _onPopupChangeVisibility(event) {\n      event.getData() == \"visible\"\n        ? this.addState(\"popupOpen\")\n        : this.removeState(\"popupOpen\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyModel(value, old) {\n      this.getChildControl(\"dropdown\").getChildControl(\"list\").setModel(value);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // property apply\n    _applyDelegate(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setDelegate(value);\n    },\n\n    // property apply\n    _applyLabelPath(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setLabelPath(value);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // property apply\n    _applyLabelOptions(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setLabelOptions(value);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // property apply\n    _applyIconPath(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setIconPath(value);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // property apply\n    _applyIconOptions(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setIconOptions(value);\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // property apply\n    _applyRowHeight(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setItemHeight(value);\n    },\n\n    // property apply\n    _applyMaxListHeight(value, old) {\n      this.getChildControl(\"dropdown\")\n        .getChildControl(\"list\")\n        .setMaxHeight(value);\n    }\n  },\n\n  destruct() {\n    if (this.__defaultModel) {\n      this.__defaultModel.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}