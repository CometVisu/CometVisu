{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "form",
    "MForm",
    "implement",
    "IForm",
    "type",
    "construct",
    "model",
    "constructor",
    "call",
    "layout",
    "HBox",
    "_setLayout",
    "setAlignY",
    "addListener",
    "_handleKeyboard",
    "_handlePointer",
    "_onBlur",
    "_onResize",
    "_createChildControl",
    "bind",
    "getChildControl",
    "initModel",
    "__defaultModel",
    "data",
    "Array",
    "properties",
    "focusable",
    "refine",
    "init",
    "width",
    "check",
    "apply",
    "event",
    "nullable",
    "deferredInit",
    "delegate",
    "labelPath",
    "labelOptions",
    "iconPath",
    "iconOptions",
    "itemHeight",
    "themeable",
    "maxListHeight",
    "allowGrowDropDown",
    "members",
    "_forwardStates",
    "focused",
    "invalid",
    "refresh",
    "queue",
    "add",
    "open",
    "_beforeOpen",
    "close",
    "_beforeClose",
    "toggle",
    "dropDown",
    "isVisible",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "VirtualDropDownList",
    "_onPopupChangeVisibility",
    "AbstractVirtualBox",
    "superclass",
    "prototype",
    "_getAction",
    "keyIdentifier",
    "getKeyIdentifier",
    "isOpen",
    "isModifierPressed",
    "_isModifierPressed",
    "_getBindPath",
    "source",
    "path",
    "bindPath",
    "isAltPressed",
    "isCtrlOrCommandPressed",
    "isShiftPressed",
    "isMetaPressed",
    "action",
    "setMinWidth",
    "getData",
    "addState",
    "removeState",
    "_applyModel",
    "value",
    "old",
    "setModel",
    "_applyDelegate",
    "setDelegate",
    "_applyLabelPath",
    "setLabelPath",
    "_applyLabelOptions",
    "setLabelOptions",
    "_applyIconPath",
    "setIconPath",
    "_applyIconOptions",
    "setIconOptions",
    "_applyRowHeight",
    "setItemHeight",
    "_applyMaxListHeight",
    "setMaxHeight",
    "destruct",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/AbstractVirtualBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Basic class for widgets which need a virtual list as popup for example a\r\n * SelectBox. It's basically supports a drop-down as popup with a virtual list\r\n * and the whole children management.\r\n *\r\n * @childControl dropdown {qx.ui.form.core.VirtualDropDownList} The drop-down list.\r\n */\r\nqx.Class.define(\"qx.ui.form.core.AbstractVirtualBox\", {\r\n  extend: qx.ui.core.Widget,\r\n  include: qx.ui.form.MForm,\r\n  implement: qx.ui.form.IForm,\r\n  type: \"abstract\",\r\n\r\n  /**\r\n   * @param model {qx.data.Array?null} The model data for the widget.\r\n   */\r\n  construct(model) {\r\n    super();\r\n\r\n    // set the layout\r\n    var layout = new qx.ui.layout.HBox();\r\n    this._setLayout(layout);\r\n    layout.setAlignY(\"middle\");\r\n\r\n    // Register listeners\r\n    this.addListener(\"keypress\", this._handleKeyboard, this);\r\n    this.addListener(\"tap\", this._handlePointer, this);\r\n    this.addListener(\"blur\", this._onBlur, this);\r\n    this.addListener(\"resize\", this._onResize, this);\r\n\r\n    this._createChildControl(\"dropdown\");\r\n\r\n    this.bind(\r\n      \"allowGrowDropDown\",\r\n      this.getChildControl(\"dropdown\"),\r\n      \"allowGrowDropDown\"\r\n    );\r\n\r\n    if (model != null) {\r\n      this.initModel(model);\r\n    } else {\r\n      this.__defaultModel = new qx.data.Array();\r\n      this.initModel(this.__defaultModel);\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    // overridden\r\n    focusable: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    // overridden\r\n    width: {\r\n      refine: true,\r\n      init: 120\r\n    },\r\n\r\n    /** Data array containing the data which should be shown in the drop-down. */\r\n    model: {\r\n      check: \"qx.data.Array\",\r\n      apply: \"_applyModel\",\r\n      event: \"changeModel\",\r\n      nullable: false,\r\n      deferredInit: true\r\n    },\r\n\r\n    /**\r\n     * Delegation object which can have one or more functions defined by the\r\n     * {@link qx.ui.list.core.IListDelegate} interface.\r\n     */\r\n    delegate: {\r\n      apply: \"_applyDelegate\",\r\n      event: \"changeDelegate\",\r\n      init: null,\r\n      nullable: true\r\n    },\r\n\r\n    /**\r\n     * The path to the property which holds the information that should be\r\n     * displayed as a label. This is only needed if objects are stored in the\r\n     * model.\r\n     */\r\n    labelPath: {\r\n      check: \"String\",\r\n      apply: \"_applyLabelPath\",\r\n      event: \"changeLabelPath\",\r\n      nullable: true\r\n    },\r\n\r\n    /**\r\n     * A map containing the options for the label binding. The possible keys\r\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\r\n     */\r\n    labelOptions: {\r\n      apply: \"_applyLabelOptions\",\r\n      event: \"changeLabelOptions\",\r\n      nullable: true\r\n    },\r\n\r\n    /**\r\n     * The path to the property which holds the information that should be\r\n     * displayed as an icon. This is only needed if objects are stored in the\r\n     * model and icons should be displayed.\r\n     */\r\n    iconPath: {\r\n      check: \"String\",\r\n      event: \"changeIconPath\",\r\n      apply: \"_applyIconPath\",\r\n      nullable: true\r\n    },\r\n\r\n    /**\r\n     * A map containing the options for the icon binding. The possible keys\r\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\r\n     */\r\n    iconOptions: {\r\n      apply: \"_applyIconOptions\",\r\n      event: \"changeIconOptions\",\r\n      nullable: true\r\n    },\r\n\r\n    /** Default item height. */\r\n    itemHeight: {\r\n      check: \"Integer\",\r\n      init: 25,\r\n      apply: \"_applyRowHeight\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The maximum height of the drop-down list. Setting this value to\r\n     * <code>null</code> will set cause the list to be auto-sized.\r\n     */\r\n    maxListHeight: {\r\n      check: \"Number\",\r\n      apply: \"_applyMaxListHeight\",\r\n      nullable: true,\r\n      init: 200\r\n    },\r\n\r\n    /**\r\n     * Allow the drop-down to grow wider than its parent.\r\n     */\r\n    allowGrowDropDown: {\r\n      init: false,\r\n      nullable: false,\r\n      check: \"Boolean\",\r\n      event: \"changeAllowGrowDropDown\"\r\n    }\r\n  },\r\n\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    /** @type {qx.data.Array} The initial model array of this virtual box. */\r\n    __defaultModel: null,\r\n\r\n    /**\r\n     * @lint ignoreReferenceField(_forwardStates)\r\n     */\r\n    _forwardStates: {\r\n      focused: true,\r\n      invalid: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Trigger a rebuild from the internal data structure.\r\n     */\r\n    refresh() {\r\n      this.getChildControl(\"dropdown\").getChildControl(\"list\").refresh();\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    /**\r\n     * Shows the drop-down.\r\n     */\r\n    open() {\r\n      this._beforeOpen();\r\n      this.getChildControl(\"dropdown\").open();\r\n    },\r\n\r\n    /**\r\n     * Hides the drop-down.\r\n     */\r\n    close() {\r\n      this._beforeClose();\r\n      this.getChildControl(\"dropdown\").close();\r\n    },\r\n\r\n    /**\r\n     * Toggles the drop-down visibility.\r\n     */\r\n    toggle() {\r\n      var dropDown = this.getChildControl(\"dropdown\");\r\n\r\n      if (dropDown.isVisible()) {\r\n        this.close();\r\n      } else {\r\n        this.open();\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      INTERNAL API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"dropdown\":\r\n          control = new qx.ui.form.core.VirtualDropDownList(this);\r\n          control.addListener(\r\n            \"changeVisibility\",\r\n            this._onPopupChangeVisibility,\r\n            this\r\n          );\r\n\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id, hash);\r\n    },\r\n\r\n    /**\r\n     * This method is called before the drop-down is opened.\r\n     */\r\n    _beforeOpen() {},\r\n\r\n    /**\r\n     * This method is called before the drop-down is closed.\r\n     */\r\n    _beforeClose() {},\r\n\r\n    /**\r\n     * Returns the action dependent on the user interaction: e. q. <code>open</code>,\r\n     * or <code>close</code>.\r\n     *\r\n     * @param event {qx.event.type.KeySequence} The keyboard event.\r\n     * @return {String|null} The action or <code>null</code> when interaction\r\n     *  doesn't hit any action.\r\n     */\r\n    _getAction(event) {\r\n      var keyIdentifier = event.getKeyIdentifier();\r\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\r\n      var isModifierPressed = this._isModifierPressed(event);\r\n\r\n      if (\r\n        !isOpen &&\r\n        !isModifierPressed &&\r\n        (keyIdentifier === \"Down\" || keyIdentifier === \"Up\")\r\n      ) {\r\n        return \"open\";\r\n      } else if (isOpen && !isModifierPressed && keyIdentifier === \"Escape\") {\r\n        return \"close\";\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper Method to create bind path depended on the passed path.\r\n     *\r\n     * @param source {String} The path to the selection.\r\n     * @param path {String?null} The path to the item's property.\r\n     * @return {String} The created path.\r\n     */\r\n    _getBindPath(source, path) {\r\n      var bindPath = source + \"[0]\";\r\n\r\n      if (path != null && path != \"\") {\r\n        bindPath += \".\" + path;\r\n      }\r\n\r\n      return bindPath;\r\n    },\r\n\r\n    /**\r\n     * Helper method to check if one modifier key is pressed. e.q.\r\n     * <code>Control</code>, <code>Shift</code>, <code>Meta</code> or\r\n     * <code>Alt</code>.\r\n     *\r\n     * @param event {qx.event.type.KeySequence} The keyboard event.\r\n     * @return {Boolean} <code>True</code> when a modifier key is pressed,\r\n     *   <code>false</code> otherwise.\r\n     */\r\n    _isModifierPressed(event) {\r\n      var isAltPressed = event.isAltPressed();\r\n      var isCtrlOrCommandPressed = event.isCtrlOrCommandPressed();\r\n      var isShiftPressed = event.isShiftPressed();\r\n      var isMetaPressed = event.isMetaPressed();\r\n\r\n      return (\r\n        isAltPressed ||\r\n        isCtrlOrCommandPressed ||\r\n        isShiftPressed ||\r\n        isMetaPressed\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Handler for the blur event of the current widget.\r\n     *\r\n     * @param event {qx.event.type.Focus} The blur event.\r\n     */\r\n    _onBlur(event) {\r\n      this.close();\r\n    },\r\n\r\n    /**\r\n     * Handles the complete keyboard events for user interaction. If there is\r\n     * no defined user interaction {@link #_getAction}, the event is delegated\r\n     * to the {@link qx.ui.form.core.VirtualDropDownList#_handleKeyboard} method.\r\n     *\r\n     * @param event {qx.event.type.KeySequence} The keyboard event.\r\n     */\r\n    _handleKeyboard(event) {\r\n      var action = this._getAction(event);\r\n      var isOpen = this.getChildControl(\"dropdown\").isVisible();\r\n\r\n      switch (action) {\r\n        case \"open\":\r\n          this.open();\r\n          break;\r\n\r\n        case \"close\":\r\n          this.close();\r\n          break;\r\n\r\n        default:\r\n          if (isOpen) {\r\n            this.getChildControl(\"dropdown\")._handleKeyboard(event);\r\n          }\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles all pointer events dispatched on the widget.\r\n     *\r\n     * @param event {qx.event.type.Pointer|qx.event.type.Roll} The pointer event.\r\n     */\r\n    _handlePointer(event) {},\r\n\r\n    /**\r\n     * Updates drop-down minimum size.\r\n     *\r\n     * @param event {qx.event.type.Data} Data event.\r\n     */\r\n    _onResize(event) {\r\n      this.getChildControl(\"dropdown\").setMinWidth(event.getData().width);\r\n    },\r\n\r\n    /**\r\n     * Adds/removes the state 'popupOpen' depending on the visibility of the popup\r\n     *\r\n     * @param event {qx.event.type.Data} Data event\r\n     */\r\n    _onPopupChangeVisibility(event) {\r\n      event.getData() == \"visible\"\r\n        ? this.addState(\"popupOpen\")\r\n        : this.removeState(\"popupOpen\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyModel(value, old) {\r\n      this.getChildControl(\"dropdown\").getChildControl(\"list\").setModel(value);\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyDelegate(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setDelegate(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyLabelPath(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setLabelPath(value);\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyLabelOptions(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setLabelOptions(value);\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyIconPath(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setIconPath(value);\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyIconOptions(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setIconOptions(value);\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyRowHeight(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setItemHeight(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyMaxListHeight(value, old) {\r\n      this.getChildControl(\"dropdown\")\r\n        .getChildControl(\"list\")\r\n        .setMaxHeight(value);\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    if (this.__defaultModel) {\r\n      this.__defaultModel.dispose();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}