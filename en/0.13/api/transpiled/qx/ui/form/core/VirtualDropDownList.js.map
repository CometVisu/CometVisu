{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "popup",
    "Popup",
    "construct",
    "target",
    "core",
    "Assert",
    "assertNotNull",
    "assertNotUndefined",
    "assertInterface",
    "form",
    "AbstractVirtualBox",
    "layout",
    "VBox",
    "_target",
    "_createChildControl",
    "addListener",
    "__onChangeVisibility",
    "__defaultSelection",
    "data",
    "Array",
    "initSelection",
    "properties",
    "autoHide",
    "refine",
    "init",
    "keepActive",
    "selection",
    "check",
    "event",
    "apply",
    "nullable",
    "deferredInit",
    "allowGrowDropDown",
    "events",
    "changeSelection",
    "members",
    "_preselected",
    "__ignoreSelection",
    "__ignoreListSelection",
    "__cachedMaxListItemWidth",
    "open",
    "placeToWidget",
    "show",
    "close",
    "hide",
    "setPreselected",
    "modelItem",
    "listSelection",
    "getChildControl",
    "getSelection",
    "helper",
    "__synchronizeSelection",
    "dispose",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "list",
    "List",
    "set",
    "focusable",
    "keepFocus",
    "height",
    "width",
    "maxHeight",
    "getMaxListHeight",
    "selectionMode",
    "quickSelection",
    "_onListChangeSelection",
    "_handlePointer",
    "_onChangeModel",
    "_onChangeModelLength",
    "_onChangeDelegate",
    "add",
    "flex",
    "_handleKeyboard",
    "isVisible",
    "getKeyIdentifier",
    "__selectPreselected",
    "clone",
    "setTarget",
    "setBubbles",
    "dispatchEvent",
    "__onChangeSelection",
    "getItem",
    "_adjustSize",
    "getAllowGrowDropDown",
    "_recalculateMaxListItemWidth",
    "removeAll",
    "_applySelection",
    "value",
    "old",
    "removeListener",
    "splice",
    "source",
    "equals",
    "getLength",
    "spliceArg",
    "length",
    "concat",
    "toArray",
    "getBounds",
    "addListenerOnce",
    "_adjustWidth",
    "_adjustHeight",
    "uiList",
    "setWidth",
    "resetWidth",
    "availableHeight",
    "_getAvailableHeight",
    "itemsHeight",
    "getPane",
    "getRowConfig",
    "getTotalSize",
    "minHeight",
    "getMinHeight",
    "setMaxHeight",
    "distance",
    "getLayoutLocation",
    "viewPortHeight",
    "bom",
    "Viewport",
    "getHeight",
    "toTop",
    "top",
    "toBottom",
    "bottom",
    "maxWidth",
    "model",
    "getModel",
    "createWidget",
    "util",
    "Delegate",
    "getMethod",
    "getDelegate",
    "ListItem",
    "tempListItem",
    "syncAppearance",
    "styles",
    "font",
    "getFont",
    "theme",
    "manager",
    "Font",
    "getInstance",
    "resolve",
    "getStyles",
    "getDefaultStyles",
    "paddingX",
    "getPaddingLeft",
    "getPaddingRight",
    "getMarginLeft",
    "getMarginRight",
    "label",
    "forEach",
    "item",
    "content",
    "get",
    "getLabelPath",
    "Label",
    "getHtmlSize",
    "undefined",
    "_getMaxListItemWidth",
    "destruct",
    "VirtualDropDownList"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/VirtualDropDownList.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A drop-down (popup) widget which contains a virtual list for selection.\n *\n * @childControl list {qx.ui.list.List} The virtual list.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.form.core.VirtualDropDownList\", {\n  extend: qx.ui.popup.Popup,\n\n  /**\n   * Creates the drop-down list.\n   *\n   * @param target {qx.ui.form.core.AbstractVirtualBox} The composite widget.\n   */\n  construct(target) {\n    qx.core.Assert.assertNotNull(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertNotUndefined(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertInterface(\n      target,\n      qx.ui.form.core.AbstractVirtualBox,\n      \"Invalid parameter 'target'!\"\n    );\n\n    super(new qx.ui.layout.VBox());\n\n    this._target = target;\n\n    this._createChildControl(\"list\");\n    this.addListener(\"changeVisibility\", this.__onChangeVisibility, this);\n\n    this.__defaultSelection = new qx.data.Array();\n    this.initSelection(this.__defaultSelection);\n  },\n\n  properties: {\n    // overridden\n    autoHide: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    keepActive: {\n      refine: true,\n      init: true\n    },\n\n    /** Current selected items. */\n    selection: {\n      check: \"qx.data.Array\",\n      event: \"changeSelection\",\n      apply: \"_applySelection\",\n      nullable: false,\n      deferredInit: true\n    },\n\n    /**\n     * Allow the drop-down to grow wider than its parent.\n     */\n    allowGrowDropDown: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\",\n      apply: \"_adjustSize\",\n      event: \"changeAllowGrowDropDown\"\n    }\n  },\n\n  events: {\n    /**\n     * This event is fired as soon as the content of the selection property changes, but\n     * this is not equal to the change of the selection of the widget. If the selection\n     * of the widget changes, the content of the array stored in the selection property\n     * changes. This means you have to listen to the change event of the selection array\n     * to get an event as soon as the user changes the selected item.\n     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>\n     */\n    changeSelection: \"qx.event.type.Data\"\n  },\n\n  members: {\n    /** @type {qx.ui.form.core.AbstractVirtualBox} The composite widget. */\n    _target: null,\n\n    /** @type {var} The pre-selected model item. */\n    _preselected: null,\n\n    /**\n     * @type {Boolean} Indicator to ignore selection changes from the\n     * {@link #selection} array.\n     */\n    __ignoreSelection: false,\n\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\n    __ignoreListSelection: false,\n\n    /** @type {qx.data.Array} The initial selection array. */\n    __defaultSelection: null,\n\n    /**\n     * When the drop-down is allowed to grow wider than its parent,\n     * this member variable will contain the cached maximum list item width in pixels.\n     * This variable gets updated whenever the model or model length changes.\n     *\n     * @type {Number}\n     */\n    __cachedMaxListItemWidth: 0,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the drop-down.\n     */\n    open() {\n      this.placeToWidget(this._target, true);\n      this.show();\n    },\n\n    /**\n     * Hides the drop-down.\n     */\n    close() {\n      this.hide();\n    },\n\n    /**\n     * Pre-selects the drop-down item corresponding to the given model object.\n     *\n     * @param modelItem {Object} Item to be pre-selected.\n     */\n    setPreselected(modelItem) {\n      this._preselected = modelItem;\n      this.__ignoreListSelection = true;\n      var listSelection = this.getChildControl(\"list\").getSelection();\n      var helper = new qx.data.Array([modelItem]);\n      this.__synchronizeSelection(helper, listSelection);\n      helper.dispose();\n      this.__ignoreListSelection = false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"list\":\n          control = new qx.ui.list.List().set({\n            focusable: false,\n            keepFocus: true,\n            keepActive: true,\n            height: null,\n            width: null,\n            maxHeight: this._target.getMaxListHeight(),\n            selectionMode: \"one\",\n            quickSelection: true\n          });\n\n          control\n            .getSelection()\n            .addListener(\"change\", this._onListChangeSelection, this);\n          control.addListener(\"tap\", this._handlePointer, this);\n          control.addListener(\"changeModel\", this._onChangeModel, this);\n          control.addListener(\n            \"changeModelLength\",\n            this._onChangeModelLength,\n            this\n          );\n\n          control.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n\n          this.add(control, { flex: 1 });\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handles the complete keyboard events dispatched on the widget.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     */\n    _handleKeyboard(event) {\n      if (this.isVisible() && event.getKeyIdentifier() === \"Enter\") {\n        this.__selectPreselected();\n        return;\n      }\n\n      var clone = event.clone();\n      clone.setTarget(this.getChildControl(\"list\"));\n      clone.setBubbles(false);\n\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n    /**\n     * Handles all mouse events dispatched on the widget.\n     *\n     * @param event {qx.event.type.Mouse} The mouse event.\n     */\n    _handlePointer(event) {\n      this.__selectPreselected();\n    },\n\n    /**\n     * Handler for the local selection change. The method is responsible for\n     * the synchronization between the own selection and the selection\n     * form the drop-down.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onChangeSelection(event) {\n      if (this.__ignoreSelection) {\n        return;\n      }\n\n      var selection = this.getSelection();\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      this.__ignoreListSelection = true;\n      this.__synchronizeSelection(selection, listSelection);\n      this.__ignoreListSelection = false;\n\n      this.__ignoreSelection = true;\n      this.__synchronizeSelection(listSelection, selection);\n      this.__ignoreSelection = false;\n    },\n\n    /**\n     * Handler for the selection change on the list. The method is responsible\n     * for the synchronization between the list selection and the own selection.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    _onListChangeSelection(event) {\n      if (this.__ignoreListSelection) {\n        return;\n      }\n\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      if (this.isVisible()) {\n        this.setPreselected(listSelection.getItem(0));\n      } else {\n        this.__ignoreSelection = true;\n        this.__synchronizeSelection(listSelection, this.getSelection());\n        this.__ignoreSelection = false;\n      }\n    },\n\n    /**\n     * Handler for the own visibility changes. The method is responsible that\n     * the list selects the current selected item.\n     *\n     * @param event {qx.event.type.Data} The event.\n     */\n    __onChangeVisibility(event) {\n      if (this.isVisible()) {\n        if (this._preselected == null) {\n          var selection = this.getSelection();\n          var listSelection = this.getChildControl(\"list\").getSelection();\n          this.__synchronizeSelection(selection, listSelection);\n        }\n        this._adjustSize();\n      } else {\n        this.setPreselected(null);\n      }\n    },\n\n    /**\n     * Handler for the model change event.\n     * Called when the whole model changes, not when its length changes.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     * @protected\n     */\n    _onChangeModel(event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n    /**\n     * Handler for the model length change event.\n     * Called whenever items get added or removed from the model,\n     * not when the model itself changes.\n     *\n     * @param event {qx.event.type.Data}\n     * @protected\n     */\n    _onChangeModelLength(event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n    /**\n     * Handler for the delegate change event.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     */\n    _onChangeDelegate(event) {\n      this.getSelection().removeAll();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applySelection(value, old) {\n      value.addListener(\"change\", this.__onChangeSelection, this);\n\n      if (old != null) {\n        old.removeListener(\"change\", this.__onChangeSelection, this);\n      }\n\n      this.__synchronizeSelection(\n        value,\n        this.getChildControl(\"list\").getSelection(value)\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper method to select the current preselected item, also closes the\n     * drop-down.\n     */\n    __selectPreselected() {\n      if (this._preselected != null) {\n        var selection = this.getSelection();\n        selection.splice(0, 1, this._preselected);\n        this._preselected = null;\n        this.close();\n      }\n    },\n\n    /**\n     * Helper method to synchronize both selection. The target selection has\n     * the same selection like the source selection after the synchronization.\n     *\n     * @param source {qx.data.Array} The source selection.\n     * @param target {qx.data.Array} The target selection.\n     */\n    __synchronizeSelection(source, target) {\n      if (source.equals(target)) {\n        return;\n      }\n\n      if (source.getLength() <= 0) {\n        target.removeAll();\n      } else {\n        // build arguments array for splice(0, target.length, source[0], source[1], ...)\n        var spliceArg = [0, target.length];\n        spliceArg = spliceArg.concat(source.toArray());\n\n        // use apply since it allow to use an array as the argument array\n        // (calling splice directly with an array insert it in the array on which splice is called)\n        // don't forget to dispose the array created by splice\n        target.splice.apply(target, spliceArg).dispose();\n      }\n    },\n\n    /**\n     * Adjust the drop-down to the available width and height, by calling\n     * {@link #_adjustWidth} and {@link #_adjustHeight}.\n     */\n    _adjustSize() {\n      if (!this._target.getBounds()) {\n        this.addListenerOnce(\"appear\", this._adjustSize, this);\n        return;\n      }\n\n      this._adjustWidth();\n      this._adjustHeight();\n    },\n\n    /**\n     * Adjust the drop-down to the available width. The width is limited by\n     * the current width from the _target, unless allowGrowDropDown is true.\n     */\n    _adjustWidth() {\n      var width = this._target.getBounds().width;\n      var uiList = this.getChildControl(\"list\");\n      if (this.getAllowGrowDropDown()) {\n        // Let the drop-down handle its own width.\n        this.setWidth(null);\n\n        if (this.__cachedMaxListItemWidth > 0) {\n          uiList.setWidth(this.__cachedMaxListItemWidth);\n        } else {\n          uiList.setWidth(width);\n        }\n      } else {\n        // Make the drop-down as wide as the virtual-box that it is owned by.\n        this.setWidth(width);\n        uiList.resetWidth();\n      }\n    },\n\n    /**\n     * Adjust the drop-down to the available height. Ensure that the list\n     * is never bigger that the max list height and the available space\n     * in the viewport.\n     */\n    _adjustHeight() {\n      var availableHeight = this._getAvailableHeight();\n      if (availableHeight === null) {\n        return;\n      }\n\n      var maxHeight = this._target.getMaxListHeight();\n      var list = this.getChildControl(\"list\");\n      var itemsHeight = list.getPane().getRowConfig().getTotalSize();\n\n      if (maxHeight == null || itemsHeight < maxHeight) {\n        maxHeight = itemsHeight;\n      }\n\n      if (maxHeight > availableHeight) {\n        maxHeight = availableHeight;\n      }\n\n      var minHeight = list.getMinHeight();\n      if (null !== minHeight && minHeight > maxHeight) {\n        maxHeight = minHeight;\n      }\n\n      list.setMaxHeight(maxHeight);\n    },\n\n    /**\n     * Calculates the available height in the viewport.\n     *\n     * @return {Integer|null} Available height in the viewport.\n     */\n    _getAvailableHeight() {\n      var distance = this.getLayoutLocation(this._target);\n      if (!distance) {\n        return null;\n      }\n\n      var viewPortHeight = qx.bom.Viewport.getHeight();\n\n      // distance to the bottom and top borders of the viewport\n      var toTop = distance.top;\n      var toBottom = viewPortHeight - distance.bottom;\n\n      return toTop > toBottom ? toTop : toBottom;\n    },\n\n    /**\n     * Loop over all model items to recalculate the maximum list item width.\n     *\n     * @protected\n     */\n    _recalculateMaxListItemWidth() {\n      var maxWidth = 0;\n      var list = this.getChildControl(\"list\");\n      var model = list.getModel();\n      if (model && model.length) {\n        var createWidget = qx.util.Delegate.getMethod(\n          list.getDelegate(),\n          \"createItem\"\n        );\n\n        if (!createWidget) {\n          createWidget = function () {\n            return new qx.ui.form.ListItem();\n          };\n        }\n\n        var tempListItem = createWidget();\n\n        // Make sure the widget has the correct padding properties.\n        tempListItem.syncAppearance();\n\n        var styles;\n        var font = tempListItem.getFont();\n        if (font) {\n          styles = qx.theme.manager.Font.getInstance()\n            .resolve(font)\n            .getStyles();\n        }\n        if (!styles) {\n          styles = qx.bom.Font.getDefaultStyles();\n        }\n\n        var paddingX =\n          list.getPaddingLeft() +\n          list.getPaddingRight() +\n          tempListItem.getPaddingLeft() +\n          tempListItem.getPaddingRight() +\n          tempListItem.getMarginLeft() +\n          tempListItem.getMarginRight();\n\n        var label = tempListItem.getChildControl(\"label\");\n        if (label) {\n          // Make sure the widget has the correct padding properties.\n          label.syncAppearance();\n\n          paddingX +=\n            label.getPaddingLeft() +\n            label.getPaddingRight() +\n            label.getMarginLeft() +\n            label.getMarginRight();\n        }\n\n        model.forEach(function (item) {\n          var width = 0;\n          var content;\n\n          if (typeof item === \"string\") {\n            content = item;\n          } else if (typeof item === \"object\" && item !== null) {\n            content = item.get(list.getLabelPath());\n          }\n\n          if (content) {\n            width =\n              qx.bom.Label.getHtmlSize(content, styles, undefined).width +\n              paddingX;\n\n            if (width > maxWidth) {\n              maxWidth = width;\n            }\n          }\n        });\n\n        tempListItem.dispose();\n      }\n\n      this.__cachedMaxListItemWidth = maxWidth;\n    },\n\n    /**\n     * Get the cached maximum list item width.\n     *\n     * @return {Number}\n     * @protected\n     */\n    _getMaxListItemWidth() {\n      return this.__cachedMaxListItemWidth;\n    }\n  },\n\n  destruct() {\n    if (this.__defaultSelection) {\n      this.__defaultSelection.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}