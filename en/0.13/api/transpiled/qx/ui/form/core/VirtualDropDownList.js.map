{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "popup",
    "Popup",
    "construct",
    "target",
    "core",
    "Assert",
    "assertNotNull",
    "assertNotUndefined",
    "assertInterface",
    "form",
    "AbstractVirtualBox",
    "constructor",
    "call",
    "layout",
    "VBox",
    "_target",
    "_createChildControl",
    "addListener",
    "__onChangeVisibility",
    "__defaultSelection",
    "data",
    "Array",
    "initSelection",
    "properties",
    "autoHide",
    "refine",
    "init",
    "keepActive",
    "selection",
    "check",
    "event",
    "apply",
    "nullable",
    "deferredInit",
    "allowGrowDropDown",
    "events",
    "changeSelection",
    "members",
    "_preselected",
    "__ignoreSelection",
    "__ignoreListSelection",
    "__cachedMaxListItemWidth",
    "open",
    "placeToWidget",
    "show",
    "close",
    "hide",
    "setPreselected",
    "modelItem",
    "listSelection",
    "getChildControl",
    "getSelection",
    "helper",
    "__synchronizeSelection",
    "dispose",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "list",
    "List",
    "set",
    "focusable",
    "keepFocus",
    "height",
    "width",
    "maxHeight",
    "getMaxListHeight",
    "selectionMode",
    "quickSelection",
    "_onListChangeSelection",
    "_handlePointer",
    "_onChangeModel",
    "_onChangeModelLength",
    "_onChangeDelegate",
    "add",
    "flex",
    "VirtualDropDownList",
    "superclass",
    "prototype",
    "_handleKeyboard",
    "isVisible",
    "getKeyIdentifier",
    "__selectPreselected",
    "clone",
    "setTarget",
    "setBubbles",
    "dispatchEvent",
    "__onChangeSelection",
    "getItem",
    "_adjustSize",
    "getAllowGrowDropDown",
    "_recalculateMaxListItemWidth",
    "removeAll",
    "_applySelection",
    "value",
    "old",
    "removeListener",
    "splice",
    "source",
    "equals",
    "getLength",
    "spliceArg",
    "length",
    "concat",
    "toArray",
    "getBounds",
    "addListenerOnce",
    "_adjustWidth",
    "_adjustHeight",
    "uiList",
    "setWidth",
    "resetWidth",
    "availableHeight",
    "_getAvailableHeight",
    "itemsHeight",
    "getPane",
    "getRowConfig",
    "getTotalSize",
    "minHeight",
    "getMinHeight",
    "setMaxHeight",
    "distance",
    "getLayoutLocation",
    "viewPortHeight",
    "bom",
    "Viewport",
    "getHeight",
    "toTop",
    "top",
    "toBottom",
    "bottom",
    "maxWidth",
    "model",
    "getModel",
    "createWidget",
    "util",
    "Delegate",
    "getMethod",
    "getDelegate",
    "ListItem",
    "tempListItem",
    "syncAppearance",
    "styles",
    "font",
    "getFont",
    "theme",
    "manager",
    "Font",
    "getInstance",
    "resolve",
    "getStyles",
    "getDefaultStyles",
    "paddingX",
    "getPaddingLeft",
    "getPaddingRight",
    "getMarginLeft",
    "getMarginRight",
    "label",
    "forEach",
    "item",
    "content",
    "_typeof",
    "get",
    "getLabelPath",
    "Label",
    "getHtmlSize",
    "undefined",
    "_getMaxListItemWidth",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/core/VirtualDropDownList.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A drop-down (popup) widget which contains a virtual list for selection.\n *\n * @childControl list {qx.ui.list.List} The virtual list.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.form.core.VirtualDropDownList\", {\n  extend: qx.ui.popup.Popup,\n\n  /**\n   * Creates the drop-down list.\n   *\n   * @param target {qx.ui.form.core.AbstractVirtualBox} The composite widget.\n   */\n  construct(target) {\n    qx.core.Assert.assertNotNull(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertNotUndefined(target, \"Invalid parameter 'target'!\");\n    qx.core.Assert.assertInterface(\n      target,\n      qx.ui.form.core.AbstractVirtualBox,\n      \"Invalid parameter 'target'!\"\n    );\n\n    super(new qx.ui.layout.VBox());\n\n    this._target = target;\n\n    this._createChildControl(\"list\");\n    this.addListener(\"changeVisibility\", this.__onChangeVisibility, this);\n\n    this.__defaultSelection = new qx.data.Array();\n    this.initSelection(this.__defaultSelection);\n  },\n\n  properties: {\n    // overridden\n    autoHide: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    keepActive: {\n      refine: true,\n      init: true\n    },\n\n    /** Current selected items. */\n    selection: {\n      check: \"qx.data.Array\",\n      event: \"changeSelection\",\n      apply: \"_applySelection\",\n      nullable: false,\n      deferredInit: true\n    },\n\n    /**\n     * Allow the drop-down to grow wider than its parent.\n     */\n    allowGrowDropDown: {\n      init: false,\n      nullable: false,\n      check: \"Boolean\",\n      apply: \"_adjustSize\",\n      event: \"changeAllowGrowDropDown\"\n    }\n  },\n\n  events: {\n    /**\n     * This event is fired as soon as the content of the selection property changes, but\n     * this is not equal to the change of the selection of the widget. If the selection\n     * of the widget changes, the content of the array stored in the selection property\n     * changes. This means you have to listen to the change event of the selection array\n     * to get an event as soon as the user changes the selected item.\n     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>\n     */\n    changeSelection: \"qx.event.type.Data\"\n  },\n\n  members: {\n    /** @type {qx.ui.form.core.AbstractVirtualBox} The composite widget. */\n    _target: null,\n\n    /** @type {var} The pre-selected model item. */\n    _preselected: null,\n\n    /**\n     * @type {Boolean} Indicator to ignore selection changes from the\n     * {@link #selection} array.\n     */\n    __ignoreSelection: false,\n\n    /** @type {Boolean} Indicator to ignore selection changes from the list. */\n    __ignoreListSelection: false,\n\n    /** @type {qx.data.Array} The initial selection array. */\n    __defaultSelection: null,\n\n    /**\n     * When the drop-down is allowed to grow wider than its parent,\n     * this member variable will contain the cached maximum list item width in pixels.\n     * This variable gets updated whenever the model or model length changes.\n     *\n     * @type {Number}\n     */\n    __cachedMaxListItemWidth: 0,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Shows the drop-down.\n     */\n    open() {\n      this.placeToWidget(this._target, true);\n      this.show();\n    },\n\n    /**\n     * Hides the drop-down.\n     */\n    close() {\n      this.hide();\n    },\n\n    /**\n     * Pre-selects the drop-down item corresponding to the given model object.\n     *\n     * @param modelItem {Object} Item to be pre-selected.\n     */\n    setPreselected(modelItem) {\n      this._preselected = modelItem;\n      this.__ignoreListSelection = true;\n      var listSelection = this.getChildControl(\"list\").getSelection();\n      var helper = new qx.data.Array([modelItem]);\n      this.__synchronizeSelection(helper, listSelection);\n      helper.dispose();\n      this.__ignoreListSelection = false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"list\":\n          control = new qx.ui.list.List().set({\n            focusable: false,\n            keepFocus: true,\n            keepActive: true,\n            height: null,\n            width: null,\n            maxHeight: this._target.getMaxListHeight(),\n            selectionMode: \"one\",\n            quickSelection: true\n          });\n\n          control\n            .getSelection()\n            .addListener(\"change\", this._onListChangeSelection, this);\n          control.addListener(\"tap\", this._handlePointer, this);\n          control.addListener(\"changeModel\", this._onChangeModel, this);\n          control.addListener(\n            \"changeModelLength\",\n            this._onChangeModelLength,\n            this\n          );\n\n          control.addListener(\"changeDelegate\", this._onChangeDelegate, this);\n\n          this.add(control, { flex: 1 });\n          break;\n      }\n\n      return control || super._createChildControlImpl(id, hash);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handles the complete keyboard events dispatched on the widget.\n     *\n     * @param event {qx.event.type.KeySequence} The keyboard event.\n     */\n    _handleKeyboard(event) {\n      if (this.isVisible() && event.getKeyIdentifier() === \"Enter\") {\n        this.__selectPreselected();\n        return;\n      }\n\n      var clone = event.clone();\n      clone.setTarget(this.getChildControl(\"list\"));\n      clone.setBubbles(false);\n\n      this.getChildControl(\"list\").dispatchEvent(clone);\n    },\n\n    /**\n     * Handles all mouse events dispatched on the widget.\n     *\n     * @param event {qx.event.type.Mouse} The mouse event.\n     */\n    _handlePointer(event) {\n      this.__selectPreselected();\n    },\n\n    /**\n     * Handler for the local selection change. The method is responsible for\n     * the synchronization between the own selection and the selection\n     * form the drop-down.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    __onChangeSelection(event) {\n      if (this.__ignoreSelection) {\n        return;\n      }\n\n      var selection = this.getSelection();\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      this.__ignoreListSelection = true;\n      this.__synchronizeSelection(selection, listSelection);\n      this.__ignoreListSelection = false;\n\n      this.__ignoreSelection = true;\n      this.__synchronizeSelection(listSelection, selection);\n      this.__ignoreSelection = false;\n    },\n\n    /**\n     * Handler for the selection change on the list. The method is responsible\n     * for the synchronization between the list selection and the own selection.\n     *\n     * @param event {qx.event.type.Data} The data event.\n     */\n    _onListChangeSelection(event) {\n      if (this.__ignoreListSelection) {\n        return;\n      }\n\n      var listSelection = this.getChildControl(\"list\").getSelection();\n\n      if (this.isVisible()) {\n        this.setPreselected(listSelection.getItem(0));\n      } else {\n        this.__ignoreSelection = true;\n        this.__synchronizeSelection(listSelection, this.getSelection());\n        this.__ignoreSelection = false;\n      }\n    },\n\n    /**\n     * Handler for the own visibility changes. The method is responsible that\n     * the list selects the current selected item.\n     *\n     * @param event {qx.event.type.Data} The event.\n     */\n    __onChangeVisibility(event) {\n      if (this.isVisible()) {\n        if (this._preselected == null) {\n          var selection = this.getSelection();\n          var listSelection = this.getChildControl(\"list\").getSelection();\n          this.__synchronizeSelection(selection, listSelection);\n        }\n        this._adjustSize();\n      } else {\n        this.setPreselected(null);\n      }\n    },\n\n    /**\n     * Handler for the model change event.\n     * Called when the whole model changes, not when its length changes.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     * @protected\n     */\n    _onChangeModel(event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n    /**\n     * Handler for the model length change event.\n     * Called whenever items get added or removed from the model,\n     * not when the model itself changes.\n     *\n     * @param event {qx.event.type.Data}\n     * @protected\n     */\n    _onChangeModelLength(event) {\n      if (this.getAllowGrowDropDown()) {\n        this._recalculateMaxListItemWidth();\n      }\n\n      this._adjustSize();\n    },\n\n    /**\n     * Handler for the delegate change event.\n     *\n     * @param event {qx.event.type.Data} The change event.\n     */\n    _onChangeDelegate(event) {\n      this.getSelection().removeAll();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applySelection(value, old) {\n      value.addListener(\"change\", this.__onChangeSelection, this);\n\n      if (old != null) {\n        old.removeListener(\"change\", this.__onChangeSelection, this);\n      }\n\n      this.__synchronizeSelection(\n        value,\n        this.getChildControl(\"list\").getSelection(value)\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper method to select the current preselected item, also closes the\n     * drop-down.\n     */\n    __selectPreselected() {\n      if (this._preselected != null) {\n        var selection = this.getSelection();\n        selection.splice(0, 1, this._preselected);\n        this._preselected = null;\n        this.close();\n      }\n    },\n\n    /**\n     * Helper method to synchronize both selection. The target selection has\n     * the same selection like the source selection after the synchronization.\n     *\n     * @param source {qx.data.Array} The source selection.\n     * @param target {qx.data.Array} The target selection.\n     */\n    __synchronizeSelection(source, target) {\n      if (source.equals(target)) {\n        return;\n      }\n\n      if (source.getLength() <= 0) {\n        target.removeAll();\n      } else {\n        // build arguments array for splice(0, target.length, source[0], source[1], ...)\n        var spliceArg = [0, target.length];\n        spliceArg = spliceArg.concat(source.toArray());\n\n        // use apply since it allow to use an array as the argument array\n        // (calling splice directly with an array insert it in the array on which splice is called)\n        // don't forget to dispose the array created by splice\n        target.splice.apply(target, spliceArg).dispose();\n      }\n    },\n\n    /**\n     * Adjust the drop-down to the available width and height, by calling\n     * {@link #_adjustWidth} and {@link #_adjustHeight}.\n     */\n    _adjustSize() {\n      if (!this._target.getBounds()) {\n        this.addListenerOnce(\"appear\", this._adjustSize, this);\n        return;\n      }\n\n      this._adjustWidth();\n      this._adjustHeight();\n    },\n\n    /**\n     * Adjust the drop-down to the available width. The width is limited by\n     * the current width from the _target, unless allowGrowDropDown is true.\n     */\n    _adjustWidth() {\n      var width = this._target.getBounds().width;\n      var uiList = this.getChildControl(\"list\");\n      if (this.getAllowGrowDropDown()) {\n        // Let the drop-down handle its own width.\n        this.setWidth(null);\n\n        if (this.__cachedMaxListItemWidth > 0) {\n          uiList.setWidth(this.__cachedMaxListItemWidth);\n        } else {\n          uiList.setWidth(width);\n        }\n      } else {\n        // Make the drop-down as wide as the virtual-box that it is owned by.\n        this.setWidth(width);\n        uiList.resetWidth();\n      }\n    },\n\n    /**\n     * Adjust the drop-down to the available height. Ensure that the list\n     * is never bigger that the max list height and the available space\n     * in the viewport.\n     */\n    _adjustHeight() {\n      var availableHeight = this._getAvailableHeight();\n      if (availableHeight === null) {\n        return;\n      }\n\n      var maxHeight = this._target.getMaxListHeight();\n      var list = this.getChildControl(\"list\");\n      var itemsHeight = list.getPane().getRowConfig().getTotalSize();\n\n      if (maxHeight == null || itemsHeight < maxHeight) {\n        maxHeight = itemsHeight;\n      }\n\n      if (maxHeight > availableHeight) {\n        maxHeight = availableHeight;\n      }\n\n      var minHeight = list.getMinHeight();\n      if (null !== minHeight && minHeight > maxHeight) {\n        maxHeight = minHeight;\n      }\n\n      list.setMaxHeight(maxHeight);\n    },\n\n    /**\n     * Calculates the available height in the viewport.\n     *\n     * @return {Integer|null} Available height in the viewport.\n     */\n    _getAvailableHeight() {\n      var distance = this.getLayoutLocation(this._target);\n      if (!distance) {\n        return null;\n      }\n\n      var viewPortHeight = qx.bom.Viewport.getHeight();\n\n      // distance to the bottom and top borders of the viewport\n      var toTop = distance.top;\n      var toBottom = viewPortHeight - distance.bottom;\n\n      return toTop > toBottom ? toTop : toBottom;\n    },\n\n    /**\n     * Loop over all model items to recalculate the maximum list item width.\n     *\n     * @protected\n     */\n    _recalculateMaxListItemWidth() {\n      var maxWidth = 0;\n      var list = this.getChildControl(\"list\");\n      var model = list.getModel();\n      if (model && model.length) {\n        var createWidget = qx.util.Delegate.getMethod(\n          list.getDelegate(),\n          \"createItem\"\n        );\n\n        if (!createWidget) {\n          createWidget = function () {\n            return new qx.ui.form.ListItem();\n          };\n        }\n\n        var tempListItem = createWidget();\n\n        // Make sure the widget has the correct padding properties.\n        tempListItem.syncAppearance();\n\n        var styles;\n        var font = tempListItem.getFont();\n        if (font) {\n          styles = qx.theme.manager.Font.getInstance()\n            .resolve(font)\n            .getStyles();\n        }\n        if (!styles) {\n          styles = qx.bom.Font.getDefaultStyles();\n        }\n\n        var paddingX =\n          list.getPaddingLeft() +\n          list.getPaddingRight() +\n          tempListItem.getPaddingLeft() +\n          tempListItem.getPaddingRight() +\n          tempListItem.getMarginLeft() +\n          tempListItem.getMarginRight();\n\n        var label = tempListItem.getChildControl(\"label\");\n        if (label) {\n          // Make sure the widget has the correct padding properties.\n          label.syncAppearance();\n\n          paddingX +=\n            label.getPaddingLeft() +\n            label.getPaddingRight() +\n            label.getMarginLeft() +\n            label.getMarginRight();\n        }\n\n        model.forEach(function (item) {\n          var width = 0;\n          var content;\n\n          if (typeof item === \"string\") {\n            content = item;\n          } else if (typeof item === \"object\" && item !== null) {\n            content = item.get(list.getLabelPath());\n          }\n\n          if (content) {\n            width =\n              qx.bom.Label.getHtmlSize(content, styles, undefined).width +\n              paddingX;\n\n            if (width > maxWidth) {\n              maxWidth = width;\n            }\n          }\n        });\n\n        tempListItem.dispose();\n      }\n\n      this.__cachedMaxListItemWidth = maxWidth;\n    },\n\n    /**\n     * Get the cached maximum list item width.\n     *\n     * @return {Number}\n     * @protected\n     */\n    _getMaxListItemWidth() {\n      return this.__cachedMaxListItemWidth;\n    }\n  },\n\n  destruct() {\n    if (this.__defaultSelection) {\n      this.__defaultSelection.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}