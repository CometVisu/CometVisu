{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "List",
    "construct",
    "__checked",
    "destruct",
    "dispose",
    "events",
    "changeChecked",
    "members",
    "getChecked",
    "Object",
    "values",
    "setChecked",
    "checked",
    "oldData",
    "__inChangingChecked",
    "toUncheck",
    "forEach",
    "item",
    "toHashCode",
    "replacement",
    "someTurnedOn",
    "hash",
    "setValue",
    "keys",
    "length",
    "fireDataEvent",
    "resetChecked",
    "_onAddChild",
    "evt",
    "getData",
    "getValue",
    "__onItemChangeCheckedImpl",
    "addListener",
    "__onItemChangeChecked",
    "_onRemoveChild",
    "removeListener",
    "getTarget",
    "removing",
    "changed",
    "CheckedList"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/CheckedList.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021-2021 Zenesis Limited https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (github.com/johnspackman)\n\n************************************************************************ */\n\n/**\n * Provides a version of `qx.ui.form.List` which expects children to be instances\n * of `qx.ui.form.CheckBox` and has a `checked` property\n */\nqx.Class.define(\"qx.ui.form.CheckedList\", {\n  extend: qx.ui.form.List,\n\n  construct() {\n    super();\n    this.__checked = {};\n  },\n\n  destruct() {\n    this.__checked.dispose();\n    this.__checked = null;\n  },\n\n  events: {\n    /** Fired when the checked array changes, data is the array */\n    changeChecked: \"qx.event.type.Data\"\n  },\n\n  members: {\n    /** @type {Map<String,qx.ui.form.CheckBox>} map of checked items, indexed by hash code */\n    __checked: null,\n\n    /**\n     * Returns the array of checked items\n     *\n     * @return {qx.ui.form.CheckBox[]}\n     */\n    getChecked() {\n      return Object.values(this.__checked);\n    },\n\n    /**\n     * Sets the array of checked items\n     *\n     * @param {qx.ui.form.CheckBox[]} the replacement array of checked items\n     */\n    setChecked(checked) {\n      let oldData = this.getChecked();\n      this.__inChangingChecked = true;\n      try {\n        let toUncheck = {};\n        Object.values(this.__checked).forEach(\n          item => (toUncheck[item.toHashCode()] = item)\n        );\n\n        let replacement = {};\n        if (!checked) {\n          checked = [];\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            let lookup = {};\n            this.getChildren().forEach(\n              item => (lookup[item.toHashCode()] = item)\n            );\n\n            checked.forEach(item =>\n              this.assertTrue(\n                !!lookup[item.toHashCode()],\n                `The item ${item} to be checked is not a child of this list`\n              )\n            );\n          }\n\n          let someTurnedOn = false;\n          checked.forEach(item => {\n            let hash = item.toHashCode();\n            if (!this.__checked[hash]) {\n              someTurnedOn = true;\n              item.setValue(true);\n            }\n            delete toUncheck[hash];\n            replacement[hash] = item;\n          });\n\n          // Nothing turned on and nothing to turn off - then no change\n          if (!someTurnedOn && Object.keys(toUncheck).length == 0) {\n            return;\n          }\n        }\n        Object.values(toUncheck).forEach(item => item.setValue(false));\n        this.__checked = replacement;\n      } finally {\n        this.__inChangingChecked = false;\n      }\n\n      this.fireDataEvent(\"changeChecked\", this.getChecked(), oldData);\n    },\n\n    /**\n     * Clears the list of checked items\n     */\n    resetChecked() {\n      this.setChecked(null);\n    },\n\n    /*\n     * @Override\n     */\n    _onAddChild(evt) {\n      super._onAddChild(evt);\n\n      let item = evt.getData();\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          item,\n          qx.ui.form.CheckBox,\n          this.classname +\n            \" only supports instances of qx.ui.core.CheckBox as children\"\n        );\n      }\n      if (item.getValue()) {\n        this.__onItemChangeCheckedImpl(item);\n      }\n      item.addListener(\"changeValue\", this.__onItemChangeChecked, this);\n    },\n\n    /*\n     * @Override\n     */\n    _onRemoveChild(evt) {\n      super._onRemoveChild(evt);\n\n      let item = evt.getData();\n      item.removeListener(\"changeValue\", this.__onItemChangeChecked, this);\n\n      if (item.getValue()) {\n        this.__onItemChangeCheckedImpl(item, true);\n      }\n    },\n\n    /**\n     * Event handler for when an item is [un]checked\n     *\n     * @param evt {qx.event.type.Data} the event\n     */\n    __onItemChangeChecked(evt) {\n      if (this.__inChangingChecked) {\n        return;\n      }\n      this.__onItemChangeCheckedImpl(evt.getTarget());\n    },\n\n    /**\n     * Handles changes in the items checked state\n     *\n     * @param item {qx.ui.form.CheckBox} the item\n     * @param removing {Boolean} whether the item is being removed (act as if unchecking)\n     */\n    __onItemChangeCheckedImpl(item, removing) {\n      let hash = item.toHashCode();\n      let checked = item.getValue();\n      if (removing) {\n        checked = false;\n      }\n      let changed = false;\n      let oldData = this.getChecked();\n      if (checked) {\n        if (!this.__checked[hash]) {\n          changed = true;\n          this.__checked[hash] = item;\n        }\n      } else {\n        if (this.__checked[hash]) {\n          delete this.__checked[hash];\n          changed = true;\n        }\n      }\n      if (changed) {\n        this.fireDataEvent(\"changeChecked\", this.getChecked(), oldData);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}