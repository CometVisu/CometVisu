{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "List",
    "construct",
    "__checked",
    "destruct",
    "dispose",
    "events",
    "changeChecked",
    "members",
    "getChecked",
    "Object",
    "values",
    "setChecked",
    "checked",
    "oldData",
    "__inChangingChecked",
    "toUncheck",
    "forEach",
    "item",
    "toHashCode",
    "replacement",
    "someTurnedOn",
    "hash",
    "setValue",
    "keys",
    "length",
    "fireDataEvent",
    "resetChecked",
    "_onAddChild",
    "evt",
    "getData",
    "getValue",
    "__onItemChangeCheckedImpl",
    "addListener",
    "__onItemChangeChecked",
    "_onRemoveChild",
    "removeListener",
    "getTarget",
    "removing",
    "changed",
    "CheckedList"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/CheckedList.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2021-2021 Zenesis Limited https://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (github.com/johnspackman)\n\n************************************************************************ */\n\n/**\n * Provides a version of `qx.ui.form.List` which expects children to be instances\n * of `qx.ui.form.CheckBox` and has a `checked` property\n */\nqx.Class.define(\"qx.ui.form.CheckedList\", {\n  extend: qx.ui.form.List,\n\n  construct() {\n    super();\n    this.__checked = {};\n  },\n\n  destruct() {\n    this.__checked.dispose();\n    this.__checked = null;\n  },\n\n  events: {\n    /** Fired when the checked array changes, data is the array */\n    changeChecked: \"qx.event.type.Data\"\n  },\n\n  members: {\n    /** @type {Map<String,qx.ui.form.CheckBox>} map of checked items, indexed by hash code */\n    __checked: null,\n\n    /**\n     * Returns the array of checked items\n     *\n     * @return {qx.ui.form.CheckBox[]}\n     */\n    getChecked() {\n      return Object.values(this.__checked);\n    },\n\n    /**\n     * Sets the array of checked items\n     *\n     * @param {qx.ui.form.CheckBox[]} the replacement array of checked items\n     */\n    setChecked(checked) {\n      let oldData = this.getChecked();\n      this.__inChangingChecked = true;\n      try {\n        let toUncheck = {};\n        Object.values(this.__checked).forEach(\n          item => (toUncheck[item.toHashCode()] = item)\n        );\n\n        let replacement = {};\n        if (!checked) {\n          checked = [];\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            let lookup = {};\n            this.getChildren().forEach(\n              item => (lookup[item.toHashCode()] = item)\n            );\n\n            checked.forEach(item =>\n              this.assertTrue(\n                !!lookup[item.toHashCode()],\n                `The item ${item} to be checked is not a child of this list`\n              )\n            );\n          }\n\n          let someTurnedOn = false;\n          checked.forEach(item => {\n            let hash = item.toHashCode();\n            if (!this.__checked[hash]) {\n              someTurnedOn = true;\n              item.setValue(true);\n            }\n            delete toUncheck[hash];\n            replacement[hash] = item;\n          });\n\n          // Nothing turned on and nothing to turn off - then no change\n          if (!someTurnedOn && Object.keys(toUncheck).length == 0) {\n            return;\n          }\n        }\n        Object.values(toUncheck).forEach(item => item.setValue(false));\n        this.__checked = replacement;\n      } finally {\n        this.__inChangingChecked = false;\n      }\n\n      this.fireDataEvent(\"changeChecked\", this.getChecked(), oldData);\n    },\n\n    /**\n     * Clears the list of checked items\n     */\n    resetChecked() {\n      this.setChecked(null);\n    },\n\n    /*\n     * @Override\n     */\n    _onAddChild(evt) {\n      super._onAddChild(evt);\n\n      let item = evt.getData();\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          item,\n          qx.ui.form.CheckBox,\n          this.classname +\n            \" only supports instances of qx.ui.core.CheckBox as children\"\n        );\n      }\n      if (item.getValue()) {\n        this.__onItemChangeCheckedImpl(item);\n      }\n      item.addListener(\"changeValue\", this.__onItemChangeChecked, this);\n    },\n\n    /*\n     * @Override\n     */\n    _onRemoveChild(evt) {\n      super._onRemoveChild(evt);\n\n      let item = evt.getData();\n      item.removeListener(\"changeValue\", this.__onItemChangeChecked, this);\n\n      if (item.getValue()) {\n        this.__onItemChangeCheckedImpl(item, true);\n      }\n    },\n\n    /**\n     * Event handler for when an item is [un]checked\n     *\n     * @param evt {qx.event.type.Data} the event\n     */\n    __onItemChangeChecked(evt) {\n      if (this.__inChangingChecked) {\n        return;\n      }\n      this.__onItemChangeCheckedImpl(evt.getTarget());\n    },\n\n    /**\n     * Handles changes in the items checked state\n     *\n     * @param item {qx.ui.form.CheckBox} the item\n     * @param removing {Boolean} whether the item is being removed (act as if unchecking)\n     */\n    __onItemChangeCheckedImpl(item, removing) {\n      let hash = item.toHashCode();\n      let checked = item.getValue();\n      if (removing) {\n        checked = false;\n      }\n      let changed = false;\n      let oldData = this.getChecked();\n      if (checked) {\n        if (!this.__checked[hash]) {\n          changed = true;\n          this.__checked[hash] = item;\n        }\n      } else {\n        if (this.__checked[hash]) {\n          delete this.__checked[hash];\n          changed = true;\n        }\n      }\n      if (changed) {\n        this.fireDataEvent(\"changeChecked\", this.getChecked(), oldData);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}