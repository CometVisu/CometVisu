{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "events",
    "changeValue",
    "members",
    "setValue",
    "value",
    "arguments",
    "length",
    "resetValue",
    "getValue",
    "ui",
    "form",
    "IField"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/IField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Martijn Evers, The Netherlands\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martijn Evers (mever)\n\n************************************************************************ */\n\n/**\n * Field interface.\n *\n * This interface allows any value to be set as long as the following constraint\n * is met: any value returned by {@link getValue} can be set by {@link setValue}.\n *\n * This specifies the interface for handling the model value of a field.\n * The model value is always in a consistent state (see duration example), and\n * should only handle model values of a type that correctly represents the\n * data available through its UI. E.g.: duration can ideally be modeled by a number\n * of time units, like seconds. When using a date the duration may be\n * unclear (since Unix time?). Type conversions should be handled by data binding.\n *\n * The model value is not necessary what is shown to the end-user\n * by implementing class. A good example is the {@link qx.ui.form.TextField}\n * which is able to operate with or without live updating the model value.\n *\n * Duration example: a field for duration may use two date pickers for begin\n * and end dates. When the end date is before the start date the model is in\n * inconsistent state. getValue should never return such state. And calling\n * it must result in either null or the last consistent value (depending\n * on implementation or setting).\n */\nqx.Interface.define(\"qx.ui.form.IField\", {\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired when the model value was modified */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      VALUE PROPERTY\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the field model value. Should also update the UI.\n     *\n     * @param value {var|null} Updates the field with the new model value.\n     * @return {var} Should return an error when the type of\n     *  model value is not compatible with the implementing class (the concrete field).\n     */\n    setValue(value) {\n      return arguments.length == 1;\n    },\n\n    /**\n     * Resets the model value to its initial value. Should also update the UI.\n     */\n    resetValue() {},\n\n    /**\n     * Returns a consistent and up-to-date model value.\n     *\n     * Note: returned value can also be a promise of type <code>Promise&lt;*|null&gt;</code>.\n     *\n     * @return {var|null} The model value plain or as promise.\n     */\n    getValue() {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACvC;AACF;AACA;AACA;AACA;;IAEEC,MAAM,EAAE;MACN;MACAC,WAAW,EAAE;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACC,KAAK,EAAE;QACd,OAAOC,SAAS,CAACC,MAAM,IAAI,CAAC;MAC9B,CAAC;MAED;AACJ;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG,CAAC,CAAC;MAEf;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAAA,EAAG,CAAC;IACd;EACF,CAAC,CAAC;EA3FFd,EAAE,CAACe,EAAE,CAACC,IAAI,CAACC,MAAM,CAACd,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}