{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "events",
    "changeValue",
    "members",
    "setValue",
    "value",
    "arguments",
    "length",
    "resetValue",
    "getValue",
    "ui",
    "form",
    "IField"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/form/IField.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2017 Martijn Evers, The Netherlands\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martijn Evers (mever)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Field interface.\r\n *\r\n * This interface allows any value to be set as long as the following constraint\r\n * is met: any value returned by {@link getValue} can be set by {@link setValue}.\r\n *\r\n * This specifies the interface for handling the model value of a field.\r\n * The model value is always in a consistent state (see duration example), and\r\n * should only handle model values of a type that correctly represents the\r\n * data available through its UI. E.g.: duration can ideally be modeled by a number\r\n * of time units, like seconds. When using a date the duration may be\r\n * unclear (since Unix time?). Type conversions should be handled by data binding.\r\n *\r\n * The model value is not necessary what is shown to the end-user\r\n * by implementing class. A good example is the {@link qx.ui.form.TextField}\r\n * which is able to operate with or without live updating the model value.\r\n *\r\n * Duration example: a field for duration may use two date pickers for begin\r\n * and end dates. When the end date is before the start date the model is in\r\n * inconsistent state. getValue should never return such state. And calling\r\n * it must result in either null or the last consistent value (depending\r\n * on implementation or setting).\r\n */\r\nqx.Interface.define(\"qx.ui.form.IField\", {\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Fired when the model value was modified */\r\n    changeValue: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      VALUE PROPERTY\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Sets the field model value. Should also update the UI.\r\n     *\r\n     * @param value {var|null} Updates the field with the new model value.\r\n     * @return {null|Error} Should return an error when the type of\r\n     *  model value is not compatible with the implementing class (the concrete field).\r\n     */\r\n    setValue(value) {\r\n      return arguments.length == 1;\r\n    },\r\n\r\n    /**\r\n     * Resets the model value to its initial value. Should also update the UI.\r\n     */\r\n    resetValue() {},\r\n\r\n    /**\r\n     * Returns a consistent and up-to-date model value.\r\n     *\r\n     * Note: returned value can also be a promise of type <code>Promise&lt;*|null&gt;</code>.\r\n     *\r\n     * @return {var|null} The model value plain or as promise.\r\n     */\r\n    getValue() {}\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACvC;AACF;AACA;AACA;AACA;;IAEEC,MAAM,EAAE;MACN;MACAC,WAAW,EAAE;IACf,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAACC,KAAK,EAAE;QACd,OAAOC,SAAS,CAACC,MAAM,IAAI,CAAC;MAC9B,CAAC;MAED;AACJ;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG,CAAC,CAAC;MAEf;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QAAQ,WAAAA,SAAA,EAAG,CAAC;IACd;EACF,CAAC,CAAC;EA3FFd,EAAE,CAACe,EAAE,CAACC,IAAI,CAACC,MAAM,CAACd,aAAa,GAAGA,aAAa;AAAC"
}