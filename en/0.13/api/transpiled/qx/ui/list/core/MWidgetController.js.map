{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__boundItems",
    "properties",
    "labelPath",
    "check",
    "nullable",
    "iconPath",
    "groupLabelPath",
    "labelOptions",
    "iconOptions",
    "groupLabelOptions",
    "delegate",
    "event",
    "init",
    "members",
    "bindDefaultProperties",
    "item",
    "index",
    "getUserData",
    "bindProperty",
    "getLabelPath",
    "getLabelOptions",
    "getIconPath",
    "getIconOptions",
    "getGroupLabelPath",
    "getGroupLabelOptions",
    "sourcePath",
    "targetProperty",
    "options",
    "targetWidget",
    "type",
    "bindPath",
    "__getBindPath",
    "ignoreConverter",
    "id",
    "_list",
    "bind",
    "__addBinding",
    "bindPropertyReverse",
    "targetPath",
    "sourceProperty",
    "sourceWidget",
    "removeBindings",
    "length",
    "pop",
    "_removeBindingsFrom",
    "_configureItem",
    "getDelegate",
    "configureItem",
    "_configureGroupItem",
    "configureGroupItem",
    "_bindItem",
    "bindItem",
    "_bindGroupItem",
    "bindGroupItem",
    "bindings",
    "__getBindings",
    "removeBinding",
    "e",
    "includes",
    "lang",
    "Array",
    "remove",
    "path",
    "widget",
    "push",
    "setUserData",
    "destruct",
    "ui",
    "list",
    "core",
    "MWidgetController"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/list/core/MWidgetController.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.list.core.MWidgetController\", {\n  construct() {\n    this.__boundItems = [];\n  },\n\n  properties: {\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     */\n    labelPath: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     */\n    iconPath: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions: {\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions: {\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions: {\n      nullable: true\n    },\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate: {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    /** @type {Array} which contains the bounded items */\n    __boundItems: null,\n\n    /**\n     * Helper-Method for binding the default properties from\n     * the model to the target widget. The used default properties\n     * depends on the passed item. When the passed item is\n     * a list item the \"label\" and \"icon\" property is used.\n     * When the passed item is a group item the \"value\" property is\n     * used.\n     *\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function\n     * implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used\n     *   list or group item.\n     * @param index {Integer} The index of the item.\n     */\n    bindDefaultProperties(item, index) {\n      if (item.getUserData(\"cell.type\") != \"group\") {\n        // bind model first\n        this.bindProperty(\"\", \"model\", null, item, index);\n\n        this.bindProperty(\n          this.getLabelPath(),\n          \"label\",\n          this.getLabelOptions(),\n          item,\n          index\n        );\n\n        if (this.getIconPath() != null) {\n          this.bindProperty(\n            this.getIconPath(),\n            \"icon\",\n            this.getIconOptions(),\n            item,\n            index\n          );\n        }\n      } else {\n        this.bindProperty(\n          this.getGroupLabelPath(),\n          \"value\",\n          this.getGroupLabelOptions(),\n          item,\n          index\n        );\n      }\n    },\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty(sourcePath, targetProperty, options, targetWidget, index) {\n      var type = targetWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, sourcePath, type);\n\n      if (options) {\n        options.ignoreConverter = \"model\";\n      }\n\n      var id = this._list.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link IListDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse(\n      targetPath,\n      sourceProperty,\n      options,\n      sourceWidget,\n      index\n    ) {\n      var type = sourceWidget.getUserData(\"cell.type\");\n      var bindPath = this.__getBindPath(index, targetPath, type);\n\n      var id = sourceWidget.bind(sourceProperty, this._list, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings() {\n      while (this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureItem(item) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureItem != null) {\n        delegate.configureItem(item);\n      }\n    },\n\n    /**\n     * Configure the passed item if a delegate is set and the needed\n     * function {@link IListDelegate#configureGroupItem} is available.\n     *\n     * @param item {qx.ui.core.Widget} item to configure.\n     */\n    _configureGroupItem(item) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.configureGroupItem != null) {\n        delegate.configureGroupItem(item);\n      }\n    },\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindItem != null) {\n        delegate.bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n    /**\n     * Sets up the binding for the given group item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindGroupItem(item, index) {\n      var delegate = this.getDelegate();\n\n      if (delegate != null && delegate.bindGroupItem != null) {\n        delegate.bindGroupItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should\n     *   be removed.\n     */\n    _removeBindingsFrom(item) {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0) {\n        var id = bindings.pop();\n\n        try {\n          this._list.removeBinding(id);\n        } catch (e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @param type {String} The type <code>[\"item\", \"group\"]</code>.\n     * @return {String} The binding path\n     */\n    __getBindPath(index, path, type) {\n      var bindPath = \"model[\" + index + \"]\";\n      if (type == \"group\") {\n        bindPath = \"groups[\" + index + \"]\";\n      }\n\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n\n      return bindPath;\n    },\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding(widget, id) {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings(widget) {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n  destruct() {\n    this.__boundItems = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;IACnDC,SADmD,uBACvC;MACV,KAAKC,SAAL,GAAoB,EAApB;IACD,CAHkD;IAKnDC,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,SAAS,EAAE;QACTC,KAAK,EAAE,QADE;QAETC,QAAQ,EAAE;MAFD,CALD;;MAUV;AACJ;AACA;AACA;AACA;MACIC,QAAQ,EAAE;QACRF,KAAK,EAAE,QADC;QAERC,QAAQ,EAAE;MAFF,CAfA;;MAoBV;AACJ;AACA;AACA;AACA;MACIE,cAAc,EAAE;QACdH,KAAK,EAAE,QADO;QAEdC,QAAQ,EAAE;MAFI,CAzBN;;MA8BV;AACJ;AACA;AACA;MACIG,YAAY,EAAE;QACZH,QAAQ,EAAE;MADE,CAlCJ;;MAsCV;AACJ;AACA;AACA;MACII,WAAW,EAAE;QACXJ,QAAQ,EAAE;MADC,CA1CH;;MA8CV;AACJ;AACA;AACA;MACIK,iBAAiB,EAAE;QACjBL,QAAQ,EAAE;MADO,CAlDT;;MAsDV;AACJ;AACA;AACA;MACIM,QAAQ,EAAE;QACRC,KAAK,EAAE,gBADC;QAERC,IAAI,EAAE,IAFE;QAGRR,QAAQ,EAAE;MAHF;IA1DA,CALuC;IAsEnDS,OAAO,EAAE;MACP;MACAb,SAAY,EAAE,IAFP;;MAIP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIc,qBApBO,iCAoBeC,IApBf,EAoBqBC,KApBrB,EAoB4B;QACjC,IAAID,IAAI,CAACE,WAAL,CAAiB,WAAjB,KAAiC,OAArC,EAA8C;UAC5C;UACA,KAAKC,YAAL,CAAkB,EAAlB,EAAsB,OAAtB,EAA+B,IAA/B,EAAqCH,IAArC,EAA2CC,KAA3C;UAEA,KAAKE,YAAL,CACE,KAAKC,YAAL,EADF,EAEE,OAFF,EAGE,KAAKC,eAAL,EAHF,EAIEL,IAJF,EAKEC,KALF;;UAQA,IAAI,KAAKK,WAAL,MAAsB,IAA1B,EAAgC;YAC9B,KAAKH,YAAL,CACE,KAAKG,WAAL,EADF,EAEE,MAFF,EAGE,KAAKC,cAAL,EAHF,EAIEP,IAJF,EAKEC,KALF;UAOD;QACF,CArBD,MAqBO;UACL,KAAKE,YAAL,CACE,KAAKK,iBAAL,EADF,EAEE,OAFF,EAGE,KAAKC,oBAAL,EAHF,EAIET,IAJF,EAKEC,KALF;QAOD;MACF,CAnDM;;MAqDP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,YAnEO,wBAmEMO,UAnEN,EAmEkBC,cAnElB,EAmEkCC,OAnElC,EAmE2CC,YAnE3C,EAmEyDZ,KAnEzD,EAmEgE;QACrE,IAAIa,IAAI,GAAGD,YAAY,CAACX,WAAb,CAAyB,WAAzB,CAAX;;QACA,IAAIa,QAAQ,GAAG,KAAKC,SAAL,CAAmBf,KAAnB,EAA0BS,UAA1B,EAAsCI,IAAtC,CAAf;;QAEA,IAAIF,OAAJ,EAAa;UACXA,OAAO,CAACK,eAAR,GAA0B,OAA1B;QACD;;QAED,IAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBL,QAAhB,EAA0BF,YAA1B,EAAwCF,cAAxC,EAAwDC,OAAxD,CAAT;;QACA,KAAKS,SAAL,CAAkBR,YAAlB,EAAgCK,EAAhC;MACD,CA7EM;;MA+EP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACII,mBA5FO,+BA6FLC,UA7FK,EA8FLC,cA9FK,EA+FLZ,OA/FK,EAgGLa,YAhGK,EAiGLxB,KAjGK,EAkGL;QACA,IAAIa,IAAI,GAAGW,YAAY,CAACvB,WAAb,CAAyB,WAAzB,CAAX;;QACA,IAAIa,QAAQ,GAAG,KAAKC,SAAL,CAAmBf,KAAnB,EAA0BsB,UAA1B,EAAsCT,IAAtC,CAAf;;QAEA,IAAII,EAAE,GAAGO,YAAY,CAACL,IAAb,CAAkBI,cAAlB,EAAkC,KAAKL,KAAvC,EAA8CJ,QAA9C,EAAwDH,OAAxD,CAAT;;QACA,KAAKS,SAAL,CAAkBI,YAAlB,EAAgCP,EAAhC;MACD,CAxGM;;MA0GP;AACJ;AACA;MACIQ,cA7GO,4BA6GU;QACf,OAAO,KAAKzC,SAAL,CAAkB0C,MAAlB,GAA2B,CAAlC,EAAqC;UACnC,IAAI3B,IAAI,GAAG,KAAKf,SAAL,CAAkB2C,GAAlB,EAAX;;UACA,KAAKC,mBAAL,CAAyB7B,IAAzB;QACD;MACF,CAlHM;;MAoHP;AACJ;AACA;AACA;AACA;AACA;MACI8B,cA1HO,0BA0HQ9B,IA1HR,EA0Hc;QACnB,IAAIL,QAAQ,GAAG,KAAKoC,WAAL,EAAf;;QAEA,IAAIpC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACqC,aAAT,IAA0B,IAAlD,EAAwD;UACtDrC,QAAQ,CAACqC,aAAT,CAAuBhC,IAAvB;QACD;MACF,CAhIM;;MAkIP;AACJ;AACA;AACA;AACA;AACA;MACIiC,mBAxIO,+BAwIajC,IAxIb,EAwImB;QACxB,IAAIL,QAAQ,GAAG,KAAKoC,WAAL,EAAf;;QAEA,IAAIpC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACuC,kBAAT,IAA+B,IAAvD,EAA6D;UAC3DvC,QAAQ,CAACuC,kBAAT,CAA4BlC,IAA5B;QACD;MACF,CA9IM;;MAgJP;AACJ;AACA;AACA;AACA;AACA;MACImC,SAtJO,qBAsJGnC,IAtJH,EAsJSC,KAtJT,EAsJgB;QACrB,IAAIN,QAAQ,GAAG,KAAKoC,WAAL,EAAf;;QAEA,IAAIpC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACyC,QAAT,IAAqB,IAA7C,EAAmD;UACjDzC,QAAQ,CAACyC,QAAT,CAAkB,IAAlB,EAAwBpC,IAAxB,EAA8BC,KAA9B;QACD,CAFD,MAEO;UACL,KAAKF,qBAAL,CAA2BC,IAA3B,EAAiCC,KAAjC;QACD;MACF,CA9JM;;MAgKP;AACJ;AACA;AACA;AACA;AACA;MACIoC,cAtKO,0BAsKQrC,IAtKR,EAsKcC,KAtKd,EAsKqB;QAC1B,IAAIN,QAAQ,GAAG,KAAKoC,WAAL,EAAf;;QAEA,IAAIpC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAAC2C,aAAT,IAA0B,IAAlD,EAAwD;UACtD3C,QAAQ,CAAC2C,aAAT,CAAuB,IAAvB,EAA6BtC,IAA7B,EAAmCC,KAAnC;QACD,CAFD,MAEO;UACL,KAAKF,qBAAL,CAA2BC,IAA3B,EAAiCC,KAAjC;QACD;MACF,CA9KM;;MAgLP;AACJ;AACA;AACA;AACA;AACA;MACI4B,mBAtLO,+BAsLa7B,IAtLb,EAsLmB;QACxB,IAAIuC,QAAQ,GAAG,KAAKC,SAAL,CAAmBxC,IAAnB,CAAf;;QAEA,OAAOuC,QAAQ,CAACZ,MAAT,GAAkB,CAAzB,EAA4B;UAC1B,IAAIT,EAAE,GAAGqB,QAAQ,CAACX,GAAT,EAAT;;UAEA,IAAI;YACF,KAAKT,KAAL,CAAWsB,aAAX,CAAyBvB,EAAzB;UACD,CAFD,CAEE,OAAOwB,CAAP,EAAU;YACV1C,IAAI,CAACyC,aAAL,CAAmBvB,EAAnB;UACD;QACF;;QAED,IAAI,KAAKjC,SAAL,CAAkB0D,QAAlB,CAA2B3C,IAA3B,CAAJ,EAAsC;UACpCtB,EAAE,CAACkE,IAAH,CAAQC,KAAR,CAAcC,MAAd,CAAqB,KAAK7D,SAA1B,EAAwCe,IAAxC;QACD;MACF,CAtMM;;MAwMP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIgB,SAhNO,qBAgNOf,KAhNP,EAgNc8C,IAhNd,EAgNoBjC,IAhNpB,EAgN0B;QAC/B,IAAIC,QAAQ,GAAG,WAAWd,KAAX,GAAmB,GAAlC;;QACA,IAAIa,IAAI,IAAI,OAAZ,EAAqB;UACnBC,QAAQ,GAAG,YAAYd,KAAZ,GAAoB,GAA/B;QACD;;QAED,IAAI8C,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,EAA5B,EAAgC;UAC9BhC,QAAQ,IAAI,MAAMgC,IAAlB;QACD;;QAED,OAAOhC,QAAP;MACD,CA3NM;;MA6NP;AACJ;AACA;AACA;AACA;AACA;MACIM,SAnOO,qBAmOM2B,MAnON,EAmOc9B,EAnOd,EAmOkB;QACvB,IAAIqB,QAAQ,GAAG,KAAKC,SAAL,CAAmBQ,MAAnB,CAAf;;QAEA,IAAI,CAACT,QAAQ,CAACI,QAAT,CAAkBzB,EAAlB,CAAL,EAA4B;UAC1BqB,QAAQ,CAACU,IAAT,CAAc/B,EAAd;QACD;;QAED,IAAI,CAAC,KAAKjC,SAAL,CAAkB0D,QAAlB,CAA2BK,MAA3B,CAAL,EAAyC;UACvC,KAAK/D,SAAL,CAAkBgE,IAAlB,CAAuBD,MAAvB;QACD;MACF,CA7OM;;MA+OP;AACJ;AACA;AACA;AACA;AACA;MACIR,SArPO,qBAqPOQ,MArPP,EAqPe;QACpB,IAAIT,QAAQ,GAAGS,MAAM,CAAC9C,WAAP,CAAmB,YAAnB,CAAf;;QAEA,IAAIqC,QAAQ,IAAI,IAAhB,EAAsB;UACpBA,QAAQ,GAAG,EAAX;UACAS,MAAM,CAACE,WAAP,CAAmB,YAAnB,EAAiCX,QAAjC;QACD;;QAED,OAAOA,QAAP;MACD;IA9PM,CAtE0C;IAuUnDY,QAvUmD,sBAuUxC;MACT,KAAKlE,SAAL,GAAoB,IAApB;IACD;EAzUkD,CAArD;EAxBAP,EAAE,CAAC0E,EAAH,CAAMC,IAAN,CAAWC,IAAX,CAAgBC,iBAAhB,CAAkC1E,aAAlC,GAAkDA,aAAlD"
}