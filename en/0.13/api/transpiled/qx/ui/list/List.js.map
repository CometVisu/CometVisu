{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/list/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "core",
    "Scroller",
    "include",
    "selection",
    "MModel",
    "implement",
    "data",
    "controller",
    "ISelection",
    "construct",
    "model",
    "_init",
    "__defaultGroups",
    "Array",
    "initGroups",
    "initModel",
    "initItemHeight",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "check",
    "apply",
    "event",
    "nullable",
    "deferredInit",
    "itemHeight",
    "themeable",
    "groupItemHeight",
    "labelPath",
    "iconPath",
    "groupLabelPath",
    "labelOptions",
    "iconOptions",
    "groupLabelOptions",
    "delegate",
    "autoGrouping",
    "groups",
    "variableItemHeight",
    "members",
    "_background",
    "_provider",
    "_layer",
    "__lookupTable",
    "__lookupTableForGroup",
    "__groupHashMap",
    "__groupStringsUsed",
    "__groupObjectsUsed",
    "__defaultGroupUsed",
    "__deferredLayerUpdate",
    "refresh",
    "__buildUpLookupTable",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "layer",
    "Row",
    "_initWidgetProvider",
    "list",
    "provider",
    "WidgetProvider",
    "getPane",
    "addListener",
    "_onResize",
    "_initBackground",
    "_initLayer",
    "getChildControl",
    "addLayer",
    "createLayer",
    "_onLayerUpdated",
    "_getDataFromRow",
    "row",
    "getModel",
    "_isGroup",
    "getGroups",
    "getItem",
    "_lookupGroup",
    "_lookup",
    "_getLookupTable",
    "indexOf",
    "_reverseLookup",
    "index",
    "_getSelectables",
    "_applyModel",
    "value",
    "old",
    "_onModelChange",
    "removeListener",
    "_applyRowHeight",
    "getRowConfig",
    "setDefaultItemSize",
    "_applyGroupRowHeight",
    "__updateGroupRowHeight",
    "_applyLabelPath",
    "setLabelPath",
    "_applyIconPath",
    "setIconPath",
    "_applyGroupLabelPath",
    "setGroupLabelPath",
    "_applyLabelOptions",
    "setLabelOptions",
    "_applyIconOptions",
    "setIconOptions",
    "_applyGroupLabelOptions",
    "setGroupLabelOptions",
    "_applyDelegate",
    "setDelegate",
    "_applyVariableItemHeight",
    "_setRowItemSize",
    "resetItemSizes",
    "fullUpdate",
    "e",
    "getColumnConfig",
    "setItemSize",
    "getData",
    "removeBindings",
    "_applyDefaultSelection",
    "type",
    "Data",
    "fireDataEvent",
    "getOldData",
    "isVariableItemHeight",
    "util",
    "DeferredCall",
    "schedule",
    "__updateRowCount",
    "setItemCount",
    "length",
    "rc",
    "gh",
    "getGroupItemHeight",
    "i",
    "l",
    "isAutoGrouping",
    "removeAll",
    "_runDelegateFilter",
    "_runDelegateSorter",
    "_runDelegateGroup",
    "_updateSelection",
    "filter",
    "Delegate",
    "getMethod",
    "getDelegate",
    "push",
    "sorter",
    "sort",
    "a",
    "b",
    "groupMethod",
    "item",
    "group",
    "__addGroup",
    "__createLookupFromGroup",
    "name",
    "__getUniqueGroupName",
    "__checkGroupStructure",
    "result",
    "getLength",
    "key",
    "groupMembers",
    "k",
    "lang",
    "Type",
    "isString",
    "Error",
    "rowConfig",
    "firstRow",
    "getFirstRow",
    "lastRow",
    "getRowSizes",
    "widget",
    "getRenderedCellWidget",
    "getSizeHint",
    "destruct",
    "_disposeObjects",
    "pane",
    "dispose",
    "List"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\n * supports filtering, sorting, grouping, single selection, multi selection,\n * data binding and custom rendering.\n *\n * Using the virtual infrastructure has considerable advantages when there is a\n * huge amount of model items to render because the virtual infrastructure only\n * creates widgets for visible items and reuses them. This saves both creation\n * time and memory.\n *\n * With the {@link qx.ui.list.core.IListDelegate} interface it is possible\n * to configure the list's behavior (item and group renderer configuration,\n * filtering, sorting, grouping, etc.).\n *\n * Here's an example of how to use the widget:\n * <pre class=\"javascript\">\n * //create the model data\n * var rawData = [];\n * for (var i = 0; i < 2500; i++) {\n *  rawData[i] = \"Item No \" + i;\n * }\n * var model = qx.data.marshal.Json.createModel(rawData);\n *\n * //create the list\n * var list = new qx.ui.list.List(model);\n *\n * //configure the lists's behavior\n * var delegate = {\n *   sorter : function(a, b) {\n *     return a > b ? 1 : a < b ? -1 : 0;\n *   }\n * };\n * list.setDelegate(delegate);\n *\n * //Pre-Select \"Item No 20\"\n * list.getSelection().push(model.getItem(20));\n *\n * //log selection changes\n * list.getSelection().addListener(\"change\", function(e) {\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n * }, this);\n * </pre>\n *\n * @childControl row-layer {qx.ui.virtual.layer.Row} layer for all rows\n */\nqx.Class.define(\"qx.ui.list.List\",\n{\n  extend : qx.ui.virtual.core.Scroller,\n  include : [qx.ui.virtual.selection.MModel],\n  implement : qx.data.controller.ISelection,\n\n  /**\n   * Creates the <code>qx.ui.list.List</code> with the passed model.\n   *\n   * @param model {qx.data.IListData|null?} model for the list.\n   */\n  construct : function(model)\n  {\n    this.base(arguments, 0, 1, 20, 100);\n\n    this._init();\n\n    this.__defaultGroups = new qx.data.Array();\n    this.initGroups(this.__defaultGroups);\n\n    if(model != null) {\n      this.initModel(model);\n    }\n\n    this.initItemHeight();\n  },\n\n\n  events :\n  {\n    /**\n     * Fired when the length of {@link #model} changes.\n     */\n    \"changeModelLength\" : \"qx.event.type.Data\"\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-list\"\n    },\n\n\n    // overridden\n    focusable :\n    {\n      refine : true,\n      init : true\n    },\n\n\n    // overridden\n    width :\n    {\n      refine : true,\n      init : 100\n    },\n\n\n    // overridden\n    height :\n    {\n      refine : true,\n      init : 200\n    },\n\n\n    /** Data array containing the data which should be shown in the list. */\n    model :\n    {\n      check : \"qx.data.IListData\",\n      apply : \"_applyModel\",\n      event: \"changeModel\",\n      nullable : true,\n      deferredInit : true\n    },\n\n\n    /** Default item height */\n    itemHeight :\n    {\n      check : \"Integer\",\n      init : 25,\n      apply : \"_applyRowHeight\",\n      themeable : true\n    },\n\n\n    /** Group item height */\n    groupItemHeight :\n    {\n      check : \"Integer\",\n      init : null,\n      nullable : true,\n      apply : \"_applyGroupRowHeight\",\n      themeable : true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a label. This is only needed if objects are stored in the\n     * model.\n     */\n    labelPath :\n    {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as an icon. This is only needed if objects are stored in the\n     * model and icons should be displayed.\n     */\n    iconPath :\n    {\n      check: \"String\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath :\n    {\n      check: \"String\",\n      apply: \"_applyGroupLabelPath\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions :\n    {\n      apply: \"_applyLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions :\n    {\n      apply: \"_applyIconOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions :\n    {\n      apply: \"_applyGroupLabelOptions\",\n      nullable: true\n    },\n\n\n    /**\n     * Delegation object which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate :\n    {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    },\n\n\n    /**\n     * Indicates that the list is managing the {@link #groups} automatically.\n     */\n    autoGrouping :\n    {\n      check: \"Boolean\",\n      init: true\n    },\n\n\n    /**\n     * Contains all groups for data binding, but do only manipulate the array\n     * when the {@link #autoGrouping} is set to <code>false</code>.\n     */\n    groups :\n    {\n      check: \"qx.data.Array\",\n      event: \"changeGroups\",\n      nullable: false,\n      deferredInit: true\n    },\n\n\n    /** \n     * Render list items with variable height, \n     * calculated from the individual item size. \n     */\n    variableItemHeight :\n    {\n      check : \"Boolean\",\n      apply : \"_applyVariableItemHeight\",\n      nullable : false,\n      init : true\n    }\n  },\n\n\n  members :\n  {\n    /** @type {qx.ui.virtual.layer.Row} background renderer */\n    _background : null,\n\n\n    /** @type {qx.ui.list.provider.IListProvider} provider for cell rendering */\n    _provider : null,\n\n\n    /** @type {qx.ui.virtual.layer.Abstract} layer which contains the items. */\n    _layer : null,\n\n\n    /**\n     * @type {Array} lookup table to get the model index from a row. To get the\n     *   correct value after applying filter, sorter, group.\n     *\n     * Note the value <code>-1</code> indicates that the value is a group item.\n     */\n    __lookupTable : null,\n\n\n    /** @type {Array} lookup table for getting the group index from the row */\n    __lookupTableForGroup : null,\n\n\n    /**\n     * @type {Map} contains all groups with the items as children. The key is\n     *   the group name and the value is an <code>Array</code> containing each\n     *   item's model index.\n     */\n    __groupHashMap : null,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>String</code> are used for grouping.\n     */\n    __groupStringsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when one or more <code>Object</code> are used for grouping.\n     */\n    __groupObjectsUsed : false,\n\n\n    /**\n     * @type {Boolean} indicates when a default group is used for grouping.\n     */\n    __defaultGroupUsed : false,\n\n    __defaultGroups : null,\n\n    __deferredLayerUpdate : null,\n\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh : function() {\n      this.__buildUpLookupTable();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"row-layer\" :\n          control = new qx.ui.virtual.layer.Row(null, null);\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n\n    /**\n     * Initialize the virtual list provider.\n     */\n    _initWidgetProvider : function() {\n      this._provider = new qx.ui.list.provider.WidgetProvider(this);\n    },\n    \n    /**\n     * Initializes the virtual list.\n     */\n    _init : function()\n    {\n      this._initWidgetProvider();\n\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n      this.__groupStringsUsed = false;\n      this.__groupObjectsUsed = false;\n      this.__defaultGroupUsed = false;\n\n      this.getPane().addListener(\"resize\", this._onResize, this);\n\n      this._initBackground();\n      this._initLayer();\n    },\n\n\n    /**\n     * Initializes the background renderer.\n     */\n    _initBackground : function()\n    {\n      this._background = this.getChildControl(\"row-layer\");\n      this.getPane().addLayer(this._background);\n    },\n\n\n    /**\n     * Initializes the layer for rendering.\n     */\n    _initLayer : function()\n    {\n      this._layer = this._provider.createLayer();\n      this._layer.addListener(\"updated\", this._onLayerUpdated, this);\n      this.getPane().addLayer(this._layer);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Returns the model data for the given row.\n     *\n     * @param row {Integer} row to get data for.\n     * @return {var|null} the row's model data.\n     */\n    _getDataFromRow : function(row) {\n      var data = null;\n\n      var model = this.getModel();\n      if (model == null) {\n        return null;\n      }\n\n      if (this._isGroup(row)) {\n        data = this.getGroups().getItem(this._lookupGroup(row));\n      } else {\n        data = model.getItem(this._lookup(row));\n      }\n\n      if (data != null) {\n        return data;\n      } else {\n        return null;\n      }\n    },\n\n\n    /**\n     * Return the internal lookup table. But do not manipulate the\n     * lookup table!\n     *\n     * @return {Array} The internal lookup table.\n     */\n    _getLookupTable : function() {\n      return this.__lookupTable;\n    },\n\n\n    /**\n     * Performs a lookup from row to model index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The model index or\n     *   <code>-1</code> if the row is a group item.\n     */\n    _lookup : function(row) {\n      return this.__lookupTable[row];\n    },\n\n\n    /**\n     * Performs a lookup from row to group index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The group index or\n     *   <code>-1</code> if the row is a not a group item.\n     */\n    _lookupGroup : function(row) {\n      return this.__lookupTableForGroup.indexOf(row);\n    },\n\n\n    /**\n     * Performs a lookup from model index to row.\n     *\n     * @param index {Number} The index to look at.\n     * @return {Number} The row or <code>-1</code>\n     *  if the index is not a model index.\n     */\n    _reverseLookup : function(index) {\n      if (index < 0) {\n        return -1;\n      }\n      return this.__lookupTable.indexOf(index);\n    },\n\n\n    /**\n     * Checks if the passed row is a group or an item.\n     *\n     * @param row {Integer} row to check.\n     * @return {Boolean} <code>true</code> if the row is a group element,\n     *  <code>false</code> if the row is an item element.\n     */\n    _isGroup : function(row) {\n      return this._lookup(row) == -1;\n    },\n\n\n    /**\n     * Returns the selectable model items.\n     *\n     * @return {qx.data.Array | null} The selectable items.\n     */\n    _getSelectables : function() {\n      return this.getModel();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      if (value != null) {\n        value.addListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      if (old != null) {\n        old.removeListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      this._onModelChange();\n    },\n\n\n    // apply method\n    _applyRowHeight : function(value, old) {\n      this.getPane().getRowConfig().setDefaultItemSize(value);\n    },\n\n    // apply method\n    _applyGroupRowHeight : function(value, old) {\n      this.__updateGroupRowHeight();\n    },\n\n    // apply method\n    _applyLabelPath : function(value, old) {\n      this._provider.setLabelPath(value);\n    },\n\n\n    // apply method\n    _applyIconPath : function(value, old) {\n      this._provider.setIconPath(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelPath : function(value, old) {\n      this._provider.setGroupLabelPath(value);\n    },\n\n\n    // apply method\n    _applyLabelOptions : function(value, old) {\n      this._provider.setLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyIconOptions : function(value, old) {\n      this._provider.setIconOptions(value);\n    },\n\n\n    // apply method\n    _applyGroupLabelOptions : function(value, old) {\n      this._provider.setGroupLabelOptions(value);\n    },\n\n\n    // apply method\n    _applyDelegate : function(value, old) {\n      this._provider.setDelegate(value);\n      this.__buildUpLookupTable();\n    },\n\n\n    // property apply\n    _applyVariableItemHeight : function(value, old) {\n      if(value) {\n        this._setRowItemSize();\n      }\n      else {\n        this.getPane().getRowConfig().resetItemSizes();\n        this.getPane().fullUpdate();\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Event handler for the resize event.\n     *\n     * @param e {qx.event.type.Data} resize event.\n     */\n    _onResize : function(e) {\n      this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n    },\n\n\n    /**\n     * Event handler for the model change event.\n     *\n     * @param e {qx.event.type.Data} model change event.\n     */\n    _onModelChange : function(e) {\n      // we have to remove the bindings before we rebuild the lookup table\n      // otherwise bindings might be dispatched to wrong items\n      // see: https://github.com/qooxdoo/qooxdoo/issues/196\n      this._provider.removeBindings();\n      this.__buildUpLookupTable();\n      this._applyDefaultSelection();\n\n      if (e instanceof qx.event.type.Data) {\n        this.fireDataEvent(\"changeModelLength\", e.getData(), e.getOldData());\n      }\n    },\n\n\n    /**\n     * Event handler for the updated event of the \n     * qx.ui.virtual.layer.WidgetCell layer.\n     *\n     * Recalculates the item sizes in a deffered call,\n     * which only happens if we have variable item heights\n     */\n    _onLayerUpdated: function () {\n      if (this.isVariableItemHeight() === false) {\n        return;\n      }\n\n      if (this.__deferredLayerUpdate === null) {\n        this.__deferredLayerUpdate = new qx.util.DeferredCall(function () {\n          this._setRowItemSize();\n        }, this);\n      }\n\n      this.__deferredLayerUpdate.schedule();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n\n    /**\n     * Helper method to update the row count.\n     */\n    __updateRowCount : function()\n    {\n      this.getPane().getRowConfig().setItemCount(this.__lookupTable.length);\n      this.getPane().fullUpdate();\n    },\n\n\n    /**\n     * Helper method to update group row heights.\n     */\n    __updateGroupRowHeight : function()\n    {\n      /*\n       * In case of having variableItemHeight set to true,\n       * the group item height has a variable height as well\n       * and will be set again in method _setRowItemSize \n       * which is a deferred call, being run after all changes.\n       * Resetting the complete item sizes here and setting\n       * the height of the group items, only leads to an\n       * unnecessary flicker of the list items by shrinking and\n       * growing them again.\n       */ \n      if (this.isVariableItemHeight()) {\n        return;\n      }\n      var rc = this.getPane().getRowConfig();\n      var gh = this.getGroupItemHeight();\n      rc.resetItemSizes();\n\n      if (gh) {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          if (this.__lookupTable[i] == -1) {\n            rc.setItemSize(i, gh);\n          }\n        }\n      }\n    },\n\n\n    /**\n     * Internal method for building the lookup table.\n     */\n    __buildUpLookupTable : function()\n    {\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n\n      if (this.isAutoGrouping()) {\n        this.getGroups().removeAll();\n      }\n\n      var model = this.getModel();\n\n      if (model != null) {\n        this._runDelegateFilter(model);\n        this._runDelegateSorter(model);\n        this._runDelegateGroup(model);\n      }\n\n      this._updateSelection();\n      this.__updateGroupRowHeight();\n      this.__updateRowCount();\n    },\n\n\n    /**\n     * Invokes filtering using the filter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateFilter : function (model)\n    {\n      var filter = qx.util.Delegate.getMethod(this.getDelegate(), \"filter\");\n\n      for (var i = 0,l = model.length; i < l; ++i)\n      {\n        if (filter == null || filter(model.getItem(i))) {\n          this.__lookupTable.push(i);\n        }\n      }\n    },\n\n\n    /**\n     * Invokes sorting using the sorter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateSorter : function (model)\n    {\n      if (this.__lookupTable.length == 0) {\n        return;\n      }\n\n      var sorter = qx.util.Delegate.getMethod(this.getDelegate(), \"sorter\");\n\n      if (sorter != null)\n      {\n        this.__lookupTable.sort(function(a, b)\n        {\n          return sorter(model.getItem(a), model.getItem(b));\n        });\n      }\n    },\n\n\n    /**\n     * Invokes grouping using the group result given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateGroup : function (model)\n    {\n      var groupMethod = qx.util.Delegate.getMethod(this.getDelegate(), \"group\");\n\n      if (groupMethod != null)\n      {\n        for (var i = 0,l = this.__lookupTable.length; i < l; ++i)\n        {\n          var index = this.__lookupTable[i];\n          var item = this.getModel().getItem(index);\n          var group = groupMethod(item);\n\n          this.__addGroup(group, index);\n        }\n        this.__lookupTable = this.__createLookupFromGroup();\n      }\n    },\n\n\n    /**\n     * Adds a model index the the group.\n     *\n     * @param group {String|Object|null} the group.\n     * @param index {Integer} model index to add.\n     */\n    __addGroup : function(group, index)\n    {\n      // if group is null add to default group\n      if (group == null)\n      {\n        this.__defaultGroupUsed = true;\n        group = \"???\";\n      }\n\n      var name = this.__getUniqueGroupName(group);\n      if (this.__groupHashMap[name] == null)\n      {\n        this.__groupHashMap[name] = [];\n        if (this.isAutoGrouping()) {\n          this.getGroups().push(group);\n        }\n      }\n      this.__groupHashMap[name].push(index);\n    },\n\n\n    /**\n     * Creates a lookup table form the internal group hash map.\n     *\n     * @return {Array} the lookup table based on the internal group hash map.\n     */\n    __createLookupFromGroup : function()\n    {\n      this.__checkGroupStructure();\n\n      var result = [];\n      var row = 0;\n      var groups = this.getGroups();\n      for (var i = 0; i < groups.getLength(); i++)\n      {\n        var group = groups.getItem(i);\n\n        // indicate that the value is a group\n        result.push(-1);\n        this.__lookupTableForGroup.push(row);\n        row++;\n\n        var key = this.__getUniqueGroupName(group);\n        var groupMembers = this.__groupHashMap[key];\n        if (groupMembers != null)\n        {\n          for (var k = 0; k < groupMembers.length; k++) {\n            result.push(groupMembers[k]);\n            row++;\n          }\n        }\n      }\n      return result;\n    },\n\n\n    /**\n     * Returns an unique group name for the passed group.\n     *\n     * @param group {String|Object} Group to find unique group name.\n     * @return {String} Unique group name.\n     */\n    __getUniqueGroupName : function(group)\n    {\n      var name = null;\n      if (!qx.lang.Type.isString(group))\n      {\n        var index = this.getGroups().indexOf(group);\n        this.__groupObjectsUsed = true;\n\n        name = \"group\";\n        if (index == -1) {\n           name += this.getGroups().getLength();\n        } else {\n          name += index;\n        }\n      }\n      else\n      {\n        this.__groupStringsUsed = true;\n        var name = group;\n      }\n      return name;\n    },\n\n\n    /**\n     * Checks that <code>Object</code> and <code>String</code> are not mixed\n     * as group identifier, otherwise an exception occurs.\n     */\n    __checkGroupStructure : function() {\n      if (this.__groupObjectsUsed && this.__defaultGroupUsed ||\n          this.__groupObjectsUsed && this.__groupStringsUsed)\n      {\n        throw new Error(\"GroupingTypeError: You can't mix 'Objects' and 'Strings' as\" +\n          \" group identifier!\");\n      }\n    },\n\n\n    /**\n     * Get the height of each visible item and set it as the\n     * row size\n     */\n    _setRowItemSize : function() {\n      var rowConfig = this.getPane().getRowConfig();\n      var layer = this._layer;\n      \n      var firstRow = layer.getFirstRow();\n      var lastRow = firstRow + layer.getRowSizes().length;\n\n      for (var row = firstRow; row < lastRow; row++) {\n        var widget = layer.getRenderedCellWidget(row, 0);\n        if (widget !== null) {\n          var height = widget.getSizeHint().height;\n          \n          rowConfig.setItemSize(\n              row,\n              height\n          );\n        }\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._disposeObjects(\"__deferredLayerUpdate\");\n    \n    var model = this.getModel();\n    if (model != null) {\n      model.removeListener(\"changeLength\", this._onModelChange, this);\n    }\n\n    var pane = this.getPane();\n    if (pane != null) {\n      pane.removeListener(\"resize\", this._onResize, this);\n    }\n\n    this._background.dispose();\n    this._provider.dispose();\n    this._layer.dispose();\n    this._background = this._provider = this._layer =\n      this.__lookupTable = this.__lookupTableForGroup =\n      this.__groupHashMap = null;\n\n    if (this.__defaultGroups) {\n      this.__defaultGroups.dispose();\n    }\n  }\n});\n"
  ]
}