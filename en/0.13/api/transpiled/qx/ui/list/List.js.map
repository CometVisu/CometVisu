{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "core",
    "Scroller",
    "include",
    "selection",
    "MModel",
    "implement",
    "data",
    "controller",
    "ISelection",
    "construct",
    "model",
    "_init",
    "__defaultGroups",
    "Array",
    "initGroups",
    "initModel",
    "initItemHeight",
    "events",
    "changeModelLength",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "check",
    "apply",
    "event",
    "nullable",
    "deferredInit",
    "itemHeight",
    "themeable",
    "groupItemHeight",
    "labelPath",
    "iconPath",
    "groupLabelPath",
    "labelOptions",
    "iconOptions",
    "groupLabelOptions",
    "delegate",
    "autoGrouping",
    "groups",
    "variableItemHeight",
    "members",
    "_background",
    "_provider",
    "_layer",
    "__lookupTable",
    "__lookupTableForGroup",
    "__groupHashMap",
    "__groupStringsUsed",
    "__groupObjectsUsed",
    "__defaultGroupUsed",
    "__deferredLayerUpdate",
    "refresh",
    "__buildUpLookupTable",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "layer",
    "Row",
    "_initWidgetProvider",
    "list",
    "provider",
    "WidgetProvider",
    "getPane",
    "addListener",
    "_onResize",
    "_initBackground",
    "_initLayer",
    "getChildControl",
    "addLayer",
    "createLayer",
    "_onLayerUpdated",
    "_getDataFromRow",
    "row",
    "getModel",
    "_isGroup",
    "getGroups",
    "getItem",
    "_lookupGroup",
    "_lookup",
    "_getLookupTable",
    "indexOf",
    "_reverseLookup",
    "index",
    "_getSelectables",
    "_applyModel",
    "value",
    "old",
    "_onModelChange",
    "removeListener",
    "_applyRowHeight",
    "getRowConfig",
    "setDefaultItemSize",
    "_applyGroupRowHeight",
    "__updateGroupRowHeight",
    "_applyLabelPath",
    "setLabelPath",
    "_applyIconPath",
    "setIconPath",
    "_applyGroupLabelPath",
    "setGroupLabelPath",
    "_applyLabelOptions",
    "setLabelOptions",
    "_applyIconOptions",
    "setIconOptions",
    "_applyGroupLabelOptions",
    "setGroupLabelOptions",
    "_applyDelegate",
    "setDelegate",
    "_applyVariableItemHeight",
    "_setRowItemSize",
    "resetItemSizes",
    "fullUpdate",
    "e",
    "getColumnConfig",
    "setItemSize",
    "getData",
    "removeBindings",
    "_applyDefaultSelection",
    "type",
    "Data",
    "fireDataEvent",
    "getOldData",
    "isVariableItemHeight",
    "util",
    "DeferredCall",
    "schedule",
    "__updateRowCount",
    "setItemCount",
    "length",
    "rc",
    "gh",
    "getGroupItemHeight",
    "i",
    "l",
    "isAutoGrouping",
    "removeAll",
    "_runDelegateFilter",
    "_runDelegateSorter",
    "_runDelegateGroup",
    "_updateSelection",
    "filter",
    "Delegate",
    "getMethod",
    "getDelegate",
    "push",
    "sorter",
    "sort",
    "a",
    "b",
    "groupMethod",
    "item",
    "group",
    "__addGroup",
    "__createLookupFromGroup",
    "name",
    "__getUniqueGroupName",
    "__checkGroupStructure",
    "result",
    "getLength",
    "key",
    "groupMembers",
    "k",
    "lang",
    "Type",
    "isString",
    "Error",
    "rowConfig",
    "firstRow",
    "getFirstRow",
    "lastRow",
    "getRowSizes",
    "widget",
    "getRenderedCellWidget",
    "getSizeHint",
    "destruct",
    "_disposeObjects",
    "pane",
    "dispose",
    "List"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/list/List.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\n * supports filtering, sorting, grouping, single selection, multi selection,\n * data binding and custom rendering.\n *\n * Using the virtual infrastructure has considerable advantages when there is a\n * huge amount of model items to render because the virtual infrastructure only\n * creates widgets for visible items and reuses them. This saves both creation\n * time and memory.\n *\n * With the {@link qx.ui.list.core.IListDelegate} interface it is possible\n * to configure the list's behavior (item and group renderer configuration,\n * filtering, sorting, grouping, etc.).\n *\n * Here's an example of how to use the widget:\n * <pre class=\"javascript\">\n * //create the model data\n * var rawData = [];\n * for (var i = 0; i < 2500; i++) {\n *  rawData[i] = \"Item No \" + i;\n * }\n * var model = qx.data.marshal.Json.createModel(rawData);\n *\n * //create the list\n * var list = new qx.ui.list.List(model);\n *\n * //configure the lists's behavior\n * var delegate = {\n *   sorter : function(a, b) {\n *     return a > b ? 1 : a < b ? -1 : 0;\n *   }\n * };\n * list.setDelegate(delegate);\n *\n * //Pre-Select \"Item No 20\"\n * list.getSelection().push(model.getItem(20));\n *\n * //log selection changes\n * list.getSelection().addListener(\"change\", function(e) {\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\n * }, this);\n * </pre>\n *\n * @childControl row-layer {qx.ui.virtual.layer.Row} layer for all rows\n */\nqx.Class.define(\"qx.ui.list.List\", {\n  extend: qx.ui.virtual.core.Scroller,\n  include: [qx.ui.virtual.selection.MModel],\n  implement: qx.data.controller.ISelection,\n\n  /**\n   * Creates the <code>qx.ui.list.List</code> with the passed model.\n   *\n   * @param model {qx.data.IListData|null?} model for the list.\n   */\n  construct(model) {\n    super(0, 1, 20, 100);\n\n    this._init();\n\n    this.__defaultGroups = new qx.data.Array();\n    this.initGroups(this.__defaultGroups);\n\n    if (model != null) {\n      this.initModel(model);\n    }\n\n    this.initItemHeight();\n  },\n\n  events: {\n    /**\n     * Fired when the length of {@link #model} changes.\n     */\n    changeModelLength: \"qx.event.type.Data\"\n  },\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"virtual-list\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 100\n    },\n\n    // overridden\n    height: {\n      refine: true,\n      init: 200\n    },\n\n    /** Data array containing the data which should be shown in the list. */\n    model: {\n      check: \"qx.data.IListData\",\n      apply: \"_applyModel\",\n      event: \"changeModel\",\n      nullable: true,\n      deferredInit: true\n    },\n\n    /** Default item height */\n    itemHeight: {\n      check: \"Integer\",\n      init: 25,\n      apply: \"_applyRowHeight\",\n      themeable: true\n    },\n\n    /** Group item height */\n    groupItemHeight: {\n      check: \"Integer\",\n      init: null,\n      nullable: true,\n      apply: \"_applyGroupRowHeight\",\n      themeable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a label. This is only needed if objects are stored in the\n     * model.\n     */\n    labelPath: {\n      check: \"String\",\n      apply: \"_applyLabelPath\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as an icon. This is only needed if objects are stored in the\n     * model and icons should be displayed.\n     */\n    iconPath: {\n      check: \"String\",\n      apply: \"_applyIconPath\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * displayed as a group label. This is only needed if objects are stored in the\n     * model.\n     */\n    groupLabelPath: {\n      check: \"String\",\n      apply: \"_applyGroupLabelPath\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions: {\n      apply: \"_applyLabelOptions\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions: {\n      apply: \"_applyIconOptions\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the group label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    groupLabelOptions: {\n      apply: \"_applyGroupLabelOptions\",\n      nullable: true\n    },\n\n    /**\n     * Delegation object which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     */\n    delegate: {\n      apply: \"_applyDelegate\",\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    },\n\n    /**\n     * Indicates that the list is managing the {@link #groups} automatically.\n     */\n    autoGrouping: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Contains all groups for data binding, but do only manipulate the array\n     * when the {@link #autoGrouping} is set to <code>false</code>.\n     */\n    groups: {\n      check: \"qx.data.Array\",\n      event: \"changeGroups\",\n      nullable: false,\n      deferredInit: true\n    },\n\n    /**\n     * Render list items with variable height,\n     * calculated from the individual item size.\n     */\n    variableItemHeight: {\n      check: \"Boolean\",\n      apply: \"_applyVariableItemHeight\",\n      nullable: false,\n      init: true\n    }\n  },\n\n  members: {\n    /** @type {qx.ui.virtual.layer.Row} background renderer */\n    _background: null,\n\n    /** @type {qx.ui.list.provider.IListProvider} provider for cell rendering */\n    _provider: null,\n\n    /** @type {qx.ui.virtual.layer.Abstract} layer which contains the items. */\n    _layer: null,\n\n    /**\n     * @type {Array} lookup table to get the model index from a row. To get the\n     *   correct value after applying filter, sorter, group.\n     *\n     * Note the value <code>-1</code> indicates that the value is a group item.\n     */\n    __lookupTable: null,\n\n    /** @type {Array} lookup table for getting the group index from the row */\n    __lookupTableForGroup: null,\n\n    /**\n     * @type {Map} contains all groups with the items as children. The key is\n     *   the group name and the value is an <code>Array</code> containing each\n     *   item's model index.\n     */\n    __groupHashMap: null,\n\n    /**\n     * @type {Boolean} indicates when one or more <code>String</code> are used for grouping.\n     */\n    __groupStringsUsed: false,\n\n    /**\n     * @type {Boolean} indicates when one or more <code>Object</code> are used for grouping.\n     */\n    __groupObjectsUsed: false,\n\n    /**\n     * @type {Boolean} indicates when a default group is used for grouping.\n     */\n    __defaultGroupUsed: false,\n\n    __defaultGroups: null,\n\n    __deferredLayerUpdate: null,\n\n    /**\n     * Trigger a rebuild from the internal data structure.\n     */\n    refresh() {\n      this.__buildUpLookupTable();\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"row-layer\":\n          control = new qx.ui.virtual.layer.Row(null, null);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /**\n     * Initialize the virtual list provider.\n     */\n    _initWidgetProvider() {\n      this._provider = new qx.ui.list.provider.WidgetProvider(this);\n    },\n\n    /**\n     * Initializes the virtual list.\n     */\n    _init() {\n      this._initWidgetProvider();\n\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n      this.__groupStringsUsed = false;\n      this.__groupObjectsUsed = false;\n      this.__defaultGroupUsed = false;\n\n      this.getPane().addListener(\"resize\", this._onResize, this);\n\n      this._initBackground();\n      this._initLayer();\n    },\n\n    /**\n     * Initializes the background renderer.\n     */\n    _initBackground() {\n      this._background = this.getChildControl(\"row-layer\");\n      this.getPane().addLayer(this._background);\n    },\n\n    /**\n     * Initializes the layer for rendering.\n     */\n    _initLayer() {\n      this._layer = this._provider.createLayer();\n      this._layer.addListener(\"updated\", this._onLayerUpdated, this);\n      this.getPane().addLayer(this._layer);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the model data for the given row.\n     *\n     * @param row {Integer} row to get data for.\n     * @return {var|null} the row's model data.\n     */\n    _getDataFromRow(row) {\n      var data = null;\n\n      var model = this.getModel();\n      if (model == null) {\n        return null;\n      }\n\n      if (this._isGroup(row)) {\n        data = this.getGroups().getItem(this._lookupGroup(row));\n      } else {\n        data = model.getItem(this._lookup(row));\n      }\n\n      if (data != null) {\n        return data;\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Return the internal lookup table. But do not manipulate the\n     * lookup table!\n     *\n     * @return {Array} The internal lookup table.\n     */\n    _getLookupTable() {\n      return this.__lookupTable;\n    },\n\n    /**\n     * Performs a lookup from row to model index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The model index or\n     *   <code>-1</code> if the row is a group item.\n     */\n    _lookup(row) {\n      return this.__lookupTable[row];\n    },\n\n    /**\n     * Performs a lookup from row to group index.\n     *\n     * @param row {Number} The row to look at.\n     * @return {Number} The group index or\n     *   <code>-1</code> if the row is a not a group item.\n     */\n    _lookupGroup(row) {\n      return this.__lookupTableForGroup.indexOf(row);\n    },\n\n    /**\n     * Performs a lookup from model index to row.\n     *\n     * @param index {Number} The index to look at.\n     * @return {Number} The row or <code>-1</code>\n     *  if the index is not a model index.\n     */\n    _reverseLookup(index) {\n      if (index < 0) {\n        return -1;\n      }\n      return this.__lookupTable.indexOf(index);\n    },\n\n    /**\n     * Checks if the passed row is a group or an item.\n     *\n     * @param row {Integer} row to check.\n     * @return {Boolean} <code>true</code> if the row is a group element,\n     *  <code>false</code> if the row is an item element.\n     */\n    _isGroup(row) {\n      return this._lookup(row) == -1;\n    },\n\n    /**\n     * Returns the selectable model items.\n     *\n     * @return {qx.data.Array|null} The selectable items.\n     */\n    _getSelectables() {\n      return this.getModel();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // apply method\n    _applyModel(value, old) {\n      if (value != null) {\n        value.addListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      if (old != null) {\n        old.removeListener(\"changeLength\", this._onModelChange, this);\n      }\n\n      this._onModelChange();\n    },\n\n    // apply method\n    _applyRowHeight(value, old) {\n      this.getPane().getRowConfig().setDefaultItemSize(value);\n    },\n\n    // apply method\n    _applyGroupRowHeight(value, old) {\n      this.__updateGroupRowHeight();\n    },\n\n    // apply method\n    _applyLabelPath(value, old) {\n      this._provider.setLabelPath(value);\n    },\n\n    // apply method\n    _applyIconPath(value, old) {\n      this._provider.setIconPath(value);\n    },\n\n    // apply method\n    _applyGroupLabelPath(value, old) {\n      this._provider.setGroupLabelPath(value);\n    },\n\n    // apply method\n    _applyLabelOptions(value, old) {\n      this._provider.setLabelOptions(value);\n    },\n\n    // apply method\n    _applyIconOptions(value, old) {\n      this._provider.setIconOptions(value);\n    },\n\n    // apply method\n    _applyGroupLabelOptions(value, old) {\n      this._provider.setGroupLabelOptions(value);\n    },\n\n    // apply method\n    _applyDelegate(value, old) {\n      this._provider.setDelegate(value);\n      this.__buildUpLookupTable();\n    },\n\n    // property apply\n    _applyVariableItemHeight(value, old) {\n      if (value) {\n        this._setRowItemSize();\n      } else {\n        this.getPane().getRowConfig().resetItemSizes();\n        this.getPane().fullUpdate();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the resize event.\n     *\n     * @param e {qx.event.type.Data} resize event.\n     */\n    _onResize(e) {\n      this.getPane().getColumnConfig().setItemSize(0, e.getData().width);\n    },\n\n    /**\n     * Event handler for the model change event.\n     *\n     * @param e {qx.event.type.Data} model change event.\n     */\n    _onModelChange(e) {\n      // we have to remove the bindings before we rebuild the lookup table\n      // otherwise bindings might be dispatched to wrong items\n      // see: https://github.com/qooxdoo/qooxdoo/issues/196\n      this._provider.removeBindings();\n      this.__buildUpLookupTable();\n      this._applyDefaultSelection();\n\n      if (e instanceof qx.event.type.Data) {\n        this.fireDataEvent(\"changeModelLength\", e.getData(), e.getOldData());\n      }\n    },\n\n    /**\n     * Event handler for the updated event of the\n     * qx.ui.virtual.layer.WidgetCell layer.\n     *\n     * Recalculates the item sizes in a deffered call,\n     * which only happens if we have variable item heights\n     */\n    _onLayerUpdated() {\n      if (this.isVariableItemHeight() === false) {\n        return;\n      }\n\n      if (this.__deferredLayerUpdate === null) {\n        this.__deferredLayerUpdate = new qx.util.DeferredCall(function () {\n          this._setRowItemSize();\n        }, this);\n      }\n\n      this.__deferredLayerUpdate.schedule();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper method to update the row count.\n     */\n    __updateRowCount() {\n      this.getPane().getRowConfig().setItemCount(this.__lookupTable.length);\n      this.getPane().fullUpdate();\n    },\n\n    /**\n     * Helper method to update group row heights.\n     */\n    __updateGroupRowHeight() {\n      /*\n       * In case of having variableItemHeight set to true,\n       * the group item height has a variable height as well\n       * and will be set again in method _setRowItemSize\n       * which is a deferred call, being run after all changes.\n       * Resetting the complete item sizes here and setting\n       * the height of the group items, only leads to an\n       * unnecessary flicker of the list items by shrinking and\n       * growing them again.\n       */\n      if (this.isVariableItemHeight()) {\n        return;\n      }\n      var rc = this.getPane().getRowConfig();\n      var gh = this.getGroupItemHeight();\n      rc.resetItemSizes();\n\n      if (gh) {\n        for (var i = 0, l = this.__lookupTable.length; i < l; ++i) {\n          if (this.__lookupTable[i] == -1) {\n            rc.setItemSize(i, gh);\n          }\n        }\n      }\n    },\n\n    /**\n     * Internal method for building the lookup table.\n     */\n    __buildUpLookupTable() {\n      this.__lookupTable = [];\n      this.__lookupTableForGroup = [];\n      this.__groupHashMap = {};\n\n      if (this.isAutoGrouping()) {\n        this.getGroups().removeAll();\n      }\n\n      var model = this.getModel();\n\n      if (model != null) {\n        this._runDelegateFilter(model);\n        this._runDelegateSorter(model);\n        this._runDelegateGroup(model);\n      }\n\n      this._updateSelection();\n      this.__updateGroupRowHeight();\n      this.__updateRowCount();\n    },\n\n    /**\n     * Invokes filtering using the filter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateFilter(model) {\n      var filter = qx.util.Delegate.getMethod(this.getDelegate(), \"filter\");\n\n      for (var i = 0, l = model.length; i < l; ++i) {\n        if (filter == null || filter(model.getItem(i))) {\n          this.__lookupTable.push(i);\n        }\n      }\n    },\n\n    /**\n     * Invokes sorting using the sorter given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateSorter(model) {\n      if (this.__lookupTable.length == 0) {\n        return;\n      }\n\n      var sorter = qx.util.Delegate.getMethod(this.getDelegate(), \"sorter\");\n\n      if (sorter != null) {\n        this.__lookupTable.sort(function (a, b) {\n          return sorter(model.getItem(a), model.getItem(b));\n        });\n      }\n    },\n\n    /**\n     * Invokes grouping using the group result given in the delegate.\n     *\n     * @param model {qx.data.IListData} The model.\n     */\n    _runDelegateGroup(model) {\n      var groupMethod = qx.util.Delegate.getMethod(this.getDelegate(), \"group\");\n\n      if (groupMethod != null) {\n        for (var i = 0, l = this.__lookupTable.length; i < l; ++i) {\n          var index = this.__lookupTable[i];\n          var item = this.getModel().getItem(index);\n          var group = groupMethod(item);\n\n          this.__addGroup(group, index);\n        }\n        this.__lookupTable = this.__createLookupFromGroup();\n      }\n    },\n\n    /**\n     * Adds a model index the the group.\n     *\n     * @param group {String|Object|null} the group.\n     * @param index {Integer} model index to add.\n     */\n    __addGroup(group, index) {\n      // if group is null add to default group\n      if (group == null) {\n        this.__defaultGroupUsed = true;\n        group = \"???\";\n      }\n\n      var name = this.__getUniqueGroupName(group);\n      if (this.__groupHashMap[name] == null) {\n        this.__groupHashMap[name] = [];\n        if (this.isAutoGrouping()) {\n          this.getGroups().push(group);\n        }\n      }\n      this.__groupHashMap[name].push(index);\n    },\n\n    /**\n     * Creates a lookup table form the internal group hash map.\n     *\n     * @return {Array} the lookup table based on the internal group hash map.\n     */\n    __createLookupFromGroup() {\n      this.__checkGroupStructure();\n\n      var result = [];\n      var row = 0;\n      var groups = this.getGroups();\n      for (var i = 0; i < groups.getLength(); i++) {\n        var group = groups.getItem(i);\n\n        // indicate that the value is a group\n        result.push(-1);\n        this.__lookupTableForGroup.push(row);\n        row++;\n\n        var key = this.__getUniqueGroupName(group);\n        var groupMembers = this.__groupHashMap[key];\n        if (groupMembers != null) {\n          for (var k = 0; k < groupMembers.length; k++) {\n            result.push(groupMembers[k]);\n            row++;\n          }\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Returns an unique group name for the passed group.\n     *\n     * @param group {String|Object} Group to find unique group name.\n     * @return {String} Unique group name.\n     */\n    __getUniqueGroupName(group) {\n      var name = null;\n      if (!qx.lang.Type.isString(group)) {\n        var index = this.getGroups().indexOf(group);\n        this.__groupObjectsUsed = true;\n\n        name = \"group\";\n        if (index == -1) {\n          name += this.getGroups().getLength();\n        } else {\n          name += index;\n        }\n      } else {\n        this.__groupStringsUsed = true;\n        var name = group;\n      }\n      return name;\n    },\n\n    /**\n     * Checks that <code>Object</code> and <code>String</code> are not mixed\n     * as group identifier, otherwise an exception occurs.\n     */\n    __checkGroupStructure() {\n      if (\n        (this.__groupObjectsUsed && this.__defaultGroupUsed) ||\n        (this.__groupObjectsUsed && this.__groupStringsUsed)\n      ) {\n        throw new Error(\n          \"GroupingTypeError: You can't mix 'Objects' and 'Strings' as\" +\n            \" group identifier!\"\n        );\n      }\n    },\n\n    /**\n     * Get the height of each visible item and set it as the\n     * row size\n     */\n    _setRowItemSize() {\n      var rowConfig = this.getPane().getRowConfig();\n      var layer = this._layer;\n\n      var firstRow = layer.getFirstRow();\n      var lastRow = firstRow + layer.getRowSizes().length;\n\n      for (var row = firstRow; row < lastRow; row++) {\n        var widget = layer.getRenderedCellWidget(row, 0);\n        if (widget !== null) {\n          var height = widget.getSizeHint().height;\n\n          rowConfig.setItemSize(row, height);\n        }\n      }\n    }\n  },\n\n  destruct() {\n    this._disposeObjects(\"__deferredLayerUpdate\");\n\n    var model = this.getModel();\n    if (model != null) {\n      model.removeListener(\"changeLength\", this._onModelChange, this);\n    }\n\n    var pane = this.getPane();\n    if (pane != null) {\n      pane.removeListener(\"resize\", this._onResize, this);\n    }\n\n    this._background.dispose();\n    this._provider.dispose();\n    this._layer.dispose();\n    this._background =\n      this._provider =\n      this._layer =\n      this.__lookupTable =\n      this.__lookupTableForGroup =\n      this.__groupHashMap =\n        null;\n\n    if (this.__defaultGroups) {\n      this.__defaultGroups.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}