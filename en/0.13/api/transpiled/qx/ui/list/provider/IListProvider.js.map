{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "createLayer",
    "createItemRenderer",
    "createGroupRenderer",
    "styleSelectabled",
    "row",
    "styleUnselectabled",
    "isSelectable",
    "setLabelPath",
    "path",
    "setIconPath",
    "setLabelOptions",
    "options",
    "setIconOptions",
    "setDelegate",
    "delegate",
    "removeBindings",
    "ui",
    "list",
    "provider",
    "IListProvider"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/list/provider/IListProvider.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This interface needs to implemented from all {@link qx.ui.list.List} providers.\r\n *\r\n * @internal\r\n */\r\nqx.Interface.define(\"qx.ui.list.provider.IListProvider\", {\r\n  members: {\r\n    /**\r\n     * Creates a layer for item and group rendering.\r\n     *\r\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\r\n     */\r\n    createLayer() {},\r\n\r\n    /**\r\n     * Creates a renderer for item rendering.\r\n     *\r\n     * @return {var} new item renderer.\r\n     */\r\n    createItemRenderer() {},\r\n\r\n    /**\r\n     * Creates a renderer for group rendering.\r\n     *\r\n     * @return {var} new group renderer.\r\n     */\r\n    createGroupRenderer() {},\r\n\r\n    /**\r\n     * Styles a selected item.\r\n     *\r\n     * @param row {Integer} row to style.\r\n     */\r\n    styleSelectabled(row) {},\r\n\r\n    /**\r\n     * Styles a not selected item.\r\n     *\r\n     * @param row {Integer} row to style.\r\n     */\r\n    styleUnselectabled(row) {},\r\n\r\n    /**\r\n     * Returns if the passed row can be selected or not.\r\n     *\r\n     * @param row {Integer} row to select.\r\n     * @return {Boolean} <code>true</code> when the row can be selected,\r\n     *    <code>false</code> otherwise.\r\n     */\r\n    isSelectable(row) {},\r\n\r\n    /**\r\n     * The path to the property which holds the information that should be\r\n     * shown as a label. This is only needed if objects are stored in the model.\r\n     *\r\n     * @param path {String} path to the property.\r\n     */\r\n    setLabelPath(path) {},\r\n\r\n    /**\r\n     * The path to the property which holds the information that should be\r\n     * shown as an icon. This is only needed if objects are stored in the model\r\n     * and if the icon should be shown.\r\n     *\r\n     * @param path {String} path to the property.\r\n     */\r\n    setIconPath(path) {},\r\n\r\n    /**\r\n     * A map containing the options for the label binding. The possible keys\r\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\r\n     *\r\n     * @param options {Map} options for the label binding.\r\n     */\r\n    setLabelOptions(options) {},\r\n\r\n    /**\r\n     * A map containing the options for the icon binding. The possible keys\r\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\r\n     *\r\n     * @param options {Map} options for the icon binding.\r\n     */\r\n    setIconOptions(options) {},\r\n\r\n    /**\r\n     * Delegation object, which can have one or more functions defined by the\r\n     * {@link qx.ui.list.core.IListDelegate} interface.\r\n     *\r\n     * @param delegate {Object} delegation object.\r\n     */\r\n    setDelegate(delegate) {},\r\n\r\n    /**\r\n     * Remove all bindings from all bounded items.\r\n     */\r\n    removeBindings() {}\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACvDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAAA,EAAG,CAAC,CAAC;MAEhB;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,WAAAA,mBAAA,EAAG,CAAC,CAAC;MAEvB;AACJ;AACA;AACA;AACA;MACIC,mBAAmB,WAAAA,oBAAA,EAAG,CAAC,CAAC;MAExB;AACJ;AACA;AACA;AACA;MACIC,gBAAgB,WAAAA,iBAACC,GAAG,EAAE,CAAC,CAAC;MAExB;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,WAAAA,mBAACD,GAAG,EAAE,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,YAAY,WAAAA,aAACF,GAAG,EAAE,CAAC,CAAC;MAEpB;AACJ;AACA;AACA;AACA;AACA;MACIG,YAAY,WAAAA,aAACC,IAAI,EAAE,CAAC,CAAC;MAErB;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,WAAAA,YAACD,IAAI,EAAE,CAAC,CAAC;MAEpB;AACJ;AACA;AACA;AACA;AACA;MACIE,eAAe,WAAAA,gBAACC,OAAO,EAAE,CAAC,CAAC;MAE3B;AACJ;AACA;AACA;AACA;AACA;MACIC,cAAc,WAAAA,eAACD,OAAO,EAAE,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;MACIE,WAAW,WAAAA,YAACC,QAAQ,EAAE,CAAC,CAAC;MAExB;AACJ;AACA;MACIC,cAAc,WAAAA,eAAA,EAAG,CAAC;IACpB;EACF,CAAC,CAAC;EAnHFtB,EAAE,CAACuB,EAAE,CAACC,IAAI,CAACC,QAAQ,CAACC,aAAa,CAACvB,aAAa,GAAGA,aAAa;AAAC"
}