{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "createLayer",
    "createItemRenderer",
    "createGroupRenderer",
    "styleSelectabled",
    "row",
    "styleUnselectabled",
    "isSelectable",
    "setLabelPath",
    "path",
    "setIconPath",
    "setLabelOptions",
    "options",
    "setIconOptions",
    "setDelegate",
    "delegate",
    "removeBindings",
    "ui",
    "list",
    "provider",
    "IListProvider"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/list/provider/IListProvider.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This interface needs to implemented from all {@link qx.ui.list.List} providers.\n *\n * @internal\n */\nqx.Interface.define(\"qx.ui.list.provider.IListProvider\", {\n  members: {\n    /**\n     * Creates a layer for item and group rendering.\n     *\n     * @return {qx.ui.virtual.layer.Abstract} new layer.\n     */\n    createLayer() {},\n\n    /**\n     * Creates a renderer for item rendering.\n     *\n     * @return {var} new item renderer.\n     */\n    createItemRenderer() {},\n\n    /**\n     * Creates a renderer for group rendering.\n     *\n     * @return {var} new group renderer.\n     */\n    createGroupRenderer() {},\n\n    /**\n     * Styles a selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleSelectabled(row) {},\n\n    /**\n     * Styles a not selected item.\n     *\n     * @param row {Integer} row to style.\n     */\n    styleUnselectabled(row) {},\n\n    /**\n     * Returns if the passed row can be selected or not.\n     *\n     * @param row {Integer} row to select.\n     * @return {Boolean} <code>true</code> when the row can be selected,\n     *    <code>false</code> otherwise.\n     */\n    isSelectable(row) {},\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as a label. This is only needed if objects are stored in the model.\n     *\n     * @param path {String} path to the property.\n     */\n    setLabelPath(path) {},\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon. This is only needed if objects are stored in the model\n     * and if the icon should be shown.\n     *\n     * @param path {String} path to the property.\n     */\n    setIconPath(path) {},\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the label binding.\n     */\n    setLabelOptions(options) {},\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     *\n     * @param options {Map} options for the icon binding.\n     */\n    setIconOptions(options) {},\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.list.core.IListDelegate} interface.\n     *\n     * @param delegate {Object} delegation object.\n     */\n    setDelegate(delegate) {},\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings() {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACvDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,WAAW,yBAAG,CAAC,CAAC;MAEhB;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,gCAAG,CAAC,CAAC;MAEvB;AACJ;AACA;AACA;AACA;MACIC,mBAAmB,iCAAG,CAAC,CAAC;MAExB;AACJ;AACA;AACA;AACA;MACIC,gBAAgB,4BAACC,GAAG,EAAE,CAAC,CAAC;MAExB;AACJ;AACA;AACA;AACA;MACIC,kBAAkB,8BAACD,GAAG,EAAE,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,YAAY,wBAACF,GAAG,EAAE,CAAC,CAAC;MAEpB;AACJ;AACA;AACA;AACA;AACA;MACIG,YAAY,wBAACC,IAAI,EAAE,CAAC,CAAC;MAErB;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,WAAW,uBAACD,IAAI,EAAE,CAAC,CAAC;MAEpB;AACJ;AACA;AACA;AACA;AACA;MACIE,eAAe,2BAACC,OAAO,EAAE,CAAC,CAAC;MAE3B;AACJ;AACA;AACA;AACA;AACA;MACIC,cAAc,0BAACD,OAAO,EAAE,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;MACIE,WAAW,uBAACC,QAAQ,EAAE,CAAC,CAAC;MAExB;AACJ;AACA;MACIC,cAAc,4BAAG,CAAC;IACpB;EACF,CAAC,CAAC;EAnHFtB,EAAE,CAACuB,EAAE,CAACC,IAAI,CAACC,QAAQ,CAACC,aAAa,CAACvB,aAAa,GAAGA,aAAa;AAAC"
}