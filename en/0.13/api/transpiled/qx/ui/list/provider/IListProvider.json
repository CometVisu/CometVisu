{
  "className": "qx.ui.list.provider.IListProvider",
  "packageName": "qx.ui.list.provider",
  "name": "IListProvider",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 596
      },
      "end": {
        "line": 116,
        "column": 3,
        "index": 3054
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This interface needs to implemented from all {@link qx.ui.list.List} providers.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "createLayer": {
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 805
        },
        "end": {
          "line": 31,
          "column": 20,
          "index": 821
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a layer for item and group rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.virtual.layer.Abstract} new layer.",
            "type": "qx.ui.virtual.layer.Abstract",
            "description": " new layer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createItemRenderer": {
      "location": {
        "start": {
          "line": 38,
          "column": 4,
          "index": 937
        },
        "end": {
          "line": 38,
          "column": 27,
          "index": 960
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a renderer for item rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new item renderer.",
            "type": "var",
            "description": " new item renderer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "createGroupRenderer": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1078
        },
        "end": {
          "line": 45,
          "column": 28,
          "index": 1102
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a renderer for group rendering.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new group renderer.",
            "type": "var",
            "description": " new group renderer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "styleSelectabled": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1205
        },
        "end": {
          "line": 52,
          "column": 28,
          "index": 1229
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Styles a selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "styleUnselectabled": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1336
        },
        "end": {
          "line": 59,
          "column": 30,
          "index": 1362
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Styles a not selected item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectable": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1605
        },
        "end": {
          "line": 68,
          "column": 24,
          "index": 1625
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns if the passed row can be selected or not.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to select.",
            "paramName": "row",
            "description": " row to select.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the row can be selected,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> when the row can be selected,\n    <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setLabelPath": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 1861
        },
        "end": {
          "line": 76,
          "column": 25,
          "index": 1882
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n shown as a label. This is only needed if objects are stored in the model.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} path to the property.",
            "paramName": "path",
            "description": " path to the property.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setIconPath": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2157
        },
        "end": {
          "line": 85,
          "column": 24,
          "index": 2177
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The path to the property which holds the information that should be\n shown as an icon. This is only needed if objects are stored in the model\n and if the icon should be shown.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} path to the property.",
            "paramName": "path",
            "description": " path to the property.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setLabelOptions": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2420
        },
        "end": {
          "line": 93,
          "column": 31,
          "index": 2447
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the label binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options {Map} options for the label binding.",
            "paramName": "options",
            "description": " options for the label binding.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setIconOptions": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2688
        },
        "end": {
          "line": 101,
          "column": 30,
          "index": 2714
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>A map containing the options for the icon binding. The possible keys\n can be found in the {@link qx.data.SingleValueBinding} documentation.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "options {Map} options for the icon binding.",
            "paramName": "options",
            "description": " options for the icon binding.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setDelegate": {
      "location": {
        "start": {
          "line": 109,
          "column": 4,
          "index": 2929
        },
        "end": {
          "line": 109,
          "column": 28,
          "index": 2953
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Delegation object, which can have one or more functions defined by the\n {@link qx.ui.list.core.IListDelegate} interface.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "delegate {Object} delegation object.",
            "paramName": "delegate",
            "description": " delegation object.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeBindings": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3027
        },
        "end": {
          "line": 114,
          "column": 23,
          "index": 3046
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove all bindings from all bounded items.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}