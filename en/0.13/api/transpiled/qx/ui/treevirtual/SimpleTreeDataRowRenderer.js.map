{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "rowrenderer",
    "Default",
    "construct",
    "constructor",
    "call",
    "members",
    "updateDataRowElement",
    "rowInfo",
    "rowElem",
    "tree",
    "rowData",
    "tableModel",
    "getTableModel",
    "treeCol",
    "getTreeColumn",
    "node",
    "selected",
    "bSelected",
    "row",
    "selModel",
    "getSelectionModel",
    "isSelectedIndex",
    "_addSelectionInterval",
    "treevirtual",
    "SimpleTreeDataRowRenderer",
    "superclass",
    "prototype"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/treevirtual/SimpleTreeDataRowRenderer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A data row renderer for a simple tree row\r\n */\r\nqx.Class.define(\"qx.ui.treevirtual.SimpleTreeDataRowRenderer\", {\r\n  extend: qx.ui.table.rowrenderer.Default,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    // overridden\r\n    updateDataRowElement(rowInfo, rowElem) {\r\n      // If the node is selected, select the row\r\n      var tree = rowInfo.table;\r\n      var rowData = rowInfo.rowData;\r\n      var tableModel = tree.getTableModel();\r\n      var treeCol = tableModel.getTreeColumn();\r\n      var node = rowData[treeCol];\r\n\r\n      // Set the row's selected state based on the data model\r\n      rowInfo.selected = node.bSelected;\r\n\r\n      if (node.bSelected) {\r\n        // Ensure that the selection model knows it's selected\r\n        var row = rowInfo.row;\r\n        var selModel = tree.getSelectionModel();\r\n        if (!selModel.isSelectedIndex(row)) {\r\n          selModel._addSelectionInterval(row, row);\r\n        }\r\n      }\r\n\r\n      // Now call our superclass\r\n      super.updateDataRowElement(rowInfo, rowElem);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6CAA6C,EAAE;IAC7DC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,WAAW,CAACC,OAAO;IAEvC;AACF;AACA;AACA;AACA;IAEEC,SAAS,WAAAA,UAAA,EAAG;MACVX,EAAA,CAAAO,EAAA,CAAAC,KAAA,CAAAC,WAAA,CAAAC,OAAA,CAAAE,WAAA,CAAAC,IAAA;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;MACAC,oBAAoB,WAAAA,qBAACC,OAAO,EAAEC,OAAO,EAAE;QACrC;QACA,IAAIC,IAAI,GAAGF,OAAO,CAACR,KAAK;QACxB,IAAIW,OAAO,GAAGH,OAAO,CAACG,OAAO;QAC7B,IAAIC,UAAU,GAAGF,IAAI,CAACG,aAAa,CAAC,CAAC;QACrC,IAAIC,OAAO,GAAGF,UAAU,CAACG,aAAa,CAAC,CAAC;QACxC,IAAIC,IAAI,GAAGL,OAAO,CAACG,OAAO,CAAC;;QAE3B;QACAN,OAAO,CAACS,QAAQ,GAAGD,IAAI,CAACE,SAAS;QAEjC,IAAIF,IAAI,CAACE,SAAS,EAAE;UAClB;UACA,IAAIC,GAAG,GAAGX,OAAO,CAACW,GAAG;UACrB,IAAIC,QAAQ,GAAGV,IAAI,CAACW,iBAAiB,CAAC,CAAC;UACvC,IAAI,CAACD,QAAQ,CAACE,eAAe,CAACH,GAAG,CAAC,EAAE;YAClCC,QAAQ,CAACG,qBAAqB,CAACJ,GAAG,EAAEA,GAAG,CAAC;UAC1C;QACF;;QAEA;QACA3B,EAAA,CAAAO,EAAA,CAAAyB,WAAA,CAAAC,yBAAA,CAAAC,UAAA,CAAAC,SAAA,CAAApB,oBAAA,CAAAF,IAAA,OAA2BG,OAAO,EAAEC,OAAO;MAC7C;IACF;EACF,CAAC,CAAC;EAlEFjB,EAAE,CAACO,EAAE,CAACyB,WAAW,CAACC,yBAAyB,CAAC9B,aAAa,GAAGA,aAAa;AAAC"
}