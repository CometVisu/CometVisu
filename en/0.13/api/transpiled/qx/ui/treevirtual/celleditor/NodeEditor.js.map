{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "celleditor",
    "TextField",
    "members",
    "getCellEditorValue",
    "cellEditor",
    "label",
    "getValue",
    "validationFunc",
    "getValidationFunction",
    "originalLabel",
    "newValue",
    "lang",
    "Object",
    "clone",
    "originalValue",
    "createCellEditor",
    "cellInfo",
    "getTableModel",
    "isNodeEditable",
    "row",
    "_createEditor",
    "value",
    "_typeof",
    "labelPos",
    "setValue",
    "setPaddingLeft",
    "addListener",
    "selectAllText",
    "form",
    "setAppearance",
    "treevirtual",
    "NodeEditor"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/treevirtual/celleditor/NodeEditor.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Patrick Buxton\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Pat Buxton (rad-pat)\n\n************************************************************************ */\n\n/**\n * A cell editor factory for editing a virtualtree node label\n */\nqx.Class.define(\"qx.ui.treevirtual.celleditor.NodeEditor\", {\n  extend: qx.ui.table.celleditor.TextField,\n\n  members: {\n    // overridden\n    getCellEditorValue(cellEditor) {\n      var label = cellEditor.getValue(); // This will be the new label for the Tree Node\n\n      // validation function will be called with new and old label\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc) {\n        label = validationFunc(label, cellEditor.originalLabel);\n      }\n\n      var newValue = qx.lang.Object.clone(cellEditor.originalValue);\n      newValue.label = label;\n      return newValue;\n    },\n\n    // interface implementation\n    createCellEditor(cellInfo) {\n      if (!cellInfo.table.getTableModel().isNodeEditable(cellInfo.row)) {\n        return null;\n      }\n\n      var cellEditor = this._createEditor();\n\n      // The value in the case of a Tree is a Node and we want the label\n      if (cellInfo.value === null || typeof cellInfo.value != \"object\") {\n        cellInfo.value = { label: \"\", labelPos: 0 };\n      }\n\n      var label = cellInfo.value.label;\n      cellEditor.originalValue = cellInfo.value;\n      cellEditor.originalLabel = label;\n      cellEditor.setValue(\"\" + label);\n      // dynamically pad to the position of the node label - calculated in CellRenderer\n      cellEditor.setPaddingLeft(cellInfo.value.labelPos);\n\n      cellEditor.addListener(\"appear\", function () {\n        cellEditor.selectAllText();\n      });\n\n      return cellEditor;\n    },\n\n    _createEditor() {\n      var cellEditor = new qx.ui.form.TextField();\n      cellEditor.setAppearance(\"treevirtual-node-editor-textfield\");\n      return cellEditor;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yCAAyC,EAAE;IACzDC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,UAAU,CAACC,SAAS;IAExCC,OAAO,EAAE;MACP;MACAC,kBAAkB,WAAlBA,kBAAkBA,CAACC,UAAU,EAAE;QAC7B,IAAIC,KAAK,GAAGD,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAEnC;QACA,IAAIC,cAAc,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;QACjD,IAAID,cAAc,EAAE;UAClBF,KAAK,GAAGE,cAAc,CAACF,KAAK,EAAED,UAAU,CAACK,aAAa,CAAC;QACzD;QAEA,IAAIC,QAAQ,GAAGnB,EAAE,CAACoB,IAAI,CAACC,MAAM,CAACC,KAAK,CAACT,UAAU,CAACU,aAAa,CAAC;QAC7DJ,QAAQ,CAACL,KAAK,GAAGA,KAAK;QACtB,OAAOK,QAAQ;MACjB,CAAC;MAED;MACAK,gBAAgB,WAAhBA,gBAAgBA,CAACC,QAAQ,EAAE;QACzB,IAAI,CAACA,QAAQ,CAACjB,KAAK,CAACkB,aAAa,CAAC,CAAC,CAACC,cAAc,CAACF,QAAQ,CAACG,GAAG,CAAC,EAAE;UAChE,OAAO,IAAI;QACb;QAEA,IAAIf,UAAU,GAAG,IAAI,CAACgB,aAAa,CAAC,CAAC;;QAErC;QACA,IAAIJ,QAAQ,CAACK,KAAK,KAAK,IAAI,IAAIC,OAAA,CAAON,QAAQ,CAACK,KAAK,KAAI,QAAQ,EAAE;UAChEL,QAAQ,CAACK,KAAK,GAAG;YAAEhB,KAAK,EAAE,EAAE;YAAEkB,QAAQ,EAAE;UAAE,CAAC;QAC7C;QAEA,IAAIlB,KAAK,GAAGW,QAAQ,CAACK,KAAK,CAAChB,KAAK;QAChCD,UAAU,CAACU,aAAa,GAAGE,QAAQ,CAACK,KAAK;QACzCjB,UAAU,CAACK,aAAa,GAAGJ,KAAK;QAChCD,UAAU,CAACoB,QAAQ,CAAC,EAAE,GAAGnB,KAAK,CAAC;QAC/B;QACAD,UAAU,CAACqB,cAAc,CAACT,QAAQ,CAACK,KAAK,CAACE,QAAQ,CAAC;QAElDnB,UAAU,CAACsB,WAAW,CAAC,QAAQ,EAAE,YAAY;UAC3CtB,UAAU,CAACuB,aAAa,CAAC,CAAC;QAC5B,CAAC,CAAC;QAEF,OAAOvB,UAAU;MACnB,CAAC;MAEDgB,aAAa,WAAbA,aAAaA,CAAA,EAAG;QACd,IAAIhB,UAAU,GAAG,IAAIb,EAAE,CAACO,EAAE,CAAC8B,IAAI,CAAC3B,SAAS,CAAC,CAAC;QAC3CG,UAAU,CAACyB,aAAa,CAAC,mCAAmC,CAAC;QAC7D,OAAOzB,UAAU;MACnB;IACF;EACF,CAAC,CAAC;EAzEFb,EAAE,CAACO,EAAE,CAACgC,WAAW,CAAC9B,UAAU,CAAC+B,UAAU,CAACrC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}