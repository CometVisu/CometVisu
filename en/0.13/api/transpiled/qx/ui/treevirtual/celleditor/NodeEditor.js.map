{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "celleditor",
    "TextField",
    "members",
    "getCellEditorValue",
    "cellEditor",
    "label",
    "getValue",
    "validationFunc",
    "getValidationFunction",
    "originalLabel",
    "newValue",
    "lang",
    "Object",
    "clone",
    "originalValue",
    "createCellEditor",
    "cellInfo",
    "getTableModel",
    "isNodeEditable",
    "row",
    "_createEditor",
    "value",
    "labelPos",
    "setValue",
    "setPaddingLeft",
    "addListener",
    "selectAllText",
    "form",
    "setAppearance",
    "treevirtual",
    "NodeEditor"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/treevirtual/celleditor/NodeEditor.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Patrick Buxton\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Pat Buxton (rad-pat)\n\n************************************************************************ */\n\n/**\n * A cell editor factory for editing a virtualtree node label\n */\nqx.Class.define(\"qx.ui.treevirtual.celleditor.NodeEditor\", {\n  extend: qx.ui.table.celleditor.TextField,\n\n  members: {\n    // overridden\n    getCellEditorValue(cellEditor) {\n      var label = cellEditor.getValue(); // This will be the new label for the Tree Node\n\n      // validation function will be called with new and old label\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc) {\n        label = validationFunc(label, cellEditor.originalLabel);\n      }\n\n      var newValue = qx.lang.Object.clone(cellEditor.originalValue);\n      newValue.label = label;\n      return newValue;\n    },\n\n    // interface implementation\n    createCellEditor(cellInfo) {\n      if (!cellInfo.table.getTableModel().isNodeEditable(cellInfo.row)) {\n        return null;\n      }\n\n      var cellEditor = this._createEditor();\n\n      // The value in the case of a Tree is a Node and we want the label\n      if (cellInfo.value === null || typeof cellInfo.value != \"object\") {\n        cellInfo.value = { label: \"\", labelPos: 0 };\n      }\n\n      var label = cellInfo.value.label;\n      cellEditor.originalValue = cellInfo.value;\n      cellEditor.originalLabel = label;\n      cellEditor.setValue(\"\" + label);\n      // dynamically pad to the position of the node label - calculated in CellRenderer\n      cellEditor.setPaddingLeft(cellInfo.value.labelPos);\n\n      cellEditor.addListener(\"appear\", function () {\n        cellEditor.selectAllText();\n      });\n\n      return cellEditor;\n    },\n\n    _createEditor() {\n      var cellEditor = new qx.ui.form.TextField();\n      cellEditor.setAppearance(\"treevirtual-node-editor-textfield\");\n      return cellEditor;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yCAAhB,EAA2D;IACzDC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,UAAZ,CAAuBC,SAD0B;IAGzDC,OAAO,EAAE;MACP;MACAC,kBAFO,8BAEYC,UAFZ,EAEwB;QAC7B,IAAIC,KAAK,GAAGD,UAAU,CAACE,QAAX,EAAZ,CAD6B,CACM;QAEnC;;QACA,IAAIC,cAAc,GAAG,KAAKC,qBAAL,EAArB;;QACA,IAAID,cAAJ,EAAoB;UAClBF,KAAK,GAAGE,cAAc,CAACF,KAAD,EAAQD,UAAU,CAACK,aAAnB,CAAtB;QACD;;QAED,IAAIC,QAAQ,GAAGnB,EAAE,CAACoB,IAAH,CAAQC,MAAR,CAAeC,KAAf,CAAqBT,UAAU,CAACU,aAAhC,CAAf;QACAJ,QAAQ,CAACL,KAAT,GAAiBA,KAAjB;QACA,OAAOK,QAAP;MACD,CAdM;MAgBP;MACAK,gBAjBO,4BAiBUC,QAjBV,EAiBoB;QACzB,IAAI,CAACA,QAAQ,CAACjB,KAAT,CAAekB,aAAf,GAA+BC,cAA/B,CAA8CF,QAAQ,CAACG,GAAvD,CAAL,EAAkE;UAChE,OAAO,IAAP;QACD;;QAED,IAAIf,UAAU,GAAG,KAAKgB,aAAL,EAAjB,CALyB,CAOzB;;;QACA,IAAIJ,QAAQ,CAACK,KAAT,KAAmB,IAAnB,IAA2B,QAAOL,QAAQ,CAACK,KAAhB,KAAyB,QAAxD,EAAkE;UAChEL,QAAQ,CAACK,KAAT,GAAiB;YAAEhB,KAAK,EAAE,EAAT;YAAaiB,QAAQ,EAAE;UAAvB,CAAjB;QACD;;QAED,IAAIjB,KAAK,GAAGW,QAAQ,CAACK,KAAT,CAAehB,KAA3B;QACAD,UAAU,CAACU,aAAX,GAA2BE,QAAQ,CAACK,KAApC;QACAjB,UAAU,CAACK,aAAX,GAA2BJ,KAA3B;QACAD,UAAU,CAACmB,QAAX,CAAoB,KAAKlB,KAAzB,EAfyB,CAgBzB;;QACAD,UAAU,CAACoB,cAAX,CAA0BR,QAAQ,CAACK,KAAT,CAAeC,QAAzC;QAEAlB,UAAU,CAACqB,WAAX,CAAuB,QAAvB,EAAiC,YAAY;UAC3CrB,UAAU,CAACsB,aAAX;QACD,CAFD;QAIA,OAAOtB,UAAP;MACD,CAzCM;MA2CPgB,aA3CO,2BA2CS;QACd,IAAIhB,UAAU,GAAG,IAAIb,EAAE,CAACO,EAAH,CAAM6B,IAAN,CAAW1B,SAAf,EAAjB;QACAG,UAAU,CAACwB,aAAX,CAAyB,mCAAzB;QACA,OAAOxB,UAAP;MACD;IA/CM;EAHgD,CAA3D;EArBAb,EAAE,CAACO,EAAH,CAAM+B,WAAN,CAAkB7B,UAAlB,CAA6B8B,UAA7B,CAAwCpC,aAAxC,GAAwDA,aAAxD"
}