{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "__sheet",
    "bom",
    "Stylesheet",
    "createElement",
    "__rules",
    "members",
    "addRule",
    "selector",
    "css",
    "hasRule",
    "push",
    "indexOf",
    "removeRule",
    "ui",
    "style"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/style/Stylesheet.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n/**\n * Global class which handles the single stylesheet used for qx.desktop.\n */\nqx.Class.define(\"qx.ui.style.Stylesheet\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n    this.__sheet = qx.bom.Stylesheet.createElement();\n    this.__rules = [];\n  },\n\n  members: {\n    __rules: null,\n    __sheet: null,\n\n    /**\n     * Adds a rule to the global stylesheet.\n     * @param selector {String} The CSS selector to add the rule for.\n     * @param css {String} The rule's content.\n     */\n    addRule(selector, css) {\n      if (this.hasRule(selector)) {\n        return;\n      }\n      qx.bom.Stylesheet.addRule(this.__sheet, selector, css);\n      this.__rules.push(selector);\n    },\n\n    /**\n     * Check if a rule exists.\n     * @param selector {String} The selector to check.\n     * @return {Boolean} <code>true</code> if the rule exists\n     */\n    hasRule(selector) {\n      return this.__rules.indexOf(selector) != -1;\n    },\n\n    /**\n     * Remove the rule for the given selector.\n     * @param selector {String} The selector to identify the rule.\n     */\n    removeRule(selector) {\n      delete this.__rules[this.__rules.indexOf(selector)];\n      qx.bom.Stylesheet.removeRule(this.__sheet, selector);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wBAAwB,EAAE;IACxCC,IAAI,EAAE,WAAW;IACjBC,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAACC,MAAM;IAEtBC,SAAS,WAAAA,UAAA,EAAG;MACVV,EAAA,CAAAQ,IAAA,CAAAC,MAAA,CAAAE,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,SAAO,GAAGb,EAAE,CAACc,GAAG,CAACC,UAAU,CAACC,aAAa,EAAE;MAChD,IAAI,CAACC,SAAO,GAAG,EAAE;IACnB,CAAC;IAEDC,OAAO,EAAE;MACPD,SAAO,EAAE,IAAI;MACbJ,SAAO,EAAE,IAAI;MAEb;AACJ;AACA;AACA;AACA;MACIM,OAAO,WAAAA,QAACC,QAAQ,EAAEC,GAAG,EAAE;QACrB,IAAI,IAAI,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;UAC1B;QACF;QACApB,EAAE,CAACc,GAAG,CAACC,UAAU,CAACI,OAAO,CAAC,IAAI,CAACN,SAAO,EAAEO,QAAQ,EAAEC,GAAG,CAAC;QACtD,IAAI,CAACJ,SAAO,CAACM,IAAI,CAACH,QAAQ,CAAC;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIE,OAAO,WAAAA,QAACF,QAAQ,EAAE;QAChB,OAAO,IAAI,CAACH,SAAO,CAACO,OAAO,CAACJ,QAAQ,CAAC,IAAI,CAAC,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;MACIK,UAAU,WAAAA,WAACL,QAAQ,EAAE;QACnB,OAAO,IAAI,CAACH,SAAO,CAAC,IAAI,CAACA,SAAO,CAACO,OAAO,CAACJ,QAAQ,CAAC,CAAC;QACnDpB,EAAE,CAACc,GAAG,CAACC,UAAU,CAACU,UAAU,CAAC,IAAI,CAACZ,SAAO,EAAEO,QAAQ,CAAC;MACtD;IACF;EACF,CAAC,CAAC;EAlEFpB,EAAE,CAAC0B,EAAE,CAACC,KAAK,CAACZ,UAAU,CAACZ,aAAa,GAAGA,aAAa;AAAC"
}