{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/groupbox/RadioGroupBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "groupbox",
    "GroupBox",
    "implement",
    "form",
    "IRadioItem",
    "IExecutable",
    "IBooleanForm",
    "IModel",
    "include",
    "MModelProperty",
    "properties",
    "appearance",
    "refine",
    "init",
    "events",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "RadioButton",
    "setAllowGrowX",
    "setValue",
    "addListener",
    "_onRadioChangeValue",
    "_repositionFrame",
    "_onExecute",
    "_add",
    "left",
    "right",
    "_applyEnabled",
    "value",
    "old",
    "getChildrenContainer",
    "setEnabled",
    "getValue",
    "e",
    "fireEvent",
    "checked",
    "getData",
    "fireDataEvent",
    "getOldData",
    "execute",
    "getChildControl",
    "setCommand",
    "command",
    "getCommand",
    "getGroup",
    "setGroup",
    "add",
    "resetValue",
    "getLabel",
    "RadioGroupBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A group box, which has a radio button near the legend.\n *\n * @childControl legend {qx.ui.form.RadioButton} radio button to en-/disable the groupbox content\n */\nqx.Class.define(\"qx.ui.groupbox.RadioGroupBox\",\n{\n  extend : qx.ui.groupbox.GroupBox,\n  implement : [\n    qx.ui.form.IRadioItem,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IModel\n  ],\n  include : [qx.ui.form.MModelProperty],\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init   : \"radio-groupbox\"\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /** Fired when the included radiobutton changed its value */\n    \"changeValue\" : \"qx.event.type.Data\",\n\n    /** Fired if the {@link #execute} method is invoked.*/\n    \"execute\" : \"qx.event.type.Event\"\n  },\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"legend\":\n          control = new qx.ui.form.RadioButton();\n          control.setAllowGrowX(true);\n          control.setValue(true);\n          control.addListener(\"changeValue\", this._onRadioChangeValue, this);\n          control.addListener(\"resize\", this._repositionFrame, this);\n          control.addListener(\"execute\", this._onExecute, this);\n\n\n          this._add(control, {left: 0, right: 0});\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    // overridden\n    _applyEnabled : function(value, old) {\n      this.base(arguments, value, old);\n\n      this.getChildrenContainer().setEnabled(value && this.getValue());\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for execute event of checkbox.\n     *\n     * @param e {qx.event.type.Event} Event which holds the current status\n     */\n    _onExecute: function(e) {\n      this.fireEvent(\"execute\");\n    },\n\n\n    /**\n     * Event listener for changeValue event of radio button\n     *\n     * @param e {qx.event.type.Data} Data event which holds the current status\n     */\n    _onRadioChangeValue : function(e)\n    {\n      var checked = e.getData() ? true : false;\n\n      // Disable content\n      this.getChildrenContainer().setEnabled(checked);\n\n      // Fire event to the outside\n      this.fireDataEvent(\"changeValue\", checked, e.getOldData());\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      REDIRECTIONS TO LEGEND (FOR RADIO GROUP SUPPORT)\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    execute: function() {\n      this.getChildControl(\"legend\").execute();\n    },\n\n\n    // interface implementation\n    setCommand : function(command) {\n      this.getChildControl(\"legend\").setCommand(command);\n    },\n\n\n    // interface implementation\n    getCommand : function() {\n      return this.getChildControl(\"legend\").getCommand();\n    },\n\n\n    /**\n     * Returns the radio group\n     *\n     * @return {qx.ui.form.RadioGroup} The radio manager\n     */\n    getGroup : function() {\n      return this.getChildControl(\"legend\").getGroup();\n    },\n\n\n    /**\n     * Sets the radio group to use\n     *\n     * @param value {qx.ui.form.RadioGroup} The radio group to use\n     */\n    setGroup : function(value)\n    {\n      if (value != null) {\n        value.add(this);\n      }\n      return;\n    },\n\n\n    /**\n     * The value of the groupbox\n     *\n     * @return {Boolean} <code>true</code> when enabled.\n     */\n    getValue : function() {\n      return this.getChildControl(\"legend\").getValue();\n    },\n\n\n    /**\n     * Configures the value of the groupbox.\n     *\n     * @param value {Boolean} <code>true</code> when enabled.\n     */\n    setValue : function(value) {\n      this.getChildControl(\"legend\").setValue(value);\n    },\n\n\n    /**\n     * Resets the value.\n     */\n    resetValue: function() {\n      this.getChildControl(\"legend\").resetValue();\n    },\n\n\n    /**\n     * Returns the configured legend. Only used for RadioManager compatibility.\n     *\n     * @return {String} The configured legend.\n     */\n    getLabel : function() {\n      return this.getChildControl(\"legend\").getLabel();\n    }\n  }\n});\n"
  ]
}