{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "groupbox",
    "GroupBox",
    "implement",
    "form",
    "IRadioItem",
    "IExecutable",
    "IBooleanForm",
    "IModel",
    "include",
    "MModelProperty",
    "properties",
    "appearance",
    "refine",
    "init",
    "events",
    "changeValue",
    "execute",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "RadioButton",
    "setAllowGrowX",
    "setValue",
    "addListener",
    "_onRadioChangeValue",
    "_repositionFrame",
    "_onExecute",
    "_add",
    "left",
    "right",
    "_applyEnabled",
    "value",
    "old",
    "getChildrenContainer",
    "setEnabled",
    "getValue",
    "e",
    "fireEvent",
    "checked",
    "getData",
    "fireDataEvent",
    "getOldData",
    "getChildControl",
    "setCommand",
    "command",
    "getCommand",
    "getGroup",
    "setGroup",
    "add",
    "resetValue",
    "getLabel",
    "RadioGroupBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/groupbox/RadioGroupBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * A group box, which has a radio button near the legend.\n *\n * @childControl legend {qx.ui.form.RadioButton} radio button to en-/disable the groupbox content\n */\nqx.Class.define(\"qx.ui.groupbox.RadioGroupBox\", {\n  extend: qx.ui.groupbox.GroupBox,\n  implement: [\n    qx.ui.form.IRadioItem,\n    qx.ui.form.IExecutable,\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IModel\n  ],\n\n  include: [qx.ui.form.MModelProperty],\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"radio-groupbox\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired when the included radiobutton changed its value */\n    changeValue: \"qx.event.type.Data\",\n\n    /** Fired if the {@link #execute} method is invoked.*/\n    execute: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"legend\":\n          control = new qx.ui.form.RadioButton();\n          control.setAllowGrowX(true);\n          control.setValue(true);\n          control.addListener(\"changeValue\", this._onRadioChangeValue, this);\n          control.addListener(\"resize\", this._repositionFrame, this);\n          control.addListener(\"execute\", this._onExecute, this);\n\n          this._add(control, { left: 0, right: 0 });\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      this.getChildrenContainer().setEnabled(value && this.getValue());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for execute event of checkbox.\n     *\n     * @param e {qx.event.type.Event} Event which holds the current status\n     */\n    _onExecute(e) {\n      this.fireEvent(\"execute\");\n    },\n\n    /**\n     * Event listener for changeValue event of radio button\n     *\n     * @param e {qx.event.type.Data} Data event which holds the current status\n     */\n    _onRadioChangeValue(e) {\n      var checked = e.getData() ? true : false;\n\n      // Disable content\n      this.getChildrenContainer().setEnabled(checked);\n\n      // Fire event to the outside\n      this.fireDataEvent(\"changeValue\", checked, e.getOldData());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REDIRECTIONS TO LEGEND (FOR RADIO GROUP SUPPORT)\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    execute() {\n      this.getChildControl(\"legend\").execute();\n    },\n\n    // interface implementation\n    setCommand(command) {\n      this.getChildControl(\"legend\").setCommand(command);\n    },\n\n    // interface implementation\n    getCommand() {\n      return this.getChildControl(\"legend\").getCommand();\n    },\n\n    /**\n     * Returns the radio group\n     *\n     * @return {qx.ui.form.RadioGroup} The radio manager\n     */\n    getGroup() {\n      return this.getChildControl(\"legend\").getGroup();\n    },\n\n    /**\n     * Sets the radio group to use\n     *\n     * @param value {qx.ui.form.RadioGroup} The radio group to use\n     */\n    setGroup(value) {\n      if (value != null) {\n        value.add(this);\n      }\n      return;\n    },\n\n    /**\n     * The value of the groupbox\n     *\n     * @return {Boolean} <code>true</code> when enabled.\n     */\n    getValue() {\n      return this.getChildControl(\"legend\").getValue();\n    },\n\n    /**\n     * Configures the value of the groupbox.\n     *\n     * @param value {Boolean} <code>true</code> when enabled.\n     */\n    setValue(value) {\n      this.getChildControl(\"legend\").setValue(value);\n    },\n\n    /**\n     * Resets the value.\n     */\n    resetValue() {\n      this.getChildControl(\"legend\").resetValue();\n    },\n\n    /**\n     * Returns the configured legend. Only used for RadioManager compatibility.\n     *\n     * @return {String} The configured legend.\n     */\n    getLabel() {\n      return this.getChildControl(\"legend\").getLabel();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAAgD;IAC9CC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,QAAN,CAAeC,QADuB;IAE9CC,SAAS,EAAE,CACTV,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWC,UADF,EAETZ,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWE,WAFF,EAGTb,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWG,YAHF,EAITd,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWI,MAJF,CAFmC;IAS9CC,OAAO,EAAE,CAAChB,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWM,cAAZ,CATqC;;IAW9C;AACF;AACA;AACA;AACA;IAEEC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IADE;QAEVC,IAAI,EAAE;MAFI;IAFF,CAjBkC;;IAyB9C;AACF;AACA;AACA;AACA;IAEEC,MAAM,EAAE;MACN;MACAC,WAAW,EAAE,oBAFP;;MAIN;MACAC,OAAO,EAAE;IALH,CA/BsC;;IAuC9C;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MAEI;MACAC,uBARO,mCAQiBC,EARjB,EAQqBC,IARrB,EAQ2B;QAChC,IAAIC,OAAJ;;QAEA,QAAQF,EAAR;UACE,KAAK,QAAL;YACEE,OAAO,GAAG,IAAI7B,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWmB,WAAf,EAAV;YACAD,OAAO,CAACE,aAAR,CAAsB,IAAtB;YACAF,OAAO,CAACG,QAAR,CAAiB,IAAjB;YACAH,OAAO,CAACI,WAAR,CAAoB,aAApB,EAAmC,KAAKC,mBAAxC,EAA6D,IAA7D;YACAL,OAAO,CAACI,WAAR,CAAoB,QAApB,EAA8B,KAAKE,gBAAnC,EAAqD,IAArD;YACAN,OAAO,CAACI,WAAR,CAAoB,SAApB,EAA+B,KAAKG,UAApC,EAAgD,IAAhD;;YAEA,KAAKC,IAAL,CAAUR,OAAV,EAAmB;cAAES,IAAI,EAAE,CAAR;cAAWC,KAAK,EAAE;YAAlB,CAAnB;;QATJ;;QAYA,OAAOV,OAAO,yFAAkCF,EAAlC,CAAd;MACD,CAxBM;MA0BP;MACAa,aA3BO,yBA2BOC,KA3BP,EA2BcC,GA3Bd,EA2BmB;QACxB,2EAAoBD,KAApB,EAA2BC,GAA3B;;QAEA,KAAKC,oBAAL,GAA4BC,UAA5B,CAAuCH,KAAK,IAAI,KAAKI,QAAL,EAAhD;MACD,CA/BM;;MAiCP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;MACIT,UA5CO,sBA4CIU,CA5CJ,EA4CO;QACZ,KAAKC,SAAL,CAAe,SAAf;MACD,CA9CM;;MAgDP;AACJ;AACA;AACA;AACA;MACIb,mBArDO,+BAqDaY,CArDb,EAqDgB;QACrB,IAAIE,OAAO,GAAGF,CAAC,CAACG,OAAF,KAAc,IAAd,GAAqB,KAAnC,CADqB,CAGrB;;QACA,KAAKN,oBAAL,GAA4BC,UAA5B,CAAuCI,OAAvC,EAJqB,CAMrB;;QACA,KAAKE,aAAL,CAAmB,aAAnB,EAAkCF,OAAlC,EAA2CF,CAAC,CAACK,UAAF,EAA3C;MACD,CA7DM;;MA+DP;AACJ;AACA;AACA;AACA;MAEI;MACA3B,OAtEO,qBAsEG;QACR,KAAK4B,eAAL,CAAqB,QAArB,EAA+B5B,OAA/B;MACD,CAxEM;MA0EP;MACA6B,UA3EO,sBA2EIC,OA3EJ,EA2Ea;QAClB,KAAKF,eAAL,CAAqB,QAArB,EAA+BC,UAA/B,CAA0CC,OAA1C;MACD,CA7EM;MA+EP;MACAC,UAhFO,wBAgFM;QACX,OAAO,KAAKH,eAAL,CAAqB,QAArB,EAA+BG,UAA/B,EAAP;MACD,CAlFM;;MAoFP;AACJ;AACA;AACA;AACA;MACIC,QAzFO,sBAyFI;QACT,OAAO,KAAKJ,eAAL,CAAqB,QAArB,EAA+BI,QAA/B,EAAP;MACD,CA3FM;;MA6FP;AACJ;AACA;AACA;AACA;MACIC,QAlGO,oBAkGEhB,KAlGF,EAkGS;QACd,IAAIA,KAAK,IAAI,IAAb,EAAmB;UACjBA,KAAK,CAACiB,GAAN,CAAU,IAAV;QACD;;QACD;MACD,CAvGM;;MAyGP;AACJ;AACA;AACA;AACA;MACIb,QA9GO,sBA8GI;QACT,OAAO,KAAKO,eAAL,CAAqB,QAArB,EAA+BP,QAA/B,EAAP;MACD,CAhHM;;MAkHP;AACJ;AACA;AACA;AACA;MACIb,QAvHO,oBAuHES,KAvHF,EAuHS;QACd,KAAKW,eAAL,CAAqB,QAArB,EAA+BpB,QAA/B,CAAwCS,KAAxC;MACD,CAzHM;;MA2HP;AACJ;AACA;MACIkB,UA9HO,wBA8HM;QACX,KAAKP,eAAL,CAAqB,QAArB,EAA+BO,UAA/B;MACD,CAhIM;;MAkIP;AACJ;AACA;AACA;AACA;MACIC,QAvIO,sBAuII;QACT,OAAO,KAAKR,eAAL,CAAqB,QAArB,EAA+BQ,QAA/B,EAAP;MACD;IAzIM;EA7CqC,CAAhD;EAzBA5D,EAAE,CAACO,EAAH,CAAMC,QAAN,CAAeqD,aAAf,CAA6B1D,aAA7B,GAA6CA,aAA7C"
}