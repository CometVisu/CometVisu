{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "MenuButton",
    "properties",
    "appearance",
    "refine",
    "init",
    "show",
    "members",
    "getMenuBar",
    "parent",
    "toolbar",
    "ToolBar",
    "getLayoutParent",
    "open",
    "selectFirst",
    "menubar",
    "Button",
    "superclass",
    "prototype",
    "call",
    "_setAllowMenuOpenHover",
    "_onMenuChange",
    "e",
    "menu",
    "getMenu",
    "isVisible",
    "addState",
    "setOpenMenu",
    "removeState",
    "getOpenMenu",
    "resetOpenMenu",
    "_onPointerUp",
    "hasState",
    "_onPointerOver",
    "getPointerType",
    "_isAllowMenuOpenHover",
    "Manager",
    "getInstance",
    "hideAll",
    "isEnabled"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/menubar/Button.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A menubar button\r\n */\r\nqx.Class.define(\"qx.ui.menubar.Button\", {\r\n  extend: qx.ui.form.MenuButton,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    appearance: {\r\n      refine: true,\r\n      init: \"menubar-button\"\r\n    },\r\n\r\n    show: {\r\n      refine: true,\r\n      init: \"inherit\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Inspects the parent chain to find the MenuBar\r\n     *\r\n     * @return {qx.ui.menubar.MenuBar} MenuBar instance or <code>null</code>.\r\n     */\r\n    getMenuBar() {\r\n      var parent = this;\r\n      while (parent) {\r\n        /* this method is also used by toolbar.MenuButton, so we need to check\r\n           for a ToolBar instance. */\r\n        if (parent instanceof qx.ui.toolbar.ToolBar) {\r\n          return parent;\r\n        }\r\n\r\n        parent = parent.getLayoutParent();\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    // overridden\r\n    open(selectFirst) {\r\n      super.open(selectFirst);\r\n\r\n      var menubar = this.getMenuBar();\r\n      if (menubar) {\r\n        menubar._setAllowMenuOpenHover(true);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Listener for visibility property changes of the attached menu\r\n     *\r\n     * @param e {qx.event.type.Data} Property change event\r\n     */\r\n    _onMenuChange(e) {\r\n      var menu = this.getMenu();\r\n      var menubar = this.getMenuBar();\r\n\r\n      if (menu.isVisible()) {\r\n        this.addState(\"pressed\");\r\n\r\n        // Sync with open menu property\r\n        if (menubar) {\r\n          menubar.setOpenMenu(menu);\r\n        }\r\n      } else {\r\n        this.removeState(\"pressed\");\r\n\r\n        // Sync with open menu property\r\n        if (menubar && menubar.getOpenMenu() == menu) {\r\n          menubar.resetOpenMenu();\r\n          menubar._setAllowMenuOpenHover(false);\r\n        }\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _onPointerUp(e) {\r\n      super._onPointerUp(e);\r\n\r\n      // Set state 'pressed' to visualize that the menu is open.\r\n      var menu = this.getMenu();\r\n      if (menu && menu.isVisible() && !this.hasState(\"pressed\")) {\r\n        this.addState(\"pressed\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for pointerover event\r\n     *\r\n     * @param e {qx.event.type.Pointer} pointerover event object\r\n     */\r\n    _onPointerOver(e) {\r\n      // Add hovered state\r\n      this.addState(\"hovered\");\r\n\r\n      // Open submenu\r\n      if (this.getMenu() && e.getPointerType() == \"mouse\") {\r\n        var menubar = this.getMenuBar();\r\n\r\n        if (menubar && menubar._isAllowMenuOpenHover()) {\r\n          // Hide all open menus\r\n          qx.ui.menu.Manager.getInstance().hideAll();\r\n\r\n          // Set it again, because hideAll remove it.\r\n          menubar._setAllowMenuOpenHover(true);\r\n\r\n          // Then show the attached menu\r\n          if (this.isEnabled()) {\r\n            this.open();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}