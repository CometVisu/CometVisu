{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "selection",
    "Abstract",
    "construct",
    "pane",
    "selectionDelegate",
    "_pane",
    "_delegate",
    "members",
    "_autoScrollIntoView",
    "_isSelectable",
    "item",
    "isItemSelectable",
    "_styleSelectable",
    "type",
    "enabled",
    "styleSelectable",
    "attachPointerEvents",
    "paneElement",
    "getContentElement",
    "addListener",
    "handlePointerDown",
    "handleTap",
    "handlePointerOver",
    "handlePointerMove",
    "handleLoseCapture",
    "detatchPointerEvents",
    "detachPointerEvents",
    "removeListener",
    "attachKeyEvents",
    "target",
    "handleKeyPress",
    "detachKeyEvents",
    "attachListEvents",
    "list",
    "handleAddItem",
    "handleRemoveItem",
    "detachListEvents",
    "_capture",
    "capture",
    "_releaseCapture",
    "releaseCapture",
    "_getScroll",
    "left",
    "getScrollX",
    "top",
    "getScrollY",
    "_scrollBy",
    "xoff",
    "yoff",
    "setScrollX",
    "setScrollY",
    "_getLocation",
    "elem",
    "getDomElement",
    "bom",
    "element",
    "Location",
    "get",
    "_getDimension",
    "getInnerSize",
    "destruct",
    "virtual"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Abstract base class for selection manager, which manage selectable items\n * rendered in a virtual {@link qx.ui.virtual.core.Pane}.\n */\nqx.Class.define(\"qx.ui.virtual.selection.Abstract\", {\n  extend: qx.ui.core.selection.Abstract,\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  /**\n   * @param pane {qx.ui.virtual.core.Pane} The virtual pane on which the\n   *    selectable item are rendered\n   * @param selectionDelegate {qx.ui.virtual.selection.ISelectionDelegate?null} An optional delegate,\n   *    which can be used to customize the behavior of the selection manager\n   *    without sub classing it.\n   */\n  construct(pane, selectionDelegate) {\n    super();\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertInstance(pane, qx.ui.virtual.core.Pane);\n    }\n\n    this._pane = pane;\n    this._delegate = selectionDelegate || {};\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // Determines if automatically scrolling of selected item into view is active.\n    _autoScrollIntoView: true,\n\n    /*\n    ---------------------------------------------------------------------------\n      DELEGATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _isSelectable(item) {\n      return this._delegate.isItemSelectable\n        ? this._delegate.isItemSelectable(item)\n        : true;\n    },\n\n    // overridden\n    _styleSelectable(item, type, enabled) {\n      if (this._delegate.styleSelectable) {\n        this._delegate.styleSelectable(item, type, enabled);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Attach pointer events to the managed pane.\n     */\n    attachPointerEvents() {\n      var paneElement = this._pane.getContentElement();\n      paneElement.addListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.addListener(\"tap\", this.handleTap, this);\n      paneElement.addListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.addListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.addListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n    /**\n     * Detach pointer events from the managed pane.\n     *\n     * @deprecated {6.0} misspelled, please use detachPointerEvents instead!\n     */\n    detatchPointerEvents() {\n      this.detachPointerEvents();\n    },\n\n    /**\n     * Detach pointer events from the managed pane.\n     */\n    detachPointerEvents() {\n      var paneElement = this._pane.getContentElement();\n      paneElement.removeListener(\"pointerdown\", this.handlePointerDown, this);\n      paneElement.removeListener(\"tap\", this.handleTap, this);\n      paneElement.removeListener(\"pointerover\", this.handlePointerOver, this);\n      paneElement.removeListener(\"pointermove\", this.handlePointerMove, this);\n      paneElement.removeListener(\"losecapture\", this.handleLoseCapture, this);\n    },\n\n    /**\n     * Attach key events to manipulate the selection using the keyboard. The\n     * event target doesn't need to be the pane itself. It can be an widget,\n     * which received key events. Usually the key event target is the\n     * {@link qx.ui.virtual.core.Scroller}.\n     *\n     * @param target {qx.core.Object} the key event target.\n     *\n     */\n    attachKeyEvents(target) {\n      target.addListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n    /**\n     * Detach key events.\n     *\n     * @param target {qx.core.Object} the key event target.\n     */\n    detachKeyEvents(target) {\n      target.removeListener(\"keypress\", this.handleKeyPress, this);\n    },\n\n    /**\n     * Attach list events. The selection mode <code>one</code> need to know,\n     * when selectable items are added or removed. If this mode is used the\n     * <code>list</code> parameter must fire <code>addItem</code> and\n     * <code>removeItem</code> events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    attachListEvents(list) {\n      list.addListener(\"addItem\", this.handleAddItem, this);\n      list.addListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n    /**\n     * Detach list events.\n     *\n     * @param list {qx.core.Object} the event target for <code>addItem</code> and\n     *    <code>removeItem</code> events\n     */\n    detachListEvents(list) {\n      list.removeListener(\"addItem\", this.handleAddItem, this);\n      list.removeListener(\"removeItem\", this.handleRemoveItem, this);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _capture() {\n      this._pane.capture();\n    },\n\n    // overridden\n    _releaseCapture() {\n      this._pane.releaseCapture();\n    },\n\n    // overridden\n    _getScroll() {\n      return {\n        left: this._pane.getScrollX(),\n        top: this._pane.getScrollY()\n      };\n    },\n\n    // overridden\n    _scrollBy(xoff, yoff) {\n      this._pane.setScrollX(this._pane.getScrollX() + xoff);\n      this._pane.setScrollY(this._pane.getScrollY() + yoff);\n    },\n\n    // overridden\n    _getLocation() {\n      var elem = this._pane.getContentElement().getDomElement();\n      return elem ? qx.bom.element.Location.get(elem) : null;\n    },\n\n    // overridden\n    _getDimension() {\n      return this._pane.getInnerSize();\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this._pane = this._delegate = null;\n  }\n});\n"
  ],
  "mappings": "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"
}