{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "selection",
    "Row",
    "members",
    "_getItemCount",
    "_pane",
    "getColumnConfig",
    "getItemCount",
    "_getSelectableFromPointerEvent",
    "event",
    "cell",
    "getCellAtPosition",
    "getDocumentLeft",
    "getDocumentTop",
    "_isSelectable",
    "column",
    "_getRelatedSelectable",
    "item",
    "relation",
    "startIndex",
    "endIndex",
    "increment",
    "i",
    "_scrollItemIntoView",
    "_autoScrollIntoView",
    "scrollColumnIntoView",
    "_getSelectableLocationX",
    "columnConfig",
    "itemLeft",
    "getItemPosition",
    "itemRight",
    "getItemSize",
    "left",
    "right",
    "_getSelectableLocationY",
    "top",
    "bottom",
    "getRowConfig",
    "getTotalSize",
    "Column"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/Column.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Column selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.Column\", {\n  extend: qx.ui.virtual.selection.Row,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount() {\n      return this._pane.getColumnConfig().getItemCount();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent(event) {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell.column) ? cell.column : null;\n    },\n\n    // overridden\n    _getRelatedSelectable(item, relation) {\n      if (relation == \"left\") {\n        var startIndex = item - 1;\n        var endIndex = 0;\n        var increment = -1;\n      } else if (relation == \"right\") {\n        var startIndex = item + 1;\n        var endIndex = this._getItemCount() - 1;\n        var increment = 1;\n      } else {\n        return null;\n      }\n\n      for (var i = startIndex; i !== endIndex + increment; i += increment) {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n    // overridden\n    _scrollItemIntoView(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollColumnIntoView(item);\n      }\n    },\n\n    // overridden\n    _getSelectableLocationX(item) {\n      var columnConfig = this._pane.getColumnConfig();\n\n      var itemLeft = columnConfig.getItemPosition(item);\n      var itemRight = itemLeft + columnConfig.getItemSize(item) - 1;\n\n      return {\n        left: itemLeft,\n        right: itemRight\n      };\n    },\n\n    // overridden\n    _getSelectableLocationY(item) {\n      return {\n        top: 0,\n        bottom: this._pane.getRowConfig().getTotalSize() - 1\n      };\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}