{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "selection",
    "Row",
    "members",
    "_getItemCount",
    "_pane",
    "getColumnConfig",
    "getItemCount",
    "_getSelectableFromPointerEvent",
    "event",
    "cell",
    "getCellAtPosition",
    "getDocumentLeft",
    "getDocumentTop",
    "_isSelectable",
    "column",
    "_getRelatedSelectable",
    "item",
    "relation",
    "startIndex",
    "endIndex",
    "increment",
    "i",
    "_scrollItemIntoView",
    "_autoScrollIntoView",
    "scrollColumnIntoView",
    "_getSelectableLocationX",
    "columnConfig",
    "itemLeft",
    "getItemPosition",
    "itemRight",
    "getItemSize",
    "left",
    "right",
    "_getSelectableLocationY",
    "top",
    "bottom",
    "getRowConfig",
    "getTotalSize",
    "Column"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/Column.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Column selection manager\n */\nqx.Class.define(\"qx.ui.virtual.selection.Column\", {\n  extend: qx.ui.virtual.selection.Row,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Returns the number of all items in the pane. This number may contain\n     * unselectable items as well.\n     *\n     * @return {Integer} number of items\n     */\n    _getItemCount() {\n      return this._pane.getColumnConfig().getItemCount();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT ABSTRACT METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getSelectableFromPointerEvent(event) {\n      var cell = this._pane.getCellAtPosition(\n        event.getDocumentLeft(),\n        event.getDocumentTop()\n      );\n\n      if (!cell) {\n        return null;\n      }\n\n      return this._isSelectable(cell.column) ? cell.column : null;\n    },\n\n    // overridden\n    _getRelatedSelectable(item, relation) {\n      if (relation == \"left\") {\n        var startIndex = item - 1;\n        var endIndex = 0;\n        var increment = -1;\n      } else if (relation == \"right\") {\n        var startIndex = item + 1;\n        var endIndex = this._getItemCount() - 1;\n        var increment = 1;\n      } else {\n        return null;\n      }\n\n      for (var i = startIndex; i !== endIndex + increment; i += increment) {\n        if (this._isSelectable(i)) {\n          return i;\n        }\n      }\n      return null;\n    },\n\n    // overridden\n    _scrollItemIntoView(item) {\n      if (this._autoScrollIntoView) {\n        this._pane.scrollColumnIntoView(item);\n      }\n    },\n\n    // overridden\n    _getSelectableLocationX(item) {\n      var columnConfig = this._pane.getColumnConfig();\n\n      var itemLeft = columnConfig.getItemPosition(item);\n      var itemRight = itemLeft + columnConfig.getItemSize(item) - 1;\n\n      return {\n        left: itemLeft,\n        right: itemRight\n      };\n    },\n\n    // overridden\n    _getSelectableLocationY(item) {\n      return {\n        top: 0,\n        bottom: this._pane.getRowConfig().getTotalSize() - 1\n      };\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}