{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "_initSelectionManager",
    "__selection",
    "data",
    "Array",
    "addListener",
    "_onChangeSelection",
    "_applySelection",
    "properties",
    "selectionMode",
    "check",
    "init",
    "apply",
    "dragSelection",
    "quickSelection",
    "events",
    "changeSelection",
    "changeValue",
    "members",
    "_manager",
    "__ignoreChangeSelection",
    "__ignoreManagerChangeSelection",
    "setValue",
    "selection",
    "resetSelection",
    "setSelection",
    "getValue",
    "getSelection",
    "resetValue",
    "self",
    "selectionDelegate",
    "isItemSelectable",
    "row",
    "_provider",
    "isSelectable",
    "styleSelectable",
    "type",
    "wasAdded",
    "styleSelectabled",
    "styleUnselectabled",
    "ui",
    "virtual",
    "Row",
    "getPane",
    "attachPointerEvents",
    "attachKeyEvents",
    "_onManagerChangeSelection",
    "setAutoScrollIntoView",
    "value",
    "_autoScrollIntoView",
    "getAutoScrollIntoView",
    "_updateSelection",
    "replace",
    "removeAll",
    "initSelection",
    "warn",
    "classname",
    "old",
    "_applySelectionMode",
    "setMode",
    "_applyDragSelection",
    "setDrag",
    "_applyQuickSelection",
    "setQuick",
    "e",
    "newSelection",
    "i",
    "getLength",
    "item",
    "getItem",
    "selectables",
    "_getSelectables",
    "index",
    "indexOf",
    "_reverseLookup",
    "push",
    "_beforeApplySelection",
    "lang",
    "Type",
    "isFunction",
    "equals",
    "replaceSelection",
    "ex",
    "selectItem",
    "length",
    "__synchronizeSelection",
    "_afterApplySelection",
    "fireDataEvent",
    "getData",
    "getOldData",
    "__P_495_3",
    "__isSelectionEquals",
    "managerSelection",
    "_getDataFromRow",
    "__replaceSelection",
    "__P_495_5",
    "args",
    "concat",
    "temp",
    "splice",
    "dispose",
    "__P_495_4",
    "_applyDefaultSelection",
    "destruct",
    "MModel"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/selection/MModel.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Hagendorn (chris_schmidt)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Implements the different selection modes single, multi, additive and one\r\n * selection with there drag and quick selection.\r\n *\r\n * Example how to use selection:\r\n * <pre class=\"javascript\">\r\n * var rawData = [];\r\n * for (var i = 0; i < 2500; i++) {\r\n *  rawData[i] = \"Item No \" + i;\r\n * }\r\n *\r\n * var model = qx.data.marshal.Json.createModel(rawData);\r\n * var list = new qx.ui.list.List(model);\r\n *\r\n * // Pre-Select \"Item No 20\"\r\n * list.getSelection().push(model.getItem(20));\r\n *\r\n * // log change selection\r\n * list.getSelection().addListener(\"change\", function(e) {\r\n *   this.debug(\"Selection: \" + list.getSelection().getItem(0));\r\n * }, this);\r\n * </pre>\r\n *\r\n * @internal\r\n */\r\nqx.Mixin.define(\"qx.ui.virtual.selection.MModel\", {\r\n  construct() {\r\n    this._initSelectionManager();\r\n    this.__selection = new qx.data.Array();\r\n    this.__selection.addListener(\"change\", this._onChangeSelection, this);\r\n    this._applySelection(this.__selection, null);\r\n  },\r\n\r\n  properties: {\r\n    /** Current selected items */\r\n    /* psuedo property - implemented manually in code below\r\n    selection :\r\n    {\r\n      check : \"qx.data.Array\",\r\n      event : \"changeSelection\",\r\n      apply : \"_applySelection\",\r\n      nullable : false,\r\n      deferredInit : true\r\n    },\r\n    */\r\n\r\n    /**\r\n     * The selection mode to use.\r\n     *\r\n     * For further details please have a look at:\r\n     * {@link qx.ui.core.selection.Abstract#mode}\r\n     */\r\n    selectionMode: {\r\n      check: [\"single\", \"multi\", \"additive\", \"one\"],\r\n      init: \"single\",\r\n      apply: \"_applySelectionMode\"\r\n    },\r\n\r\n    /**\r\n     * Enable drag selection (multi selection of items through\r\n     * dragging the pointer in pressed states).\r\n     *\r\n     * Only possible for the selection modes <code>multi</code> and <code>additive</code>\r\n     */\r\n    dragSelection: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyDragSelection\"\r\n    },\r\n\r\n    /**\r\n     * Enable quick selection mode, where no tap is needed to change the selection.\r\n     *\r\n     * Only possible for the modes <code>single</code> and <code>one</code>.\r\n     */\r\n    quickSelection: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyQuickSelection\"\r\n    }\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * This event is fired as soon as the content of the selection property changes, but\r\n     * this is not equal to the change of the selection of the widget. If the selection\r\n     * of the widget changes, the content of the array stored in the selection property\r\n     * changes. This means you have to listen to the change event of the selection array\r\n     * to get an event as soon as the user changes the selected item.\r\n     * <pre class=\"javascript\">obj.getSelection().addListener(\"change\", listener, this);</pre>\r\n     */\r\n    changeSelection: \"qx.event.type.Data\",\r\n\r\n    /** Fires after the value was modified */\r\n    changeValue: \"qx.event.type.Data\"\r\n  },\r\n\r\n  members: {\r\n    /** @type {qx.ui.virtual.selection.Row} selection manager */\r\n    _manager: null,\r\n\r\n    /** @type {Boolean} flag to ignore the selection change from {@link #selection} */\r\n    __ignoreChangeSelection: false,\r\n\r\n    /** @type {Boolean} flag to ignore the selection change from <code>_manager</code> */\r\n    __ignoreManagerChangeSelection: false,\r\n\r\n    __selection: null,\r\n\r\n    /**\r\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\r\n     *\r\n     * @param selection {qx.data.IListData|null} List data to select as value.\r\n     * @return {null} The status of this operation.\r\n     */\r\n    setValue(selection) {\r\n      if (null === selection) {\r\n        this.resetSelection();\r\n      } else {\r\n        this.setSelection(selection);\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\r\n     *\r\n     * @return {qx.data.IListData} The current selection.\r\n     */\r\n    getValue() {\r\n      return this.getSelection();\r\n    },\r\n\r\n    /**\r\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\r\n     */\r\n    resetValue() {\r\n      this.resetSelection();\r\n    },\r\n\r\n    /**\r\n     * Initialize the selection manager with his delegate.\r\n     */\r\n    _initSelectionManager() {\r\n      var self = this;\r\n      var selectionDelegate = {\r\n        isItemSelectable(row) {\r\n          return self._provider.isSelectable(row);\r\n        },\r\n\r\n        styleSelectable(row, type, wasAdded) {\r\n          if (type != \"selected\") {\r\n            return;\r\n          }\r\n\r\n          if (wasAdded) {\r\n            self._provider.styleSelectabled(row);\r\n          } else {\r\n            self._provider.styleUnselectabled(row);\r\n          }\r\n        }\r\n      };\r\n\r\n      this._manager = new qx.ui.virtual.selection.Row(\r\n        this.getPane(),\r\n        selectionDelegate\r\n      );\r\n\r\n      this._manager.attachPointerEvents(this.getPane());\r\n      this._manager.attachKeyEvents(this);\r\n      this._manager.addListener(\r\n        \"changeSelection\",\r\n        this._onManagerChangeSelection,\r\n        this\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Determines, if automatically scrolling of selected item is active.\r\n     * Set <code>false</code> to suspend auto scrolling.\r\n     *\r\n     * @param value {Boolean} Set <code>false</code> to suspend auto scrolling.\r\n     */\r\n    setAutoScrollIntoView(value) {\r\n      this._manager._autoScrollIntoView = value;\r\n    },\r\n\r\n    /**\r\n     * Returns true, if automatically scrolling of selected item is active.\r\n     *\r\n     * @return {Boolean} Returns <code>false</code> if auto scrolling is suspended.\r\n     */\r\n    getAutoScrollIntoView() {\r\n      return this._manager._autoScrollIntoView;\r\n    },\r\n\r\n    /**\r\n     * Method to update the selection, this method can be used when the model has\r\n     * changes.\r\n     */\r\n    _updateSelection() {\r\n      if (this._manager == null) {\r\n        return;\r\n      }\r\n\r\n      this._onChangeSelection();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Setter for selection property; takes the selection on, and does not change the\r\n     * array instance in `this.selection`\r\n     *\r\n     * @param value {qx.data.Array} the new selection\r\n     */\r\n    setSelection(value) {\r\n      if (value) {\r\n        this.__selection.replace(value);\r\n      } else {\r\n        this.__selection.removeAll();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Getter for selection property\r\n     *\r\n     * @return {qx.data.Array}\r\n     */\r\n    getSelection() {\r\n      return this.__selection;\r\n    },\r\n\r\n    /**\r\n     * Reset for selection property\r\n     */\r\n    resetSelection() {\r\n      this.__selection.removeAll();\r\n    },\r\n\r\n    /**\r\n     * Init for selection property; takes the selection on, and does not change the\r\n     * array instance in `this.selection`\r\n     *\r\n     * @param value {qx.data.Array} the new selection\r\n     */\r\n    initSelection(value) {\r\n      this.warn(\r\n        \"Using initSelection on \" +\r\n          this.classname +\r\n          \" is probably not what you intended - the selection instance does not change\"\r\n      );\r\n\r\n      this.setSelection(value);\r\n    },\r\n\r\n    /**\r\n     * Apply method for selection property\r\n     *\r\n     * @param value {qx.data.Array} new value\r\n     * @param old {qx.data.Array} old value\r\n     */\r\n    _applySelection(value, old) {\r\n      this._onChangeSelection();\r\n    },\r\n\r\n    // apply method\r\n    _applySelectionMode(value, old) {\r\n      this._manager.setMode(value);\r\n    },\r\n\r\n    // apply method\r\n    _applyDragSelection(value, old) {\r\n      this._manager.setDrag(value);\r\n    },\r\n\r\n    // apply method\r\n    _applyQuickSelection(value, old) {\r\n      this._manager.setQuick(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      SELECTION HANDLERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event handler for the internal selection change {@link #selection}.\r\n     *\r\n     * @param e {qx.event.type.Data} the change event.\r\n     */\r\n    _onChangeSelection(e) {\r\n      if (this.__ignoreManagerChangeSelection == true) {\r\n        return;\r\n      }\r\n\r\n      this.__ignoreChangeSelection = true;\r\n      var selection = this.getSelection();\r\n\r\n      var newSelection = [];\r\n      for (var i = 0; i < selection.getLength(); i++) {\r\n        var item = selection.getItem(i);\r\n        var selectables = this._getSelectables();\r\n        var index = -1;\r\n\r\n        if (selectables != null) {\r\n          index = selectables.indexOf(item);\r\n        }\r\n\r\n        var row = this._reverseLookup(index);\r\n\r\n        if (row >= 0) {\r\n          newSelection.push(row);\r\n        }\r\n      }\r\n\r\n      if (\r\n        this._beforeApplySelection != null &&\r\n        qx.lang.Type.isFunction(this._beforeApplySelection)\r\n      ) {\r\n        this._beforeApplySelection(newSelection);\r\n      }\r\n\r\n      try {\r\n        if (!qx.lang.Array.equals(newSelection, this._manager.getSelection())) {\r\n          this._manager.replaceSelection(newSelection);\r\n        }\r\n      } catch (ex) {\r\n        this._manager.selectItem(newSelection[newSelection.length - 1]);\r\n      }\r\n      this.__synchronizeSelection();\r\n\r\n      if (\r\n        this._afterApplySelection != null &&\r\n        qx.lang.Type.isFunction(this._afterApplySelection)\r\n      ) {\r\n        this._afterApplySelection();\r\n      }\r\n\r\n      this.__ignoreChangeSelection = false;\r\n    },\r\n\r\n    /**\r\n     * Event handler for the selection change from the <code>_manager</code>.\r\n     *\r\n     * @param e {qx.event.type.Data} the change event.\r\n     */\r\n    _onManagerChangeSelection(e) {\r\n      if (this.__ignoreChangeSelection == true) {\r\n        return;\r\n      }\r\n\r\n      this.__ignoreManagerChangeSelection = true;\r\n\r\n      this.__synchronizeSelection();\r\n\r\n      this.__ignoreManagerChangeSelection = false;\r\n\r\n      this.fireDataEvent(\"changeValue\", e.getData(), e.getOldData());\r\n    },\r\n\r\n    /**\r\n     * Synchronized the selection form the manager with the local one.\r\n     */\r\n    __synchronizeSelection() {\r\n      if (this.__isSelectionEquals()) {\r\n        return;\r\n      }\r\n\r\n      var managerSelection = this._manager.getSelection();\r\n      var newSelection = [];\r\n\r\n      for (var i = 0; i < managerSelection.length; i++) {\r\n        var item = this._getDataFromRow(managerSelection[i]);\r\n\r\n        if (item != null) {\r\n          newSelection.push(item);\r\n        }\r\n      }\r\n\r\n      this.__replaceSelection(newSelection);\r\n    },\r\n\r\n    /**\r\n     * Replace the current selection with the passed selection Array.\r\n     *\r\n     * @param newSelection {qx.data.Array} The new selection.\r\n     */\r\n    __replaceSelection(newSelection) {\r\n      var selection = this.getSelection();\r\n      if (newSelection.length > 0) {\r\n        var args = [0, selection.getLength()];\r\n        args = args.concat(newSelection);\r\n        // dispose data array returned by splice to avoid memory leak\r\n        var temp = selection.splice.apply(selection, args);\r\n        temp.dispose();\r\n      } else {\r\n        selection.removeAll();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks whether the local and the manager selection are equal.\r\n     *\r\n     * @return {Boolean} <code>true</code> if the selections are equal,\r\n     *   <code>false</code> otherwise.\r\n     */\r\n    __isSelectionEquals() {\r\n      var selection = this.getSelection();\r\n      var managerSelection = this._manager.getSelection();\r\n\r\n      if (selection.getLength() !== managerSelection.length) {\r\n        return false;\r\n      }\r\n\r\n      for (var i = 0; i < selection.getLength(); i++) {\r\n        var item = selection.getItem(i);\r\n        var selectables = this._getSelectables();\r\n        var index = -1;\r\n\r\n        if (selectables != null) {\r\n          index = selectables.indexOf(item);\r\n        }\r\n        var row = this._reverseLookup(index);\r\n\r\n        if (row !== managerSelection[i]) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * Helper Method to select default item.\r\n     */\r\n    _applyDefaultSelection() {\r\n      if (this._manager != null) {\r\n        this._manager._applyDefaultSelection();\r\n      }\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    this._manager.dispose();\r\n    this._manager = null;\r\n    if (this.__selection) {\r\n      this.__selection.dispose();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}