{
  "className": "qx.ui.virtual.cell.Cell",
  "packageName": "qx.ui.virtual.cell",
  "name": "Cell",
  "superClass": "qx.ui.virtual.cell.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 626
      },
      "end": {
        "line": 515,
        "column": 3,
        "index": 13306
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Themeable Cell renderer.\n This cell renderer can be styled by an appearance theme.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 28,
        "column": 2,
        "index": 713
      },
      "end": {
        "line": 45,
        "column": 3,
        "index": 1063
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1399
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1493
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The appearance ID. This ID is used to identify the appearance theme\n entry to use for this cell.</p>"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "apply": "_applyAppearance",
      "init": "cell",
      "check": "String",
      "defaultValue": "cell"
    },
    "backgroundColor": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1539
        },
        "end": {
          "line": 70,
          "column": 5,
          "index": 1667
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The cell's background color</p>"
          }
        ]
      },
      "name": "backgroundColor",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyBackgroundColor",
      "nullable": true,
      "allowNull": true,
      "check": "Color"
    },
    "textColor": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1707
        },
        "end": {
          "line": 78,
          "column": 5,
          "index": 1823
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The cell's text color</p>"
          }
        ]
      },
      "name": "textColor",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyTextColor",
      "nullable": true,
      "allowNull": true,
      "check": "Color"
    },
    "textAlign": {
      "location": {
        "start": {
          "line": 81,
          "column": 4,
          "index": 1882
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2029
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The text alignment of the cell's content</p>"
          }
        ]
      },
      "name": "textAlign",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyTextAlign",
      "nullable": true,
      "allowNull": true,
      "possibleValues": [
        "left",
        "center",
        "right",
        "justify"
      ]
    },
    "font": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2180
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2285
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The cell's font. The value is either a font name defined in the font\n theme or an instance of {@link qx.bom.Font}.</p>"
          }
        ]
      },
      "name": "font",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyFont",
      "nullable": true,
      "allowNull": true,
      "check": "Font"
    },
    "paddingTop": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2520
        },
        "end": {
          "line": 111,
          "column": 5,
          "index": 2630
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Padding of the widget (top)</p>"
          }
        ]
      },
      "name": "paddingTop",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyPadding",
      "init": 0,
      "check": "Integer",
      "defaultValue": 0
    },
    "paddingRight": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 2678
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 2797
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Padding of the widget (right)</p>"
          }
        ]
      },
      "name": "paddingRight",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyPadding",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "paddingBottom": {
      "location": {
        "start": {
          "line": 122,
          "column": 4,
          "index": 2846
        },
        "end": {
          "line": 127,
          "column": 5,
          "index": 2966
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Padding of the widget (bottom)</p>"
          }
        ]
      },
      "name": "paddingBottom",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyPadding",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "paddingLeft": {
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 3013
        },
        "end": {
          "line": 135,
          "column": 5,
          "index": 3131
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Padding of the widget (left)</p>"
          }
        ]
      },
      "name": "paddingLeft",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyPadding",
      "nullable": true,
      "allowNull": true,
      "check": "Integer"
    },
    "padding": {
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 3562
        },
        "end": {
          "line": 150,
          "column": 5,
          "index": 3702
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The 'padding' property is a shorthand property for setting 'paddingTop',\n 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n If four values are specified they apply to top, right, bottom and left\n respectively. If there is only one value, it applies to all sides, if\n there are two or three, the missing values are taken from the opposite\n side.</p>"
          }
        ]
      },
      "name": "padding",
      "propertyType": "new",
      "themeable": true,
      "group": [
        "paddingTop",
        "paddingRight",
        "paddingBottom",
        "paddingLeft"
      ]
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__themableProperties": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 3975
        },
        "end": {
          "line": 161,
          "column": 30,
          "index": 4001
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} List of all non CSS themable properties"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__statesKey": {
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 4076
        },
        "end": {
          "line": 164,
          "column": 21,
          "index": 4093
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} Unique key over the current set of states"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__states": {
      "location": {
        "start": {
          "line": 166,
          "column": 4,
          "index": 4100
        },
        "end": {
          "line": 166,
          "column": 18,
          "index": 4114
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__themeValues": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4121
        },
        "end": {
          "line": 168,
          "column": 23,
          "index": 4140
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__themeStyles": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4146
        },
        "end": {
          "line": 169,
          "column": 23,
          "index": 4165
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__userStyles": {
      "location": {
        "start": {
          "line": 170,
          "column": 4,
          "index": 4171
        },
        "end": {
          "line": 170,
          "column": 22,
          "index": 4189
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__userPaddings": {
      "location": {
        "start": {
          "line": 172,
          "column": 4,
          "index": 4196
        },
        "end": {
          "line": 172,
          "column": 24,
          "index": 4216
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__themePaddings": {
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 4222
        },
        "end": {
          "line": 173,
          "column": 25,
          "index": 4243
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__isThemed": {
      "location": {
        "start": {
          "line": 175,
          "column": 4,
          "index": 4250
        },
        "end": {
          "line": 175,
          "column": 21,
          "index": 4267
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__stylesheet": {
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 4273
        },
        "end": {
          "line": 176,
          "column": 22,
          "index": 4291
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__initializeThemableProperties": {
      "location": {
        "start": {
          "line": 181,
          "column": 4,
          "index": 4383
        },
        "end": {
          "line": 197,
          "column": 5,
          "index": 4897
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Collect all themable properties, which are not CSS properties</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_getCssProperties": {
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5049
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 5278
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of all properties, which should be applied as CSS styles.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} List of property names",
            "type": "Array",
            "description": " List of property names"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyAppearance": {
      "location": {
        "start": {
          "line": 218,
          "column": 4,
          "index": 5307
        },
        "end": {
          "line": 222,
          "column": 5,
          "index": 5401
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "appearance"
      ]
    },
    "_getValue": {
      "location": {
        "start": {
          "line": 230,
          "column": 4,
          "index": 5575
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 5799
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute the value of the given property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "propertyName {String} Name of the property",
            "paramName": "propertyName",
            "description": " Name of the property",
            "type": "qx.ui.virtual.cell.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The Property value",
            "type": "var",
            "description": " The Property value"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_storeStyle": {
      "location": {
        "start": {
          "line": 246,
          "column": 4,
          "index": 6143
        },
        "end": {
          "line": 260,
          "column": 5,
          "index": 6452
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Store a properties computed style string either in the user or in the\n theme values. User values will be applied as inline styles, while theme\n values are stored in a stylesheet.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "propertyName {String} The property name",
            "paramName": "propertyName",
            "description": " The property name",
            "type": "qx.ui.virtual.cell.String"
          },
          {
            "name": "@param",
            "body": "styles {String} String with computed CSS styles",
            "paramName": "styles",
            "description": " String with computed CSS styles",
            "type": "qx.ui.virtual.cell.String"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyBackgroundColor": {
      "location": {
        "start": {
          "line": 263,
          "column": 4,
          "index": 6481
        },
        "end": {
          "line": 274,
          "column": 5,
          "index": 6798
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "backgroundColor"
      ]
    },
    "_applyTextColor": {
      "location": {
        "start": {
          "line": 277,
          "column": 4,
          "index": 6827
        },
        "end": {
          "line": 287,
          "column": 5,
          "index": 7115
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "textColor"
      ]
    },
    "_applyTextAlign": {
      "location": {
        "start": {
          "line": 290,
          "column": 4,
          "index": 7144
        },
        "end": {
          "line": 297,
          "column": 5,
          "index": 7361
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "textAlign"
      ]
    },
    "_applyFont": {
      "location": {
        "start": {
          "line": 300,
          "column": 4,
          "index": 7390
        },
        "end": {
          "line": 308,
          "column": 5,
          "index": 7698
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "font"
      ]
    },
    "_applyPadding": {
      "location": {
        "start": {
          "line": 311,
          "column": 4,
          "index": 7727
        },
        "end": {
          "line": 332,
          "column": 5,
          "index": 8278
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "paddingTop",
        "paddingRight",
        "paddingBottom",
        "paddingLeft"
      ]
    },
    "getCellProperties": {
      "location": {
        "start": {
          "line": 341,
          "column": 4,
          "index": 8503
        },
        "end": {
          "line": 350,
          "column": 5,
          "index": 8847
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract",
        "qx.ui.virtual.cell.ICell"
      ]
    },
    "getAttributes": {
      "location": {
        "start": {
          "line": 353,
          "column": 4,
          "index": 8872
        },
        "end": {
          "line": 355,
          "column": 5,
          "index": 8925
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract"
      ]
    },
    "getContent": {
      "location": {
        "start": {
          "line": 358,
          "column": 4,
          "index": 8950
        },
        "end": {
          "line": 360,
          "column": 5,
          "index": 9003
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract"
      ]
    },
    "getCssClasses": {
      "location": {
        "start": {
          "line": 363,
          "column": 4,
          "index": 9028
        },
        "end": {
          "line": 366,
          "column": 5,
          "index": 9176
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract"
      ]
    },
    "__setStates": {
      "location": {
        "start": {
          "line": 374,
          "column": 4,
          "index": 9385
        },
        "end": {
          "line": 397,
          "column": 5,
          "index": 10083
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the cell states and set the correct CSS class for the given state\n combination</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__clearThemedPropertyValues": {
      "location": {
        "start": {
          "line": 402,
          "column": 4,
          "index": 10161
        },
        "end": {
          "line": 408,
          "column": 5,
          "index": 10438
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove the themed value from all CSS properties</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__updateThemeableProperties": {
      "location": {
        "start": {
          "line": 415,
          "column": 4,
          "index": 10630
        },
        "end": {
          "line": 435,
          "column": 5,
          "index": 11131
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the new themed value for all CSS properties given the set of states</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__computeCssClassForStates": {
      "location": {
        "start": {
          "line": 440,
          "column": 4,
          "index": 11226
        },
        "end": {
          "line": 443,
          "column": 5,
          "index": 11409
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute a CSS class for the current values of all CSS properties</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__cacheThemedValues": {
      "location": {
        "start": {
          "line": 448,
          "column": 4,
          "index": 11497
        },
        "end": {
          "line": 461,
          "column": 5,
          "index": 11943
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Cache the themed values for the current state combination</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__applyThemeValues": {
      "location": {
        "start": {
          "line": 466,
          "column": 4,
          "index": 12015
        },
        "end": {
          "line": 472,
          "column": 5,
          "index": 12264
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply the themed values to the properties</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getStyles": {
      "location": {
        "start": {
          "line": 475,
          "column": 4,
          "index": 12289
        },
        "end": {
          "line": 477,
          "column": 5,
          "index": 12378
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract"
      ]
    },
    "getInsets": {
      "location": {
        "start": {
          "line": 480,
          "column": 4,
          "index": 12403
        },
        "end": {
          "line": 501,
          "column": 5,
          "index": 13046
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "appearsIn": [
        "qx.ui.virtual.cell.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getAppearance": {
      "type": "function",
      "name": "getAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>appearance</code>.\n\nFor further details take a look at the property definition: {@link #appearance}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for appearance"
          }
        ]
      }
    },
    "setAppearance": {
      "type": "function",
      "name": "setAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>appearance</code>.\n\nFor further details take a look at the property definition: {@link #appearance}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for appearance"
          }
        ]
      }
    },
    "resetAppearance": {
      "type": "function",
      "name": "resetAppearance",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>appearance</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #appearance}."
          }
        ]
      }
    },
    "getBackgroundColor": {
      "type": "function",
      "name": "getBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>backgroundColor</code>.\n\nFor further details take a look at the property definition: {@link #backgroundColor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for backgroundColor"
          }
        ]
      }
    },
    "setBackgroundColor": {
      "type": "function",
      "name": "setBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>backgroundColor</code>.\n\nFor further details take a look at the property definition: {@link #backgroundColor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for backgroundColor"
          }
        ]
      }
    },
    "resetBackgroundColor": {
      "type": "function",
      "name": "resetBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>backgroundColor</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #backgroundColor}."
          }
        ]
      }
    },
    "getTextColor": {
      "type": "function",
      "name": "getTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>textColor</code>.\n\nFor further details take a look at the property definition: {@link #textColor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for textColor"
          }
        ]
      }
    },
    "setTextColor": {
      "type": "function",
      "name": "setTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>textColor</code>.\n\nFor further details take a look at the property definition: {@link #textColor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for textColor"
          }
        ]
      }
    },
    "resetTextColor": {
      "type": "function",
      "name": "resetTextColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>textColor</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #textColor}."
          }
        ]
      }
    },
    "getTextAlign": {
      "type": "function",
      "name": "getTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>textAlign</code>.\n\nFor further details take a look at the property definition: {@link #textAlign}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for textAlign"
          }
        ]
      }
    },
    "setTextAlign": {
      "type": "function",
      "name": "setTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>textAlign</code>.\n\nFor further details take a look at the property definition: {@link #textAlign}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for textAlign"
          }
        ]
      }
    },
    "resetTextAlign": {
      "type": "function",
      "name": "resetTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>textAlign</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #textAlign}."
          }
        ]
      }
    },
    "getFont": {
      "type": "function",
      "name": "getFont",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>font</code>.\n\nFor further details take a look at the property definition: {@link #font}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Font",
            "desc": "Returns the value for font"
          }
        ]
      }
    },
    "setFont": {
      "type": "function",
      "name": "setFont",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>font</code>.\n\nFor further details take a look at the property definition: {@link #font}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Font",
            "paramName": "value",
            "desc": "Value for font"
          }
        ]
      }
    },
    "resetFont": {
      "type": "function",
      "name": "resetFont",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>font</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #font}."
          }
        ]
      }
    },
    "getPaddingTop": {
      "type": "function",
      "name": "getPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingTop</code>.\n\nFor further details take a look at the property definition: {@link #paddingTop}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingTop"
          }
        ]
      }
    },
    "setPaddingTop": {
      "type": "function",
      "name": "setPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingTop</code>.\n\nFor further details take a look at the property definition: {@link #paddingTop}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingTop"
          }
        ]
      }
    },
    "resetPaddingTop": {
      "type": "function",
      "name": "resetPaddingTop",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>paddingTop</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #paddingTop}."
          }
        ]
      }
    },
    "getPaddingRight": {
      "type": "function",
      "name": "getPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingRight</code>.\n\nFor further details take a look at the property definition: {@link #paddingRight}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingRight"
          }
        ]
      }
    },
    "setPaddingRight": {
      "type": "function",
      "name": "setPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingRight</code>.\n\nFor further details take a look at the property definition: {@link #paddingRight}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingRight"
          }
        ]
      }
    },
    "resetPaddingRight": {
      "type": "function",
      "name": "resetPaddingRight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>paddingRight</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #paddingRight}."
          }
        ]
      }
    },
    "getPaddingBottom": {
      "type": "function",
      "name": "getPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingBottom</code>.\n\nFor further details take a look at the property definition: {@link #paddingBottom}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingBottom"
          }
        ]
      }
    },
    "setPaddingBottom": {
      "type": "function",
      "name": "setPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingBottom</code>.\n\nFor further details take a look at the property definition: {@link #paddingBottom}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingBottom"
          }
        ]
      }
    },
    "resetPaddingBottom": {
      "type": "function",
      "name": "resetPaddingBottom",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>paddingBottom</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #paddingBottom}."
          }
        ]
      }
    },
    "getPaddingLeft": {
      "type": "function",
      "name": "getPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>paddingLeft</code>.\n\nFor further details take a look at the property definition: {@link #paddingLeft}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for paddingLeft"
          }
        ]
      }
    },
    "setPaddingLeft": {
      "type": "function",
      "name": "setPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>paddingLeft</code>.\n\nFor further details take a look at the property definition: {@link #paddingLeft}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for paddingLeft"
          }
        ]
      }
    },
    "resetPaddingLeft": {
      "type": "function",
      "name": "resetPaddingLeft",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>paddingLeft</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #paddingLeft}."
          }
        ]
      }
    },
    "setPadding": {
      "type": "function",
      "name": "setPadding",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>padding</code>.\n\nFor further details take a look at the property definition: {@link #padding}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for padding"
          }
        ]
      }
    },
    "resetPadding": {
      "type": "function",
      "name": "resetPadding",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>padding</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #padding}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 504,
        "column": 2,
        "index": 13055
      },
      "end": {
        "line": 514,
        "column": 3,
        "index": 13302
      }
    }
  },
  "descendants": [
    "qx.ui.virtual.cell.AbstractImage",
    "qx.ui.virtual.cell.Date",
    "qx.ui.virtual.cell.Html",
    "qx.ui.virtual.cell.Number",
    "qx.ui.virtual.cell.String"
  ]
}