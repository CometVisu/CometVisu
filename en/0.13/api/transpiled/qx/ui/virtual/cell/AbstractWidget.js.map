{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "virtual",
    "cell",
    "IWidgetCell",
    "construct",
    "constructor",
    "call",
    "__pool",
    "events",
    "created",
    "members",
    "_createWidget",
    "Error",
    "updateData",
    "widget",
    "data",
    "updateStates",
    "states",
    "oldStates",
    "getUserData",
    "newStates",
    "state",
    "removeState",
    "addState",
    "setUserData",
    "getCellWidget",
    "__getWidgetFromPool",
    "pool",
    "push",
    "_cleanupPool",
    "pop",
    "destroy",
    "shift",
    "fireDataEvent",
    "destruct",
    "AbstractWidget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/AbstractWidget.js"
  ],
  "sourcesContent": [
    "/**\n * Abstract base class for widget based cell renderer.\n */\nqx.Class.define(\"qx.ui.virtual.cell.AbstractWidget\", {\n  extend: qx.core.Object,\n  implement: [qx.ui.virtual.cell.IWidgetCell],\n\n  construct() {\n    super();\n\n    this.__pool = [];\n  },\n\n  events: {\n    /** Fired when a new <code>LayoutItem</code> is created. */\n    created: \"qx.event.type.Data\"\n  },\n\n  members: {\n    __pool: null,\n\n    /**\n     * Creates the widget instance.\n     *\n     * @abstract\n     * @return {qx.ui.core.LayoutItem} The widget used to render a cell\n     */\n    _createWidget() {\n      throw new Error(\"abstract method call\");\n    },\n\n    // interface implementation\n    updateData(widget, data) {\n      throw new Error(\"abstract method call\");\n    },\n\n    // interface implementation\n    updateStates(widget, states) {\n      var oldStates = widget.getUserData(\"cell.states\");\n\n      // remove old states\n      if (oldStates) {\n        var newStates = states || {};\n        for (var state in oldStates) {\n          if (!newStates[state]) {\n            widget.removeState(state);\n          }\n        }\n      } else {\n        oldStates = {};\n      }\n\n      // apply new states\n      if (states) {\n        for (var state in states) {\n          if (!oldStates.state) {\n            widget.addState(state);\n          }\n        }\n      }\n\n      widget.setUserData(\"cell.states\", states);\n    },\n\n    // interface implementation\n    getCellWidget(data, states) {\n      var widget = this.__getWidgetFromPool();\n      this.updateStates(widget, states);\n      this.updateData(widget, data);\n      return widget;\n    },\n\n    // interface implementation\n    pool(widget) {\n      this.__pool.push(widget);\n    },\n\n    /**\n     * Cleanup all <code>LayoutItem</code> and destroy them.\n     */\n    _cleanupPool() {\n      var widget = this.__pool.pop();\n\n      while (widget) {\n        widget.destroy();\n        widget = this.__pool.pop();\n      }\n    },\n\n    /**\n     * Returns a <code>LayoutItem</code> from the pool, when the pool is empty\n     * a new <code>LayoutItem</code> is created.\n     *\n     * @return {qx.ui.core.LayoutItem} The cell widget\n     */\n    __getWidgetFromPool() {\n      var widget = this.__pool.shift();\n\n      if (widget == null) {\n        widget = this._createWidget();\n        this.fireDataEvent(\"created\", widget);\n      }\n\n      return widget;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this._cleanupPool();\n    this.__pool = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}