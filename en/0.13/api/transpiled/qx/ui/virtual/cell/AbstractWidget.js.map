{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "virtual",
    "cell",
    "IWidgetCell",
    "construct",
    "__pool",
    "events",
    "created",
    "members",
    "_createWidget",
    "Error",
    "updateData",
    "widget",
    "data",
    "updateStates",
    "states",
    "oldStates",
    "getUserData",
    "newStates",
    "state",
    "removeState",
    "addState",
    "setUserData",
    "getCellWidget",
    "__getWidgetFromPool",
    "pool",
    "push",
    "_cleanupPool",
    "pop",
    "destroy",
    "shift",
    "fireDataEvent",
    "destruct",
    "AbstractWidget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/AbstractWidget.js"
  ],
  "sourcesContent": [
    "/**\n * Abstract base class for widget based cell renderer.\n */\nqx.Class.define(\"qx.ui.virtual.cell.AbstractWidget\", {\n  extend: qx.core.Object,\n  implement: [qx.ui.virtual.cell.IWidgetCell],\n\n  construct() {\n    super();\n\n    this.__pool = [];\n  },\n\n  events: {\n    /** Fired when a new <code>LayoutItem</code> is created. */\n    created: \"qx.event.type.Data\"\n  },\n\n  members: {\n    __pool: null,\n\n    /**\n     * Creates the widget instance.\n     *\n     * @abstract\n     * @return {qx.ui.core.LayoutItem} The widget used to render a cell\n     */\n    _createWidget() {\n      throw new Error(\"abstract method call\");\n    },\n\n    // interface implementation\n    updateData(widget, data) {\n      throw new Error(\"abstract method call\");\n    },\n\n    // interface implementation\n    updateStates(widget, states) {\n      var oldStates = widget.getUserData(\"cell.states\");\n\n      // remove old states\n      if (oldStates) {\n        var newStates = states || {};\n        for (var state in oldStates) {\n          if (!newStates[state]) {\n            widget.removeState(state);\n          }\n        }\n      } else {\n        oldStates = {};\n      }\n\n      // apply new states\n      if (states) {\n        for (var state in states) {\n          if (!oldStates.state) {\n            widget.addState(state);\n          }\n        }\n      }\n\n      widget.setUserData(\"cell.states\", states);\n    },\n\n    // interface implementation\n    getCellWidget(data, states) {\n      var widget = this.__getWidgetFromPool();\n      this.updateStates(widget, states);\n      this.updateData(widget, data);\n      return widget;\n    },\n\n    // interface implementation\n    pool(widget) {\n      this.__pool.push(widget);\n    },\n\n    /**\n     * Cleanup all <code>LayoutItem</code> and destroy them.\n     */\n    _cleanupPool() {\n      var widget = this.__pool.pop();\n\n      while (widget) {\n        widget.destroy();\n        widget = this.__pool.pop();\n      }\n    },\n\n    /**\n     * Returns a <code>LayoutItem</code> from the pool, when the pool is empty\n     * a new <code>LayoutItem</code> is created.\n     *\n     * @return {qx.ui.core.LayoutItem} The cell widget\n     */\n    __getWidgetFromPool() {\n      var widget = this.__pool.shift();\n\n      if (widget == null) {\n        widget = this._createWidget();\n        this.fireDataEvent(\"created\", widget);\n      }\n\n      return widget;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this._cleanupPool();\n    this.__pool = null;\n  }\n});\n"
  ],
  "mappings": "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"
}