{
  "className": "qx.ui.virtual.cell.Abstract",
  "packageName": "qx.ui.virtual.cell",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.virtual.cell.ICell"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 681
      },
      "end": {
        "line": 110,
        "column": 3,
        "index": 3112
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Abstract base class for HTML based cell renderer.\n HTML cell renderer are used to construct an HTML string, which is used to\n render the cell.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.bom.Stylesheet"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 2,
        "index": 818
      },
      "end": {
        "line": 38,
        "column": 3,
        "index": 931
      }
    }
  },
  "members": {
    "getCssClasses": {
      "location": {
        "start": {
          "line": 48,
          "column": 4,
          "index": 1205
        },
        "end": {
          "line": 50,
          "column": 5,
          "index": 1265
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the css classes for the cell</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Space separated list of CSS classes",
            "type": "qx.ui.virtual.cell.String",
            "description": " Space separated list of CSS classes"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAttributes": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1592
        },
        "end": {
          "line": 62,
          "column": 5,
          "index": 1645
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the element attributes for the cell</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Compiled string of cell attributes. e.g.\n   <code>'tabIndex=\"1\" readonly=\"false\"'</code>",
            "type": "qx.ui.virtual.cell.String",
            "description": " Compiled string of cell attributes. e.g.\n   <code>'tabIndex=\"1\" readonly=\"false\"'</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getStyles": {
      "location": {
        "start": {
          "line": 72,
          "column": 4,
          "index": 1955
        },
        "end": {
          "line": 74,
          "column": 5,
          "index": 2004
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the CSS styles for the cell</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Compiled string of CSS styles. e.g.\n   <code>'color=\"red; padding: 10px'</code>",
            "type": "qx.ui.virtual.cell.String",
            "description": " Compiled string of CSS styles. e.g.\n   <code>'color=\"red; padding: 10px'</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getInsets": {
      "location": {
        "start": {
          "line": 85,
          "column": 4,
          "index": 2426
        },
        "end": {
          "line": 87,
          "column": 5,
          "index": 2479
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the cell's insets. Insets are the sum of the cell's padding and\n border width.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} An array containing the sum of horizontal insets at index\n   <code>0</code> and the sum of vertical insets at index <code>1</code>.",
            "type": "Integer[]",
            "description": " An array containing the sum of horizontal insets at index\n   <code>0</code> and the sum of vertical insets at index <code>1</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getContent": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2732
        },
        "end": {
          "line": 98,
          "column": 5,
          "index": 2785
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get cell'S HTML content</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The cell's data value",
            "paramName": "value",
            "description": " The cell's data value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Object} A map containing the cell's state names as map keys.",
            "paramName": "states",
            "description": " A map containing the cell's state names as map keys.",
            "type": "Object"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The cell's content as HTML fragment.",
            "type": "qx.ui.virtual.cell.String",
            "description": " The cell's content as HTML fragment."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCellProperties": {
      "location": {
        "start": {
          "line": 100,
          "column": 4,
          "index": 2792
        },
        "end": {
          "line": 108,
          "column": 5,
          "index": 3104
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.cell.ICell",
      "appearsIn": [
        "qx.ui.virtual.cell.ICell"
      ],
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "body": "data {var} Data needed for the cell to render.",
            "paramName": "data",
            "description": " Data needed for the cell to render.",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "states {Map} The states set on the cell (e.g. <i>selected</i>,\n <i>focused</i>, <i>editable</i>).",
            "paramName": "states",
            "description": " The states set on the cell (e.g. <i>selected</i>,\n <i>focused</i>, <i>editable</i>).",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Cell properties (see above.)",
            "type": "Map",
            "description": " Cell properties (see above.)"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.ui.virtual.cell.Cell"
  ]
}