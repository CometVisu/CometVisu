{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "cell",
    "Cell",
    "construct",
    "dateFormat",
    "constructor",
    "call",
    "setDateFormat",
    "initDateFormat",
    "util",
    "format",
    "DateFormat",
    "getDateTimeInstance",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "deferredInit",
    "members",
    "getContent",
    "value",
    "states",
    "getDateFormat",
    "Date"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/Date.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Date cell renderer.\r\n *\r\n * Renders a date according to the configured date formatter.\r\n *\r\n */\r\nqx.Class.define(\"qx.ui.virtual.cell.Date\", {\r\n  extend: qx.ui.virtual.cell.Cell,\r\n\r\n  /**\r\n   * @param dateFormat {qx.util.format.DateFormat|null} optional date formatter\r\n   *   to use\r\n   */\r\n  construct(dateFormat) {\r\n    super();\r\n\r\n    if (dateFormat) {\r\n      this.setDateFormat(dateFormat);\r\n    } else {\r\n      this.initDateFormat(qx.util.format.DateFormat.getDateTimeInstance());\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"cell-date\"\r\n    },\r\n\r\n    /** The date format used to render the cell */\r\n    dateFormat: {\r\n      check: \"qx.util.format.DateFormat\",\r\n      deferredInit: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    // overridden\r\n    getContent(value, states) {\r\n      return value ? this.getDateFormat().format(value) : \"\";\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,IAAI,CAACC,IAAI;IAE/B;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,UAAU,EAAE;MACpBZ,EAAA,CAAAO,EAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAG,WAAA,CAAAC,IAAA;MAEA,IAAIF,UAAU,EAAE;QACd,IAAI,CAACG,aAAa,CAACH,UAAU,CAAC;MAChC,CAAC,MAAM;QACL,IAAI,CAACI,cAAc,CAAChB,EAAE,CAACiB,IAAI,CAACC,MAAM,CAACC,UAAU,CAACC,mBAAmB,CAAC,CAAC,CAAC;MACtE;IACF,CAAC;IAEDC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAZ,UAAU,EAAE;QACVa,KAAK,EAAE,2BAA2B;QAClCC,YAAY,EAAE;MAChB;IACF,CAAC;IAEDC,OAAO,EAAE;MACP;MACAC,UAAU,WAAAA,WAACC,KAAK,EAAEC,MAAM,EAAE;QACxB,OAAOD,KAAK,GAAG,IAAI,CAACE,aAAa,CAAC,CAAC,CAACb,MAAM,CAACW,KAAK,CAAC,GAAG,EAAE;MACxD;IACF;EACF,CAAC,CAAC;EA9DF7B,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,IAAI,CAACuB,IAAI,CAAC7B,aAAa,GAAGA,aAAa;AAAC"
}