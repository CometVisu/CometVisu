{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "cell",
    "Abstract",
    "construct",
    "__stylesheet",
    "CellStylesheet",
    "getInstance",
    "__userStyles",
    "__themeStyles",
    "__userPaddings",
    "__themePaddings",
    "__states",
    "__themeValues",
    "initAppearance",
    "__initializeThemableProperties",
    "properties",
    "appearance",
    "check",
    "init",
    "apply",
    "backgroundColor",
    "nullable",
    "themeable",
    "textColor",
    "textAlign",
    "font",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "members",
    "__themableProperties",
    "__statesKey",
    "__isThemed",
    "PropertyUtil",
    "util",
    "cssProperties",
    "lang",
    "Object",
    "fromArray",
    "_getCssProperties",
    "clazz",
    "constructor",
    "getProperties",
    "prop",
    "push",
    "superclass",
    "_applyAppearance",
    "value",
    "old",
    "_getValue",
    "propertyName",
    "getThemeValue",
    "getUserValue",
    "_storeStyle",
    "styles",
    "store",
    "_applyBackgroundColor",
    "name",
    "theme",
    "manager",
    "Color",
    "resolve",
    "_applyTextColor",
    "_applyTextAlign",
    "_applyFont",
    "Font",
    "bom",
    "element",
    "Style",
    "compile",
    "getStyles",
    "_applyPadding",
    "paddingStore",
    "cssKey",
    "getCssName",
    "getCellProperties",
    "states",
    "__setStates",
    "classes",
    "getCssClasses",
    "style",
    "attributes",
    "getAttributes",
    "content",
    "getContent",
    "insets",
    "getInsets",
    "cssClass",
    "getCssClass",
    "getAppearance",
    "statesKey",
    "keys",
    "sort",
    "join",
    "themeStyles",
    "__clearThemedPropertyValues",
    "__updateThemeableProperties",
    "__computeCssClassForStates",
    "__cacheThemedValues",
    "__applyThemeValues",
    "themableProperties",
    "i",
    "length",
    "deleteThemeValue",
    "Appearance",
    "styleFrom",
    "undefined",
    "setThemed",
    "styleString",
    "values",
    "computeClassForStyles",
    "themeValues",
    "key",
    "user",
    "top",
    "right",
    "bottom",
    "left",
    "destruct",
    "Cell"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/Cell.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Themeable Cell renderer.\n *\n * This cell renderer can be styled by an appearance theme.\n */\nqx.Class.define(\"qx.ui.virtual.cell.Cell\", {\n  extend: qx.ui.virtual.cell.Abstract,\n\n  construct() {\n    super();\n\n    this.__stylesheet = qx.ui.virtual.cell.CellStylesheet.getInstance();\n\n    this.__userStyles = {};\n    this.__themeStyles = {};\n\n    this.__userPaddings = {};\n    this.__themePaddings = {};\n\n    this.__states = {};\n\n    this.__themeValues = {};\n\n    this.initAppearance();\n    this.__initializeThemableProperties();\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this cell.\n     */\n    appearance: {\n      check: \"String\",\n      init: \"cell\",\n      apply: \"_applyAppearance\"\n    },\n\n    /** The cell's background color */\n    backgroundColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyBackgroundColor\",\n      themeable: true\n    },\n\n    /** The cell's text color */\n    textColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyTextColor\",\n      themeable: true\n    },\n\n    /** The text alignment of the cell's content */\n    textAlign: {\n      check: [\"left\", \"center\", \"right\", \"justify\"],\n      nullable: true,\n      themeable: true,\n      apply: \"_applyTextAlign\"\n    },\n\n    /**\n     * The cell's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font: {\n      nullable: true,\n      apply: \"_applyFont\",\n      check: \"Font\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (right) */\n    paddingRight: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (bottom) */\n    paddingBottom: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (left) */\n    paddingLeft: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left\n     * respectively. If there is only one value, it applies to all sides, if\n     * there are two or three, the missing values are taken from the opposite\n     * side.\n     */\n    padding: {\n      group: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n      mode: \"shorthand\",\n      themeable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {Array} List of all non CSS themable properties */\n    __themableProperties: null,\n\n    /** @type {String} Unique key over the current set of states */\n    __statesKey: null,\n\n    __states: null,\n\n    __themeValues: null,\n    __themeStyles: null,\n    __userStyles: null,\n\n    __userPaddings: null,\n    __themePaddings: null,\n\n    __isThemed: false,\n    __stylesheet: null,\n\n    /**\n     * Collect all themable properties, which are not CSS properties\n     */\n    __initializeThemableProperties() {\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var cssProperties = qx.lang.Object.fromArray(this._getCssProperties());\n      this.__themableProperties = [];\n\n      var clazz = this.constructor;\n      while (clazz) {\n        var properties = PropertyUtil.getProperties(clazz);\n        for (var prop in properties) {\n          if (!cssProperties[prop]) {\n            this.__themableProperties.push(prop);\n          }\n        }\n        clazz = clazz.superclass;\n      }\n    },\n\n    /**\n     * Get a list of all properties, which should be applied as CSS styles.\n     *\n     * @return {Array} List of property names\n     */\n    _getCssProperties() {\n      return [\n        \"backgroundColor\",\n        \"textColor\",\n        \"font\",\n        \"textAlign\",\n        \"paddingTop\",\n        \"paddingRight\",\n        \"paddingBottom\",\n        \"paddingLeft\"\n      ];\n    },\n\n    // property apply\n    _applyAppearance(value, old) {\n      if (old) {\n        this.__themeStyles = {};\n      }\n    },\n\n    /**\n     * Compute the value of the given property\n     *\n     * @param propertyName {String} Name of the property\n     * @return {var} The Property value\n     */\n    _getValue(propertyName) {\n      if (this.__isThemed) {\n        return qx.util.PropertyUtil.getThemeValue(this, propertyName);\n      } else {\n        return qx.util.PropertyUtil.getUserValue(this, propertyName);\n      }\n    },\n\n    /**\n     * Store a properties computed style string either in the user or in the\n     * theme values. User values will be applied as inline styles, while theme\n     * values are stored in a stylesheet.\n     *\n     * @param propertyName {String} The property name\n     * @param styles {String} String with computed CSS styles\n     */\n    _storeStyle(propertyName, styles) {\n      var store;\n\n      if (this.__isThemed) {\n        store = this.__themeStyles;\n      } else {\n        store = this.__userStyles;\n      }\n\n      if (styles === null) {\n        delete store[propertyName];\n      } else {\n        store[propertyName] = styles;\n      }\n    },\n\n    // property apply\n    _applyBackgroundColor(value, old, name) {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(\n          name,\n          \"background-color:\" +\n            qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      }\n    },\n\n    // property apply\n    _applyTextColor(value, old, name) {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(\n          name,\n          \"color:\" + qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      }\n    },\n\n    // property apply\n    _applyTextAlign(value, old, name) {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        this._storeStyle(name, \"text-align:\" + value);\n      }\n    },\n\n    // property apply\n    _applyFont(value, old, name) {\n      var value = this._getValue(name);\n      if (!value) {\n        this._storeStyle(name, null);\n      } else {\n        var font = qx.theme.manager.Font.getInstance().resolve(value);\n        this._storeStyle(name, qx.bom.element.Style.compile(font.getStyles()));\n      }\n    },\n\n    // property apply\n    _applyPadding(value, old, name) {\n      var value = this._getValue(name);\n\n      if (this.__isThemed) {\n        var paddingStore = this.__themePaddings;\n      } else {\n        paddingStore = this.__userPaddings;\n      }\n\n      if (value === null) {\n        delete paddingStore[name];\n      } else {\n        paddingStore[name] = value;\n      }\n\n      if (value === null) {\n        this._storeStyle(name, null);\n      } else {\n        var cssKey = qx.bom.Style.getCssName(name);\n        this._storeStyle(name, cssKey + \":\" + value + \"px\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMPLEMENT CELL API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getCellProperties(value, states) {\n      this.__setStates(states);\n      return {\n        classes: this.getCssClasses(value, states),\n        style: this.getStyles(value, states),\n        attributes: this.getAttributes(value, states),\n        content: this.getContent(value, states),\n        insets: this.getInsets(value, states)\n      };\n    },\n\n    // overridden\n    getAttributes(value, states) {\n      return \"\";\n    },\n\n    // overridden\n    getContent(value, states) {\n      return value;\n    },\n\n    // overridden\n    getCssClasses(value, states) {\n      var cssClass = this.__stylesheet.getCssClass(this.__statesKey) || \"\";\n      return \"qx-cell \" + cssClass;\n    },\n\n    /**\n     * Set the cell states and set the correct CSS class for the given state\n     * combination\n     *\n     * @param states {Object} A map containing the cell's state names as map keys.\n     */\n    __setStates(states) {\n      // Avoid errors if no states are set\n      if (!states) {\n        states = {};\n      }\n\n      var appearance = this.getAppearance();\n      var statesKey = appearance + \"-\" + Object.keys(states).sort().join(\" \");\n      if (this.__statesKey == statesKey) {\n        return;\n      }\n      this.__statesKey = statesKey;\n\n      var themeStyles = this.__states[this.__statesKey];\n      if (!themeStyles) {\n        this.__clearThemedPropertyValues();\n        this.__updateThemeableProperties(states);\n        this.__computeCssClassForStates(states);\n        this.__cacheThemedValues();\n\n        this.__states[this.__statesKey] = 1;\n      }\n      this.__applyThemeValues();\n    },\n\n    /**\n     * Remove the themed value from all CSS properties\n     */\n    __clearThemedPropertyValues() {\n      var PropertyUtil = qx.util.PropertyUtil;\n      var themableProperties = this._getCssProperties();\n      for (var i = 0; i < themableProperties.length; i++) {\n        PropertyUtil.deleteThemeValue(this, themableProperties[i]);\n      }\n    },\n\n    /**\n     * Set the new themed value for all CSS properties given the set of states\n     *\n     * @param states {Object} A map containing the cell's state names as map keys.\n     */\n    __updateThemeableProperties(states) {\n      this.__themeStyles = {};\n\n      this.__isThemed = true;\n\n      var appearance = this.getAppearance();\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var styles = qx.theme.manager.Appearance.getInstance().styleFrom(\n        appearance,\n        states\n      );\n\n      for (var prop in styles) {\n        if (styles[prop] !== undefined) {\n          PropertyUtil.setThemed(this, prop, styles[prop]);\n        }\n      }\n\n      this.__isThemed = false;\n    },\n\n    /**\n     * Compute a CSS class for the current values of all CSS properties\n     */\n    __computeCssClassForStates() {\n      var styleString = Object.values(this.__themeStyles).join(\";\");\n      this.__stylesheet.computeClassForStyles(this.__statesKey, styleString);\n    },\n\n    /**\n     * Cache the themed values for the current state combination\n     */\n    __cacheThemedValues() {\n      var properties = this.__themableProperties;\n      var PropertyUtil = qx.util.PropertyUtil;\n\n      var themeValues = {};\n      for (var i = 0; i < properties.length; i++) {\n        var key = properties[i];\n        var value = PropertyUtil.getThemeValue(this, key);\n        if (value !== undefined) {\n          themeValues[key] = value;\n        }\n      }\n      this.__themeValues[this.__statesKey] = themeValues;\n    },\n\n    /**\n     * Apply the themed values to the properties\n     */\n    __applyThemeValues() {\n      var PropertyUtil = qx.util.PropertyUtil;\n      var themeValues = this.__themeValues[this.__statesKey] || {};\n      for (var key in themeValues) {\n        PropertyUtil.setThemed(this, key, themeValues[key]);\n      }\n    },\n\n    // overridden\n    getStyles(value, states) {\n      return Object.values(this.__userStyles).join(\";\");\n    },\n\n    // overridden\n    getInsets(value, states) {\n      var user = this.__userPaddings;\n      var theme = this.__themePaddings;\n\n      var top =\n        (user.paddingTop !== undefined ? user.paddingTop : theme.paddingTop) ||\n        0;\n      var right =\n        (user.paddingRight !== undefined\n          ? user.paddingRight\n          : theme.paddingRight) || 0;\n      var bottom =\n        (user.paddingBottom !== undefined\n          ? user.paddingBottom\n          : theme.paddingBottom) || 0;\n      var left =\n        (user.paddingLeft !== undefined\n          ? user.paddingLeft\n          : theme.paddingLeft) || 0;\n\n      return [left + right, top + bottom];\n    }\n  },\n\n  destruct() {\n    this.__stylesheet =\n      this.__userStyles =\n      this.__themeStyles =\n      this.__userPaddings =\n      this.__themePaddings =\n      this.__states =\n      this.__themeValues =\n      this.__themableProperties =\n        null;\n  }\n});\n"
  ],
  "mappings": "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"
}