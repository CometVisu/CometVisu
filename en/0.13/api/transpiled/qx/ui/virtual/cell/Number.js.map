{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "cell",
    "Cell",
    "construct",
    "numberFormat",
    "setNumberFormat",
    "properties",
    "check",
    "init",
    "util",
    "format",
    "NumberFormat",
    "appearance",
    "refine",
    "members",
    "getContent",
    "value",
    "states",
    "getNumberFormat",
    "Number"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/cell/Number.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Number cell renderer.\n *\n * Renders the call using the configured number formatter.\n */\nqx.Class.define(\"qx.ui.virtual.cell.Number\", {\n  extend: qx.ui.virtual.cell.Cell,\n\n  /**\n   * @param numberFormat {qx.util.format.NumberFormat|null} Optional number\n   *   format to use.\n   */\n  construct(numberFormat) {\n    super();\n\n    if (numberFormat) {\n      this.setNumberFormat(numberFormat);\n    }\n  },\n\n  properties: {\n    /** The number format used to render the cell */\n    numberFormat: {\n      check: \"qx.util.format.NumberFormat\",\n      // it is on intension that only one number format is used for\n      // all instances\n      init: new qx.util.format.NumberFormat()\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"cell-number\"\n    }\n  },\n\n  members: {\n    // overridden\n    getContent(value, states) {\n      return value !== null ? this.getNumberFormat().format(value) : \"\";\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,2BAA2B,EAAE;IAC3CC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,IAAI,CAACC,IAAI;IAE/B;AACF;AACA;AACA;IACEC,SAAS,qBAACC,YAAY,EAAE;MACtB;MAEA,IAAIA,YAAY,EAAE;QAChB,IAAI,CAACC,eAAe,CAACD,YAAY,CAAC;MACpC;IACF,CAAC;IAEDE,UAAU,EAAE;MACV;MACAF,YAAY,EAAE;QACZG,KAAK,EAAE,6BAA6B;QACpC;QACA;QACAC,IAAI,EAAE,IAAIhB,EAAE,CAACiB,IAAI,CAACC,MAAM,CAACC,YAAY;MACvC,CAAC;MAED;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZL,IAAI,EAAE;MACR;IACF,CAAC;IAEDM,OAAO,EAAE;MACP;MACAC,UAAU,sBAACC,KAAK,EAAEC,MAAM,EAAE;QACxB,OAAOD,KAAK,KAAK,IAAI,GAAG,IAAI,CAACE,eAAe,EAAE,CAACR,MAAM,CAACM,KAAK,CAAC,GAAG,EAAE;MACnE;IACF;EACF,CAAC,CAAC;EA7DFxB,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,IAAI,CAACkB,MAAM,CAACxB,aAAa,GAAGA,aAAa;AAAC"
}