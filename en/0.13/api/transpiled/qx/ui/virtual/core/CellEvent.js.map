{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Pointer",
    "properties",
    "row",
    "check",
    "nullable",
    "column",
    "members",
    "init",
    "scroller",
    "me",
    "clone",
    "setBubbles",
    "setRow",
    "setColumn",
    "ui",
    "virtual",
    "core",
    "CellEvent"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/core/CellEvent.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * David Perez Carmona (david-perez)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A cell event instance contains all data for pointer events related to cells in\r\n * a pane.\r\n **/\r\nqx.Class.define(\"qx.ui.virtual.core.CellEvent\", {\r\n  extend: qx.event.type.Pointer,\r\n\r\n  properties: {\r\n    /** The table row of the event target. */\r\n    row: {\r\n      check: \"Integer\",\r\n      nullable: true\r\n    },\r\n\r\n    /** The table column of the event target. */\r\n    column: {\r\n      check: \"Integer\",\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Initialize the event.\r\n     *\r\n     * @param scroller {qx.ui.table.pane.Scroller} The tables pane scroller.\r\n     * @param me {qx.event.type.Pointer} The original pointer event.\r\n     * @param row {Integer?null} The cell's row index.\r\n     * @param column {Integer?null} The cell's column index.\r\n     */\r\n    init(scroller, me, row, column) {\r\n      me.clone(this);\r\n      this.setBubbles(false);\r\n\r\n      this.setRow(row);\r\n      this.setColumn(column);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,8BAA8B,EAAE;IAC9CC,MAAM,EAAEN,EAAE,CAACO,KAAK,CAACC,IAAI,CAACC,OAAO;IAE7BC,UAAU,EAAE;MACV;MACAC,GAAG,EAAE;QACHC,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE;MACZ,CAAC;MAED;MACAC,MAAM,EAAE;QACNF,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE;MACZ;IACF,CAAC;IAEDE,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,WAAAA,KAACC,QAAQ,EAAEC,EAAE,EAAEP,GAAG,EAAEG,MAAM,EAAE;QAC9BI,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;QACd,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC;QAEtB,IAAI,CAACC,MAAM,CAACV,GAAG,CAAC;QAChB,IAAI,CAACW,SAAS,CAACR,MAAM,CAAC;MACxB;IACF;EACF,CAAC,CAAC;EAzDFd,EAAE,CAACuB,EAAE,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACvB,aAAa,GAAGA,aAAa;AAAC"
}