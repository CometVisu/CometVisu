{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "rowCount",
    "columnCount",
    "cellHeight",
    "cellWidth",
    "__rowConfig",
    "virtual",
    "Axis",
    "__columnConfig",
    "__scrollTop",
    "__scrollLeft",
    "__paneHeight",
    "__paneWidth",
    "__layerWindow",
    "__jobs",
    "__layerContainer",
    "container",
    "Composite",
    "setUserBounds",
    "_add",
    "__layers",
    "addListener",
    "fullUpdate",
    "_onResize",
    "addListenerOnce",
    "_onAppear",
    "_onPointerDown",
    "_onTap",
    "_onDbltap",
    "_onContextmenu",
    "events",
    "cellTap",
    "cellContextmenu",
    "cellDbltap",
    "update",
    "scrollX",
    "scrollY",
    "properties",
    "width",
    "refine",
    "init",
    "height",
    "members",
    "__dontFireUpdate",
    "__columnSizes",
    "__rowSizes",
    "__pointerDownCoords",
    "getRowConfig",
    "getColumnConfig",
    "getChildren",
    "addLayer",
    "layer",
    "push",
    "add",
    "getLayers",
    "getVisibleLayers",
    "layers",
    "i",
    "length",
    "isVisible",
    "getScrollMaxX",
    "paneSize",
    "getInnerSize",
    "Math",
    "max",
    "getTotalSize",
    "getScrollMaxY",
    "setScrollY",
    "value",
    "old",
    "_deferredUpdateScrollPosition",
    "fireDataEvent",
    "getScrollY",
    "setScrollX",
    "getScrollX",
    "getScrollSize",
    "scrollRowIntoView",
    "row",
    "bounds",
    "getBounds",
    "event",
    "Timer",
    "once",
    "itemTop",
    "getItemPosition",
    "itemBottom",
    "getItemSize",
    "scrollTop",
    "scrollColumnIntoView",
    "column",
    "itemLeft",
    "itemRight",
    "scrollLeft",
    "scrollCellIntoView",
    "getCellAtPosition",
    "documentX",
    "documentY",
    "rowData",
    "columnData",
    "paneLocation",
    "getContentLocation",
    "top",
    "bottom",
    "left",
    "right",
    "getItemAtPosition",
    "index",
    "prefetchX",
    "minLeft",
    "maxLeft",
    "minRight",
    "maxRight",
    "paneRight",
    "rightAvailable",
    "min",
    "_setLayerWindow",
    "prefetchY",
    "minAbove",
    "maxAbove",
    "minBelow",
    "maxBelow",
    "paneBottom",
    "belowAvailable",
    "above",
    "below",
    "getContentElement",
    "getDomElement",
    "_updateScrollPosition",
    "fireEvent",
    "e",
    "getDocumentLeft",
    "getDocumentTop",
    "__handlePointerCellEvent",
    "_checkScrollBounds",
    "maxx",
    "maxy",
    "cellEventType",
    "coords",
    "pointerDownCoords",
    "fireNonBubblingEvent",
    "CellEvent",
    "syncWidget",
    "jobs",
    "_fullUpdate",
    "minWidth",
    "minHeight",
    "doFullUpdate",
    "rowCellData",
    "firstRow",
    "rowSizes",
    "getItemSizes",
    "offset",
    "layerHeight",
    "lang",
    "Array",
    "sum",
    "layerTop",
    "layerBottom",
    "columnCellData",
    "firstColumn",
    "columnSizes",
    "layerWidth",
    "layerLeft",
    "layerRight",
    "getPaddingLeft",
    "getPaddingTop",
    "updateLayerWindow",
    "__checkPaneResize",
    "scrollSize",
    "queue",
    "isUpdatePending",
    "paneWindow",
    "destruct",
    "_disposeArray",
    "_disposeObjects",
    "Pane"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/core/Pane.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The Pane provides a window of a larger virtual grid.\n *\n * The actual rendering is performed by one or several layers ({@link ILayer}.\n * The pane computes, which cells of the virtual area is visible and instructs\n * the layers to render these cells.\n */\nqx.Class.define(\"qx.ui.virtual.core.Pane\", {\n  extend: qx.ui.core.Widget,\n\n  /**\n   * @param rowCount {Integer?0} The number of rows of the virtual grid.\n   * @param columnCount {Integer?0} The number of columns of the virtual grid.\n   * @param cellHeight {Integer?10} The default cell height.\n   * @param cellWidth {Integer?10} The default cell width.\n   */\n  construct(rowCount, columnCount, cellHeight, cellWidth) {\n    super();\n\n    this.__rowConfig = new qx.ui.virtual.core.Axis(cellHeight, rowCount);\n    this.__columnConfig = new qx.ui.virtual.core.Axis(cellWidth, columnCount);\n\n    this.__scrollTop = 0;\n    this.__scrollLeft = 0;\n\n    this.__paneHeight = 0;\n    this.__paneWidth = 0;\n\n    this.__layerWindow = {};\n    this.__jobs = {};\n\n    // create layer container. The container does not have a layout manager\n    // layers are positioned using \"setUserBounds\"\n    this.__layerContainer = new qx.ui.container.Composite();\n    this.__layerContainer.setUserBounds(0, 0, 0, 0);\n    this._add(this.__layerContainer);\n\n    this.__layers = [];\n\n    this.__rowConfig.addListener(\"change\", this.fullUpdate, this);\n    this.__columnConfig.addListener(\"change\", this.fullUpdate, this);\n\n    this.addListener(\"resize\", this._onResize, this);\n    this.addListenerOnce(\"appear\", this._onAppear, this);\n\n    this.addListener(\"pointerdown\", this._onPointerDown, this);\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"dbltap\", this._onDbltap, this);\n    this.addListener(\"contextmenu\", this._onContextmenu, this);\n  },\n\n  events: {\n    /** Fired if a cell is tapped. */\n    cellTap: \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired if a cell is right-clicked. */\n    cellContextmenu: \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired if a cell is double-tapped. */\n    cellDbltap: \"qx.ui.virtual.core.CellEvent\",\n\n    /** Fired on resize of either the container or the (virtual) content. */\n    update: \"qx.event.type.Event\",\n\n    /** Fired if the pane is scrolled horizontally. */\n    scrollX: \"qx.event.type.Data\",\n\n    /** Fired if the pane is scrolled vertically. */\n    scrollY: \"qx.event.type.Data\"\n  },\n\n  properties: {\n    // overridden\n    width: {\n      refine: true,\n      init: 400\n    },\n\n    // overridden\n    height: {\n      refine: true,\n      init: 300\n    }\n  },\n\n  members: {\n    __rowConfig: null,\n    __columnConfig: null,\n    __scrollTop: null,\n    __scrollLeft: null,\n    __paneHeight: null,\n    __paneWidth: null,\n    __layerWindow: null,\n    __jobs: null,\n    __layerContainer: null,\n    __layers: null,\n    __dontFireUpdate: null,\n    __columnSizes: null,\n    __rowSizes: null,\n    __pointerDownCoords: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      ACCESSOR METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the axis object, which defines the row numbers and the row sizes.\n     *\n     * @return {qx.ui.virtual.core.Axis} The row configuration.\n     */\n    getRowConfig() {\n      return this.__rowConfig;\n    },\n\n    /**\n     * Get the axis object, which defines the column numbers and the column sizes.\n     *\n     * @return {qx.ui.virtual.core.Axis} The column configuration.\n     */\n    getColumnConfig() {\n      return this.__columnConfig;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYER MANAGEMENT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns an array containing the layer container.\n     *\n     * @return {Object[]} The layer container array.\n     */\n    getChildren() {\n      return [this.__layerContainer];\n    },\n\n    /**\n     * Add a layer to the layer container.\n     *\n     * @param layer {qx.ui.virtual.core.ILayer} The layer to add.\n     */\n    addLayer(layer) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInterface(layer, qx.ui.virtual.core.ILayer);\n      }\n\n      this.__layers.push(layer);\n      layer.setUserBounds(0, 0, 0, 0);\n      this.__layerContainer.add(layer);\n    },\n\n    /**\n     * Get a list of all layers.\n     *\n     * @return {qx.ui.virtual.core.ILayer[]} List of the pane's layers.\n     */\n    getLayers() {\n      return this.__layers;\n    },\n\n    /**\n     * Get a list of all visible layers.\n     *\n     * @return {qx.ui.virtual.core.ILayer[]} List of the pane's visible layers.\n     */\n    getVisibleLayers() {\n      var layers = [];\n      for (var i = 0; i < this.__layers.length; i++) {\n        var layer = this.__layers[i];\n        if (layer.isVisible()) {\n          layers.push(layer);\n        }\n      }\n      return layers;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The maximum horizontal scroll position.\n     *\n     * @return {Integer} Maximum horizontal scroll position.\n     */\n    getScrollMaxX() {\n      var paneSize = this.getInnerSize();\n\n      if (paneSize) {\n        return Math.max(0, this.__columnConfig.getTotalSize() - paneSize.width);\n      }\n\n      return 0;\n    },\n\n    /**\n     * The maximum vertical scroll position.\n     *\n     * @return {Integer} Maximum vertical scroll position.\n     */\n    getScrollMaxY() {\n      var paneSize = this.getInnerSize();\n\n      if (paneSize) {\n        return Math.max(0, this.__rowConfig.getTotalSize() - paneSize.height);\n      }\n\n      return 0;\n    },\n\n    /**\n     * Scrolls the content to the given left coordinate.\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     */\n    setScrollY(value) {\n      var max = this.getScrollMaxY();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      if (this.__scrollTop !== value) {\n        var old = this.__scrollTop;\n        this.__scrollTop = value;\n        this._deferredUpdateScrollPosition();\n        this.fireDataEvent(\"scrollY\", value, old);\n      }\n    },\n\n    /**\n     * Returns the vertical scroll offset.\n     *\n     * @return {Integer} The vertical scroll offset.\n     */\n    getScrollY() {\n      return this.__scrollTop;\n    },\n\n    /**\n     * Scrolls the content to the given top coordinate.\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     */\n    setScrollX(value) {\n      var max = this.getScrollMaxX();\n\n      if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n\n      if (value !== this.__scrollLeft) {\n        var old = this.__scrollLeft;\n        this.__scrollLeft = value;\n        this._deferredUpdateScrollPosition();\n\n        this.fireDataEvent(\"scrollX\", value, old);\n      }\n    },\n\n    /**\n     * Returns the horizontal scroll offset.\n     *\n     * @return {Integer} The horizontal scroll offset.\n     */\n    getScrollX() {\n      return this.__scrollLeft;\n    },\n\n    /**\n     * The (virtual) size of the content.\n     *\n     * @return {Map} Size of the content (keys: <code>width</code> and\n     *     <code>height</code>).\n     */\n    getScrollSize() {\n      return {\n        width: this.__columnConfig.getTotalSize(),\n        height: this.__rowConfig.getTotalSize()\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL INTO VIEW SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls a row into the visible area of the pane.\n     *\n     * @param row {Integer} The row's index.\n     */\n    scrollRowIntoView(row) {\n      var bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce(\"appear\", () => {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(\n            function () {\n              this.scrollRowIntoView(row);\n            },\n            this,\n            0\n          );\n        });\n\n        return;\n      }\n\n      var itemTop = this.__rowConfig.getItemPosition(row);\n      var itemBottom = itemTop + this.__rowConfig.getItemSize(row);\n      var scrollTop = this.getScrollY();\n\n      if (itemTop < scrollTop) {\n        this.setScrollY(itemTop);\n      } else if (itemBottom > scrollTop + bounds.height) {\n        this.setScrollY(itemBottom - bounds.height);\n      }\n    },\n\n    /**\n     * Scrolls a column into the visible area of the pane.\n     *\n     * @param column {Integer} The column's index.\n     */\n    scrollColumnIntoView(column) {\n      var bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce(\"appear\", () => {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(\n            function () {\n              this.scrollColumnIntoView(column);\n            },\n            this,\n            0\n          );\n        });\n\n        return;\n      }\n\n      var itemLeft = this.__columnConfig.getItemPosition(column);\n      var itemRight = itemLeft + this.__columnConfig.getItemSize(column);\n      var scrollLeft = this.getScrollX();\n\n      if (itemLeft < scrollLeft) {\n        this.setScrollX(itemLeft);\n      } else if (itemRight > scrollLeft + bounds.width) {\n        this.setScrollX(itemRight - bounds.width);\n      }\n    },\n\n    /**\n     * Scrolls a grid cell into the visible area of the pane.\n     *\n     * @param row {Integer} The cell's row index.\n     * @param column {Integer} The cell's column index.\n     */\n    scrollCellIntoView(column, row) {\n      var bounds = this.getBounds();\n      if (!bounds) {\n        this.addListenerOnce(\"appear\", () => {\n          // It's important that the registered events are first dispatched.\n          qx.event.Timer.once(\n            function () {\n              this.scrollCellIntoView(column, row);\n            },\n            this,\n            0\n          );\n        });\n\n        return;\n      }\n\n      this.scrollColumnIntoView(column);\n      this.scrollRowIntoView(row);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CELL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the grid cell at the given absolute document coordinates. This method\n     * can be used to convert the pointer position returned by\n     * {@link qx.event.type.Pointer#getDocumentLeft} and\n     * {@link qx.event.type.Pointer#getDocumentLeft} into cell coordinates.\n     *\n     * @param documentX {Integer} The x coordinate relative to the viewport\n     *    origin.\n     * @param documentY {Integer} The y coordinate relative to the viewport\n     *    origin.\n     * @return {Map|null} A map containing the <code>row</code> and <code>column</code>\n     *    of the found cell. If the coordinate is outside of the pane's bounds\n     *    or there is no cell at the coordinate <code>null</code> is returned.\n     */\n    getCellAtPosition(documentX, documentY) {\n      var rowData, columnData;\n      var paneLocation = this.getContentLocation();\n\n      if (\n        !paneLocation ||\n        documentY < paneLocation.top ||\n        documentY >= paneLocation.bottom ||\n        documentX < paneLocation.left ||\n        documentX >= paneLocation.right\n      ) {\n        return null;\n      }\n\n      rowData = this.__rowConfig.getItemAtPosition(\n        this.getScrollY() + documentY - paneLocation.top\n      );\n\n      columnData = this.__columnConfig.getItemAtPosition(\n        this.getScrollX() + documentX - paneLocation.left\n      );\n\n      if (!rowData || !columnData) {\n        return null;\n      }\n\n      return {\n        row: rowData.index,\n        column: columnData.index\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PREFETCH SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Increase the layers width beyond the needed width to improve\n     * horizontal scrolling. The layers are only resized if invisible parts\n     * left/right of the pane window are smaller than minLeft/minRight.\n     *\n     * @param minLeft {Integer} Only prefetch if the invisible part left of the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxLeft {Integer} The amount of pixel the layers should reach\n     *    left of the pane window.\n     * @param minRight {Integer} Only prefetch if the invisible part right of the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxRight {Integer} The amount of pixel the layers should reach\n     *    right of the pane window.\n     */\n    prefetchX(minLeft, maxLeft, minRight, maxRight) {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return;\n      }\n\n      var paneRight = this.__scrollLeft + bounds.width;\n      var rightAvailable = this.__paneWidth - paneRight;\n      if (\n        this.__scrollLeft - this.__layerWindow.left <\n          Math.min(this.__scrollLeft, minLeft) ||\n        this.__layerWindow.right - paneRight <\n          Math.min(rightAvailable, minRight)\n      ) {\n        var left = Math.min(this.__scrollLeft, maxLeft);\n        var right = Math.min(rightAvailable, maxRight);\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft - left,\n          this.__scrollTop,\n          bounds.width + left + right,\n          bounds.height,\n          false\n        );\n      }\n    },\n\n    /**\n     * Increase the layers height beyond the needed height to improve\n     * vertical scrolling. The layers are only resized if invisible parts\n     * above/below the pane window are smaller than minAbove/minBelow.\n     *\n     * @param minAbove {Integer} Only prefetch if the invisible part above the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxAbove {Integer} The amount of pixel the layers should reach\n     *    above the pane window.\n     * @param minBelow {Integer} Only prefetch if the invisible part below the\n     *    pane window if smaller than this (pixel) value.\n     * @param maxBelow {Integer} The amount of pixel the layers should reach\n     *    below the pane window.\n     */\n    prefetchY(minAbove, maxAbove, minBelow, maxBelow) {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return;\n      }\n\n      var paneBottom = this.__scrollTop + bounds.height;\n      var belowAvailable = this.__paneHeight - paneBottom;\n      if (\n        this.__scrollTop - this.__layerWindow.top <\n          Math.min(this.__scrollTop, minAbove) ||\n        this.__layerWindow.bottom - paneBottom <\n          Math.min(belowAvailable, minBelow)\n      ) {\n        var above = Math.min(this.__scrollTop, maxAbove);\n        var below = Math.min(belowAvailable, maxBelow);\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft,\n          this.__scrollTop - above,\n          bounds.width,\n          bounds.height + above + below,\n          false\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Resize event handler.\n     *\n     * Updates the visible window.\n     */\n    _onResize() {\n      if (this.getContentElement().getDomElement()) {\n        this.__dontFireUpdate = true;\n        this._updateScrollPosition();\n        this.__dontFireUpdate = null;\n        this.fireEvent(\"update\");\n      }\n    },\n\n    /**\n     * Resize event handler. Do a full update on first appear.\n     */\n    _onAppear() {\n      this.fullUpdate();\n    },\n\n    /**\n     * Event listener for pointer down. Remembers cell position to prevent pointer event when cell position change.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onPointerDown(e) {\n      this.__pointerDownCoords = this.getCellAtPosition(\n        e.getDocumentLeft(),\n        e.getDocumentTop()\n      );\n    },\n\n    /**\n     * Event listener for pointer taps. Fires an cellTap event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onTap(e) {\n      this.__handlePointerCellEvent(e, \"cellTap\");\n    },\n\n    /**\n     * Event listener for context menu taps. Fires an cellContextmenu event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onContextmenu(e) {\n      this.__handlePointerCellEvent(e, \"cellContextmenu\");\n    },\n\n    /**\n     * Event listener for double taps. Fires an cellDbltap event.\n     *\n     * @param e {qx.event.type.Pointer} The incoming pointer event.\n     */\n    _onDbltap(e) {\n      this.__handlePointerCellEvent(e, \"cellDbltap\");\n    },\n\n    /**\n     * Fixed scrollbar position whenever it is out of range\n     * it can happen when removing an item from the list reducing\n     * the max value for scrollY #8976\n     */\n    _checkScrollBounds() {\n      var maxx = this.getScrollMaxX();\n      var maxy = this.getScrollMaxY();\n      if (this.__scrollLeft < 0) {\n        this.__scrollLeft = 0;\n      } else if (this.__scrollLeft > maxx) {\n        this.__scrollLeft = maxx;\n      }\n      if (this.__scrollTop < 0) {\n        this.__scrollTop = 0;\n      } else if (this.__scrollTop > maxy) {\n        this.__scrollTop = maxy;\n      }\n    },\n\n    /**\n     * Converts a pointer event into a cell event and fires the cell event if the\n     * pointer is over a cell.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event.\n     * @param cellEventType {String} The name of the cell event to fire.\n     */\n    __handlePointerCellEvent(e, cellEventType) {\n      var coords = this.getCellAtPosition(\n        e.getDocumentLeft(),\n        e.getDocumentTop()\n      );\n\n      if (!coords) {\n        return;\n      }\n\n      var pointerDownCoords = this.__pointerDownCoords;\n      if (\n        pointerDownCoords == null ||\n        pointerDownCoords.row !== coords.row ||\n        pointerDownCoords.column !== coords.column\n      ) {\n        return;\n      }\n\n      this.fireNonBubblingEvent(cellEventType, qx.ui.virtual.core.CellEvent, [\n        this,\n        e,\n        coords.row,\n        coords.column\n      ]);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PANE UPDATE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    syncWidget(jobs) {\n      if (this.__jobs._fullUpdate) {\n        this._checkScrollBounds();\n        this._fullUpdate();\n      } else if (this.__jobs._updateScrollPosition) {\n        this._checkScrollBounds();\n        this._updateScrollPosition();\n      }\n      this.__jobs = {};\n    },\n\n    /**\n     * Sets the size of the layers to contain the cells at the pixel position\n     * \"left/right\" up to \"left+minHeight/right+minHeight\". The offset of the\n     * layer container is adjusted to respect the pane's scroll top and scroll\n     * left values.\n     *\n     * @param layers {qx.ui.virtual.core.ILayer[]} List of layers to update.\n     * @param left {Integer} Maximum left pixel coordinate of the layers.\n     * @param top {Integer} Maximum top pixel coordinate of the layers.\n     * @param minWidth {Integer} The minimum end coordinate of the layers will\n     *    be larger than <code>left+minWidth</code>.\n     * @param minHeight {Integer} The minimum end coordinate of the layers will\n     *    be larger than <code>top+minHeight</code>.\n     * @param doFullUpdate {Boolean?false} Whether a full update on the layer\n     *    should be performed of if only the layer window should be updated.\n     */\n    _setLayerWindow(layers, left, top, minWidth, minHeight, doFullUpdate) {\n      var rowCellData = this.__rowConfig.getItemAtPosition(top);\n      if (rowCellData) {\n        var firstRow = rowCellData.index;\n        var rowSizes = this.__rowConfig.getItemSizes(\n          firstRow,\n          minHeight + rowCellData.offset\n        );\n\n        var layerHeight = qx.lang.Array.sum(rowSizes);\n        var layerTop = top - rowCellData.offset;\n        var layerBottom = top - rowCellData.offset + layerHeight;\n      } else {\n        var firstRow = 0;\n        var rowSizes = [];\n        var layerHeight = 0;\n        var layerTop = 0;\n        var layerBottom = 0;\n      }\n\n      var columnCellData = this.__columnConfig.getItemAtPosition(left);\n      if (columnCellData) {\n        var firstColumn = columnCellData.index;\n        var columnSizes = this.__columnConfig.getItemSizes(\n          firstColumn,\n          minWidth + columnCellData.offset\n        );\n\n        var layerWidth = qx.lang.Array.sum(columnSizes);\n        var layerLeft = left - columnCellData.offset;\n        var layerRight = left - columnCellData.offset + layerWidth;\n      } else {\n        var firstColumn = 0;\n        var columnSizes = [];\n        var layerWidth = 0;\n        var layerLeft = 0;\n        var layerRight = 0;\n      }\n\n      this.__layerWindow = {\n        top: layerTop,\n        bottom: layerBottom,\n        left: layerLeft,\n        right: layerRight\n      };\n\n      this.__layerContainer.setUserBounds(\n        (this.getPaddingLeft() || 0) +\n          (this.__layerWindow.left - this.__scrollLeft),\n        (this.getPaddingTop() || 0) +\n          (this.__layerWindow.top - this.__scrollTop),\n        layerWidth,\n        layerHeight\n      );\n\n      this.__columnSizes = columnSizes;\n      this.__rowSizes = rowSizes;\n\n      for (var i = 0; i < this.__layers.length; i++) {\n        var layer = this.__layers[i];\n        layer.setUserBounds(0, 0, layerWidth, layerHeight);\n\n        if (doFullUpdate) {\n          layer.fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n        } else {\n          layer.updateLayerWindow(firstRow, firstColumn, rowSizes, columnSizes);\n        }\n      }\n    },\n\n    /**\n     * Check whether the pane was resized and fire an {@link #update} event if\n     * it was.\n     */\n    __checkPaneResize() {\n      if (this.__dontFireUpdate) {\n        return;\n      }\n\n      var scrollSize = this.getScrollSize();\n      if (\n        this.__paneHeight !== scrollSize.height ||\n        this.__paneWidth !== scrollSize.width\n      ) {\n        this.__paneHeight = scrollSize.height;\n        this.__paneWidth = scrollSize.width;\n        this.fireEvent(\"update\");\n      }\n    },\n\n    /**\n     * Schedule a full update on all visible layers.\n     */\n    fullUpdate() {\n      this.__jobs._fullUpdate = 1;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * Whether a full update is scheduled.\n     *\n     * @return {Boolean} Whether a full update is scheduled.\n     */\n    isUpdatePending() {\n      return !!this.__jobs._fullUpdate;\n    },\n\n    /**\n     * Perform a full update on all visible layers. All cached data will be\n     * discarded.\n     */\n    _fullUpdate() {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        this.__checkPaneResize();\n        return;\n      }\n\n      var bounds = this.getBounds();\n\n      if (!bounds) {\n        return; // the pane has not yet been rendered -> wait for the appear event\n      }\n\n      this._setLayerWindow(\n        layers,\n        this.__scrollLeft,\n        this.__scrollTop,\n        bounds.width,\n        bounds.height,\n        true\n      );\n\n      this.__checkPaneResize();\n    },\n\n    /**\n     * Schedule an update the visible window of the grid according to the top\n     * and left scroll positions.\n     */\n    _deferredUpdateScrollPosition() {\n      this.__jobs._updateScrollPosition = 1;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * Update the visible window of the grid according to the top and left scroll\n     * positions.\n     */\n    _updateScrollPosition() {\n      var layers = this.getVisibleLayers();\n      if (layers.length == 0) {\n        this.__checkPaneResize();\n        return;\n      }\n\n      var bounds = this.getBounds();\n      if (!bounds) {\n        return; // the pane has not yet been rendered -> wait for the appear event\n      }\n\n      // the visible window of the virtual coordinate space\n      var paneWindow = {\n        top: this.__scrollTop,\n        bottom: this.__scrollTop + bounds.height,\n        left: this.__scrollLeft,\n        right: this.__scrollLeft + bounds.width\n      };\n\n      if (\n        this.__layerWindow.top <= paneWindow.top &&\n        this.__layerWindow.bottom >= paneWindow.bottom &&\n        this.__layerWindow.left <= paneWindow.left &&\n        this.__layerWindow.right >= paneWindow.right\n      ) {\n        // only update layer container offset\n        this.__layerContainer.setUserBounds(\n          (this.getPaddingLeft() || 0) +\n            (this.__layerWindow.left - paneWindow.left),\n          (this.getPaddingTop() || 0) +\n            (this.__layerWindow.top - paneWindow.top),\n          this.__layerWindow.right - this.__layerWindow.left,\n          this.__layerWindow.bottom - this.__layerWindow.top\n        );\n      } else {\n        this._setLayerWindow(\n          layers,\n          this.__scrollLeft,\n          this.__scrollTop,\n          bounds.width,\n          bounds.height,\n          false\n        );\n      }\n\n      this.__checkPaneResize();\n    }\n  },\n\n  destruct() {\n    this._disposeArray(\"__layers\");\n    this._disposeObjects(\"__rowConfig\", \"__columnConfig\", \"__layerContainer\");\n    this.__layerWindow =\n      this.__jobs =\n      this.__columnSizes =\n      this.__rowSizes =\n        null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,MAAM;IAEzB;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,qBAACC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAE;MACtD;MAEA,IAAI,CAACC,SAAW,GAAG,IAAIf,EAAE,CAACO,EAAE,CAACS,OAAO,CAACR,IAAI,CAACS,IAAI,CAACJ,UAAU,EAAEF,QAAQ,CAAC;MACpE,IAAI,CAACO,SAAc,GAAG,IAAIlB,EAAE,CAACO,EAAE,CAACS,OAAO,CAACR,IAAI,CAACS,IAAI,CAACH,SAAS,EAAEF,WAAW,CAAC;MAEzE,IAAI,CAACO,SAAW,GAAG,CAAC;MACpB,IAAI,CAACC,SAAY,GAAG,CAAC;MAErB,IAAI,CAACC,SAAY,GAAG,CAAC;MACrB,IAAI,CAACC,SAAW,GAAG,CAAC;MAEpB,IAAI,CAACC,SAAa,GAAG,CAAC,CAAC;MACvB,IAAI,CAACC,SAAM,GAAG,CAAC,CAAC;;MAEhB;MACA;MACA,IAAI,CAACC,SAAgB,GAAG,IAAIzB,EAAE,CAACO,EAAE,CAACmB,SAAS,CAACC,SAAS,EAAE;MACvD,IAAI,CAACF,SAAgB,CAACG,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/C,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,SAAgB,CAAC;MAEhC,IAAI,CAACK,SAAQ,GAAG,EAAE;MAElB,IAAI,CAACf,SAAW,CAACgB,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;MAC7D,IAAI,CAACd,SAAc,CAACa,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;MAEhE,IAAI,CAACD,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACE,SAAS,EAAE,IAAI,CAAC;MAChD,IAAI,CAACC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;MAEpD,IAAI,CAACJ,WAAW,CAAC,aAAa,EAAE,IAAI,CAACK,cAAc,EAAE,IAAI,CAAC;MAC1D,IAAI,CAACL,WAAW,CAAC,KAAK,EAAE,IAAI,CAACM,MAAM,EAAE,IAAI,CAAC;MAC1C,IAAI,CAACN,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACO,SAAS,EAAE,IAAI,CAAC;MAChD,IAAI,CAACP,WAAW,CAAC,aAAa,EAAE,IAAI,CAACQ,cAAc,EAAE,IAAI,CAAC;IAC5D,CAAC;IAEDC,MAAM,EAAE;MACN;MACAC,OAAO,EAAE,8BAA8B;MAEvC;MACAC,eAAe,EAAE,8BAA8B;MAE/C;MACAC,UAAU,EAAE,8BAA8B;MAE1C;MACAC,MAAM,EAAE,qBAAqB;MAE7B;MACAC,OAAO,EAAE,oBAAoB;MAE7B;MACAC,OAAO,EAAE;IACX,CAAC;IAEDC,UAAU,EAAE;MACV;MACAC,KAAK,EAAE;QACLC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAC,MAAM,EAAE;QACNF,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR;IACF,CAAC;IAEDE,OAAO,EAAE;MACPrC,SAAW,EAAE,IAAI;MACjBG,SAAc,EAAE,IAAI;MACpBC,SAAW,EAAE,IAAI;MACjBC,SAAY,EAAE,IAAI;MAClBC,SAAY,EAAE,IAAI;MAClBC,SAAW,EAAE,IAAI;MACjBC,SAAa,EAAE,IAAI;MACnBC,SAAM,EAAE,IAAI;MACZC,SAAgB,EAAE,IAAI;MACtBK,SAAQ,EAAE,IAAI;MACduB,UAAgB,EAAE,IAAI;MACtBC,UAAa,EAAE,IAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,UAAmB,EAAE,IAAI;MAEzB;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIC,YAAY,0BAAG;QACb,OAAO,IAAI,CAAC1C,SAAW;MACzB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI2C,eAAe,6BAAG;QAChB,OAAO,IAAI,CAACxC,SAAc;MAC5B,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIyC,WAAW,yBAAG;QACZ,OAAO,CAAC,IAAI,CAAClC,SAAgB,CAAC;MAChC,CAAC;MAED;AACJ;AACA;AACA;AACA;MACImC,QAAQ,oBAACC,KAAK,EAAE;QAKd,IAAI,CAAC/B,SAAQ,CAACgC,IAAI,CAACD,KAAK,CAAC;QACzBA,KAAK,CAACjC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAACH,SAAgB,CAACsC,GAAG,CAACF,KAAK,CAAC;MAClC,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,SAAS,uBAAG;QACV,OAAO,IAAI,CAAClC,SAAQ;MACtB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACImC,gBAAgB,8BAAG;QACjB,IAAIC,MAAM,GAAG,EAAE;QACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrC,SAAQ,CAACsC,MAAM,EAAED,CAAC,EAAE,EAAE;UAC7C,IAAIN,KAAK,GAAG,IAAI,CAAC/B,SAAQ,CAACqC,CAAC,CAAC;UAC5B,IAAIN,KAAK,CAACQ,SAAS,EAAE,EAAE;YACrBH,MAAM,CAACJ,IAAI,CAACD,KAAK,CAAC;UACpB;QACF;QACA,OAAOK,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACII,aAAa,2BAAG;QACd,IAAIC,QAAQ,GAAG,IAAI,CAACC,YAAY,EAAE;QAElC,IAAID,QAAQ,EAAE;UACZ,OAAOE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACxD,SAAc,CAACyD,YAAY,EAAE,GAAGJ,QAAQ,CAACvB,KAAK,CAAC;QACzE;QAEA,OAAO,CAAC;MACV,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI4B,aAAa,2BAAG;QACd,IAAIL,QAAQ,GAAG,IAAI,CAACC,YAAY,EAAE;QAElC,IAAID,QAAQ,EAAE;UACZ,OAAOE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC3D,SAAW,CAAC4D,YAAY,EAAE,GAAGJ,QAAQ,CAACpB,MAAM,CAAC;QACvE;QAEA,OAAO,CAAC;MACV,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI0B,UAAU,sBAACC,KAAK,EAAE;QAChB,IAAIJ,GAAG,GAAG,IAAI,CAACE,aAAa,EAAE;QAE9B,IAAIE,KAAK,GAAG,CAAC,EAAE;UACbA,KAAK,GAAG,CAAC;QACX,CAAC,MAAM,IAAIA,KAAK,GAAGJ,GAAG,EAAE;UACtBI,KAAK,GAAGJ,GAAG;QACb;QAEA,IAAI,IAAI,CAACvD,SAAW,KAAK2D,KAAK,EAAE;UAC9B,IAAIC,GAAG,GAAG,IAAI,CAAC5D,SAAW;UAC1B,IAAI,CAACA,SAAW,GAAG2D,KAAK;UACxB,IAAI,CAACE,6BAA6B,EAAE;UACpC,IAAI,CAACC,aAAa,CAAC,SAAS,EAAEH,KAAK,EAAEC,GAAG,CAAC;QAC3C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,UAAU,wBAAG;QACX,OAAO,IAAI,CAAC/D,SAAW;MACzB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIgE,UAAU,sBAACL,KAAK,EAAE;QAChB,IAAIJ,GAAG,GAAG,IAAI,CAACJ,aAAa,EAAE;QAE9B,IAAIQ,KAAK,GAAG,CAAC,EAAE;UACbA,KAAK,GAAG,CAAC;QACX,CAAC,MAAM,IAAIA,KAAK,GAAGJ,GAAG,EAAE;UACtBI,KAAK,GAAGJ,GAAG;QACb;QAEA,IAAII,KAAK,KAAK,IAAI,CAAC1D,SAAY,EAAE;UAC/B,IAAI2D,GAAG,GAAG,IAAI,CAAC3D,SAAY;UAC3B,IAAI,CAACA,SAAY,GAAG0D,KAAK;UACzB,IAAI,CAACE,6BAA6B,EAAE;UAEpC,IAAI,CAACC,aAAa,CAAC,SAAS,EAAEH,KAAK,EAAEC,GAAG,CAAC;QAC3C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIK,UAAU,wBAAG;QACX,OAAO,IAAI,CAAChE,SAAY;MAC1B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIiE,aAAa,2BAAG;QACd,OAAO;UACLrC,KAAK,EAAE,IAAI,CAAC9B,SAAc,CAACyD,YAAY,EAAE;UACzCxB,MAAM,EAAE,IAAI,CAACpC,SAAW,CAAC4D,YAAY;QACvC,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIW,iBAAiB,6BAACC,GAAG,EAAE;QAAA;QACrB,IAAIC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX,IAAI,CAACtD,eAAe,CAAC,QAAQ,EAAE,YAAM;YACnC;YACAlC,EAAE,CAAC0F,KAAK,CAACC,KAAK,CAACC,IAAI,CACjB,YAAY;cACV,IAAI,CAACN,iBAAiB,CAACC,GAAG,CAAC;YAC7B,CAAC,EACD,KAAI,EACJ,CAAC,CACF;UACH,CAAC,CAAC;UAEF;QACF;QAEA,IAAIM,OAAO,GAAG,IAAI,CAAC9E,SAAW,CAAC+E,eAAe,CAACP,GAAG,CAAC;QACnD,IAAIQ,UAAU,GAAGF,OAAO,GAAG,IAAI,CAAC9E,SAAW,CAACiF,WAAW,CAACT,GAAG,CAAC;QAC5D,IAAIU,SAAS,GAAG,IAAI,CAACf,UAAU,EAAE;QAEjC,IAAIW,OAAO,GAAGI,SAAS,EAAE;UACvB,IAAI,CAACpB,UAAU,CAACgB,OAAO,CAAC;QAC1B,CAAC,MAAM,IAAIE,UAAU,GAAGE,SAAS,GAAGT,MAAM,CAACrC,MAAM,EAAE;UACjD,IAAI,CAAC0B,UAAU,CAACkB,UAAU,GAAGP,MAAM,CAACrC,MAAM,CAAC;QAC7C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACI+C,oBAAoB,gCAACC,MAAM,EAAE;QAAA;QAC3B,IAAIX,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX,IAAI,CAACtD,eAAe,CAAC,QAAQ,EAAE,YAAM;YACnC;YACAlC,EAAE,CAAC0F,KAAK,CAACC,KAAK,CAACC,IAAI,CACjB,YAAY;cACV,IAAI,CAACM,oBAAoB,CAACC,MAAM,CAAC;YACnC,CAAC,EACD,MAAI,EACJ,CAAC,CACF;UACH,CAAC,CAAC;UAEF;QACF;QAEA,IAAIC,QAAQ,GAAG,IAAI,CAAClF,SAAc,CAAC4E,eAAe,CAACK,MAAM,CAAC;QAC1D,IAAIE,SAAS,GAAGD,QAAQ,GAAG,IAAI,CAAClF,SAAc,CAAC8E,WAAW,CAACG,MAAM,CAAC;QAClE,IAAIG,UAAU,GAAG,IAAI,CAAClB,UAAU,EAAE;QAElC,IAAIgB,QAAQ,GAAGE,UAAU,EAAE;UACzB,IAAI,CAACnB,UAAU,CAACiB,QAAQ,CAAC;QAC3B,CAAC,MAAM,IAAIC,SAAS,GAAGC,UAAU,GAAGd,MAAM,CAACxC,KAAK,EAAE;UAChD,IAAI,CAACmC,UAAU,CAACkB,SAAS,GAAGb,MAAM,CAACxC,KAAK,CAAC;QAC3C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIuD,kBAAkB,8BAACJ,MAAM,EAAEZ,GAAG,EAAE;QAAA;QAC9B,IAAIC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX,IAAI,CAACtD,eAAe,CAAC,QAAQ,EAAE,YAAM;YACnC;YACAlC,EAAE,CAAC0F,KAAK,CAACC,KAAK,CAACC,IAAI,CACjB,YAAY;cACV,IAAI,CAACW,kBAAkB,CAACJ,MAAM,EAAEZ,GAAG,CAAC;YACtC,CAAC,EACD,MAAI,EACJ,CAAC,CACF;UACH,CAAC,CAAC;UAEF;QACF;QAEA,IAAI,CAACW,oBAAoB,CAACC,MAAM,CAAC;QACjC,IAAI,CAACb,iBAAiB,CAACC,GAAG,CAAC;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIiB,iBAAiB,6BAACC,SAAS,EAAEC,SAAS,EAAE;QACtC,IAAIC,OAAO,EAAEC,UAAU;QACvB,IAAIC,YAAY,GAAG,IAAI,CAACC,kBAAkB,EAAE;QAE5C,IACE,CAACD,YAAY,IACbH,SAAS,GAAGG,YAAY,CAACE,GAAG,IAC5BL,SAAS,IAAIG,YAAY,CAACG,MAAM,IAChCP,SAAS,GAAGI,YAAY,CAACI,IAAI,IAC7BR,SAAS,IAAII,YAAY,CAACK,KAAK,EAC/B;UACA,OAAO,IAAI;QACb;QAEAP,OAAO,GAAG,IAAI,CAAC5F,SAAW,CAACoG,iBAAiB,CAC1C,IAAI,CAACjC,UAAU,EAAE,GAAGwB,SAAS,GAAGG,YAAY,CAACE,GAAG,CACjD;QAEDH,UAAU,GAAG,IAAI,CAAC1F,SAAc,CAACiG,iBAAiB,CAChD,IAAI,CAAC/B,UAAU,EAAE,GAAGqB,SAAS,GAAGI,YAAY,CAACI,IAAI,CAClD;QAED,IAAI,CAACN,OAAO,IAAI,CAACC,UAAU,EAAE;UAC3B,OAAO,IAAI;QACb;QAEA,OAAO;UACLrB,GAAG,EAAEoB,OAAO,CAACS,KAAK;UAClBjB,MAAM,EAAES,UAAU,CAACQ;QACrB,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,qBAACC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;QAC9C,IAAIvD,MAAM,GAAG,IAAI,CAACD,gBAAgB,EAAE;QACpC,IAAIC,MAAM,CAACE,MAAM,IAAI,CAAC,EAAE;UACtB;QACF;QAEA,IAAIoB,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX;QACF;QAEA,IAAIkC,SAAS,GAAG,IAAI,CAACtG,SAAY,GAAGoE,MAAM,CAACxC,KAAK;QAChD,IAAI2E,cAAc,GAAG,IAAI,CAACrG,SAAW,GAAGoG,SAAS;QACjD,IACE,IAAI,CAACtG,SAAY,GAAG,IAAI,CAACG,SAAa,CAAC0F,IAAI,GACzCxC,IAAI,CAACmD,GAAG,CAAC,IAAI,CAACxG,SAAY,EAAEkG,OAAO,CAAC,IACtC,IAAI,CAAC/F,SAAa,CAAC2F,KAAK,GAAGQ,SAAS,GAClCjD,IAAI,CAACmD,GAAG,CAACD,cAAc,EAAEH,QAAQ,CAAC,EACpC;UACA,IAAIP,IAAI,GAAGxC,IAAI,CAACmD,GAAG,CAAC,IAAI,CAACxG,SAAY,EAAEmG,OAAO,CAAC;UAC/C,IAAIL,KAAK,GAAGzC,IAAI,CAACmD,GAAG,CAACD,cAAc,EAAEF,QAAQ,CAAC;UAC9C,IAAI,CAACI,eAAe,CAClB3D,MAAM,EACN,IAAI,CAAC9C,SAAY,GAAG6F,IAAI,EACxB,IAAI,CAAC9F,SAAW,EAChBqE,MAAM,CAACxC,KAAK,GAAGiE,IAAI,GAAGC,KAAK,EAC3B1B,MAAM,CAACrC,MAAM,EACb,KAAK,CACN;QACH;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI2E,SAAS,qBAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;QAChD,IAAIhE,MAAM,GAAG,IAAI,CAACD,gBAAgB,EAAE;QACpC,IAAIC,MAAM,CAACE,MAAM,IAAI,CAAC,EAAE;UACtB;QACF;QAEA,IAAIoB,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX;QACF;QAEA,IAAI2C,UAAU,GAAG,IAAI,CAAChH,SAAW,GAAGqE,MAAM,CAACrC,MAAM;QACjD,IAAIiF,cAAc,GAAG,IAAI,CAAC/G,SAAY,GAAG8G,UAAU;QACnD,IACE,IAAI,CAAChH,SAAW,GAAG,IAAI,CAACI,SAAa,CAACwF,GAAG,GACvCtC,IAAI,CAACmD,GAAG,CAAC,IAAI,CAACzG,SAAW,EAAE4G,QAAQ,CAAC,IACtC,IAAI,CAACxG,SAAa,CAACyF,MAAM,GAAGmB,UAAU,GACpC1D,IAAI,CAACmD,GAAG,CAACQ,cAAc,EAAEH,QAAQ,CAAC,EACpC;UACA,IAAII,KAAK,GAAG5D,IAAI,CAACmD,GAAG,CAAC,IAAI,CAACzG,SAAW,EAAE6G,QAAQ,CAAC;UAChD,IAAIM,KAAK,GAAG7D,IAAI,CAACmD,GAAG,CAACQ,cAAc,EAAEF,QAAQ,CAAC;UAC9C,IAAI,CAACL,eAAe,CAClB3D,MAAM,EACN,IAAI,CAAC9C,SAAY,EACjB,IAAI,CAACD,SAAW,GAAGkH,KAAK,EACxB7C,MAAM,CAACxC,KAAK,EACZwC,MAAM,CAACrC,MAAM,GAAGkF,KAAK,GAAGC,KAAK,EAC7B,KAAK,CACN;QACH;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;AACJ;AACA;AACA;AACA;MACIrG,SAAS,uBAAG;QACV,IAAI,IAAI,CAACsG,iBAAiB,EAAE,CAACC,aAAa,EAAE,EAAE;UAC5C,IAAI,CAACnF,UAAgB,GAAG,IAAI;UAC5B,IAAI,CAACoF,qBAAqB,EAAE;UAC5B,IAAI,CAACpF,UAAgB,GAAG,IAAI;UAC5B,IAAI,CAACqF,SAAS,CAAC,QAAQ,CAAC;QAC1B;MACF,CAAC;MAED;AACJ;AACA;MACIvG,SAAS,uBAAG;QACV,IAAI,CAACH,UAAU,EAAE;MACnB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,cAAc,0BAACuG,CAAC,EAAE;QAChB,IAAI,CAACnF,UAAmB,GAAG,IAAI,CAACgD,iBAAiB,CAC/CmC,CAAC,CAACC,eAAe,EAAE,EACnBD,CAAC,CAACE,cAAc,EAAE,CACnB;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIxG,MAAM,kBAACsG,CAAC,EAAE;QACR,IAAI,CAACG,UAAwB,CAACH,CAAC,EAAE,SAAS,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIpG,cAAc,0BAACoG,CAAC,EAAE;QAChB,IAAI,CAACG,UAAwB,CAACH,CAAC,EAAE,iBAAiB,CAAC;MACrD,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIrG,SAAS,qBAACqG,CAAC,EAAE;QACX,IAAI,CAACG,UAAwB,CAACH,CAAC,EAAE,YAAY,CAAC;MAChD,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,kBAAkB,gCAAG;QACnB,IAAIC,IAAI,GAAG,IAAI,CAAC1E,aAAa,EAAE;QAC/B,IAAI2E,IAAI,GAAG,IAAI,CAACrE,aAAa,EAAE;QAC/B,IAAI,IAAI,CAACxD,SAAY,GAAG,CAAC,EAAE;UACzB,IAAI,CAACA,SAAY,GAAG,CAAC;QACvB,CAAC,MAAM,IAAI,IAAI,CAACA,SAAY,GAAG4H,IAAI,EAAE;UACnC,IAAI,CAAC5H,SAAY,GAAG4H,IAAI;QAC1B;QACA,IAAI,IAAI,CAAC7H,SAAW,GAAG,CAAC,EAAE;UACxB,IAAI,CAACA,SAAW,GAAG,CAAC;QACtB,CAAC,MAAM,IAAI,IAAI,CAACA,SAAW,GAAG8H,IAAI,EAAE;UAClC,IAAI,CAAC9H,SAAW,GAAG8H,IAAI;QACzB;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIH,UAAwB,sBAACH,CAAC,EAAEO,aAAa,EAAE;QACzC,IAAIC,MAAM,GAAG,IAAI,CAAC3C,iBAAiB,CACjCmC,CAAC,CAACC,eAAe,EAAE,EACnBD,CAAC,CAACE,cAAc,EAAE,CACnB;QAED,IAAI,CAACM,MAAM,EAAE;UACX;QACF;QAEA,IAAIC,iBAAiB,GAAG,IAAI,CAAC5F,UAAmB;QAChD,IACE4F,iBAAiB,IAAI,IAAI,IACzBA,iBAAiB,CAAC7D,GAAG,KAAK4D,MAAM,CAAC5D,GAAG,IACpC6D,iBAAiB,CAACjD,MAAM,KAAKgD,MAAM,CAAChD,MAAM,EAC1C;UACA;QACF;QAEA,IAAI,CAACkD,oBAAoB,CAACH,aAAa,EAAElJ,EAAE,CAACO,EAAE,CAACS,OAAO,CAACR,IAAI,CAAC8I,SAAS,EAAE,CACrE,IAAI,EACJX,CAAC,EACDQ,MAAM,CAAC5D,GAAG,EACV4D,MAAM,CAAChD,MAAM,CACd,CAAC;MACJ,CAAC;MAED;AACJ;AACA;AACA;AACA;MAEI;MACAoD,UAAU,sBAACC,IAAI,EAAE;QACf,IAAI,IAAI,CAAChI,SAAM,CAACiI,WAAW,EAAE;UAC3B,IAAI,CAACV,kBAAkB,EAAE;UACzB,IAAI,CAACU,WAAW,EAAE;QACpB,CAAC,MAAM,IAAI,IAAI,CAACjI,SAAM,CAACiH,qBAAqB,EAAE;UAC5C,IAAI,CAACM,kBAAkB,EAAE;UACzB,IAAI,CAACN,qBAAqB,EAAE;QAC9B;QACA,IAAI,CAACjH,SAAM,GAAG,CAAC,CAAC;MAClB,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIqG,eAAe,2BAAC3D,MAAM,EAAE+C,IAAI,EAAEF,GAAG,EAAE2C,QAAQ,EAAEC,SAAS,EAAEC,YAAY,EAAE;QACpE,IAAIC,WAAW,GAAG,IAAI,CAAC9I,SAAW,CAACoG,iBAAiB,CAACJ,GAAG,CAAC;QACzD,IAAI8C,WAAW,EAAE;UACf,IAAIC,QAAQ,GAAGD,WAAW,CAACzC,KAAK;UAChC,IAAI2C,QAAQ,GAAG,IAAI,CAAChJ,SAAW,CAACiJ,YAAY,CAC1CF,QAAQ,EACRH,SAAS,GAAGE,WAAW,CAACI,MAAM,CAC/B;UAED,IAAIC,WAAW,GAAGlK,EAAE,CAACmK,IAAI,CAACC,KAAK,CAACC,GAAG,CAACN,QAAQ,CAAC;UAC7C,IAAIO,QAAQ,GAAGvD,GAAG,GAAG8C,WAAW,CAACI,MAAM;UACvC,IAAIM,WAAW,GAAGxD,GAAG,GAAG8C,WAAW,CAACI,MAAM,GAAGC,WAAW;QAC1D,CAAC,MAAM;UACL,IAAIJ,QAAQ,GAAG,CAAC;UAChB,IAAIC,QAAQ,GAAG,EAAE;UACjB,IAAIG,WAAW,GAAG,CAAC;UACnB,IAAII,QAAQ,GAAG,CAAC;UAChB,IAAIC,WAAW,GAAG,CAAC;QACrB;QAEA,IAAIC,cAAc,GAAG,IAAI,CAACtJ,SAAc,CAACiG,iBAAiB,CAACF,IAAI,CAAC;QAChE,IAAIuD,cAAc,EAAE;UAClB,IAAIC,WAAW,GAAGD,cAAc,CAACpD,KAAK;UACtC,IAAIsD,WAAW,GAAG,IAAI,CAACxJ,SAAc,CAAC8I,YAAY,CAChDS,WAAW,EACXf,QAAQ,GAAGc,cAAc,CAACP,MAAM,CACjC;UAED,IAAIU,UAAU,GAAG3K,EAAE,CAACmK,IAAI,CAACC,KAAK,CAACC,GAAG,CAACK,WAAW,CAAC;UAC/C,IAAIE,SAAS,GAAG3D,IAAI,GAAGuD,cAAc,CAACP,MAAM;UAC5C,IAAIY,UAAU,GAAG5D,IAAI,GAAGuD,cAAc,CAACP,MAAM,GAAGU,UAAU;QAC5D,CAAC,MAAM;UACL,IAAIF,WAAW,GAAG,CAAC;UACnB,IAAIC,WAAW,GAAG,EAAE;UACpB,IAAIC,UAAU,GAAG,CAAC;UAClB,IAAIC,SAAS,GAAG,CAAC;UACjB,IAAIC,UAAU,GAAG,CAAC;QACpB;QAEA,IAAI,CAACtJ,SAAa,GAAG;UACnBwF,GAAG,EAAEuD,QAAQ;UACbtD,MAAM,EAAEuD,WAAW;UACnBtD,IAAI,EAAE2D,SAAS;UACf1D,KAAK,EAAE2D;QACT,CAAC;QAED,IAAI,CAACpJ,SAAgB,CAACG,aAAa,CACjC,CAAC,IAAI,CAACkJ,cAAc,EAAE,IAAI,CAAC,KACxB,IAAI,CAACvJ,SAAa,CAAC0F,IAAI,GAAG,IAAI,CAAC7F,SAAY,CAAC,EAC/C,CAAC,IAAI,CAAC2J,aAAa,EAAE,IAAI,CAAC,KACvB,IAAI,CAACxJ,SAAa,CAACwF,GAAG,GAAG,IAAI,CAAC5F,SAAW,CAAC,EAC7CwJ,UAAU,EACVT,WAAW,CACZ;QAED,IAAI,CAAC5G,UAAa,GAAGoH,WAAW;QAChC,IAAI,CAACnH,UAAU,GAAGwG,QAAQ;QAE1B,KAAK,IAAI5F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrC,SAAQ,CAACsC,MAAM,EAAED,CAAC,EAAE,EAAE;UAC7C,IAAIN,KAAK,GAAG,IAAI,CAAC/B,SAAQ,CAACqC,CAAC,CAAC;UAC5BN,KAAK,CAACjC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE+I,UAAU,EAAET,WAAW,CAAC;UAElD,IAAIN,YAAY,EAAE;YAChB/F,KAAK,CAAC7B,UAAU,CAAC8H,QAAQ,EAAEW,WAAW,EAAEV,QAAQ,EAAEW,WAAW,CAAC;UAChE,CAAC,MAAM;YACL7G,KAAK,CAACmH,iBAAiB,CAAClB,QAAQ,EAAEW,WAAW,EAAEV,QAAQ,EAAEW,WAAW,CAAC;UACvE;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;MACIO,UAAiB,wBAAG;QAClB,IAAI,IAAI,CAAC5H,UAAgB,EAAE;UACzB;QACF;QAEA,IAAI6H,UAAU,GAAG,IAAI,CAAC7F,aAAa,EAAE;QACrC,IACE,IAAI,CAAChE,SAAY,KAAK6J,UAAU,CAAC/H,MAAM,IACvC,IAAI,CAAC7B,SAAW,KAAK4J,UAAU,CAAClI,KAAK,EACrC;UACA,IAAI,CAAC3B,SAAY,GAAG6J,UAAU,CAAC/H,MAAM;UACrC,IAAI,CAAC7B,SAAW,GAAG4J,UAAU,CAAClI,KAAK;UACnC,IAAI,CAAC0F,SAAS,CAAC,QAAQ,CAAC;QAC1B;MACF,CAAC;MAED;AACJ;AACA;MACI1G,UAAU,wBAAG;QACX,IAAI,CAACR,SAAM,CAACiI,WAAW,GAAG,CAAC;QAC3BzJ,EAAE,CAACO,EAAE,CAACC,IAAI,CAAC2K,KAAK,CAAC1K,MAAM,CAACsD,GAAG,CAAC,IAAI,CAAC;MACnC,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIqH,eAAe,6BAAG;QAChB,OAAO,CAAC,CAAC,IAAI,CAAC5J,SAAM,CAACiI,WAAW;MAClC,CAAC;MAED;AACJ;AACA;AACA;MACIA,WAAW,yBAAG;QACZ,IAAIvF,MAAM,GAAG,IAAI,CAACD,gBAAgB,EAAE;QACpC,IAAIC,MAAM,CAACE,MAAM,IAAI,CAAC,EAAE;UACtB,IAAI,CAAC6G,UAAiB,EAAE;UACxB;QACF;QAEA,IAAIzF,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAE7B,IAAI,CAACD,MAAM,EAAE;UACX,OAAO,CAAC;QACV;;QAEA,IAAI,CAACqC,eAAe,CAClB3D,MAAM,EACN,IAAI,CAAC9C,SAAY,EACjB,IAAI,CAACD,SAAW,EAChBqE,MAAM,CAACxC,KAAK,EACZwC,MAAM,CAACrC,MAAM,EACb,IAAI,CACL;QAED,IAAI,CAAC8H,UAAiB,EAAE;MAC1B,CAAC;MAED;AACJ;AACA;AACA;MACIjG,6BAA6B,2CAAG;QAC9B,IAAI,CAACxD,SAAM,CAACiH,qBAAqB,GAAG,CAAC;QACrCzI,EAAE,CAACO,EAAE,CAACC,IAAI,CAAC2K,KAAK,CAAC1K,MAAM,CAACsD,GAAG,CAAC,IAAI,CAAC;MACnC,CAAC;MAED;AACJ;AACA;AACA;MACI0E,qBAAqB,mCAAG;QACtB,IAAIvE,MAAM,GAAG,IAAI,CAACD,gBAAgB,EAAE;QACpC,IAAIC,MAAM,CAACE,MAAM,IAAI,CAAC,EAAE;UACtB,IAAI,CAAC6G,UAAiB,EAAE;UACxB;QACF;QAEA,IAAIzF,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;QAC7B,IAAI,CAACD,MAAM,EAAE;UACX,OAAO,CAAC;QACV;;QAEA;QACA,IAAI6F,UAAU,GAAG;UACftE,GAAG,EAAE,IAAI,CAAC5F,SAAW;UACrB6F,MAAM,EAAE,IAAI,CAAC7F,SAAW,GAAGqE,MAAM,CAACrC,MAAM;UACxC8D,IAAI,EAAE,IAAI,CAAC7F,SAAY;UACvB8F,KAAK,EAAE,IAAI,CAAC9F,SAAY,GAAGoE,MAAM,CAACxC;QACpC,CAAC;QAED,IACE,IAAI,CAACzB,SAAa,CAACwF,GAAG,IAAIsE,UAAU,CAACtE,GAAG,IACxC,IAAI,CAACxF,SAAa,CAACyF,MAAM,IAAIqE,UAAU,CAACrE,MAAM,IAC9C,IAAI,CAACzF,SAAa,CAAC0F,IAAI,IAAIoE,UAAU,CAACpE,IAAI,IAC1C,IAAI,CAAC1F,SAAa,CAAC2F,KAAK,IAAImE,UAAU,CAACnE,KAAK,EAC5C;UACA;UACA,IAAI,CAACzF,SAAgB,CAACG,aAAa,CACjC,CAAC,IAAI,CAACkJ,cAAc,EAAE,IAAI,CAAC,KACxB,IAAI,CAACvJ,SAAa,CAAC0F,IAAI,GAAGoE,UAAU,CAACpE,IAAI,CAAC,EAC7C,CAAC,IAAI,CAAC8D,aAAa,EAAE,IAAI,CAAC,KACvB,IAAI,CAACxJ,SAAa,CAACwF,GAAG,GAAGsE,UAAU,CAACtE,GAAG,CAAC,EAC3C,IAAI,CAACxF,SAAa,CAAC2F,KAAK,GAAG,IAAI,CAAC3F,SAAa,CAAC0F,IAAI,EAClD,IAAI,CAAC1F,SAAa,CAACyF,MAAM,GAAG,IAAI,CAACzF,SAAa,CAACwF,GAAG,CACnD;QACH,CAAC,MAAM;UACL,IAAI,CAACc,eAAe,CAClB3D,MAAM,EACN,IAAI,CAAC9C,SAAY,EACjB,IAAI,CAACD,SAAW,EAChBqE,MAAM,CAACxC,KAAK,EACZwC,MAAM,CAACrC,MAAM,EACb,KAAK,CACN;QACH;QAEA,IAAI,CAAC8H,UAAiB,EAAE;MAC1B;IACF,CAAC;IAEDK,QAAQ,sBAAG;MACT,IAAI,CAACC,aAAa,CAAC,WAAU,CAAC;MAC9B,IAAI,CAACC,eAAe,CAAC,WAAa,EAAE,WAAgB,EAAE,WAAkB,CAAC;MACzE,IAAI,CAACjK,SAAa,GAChB,IAAI,CAACC,SAAM,GACX,IAAI,CAAC8B,UAAa,GAClB,IAAI,CAACC,UAAU,GACb,IAAI;IACV;EACF,CAAC,CAAC;EA15BFvD,EAAE,CAACO,EAAE,CAACS,OAAO,CAACR,IAAI,CAACiL,IAAI,CAACtL,aAAa,GAAGA,aAAa;AAAC"
}