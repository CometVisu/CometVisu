{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "Abstract",
    "construct",
    "colorEven",
    "colorOdd",
    "setColorEven",
    "setColorOdd",
    "__customColors",
    "__decorators",
    "properties",
    "nullable",
    "check",
    "apply",
    "themeable",
    "members",
    "__colorEven",
    "__colorOdd",
    "setColor",
    "index",
    "color",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "resolve",
    "clearCustomColors",
    "updateLayerData",
    "getColor",
    "customColor",
    "_applyColorEven",
    "value",
    "old",
    "_applyColorOdd",
    "setBackground",
    "decorator",
    "Decoration",
    "getBackground",
    "destruct",
    "AbstractBackground"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/AbstractBackground.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Abstract base class for the {@link Row} and {@link Column} layers.\n */\nqx.Class.define(\"qx.ui.virtual.layer.AbstractBackground\", {\n  extend: qx.ui.virtual.layer.Abstract,\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  /**\n   * @param colorEven {Color?null} color for even indexes\n   * @param colorOdd {Color?null} color for odd indexes\n   */\n  construct(colorEven, colorOdd) {\n    super();\n\n    if (colorEven) {\n      this.setColorEven(colorEven);\n    }\n\n    if (colorOdd) {\n      this.setColorOdd(colorOdd);\n    }\n\n    this.__customColors = {};\n    this.__decorators = {};\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** color for event indexes */\n    colorEven: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyColorEven\",\n      themeable: true\n    },\n\n    /** color for odd indexes */\n    colorOdd: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyColorOdd\",\n      themeable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __colorEven: null,\n    __colorOdd: null,\n    __customColors: null,\n    __decorators: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      COLOR HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the color for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param color {Color|null} the color to set. A value of <code>null</code>\n     *    will reset the color.\n     */\n    setColor(index, color) {\n      if (color) {\n        this.__customColors[index] =\n          qx.theme.manager.Color.getInstance().resolve(color);\n      } else {\n        delete this.__customColors[index];\n      }\n    },\n\n    /**\n     * Clear all colors set using {@link #setColor}.\n     */\n    clearCustomColors() {\n      this.__customColors = {};\n      this.updateLayerData();\n    },\n\n    /**\n     * Get the color at the given index\n     *\n     * @param index {Integer} The index to get the color for.\n     * @return {Color} The color at the given index\n     */\n    getColor(index) {\n      var customColor = this.__customColors[index];\n      if (customColor) {\n        return customColor;\n      } else {\n        return index % 2 == 0 ? this.__colorEven : this.__colorOdd;\n      }\n    },\n\n    // property apply\n    _applyColorEven(value, old) {\n      if (value) {\n        this.__colorEven = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorEven = null;\n      }\n      this.updateLayerData();\n    },\n\n    // property apply\n    _applyColorOdd(value, old) {\n      if (value) {\n        this.__colorOdd = qx.theme.manager.Color.getInstance().resolve(value);\n      } else {\n        this.__colorOdd = null;\n      }\n      this.updateLayerData();\n    },\n\n    /**\n     * Sets the decorator for the given index\n     *\n     * @param index {Integer} Index to set the color for\n     * @param decorator {qx.ui.decoration.IDecorator|null} the decorator to set. A value of\n     *    <code>null</code> will reset the decorator.\n     */\n    setBackground(index, decorator) {\n      if (decorator) {\n        this.__decorators[index] =\n          qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      } else {\n        delete this.__decorators[index];\n      }\n      this.updateLayerData();\n    },\n\n    /**\n     * Get the decorator at the given index\n     *\n     * @param index {Integer} The index to get the decorator for.\n     * @return {qx.ui.decoration.IDecorator} The decorator at the given index\n     */\n    getBackground(index) {\n      return this.__decorators[index];\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this.__customColors = this.__decorators = null;\n  }\n});\n"
  ],
  "mappings": "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"
}