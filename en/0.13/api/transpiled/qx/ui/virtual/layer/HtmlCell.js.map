{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "Abstract",
    "construct",
    "htmlCellProvider",
    "constructor",
    "call",
    "setZIndex",
    "_cellProvider",
    "members",
    "_getCellSizeStyle",
    "width",
    "height",
    "insetX",
    "insetY",
    "style",
    "core",
    "Environment",
    "get",
    "_fullUpdate",
    "firstRow",
    "firstColumn",
    "rowSizes",
    "columnSizes",
    "html",
    "left",
    "top",
    "row",
    "column",
    "y",
    "length",
    "x",
    "cellProperties",
    "getCellProperties",
    "insets",
    "push",
    "classes",
    "attributes",
    "content",
    "getContentElement",
    "setAttribute",
    "join",
    "destruct",
    "HtmlCell"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/HtmlCell.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The HtmlCell layer renders each cell with custom HTML markup. The concrete\r\n * markup for each cell is provided by a cell provider.\r\n */\r\nqx.Class.define(\"qx.ui.virtual.layer.HtmlCell\", {\r\n  extend: qx.ui.virtual.layer.Abstract,\r\n\r\n  /**\r\n   * @param htmlCellProvider {qx.ui.virtual.core.IHtmlCellProvider} This class\r\n   *    provides the HTML markup for each cell.\r\n   */\r\n  construct(htmlCellProvider) {\r\n    super();\r\n    this.setZIndex(12);\r\n\r\n    if (qx.core.Environment.get(\"qx.debug\")) {\r\n      this.assertInterface(\r\n        htmlCellProvider,\r\n        qx.ui.virtual.core.IHtmlCellProvider\r\n      );\r\n    }\r\n    this._cellProvider = htmlCellProvider;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /**\r\n     * Get the cell size taking the box model into account\r\n     *\r\n     * @param width {Integer} The cell's (border-box) width in pixel\r\n     * @param height {Integer} The cell's (border-box) height in pixel\r\n     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of\r\n     *    horizontal paddings and borders\r\n     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of\r\n     *    vertical paddings and borders\r\n     * @return {String} The CSS style string for the cell size\r\n     */\r\n    _getCellSizeStyle(width, height, insetX, insetY) {\r\n      var style = \"\";\r\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\r\n        width -= insetX;\r\n        height -= insetY;\r\n      }\r\n\r\n      style += \"width:\" + width + \"px;\";\r\n      style += \"height:\" + height + \"px;\";\r\n\r\n      return style;\r\n    },\r\n\r\n    // overridden\r\n    _fullUpdate(firstRow, firstColumn, rowSizes, columnSizes) {\r\n      var html = [];\r\n      var left = 0;\r\n      var top = 0;\r\n      var row = firstRow;\r\n      var column = firstColumn;\r\n      for (var y = 0; y < rowSizes.length; y++) {\r\n        var left = 0;\r\n        var column = firstColumn;\r\n        var height = rowSizes[y];\r\n        for (var x = 0; x < columnSizes.length; x++) {\r\n          var width = columnSizes[x];\r\n          var cellProperties = this._cellProvider.getCellProperties(\r\n            row,\r\n            column\r\n          );\r\n\r\n          var insets = cellProperties.insets || [0, 0];\r\n\r\n          html.push(\r\n            \"<div \",\r\n            \"style='\",\r\n            \"left:\",\r\n            left,\r\n            \"px;\",\r\n            \"top:\",\r\n            top,\r\n            \"px;\",\r\n            this._getCellSizeStyle(width, height, insets[0], insets[1]),\r\n            cellProperties.style || \"\",\r\n            \"' \",\r\n            \"class='\",\r\n            cellProperties.classes || \"\",\r\n            \"' \",\r\n            cellProperties.attributes || \"\",\r\n            \">\",\r\n            cellProperties.content || \"\",\r\n            \"</div>\"\r\n          );\r\n\r\n          column++;\r\n          left += width;\r\n        }\r\n        top += height;\r\n        row++;\r\n      }\r\n\r\n      this.getContentElement().setAttribute(\"html\", html.join(\"\"));\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._cellProvider = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}