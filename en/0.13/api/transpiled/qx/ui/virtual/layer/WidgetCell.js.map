{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "Abstract",
    "include",
    "core",
    "MChildrenHandling",
    "construct",
    "widgetCellProvider",
    "constructor",
    "call",
    "setZIndex",
    "_cellProvider",
    "__spacerPool",
    "properties",
    "anonymous",
    "refine",
    "init",
    "events",
    "updated",
    "members",
    "getRenderedCellWidget",
    "row",
    "column",
    "_getChildren",
    "length",
    "columnCount",
    "getColumnSizes",
    "rowCount",
    "getRowSizes",
    "firstRow",
    "getFirstRow",
    "firstColumn",
    "getFirstColumn",
    "childIndex",
    "widget",
    "getUserData",
    "_getSpacer",
    "spacer",
    "pop",
    "Spacer",
    "setUserData",
    "_activateNotEmptyChild",
    "elementToPool",
    "active",
    "FocusHandler",
    "getInstance",
    "getActiveWidget",
    "Widget",
    "contains",
    "children",
    "i",
    "activate",
    "_fullUpdate",
    "rowSizes",
    "columnSizes",
    "cellProvider",
    "concat",
    "child",
    "push",
    "poolCellWidget",
    "top",
    "left",
    "visibleItems",
    "y",
    "x",
    "item",
    "getCellWidget",
    "setUserBounds",
    "_add",
    "forEach",
    "indexOf",
    "_remove",
    "bind",
    "fireEvent",
    "_updateLayerWindow",
    "lastRow",
    "lastColumn",
    "overlap",
    "Math",
    "max",
    "min",
    "_lastRow",
    "_lastColumn",
    "lineLength",
    "widgetsToMove",
    "widgetsToMoveIndexes",
    "index",
    "destruct",
    "dispose",
    "WidgetCell"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/WidgetCell.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n     * Jonathan Weiß (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The WidgetCell layer renders each cell with a qooxdoo widget. The concrete\r\n * widget instance for each cell is provided by a cell provider.\r\n */\r\nqx.Class.define(\"qx.ui.virtual.layer.WidgetCell\", {\r\n  extend: qx.ui.virtual.layer.Abstract,\r\n\r\n  include: [qx.ui.core.MChildrenHandling],\r\n\r\n  /**\r\n   * @param widgetCellProvider {qx.ui.virtual.core.IWidgetCellProvider} This\r\n   *    class manages the life cycle of the cell widgets.\r\n   */\r\n  construct(widgetCellProvider) {\r\n    super();\r\n    this.setZIndex(12);\r\n\r\n    if (qx.core.Environment.get(\"qx.debug\")) {\r\n      this.assertInterface(\r\n        widgetCellProvider,\r\n        qx.ui.virtual.core.IWidgetCellProvider\r\n      );\r\n    }\r\n\r\n    this._cellProvider = widgetCellProvider;\r\n    this.__spacerPool = [];\r\n  },\r\n\r\n  /*\r\n   *****************************************************************************\r\n      PROPERTIES\r\n   *****************************************************************************\r\n   */\r\n\r\n  properties: {\r\n    // overridden\r\n    anonymous: {\r\n      refine: true,\r\n      init: false\r\n    }\r\n  },\r\n\r\n  events: {\r\n    /**\r\n     * Is fired when the {@link #_fullUpdate} or the\r\n     * {@link #_updateLayerWindow} is finished.\r\n     */\r\n    updated: \"qx.event.type.Event\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __spacerPool: null,\r\n\r\n    /**\r\n     * Returns the widget used to render the given cell. May return null if the\r\n     * cell isn’t rendered currently rendered.\r\n     *\r\n     * @param row {Integer} The cell's row index\r\n     * @param column {Integer} The cell's column index\r\n     * @return {qx.ui.core.LayoutItem|null} the widget used to render the given\r\n     *    cell or <code>null</code>\r\n     */\r\n    getRenderedCellWidget(row, column) {\r\n      if (this._getChildren().length === 0) {\r\n        return null;\r\n      }\r\n\r\n      var columnCount = this.getColumnSizes().length;\r\n      var rowCount = this.getRowSizes().length;\r\n\r\n      var firstRow = this.getFirstRow();\r\n      var firstColumn = this.getFirstColumn();\r\n\r\n      if (\r\n        row < firstRow ||\r\n        row >= firstRow + rowCount ||\r\n        column < firstColumn ||\r\n        column >= firstColumn + columnCount\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      var childIndex = column - firstColumn + (row - firstRow) * columnCount;\r\n      var widget = this._getChildren()[childIndex];\r\n\r\n      if (!widget || widget.getUserData(\"cell.empty\")) {\r\n        return null;\r\n      } else {\r\n        return widget;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the spacer widget, for empty cells\r\n     *\r\n     * @return {qx.ui.core.Spacer} The spacer widget.\r\n     */\r\n    _getSpacer() {\r\n      var spacer = this.__spacerPool.pop();\r\n      if (!spacer) {\r\n        spacer = new qx.ui.core.Spacer();\r\n        spacer.setUserData(\"cell.empty\", 1);\r\n      }\r\n      return spacer;\r\n    },\r\n\r\n    /**\r\n     * Activates one of the still not empty items.\r\n     * @param elementToPool {qx.ui.core.Widget} The widget which gets pooled.\r\n     */\r\n    _activateNotEmptyChild(elementToPool) {\r\n      // get the current active element\r\n      var active = qx.ui.core.FocusHandler.getInstance().getActiveWidget();\r\n      // if the element to pool is active or one of its children\r\n      if (\r\n        active == elementToPool ||\r\n        qx.ui.core.Widget.contains(elementToPool, active)\r\n      ) {\r\n        // search for a new child to activate\r\n        var children = this._getChildren();\r\n        for (var i = children.length - 1; i >= 0; i--) {\r\n          if (!children[i].getUserData(\"cell.empty\")) {\r\n            children[i].activate();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _fullUpdate(firstRow, firstColumn, rowSizes, columnSizes) {\r\n      var cellProvider = this._cellProvider;\r\n\r\n      var children = this._getChildren().concat();\r\n      for (var i = 0; i < children.length; i++) {\r\n        var child = children[i];\r\n        if (child.getUserData(\"cell.empty\")) {\r\n          this.__spacerPool.push(child);\r\n        } else {\r\n          this._activateNotEmptyChild(child);\r\n          cellProvider.poolCellWidget(child);\r\n        }\r\n      }\r\n\r\n      var top = 0;\r\n      var left = 0;\r\n\r\n      var visibleItems = [];\r\n\r\n      for (var y = 0; y < rowSizes.length; y++) {\r\n        for (var x = 0; x < columnSizes.length; x++) {\r\n          var row = firstRow + y;\r\n          var column = firstColumn + x;\r\n\r\n          var item =\r\n            cellProvider.getCellWidget(row, column) || this._getSpacer();\r\n\r\n          visibleItems.push(item);\r\n\r\n          item.setUserBounds(left, top, columnSizes[x], rowSizes[y]);\r\n          item.setUserData(\"cell.row\", row);\r\n          item.setUserData(\"cell.column\", column);\r\n          this._add(item);\r\n\r\n          left += columnSizes[x];\r\n        }\r\n        top += rowSizes[y];\r\n        left = 0;\r\n      }\r\n      children.forEach(\r\n        function (child) {\r\n          if (visibleItems.indexOf(child) === -1) {\r\n            this._remove(child);\r\n          }\r\n        }.bind(this)\r\n      );\r\n\r\n      this.fireEvent(\"updated\");\r\n    },\r\n\r\n    _updateLayerWindow(firstRow, firstColumn, rowSizes, columnSizes) {\r\n      // compute overlap of old and new window\r\n      //\r\n      //      +---+\r\n      //      |  ##--+\r\n      //      |  ##  |\r\n      //      +--##  |\r\n      //         +---+\r\n      //\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertPositiveInteger(firstRow);\r\n        this.assertPositiveInteger(firstColumn);\r\n        this.assertArray(rowSizes);\r\n        this.assertArray(columnSizes);\r\n      }\r\n\r\n      var lastRow = firstRow + rowSizes.length - 1;\r\n      var lastColumn = firstColumn + columnSizes.length - 1;\r\n\r\n      var overlap = {\r\n        firstRow: Math.max(firstRow, this.getFirstRow()),\r\n        lastRow: Math.min(lastRow, this._lastRow),\r\n        firstColumn: Math.max(firstColumn, this.getFirstColumn()),\r\n        lastColumn: Math.min(lastColumn, this._lastColumn)\r\n      };\r\n\r\n      this._lastColumn = lastColumn;\r\n      this._lastRow = lastRow;\r\n\r\n      if (\r\n        overlap.firstRow > overlap.lastRow ||\r\n        overlap.firstColumn > overlap.lastColumn\r\n      ) {\r\n        return this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\r\n      }\r\n\r\n      // collect the widgets to move\r\n      var children = this._getChildren();\r\n      var lineLength = this.getColumnSizes().length;\r\n      var widgetsToMove = [];\r\n      var widgetsToMoveIndexes = {};\r\n      for (var row = firstRow; row <= lastRow; row++) {\r\n        widgetsToMove[row] = [];\r\n        for (var column = firstColumn; column <= lastColumn; column++) {\r\n          if (\r\n            row >= overlap.firstRow &&\r\n            row <= overlap.lastRow &&\r\n            column >= overlap.firstColumn &&\r\n            column <= overlap.lastColumn\r\n          ) {\r\n            var x = column - this.getFirstColumn();\r\n            var y = row - this.getFirstRow();\r\n            var index = y * lineLength + x;\r\n            widgetsToMove[row][column] = children[index];\r\n            widgetsToMoveIndexes[index] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      var cellProvider = this._cellProvider;\r\n\r\n      // pool widgets\r\n      var children = this._getChildren().concat();\r\n      for (var i = 0; i < children.length; i++) {\r\n        if (!widgetsToMoveIndexes[i]) {\r\n          var child = children[i];\r\n          if (child.getUserData(\"cell.empty\")) {\r\n            this.__spacerPool.push(child);\r\n          } else {\r\n            this._activateNotEmptyChild(child);\r\n            cellProvider.poolCellWidget(child);\r\n          }\r\n        }\r\n      }\r\n\r\n      var top = 0;\r\n      var left = 0;\r\n      var visibleItems = [];\r\n\r\n      for (var y = 0; y < rowSizes.length; y++) {\r\n        for (var x = 0; x < columnSizes.length; x++) {\r\n          var row = firstRow + y;\r\n          var column = firstColumn + x;\r\n\r\n          var item =\r\n            widgetsToMove[row][column] ||\r\n            cellProvider.getCellWidget(row, column) ||\r\n            this._getSpacer();\r\n\r\n          visibleItems.push(item);\r\n\r\n          item.setUserBounds(left, top, columnSizes[x], rowSizes[y]);\r\n          item.setUserData(\"cell.row\", row);\r\n          item.setUserData(\"cell.column\", column);\r\n          this._add(item);\r\n\r\n          left += columnSizes[x];\r\n        }\r\n        top += rowSizes[y];\r\n        left = 0;\r\n      }\r\n      children.forEach(\r\n        function (child) {\r\n          if (visibleItems.indexOf(child) === -1) {\r\n            this._remove(child);\r\n          }\r\n        }.bind(this)\r\n      );\r\n\r\n      this.fireEvent(\"updated\");\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    var children = this._getChildren();\r\n    for (var i = 0; i < children.length; i++) {\r\n      children[i].dispose();\r\n    }\r\n\r\n    this._cellProvider = this.__spacerPool = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,gCAAgC,EAAE;IAChDC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ;IAEpCC,OAAO,EAAE,CAACX,EAAE,CAACO,EAAE,CAACK,IAAI,CAACC,iBAAiB,CAAC;IAEvC;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,kBAAkB,EAAE;MAC5Bf,EAAA,CAAAO,EAAA,CAAAC,OAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAM,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC;MASlB,IAAI,CAACC,aAAa,GAAGJ,kBAAkB;MACvC,IAAI,CAACK,SAAY,GAAG,EAAE;IACxB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;MACAC,SAAS,EAAE;QACTC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR;IACF,CAAC;IAEDC,MAAM,EAAE;MACN;AACJ;AACA;AACA;MACIC,OAAO,EAAE;IACX,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPP,SAAY,EAAE,IAAI;MAElB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIQ,qBAAqB,WAAAA,sBAACC,GAAG,EAAEC,MAAM,EAAE;QACjC,IAAI,IAAI,CAACC,YAAY,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;UACpC,OAAO,IAAI;QACb;QAEA,IAAIC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC,CAACF,MAAM;QAC9C,IAAIG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACJ,MAAM;QAExC,IAAIK,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;QACjC,IAAIC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;QAEvC,IACEX,GAAG,GAAGQ,QAAQ,IACdR,GAAG,IAAIQ,QAAQ,GAAGF,QAAQ,IAC1BL,MAAM,GAAGS,WAAW,IACpBT,MAAM,IAAIS,WAAW,GAAGN,WAAW,EACnC;UACA,OAAO,IAAI;QACb;QAEA,IAAIQ,UAAU,GAAGX,MAAM,GAAGS,WAAW,GAAG,CAACV,GAAG,GAAGQ,QAAQ,IAAIJ,WAAW;QACtE,IAAIS,MAAM,GAAG,IAAI,CAACX,YAAY,CAAC,CAAC,CAACU,UAAU,CAAC;QAE5C,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,WAAW,CAAC,YAAY,CAAC,EAAE;UAC/C,OAAO,IAAI;QACb,CAAC,MAAM;UACL,OAAOD,MAAM;QACf;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIE,UAAU,WAAAA,WAAA,EAAG;QACX,IAAIC,MAAM,GAAG,IAAI,CAACzB,SAAY,CAAC0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAACD,MAAM,EAAE;UACXA,MAAM,GAAG,IAAI7C,EAAE,CAACO,EAAE,CAACK,IAAI,CAACmC,MAAM,CAAC,CAAC;UAChCF,MAAM,CAACG,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;QACrC;QACA,OAAOH,MAAM;MACf,CAAC;MAED;AACJ;AACA;AACA;MACII,sBAAsB,WAAAA,uBAACC,aAAa,EAAE;QACpC;QACA,IAAIC,MAAM,GAAGnD,EAAE,CAACO,EAAE,CAACK,IAAI,CAACwC,YAAY,CAACC,WAAW,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC;QACpE;QACA,IACEH,MAAM,IAAID,aAAa,IACvBlD,EAAE,CAACO,EAAE,CAACK,IAAI,CAAC2C,MAAM,CAACC,QAAQ,CAACN,aAAa,EAAEC,MAAM,CAAC,EACjD;UACA;UACA,IAAIM,QAAQ,GAAG,IAAI,CAAC1B,YAAY,CAAC,CAAC;UAClC,KAAK,IAAI2B,CAAC,GAAGD,QAAQ,CAACzB,MAAM,GAAG,CAAC,EAAE0B,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC7C,IAAI,CAACD,QAAQ,CAACC,CAAC,CAAC,CAACf,WAAW,CAAC,YAAY,CAAC,EAAE;cAC1Cc,QAAQ,CAACC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;cACtB;YACF;UACF;QACF;MACF,CAAC;MAED;MACAC,WAAW,WAAAA,YAACvB,QAAQ,EAAEE,WAAW,EAAEsB,QAAQ,EAAEC,WAAW,EAAE;QACxD,IAAIC,YAAY,GAAG,IAAI,CAAC5C,aAAa;QAErC,IAAIsC,QAAQ,GAAG,IAAI,CAAC1B,YAAY,CAAC,CAAC,CAACiC,MAAM,CAAC,CAAC;QAC3C,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACzB,MAAM,EAAE0B,CAAC,EAAE,EAAE;UACxC,IAAIO,KAAK,GAAGR,QAAQ,CAACC,CAAC,CAAC;UACvB,IAAIO,KAAK,CAACtB,WAAW,CAAC,YAAY,CAAC,EAAE;YACnC,IAAI,CAACvB,SAAY,CAAC8C,IAAI,CAACD,KAAK,CAAC;UAC/B,CAAC,MAAM;YACL,IAAI,CAAChB,sBAAsB,CAACgB,KAAK,CAAC;YAClCF,YAAY,CAACI,cAAc,CAACF,KAAK,CAAC;UACpC;QACF;QAEA,IAAIG,GAAG,GAAG,CAAC;QACX,IAAIC,IAAI,GAAG,CAAC;QAEZ,IAAIC,YAAY,GAAG,EAAE;QAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,CAAC7B,MAAM,EAAEuC,CAAC,EAAE,EAAE;UACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,WAAW,CAAC9B,MAAM,EAAEwC,CAAC,EAAE,EAAE;YAC3C,IAAI3C,GAAG,GAAGQ,QAAQ,GAAGkC,CAAC;YACtB,IAAIzC,MAAM,GAAGS,WAAW,GAAGiC,CAAC;YAE5B,IAAIC,IAAI,GACNV,YAAY,CAACW,aAAa,CAAC7C,GAAG,EAAEC,MAAM,CAAC,IAAI,IAAI,CAACc,UAAU,CAAC,CAAC;YAE9D0B,YAAY,CAACJ,IAAI,CAACO,IAAI,CAAC;YAEvBA,IAAI,CAACE,aAAa,CAACN,IAAI,EAAED,GAAG,EAAEN,WAAW,CAACU,CAAC,CAAC,EAAEX,QAAQ,CAACU,CAAC,CAAC,CAAC;YAC1DE,IAAI,CAACzB,WAAW,CAAC,UAAU,EAAEnB,GAAG,CAAC;YACjC4C,IAAI,CAACzB,WAAW,CAAC,aAAa,EAAElB,MAAM,CAAC;YACvC,IAAI,CAAC8C,IAAI,CAACH,IAAI,CAAC;YAEfJ,IAAI,IAAIP,WAAW,CAACU,CAAC,CAAC;UACxB;UACAJ,GAAG,IAAIP,QAAQ,CAACU,CAAC,CAAC;UAClBF,IAAI,GAAG,CAAC;QACV;QACAZ,QAAQ,CAACoB,OAAO,CACd,UAAUZ,KAAK,EAAE;UACf,IAAIK,YAAY,CAACQ,OAAO,CAACb,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YACtC,IAAI,CAACc,OAAO,CAACd,KAAK,CAAC;UACrB;QACF,CAAC,CAACe,IAAI,CAAC,IAAI,CACb,CAAC;QAED,IAAI,CAACC,SAAS,CAAC,SAAS,CAAC;MAC3B,CAAC;MAEDC,kBAAkB,WAAAA,mBAAC7C,QAAQ,EAAEE,WAAW,EAAEsB,QAAQ,EAAEC,WAAW,EAAE;QAC/D;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QASA,IAAIqB,OAAO,GAAG9C,QAAQ,GAAGwB,QAAQ,CAAC7B,MAAM,GAAG,CAAC;QAC5C,IAAIoD,UAAU,GAAG7C,WAAW,GAAGuB,WAAW,CAAC9B,MAAM,GAAG,CAAC;QAErD,IAAIqD,OAAO,GAAG;UACZhD,QAAQ,EAAEiD,IAAI,CAACC,GAAG,CAAClD,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;UAChD6C,OAAO,EAAEG,IAAI,CAACE,GAAG,CAACL,OAAO,EAAE,IAAI,CAACM,QAAQ,CAAC;UACzClD,WAAW,EAAE+C,IAAI,CAACC,GAAG,CAAChD,WAAW,EAAE,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;UACzD4C,UAAU,EAAEE,IAAI,CAACE,GAAG,CAACJ,UAAU,EAAE,IAAI,CAACM,WAAW;QACnD,CAAC;QAED,IAAI,CAACA,WAAW,GAAGN,UAAU;QAC7B,IAAI,CAACK,QAAQ,GAAGN,OAAO;QAEvB,IACEE,OAAO,CAAChD,QAAQ,GAAGgD,OAAO,CAACF,OAAO,IAClCE,OAAO,CAAC9C,WAAW,GAAG8C,OAAO,CAACD,UAAU,EACxC;UACA,OAAO,IAAI,CAACxB,WAAW,CAACvB,QAAQ,EAAEE,WAAW,EAAEsB,QAAQ,EAAEC,WAAW,CAAC;QACvE;;QAEA;QACA,IAAIL,QAAQ,GAAG,IAAI,CAAC1B,YAAY,CAAC,CAAC;QAClC,IAAI4D,UAAU,GAAG,IAAI,CAACzD,cAAc,CAAC,CAAC,CAACF,MAAM;QAC7C,IAAI4D,aAAa,GAAG,EAAE;QACtB,IAAIC,oBAAoB,GAAG,CAAC,CAAC;QAC7B,KAAK,IAAIhE,GAAG,GAAGQ,QAAQ,EAAER,GAAG,IAAIsD,OAAO,EAAEtD,GAAG,EAAE,EAAE;UAC9C+D,aAAa,CAAC/D,GAAG,CAAC,GAAG,EAAE;UACvB,KAAK,IAAIC,MAAM,GAAGS,WAAW,EAAET,MAAM,IAAIsD,UAAU,EAAEtD,MAAM,EAAE,EAAE;YAC7D,IACED,GAAG,IAAIwD,OAAO,CAAChD,QAAQ,IACvBR,GAAG,IAAIwD,OAAO,CAACF,OAAO,IACtBrD,MAAM,IAAIuD,OAAO,CAAC9C,WAAW,IAC7BT,MAAM,IAAIuD,OAAO,CAACD,UAAU,EAC5B;cACA,IAAIZ,CAAC,GAAG1C,MAAM,GAAG,IAAI,CAACU,cAAc,CAAC,CAAC;cACtC,IAAI+B,CAAC,GAAG1C,GAAG,GAAG,IAAI,CAACS,WAAW,CAAC,CAAC;cAChC,IAAIwD,KAAK,GAAGvB,CAAC,GAAGoB,UAAU,GAAGnB,CAAC;cAC9BoB,aAAa,CAAC/D,GAAG,CAAC,CAACC,MAAM,CAAC,GAAG2B,QAAQ,CAACqC,KAAK,CAAC;cAC5CD,oBAAoB,CAACC,KAAK,CAAC,GAAG,IAAI;YACpC;UACF;QACF;QAEA,IAAI/B,YAAY,GAAG,IAAI,CAAC5C,aAAa;;QAErC;QACA,IAAIsC,QAAQ,GAAG,IAAI,CAAC1B,YAAY,CAAC,CAAC,CAACiC,MAAM,CAAC,CAAC;QAC3C,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACzB,MAAM,EAAE0B,CAAC,EAAE,EAAE;UACxC,IAAI,CAACmC,oBAAoB,CAACnC,CAAC,CAAC,EAAE;YAC5B,IAAIO,KAAK,GAAGR,QAAQ,CAACC,CAAC,CAAC;YACvB,IAAIO,KAAK,CAACtB,WAAW,CAAC,YAAY,CAAC,EAAE;cACnC,IAAI,CAACvB,SAAY,CAAC8C,IAAI,CAACD,KAAK,CAAC;YAC/B,CAAC,MAAM;cACL,IAAI,CAAChB,sBAAsB,CAACgB,KAAK,CAAC;cAClCF,YAAY,CAACI,cAAc,CAACF,KAAK,CAAC;YACpC;UACF;QACF;QAEA,IAAIG,GAAG,GAAG,CAAC;QACX,IAAIC,IAAI,GAAG,CAAC;QACZ,IAAIC,YAAY,GAAG,EAAE;QAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,CAAC7B,MAAM,EAAEuC,CAAC,EAAE,EAAE;UACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,WAAW,CAAC9B,MAAM,EAAEwC,CAAC,EAAE,EAAE;YAC3C,IAAI3C,GAAG,GAAGQ,QAAQ,GAAGkC,CAAC;YACtB,IAAIzC,MAAM,GAAGS,WAAW,GAAGiC,CAAC;YAE5B,IAAIC,IAAI,GACNmB,aAAa,CAAC/D,GAAG,CAAC,CAACC,MAAM,CAAC,IAC1BiC,YAAY,CAACW,aAAa,CAAC7C,GAAG,EAAEC,MAAM,CAAC,IACvC,IAAI,CAACc,UAAU,CAAC,CAAC;YAEnB0B,YAAY,CAACJ,IAAI,CAACO,IAAI,CAAC;YAEvBA,IAAI,CAACE,aAAa,CAACN,IAAI,EAAED,GAAG,EAAEN,WAAW,CAACU,CAAC,CAAC,EAAEX,QAAQ,CAACU,CAAC,CAAC,CAAC;YAC1DE,IAAI,CAACzB,WAAW,CAAC,UAAU,EAAEnB,GAAG,CAAC;YACjC4C,IAAI,CAACzB,WAAW,CAAC,aAAa,EAAElB,MAAM,CAAC;YACvC,IAAI,CAAC8C,IAAI,CAACH,IAAI,CAAC;YAEfJ,IAAI,IAAIP,WAAW,CAACU,CAAC,CAAC;UACxB;UACAJ,GAAG,IAAIP,QAAQ,CAACU,CAAC,CAAC;UAClBF,IAAI,GAAG,CAAC;QACV;QACAZ,QAAQ,CAACoB,OAAO,CACd,UAAUZ,KAAK,EAAE;UACf,IAAIK,YAAY,CAACQ,OAAO,CAACb,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YACtC,IAAI,CAACc,OAAO,CAACd,KAAK,CAAC;UACrB;QACF,CAAC,CAACe,IAAI,CAAC,IAAI,CACb,CAAC;QAED,IAAI,CAACC,SAAS,CAAC,SAAS,CAAC;MAC3B;IACF,CAAC;IAEDc,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAItC,QAAQ,GAAG,IAAI,CAAC1B,YAAY,CAAC,CAAC;MAClC,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACzB,MAAM,EAAE0B,CAAC,EAAE,EAAE;QACxCD,QAAQ,CAACC,CAAC,CAAC,CAACsC,OAAO,CAAC,CAAC;MACvB;MAEA,IAAI,CAAC7E,aAAa,GAAG,IAAI,CAACC,SAAY,GAAG,IAAI;IAC/C;EACF,CAAC,CAAC;EAvUFpB,EAAE,CAACO,EAAE,CAACC,OAAO,CAACC,KAAK,CAACwF,UAAU,CAAC9F,aAAa,GAAGA,aAAa;AAAC"
}