{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "HtmlCell",
    "construct",
    "htmlCellProvider",
    "rowConfig",
    "columnConfig",
    "constructor",
    "call",
    "_spanManager",
    "CellSpanManager",
    "members",
    "setCellSpan",
    "row",
    "column",
    "rowSpan",
    "columnSpan",
    "id",
    "removeCell",
    "addCell",
    "core",
    "queue",
    "Widget",
    "add",
    "__renderCell",
    "__P_483_0",
    "htmlArr",
    "left",
    "top",
    "width",
    "height",
    "cellProperties",
    "_cellProvider",
    "getCellProperties",
    "insets",
    "push",
    "_getCellSizeStyle",
    "style",
    "classes",
    "attributes",
    "content",
    "_fullUpdate",
    "firstRow",
    "firstColumn",
    "rowSizes",
    "columnSizes",
    "html",
    "cells",
    "findCellsInWindow",
    "length",
    "bounds",
    "getCellBounds",
    "spanMap",
    "computeCellSpanMap",
    "i",
    "l",
    "cell",
    "cellBounds",
    "x",
    "y",
    "getContentElement",
    "setAttribute",
    "join",
    "destruct",
    "_disposeObjects",
    "HtmlCellSpan"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/HtmlCellSpan.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * An extended HtmlCell layer, which adds the possibility to specify row and\r\n * column spans for specific cells.\r\n */\r\nqx.Class.define(\"qx.ui.virtual.layer.HtmlCellSpan\", {\r\n  extend: qx.ui.virtual.layer.HtmlCell,\r\n\r\n  /**\r\n   * @param htmlCellProvider {qx.ui.virtual.core.IHtmlCellProvider} This class\r\n   *    provides the HTML markup for each cell.\r\n   * @param rowConfig {qx.ui.virtual.core.Axis} The row configuration of the pane\r\n   *    in which the cells will be rendered\r\n   * @param columnConfig {qx.ui.virtual.core.Axis} The column configuration of\r\n   *    the pane in which the cells will be rendered\r\n   */\r\n  construct(htmlCellProvider, rowConfig, columnConfig) {\r\n    super(htmlCellProvider);\r\n    this._spanManager = new qx.ui.virtual.layer.CellSpanManager(\r\n      rowConfig,\r\n      columnConfig\r\n    );\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /**\r\n     * Set the row and column span for a specific cell\r\n     *\r\n     * @param row {PositiveInteger} The cell's row\r\n     * @param column {PositiveInteger} The cell's column\r\n     * @param rowSpan {PositiveInteger} The number of rows the cells spans\r\n     * @param columnSpan {PositiveInteger} The number of columns the cells spans\r\n     */\r\n    setCellSpan(row, column, rowSpan, columnSpan) {\r\n      var id = row + \"x\" + column;\r\n      this._spanManager.removeCell(id);\r\n      if (rowSpan > 1 || columnSpan > 1) {\r\n        this._spanManager.addCell(id, row, column, rowSpan, columnSpan);\r\n      }\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    /**\r\n     * Renders a cell\r\n     *\r\n     * @param htmlArr {String[]} the output array\r\n     * @param row {Integer} The cell's row index\r\n     * @param column {Integer} The cell's column index\r\n     * @param left {Integer} The cell's CSS left position (in pixel)\r\n     * @param top {Integer} The cell's CSS top position (in pixel)\r\n     * @param width {Integer} The cell's width\r\n     * @param height {Integer} The cell's height\r\n     */\r\n    __renderCell(htmlArr, row, column, left, top, width, height) {\r\n      var cellProperties = this._cellProvider.getCellProperties(row, column);\r\n      var insets = cellProperties.insets || [0, 0];\r\n\r\n      htmlArr.push(\r\n        \"<div \",\r\n        \"style='\",\r\n        \"left:\",\r\n        left,\r\n        \"px;\",\r\n        \"top:\",\r\n        top,\r\n        \"px;\",\r\n        this._getCellSizeStyle(width, height, insets[0], insets[1]),\r\n        cellProperties.style || \"\",\r\n        \"' \",\r\n        \"class='\",\r\n        cellProperties.classes || \"\",\r\n        \"' \",\r\n        cellProperties.attributes || \"\",\r\n        \">\",\r\n        cellProperties.content || \"\",\r\n        \"</div>\"\r\n      );\r\n    },\r\n\r\n    // overridden\r\n    _fullUpdate(firstRow, firstColumn, rowSizes, columnSizes) {\r\n      var html = [];\r\n\r\n      var cells = this._spanManager.findCellsInWindow(\r\n        firstRow,\r\n        firstColumn,\r\n        rowSizes.length,\r\n        columnSizes.length\r\n      );\r\n\r\n      if (cells.length > 0) {\r\n        var bounds = this._spanManager.getCellBounds(\r\n          cells,\r\n          firstRow,\r\n          firstColumn\r\n        );\r\n\r\n        var spanMap = this._spanManager.computeCellSpanMap(\r\n          cells,\r\n          firstRow,\r\n          firstColumn,\r\n          rowSizes.length,\r\n          columnSizes.length\r\n        );\r\n\r\n        // render spanning cells\r\n        for (var i = 0, l = cells.length; i < l; i++) {\r\n          var cell = cells[i];\r\n          var cellBounds = bounds[i];\r\n          this.__renderCell(\r\n            html,\r\n            cell.firstRow,\r\n            cell.firstColumn,\r\n            cellBounds.left,\r\n            cellBounds.top,\r\n            cellBounds.width,\r\n            cellBounds.height\r\n          );\r\n        }\r\n      } else {\r\n        // create empty dummy map\r\n        spanMap = [];\r\n        for (var i = 0; i < rowSizes.length; i++) {\r\n          spanMap[firstRow + i] = [];\r\n        }\r\n      }\r\n\r\n      // render non spanning cells\r\n      var left = 0;\r\n      var top = 0;\r\n      var row = firstRow;\r\n      var column = firstColumn;\r\n      for (var x = 0; x < rowSizes.length; x++) {\r\n        var left = 0;\r\n        var column = firstColumn;\r\n        var height = rowSizes[x];\r\n        for (var y = 0; y < columnSizes.length; y++) {\r\n          var width = columnSizes[y];\r\n\r\n          if (!spanMap[row][column]) {\r\n            this.__renderCell(html, row, column, left, top, width, height);\r\n          }\r\n\r\n          column++;\r\n          left += width;\r\n        }\r\n        top += height;\r\n        row++;\r\n      }\r\n\r\n      this.getContentElement().setAttribute(\"html\", html.join(\"\"));\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._disposeObjects(\"_spanManager\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}