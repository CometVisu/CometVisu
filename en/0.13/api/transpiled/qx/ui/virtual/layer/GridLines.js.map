{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "Abstract",
    "construct",
    "orientation",
    "lineColor",
    "lineSize",
    "constructor",
    "call",
    "setZIndex",
    "setDefaultLineColor",
    "undefined",
    "setDefaultLineSize",
    "__lineColors",
    "__lineSizes",
    "_isHorizontal",
    "properties",
    "defaultLineColor",
    "init",
    "check",
    "themeable",
    "defaultLineSize",
    "members",
    "isHorizontal",
    "setLineColor",
    "index",
    "color",
    "__isLineRendered",
    "updateLayerData",
    "setLineSize",
    "size",
    "__P_709_2",
    "firstColumn",
    "getFirstColumn",
    "lastColumn",
    "getColumnSizes",
    "length",
    "firstRow",
    "getFirstRow",
    "lastRow",
    "getRowSizes",
    "getLineSize",
    "getDefaultLineSize",
    "getLineColor",
    "getDefaultLineColor",
    "__renderHorizontalLines",
    "__P_709_3",
    "htmlArr",
    "rowSizes",
    "top",
    "height",
    "y",
    "push",
    "Math",
    "floor",
    "__renderVerticalLines",
    "__P_709_4",
    "columnSizes",
    "left",
    "width",
    "x",
    "_fullUpdate",
    "html",
    "getContentElement",
    "setAttribute",
    "join",
    "_updateLayerWindow",
    "rowChanged",
    "columnChanged",
    "destruct",
    "GridLines"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/GridLines.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan WeiÃŸ (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Represents horizontal or vertical lines.\n */\nqx.Class.define(\"qx.ui.virtual.layer.GridLines\", {\n  extend: qx.ui.virtual.layer.Abstract,\n\n  /**\n   * @param orientation {String?\"horizontal\"} The grid line orientation.\n   * @param lineColor {Color?null} The default color for grid lines\n   * @param lineSize {PositiveInteger|null} The default width/height for grid\n   *    lines.\n   */\n  construct(orientation, lineColor, lineSize) {\n    super();\n    this.setZIndex(11);\n\n    if (lineColor) {\n      this.setDefaultLineColor(lineColor);\n    }\n\n    if (lineSize !== undefined) {\n      this.setDefaultLineSize(lineSize);\n    }\n\n    this.__lineColors = [];\n    this.__lineSizes = [];\n\n    this._isHorizontal = (orientation || \"horizontal\") == \"horizontal\";\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The default color for grid lines.*/\n    defaultLineColor: {\n      init: \"gray\",\n      check: \"Color\",\n      themeable: true\n    },\n\n    /** The default width/height for grid lines.*/\n    defaultLineSize: {\n      init: 1,\n      check: \"PositiveInteger\",\n      themeable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** Stores the colors for deviant grid lines. */\n    __lineColors: null,\n\n    /** Stores the width/height for deviant grid lines. */\n    __lineSizes: null,\n\n    /**\n     * Whether horizontal lines are rendered\n     *\n     * @return {Boolean} Whether horizontal lines are rendered\n     */\n    isHorizontal() {\n      return this._isHorizontal;\n    },\n\n    /**\n     * Sets the color for the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @param color {Color} The color.\n     */\n    setLineColor(index, color) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertPositiveNumber(index);\n        qx.core.Assert.assertString(color);\n      }\n      this.__lineColors[index] = color;\n\n      if (this.__isLineRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n    /**\n     * Sets the width/height for the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @param size {PositiveInteger} The size.\n     */\n    setLineSize(index, size) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertPositiveInteger(index);\n        qx.core.Assert.assertPositiveInteger(size);\n      }\n      this.__lineSizes[index] = size;\n\n      if (this.__isLineRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n    /**\n     * Whether the line with the given index is currently rendered (i.e. in the\n     * layer's view port).\n     *\n     * @param index {Integer} The line's index\n     * @return {Boolean} Whether the line is rendered\n     */\n    __isLineRendered(index) {\n      if (this._isHorizontal) {\n        var firstColumn = this.getFirstColumn();\n        var lastColumn = firstColumn + this.getColumnSizes().length - 1;\n        return index >= firstColumn && index <= lastColumn;\n      } else {\n        var firstRow = this.getFirstRow();\n        var lastRow = firstRow + this.getRowSizes().length - 1;\n        return index >= firstRow && index <= lastRow;\n      }\n    },\n\n    /**\n     * Returns the size of the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @return {PositiveInteger} The size.\n     */\n    getLineSize(index) {\n      return this.__lineSizes[index] || this.getDefaultLineSize();\n    },\n\n    /**\n     * Returns the color of the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @return {String} The color.\n     */\n    getLineColor(index) {\n      return this.__lineColors[index] || this.getDefaultLineColor();\n    },\n\n    /**\n     * Helper function to render horizontal lines.\n     *\n     * @param htmlArr {Array} An array to store the generated HTML in.\n     * @param firstRow {Integer} The first visible row\n     * @param rowSizes {Array} An array containing the row sizes.\n     */\n    __renderHorizontalLines(htmlArr, firstRow, rowSizes) {\n      var top = 0;\n      var color, height;\n      for (var y = 0; y < rowSizes.length - 1; y++) {\n        color = this.getLineColor(firstRow + y);\n        height = this.getLineSize(firstRow + y);\n\n        top += rowSizes[y];\n        htmlArr.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"height: \" + height + \"px;\",\n          \"width: 100%;\",\n          \"top:\",\n          top - (height > 1 ? Math.floor(height / 2) : 1),\n          \"px;\",\n          \"background-color:\",\n          color,\n          \"'>\",\n          \"</div>\"\n        );\n      }\n    },\n\n    /**\n     * Helper function to render vertical lines.\n     *\n     * @param htmlArr {Array} The array to store the generated HTML in.\n     * @param firstColumn {Integer} The first visible column\n     * @param columnSizes {Array} An array containing the column sizes.\n     */\n    __renderVerticalLines(htmlArr, firstColumn, columnSizes) {\n      var left = 0;\n      var color, width;\n      for (var x = 0; x < columnSizes.length - 1; x++) {\n        color = this.getLineColor(firstColumn + x);\n        width = this.getLineSize(firstColumn + x);\n\n        left += columnSizes[x];\n        htmlArr.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"width: \" + width + \"px;\",\n          \"height: 100%;\",\n          \"top: 0px;\",\n          \"left:\",\n          left - (width > 1 ? Math.floor(width / 2) : 1),\n          \"px;\",\n          \"background-color:\",\n          color,\n          \"'>\",\n          \"</div>\"\n        );\n      }\n    },\n\n    // overridden\n    _fullUpdate(firstRow, firstColumn, rowSizes, columnSizes) {\n      var html = [];\n      if (this._isHorizontal) {\n        this.__renderHorizontalLines(html, firstRow, rowSizes);\n      } else {\n        this.__renderVerticalLines(html, firstColumn, columnSizes);\n      }\n      this.getContentElement().setAttribute(\"html\", html.join(\"\"));\n    },\n\n    // overridden\n    _updateLayerWindow(firstRow, firstColumn, rowSizes, columnSizes) {\n      var rowChanged =\n        firstRow !== this.getFirstRow() ||\n        rowSizes.length !== this.getRowSizes().length;\n\n      var columnChanged =\n        firstColumn !== this.getFirstColumn() ||\n        columnSizes.length !== this.getColumnSizes().length;\n\n      if (\n        (this._isHorizontal && rowChanged) ||\n        (!this._isHorizontal && columnChanged)\n      ) {\n        this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      }\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this.__lineColors = this.__lineSizes = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}