{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "virtual",
    "layer",
    "Abstract",
    "construct",
    "orientation",
    "lineColor",
    "lineSize",
    "setZIndex",
    "setDefaultLineColor",
    "undefined",
    "setDefaultLineSize",
    "__lineColors",
    "__lineSizes",
    "_isHorizontal",
    "properties",
    "defaultLineColor",
    "init",
    "check",
    "themeable",
    "defaultLineSize",
    "members",
    "isHorizontal",
    "setLineColor",
    "index",
    "color",
    "__isLineRendered",
    "updateLayerData",
    "setLineSize",
    "size",
    "firstColumn",
    "getFirstColumn",
    "lastColumn",
    "getColumnSizes",
    "length",
    "firstRow",
    "getFirstRow",
    "lastRow",
    "getRowSizes",
    "getLineSize",
    "getDefaultLineSize",
    "getLineColor",
    "getDefaultLineColor",
    "__renderHorizontalLines",
    "htmlArr",
    "rowSizes",
    "top",
    "height",
    "y",
    "push",
    "Math",
    "floor",
    "__renderVerticalLines",
    "columnSizes",
    "left",
    "width",
    "x",
    "_fullUpdate",
    "html",
    "getContentElement",
    "setAttribute",
    "join",
    "_updateLayerWindow",
    "rowChanged",
    "columnChanged",
    "destruct",
    "GridLines"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/virtual/layer/GridLines.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan WeiÃŸ (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * Represents horizontal or vertical lines.\n */\nqx.Class.define(\"qx.ui.virtual.layer.GridLines\", {\n  extend: qx.ui.virtual.layer.Abstract,\n\n  /**\n   * @param orientation {String?\"horizontal\"} The grid line orientation.\n   * @param lineColor {Color?null} The default color for grid lines\n   * @param lineSize {PositiveInteger|null} The default width/height for grid\n   *    lines.\n   */\n  construct(orientation, lineColor, lineSize) {\n    super();\n    this.setZIndex(11);\n\n    if (lineColor) {\n      this.setDefaultLineColor(lineColor);\n    }\n\n    if (lineSize !== undefined) {\n      this.setDefaultLineSize(lineSize);\n    }\n\n    this.__lineColors = [];\n    this.__lineSizes = [];\n\n    this._isHorizontal = (orientation || \"horizontal\") == \"horizontal\";\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The default color for grid lines.*/\n    defaultLineColor: {\n      init: \"gray\",\n      check: \"Color\",\n      themeable: true\n    },\n\n    /** The default width/height for grid lines.*/\n    defaultLineSize: {\n      init: 1,\n      check: \"PositiveInteger\",\n      themeable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** Stores the colors for deviant grid lines. */\n    __lineColors: null,\n\n    /** Stores the width/height for deviant grid lines. */\n    __lineSizes: null,\n\n    /**\n     * Whether horizontal lines are rendered\n     *\n     * @return {Boolean} Whether horizontal lines are rendered\n     */\n    isHorizontal() {\n      return this._isHorizontal;\n    },\n\n    /**\n     * Sets the color for the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @param color {Color} The color.\n     */\n    setLineColor(index, color) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertPositiveNumber(index);\n        qx.core.Assert.assertString(color);\n      }\n      this.__lineColors[index] = color;\n\n      if (this.__isLineRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n    /**\n     * Sets the width/height for the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @param size {PositiveInteger} The size.\n     */\n    setLineSize(index, size) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertPositiveInteger(index);\n        qx.core.Assert.assertPositiveInteger(size);\n      }\n      this.__lineSizes[index] = size;\n\n      if (this.__isLineRendered(index)) {\n        this.updateLayerData();\n      }\n    },\n\n    /**\n     * Whether the line with the given index is currently rendered (i.e. in the\n     * layer's view port).\n     *\n     * @param index {Integer} The line's index\n     * @return {Boolean} Whether the line is rendered\n     */\n    __isLineRendered(index) {\n      if (this._isHorizontal) {\n        var firstColumn = this.getFirstColumn();\n        var lastColumn = firstColumn + this.getColumnSizes().length - 1;\n        return index >= firstColumn && index <= lastColumn;\n      } else {\n        var firstRow = this.getFirstRow();\n        var lastRow = firstRow + this.getRowSizes().length - 1;\n        return index >= firstRow && index <= lastRow;\n      }\n    },\n\n    /**\n     * Returns the size of the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @return {PositiveInteger} The size.\n     */\n    getLineSize(index) {\n      return this.__lineSizes[index] || this.getDefaultLineSize();\n    },\n\n    /**\n     * Returns the color of the grid line with the given index.\n     *\n     * @param index {PositiveNumber} The index of the line.\n     * @return {String} The color.\n     */\n    getLineColor(index) {\n      return this.__lineColors[index] || this.getDefaultLineColor();\n    },\n\n    /**\n     * Helper function to render horizontal lines.\n     *\n     * @param htmlArr {Array} An array to store the generated HTML in.\n     * @param firstRow {Integer} The first visible row\n     * @param rowSizes {Array} An array containing the row sizes.\n     */\n    __renderHorizontalLines(htmlArr, firstRow, rowSizes) {\n      var top = 0;\n      var color, height;\n      for (var y = 0; y < rowSizes.length - 1; y++) {\n        color = this.getLineColor(firstRow + y);\n        height = this.getLineSize(firstRow + y);\n\n        top += rowSizes[y];\n        htmlArr.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"height: \" + height + \"px;\",\n          \"width: 100%;\",\n          \"top:\",\n          top - (height > 1 ? Math.floor(height / 2) : 1),\n          \"px;\",\n          \"background-color:\",\n          color,\n          \"'>\",\n          \"</div>\"\n        );\n      }\n    },\n\n    /**\n     * Helper function to render vertical lines.\n     *\n     * @param htmlArr {Array} The array to store the generated HTML in.\n     * @param firstColumn {Integer} The first visible column\n     * @param columnSizes {Array} An array containing the column sizes.\n     */\n    __renderVerticalLines(htmlArr, firstColumn, columnSizes) {\n      var left = 0;\n      var color, width;\n      for (var x = 0; x < columnSizes.length - 1; x++) {\n        color = this.getLineColor(firstColumn + x);\n        width = this.getLineSize(firstColumn + x);\n\n        left += columnSizes[x];\n        htmlArr.push(\n          \"<div style='\",\n          \"position: absolute;\",\n          \"width: \" + width + \"px;\",\n          \"height: 100%;\",\n          \"top: 0px;\",\n          \"left:\",\n          left - (width > 1 ? Math.floor(width / 2) : 1),\n          \"px;\",\n          \"background-color:\",\n          color,\n          \"'>\",\n          \"</div>\"\n        );\n      }\n    },\n\n    // overridden\n    _fullUpdate(firstRow, firstColumn, rowSizes, columnSizes) {\n      var html = [];\n      if (this._isHorizontal) {\n        this.__renderHorizontalLines(html, firstRow, rowSizes);\n      } else {\n        this.__renderVerticalLines(html, firstColumn, columnSizes);\n      }\n      this.getContentElement().setAttribute(\"html\", html.join(\"\"));\n    },\n\n    // overridden\n    _updateLayerWindow(firstRow, firstColumn, rowSizes, columnSizes) {\n      var rowChanged =\n        firstRow !== this.getFirstRow() ||\n        rowSizes.length !== this.getRowSizes().length;\n\n      var columnChanged =\n        firstColumn !== this.getFirstColumn() ||\n        columnSizes.length !== this.getColumnSizes().length;\n\n      if (\n        (this._isHorizontal && rowChanged) ||\n        (!this._isHorizontal && columnChanged)\n      ) {\n        this._fullUpdate(firstRow, firstColumn, rowSizes, columnSizes);\n      }\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this.__lineColors = this.__lineSizes = null;\n  }\n});\n"
  ],
  "mappings": "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"
}