{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "construct",
    "value",
    "setValue",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "_onChangeLocale",
    "properties",
    "rich",
    "check",
    "init",
    "event",
    "apply",
    "wrap",
    "breakWithinWords",
    "nullable",
    "buddy",
    "dereference",
    "textAlign",
    "themeable",
    "appearance",
    "refine",
    "selectable",
    "allowGrowX",
    "allowGrowY",
    "allowShrinkY",
    "members",
    "__font",
    "__invalidContentSize",
    "__tapListenerId",
    "__webfontListenerId",
    "_getContentHint",
    "__contentSize",
    "__computeContentSize",
    "width",
    "height",
    "_hasHeightForWidth",
    "getRich",
    "getWrap",
    "_applySelectable",
    "Environment",
    "get",
    "isRich",
    "_getContentHeightForWidth",
    "_createContentElement",
    "html",
    "Label",
    "_applyTextAlign",
    "old",
    "getContentElement",
    "setStyle",
    "_applyTextColor",
    "theme",
    "manager",
    "Color",
    "resolve",
    "removeStyle",
    "_applyFont",
    "removeListenerById",
    "styles",
    "lang",
    "Type",
    "isString",
    "Font",
    "bom",
    "webfonts",
    "WebFont",
    "isValid",
    "evt",
    "getData",
    "valid",
    "queue",
    "Layout",
    "add",
    "getStyles",
    "getDefaultStyles",
    "getTextColor",
    "setStyles",
    "font",
    "getFont",
    "content",
    "getValue",
    "__fixEllipsis",
    "getBreakWithinWords",
    "Object",
    "clone",
    "wordBreak",
    "getHtmlSize",
    "getTextSize",
    "parseInt",
    "domEl",
    "getDomElement",
    "innerHTML",
    "_applyBuddy",
    "removeRelatedBindings",
    "bind",
    "isFocusable",
    "focus",
    "toggleValue",
    "_applyRich",
    "setRich",
    "_applyWrap",
    "whiteSpace",
    "_applyBreakWithinWords",
    "select",
    "e",
    "translate",
    "_applyValue",
    "destruct",
    "removeListener",
    "basic"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/basic/Label.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The label class brings typical text content to the widget system.\n *\n * It supports simple text nodes and complex HTML (rich). The default\n * content mode is for text only. The mode is changeable through the property\n * {@link #rich}.\n *\n * The label supports heightForWidth when used in HTML mode. This means\n * that multi line HTML automatically computes the correct preferred height.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // a simple text label without wrapping and markup support\n *   var label1 = new qx.ui.basic.Label(\"Simple text label\");\n *   this.getRoot().add(label1, {left:20, top:10});\n *\n *   // a HTML label with automatic line wrapping\n *   var label2 = new qx.ui.basic.Label().set({\n *     value: \"A <b>long label</b> text with auto-wrapping. This also may contain <b style='color:red'>rich HTML</b> markup.\",\n *     rich : true,\n *     width: 120\n *   });\n *   this.getRoot().add(label2, {left:20, top:50});\n * </pre>\n *\n * The first label in this example is a basic text only label. As such no\n * automatic wrapping is supported. The second label is a long label containing\n * HTML markup with automatic line wrapping.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/label.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.ui.basic.Label\", {\n  extend: qx.ui.core.Widget,\n  implement: [qx.ui.form.IStringForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} Text or HTML content to use\n   */\n  construct(value) {\n    super();\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRich\",\n      apply: \"_applyRich\"\n    },\n\n    /**\n     * Controls whether text wrap is activated or not. But please note, that\n     * this property works only in combination with the property {@link #rich}.\n     * The {@link #wrap} has only an effect if the {@link #rich} property is\n     * set to <code>true</code>, otherwise {@link #wrap} has no effect.\n     */\n    wrap: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyWrap\"\n    },\n\n    /**\n     * Controls whether line wrapping can occur in the middle of a word; this is\n     * typically only useful when there is a restricted amount of horizontal space\n     * and words would otherwise overflow beyond the width of the element.  Words\n     * are typically considered as separated by spaces, so \"abc/def/ghi\" is a 11\n     * character word that would not be split without `breakWithWords` set to true.\n     */\n    breakWithinWords: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyBreakWithinWords\"\n    },\n\n    /**\n     * Contains the HTML or text content. Interpretation depends on the value\n     * of {@link #rich}. In text mode entities and other HTML special content\n     * is not supported. But it is possible to use unicode escape sequences\n     * to insert symbols and other non ASCII characters.\n     */\n    value: {\n      check: \"String\",\n      apply: \"_applyValue\",\n      event: \"changeValue\",\n      nullable: true\n    },\n\n    /**\n     * The buddy property can be used to connect the label to another widget.\n     * That causes two things:\n     * <ul>\n     *   <li>The label will always take the same enabled state as the buddy\n     *       widget.\n     *   </li>\n     *   <li>A tap on the label will focus the buddy widget.</li>\n     * </ul>\n     * This is the behavior of the for attribute of HTML:\n     * http://www.w3.org/TR/html401/interact/forms.html#adef-for\n     */\n    buddy: {\n      check: \"qx.ui.core.Widget\",\n      apply: \"_applyBuddy\",\n      nullable: true,\n      init: null,\n      dereference: true\n    },\n\n    /** Control the text alignment */\n    textAlign: {\n      check: [\"left\", \"center\", \"right\", \"justify\"],\n      nullable: true,\n      themeable: true,\n      apply: \"_applyTextAlign\",\n      event: \"changeTextAlign\"\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"label\"\n    },\n\n    // overridden\n    selectable: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowGrowX: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowGrowY: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowShrinkY: {\n      refine: true,\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __font: null,\n    __invalidContentSize: null,\n    __tapListenerId: null,\n    __webfontListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getContentHint() {\n      if (this.__invalidContentSize) {\n        this.__contentSize = this.__computeContentSize();\n        delete this.__invalidContentSize;\n      }\n\n      return {\n        width: this.__contentSize.width,\n        height: this.__contentSize.height\n      };\n    },\n\n    // overridden\n    _hasHeightForWidth() {\n      return this.getRich() && this.getWrap();\n    },\n\n    // overridden\n    _applySelectable(value) {\n      // This is needed for all browsers not having text-overflow:ellipsis\n      // but supporting XUL (firefox < 4)\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=312156\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        if (value && !this.isRich()) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\n              \"Only rich labels are selectable in browsers with Gecko engine!\"\n            );\n          }\n          return;\n        }\n      }\n\n      super._applySelectable(value);\n    },\n\n    // overridden\n    _getContentHeightForWidth(width) {\n      if (!this.getRich() && !this.getWrap()) {\n        return null;\n      }\n      return this.__computeContentSize(width).height;\n    },\n\n    // overridden\n    _createContentElement() {\n      return new qx.html.Label();\n    },\n\n    // property apply\n    _applyTextAlign(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n    // overridden\n    _applyTextColor(value, old) {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\",\n          qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LABEL ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Internal fallback of label size when no font is defined\n     *\n     * @lint ignoreReferenceField(__contentSize)\n     */\n    __contentSize: {\n      width: 0,\n      height: 0\n    },\n\n    // property apply\n    _applyFont(value, old) {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n      // Apply\n      var styles;\n      if (value) {\n        if (qx.lang.Type.isString(value)) {\n          value = qx.theme.manager.Font.getInstance().resolve(value);\n        }\n        this.__font = value;\n        if (\n          this.__font instanceof qx.bom.webfonts.WebFont &&\n          !this.__font.isValid()\n        ) {\n          this.__webfontListenerId = this.__font.addListener(\n            \"changeStatus\",\n            evt => {\n              if (evt.getData().valid) {\n                this.__invalidContentSize = true;\n                qx.ui.core.queue.Layout.add(this);\n              }\n            }\n          );\n        }\n        styles = this.__font.getStyles();\n      } else {\n        this.__font = null;\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      this.getContentElement().setStyles(styles);\n\n      // Invalidate text size\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Internal utility to compute the content dimensions.\n     *\n     * @param width {Integer?null} Optional width constraint\n     * @return {Map} Map with <code>width</code> and <code>height</code> keys\n     */\n    __computeContentSize(width) {\n      var Label = qx.bom.Label;\n      var font = this.getFont();\n\n      var styles = font\n        ? this.__font.getStyles()\n        : qx.bom.Font.getDefaultStyles();\n      var content = this.getValue() || \"A\";\n      var rich = this.getRich();\n\n      if (this.__webfontListenerId) {\n        this.__fixEllipsis();\n      }\n      if (rich && this.getBreakWithinWords()) {\n        styles = qx.lang.Object.clone(styles);\n        styles.wordBreak = \"break-all\";\n      }\n\n      return rich\n        ? Label.getHtmlSize(content, styles, width)\n        : Label.getTextSize(content, styles);\n    },\n\n    /**\n     * Firefox > 9 on OS X will draw an ellipsis on top of the label content even\n     * though there is enough space for the text. Re-applying the content forces\n     * a recalculation and fixes the problem. See qx bug #6293\n     */\n    __fixEllipsis() {\n      if (!this.getContentElement()) {\n        return;\n      }\n      if (\n        qx.core.Environment.get(\"os.name\") == \"osx\" &&\n        qx.core.Environment.get(\"engine.name\") == \"gecko\" &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 16 &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) > 9\n      ) {\n        var domEl = this.getContentElement().getDomElement();\n        if (domEl) {\n          /* eslint-disable-next-line no-self-assign */\n          domEl.innerHTML = domEl.innerHTML;\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLIER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyBuddy(value, old) {\n      if (old != null) {\n        this.removeRelatedBindings(old);\n        this.removeListenerById(this.__tapListenerId);\n        this.__tapListenerId = null;\n      }\n\n      if (value != null) {\n        value.bind(\"enabled\", this, \"enabled\");\n        this.__tapListenerId = this.addListener(\"tap\", () => {\n          // only focus focusable elements [BUG #3555]\n          if (value.isFocusable()) {\n            value.focus.apply(value);\n          }\n          // furthermore toggle if possible [BUG #6881]\n          if (\n            \"toggleValue\" in value &&\n            typeof value.toggleValue === \"function\"\n          ) {\n            value.toggleValue();\n          }\n        });\n      }\n    },\n\n    // property apply\n    _applyRich(value) {\n      // Sync with content element\n      this.getContentElement().setRich(value);\n\n      // Mark text size cache as invalid\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // property apply\n    _applyWrap(value, old) {\n      if (value && !this.isRich()) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.warn(\"Only rich labels support wrap.\");\n        }\n      }\n\n      if (this.isRich()) {\n        // apply the white space style to the label to force it not\n        // to wrap if wrap is set to false [BUG #3732]\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\n        this.getContentElement().setStyle(\"whiteSpace\", whiteSpace);\n      }\n    },\n\n    // property apply\n    _applyBreakWithinWords(value, old) {\n      this.getContentElement().setStyle(\n        \"wordBreak\",\n        this.isRich() && value ? \"break-all\" : \"normal\"\n      );\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        var content = this.getValue();\n        if (content && content.translate) {\n          this.setValue(content.translate());\n        }\n      },\n\n      false: null\n    }),\n\n    // property apply\n    _applyValue: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(value, old) {\n        // Sync with content element\n        if (value && value.translate) {\n          this.getContentElement().setValue(value.translate());\n        } else {\n          this.getContentElement().setValue(value);\n        }\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      },\n\n      false(value, old) {\n        this.getContentElement().setValue(value);\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      }\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.__font = null;\n  }\n});\n"
  ],
  "mappings": "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"
}