{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "INPUT_DIALOG",
    "MESSAGE_DIALOG",
    "WARNING_DIALOG",
    "ERROR_DIALOG",
    "WAITING_DIALOG",
    "members",
    "alert",
    "title",
    "text",
    "handler",
    "scope",
    "button",
    "Environment",
    "get",
    "callback",
    "call",
    "__processDialogButtons",
    "navigator",
    "notification",
    "__showNonNativeDialog",
    "ui",
    "mobile",
    "dialog",
    "Manager",
    "confirm",
    "buttons",
    "index",
    "input",
    "error",
    "warning",
    "wait",
    "__P_395_0",
    "Array",
    "join",
    "__P_395_1",
    "dialogType",
    "widget",
    "container",
    "Composite",
    "layout",
    "VBox",
    "set",
    "alignY",
    "Popup",
    "setModal",
    "setTitle",
    "onBackButton",
    "evt",
    "isVisible",
    "getData",
    "preventDefault",
    "addListener",
    "application",
    "Init",
    "getApplication",
    "removeListener",
    "waitingWidget",
    "HBox",
    "alignX",
    "add",
    "BusyIndicator",
    "labelWidget",
    "basic",
    "Label",
    "addCssClass",
    "inputWidget",
    "inputText",
    "form",
    "TextField",
    "buttonContainer",
    "i",
    "l",
    "length",
    "Button",
    "flex",
    "hide",
    "getValue",
    "destroy",
    "show",
    "getContainerElement",
    "focus"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/dialog/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Gabriel Munteanu (gabios)\n\n************************************************************************ */\n\n/**\n * Very basic dialog manager. Displays a native alert or confirm dialog if\n * the application is running in a PhoneGap environment. For debugging in a browser\n * it displays the browser <code>alert</code> or <code>confirm</code> dialog. In the near\n * future this should be replaced by dialog widgets.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *    var buttons = [];\n *    buttons.push(qx.locale.Manager.tr(\"OK\"));\n *    buttons.push(qx.locale.Manager.tr(\"Cancel\"));\n *    var title = \"Delete item\";\n *    var text = \"Do you want to delete the item?\"\n *    qx.ui.mobile.dialog.Manager.getInstance().confirm(title, text, function(index) {\n *      if (index==1) {\n *        // delete the item\n *      }\n *    }, this, buttons);\n * </pre>\n *\n * This example displays a confirm dialog and defines a button click handler.\n */\nqx.Class.define(\"qx.ui.mobile.dialog.Manager\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    INPUT_DIALOG: 1,\n    MESSAGE_DIALOG: 2,\n    WARNING_DIALOG: 3,\n    ERROR_DIALOG: 4,\n    WAITING_DIALOG: 5\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Displays an alert box. When the application is running in a PhoneGap\n     * environment, a native alert box is shown. When debugging in a browser, a\n     * browser alert is shown.\n     *\n     * @param title {String} The title of the alert box\n     * @param text {String} The text to display in the alert box\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The button title\n     * @return {qx.ui.mobile.dialog.Popup|Object} a reference to an alert dialog\n     *          instance. An <code>Object</code>, if environment is\n     *          <code>phonegap</code>, or a {@link qx.ui.mobile.dialog.Popup}\n     *          if not.\n     * @lint ignoreDeprecated(alert)\n     */\n    alert(title, text, handler, scope, button) {\n      // TOOD : MOVE THIS TO PHONEGAP CLASS\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"phonegap.notification\")\n      ) {\n        var callback = function () {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      } else {\n        return this.__showNonNativeDialog(\n          title,\n          text,\n          handler,\n          scope,\n          [button],\n          qx.ui.mobile.dialog.Manager.MESSAGE_DIALOG\n        );\n      }\n    },\n\n    /**\n     * Displays a confirm box. When the application is running in a PhoneGap\n     * environment, a native confirm box is shown. When debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the confirm box\n     * @param text {String} The text to display in the confirm box\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 0.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    confirm(title, text, handler, scope, buttons) {\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"phonegap.notification\")\n      ) {\n        var callback = function (index) {\n          handler.call(scope, index - 1);\n        };\n        var buttons = this.__processDialogButtons(buttons);\n        return navigator.notification.confirm(text, callback, title, buttons);\n      } else {\n        return this.__showNonNativeDialog(\n          title,\n          text,\n          handler,\n          scope,\n          buttons,\n          qx.ui.mobile.dialog.Manager.MESSAGE_DIALOG\n        );\n      }\n    },\n\n    /**\n     * Displays an input dialog.\n     *\n     * @param title {String} The title of the input dialog.\n     * @param text {String} The text to display in the input dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    input(title, text, handler, scope, buttons) {\n      return this.__showNonNativeDialog(\n        title,\n        text,\n        handler,\n        scope,\n        buttons,\n        qx.ui.mobile.dialog.Manager.INPUT_DIALOG\n      );\n    },\n\n    /**\n     * Displays an error dialog. When the application is running in an PhoneGap\n     * environment, a native error dialog is shown. For debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the error dialog.\n     * @param text {String} The text to display in the error dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The text entry represents a button and its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    error(title, text, handler, scope, button) {\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"phonegap.notification\")\n      ) {\n        var callback = function () {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      } else {\n        return this.__showNonNativeDialog(\n          title,\n          text,\n          handler,\n          scope,\n          button,\n          qx.ui.mobile.dialog.Manager.ERROR_DIALOG\n        );\n      }\n    },\n\n    /**\n     * Displays a warning dialog. When the application is running in an PhoneGap\n     * environment, a native warning dialog is shown. For debugging in a browser, a\n     * browser confirm is shown.\n     *\n     * @param title {String} The title of the warning dialog.\n     * @param text {String} The text to display in the warning dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param button {String} The text entry represents a button and its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    warning(title, text, handler, scope, button) {\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"phonegap.notification\")\n      ) {\n        var callback = function () {\n          if (handler) {\n            handler.call(scope);\n          }\n        };\n        var button = this.__processDialogButtons(button);\n        return navigator.notification.alert(text, callback, title, button);\n      } else {\n        return this.__showNonNativeDialog(\n          title,\n          text,\n          handler,\n          scope,\n          button,\n          qx.ui.mobile.dialog.Manager.WARNING_DIALOG\n        );\n      }\n    },\n\n    /**\n     * Displays a waiting dialog.\n     *\n     * @param title {String} The title of the waiting dialog.\n     * @param text {String} The text to display in the waiting dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @lint ignoreDeprecated(confirm)\n     */\n    wait(title, text, handler, scope, buttons) {\n      return this.__showNonNativeDialog(\n        title,\n        text,\n        handler,\n        scope,\n        buttons,\n        qx.ui.mobile.dialog.Manager.WAITING_DIALOG\n      );\n    },\n\n    /**\n     * Processes the dialog buttons. Converts them to PhoneGap compatible strings.\n     *\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {String} The concatenated, PhoneGap compatible, button string\n     */\n    __processDialogButtons(buttons) {\n      if (buttons) {\n        if (buttons instanceof Array) {\n          buttons = buttons.join(\",\");\n        } else {\n          buttons = \"\" + buttons;\n        }\n      }\n      return buttons;\n    },\n\n    /**\n     * Shows a dialog widget.\n     *\n     * @param title {String} The title of the dialog.\n     * @param text {String} The text to display in the dialog.\n     * @param handler {Function} The handler to call when the <code>OK</code> button\n     *     was pressed. The first parameter of the function is the <code>index</code>\n     *     of the pressed button, starting from 1.\n     * @param scope {Object} The scope of the handler\n     * @param buttons {String[]} Each text entry of the array represents a button and\n     *     its title\n     * @return {qx.ui.mobile.dialog.Popup} The dialog widget\n     * @param dialogType {Integer} One of the static dialog types.\n     */\n    __showNonNativeDialog(title, text, handler, scope, buttons, dialogType) {\n      var widget = new qx.ui.mobile.container.Composite(\n        new qx.ui.mobile.layout.VBox().set({ alignY: \"middle\" })\n      );\n\n      var dialog = new qx.ui.mobile.dialog.Popup(widget);\n\n      dialog.setModal(true);\n      dialog.setTitle(title);\n\n      // prevent the back action until the dialog is visible\n      var onBackButton = function (evt) {\n        if (dialog.isVisible() && !!evt.getData()) {\n          evt.preventDefault();\n        }\n      };\n      dialog.addListener(\"changeVisibility\", function (evt) {\n        var application = qx.core.Init.getApplication();\n        if (evt.getData() === \"visible\") {\n          application.addListener(\"back\", onBackButton, this);\n        } else {\n          application.removeListener(\"back\", onBackButton, this);\n        }\n      });\n\n      if (dialogType == qx.ui.mobile.dialog.Manager.WAITING_DIALOG) {\n        var waitingWidget = new qx.ui.mobile.container.Composite(\n          new qx.ui.mobile.layout.HBox().set({ alignX: \"center\" })\n        );\n\n        widget.add(waitingWidget);\n        waitingWidget.add(new qx.ui.mobile.dialog.BusyIndicator(text));\n      } else {\n        var labelWidget = new qx.ui.mobile.container.Composite(\n          new qx.ui.mobile.layout.HBox().set({ alignX: \"center\" })\n        );\n\n        labelWidget.add(new qx.ui.mobile.basic.Label(text));\n        labelWidget.addCssClass(\"gap\");\n        widget.add(labelWidget);\n        if (dialogType == qx.ui.mobile.dialog.Manager.INPUT_DIALOG) {\n          var inputWidget = new qx.ui.mobile.container.Composite(\n            new qx.ui.mobile.layout.HBox().set({ alignX: \"center\" })\n          );\n\n          inputWidget.addCssClass(\"gap\");\n          var inputText = new qx.ui.mobile.form.TextField();\n          inputWidget.add(inputText);\n          widget.add(inputWidget);\n        }\n\n        var buttonContainer = new qx.ui.mobile.container.Composite(\n          new qx.ui.mobile.layout.HBox().set({ alignX: \"center\" })\n        );\n\n        buttonContainer.addCssClass(\"gap\");\n        for (var i = 0, l = buttons.length; i < l; i++) {\n          var button = new qx.ui.mobile.form.Button(buttons[i]);\n          /* see the comment in android.css for width: 0 for toolbar-button class*/\n          button.addCssClass(\"dialog-button\");\n          buttonContainer.add(button, { flex: 1 });\n          var callback = (function (index) {\n            return function () {\n              dialog.hide();\n              if (handler) {\n                handler.call(\n                  scope,\n                  index,\n                  inputText ? inputText.getValue() : null\n                );\n              }\n              dialog.destroy();\n            };\n          })(i);\n          button.addListener(\"tap\", callback);\n        }\n        widget.add(buttonContainer);\n      }\n\n      dialog.show();\n\n      if (inputText) {\n        inputText.getContainerElement().focus();\n      }\n\n      return dialog;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}