{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "core",
    "Widget",
    "include",
    "form",
    "MValue",
    "MForm",
    "MModelProperty",
    "MState",
    "implement",
    "IField",
    "IForm",
    "IModel",
    "construct",
    "value",
    "labelChecked",
    "labelUnchecked",
    "__labelUnchecked",
    "__labelChecked",
    "_setAttribute",
    "__switch",
    "_createSwitch",
    "_add",
    "setValue",
    "addListener",
    "_onTap",
    "_onSwipe",
    "addCssClass",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "members",
    "__value",
    "__lastToggleTimestamp",
    "_getChild",
    "toggleButtonSwitch",
    "container",
    "Composite",
    "_setValue",
    "Error",
    "removeCssClass",
    "_getValue",
    "toggle",
    "getValue",
    "evt",
    "_checkLastPointerTime",
    "direction",
    "getDirection",
    "elapsedTime",
    "Date",
    "getTime",
    "destruct",
    "removeListener",
    "_disposeObjects",
    "ToggleButton"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/ToggleButton.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\n/**\n * A toggle Button widget\n *\n * If the user tap the button, the button toggles between the <code>ON</code>\n * and <code>OFF</code> state.\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.mobile.form.ToggleButton(false,\"YES\",\"NO\");\n *\n *   button.addListener(\"changeValue\", function(e) {\n *     alert(e.getData());\n *   }, this);\n *\n *   this.getRoot.add(button);\n * </pre>\n *\n * This example creates a toggle button and attaches an\n * event listener to the {@link #changeValue} event.\n */\nqx.Class.define(\"qx.ui.mobile.form.ToggleButton\", {\n  extend: qx.ui.mobile.core.Widget,\n  include: [\n    qx.ui.mobile.form.MValue,\n    qx.ui.form.MForm,\n    qx.ui.form.MModelProperty,\n    qx.ui.mobile.form.MState\n  ],\n\n  implement: [qx.ui.form.IField, qx.ui.form.IForm, qx.ui.form.IModel],\n\n  /**\n   * @param value {Boolean?null} The value of the button\n   * @param labelChecked {Boolean?\"ON\"} The value of the text display when toggleButton is active\n   * @param labelUnchecked {Boolean?\"OFF\"} The value of the text display when toggleButton is inactive\n   */\n  construct(value, labelChecked, labelUnchecked) {\n    super();\n\n    if (labelChecked && labelUnchecked) {\n      this.__labelUnchecked = labelUnchecked;\n      this.__labelChecked = labelChecked;\n    }\n\n    this._setAttribute(\"data-label-checked\", this.__labelChecked);\n    this._setAttribute(\"data-label-unchecked\", this.__labelUnchecked);\n\n    this.__switch = this._createSwitch();\n    this._add(this.__switch);\n\n    if (value) {\n      this.setValue(value);\n    }\n\n    this.addListener(\"tap\", this._onTap, this);\n    this.addListener(\"swipe\", this._onSwipe, this);\n\n    this.addCssClass(\"gap\");\n  },\n\n  properties: {\n    // overridden\n    defaultCssClass: {\n      refine: true,\n      init: \"togglebutton\"\n    }\n  },\n\n  members: {\n    __switch: null,\n    __value: false,\n    __labelUnchecked: \"OFF\",\n    __labelChecked: \"ON\",\n    __lastToggleTimestamp: 0,\n\n    /**\n     * Returns the child control of the toggle button.\n     *\n     * @return {qx.ui.mobile.container.Composite} the child control.\n     */\n    _getChild() {\n      return this.__switch;\n    },\n\n    /**\n     * Creates the switch control of the widget.\n     * @return {qx.ui.mobile.container.Composite} The switch control.\n     */\n    _createSwitch() {\n      var toggleButtonSwitch = new qx.ui.mobile.container.Composite();\n      toggleButtonSwitch.addCssClass(\"togglebutton-switch\");\n      return toggleButtonSwitch;\n    },\n\n    /**\n     * Sets the value [true/false] of this toggle button.\n     * It is called by setValue method of qx.ui.mobile.form.MValue mixin\n     * @param value {Boolean} the new value of the toggle button\n     */\n    _setValue(value) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(\"value for \" + this + \" should be boolean\");\n      }\n      if (value) {\n        this.addCssClass(\"checked\");\n      } else {\n        this.removeCssClass(\"checked\");\n      }\n      this.__value = value;\n    },\n\n    /**\n     * Gets the value [true/false] of this toggle button.\n     * It is called by getValue method of qx.ui.mobile.form.MValue mixin\n     * @return {Boolean} the value of the toggle button\n     */\n    _getValue() {\n      return this.__value;\n    },\n\n    /**\n     * Toggles the value of the button.\n     */\n    toggle() {\n      this.setValue(!this.getValue());\n    },\n\n    /**\n     * Event handler. Called when the tap event occurs.\n     * Toggles the button.\n     *\n     * @param evt {qx.event.type.Tap} The tap event.\n     */\n    _onTap(evt) {\n      if (this._checkLastPointerTime()) {\n        this.toggle();\n      }\n    },\n\n    /**\n     * Event handler. Called when the swipe event occurs.\n     * Toggles the button, when.\n     *\n     * @param evt {qx.event.type.Swipe} The swipe event.\n     */\n    _onSwipe(evt) {\n      if (this._checkLastPointerTime()) {\n        var direction = evt.getDirection();\n        if (direction == \"left\") {\n          if (this.__value == true) {\n            this.toggle();\n          }\n        } else {\n          if (this.__value == false) {\n            this.toggle();\n          }\n        }\n      }\n    },\n\n    /**\n     * Checks if last touch event (swipe,tap) is more than 500ms ago.\n     * Bugfix for several simulator/emulator, when tap is immediately followed by a swipe.\n     * @return {Boolean} <code>true</code> if the last event was more than 500ms ago\n     */\n    _checkLastPointerTime() {\n      var elapsedTime = new Date().getTime() - this.__lastToggleTimestamp;\n      this.__lastToggleTimestamp = new Date().getTime();\n      return elapsedTime > 500;\n    }\n  },\n\n  destruct() {\n    this.removeListener(\"tap\", this._onTap, this);\n    this.removeListener(\"swipe\", this._onSwipe, this);\n\n    this._disposeObjects(\"__switch\", \"__labelUnchecked\", \"__labelChecked\");\n  }\n});\n"
  ],
  "mappings": "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"
}