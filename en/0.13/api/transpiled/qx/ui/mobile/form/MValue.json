{
  "className": "qx.ui.mobile.form.MValue",
  "packageName": "qx.ui.mobile.form",
  "name": "MValue",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 607
      },
      "end": {
        "line": 262,
        "column": 3,
        "index": 6619
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The mixin contains all functionality to provide a value property for input\n widgets.</p>"
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.event.handler.Input"
        }
      ]
    }
  },
  "type": "mixin",
  "construct": {
    "location": {
      "start": {
        "line": 35,
        "column": 2,
        "index": 909
      },
      "end": {
        "line": 58,
        "column": 3,
        "index": 1453
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "value {var?null} The value of the widget.",
          "paramName": "value",
          "description": " The value of the widget.",
          "optional": true,
          "defaultValue": "null",
          "type": "var"
        }
      ]
    }
  },
  "events": {
    "input": {
      "location": {
        "start": {
          "line": 73,
          "column": 4,
          "index": 1862
        },
        "end": {
          "line": 73,
          "column": 31,
          "index": 1889
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The event is fired on every keystroke modifying the value of the field.\n The method {@link qx.event.type.Data#getData} returns the\n current value of the text field.</p>"
          }
        ]
      },
      "name": "input",
      "type": "qx.event.type.Data"
    },
    "changeValue": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2374
        },
        "end": {
          "line": 86,
          "column": 37,
          "index": 2407
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The event is fired each time the text field looses focus and the\n text field values has changed.\n If you change {@link #liveUpdate} to true, the changeValue event will\n be fired after every keystroke and not only after every focus loss. In\n that mode, the changeValue event is equal to the {@link #input} event.\n The method {@link qx.event.type.Data#getData} returns the\n current text value of the field.</p>"
          }
        ]
      },
      "name": "changeValue",
      "type": "qx.event.type.Data"
    }
  },
  "properties": {
    "liveUpdate": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 2809
        },
        "end": {
          "line": 104,
          "column": 5,
          "index": 2870
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the {@link #changeValue} event should be fired on every key\n input. If set to true, the changeValue event is equal to the\n {@link #input} event.</p>"
          }
        ]
      },
      "name": "liveUpdate",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    }
  },
  "members": {
    "__oldValue": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3078
        },
        "end": {
          "line": 114,
          "column": 20,
          "index": 3094
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__inputTimeoutHandle": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 3100
        },
        "end": {
          "line": 115,
          "column": 30,
          "index": 3126
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__hasFocus": {
      "location": {
        "start": {
          "line": 116,
          "column": 4,
          "index": 3132
        },
        "end": {
          "line": 116,
          "column": 20,
          "index": 3148
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_convertValue": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 3302
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3511
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts the incoming value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to convert",
            "paramName": "value",
            "description": " The value to convert",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The converted value",
            "type": "var",
            "description": " The converted value"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onFocus": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3579
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 3627
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>focus</code> event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onBlur": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3694
        },
        "end": {
          "line": 146,
          "column": 5,
          "index": 3742
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for <code>blur</code> event.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "hasFocus": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 3883
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3931
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether this widget has focus or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> or <code>false</code>",
            "type": "Boolean",
            "description": " <code>true</code> or <code>false</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4027
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4312
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the value.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The value to set",
            "paramName": "value",
            "description": " The value to set",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getValue": {
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4407
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 4539
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the set value.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The set value",
            "type": "var",
            "description": " The set value"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetValue": {
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 4587
        },
        "end": {
          "line": 189,
          "column": 5,
          "index": 4634
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the value.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onChangeContent": {
      "location": {
        "start": {
          "line": 196,
          "column": 4,
          "index": 4819
        },
        "end": {
          "line": 198,
          "column": 5,
          "index": 4913
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #changeValue} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onInput": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5092
        },
        "end": {
          "line": 215,
          "column": 5,
          "index": 5383
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the {@link #input} event occurs.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {qx.event.type.Data} The event, containing the changed content.",
            "paramName": "evt",
            "description": " The event, containing the changed content.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getCaretPosition": {
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5501
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 5763
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the caret position of this widget.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the caret position.",
            "type": "Integer",
            "description": " the caret position."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_setCaretPosition": {
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 5886
        },
        "end": {
          "line": 243,
          "column": 5,
          "index": 6193
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the caret position on this widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} the caret position.",
            "paramName": "position",
            "description": " the caret position.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__fireChangeValue": {
      "location": {
        "start": {
          "line": 250,
          "column": 4,
          "index": 6321
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6482
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires the {@link #changeValue} event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The current value to fire.",
            "paramName": "value",
            "description": " The current value to fire.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getLiveUpdate": {
      "type": "function",
      "name": "getLiveUpdate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>liveUpdate</code>.\n\nFor further details take a look at the property definition: {@link #liveUpdate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for liveUpdate"
          }
        ]
      }
    },
    "isLiveUpdate": {
      "type": "function",
      "name": "isLiveUpdate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>liveUpdate</code>.\n\nFor further details take a look at the property definition: {@link #liveUpdate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for liveUpdate"
          }
        ]
      }
    },
    "setLiveUpdate": {
      "type": "function",
      "name": "setLiveUpdate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>liveUpdate</code>.\n\nFor further details take a look at the property definition: {@link #liveUpdate}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for liveUpdate"
          }
        ]
      }
    },
    "resetLiveUpdate": {
      "type": "function",
      "name": "resetLiveUpdate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>liveUpdate</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #liveUpdate}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 258,
        "column": 2,
        "index": 6491
      },
      "end": {
        "line": 261,
        "column": 3,
        "index": 6615
      }
    }
  },
  "descendants": []
}