{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "value",
    "initMaxLength",
    "initPlaceholder",
    "initReadOnly",
    "properties",
    "maxLength",
    "check",
    "nullable",
    "init",
    "apply",
    "placeholder",
    "readOnly",
    "members",
    "_applyMaxLength",
    "old",
    "_setAttribute",
    "_applyPlaceholder",
    "core",
    "Environment",
    "get",
    "focus",
    "isReadOnly",
    "getEnabled",
    "targetElement",
    "getContainerElement",
    "bom",
    "Element",
    "blur",
    "ui",
    "mobile",
    "form",
    "MText"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/MText.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tino Butz (tbtz)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The mixin contains all functionality to provide common properties for\r\n * text fields.\r\n *\r\n * @require(qx.event.handler.Input)\r\n */\r\nqx.Mixin.define(\"qx.ui.mobile.form.MText\", {\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param value {var?null} The value of the widget.\r\n   */\r\n  construct(value) {\r\n    this.initMaxLength();\r\n    this.initPlaceholder();\r\n    this.initReadOnly();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Maximal number of characters that can be entered in the input field.\r\n     */\r\n    maxLength: {\r\n      check: \"PositiveInteger\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyMaxLength\"\r\n    },\r\n\r\n    /**\r\n     * String value which will be shown as a hint if the field is all of:\r\n     * unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder\r\n     * text.\r\n     */\r\n    placeholder: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyPlaceholder\"\r\n    },\r\n\r\n    /** Whether the field is read only */\r\n    readOnly: {\r\n      check: \"Boolean\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyAttribute\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    // property apply\r\n    _applyMaxLength(value, old) {\r\n      this._setAttribute(\"maxlength\", value);\r\n    },\r\n\r\n    // property apply\r\n    _applyPlaceholder(value, old) {\r\n      // Android is not able to indent placeholder.\r\n      // Adding a space before the placeholder text, as a fix.\r\n      if (qx.core.Environment.get(\"os.name\") == \"android\" && value !== null) {\r\n        value = \" \" + value;\r\n      }\r\n      this._setAttribute(\"placeholder\", value);\r\n    },\r\n\r\n    /**\r\n     * Points the focus of the form to this widget.\r\n     */\r\n    focus() {\r\n      if (this.isReadOnly() || this.getEnabled() == false) {\r\n        return;\r\n      }\r\n\r\n      var targetElement = this.getContainerElement();\r\n      if (targetElement) {\r\n        qx.bom.Element.focus(targetElement);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes the focus from this widget.\r\n     */\r\n    blur() {\r\n      var targetElement = this.getContainerElement();\r\n      if (targetElement) {\r\n        qx.bom.Element.blur(targetElement);\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzC;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAE;MACf,IAAI,CAACC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;AACJ;AACA;MACIC,SAAS,EAAE;QACTC,KAAK,EAAE,iBAAiB;QACxBC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,WAAW,EAAE;QACXJ,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;MAED;MACAE,QAAQ,EAAE;QACRL,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEG,OAAO,EAAE;MACP;MACAC,eAAe,WAAAA,gBAACb,KAAK,EAAEc,GAAG,EAAE;QAC1B,IAAI,CAACC,aAAa,CAAC,WAAW,EAAEf,KAAK,CAAC;MACxC,CAAC;MAED;MACAgB,iBAAiB,WAAAA,kBAAChB,KAAK,EAAEc,GAAG,EAAE;QAC5B;QACA;QACA,IAAIrB,EAAE,CAACwB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,SAAS,CAAC,IAAI,SAAS,IAAInB,KAAK,KAAK,IAAI,EAAE;UACrEA,KAAK,GAAG,GAAG,GAAGA,KAAK;QACrB;QACA,IAAI,CAACe,aAAa,CAAC,aAAa,EAAEf,KAAK,CAAC;MAC1C,CAAC;MAED;AACJ;AACA;MACIoB,KAAK,WAAAA,MAAA,EAAG;QACN,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,IAAI,KAAK,EAAE;UACnD;QACF;QAEA,IAAIC,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC9C,IAAID,aAAa,EAAE;UACjB9B,EAAE,CAACgC,GAAG,CAACC,OAAO,CAACN,KAAK,CAACG,aAAa,CAAC;QACrC;MACF,CAAC;MAED;AACJ;AACA;MACII,IAAI,WAAAA,KAAA,EAAG;QACL,IAAIJ,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC9C,IAAID,aAAa,EAAE;UACjB9B,EAAE,CAACgC,GAAG,CAACC,OAAO,CAACC,IAAI,CAACJ,aAAa,CAAC;QACpC;MACF;IACF;EACF,CAAC,CAAC;EA5HF9B,EAAE,CAACmC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACnC,aAAa,GAAGA,aAAa;AAAC"
}