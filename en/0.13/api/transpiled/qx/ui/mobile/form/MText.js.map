{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "value",
    "initMaxLength",
    "initPlaceholder",
    "initReadOnly",
    "properties",
    "maxLength",
    "check",
    "nullable",
    "init",
    "apply",
    "placeholder",
    "readOnly",
    "members",
    "_applyMaxLength",
    "old",
    "_setAttribute",
    "_applyPlaceholder",
    "core",
    "Environment",
    "get",
    "focus",
    "isReadOnly",
    "getEnabled",
    "targetElement",
    "getContainerElement",
    "bom",
    "Element",
    "blur",
    "ui",
    "mobile",
    "form",
    "MText"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/MText.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * The mixin contains all functionality to provide common properties for\n * text fields.\n *\n * @require(qx.event.handler.Input)\n */\nqx.Mixin.define(\"qx.ui.mobile.form.MText\", {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {var?null} The value of the widget.\n   */\n  construct(value) {\n    this.initMaxLength();\n    this.initPlaceholder();\n    this.initReadOnly();\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Maximal number of characters that can be entered in the input field.\n     */\n    maxLength: {\n      check: \"PositiveInteger\",\n      nullable: true,\n      init: null,\n      apply: \"_applyMaxLength\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      init: null,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /** Whether the field is read only */\n    readOnly: {\n      check: \"Boolean\",\n      nullable: true,\n      init: null,\n      apply: \"_applyAttribute\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // property apply\n    _applyMaxLength(value, old) {\n      this._setAttribute(\"maxlength\", value);\n    },\n\n    // property apply\n    _applyPlaceholder(value, old) {\n      // Android is not able to indent placeholder.\n      // Adding a space before the placeholder text, as a fix.\n      if (qx.core.Environment.get(\"os.name\") == \"android\" && value !== null) {\n        value = \" \" + value;\n      }\n      this._setAttribute(\"placeholder\", value);\n    },\n\n    /**\n     * Points the focus of the form to this widget.\n     */\n    focus() {\n      if (this.isReadOnly() || this.getEnabled() == false) {\n        return;\n      }\n\n      var targetElement = this.getContainerElement();\n      if (targetElement) {\n        qx.bom.Element.focus(targetElement);\n      }\n    },\n\n    /**\n     * Removes the focus from this widget.\n     */\n    blur() {\n      var targetElement = this.getContainerElement();\n      if (targetElement) {\n        qx.bom.Element.blur(targetElement);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzC;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;IACEC,SAAS,WAATA,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;AACJ;AACA;MACIC,SAAS,EAAE;QACTC,KAAK,EAAE,iBAAiB;QACxBC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,WAAW,EAAE;QACXJ,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;MAED;MACAE,QAAQ,EAAE;QACRL,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEG,OAAO,EAAE;MACP;MACAC,eAAe,WAAfA,eAAeA,CAACb,KAAK,EAAEc,GAAG,EAAE;QAC1B,IAAI,CAACC,aAAa,CAAC,WAAW,EAAEf,KAAK,CAAC;MACxC,CAAC;MAED;MACAgB,iBAAiB,WAAjBA,iBAAiBA,CAAChB,KAAK,EAAEc,GAAG,EAAE;QAC5B;QACA;QACA,IAAIrB,EAAE,CAACwB,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,SAAS,CAAC,IAAI,SAAS,IAAInB,KAAK,KAAK,IAAI,EAAE;UACrEA,KAAK,GAAG,GAAG,GAAGA,KAAK;QACrB;QACA,IAAI,CAACe,aAAa,CAAC,aAAa,EAAEf,KAAK,CAAC;MAC1C,CAAC;MAED;AACJ;AACA;MACIoB,KAAK,WAALA,KAAKA,CAAA,EAAG;QACN,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,IAAI,KAAK,EAAE;UACnD;QACF;QAEA,IAAIC,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC9C,IAAID,aAAa,EAAE;UACjB9B,EAAE,CAACgC,GAAG,CAACC,OAAO,CAACN,KAAK,CAACG,aAAa,CAAC;QACrC;MACF,CAAC;MAED;AACJ;AACA;MACII,IAAI,WAAJA,IAAIA,CAAA,EAAG;QACL,IAAIJ,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC9C,IAAID,aAAa,EAAE;UACjB9B,EAAE,CAACgC,GAAG,CAACC,OAAO,CAACC,IAAI,CAACJ,aAAa,CAAC;QACpC;MACF;IACF;EACF,CAAC,CAAC;EA5HF9B,EAAE,CAACmC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACnC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}