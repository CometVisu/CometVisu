{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "value",
    "initMaxLength",
    "initPlaceholder",
    "initReadOnly",
    "properties",
    "maxLength",
    "check",
    "nullable",
    "init",
    "apply",
    "placeholder",
    "readOnly",
    "members",
    "_applyMaxLength",
    "old",
    "_setAttribute",
    "_applyPlaceholder",
    "core",
    "Environment",
    "get",
    "focus",
    "isReadOnly",
    "getEnabled",
    "targetElement",
    "getContainerElement",
    "bom",
    "Element",
    "blur",
    "ui",
    "mobile",
    "form",
    "MText"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/MText.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * The mixin contains all functionality to provide common properties for\n * text fields.\n *\n * @require(qx.event.handler.Input)\n */\nqx.Mixin.define(\"qx.ui.mobile.form.MText\", {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {var?null} The value of the widget.\n   */\n  construct(value) {\n    this.initMaxLength();\n    this.initPlaceholder();\n    this.initReadOnly();\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Maximal number of characters that can be entered in the input field.\n     */\n    maxLength: {\n      check: \"PositiveInteger\",\n      nullable: true,\n      init: null,\n      apply: \"_applyMaxLength\"\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to <code>null</code> to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      init: null,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /** Whether the field is read only */\n    readOnly: {\n      check: \"Boolean\",\n      nullable: true,\n      init: null,\n      apply: \"_applyAttribute\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // property apply\n    _applyMaxLength(value, old) {\n      this._setAttribute(\"maxlength\", value);\n    },\n\n    // property apply\n    _applyPlaceholder(value, old) {\n      // Android is not able to indent placeholder.\n      // Adding a space before the placeholder text, as a fix.\n      if (qx.core.Environment.get(\"os.name\") == \"android\" && value !== null) {\n        value = \" \" + value;\n      }\n      this._setAttribute(\"placeholder\", value);\n    },\n\n    /**\n     * Points the focus of the form to this widget.\n     */\n    focus() {\n      if (this.isReadOnly() || this.getEnabled() == false) {\n        return;\n      }\n\n      var targetElement = this.getContainerElement();\n      if (targetElement) {\n        qx.bom.Element.focus(targetElement);\n      }\n    },\n\n    /**\n     * Removes the focus from this widget.\n     */\n    blur() {\n      var targetElement = this.getContainerElement();\n      if (targetElement) {\n        qx.bom.Element.blur(targetElement);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EAA2C;IACzC;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;IACEC,SAVyC,qBAU/BC,KAV+B,EAUxB;MACf,KAAKC,aAAL;MACA,KAAKC,eAAL;MACA,KAAKC,YAAL;IACD,CAdwC;;IAgBzC;AACF;AACA;AACA;AACA;IAEEC,UAAU,EAAE;MACV;AACJ;AACA;MACIC,SAAS,EAAE;QACTC,KAAK,EAAE,iBADE;QAETC,QAAQ,EAAE,IAFD;QAGTC,IAAI,EAAE,IAHG;QAITC,KAAK,EAAE;MAJE,CAJD;;MAWV;AACJ;AACA;AACA;AACA;MACIC,WAAW,EAAE;QACXJ,KAAK,EAAE,QADI;QAEXC,QAAQ,EAAE,IAFC;QAGXC,IAAI,EAAE,IAHK;QAIXC,KAAK,EAAE;MAJI,CAhBH;;MAuBV;MACAE,QAAQ,EAAE;QACRL,KAAK,EAAE,SADC;QAERC,QAAQ,EAAE,IAFF;QAGRC,IAAI,EAAE,IAHE;QAIRC,KAAK,EAAE;MAJC;IAxBA,CAtB6B;;IAsDzC;AACF;AACA;AACA;AACA;IAEEG,OAAO,EAAE;MACP;MACAC,eAFO,2BAESb,KAFT,EAEgBc,GAFhB,EAEqB;QAC1B,KAAKC,aAAL,CAAmB,WAAnB,EAAgCf,KAAhC;MACD,CAJM;MAMP;MACAgB,iBAPO,6BAOWhB,KAPX,EAOkBc,GAPlB,EAOuB;QAC5B;QACA;QACA,IAAIrB,EAAE,CAACwB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,SAAtC,IAAmDnB,KAAK,KAAK,IAAjE,EAAuE;UACrEA,KAAK,GAAG,MAAMA,KAAd;QACD;;QACD,KAAKe,aAAL,CAAmB,aAAnB,EAAkCf,KAAlC;MACD,CAdM;;MAgBP;AACJ;AACA;MACIoB,KAnBO,mBAmBC;QACN,IAAI,KAAKC,UAAL,MAAqB,KAAKC,UAAL,MAAqB,KAA9C,EAAqD;UACnD;QACD;;QAED,IAAIC,aAAa,GAAG,KAAKC,mBAAL,EAApB;;QACA,IAAID,aAAJ,EAAmB;UACjB9B,EAAE,CAACgC,GAAH,CAAOC,OAAP,CAAeN,KAAf,CAAqBG,aAArB;QACD;MACF,CA5BM;;MA8BP;AACJ;AACA;MACII,IAjCO,kBAiCA;QACL,IAAIJ,aAAa,GAAG,KAAKC,mBAAL,EAApB;;QACA,IAAID,aAAJ,EAAmB;UACjB9B,EAAE,CAACgC,GAAH,CAAOC,OAAP,CAAeC,IAAf,CAAoBJ,aAApB;QACD;MACF;IAtCM;EA5DgC,CAA3C;EAxBA9B,EAAE,CAACmC,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBnC,aAAxB,GAAwCA,aAAxC"
}