{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Form",
    "construct",
    "__invalidItems",
    "members",
    "__renderer",
    "setRenderer",
    "renderer",
    "validate",
    "validateResult",
    "resetForm",
    "groups",
    "getGroups",
    "i",
    "length",
    "group",
    "j",
    "items",
    "item",
    "isValid",
    "push",
    "showErrorForItem",
    "alert",
    "getInvalidMessage",
    "_domUpdated",
    "showRow",
    "groupIndex",
    "rowIndex",
    "_getItemByIndex",
    "showItem",
    "hideRow",
    "hideItem",
    "reset",
    "getInvalidItems",
    "mobile"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/Form.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * Representation of a form. A form widget can contain one or more {@link Row} widgets.\n *\n * *Example*\n *\n * Here is an example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var title = new qx.ui.mobile.form.Title(\"Group\");\n *   var form = new qx.ui.mobile.form.Form();\n *   form.add(new qx.ui.mobile.form.TextField(), \"Username: \");\n *\n *   this.getRoot().add(title);\n *   this.getRoot().add(new qx.ui.mobile.form.renderer.Single(form));\n * </pre>\n *\n * This example creates a form and adds a row with a text field in it.\n */\nqx.Class.define(\"qx.ui.mobile.form.Form\", {\n  extend: qx.ui.form.Form,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n    this.__invalidItems = [];\n  },\n\n  members: {\n    /**\n     * the renderer this form uses to be displayed\n     */\n    __renderer: null,\n\n    /**\n     * Contains all invalid items.\n     */\n    __invalidItems: null,\n\n    /**\n     * Setter for the renderer private variable\n     * @param renderer {qx.ui.mobile.form.renderer.AbstractRenderer} the renderer\n     */\n    setRenderer(renderer) {\n      this.__renderer = renderer;\n    },\n\n    /**\n     * Validates the form using the\n     * {@link qx.ui.form.validation.Manager#validate} method.\n     * @lint ignoreDeprecated(alert)\n     *\n     * @return {Boolean|null} The validation result.\n     */\n    validate() {\n      var validateResult = super.validate();\n\n      this.__invalidItems = [];\n\n      if (this.__renderer != null) {\n        this.__renderer.resetForm();\n      }\n      var groups = this.getGroups();\n      for (var i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        for (var j = 0; j < group.items.length; j++) {\n          var item = group.items[j];\n          if (!item.isValid()) {\n            this.__invalidItems.push(item);\n\n            if (this.__renderer != null) {\n              this.__renderer.showErrorForItem(item);\n            } else {\n              /* eslint-disable-next-line no-alert */\n              alert(\"error \" + item.getInvalidMessage());\n            }\n          }\n        }\n      }\n\n      if (this.__renderer != null) {\n        this.__renderer._domUpdated();\n      }\n\n      return validateResult;\n    },\n\n    /**\n     * Makes a row visible, identified by its group and row index.\n     * @param groupIndex {Integer} the index of the group to which the row belongs to\n     * @param rowIndex {Integer} the index of the row inside the target group\n     */\n    showRow(groupIndex, rowIndex) {\n      var item = this._getItemByIndex(groupIndex, rowIndex);\n      if (item) {\n        this.__renderer.showItem(item);\n      }\n    },\n\n    /**\n     * Makes a row invisible, identified by its group and row index.\n     * @param groupIndex {Integer} the index of the group to which the row belongs to\n     * @param rowIndex {Integer} the index of the row inside the target group\n     */\n    hideRow(groupIndex, rowIndex) {\n      var item = this._getItemByIndex(groupIndex, rowIndex);\n      if (item) {\n        this.__renderer.hideItem(item);\n      }\n    },\n\n    /**\n     * Gets the item with the given group and rowIndex.\n     * @param groupIndex {Integer} the index of the group to which the row belongs to\n     * @param rowIndex {Integer} the index of the row inside the target group\n     * @return {qx.ui.form.IForm|null} The validation result.\n     */\n    _getItemByIndex(groupIndex, rowIndex) {\n      var groups = this.getGroups();\n      var group = groups[groupIndex];\n      if (group) {\n        var item = group.items[rowIndex];\n        return item;\n      }\n\n      return null;\n    },\n\n    // overridden\n    reset() {\n      super.reset();\n      this.__renderer.resetForm();\n    },\n\n    /**\n     * Returns the invalid items of the form, which were determined by {@link qx.ui.mobile.form.Form#validate} before.\n     * It returns an empty array if no items are invalid.\n     * @return {qx.ui.mobile.core.Widget[]} The invalid items of the form.\n     */\n    getInvalidItems() {\n      return this.__invalidItems;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wBAAhB,EAA0C;IACxCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,IADqB;;IAGxC;AACF;AACA;AACA;AACA;IAEEC,SATwC,uBAS5B;MACV;MACA,KAAKC,SAAL,GAAsB,EAAtB;IACD,CAZuC;IAcxCC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,SAAU,EAAE,IAJL;;MAMP;AACJ;AACA;MACIF,SAAc,EAAE,IATT;;MAWP;AACJ;AACA;AACA;MACIG,WAfO,uBAeKC,QAfL,EAee;QACpB,KAAKF,SAAL,GAAkBE,QAAlB;MACD,CAjBM;;MAmBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,QA1BO,sBA0BI;QACT,IAAIC,cAAc,kEAAlB;QAEA,KAAKN,SAAL,GAAsB,EAAtB;;QAEA,IAAI,KAAKE,SAAL,IAAmB,IAAvB,EAA6B;UAC3B,KAAKA,SAAL,CAAgBK,SAAhB;QACD;;QACD,IAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;UACtC,IAAIE,KAAK,GAAGJ,MAAM,CAACE,CAAD,CAAlB;;UACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,KAAN,CAAYH,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;YAC3C,IAAIE,IAAI,GAAGH,KAAK,CAACE,KAAN,CAAYD,CAAZ,CAAX;;YACA,IAAI,CAACE,IAAI,CAACC,OAAL,EAAL,EAAqB;cACnB,KAAKhB,SAAL,CAAoBiB,IAApB,CAAyBF,IAAzB;;cAEA,IAAI,KAAKb,SAAL,IAAmB,IAAvB,EAA6B;gBAC3B,KAAKA,SAAL,CAAgBgB,gBAAhB,CAAiCH,IAAjC;cACD,CAFD,MAEO;gBACL;gBACAI,KAAK,CAAC,WAAWJ,IAAI,CAACK,iBAAL,EAAZ,CAAL;cACD;YACF;UACF;QACF;;QAED,IAAI,KAAKlB,SAAL,IAAmB,IAAvB,EAA6B;UAC3B,KAAKA,SAAL,CAAgBmB,WAAhB;QACD;;QAED,OAAOf,cAAP;MACD,CAzDM;;MA2DP;AACJ;AACA;AACA;AACA;MACIgB,OAhEO,mBAgECC,UAhED,EAgEaC,QAhEb,EAgEuB;QAC5B,IAAIT,IAAI,GAAG,KAAKU,eAAL,CAAqBF,UAArB,EAAiCC,QAAjC,CAAX;;QACA,IAAIT,IAAJ,EAAU;UACR,KAAKb,SAAL,CAAgBwB,QAAhB,CAAyBX,IAAzB;QACD;MACF,CArEM;;MAuEP;AACJ;AACA;AACA;AACA;MACIY,OA5EO,mBA4ECJ,UA5ED,EA4EaC,QA5Eb,EA4EuB;QAC5B,IAAIT,IAAI,GAAG,KAAKU,eAAL,CAAqBF,UAArB,EAAiCC,QAAjC,CAAX;;QACA,IAAIT,IAAJ,EAAU;UACR,KAAKb,SAAL,CAAgB0B,QAAhB,CAAyBb,IAAzB;QACD;MACF,CAjFM;;MAmFP;AACJ;AACA;AACA;AACA;AACA;MACIU,eAzFO,2BAyFSF,UAzFT,EAyFqBC,QAzFrB,EAyF+B;QACpC,IAAIhB,MAAM,GAAG,KAAKC,SAAL,EAAb;QACA,IAAIG,KAAK,GAAGJ,MAAM,CAACe,UAAD,CAAlB;;QACA,IAAIX,KAAJ,EAAW;UACT,IAAIG,IAAI,GAAGH,KAAK,CAACE,KAAN,CAAYU,QAAZ,CAAX;UACA,OAAOT,IAAP;QACD;;QAED,OAAO,IAAP;MACD,CAlGM;MAoGP;MACAc,KArGO,mBAqGC;QACN;;QACA,KAAK3B,SAAL,CAAgBK,SAAhB;MACD,CAxGM;;MA0GP;AACJ;AACA;AACA;AACA;MACIuB,eA/GO,6BA+GW;QAChB,OAAO,KAAK9B,SAAZ;MACD;IAjHM;EAd+B,CAA1C;EApCAX,EAAE,CAACO,EAAH,CAAMmC,MAAN,CAAalC,IAAb,CAAkBC,IAAlB,CAAuBN,aAAvB,GAAuCA,aAAvC"
}