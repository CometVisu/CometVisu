{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "value",
    "setValue",
    "_getTagName",
    "event",
    "Registration",
    "addListener",
    "getContentElement",
    "_onChangeContent",
    "_onInput",
    "_onFocus",
    "_onBlur",
    "events",
    "input",
    "changeValue",
    "properties",
    "liveUpdate",
    "check",
    "init",
    "members",
    "__oldValue",
    "__inputTimeoutHandle",
    "__hasFocus",
    "_convertValue",
    "hasFocus",
    "_setValue",
    "_setAttribute",
    "__fireChangeValue",
    "getValue",
    "_getValue",
    "_getAttribute",
    "resetValue",
    "evt",
    "getData",
    "data",
    "fireDataEvent",
    "getLiveUpdate",
    "_getCaretPosition",
    "val",
    "slice",
    "selectionStart",
    "length",
    "_setCaretPosition",
    "position",
    "setSelectionRange",
    "destruct",
    "removeListener",
    "ui",
    "mobile",
    "form",
    "MValue"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/form/MValue.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * The mixin contains all functionality to provide a value property for input\n * widgets.\n *\n * @require(qx.event.handler.Input)\n */\nqx.Mixin.define(\"qx.ui.mobile.form.MValue\", {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {var?null} The value of the widget.\n   */\n  construct(value) {\n    if (value) {\n      this.setValue(value);\n    }\n\n    if (this._getTagName() == \"input\" || this._getTagName() == \"textarea\") {\n      qx.event.Registration.addListener(\n        this.getContentElement(),\n        \"change\",\n        this._onChangeContent,\n        this\n      );\n\n      qx.event.Registration.addListener(\n        this.getContentElement(),\n        \"input\",\n        this._onInput,\n        this\n      );\n    }\n\n    this.addListener(\"focus\", this._onFocus, this);\n    this.addListener(\"blur\", this._onBlur, this);\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The event is fired on every keystroke modifying the value of the field.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current value of the text field.\n     */\n    input: \"qx.event.type.Data\",\n\n    /**\n     * The event is fired each time the text field looses focus and the\n     * text field values has changed.\n     *\n     * If you change {@link #liveUpdate} to true, the changeValue event will\n     * be fired after every keystroke and not only after every focus loss. In\n     * that mode, the changeValue event is equal to the {@link #input} event.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Whether the {@link #changeValue} event should be fired on every key\n     * input. If set to true, the changeValue event is equal to the\n     * {@link #input} event.\n     */\n    liveUpdate: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __oldValue: null,\n    __inputTimeoutHandle: null,\n    __hasFocus: null,\n\n    /**\n     * Converts the incoming value.\n     *\n     * @param value {var} The value to convert\n     * @return {var} The converted value\n     */\n    _convertValue(value) {\n      if (typeof value === \"boolean\") {\n        return value;\n      } else if (typeof value === \"number\") {\n        return value;\n      } else {\n        return value || \"\";\n      }\n    },\n\n    /**\n     * Handler for <code>focus</code> event.\n     */\n    _onFocus() {\n      this.__hasFocus = true;\n    },\n\n    /**\n     * Handler for <code>blur</code> event.\n     */\n    _onBlur() {\n      this.__hasFocus = false;\n    },\n\n    /**\n     * Returns whether this widget has focus or not.\n     * @return {Boolean} <code>true</code> or <code>false</code>\n     */\n    hasFocus() {\n      return this.__hasFocus;\n    },\n\n    /**\n     * Sets the value.\n     *\n     * @param value {var} The value to set\n     */\n    setValue(value) {\n      value = this._convertValue(value);\n      if (this.__oldValue != value) {\n        if (this._setValue) {\n          this._setValue(value);\n        } else {\n          this._setAttribute(\"value\", value);\n        }\n        this.__fireChangeValue(value);\n      }\n    },\n\n    /**\n     * Returns the set value.\n     *\n     * @return {var} The set value\n     */\n    getValue() {\n      return this._convertValue(\n        this._getValue ? this._getValue() : this._getAttribute(\"value\")\n      );\n    },\n\n    /**\n     * Resets the value.\n     */\n    resetValue() {\n      this.setValue(null);\n    },\n\n    /**\n     * Event handler. Called when the {@link #changeValue} event occurs.\n     *\n     * @param evt {qx.event.type.Data} The event, containing the changed content.\n     */\n    _onChangeContent(evt) {\n      this.__fireChangeValue(this._convertValue(evt.getData()));\n    },\n\n    /**\n     * Event handler. Called when the {@link #input} event occurs.\n     *\n     * @param evt {qx.event.type.Data} The event, containing the changed content.\n     */\n    _onInput(evt) {\n      var data = evt.getData();\n      this.fireDataEvent(\"input\", data, true);\n      if (this.getLiveUpdate()) {\n        if (this._setValue) {\n          this._setValue(data);\n        } else {\n          this.__fireChangeValue(this._convertValue(data));\n        }\n      }\n    },\n\n    /**\n     * Returns the caret position of this widget.\n     * @return {Integer} the caret position.\n     */\n    _getCaretPosition() {\n      var val = this.getContentElement().value;\n      if (val && this._getAttribute(\"type\") !== \"number\") {\n        return val.slice(0, this.getContentElement().selectionStart).length;\n      } else {\n        return val.length;\n      }\n    },\n\n    /**\n     * Sets the caret position on this widget.\n     * @param position {Integer} the caret position.\n     */\n    _setCaretPosition(position) {\n      if (position != null && this.hasFocus()) {\n        if (\n          this._getAttribute(\"type\") !== \"number\" &&\n          this.getContentElement().setSelectionRange\n        ) {\n          this.getContentElement().setSelectionRange(position, position);\n        }\n      }\n    },\n\n    /**\n     * Fires the {@link #changeValue} event.\n     *\n     * @param value {var} The current value to fire.\n     */\n    __fireChangeValue(value) {\n      if (this.__oldValue != value) {\n        this.__oldValue = value;\n        this.fireDataEvent(\"changeValue\", value);\n      }\n    }\n  },\n\n  destruct() {\n    this.removeListener(\"focus\", this._onFocus, this);\n    this.removeListener(\"blur\", this._onBlur, this);\n  }\n});\n"
  ],
  "mappings": "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"
}