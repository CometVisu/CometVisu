{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "manager",
    "constructor",
    "call",
    "__manager",
    "__targets",
    "ui",
    "mobile",
    "DomUpdatedHandler",
    "__instances",
    "toHashCode",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "domupdated",
    "IGNORE_CAN_HANDLE",
    "refresh",
    "all",
    "hash",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "Widget",
    "registerEvent",
    "capture",
    "targets",
    "unregisterEvent",
    "$$disposed",
    "isSeeable",
    "evt",
    "createEvent",
    "dispatchEvent",
    "destruct",
    "defer",
    "addHandler"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/core/DomUpdatedHandler.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tino Butz (tbtz)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides the <code>domupdated</code> event. The event is\r\n * delegated to all widget instances that have a\r\n * listener for the <code>domupdated</code> event registered.\r\n *\r\n * @internal\r\n */\r\nqx.Class.define(\"qx.ui.mobile.core.DomUpdatedHandler\", {\r\n  extend: qx.core.Object,\r\n  implement: qx.event.IEventHandler,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param manager {qx.event.Manager} Event manager for the window to use\r\n   */\r\n  construct(manager) {\r\n    super();\r\n\r\n    this.__manager = manager;\r\n    this.__targets = {};\r\n\r\n    // Register\r\n    qx.ui.mobile.core.DomUpdatedHandler.__instances[this.toHashCode()] = this;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {Integer} Priority of this handler */\r\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\r\n\r\n    /** @type {Map} Supported event types */\r\n    SUPPORTED_TYPES: {\r\n      domupdated: 1\r\n    },\r\n\r\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\r\n    IGNORE_CAN_HANDLE: false,\r\n\r\n    /** @type {Map} Stores all domUpdated manager instances */\r\n    __instances: {},\r\n\r\n    /**\r\n     * Informs all handlers. Useful after massive DOM manipulations e.g.\r\n     * through {@link qx.ui.mobile.core.Widget}.\r\n     *\r\n     */\r\n    refresh() {\r\n      var all = this.__instances;\r\n      for (var hash in all) {\r\n        all[hash].refresh();\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __manager: null,\r\n    __targets: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLER INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // interface implementation\r\n    canHandleEvent(target, type) {\r\n      return target instanceof qx.ui.mobile.core.Widget;\r\n    },\r\n\r\n    // interface implementation\r\n    registerEvent(target, type, capture) {\r\n      var hash = target.toHashCode();\r\n      var targets = this.__targets;\r\n\r\n      if (targets && !targets[hash]) {\r\n        targets[hash] = target;\r\n      }\r\n    },\r\n\r\n    // interface implementation\r\n    unregisterEvent(target, type, capture) {\r\n      var hash = target.toHashCode();\r\n      var targets = this.__targets;\r\n      if (!targets) {\r\n        return;\r\n      }\r\n\r\n      if (targets[hash]) {\r\n        delete targets[hash];\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      USER ACCESS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * This method is called by all DOM tree modifying routines\r\n     * to inform the widgets.\r\n     *\r\n     */\r\n    refresh() {\r\n      var targets = this.__targets;\r\n      var target;\r\n      for (var hash in targets) {\r\n        target = targets[hash];\r\n        if (target && !target.$$disposed && target.isSeeable()) {\r\n          var evt = qx.event.Registration.createEvent(\"domupdated\");\r\n          this.__manager.dispatchEvent(target, evt);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this.__manager = this.__targets = null;\r\n\r\n    // Deregister\r\n    delete qx.ui.mobile.core.DomUpdatedHandler.__instances[this.toHashCode()];\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.event.Registration.addHandler(statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}