{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "setLayout",
    "layout",
    "_setLayout",
    "getLayout",
    "_getLayout",
    "statics",
    "remap",
    "ui",
    "mobile",
    "core",
    "MLayoutHandling"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/core/MLayoutHandling.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * This mixin exposes all methods to manage the layout manager of a widget.\n * It can only be included into instances of {@link Widget}.\n *\n * To optimize the method calls the including widget should call the method\n * {@link #remap} in its defer function. This will map the protected\n * methods to the public ones and save one method call for each function.\n */\nqx.Mixin.define(\"qx.ui.mobile.core.MLayoutHandling\", {\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Set a layout manager for the widget. A a layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.mobile.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    setLayout(layout) {\n      this._setLayout(layout);\n    },\n\n    /**\n     * Get the widget's layout manager.\n     *\n     * @return {qx.ui.mobile.layout.Abstract} The widget's layout manager\n     */\n    getLayout() {\n      return this._getLayout();\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Mapping of protected methods to public.\n     * This omits an additional function call when using these methods. Call\n     * this methods in the defer block of the including class.\n     *\n     * @param members {Map} The including classes members map\n     */\n    remap(members) {\n      members.getLayout = members._getLayout;\n      members.setLayout = members._setLayout;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mCAAhB,EAAqD;IACnD;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SATO,qBASGC,MATH,EASW;QAChB,KAAKC,UAAL,CAAgBD,MAAhB;MACD,CAXM;;MAaP;AACJ;AACA;AACA;AACA;MACIE,SAlBO,uBAkBK;QACV,OAAO,KAAKC,UAAL,EAAP;MACD;IApBM,CAP0C;;IA8BnD;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,KARO,iBAQDP,OARC,EAQQ;QACbA,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACK,UAA5B;QACAL,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACG,UAA5B;MACD;IAXM;EApC0C,CAArD;EA1BAT,EAAE,CAACc,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,eAAlB,CAAkCd,aAAlC,GAAkDA,aAAlD"
}