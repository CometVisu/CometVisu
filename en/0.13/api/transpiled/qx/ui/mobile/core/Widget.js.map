{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "locale",
    "MTranslation",
    "construct",
    "constructor",
    "call",
    "_setContainerElement",
    "_createContainerElement",
    "__children",
    "setId",
    "getId",
    "initDefaultCssClass",
    "initName",
    "initAnonymous",
    "initActivatable",
    "events",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "domupdated",
    "appear",
    "disappear",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "roll",
    "properties",
    "defaultCssClass",
    "check",
    "init",
    "nullable",
    "apply",
    "enabled",
    "event",
    "name",
    "anonymous",
    "id",
    "transform",
    "visibility",
    "activatable",
    "rotation",
    "transformUnit",
    "scaleX",
    "scaleY",
    "translateX",
    "translateY",
    "translateZ",
    "statics",
    "ID_PREFIX",
    "__registry",
    "__idCounter",
    "__domUpdatedScheduleId",
    "onShutdown",
    "window",
    "clearTimeout",
    "ui",
    "mobile",
    "Widget",
    "getCurrentId",
    "registerWidget",
    "widget",
    "registry",
    "unregisterWidget",
    "getWidgetById",
    "scheduleDomUpdated",
    "setTimeout",
    "domUpdated",
    "GlobalError",
    "observeMethod",
    "clazz",
    "handler",
    "Appear",
    "refresh",
    "DomUpdatedHandler",
    "addAttributeMapping",
    "property",
    "attribute",
    "values",
    "ATTRIBUTE_MAPPING",
    "addStyleMapping",
    "style",
    "STYLE_MAPPING",
    "selectable",
    "readOnly",
    "members",
    "__containerElement",
    "__contentElement",
    "__layoutParent",
    "__layoutManager",
    "_getTagName",
    "dom",
    "Element",
    "create",
    "_domUpdated",
    "_transformId",
    "value",
    "_applyId",
    "old",
    "element",
    "getContainerElement",
    "_applyEnabled",
    "removeCssClass",
    "_setStyle",
    "getAnonymous",
    "addCssClass",
    "_add",
    "child",
    "layoutProperties",
    "_initializeChildLayout",
    "getContentElement",
    "appendChild",
    "push",
    "_addAt",
    "index",
    "options",
    "getLayoutParent",
    "lang",
    "Array",
    "remove",
    "ref",
    "_addBefore",
    "beforeWidget",
    "insertBefore",
    "_addAfter",
    "afterWidget",
    "length",
    "_getChildren",
    "_indexOf",
    "insertAfter",
    "_remove",
    "setLayoutParent",
    "_removeAt",
    "Error",
    "_removeAll",
    "children",
    "concat",
    "i",
    "l",
    "indexOf",
    "parent",
    "oldParent",
    "$$disposed",
    "removeChild",
    "layout",
    "_getLayout",
    "disconnectFromChildWidget",
    "_hasChildren",
    "_setLayout",
    "connectToWidget",
    "setLayoutProperties",
    "connectToChildWidget",
    "updateLayoutProperties",
    "updateLayout",
    "action",
    "_setHtml",
    "innerHTML",
    "_transform",
    "propertyValue",
    "getRotation",
    "getScaleX",
    "getScaleY",
    "resolutionFactor",
    "getTransformUnit",
    "getTranslateX",
    "getTranslateY",
    "isTransform3d",
    "Environment",
    "get",
    "getTranslateZ",
    "bom",
    "Style",
    "set",
    "_applyAttribute",
    "_setAttribute",
    "mapping",
    "Attribute",
    "reset",
    "_getAttribute",
    "_applyStyle",
    "_getStyle",
    "_applyDefaultCssClass",
    "cssClass",
    "add",
    "addCssClasses",
    "cssClasses",
    "addClasses",
    "hasCssClass",
    "removeCssClasses",
    "removeClasses",
    "toggleCssClass",
    "has",
    "_applyVisibility",
    "__setVisibility",
    "__P_393_8",
    "setVisibility",
    "show",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "offsetWidth",
    "_getContentElement",
    "destroy",
    "dispose",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "Registration",
    "removeAllListeners",
    "defer",
    "Lifecycle"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/core/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Tino Butz (tbtz)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This is the base class for all mobile widgets.\r\n *\r\n * @use(qx.ui.mobile.core.EventHandler)\r\n * @require(qx.bom.Lifecycle)\r\n */\r\nqx.Class.define(\"qx.ui.mobile.core.Widget\", {\r\n  extend: qx.core.Object,\r\n  include: [qx.locale.MTranslation],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n\r\n    this._setContainerElement(this._createContainerElement());\r\n\r\n    // Init member variables\r\n\r\n    this.__children = [];\r\n\r\n    this.setId(this.getId());\r\n    this.initDefaultCssClass();\r\n    this.initName();\r\n    this.initAnonymous();\r\n    this.initActivatable();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Fired if the mouse cursor moves over the widget. */\r\n    mousemove: \"qx.event.type.Mouse\",\r\n\r\n    /** Fired if the mouse cursor enters the widget. */\r\n    mouseover: \"qx.event.type.Mouse\",\r\n\r\n    /** Fired if the mouse cursor leaves widget. */\r\n    mouseout: \"qx.event.type.Mouse\",\r\n\r\n    /** Mouse button is pressed on the widget. */\r\n    mousedown: \"qx.event.type.Mouse\",\r\n\r\n    /** Mouse button is released on the widget. */\r\n    mouseup: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is clicked using left or middle button.\r\n        {@link qx.event.type.Mouse#getButton} for more details.*/\r\n    click: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is double clicked using left or middle button.\r\n        {@link qx.event.type.Mouse#getButton} for more details.*/\r\n    dblclick: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is clicked using the right mouse button. */\r\n    contextmenu: \"qx.event.type.Mouse\",\r\n\r\n    /** Fired before the context menu is opened. */\r\n    beforeContextmenuOpen: \"qx.event.type.Mouse\",\r\n\r\n    /** Fired if the mouse wheel is used over the widget. */\r\n    mousewheel: \"qx.event.type.MouseWheel\",\r\n\r\n    /** Fired if a touch at the screen is started. */\r\n    touchstart: \"qx.event.type.Touch\",\r\n\r\n    /** Fired if a touch at the screen has ended. */\r\n    touchend: \"qx.event.type.Touch\",\r\n\r\n    /** Fired during a touch at the screen. */\r\n    touchmove: \"qx.event.type.Touch\",\r\n\r\n    /** Fired if a touch at the screen is canceled. */\r\n    touchcancel: \"qx.event.type.Touch\",\r\n\r\n    /** Fired when a finger taps on the screen. */\r\n    tap: \"qx.event.type.Tap\",\r\n\r\n    /** Fired when a finger holds on the screen. */\r\n    longtap: \"qx.event.type.Tap\",\r\n\r\n    /** Fired when a finger swipes over the screen. */\r\n    swipe: \"qx.event.type.Touch\",\r\n\r\n    /** Fired when two pointers performing a rotate gesture on the screen. */\r\n    rotate: \"qx.event.type.Rotate\",\r\n\r\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\r\n    pinch: \"qx.event.type.Pinch\",\r\n\r\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\r\n    track: \"qx.event.type.Track\",\r\n\r\n    /**\r\n     * This event if fired if a keyboard key is released.\r\n     **/\r\n    keyup: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event if fired if a keyboard key is pressed down. This event is\r\n     * only fired once if the user keeps the key pressed for a while.\r\n     */\r\n    keydown: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event is fired any time a key is pressed. It will be repeated if\r\n     * the user keeps the key pressed. The pressed key can be determined using\r\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\r\n     */\r\n    keypress: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event is fired if the pressed key or keys result in a printable\r\n     * character. Since the character is not necessarily associated with a\r\n     * single physical key press, the event does not have a key identifier\r\n     * getter. This event gets repeated if the user keeps pressing the key(s).\r\n     *\r\n     * The unicode code of the pressed key can be read using\r\n     * {@link qx.event.type.KeyInput#getCharCode}.\r\n     */\r\n    keyinput: \"qx.event.type.KeyInput\",\r\n\r\n    /**\r\n     * Fired after a massive DOM manipulation, e.g. when DOM elements were\r\n     * added or styles were changed. Listen to this event, if you need to\r\n     * recalculate a layout or have to update your view.\r\n     */\r\n    domupdated: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired after the widget appears on the screen.\r\n     */\r\n    appear: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired after the widget disappears from the screen.\r\n     */\r\n    disappear: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * The event is fired when the widget gets focused.\r\n     */\r\n    focus: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * The event is fired when the widget gets blurred.\r\n     */\r\n    blur: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget itself or any child of the widget receive the focus.\r\n     */\r\n    focusin: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget itself or any child of the widget lost the focus.\r\n     */\r\n    focusout: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget gets active (receives keyboard events etc.)\r\n     */\r\n    activate: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget gets inactive\r\n     */\r\n    deactivate: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * Fired when an active pointer moves on the screen or the mouse wheel is used.\r\n     */\r\n    roll: \"qx.event.type.Roll\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * The default CSS class used for this widget. The default CSS class\r\n     * should contain the common appearance of the widget.\r\n     * It is set to the container element of the widget. Use {@link #addCssClass}\r\n     * to enhance the default appearance of the widget.\r\n     */\r\n    defaultCssClass: {\r\n      check: \"String\",\r\n      init: null,\r\n      nullable: true,\r\n      apply: \"_applyDefaultCssClass\"\r\n    },\r\n\r\n    /**\r\n     * Whether this widget is enabled or not\r\n     */\r\n    enabled: {\r\n      init: true,\r\n      check: \"Boolean\",\r\n      nullable: false,\r\n      event: \"changeEnabled\",\r\n      apply: \"_applyEnabled\"\r\n    },\r\n\r\n    /**\r\n     * The name attribute of the container element. Useful when you want to find\r\n     * an element by its name attribute.\r\n     */\r\n    name: {\r\n      check: \"String\",\r\n      init: null,\r\n      nullable: true,\r\n      apply: \"_applyAttribute\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget should be the target of an event. Set this property\r\n     * to <code>false</code> when the widget is a child of another widget and\r\n     * shouldn't react on events.\r\n     */\r\n    anonymous: {\r\n      check: \"Boolean\",\r\n      init: null,\r\n      nullable: true,\r\n      apply: \"_applyStyle\"\r\n    },\r\n\r\n    /**\r\n     * The ID of the widget. When the ID is set to <code>null</code> an auto\r\n     * id will be generated.\r\n     */\r\n    id: {\r\n      check: \"String\",\r\n      init: null,\r\n      nullable: true,\r\n      apply: \"_applyId\",\r\n      transform: \"_transformId\",\r\n      event: \"changeId\"\r\n    },\r\n\r\n    /**\r\n     * Controls the visibility. Valid values are:\r\n     *\r\n     * <ul>\r\n     *   <li><b>visible</b>: Render the widget</li>\r\n     *   <li><b>hidden</b>: Hide the widget. The space will be still available.</li>\r\n     *   <li><b>excluded</b>: Hide the widget. The space will be released.</li>\r\n     * </ul>\r\n     */\r\n    visibility: {\r\n      check: [\"visible\", \"hidden\", \"excluded\"],\r\n      init: \"visible\",\r\n      apply: \"_applyVisibility\",\r\n      event: \"changeVisibility\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget can be activated or not. When the widget is activated\r\n     * a css class <code>active</code> is automatically added to the widget, which\r\n     * can indicate the activation status.\r\n     */\r\n    activatable: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyAttribute\"\r\n    },\r\n\r\n    /**\r\n     * Rotates the widget. Negative and positive values are allowed.\r\n     */\r\n    rotation: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * This property controls whether the transformation uses the length unit <code>px<code> or <code>rem</code>.\r\n     * This feature is important for creating a resolution independent transformation.\r\n     */\r\n    transformUnit: {\r\n      check: [\"rem\", \"px\"],\r\n      nullable: false,\r\n      init: \"rem\",\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * Scales the widget in X direction (width).\r\n     */\r\n    scaleX: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * Scales the widget in Y direction (height).\r\n     */\r\n    scaleY: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * Moves the widget on X axis.\r\n     */\r\n    translateX: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: 0,\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * Moves the widget on Y axis.\r\n     */\r\n    translateY: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: 0,\r\n      apply: \"_transform\"\r\n    },\r\n\r\n    /**\r\n     * Moves the widget on Z axis.\r\n     */\r\n    translateZ: {\r\n      check: \"Number\",\r\n      nullable: true,\r\n      init: 0,\r\n      apply: \"_transform\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {String} Prefix for the auto id */\r\n    ID_PREFIX: \"qx_id_\",\r\n\r\n    /** @type {Map} Internal data structure to store widgets */\r\n    __registry: {},\r\n\r\n    /** @type {Integer} Incremental counter of the current id */\r\n    __idCounter: 0,\r\n\r\n    /** @type {Integer} ID of the timeout for the DOM update */\r\n    __domUpdatedScheduleId: null,\r\n\r\n    /**\r\n     * Event handler. Called when the application is in shutdown.\r\n     * @internal\r\n     */\r\n    onShutdown() {\r\n      window.clearTimeout(qx.ui.mobile.core.Widget.__domUpdatedScheduleId);\r\n      delete qx.ui.mobile.core.Widget.__registry;\r\n    },\r\n\r\n    /**\r\n     * Returns the current widget id of the registry.\r\n     * @return {Integer} The current id\r\n     * @internal\r\n     */\r\n\r\n    getCurrentId() {\r\n      return qx.ui.mobile.core.Widget.__idCounter;\r\n    },\r\n\r\n    /**\r\n     * Registers a widget with its id for internal widget handling.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to register\r\n     *\r\n     * @internal\r\n     */\r\n    registerWidget(widget) {\r\n      var id = widget.getId();\r\n      var registry = qx.ui.mobile.core.Widget.__registry;\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertUndefined(\r\n          registry[id],\r\n          \"Widget with the id '\" + id + \"' is already registered\"\r\n        );\r\n      }\r\n      registry[id] = widget;\r\n    },\r\n\r\n    /**\r\n     * Unregisters the widget with the given id.\r\n     *\r\n     * @param id {String} The id of the widget to unregister\r\n     *\r\n     * @internal\r\n     */\r\n    unregisterWidget(id) {\r\n      delete qx.ui.mobile.core.Widget.__registry[id];\r\n    },\r\n\r\n    /**\r\n     * Returns the widget with the given id.\r\n     *\r\n     * @param id {String} The id of the widget\r\n     * @return {qx.ui.core.Widget} The widget with the given id\r\n     */\r\n    getWidgetById(id) {\r\n      return qx.ui.mobile.core.Widget.__registry[id];\r\n    },\r\n\r\n    /**\r\n     * Schedules the {@link #domUpdated} method. The method will be called after a timeout\r\n     * to prevent the triggered events to be fired too often, during massive DOM manipulations.\r\n     *\r\n     * @internal\r\n     */\r\n    scheduleDomUpdated() {\r\n      if (qx.ui.mobile.core.Widget.__domUpdatedScheduleId == null) {\r\n        qx.ui.mobile.core.Widget.__domUpdatedScheduleId = window.setTimeout(\r\n          qx.ui.mobile.core.Widget.domUpdated,\r\n          0\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fires the DOM updated event directly. Triggers the {@link qx.event.handler.Appear#refresh} and\r\n     * {@link qx.ui.mobile.core.DomUpdatedHandler#refresh} methods. Do not use this\r\n     * method during massive DOM manipulations. Use {@link #scheduleDomUpdated} instead.\r\n     *\r\n     * @internal\r\n     */\r\n    domUpdated: qx.event.GlobalError.observeMethod(function () {\r\n      var clazz = qx.ui.mobile.core.Widget;\r\n      window.clearTimeout(clazz.__domUpdatedScheduleId);\r\n      clazz.__domUpdatedScheduleId = null;\r\n      qx.event.handler.Appear.refresh();\r\n      qx.ui.mobile.core.DomUpdatedHandler.refresh();\r\n    }),\r\n\r\n    /**\r\n     * Adds an attribute mapping entry. This entry is used by the {@link #_applyAttribute}\r\n     * method. Shortcut when the property name differs from the real\r\n     * attribute name. Use this method if you want to add an attribute entry to the mapping\r\n     * from the defer function of a different widget.\r\n     *\r\n     * e.g.:\r\n     * \"selectable\" :\r\n     * {\r\n     *   attribute : \"data-selectable\",\r\n     *   values :\r\n     *   {\r\n     *     \"true\" : null,\r\n     *     \"false\" : \"false\"\r\n     *   }\r\n     * }\r\n     *\r\n     * @param property {String} The property name\r\n     * @param attribute {String} The real attribute name\r\n     * @param values {Map} Values of the property to the real attribute value.\r\n     *      Use null, when you want not to set the attribute.\r\n     */\r\n    addAttributeMapping(property, attribute, values) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        var attributeMapping = qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING;\r\n        qx.core.Assert.assertUndefined(\r\n          attributeMapping[property],\r\n          \"Attribute mapping for \" + property + \" already exists\"\r\n        );\r\n      }\r\n\r\n      qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING[property] = {\r\n        attribute: attribute,\r\n        values: values\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Adds a style mapping entry. This entry is used by the {@link #_applyStyle}\r\n     * method. Shortcut when the property name differs from the real\r\n     * style name. Use this method if you want to add a style entry to the mapping\r\n     * from the defer function of a different widget.\r\n     *\r\n     * e.g.:\r\n     * \"anonymous\" :\r\n     * {\r\n     *  style : \"pointer-events\",\r\n     *  values :\r\n     *  {\r\n     *    \"true\" : \"none\",\r\n     *    \"false\" : null\r\n     *  }\r\n     * }\r\n     *\r\n     * @param property {String} The property name\r\n     * @param style {String} The real style name\r\n     * @param values {Map} Values of the property to the real style value.\r\n     *      Use null, when you want not to set the style.\r\n     */\r\n    addStyleMapping(property, style, values) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        var styleMapping = qx.ui.mobile.core.Widget.STYLE_MAPPING;\r\n        qx.core.Assert.assertUndefined(\r\n          styleMapping[property],\r\n          \"Style mapping for \" + property + \" already exists\"\r\n        );\r\n      }\r\n\r\n      qx.ui.mobile.core.Widget.STYLE_MAPPING[property] = {\r\n        style: style,\r\n        values: values\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Mapping of attribute properties to their real attribute name.\r\n     *\r\n     * @internal\r\n     */\r\n    ATTRIBUTE_MAPPING: {\r\n      selectable: {\r\n        attribute: \"data-selectable\",\r\n        values: {\r\n          true: null,\r\n          false: \"false\"\r\n        }\r\n      },\r\n\r\n      activatable: {\r\n        attribute: \"data-activatable\",\r\n        values: {\r\n          true: \"true\",\r\n          false: null\r\n        }\r\n      },\r\n\r\n      readOnly: {\r\n        attribute: \"readonly\"\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Mapping of style properties to their real style name.\r\n     *\r\n     * @internal\r\n     */\r\n    STYLE_MAPPING: {\r\n      anonymous: {\r\n        style: \"pointerEvents\",\r\n        values: {\r\n          true: \"none\",\r\n          false: null\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __containerElement: null,\r\n    __contentElement: null,\r\n\r\n    __layoutParent: null,\r\n    __children: null,\r\n    __layoutManager: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Basic Template\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the tag name of the container element of this widget.\r\n     * Override this method if you want to create a custom widget.\r\n     * @return {String} The container element's tag name\r\n     */\r\n    _getTagName() {\r\n      return \"div\";\r\n    },\r\n\r\n    /**\r\n     * Creates the container DOM element of the widget.\r\n     * Override this method if you want to create a custom widget.\r\n     *\r\n     * @return {Element} the container element.\r\n     */\r\n    _createContainerElement() {\r\n      return qx.dom.Element.create(this._getTagName());\r\n    },\r\n\r\n    /**\r\n     * Triggers the {@link #scheduleDomUpdated} method. This method needs to be called\r\n     * when the DOM has changed, e.g. an element was added / removed / styled.\r\n     */\r\n    _domUpdated() {\r\n      qx.ui.mobile.core.Widget.scheduleDomUpdated();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      ID Handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Transforms the value of the ID property. When the value is null, an auto\r\n     * generated ID is set. This makes sure that an ID is always set.\r\n     *\r\n     * @param value {String} The set id of the widget\r\n     * @return {String} The transformed ID\r\n     */\r\n    _transformId(value) {\r\n      if (value == null) {\r\n        var clazz = qx.ui.mobile.core.Widget;\r\n        value = clazz.ID_PREFIX + clazz.__idCounter++;\r\n      }\r\n      return value;\r\n    },\r\n\r\n    // property apply\r\n    _applyId(value, old) {\r\n      if (old != null) {\r\n        // Unregister widget with old id\r\n        qx.ui.mobile.core.Widget.unregisterWidget(old);\r\n      }\r\n      // Change the id of the DOM element\r\n      var element = this.getContainerElement();\r\n      element.id = value;\r\n      // Register the widget\r\n      qx.ui.mobile.core.Widget.registerWidget(this);\r\n    },\r\n\r\n    /**\r\n     * Sets the enable property to the new value\r\n     * @param value {Boolean}, the new value of the widget\r\n     * @param old {Boolean?}, the old value of the widget\r\n     *\r\n     */\r\n    _applyEnabled(value, old) {\r\n      if (value) {\r\n        this.removeCssClass(\"disabled\");\r\n        this._setStyle(\"anonymous\", this.getAnonymous());\r\n      } else {\r\n        this.addCssClass(\"disabled\");\r\n        this._setStyle(\"anonymous\", true);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Child Handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Adds a new child widget.\r\n     *\r\n     * @param child {qx.ui.core.Widget} the widget to add.\r\n     * @param layoutProperties {Map?null} Optional layout data for widget.\r\n     */\r\n    _add(child, layoutProperties) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (child.getLayoutParent() === this) {\r\n          throw new Error(\r\n            \"The widget is already added this widget. Please remove it first.\"\r\n          );\r\n        }\r\n      }\r\n\r\n      this._initializeChildLayout(child, layoutProperties);\r\n\r\n      this.getContentElement().appendChild(child.getContainerElement());\r\n      this.__children.push(child);\r\n\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Add a child widget at the specified index\r\n     *\r\n     * @param child {qx.ui.core.Widget} widget to add\r\n     * @param index {Integer} Index, at which the widget will be inserted. If no\r\n     *   widget exists at the given index, the new widget gets appended to the\r\n     *   current list of children.\r\n     * @param options {Map?null} Optional layout data for widget.\r\n     */\r\n    _addAt(child, index, options) {\r\n      // When moving in the same widget, remove widget first\r\n      if (child.getLayoutParent() == this) {\r\n        qx.lang.Array.remove(this.__children, child);\r\n      }\r\n\r\n      var ref = this.__children[index];\r\n\r\n      if (ref) {\r\n        this._addBefore(child, ref, options);\r\n      } else {\r\n        this._add(child, options);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Add a widget before another already inserted widget\r\n     *\r\n     * @param child {qx.ui.core.Widget} widget to add\r\n     * @param beforeWidget {qx.ui.core.Widget} widget before the new widget will be inserted.\r\n     * @param layoutProperties {Map?null} Optional layout data for widget.\r\n     */\r\n    _addBefore(child, beforeWidget, layoutProperties) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (child.getLayoutParent() === this) {\r\n          throw new Error(\r\n            \"The widget is already added this widget. Please remove it first.\"\r\n          );\r\n        }\r\n\r\n        this.assertInArray(\r\n          beforeWidget,\r\n          this._getChildren(),\r\n          \"The 'before' widget is not a child of this widget!\"\r\n        );\r\n      }\r\n\r\n      if (child == beforeWidget) {\r\n        return;\r\n      }\r\n\r\n      this._initializeChildLayout(child, layoutProperties);\r\n\r\n      this.getContentElement().insertBefore(\r\n        child.getContainerElement(),\r\n        beforeWidget.getContainerElement()\r\n      );\r\n\r\n      qx.lang.Array.insertBefore(this.__children, child, beforeWidget);\r\n\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Add a widget after another already inserted widget.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The widget to add.\r\n     * @param afterWidget {qx.ui.core.Widget} Widget, after which the new widget will be inserted.\r\n     * @param layoutProperties {Map?null} Optional layout data for widget.\r\n     */\r\n    _addAfter(child, afterWidget, layoutProperties) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (child.getLayoutParent() === this) {\r\n          throw new Error(\r\n            \"The child is already added to this widget. Please remove it first.\"\r\n          );\r\n        }\r\n\r\n        this.assertInArray(\r\n          afterWidget,\r\n          this._getChildren(),\r\n          \"The 'after' widget is not a child of this widget!\"\r\n        );\r\n      }\r\n\r\n      if (child == afterWidget) {\r\n        return;\r\n      }\r\n\r\n      this._initializeChildLayout(child, layoutProperties);\r\n\r\n      var length = this._getChildren().length;\r\n      var index = this._indexOf(afterWidget);\r\n\r\n      if (index == length - 1) {\r\n        this.getContentElement().appendChild(child.getContainerElement());\r\n      } else {\r\n        var beforeWidget = this._getChildren()[index + 1];\r\n        this.getContentElement().insertBefore(\r\n          child.getContainerElement(),\r\n          beforeWidget.getContainerElement()\r\n        );\r\n      }\r\n\r\n      qx.lang.Array.insertAfter(this.__children, child, afterWidget);\r\n\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Removes a given child from the widget.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The widget to remove.\r\n     */\r\n    _remove(child) {\r\n      child.setLayoutParent(null);\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Remove the widget at the specified index.\r\n     *\r\n     * @param index {Integer} Index of the widget to remove.\r\n     */\r\n    _removeAt(index) {\r\n      if (!this.__children) {\r\n        throw new Error(\"This widget has no children!\");\r\n      }\r\n\r\n      var child = this.__children[index];\r\n      this._remove(child);\r\n    },\r\n\r\n    /**\r\n     * Removes all children from the widget.\r\n     * @return {Array} An Array including the removed children.\r\n     */\r\n    _removeAll() {\r\n      // create a copy of the array\r\n      var children = this.__children.concat();\r\n      for (var i = 0, l = children.length; i < l; i++) {\r\n        this._remove(children[i]);\r\n      }\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Returns the index position of the given widget if it is\r\n     * a child widget. Otherwise it returns <code>-1</code>.\r\n     *\r\n     * @param child {qx.ui.core.Widget} the widget to query for\r\n     * @return {Integer} The index position or <code>-1</code> when\r\n     *   the given widget is no child of this layout.\r\n     */\r\n    _indexOf(child) {\r\n      var children = this.__children;\r\n      if (!children) {\r\n        return -1;\r\n      }\r\n\r\n      return children.indexOf(child);\r\n    },\r\n\r\n    /**\r\n     * Internal method. Sets the layout parent.\r\n     *\r\n     * @param parent {qx.ui.mobile.core.Widget} The parent widget\r\n     *\r\n     * @internal\r\n     */\r\n    setLayoutParent(parent) {\r\n      if (this.__layoutParent === parent) {\r\n        return;\r\n      }\r\n\r\n      var oldParent = this.__layoutParent;\r\n      if (oldParent && !oldParent.$$disposed) {\r\n        this.__layoutParent.removeChild(this);\r\n      }\r\n\r\n      this.__layoutParent = parent || null;\r\n    },\r\n\r\n    /**\r\n     * Internal method. Removes a given child widget and the corresponding DOM element.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The widget to remove\r\n     *\r\n     * @internal\r\n     */\r\n    removeChild(child) {\r\n      qx.lang.Array.remove(this.__children, child);\r\n      this.getContentElement().removeChild(child.getContainerElement());\r\n      var layout = this._getLayout();\r\n      if (layout) {\r\n        layout.disconnectFromChildWidget(child);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the parent widget of this widget.\r\n     *\r\n     * @return {qx.ui.core.Widget} The parent of the widget\r\n     */\r\n    getLayoutParent() {\r\n      return this.__layoutParent;\r\n    },\r\n\r\n    /**\r\n     * Returns the children of the widget.\r\n     *\r\n     * @return {qx.ui.core.Widget[]} The children of the widget\r\n     */\r\n    _getChildren() {\r\n      return this.__children;\r\n    },\r\n\r\n    /**\r\n     * Whether the widget has child widgets.\r\n     *\r\n     * @return {Boolean} Whether the widget has children or not.\r\n     */\r\n    _hasChildren() {\r\n      return this.__children && this.__children.length > 0;\r\n    },\r\n\r\n    /*\r\n     ---------------------------------------------------------------------------\r\n       Layout handling\r\n     ---------------------------------------------------------------------------\r\n     */\r\n\r\n    /**\r\n     * Set a layout manager for the widget. A layout manager can only be connected\r\n     * with one widget. Reset the connection with a previous widget first, if you\r\n     * like to use it in another widget instead.\r\n     *\r\n     * @param layout {qx.ui.mobile.layout.Abstract} The new layout or\r\n     *     <code>null</code> to reset the layout.\r\n     */\r\n    _setLayout(layout) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (layout) {\r\n          this.assertInstance(layout, qx.ui.mobile.layout.Abstract);\r\n        }\r\n      }\r\n\r\n      if (this.__layoutManager) {\r\n        this.__layoutManager.connectToWidget(null);\r\n        for (var i = 0; i < this._getChildren().length; i++) {\r\n          var child = this._getChildren()[i];\r\n          this.__layoutManager.disconnectFromChildWidget(child);\r\n        }\r\n      }\r\n\r\n      if (layout) {\r\n        layout.connectToWidget(this);\r\n      }\r\n      this.__layoutManager = layout;\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Initializes the layout of the given child widget.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The child widget\r\n     * @param layoutProperties {Map?null} Optional layout data for widget\r\n     */\r\n    _initializeChildLayout(child, layoutProperties) {\r\n      child.setLayoutParent(this);\r\n      child.setLayoutProperties(layoutProperties);\r\n      var layout = this._getLayout();\r\n      if (layout) {\r\n        layout.connectToChildWidget(child);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the set layout manager for the widget.\r\n     *\r\n     * @return  {qx.ui.mobile.layout.Abstract} the layout manager of the widget.\r\n     */\r\n    _getLayout() {\r\n      return this.__layoutManager;\r\n    },\r\n\r\n    /**\r\n     * Stores the given layout properties.\r\n     *\r\n     * @param properties {Map} Incoming layout property data\r\n     */\r\n    setLayoutProperties(properties) {\r\n      // Check values through parent\r\n      var parent = this.getLayoutParent();\r\n      if (parent) {\r\n        parent.updateLayoutProperties(this, properties);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates the layout properties of a given widget.\r\n     *\r\n     * @param widget {qx.ui.mobile.core.Widget} The widget that should be updated\r\n     * @param properties {Map} Incoming layout property data\r\n     *\r\n     * @internal\r\n     */\r\n    updateLayoutProperties(widget, properties) {\r\n      var layout = this._getLayout();\r\n      if (layout) {\r\n        layout.setLayoutProperties(widget, properties);\r\n      }\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Updates the layout with the given arguments.\r\n     *\r\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\r\n     * @param action {String} The causing action that triggered the layout update.\r\n     * @param properties {Map} The animation properties to set. Key / value pairs.\r\n     *\r\n     * @internal\r\n     */\r\n    updateLayout(widget, action, properties) {\r\n      var layout = this._getLayout();\r\n      if (layout) {\r\n        layout.updateLayout(widget, action, properties);\r\n      }\r\n      this._domUpdated();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Content handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Sets the innerHTML of the content element and calls the {@link #_domUpdated}\r\n     * method.\r\n     *\r\n     * @param value {String?\"\"} The html to set in the content element.\r\n     */\r\n    _setHtml(value) {\r\n      this.getContentElement().innerHTML = value || \"\";\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Transforms this widget (rotate, scale, translate3d)\r\n     */\r\n    _transform() {\r\n      var propertyValue = \"\";\r\n      if (this.getRotation() != null) {\r\n        propertyValue =\r\n          propertyValue + \"rotate(\" + this.getRotation() + \"deg) \";\r\n      }\r\n\r\n      if (this.getScaleX() != null && this.getScaleY() != null) {\r\n        propertyValue =\r\n          propertyValue +\r\n          \"scale(\" +\r\n          this.getScaleX() +\r\n          \",\" +\r\n          this.getScaleY() +\r\n          \") \";\r\n      }\r\n\r\n      var resolutionFactor = 1;\r\n      if (this.getTransformUnit() == \"rem\") {\r\n        resolutionFactor = 16;\r\n      }\r\n\r\n      if (this.getTranslateX() != null && this.getTranslateY() != null) {\r\n        var isTransform3d = qx.core.Environment.get(\"css.transform.3d\");\r\n        if (isTransform3d && this.getTranslateZ() != null) {\r\n          propertyValue =\r\n            propertyValue +\r\n            \"translate3d(\" +\r\n            this.getTranslateX() / resolutionFactor +\r\n            this.getTransformUnit() +\r\n            \",\" +\r\n            this.getTranslateY() / resolutionFactor +\r\n            this.getTransformUnit() +\r\n            \",\" +\r\n            this.getTranslateZ() / resolutionFactor +\r\n            this.getTransformUnit() +\r\n            \") \";\r\n        } else {\r\n          propertyValue =\r\n            propertyValue +\r\n            \"translate(\" +\r\n            this.getTranslateX() / resolutionFactor +\r\n            this.getTransformUnit() +\r\n            \",\" +\r\n            this.getTranslateY() / resolutionFactor +\r\n            this.getTransformUnit() +\r\n            \") \";\r\n        }\r\n      }\r\n\r\n      qx.bom.element.Style.set(\r\n        this.getContainerElement(),\r\n        \"transform\",\r\n        propertyValue\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Attributes handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Shortcut for each property that should change a certain attribute of the\r\n     * container element.\r\n     * Use the {@link #addAttributeMapping} method to add a property to attribute\r\n     * mapping when the attribute name or value differs from the property name or\r\n     * value.\r\n     *\r\n     * @param value {var} The set value\r\n     * @param old {var} The old value\r\n     * @param attribute {String} The property name\r\n     */\r\n    _applyAttribute(value, old, attribute) {\r\n      this._setAttribute(attribute, value);\r\n    },\r\n\r\n    /**\r\n     * Sets an attribute with the given value of the container element. The\r\n     * <code>null</code> value resets the attribute.\r\n     *\r\n     * @param attribute {String} The attribute name.\r\n     * @param value {var} The attribute value. <code>Null</code> will reset the attribute.\r\n     */\r\n    _setAttribute(attribute, value) {\r\n      var mapping = qx.ui.mobile.core.Widget.ATTRIBUTE_MAPPING[attribute];\r\n      if (mapping) {\r\n        attribute = mapping.attribute || attribute;\r\n        var values = mapping.values;\r\n        value =\r\n          values && typeof values[value] !== \"undefined\"\r\n            ? values[value]\r\n            : value;\r\n      }\r\n\r\n      var element = this.getContainerElement();\r\n      if (value != null) {\r\n        qx.bom.element.Attribute.set(element, attribute, value);\r\n      } else {\r\n        qx.bom.element.Attribute.reset(element, attribute);\r\n      }\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Returns the set value of the given attribute.\r\n     *\r\n     * @param attribute {String} The attribute name\r\n     * @return {var} The attribute's value\r\n     */\r\n    _getAttribute(attribute) {\r\n      var element = this.getContainerElement();\r\n      return qx.bom.element.Attribute.get(element, attribute);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Styles handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Shortcut for each property that should change a certain style of the container\r\n     * element.\r\n     * Use the {@link #addStyleMapping} method to add a property to style\r\n     * mapping when the style name or value differs from the property name or\r\n     * value.\r\n     */\r\n    _applyStyle(value, old, style) {\r\n      this._setStyle(style, value);\r\n    },\r\n\r\n    /**\r\n     * Sets the value of a certain style of the container element. The\r\n     * <code>null</code> value resets the attribute.\r\n     *\r\n     * @param style {String} The style of which the value should be set\r\n     * @param value {var} The value of the style. <code>Null</code> will reset the attribute.\r\n     */\r\n    _setStyle(style, value) {\r\n      var mapping = qx.ui.mobile.core.Widget.STYLE_MAPPING[style];\r\n      if (mapping) {\r\n        style = mapping.style || style;\r\n        value = mapping.values[value];\r\n      }\r\n\r\n      var element = this.getContainerElement();\r\n      if (value != null) {\r\n        qx.bom.element.Style.set(element, style, value);\r\n      } else {\r\n        qx.bom.element.Style.reset(element, style);\r\n      }\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Returns the value of a certain style of the container element.\r\n     *\r\n     * @param style {String} The style name of which the value should be returned\r\n     * @return {var} The value of the style\r\n     */\r\n    _getStyle(style) {\r\n      var element = this.getContainerElement();\r\n      return qx.bom.element.Style.get(element, style);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CSS Handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyDefaultCssClass(value, old) {\r\n      if (old) {\r\n        this.removeCssClass(old);\r\n      }\r\n      if (value) {\r\n        this.addCssClass(value);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds a CSS class to the container element of the widget. Use this method\r\n     * to enhance the default appearance of the widget.\r\n     *\r\n     * @param cssClass {String} The CSS class to add\r\n     */\r\n    addCssClass(cssClass) {\r\n      qx.bom.element.Class.add(this.getContainerElement(), cssClass);\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Adds an array of CSS classes to the container element of the widget. Use this method\r\n     * to enhance the default appearance of the widget.\r\n     *\r\n     * @param cssClasses {String[]} The CSS classes to add, wrapped by an array.\r\n     */\r\n    addCssClasses(cssClasses) {\r\n      if (cssClasses) {\r\n        qx.bom.element.Class.addClasses(this.getContainerElement(), cssClasses);\r\n        this._domUpdated();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes a CSS class from the container element of the widget.\r\n     *\r\n     * @param cssClass {String} The CSS class to remove\r\n     */\r\n    removeCssClass(cssClass) {\r\n      if (this.hasCssClass(cssClass)) {\r\n        qx.bom.element.Class.remove(this.getContainerElement(), cssClass);\r\n        this._domUpdated();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes an array of CSS classes from the container element of the widget.\r\n     *\r\n     * @param cssClasses {String[]} The CSS classes to remove from widget.\r\n     */\r\n    removeCssClasses(cssClasses) {\r\n      if (cssClasses) {\r\n        qx.bom.element.Class.removeClasses(\r\n          this.getContainerElement(),\r\n          cssClasses\r\n        );\r\n\r\n        this._domUpdated();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles the given CSS. Adds or removes the CSS class from the container element of the widget.\r\n     *\r\n     * @param cssClass {String} The CSS class to toggle\r\n     */\r\n    toggleCssClass(cssClass) {\r\n      if (this.hasCssClass(cssClass)) {\r\n        this.removeCssClass(cssClass);\r\n      } else {\r\n        this.addCssClass(cssClass);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if the widget has a certain CSS class set.\r\n     *\r\n     * @param cssClass {String} The CSS class to check\r\n     * @return {Boolean} Whether the CSS class is set or not\r\n     */\r\n    hasCssClass(cssClass) {\r\n      return qx.bom.element.Class.has(this.getContainerElement(), cssClass);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      Visibility handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyVisibility(value, old) {\r\n      if (value == \"excluded\") {\r\n        this.addCssClass(\"exclude\");\r\n      } else if (value == \"visible\") {\r\n        this.removeCssClass(\"exclude\");\r\n        this._setStyle(\"visibility\", \"visible\");\r\n      } else if (value == \"hidden\") {\r\n        this._setStyle(\"visibility\", \"hidden\");\r\n      }\r\n      this._domUpdated();\r\n    },\r\n\r\n    /**\r\n     * Sets the visibility of the widget.\r\n     *\r\n     * @param action {String} The causing action that triggered the layout update.\r\n     * @param properties {Map} The animation properties to set. Key / value pairs.\r\n     */\r\n    __setVisibility(action, properties) {\r\n      this.setVisibility(action);\r\n\r\n      var parent = this.getLayoutParent();\r\n      if (parent) {\r\n        parent.updateLayout(this, action, properties);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Make this widget visible.\r\n     *\r\n     * @param properties {Map} The animation properties to set. Key / value pairs.\r\n     *\r\n     */\r\n    show(properties) {\r\n      this.__setVisibility(\"visible\", properties);\r\n    },\r\n\r\n    /**\r\n     * Hide this widget.\r\n     *\r\n     * @param properties {Map} The animation properties to set. Key / value pairs.\r\n     *\r\n     */\r\n    hide(properties) {\r\n      this.__setVisibility(\"hidden\", properties);\r\n    },\r\n\r\n    /**\r\n     * Hide this widget and exclude it from the underlying layout.\r\n     *\r\n     * @param properties {Map} The animation properties to set. Key / value pairs.\r\n     *\r\n     */\r\n    exclude(properties) {\r\n      this.__setVisibility(\"excluded\", properties);\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally visible.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\r\n     */\r\n    isVisible() {\r\n      return this.getVisibility() === \"visible\";\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally hidden.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\r\n     */\r\n    isHidden() {\r\n      return this.getVisibility() !== \"visible\";\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally excluded.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\r\n     */\r\n    isExcluded() {\r\n      return this.getVisibility() === \"excluded\";\r\n    },\r\n\r\n    /**\r\n     * Detects if the widget and all its parents are visible.\r\n     *\r\n     * Warning: forces rendering of the browser. Do not use this method during\r\n     * animations or performance critical tasks.\r\n     * @return {Boolean} <code>true</code>if the widget is seeable\r\n     */\r\n    isSeeable() {\r\n      return this.getContainerElement().offsetWidth > 0;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n     Element handling\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Sets the container DOM element of the widget.\r\n     *\r\n     * @param element {Element} The container DOM element of the widget\r\n     */\r\n    _setContainerElement(element) {\r\n      this.__containerElement = element;\r\n    },\r\n\r\n    /**\r\n     * Returns the container DOM element of the widget.\r\n     *\r\n     * @return {Element} the container DOM element of the widget\r\n     *\r\n     * @internal\r\n     */\r\n    getContainerElement() {\r\n      return this.__containerElement;\r\n    },\r\n\r\n    /**\r\n     * Returns the content DOM element of the widget.\r\n     *\r\n     * @return {Element} the content DOM element of the widget\r\n     *\r\n     * @internal\r\n     */\r\n    getContentElement() {\r\n      if (!this.__contentElement) {\r\n        this.__contentElement = this._getContentElement();\r\n      }\r\n      return this.__contentElement;\r\n    },\r\n\r\n    /**\r\n     * Returns the content DOM element of the widget.\r\n     * Override this method, to define another element as the content element.\r\n     *\r\n     * Note: Most times this element points to to the container element.\r\n     * When the widget has a more complex element structure,\r\n     * the function should return a reference of the element that should contain\r\n     * the content.\r\n     *\r\n     * @return {Element} the content DOM element of the widget\r\n     */\r\n    _getContentElement() {\r\n      return this.getContainerElement();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      ENHANCED DISPOSE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Removes this widget from its parent and disposes it.\r\n     */\r\n    destroy() {\r\n      if (this.$$disposed) {\r\n        return;\r\n      }\r\n\r\n      var parent = this.__layoutParent;\r\n      if (parent) {\r\n        parent._remove(this);\r\n      }\r\n      this.dispose();\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (!qx.core.ObjectRegistry.inShutDown) {\r\n      // Cleanup event listeners\r\n      // Needed as we rely on the containerElement in the qx.ui.mobile.core.EventHandler\r\n      qx.event.Registration.removeAllListeners(this);\r\n\r\n      if (this.getId()) {\r\n        qx.ui.mobile.core.Widget.unregisterWidget(this.getId());\r\n      }\r\n    }\r\n\r\n    this.__layoutParent =\r\n      this.__containerElement =\r\n      this.__contentElement =\r\n        null;\r\n    if (this.__layoutManager) {\r\n      this.__layoutManager.dispose();\r\n    }\r\n    this.__layoutManager = null;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DEFER\r\n  *****************************************************************************\r\n  */\r\n\r\n  defer(statics) {\r\n    qx.bom.Lifecycle.onShutdown(statics.onShutdown, statics);\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}