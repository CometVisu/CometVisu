{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "container",
    "Composite",
    "include",
    "core",
    "MResize",
    "construct",
    "layout",
    "VBox",
    "statics",
    "_currentPage",
    "_onDeviceReady",
    "bom",
    "Event",
    "addNativeListener",
    "document",
    "page",
    "Page",
    "_onBackButton",
    "_onMenuButton",
    "Environment",
    "get",
    "exit",
    "back",
    "navigator",
    "app",
    "exitApp",
    "menu",
    "events",
    "initialize",
    "start",
    "stop",
    "pause",
    "resume",
    "wait",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "lifeCycleState",
    "check",
    "apply",
    "members",
    "__initialized",
    "show",
    "exclude",
    "triggeredByKeyEvent",
    "Init",
    "getApplication",
    "fireDataEvent",
    "value",
    "_back",
    "fireEvent",
    "isInitialized",
    "_initialize",
    "setLifeCycleState",
    "_start",
    "_stop",
    "_pause",
    "_resume",
    "_wait",
    "_applyLifeCycleState",
    "old",
    "defer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/page/Page.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * A page is a widget which provides a screen with which users\n * can interact in order to do something. Most times a page provides a single task\n * or a group of related tasks.\n *\n * A qooxdoo mobile application is usually composed of one or more loosely bound\n * pages. Typically there is one page that presents the \"main\" view.\n *\n * Pages can have one or more child widgets from the {@link qx.ui.mobile}\n * namespace. Normally a page provides a {@link qx.ui.mobile.navigationbar.NavigationBar}\n * for the navigation between pages.\n *\n * To navigate between two pages, just call the {@link #show} method of the page\n * that should be shown. Depending on the used page manager a page transition will be animated.\n * There are several animations available. Have\n * a look at the {@link qx.ui.mobile.page.Manager} manager or {@link qx.ui.mobile.layout.Card} card layout for more information.\n *\n * A page has predefined lifecycle methods that get called by the used page manager\n * when a page gets shown. Each time another page is requested to be shown the currently shown page\n * is stopped. The other page, will be, if shown for the first time, initialized and started\n * afterwards. For all called lifecycle methods an event is fired.\n *\n * Call of the {@link #show} method triggers the following lifecycle methods:\n *\n * * <strong>initialize</strong>: Initializes the page to show\n * * <strong>start</strong>: Gets called when the page to show is started\n * * <strong>stop</strong>:  Stops the current page\n *\n * IMPORTANT: Define all child widgets of a page when the {@link #initialize} lifecycle\n * method is called, either by listening to the {@link #initialize} event or overriding\n * the {@link #_initialize} method. This is because a page can be instanced during\n * application startup and would then decrease performance when the widgets would be\n * added during constructor call. The <code>initialize</code> event and the\n * {@link #_initialize} lifecycle method are only called when the page is shown\n * for the first time.\n *\n */\nqx.Class.define(\"qx.ui.mobile.page.Page\", {\n  extend: qx.ui.mobile.container.Composite,\n  include: qx.ui.mobile.core.MResize,\n\n  /*\n   *****************************************************************************\n      CONSTRUCTOR\n   *****************************************************************************\n   */\n\n  construct(layout) {\n    super(layout || new qx.ui.mobile.layout.VBox());\n  },\n\n  /*\n   *****************************************************************************\n      STATICS\n   *****************************************************************************\n   */\n\n  statics: {\n    _currentPage: null,\n\n    /**\n     * Event handler. Called when the device is ready.\n     */\n    _onDeviceReady() {\n      qx.bom.Event.addNativeListener(\n        document,\n        \"backbutton\",\n        qx.ui.mobile.page.Page._onBackButton\n      );\n\n      qx.bom.Event.addNativeListener(\n        document,\n        \"menubutton\",\n        qx.ui.mobile.page.Page._onMenuButton\n      );\n    },\n\n    /**\n     * Event handler. Called when the back button of the device was pressed.\n     */\n    _onBackButton() {\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"os.name\") == \"android\"\n      ) {\n        var exit = true;\n        if (qx.ui.mobile.page.Page._currentPage) {\n          exit = qx.ui.mobile.page.Page._currentPage.back(true);\n        }\n        if (exit) {\n          navigator.app.exitApp();\n        }\n      }\n    },\n\n    /**\n     * Event handler. Called when the menu button of the device was pressed.\n     */\n    _onMenuButton() {\n      if (\n        qx.core.Environment.get(\"phonegap\") &&\n        qx.core.Environment.get(\"os.name\") == \"android\"\n      ) {\n        if (qx.ui.mobile.page.Page._currentPage) {\n          qx.ui.mobile.page.Page._currentPage.menu();\n        }\n      }\n    }\n  },\n\n  events: {\n    /** Fired when the lifecycle method {@link #initialize} is called */\n    initialize: \"qx.event.type.Event\",\n\n    /** Fired when the lifecycle method {@link #start} is called */\n    start: \"qx.event.type.Event\",\n\n    /** Fired when the lifecycle method {@link #stop} is called */\n    stop: \"qx.event.type.Event\",\n\n    /** Fired when the lifecycle method {@link #pause} is called */\n    pause: \"qx.event.type.Event\",\n\n    /** Fired when the lifecycle method {@link #resume} is called */\n    resume: \"qx.event.type.Event\",\n\n    /**\n     * Fired when the method {@link #back} is called and not prevented by\n     * {@link qx.application.Mobile#back}. Data indicating whether\n     * the action was triggered by a key event or not.\n     */\n    back: \"qx.event.type.Data\",\n\n    /** Fired when the method {@link #menu} is called */\n    menu: \"qx.event.type.Event\",\n\n    /** Fired when the method {@link #wait} is called */\n    wait: \"qx.event.type.Event\"\n  },\n\n  properties: {\n    // overridden\n    defaultCssClass: {\n      refine: true,\n      init: \"page\"\n    },\n\n    /**\n     * The current active life cycle state of this page.\n     */\n    lifeCycleState: {\n      init: null,\n      check: [\"initialize\", \"start\", \"stop\", \"resume\", \"wait\", \"pause\"],\n      apply: \"_applyLifeCycleState\"\n    }\n  },\n\n  /*\n   *****************************************************************************\n      MEMBERS\n   *****************************************************************************\n   */\n\n  members: {\n    __initialized: false,\n\n    // overridden\n    show(properties) {\n      if (qx.ui.mobile.page.Page._currentPage) {\n        qx.ui.mobile.page.Page._currentPage.stop();\n      }\n      qx.ui.mobile.page.Page._currentPage = this;\n      this.initialize();\n      this.start();\n      super.show(properties);\n    },\n\n    // overridden\n    exclude(properties) {\n      this.stop();\n      super.exclude(properties);\n    },\n\n    /**\n     * Fires the <code>back</code> event. Call this method if you want to request\n     * a back action. For Android PhoneGap applications this method gets called\n     * by the used page manager when the back button was pressed. Return <code>true</code>\n     * to exit the application.\n     *\n     * The back request can prevented by calling the {@link qx.event.type.Event#preventDefault} on\n     * the {@link qx.application.Mobile#back} event.\n     *\n     * @param triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.\n     * @return {Boolean} Whether the exit should be exit or not. Return <code>true</code\n     *     to exit the application. Only needed for Android PhoneGap applications.\n     */\n    back(triggeredByKeyEvent) {\n      if (\n        qx.core.Init.getApplication().fireDataEvent(\n          \"back\",\n          triggeredByKeyEvent,\n          null,\n          true\n        )\n      ) {\n        this.fireDataEvent(\"back\", triggeredByKeyEvent);\n        var value = this._back(triggeredByKeyEvent);\n        return value || false;\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * Override this method if you want to perform a certain action when back\n     * is called.\n     *\n     * @param triggeredByKeyEvent {Boolean} Whether the back action was triggered by a key event.\n     * @return {Boolean} Whether the exit should be exit or not. Return <code>true</code\n     *     to exit the application. Only needed for Android PhoneGap applications.\n     * @see #back\n     * @abstract\n     */\n    _back(triggeredByKeyEvent) {},\n\n    /**\n     * Only used by Android PhoneGap applications. Called by the used page manager\n     * when the menu button was pressed. Fires the <code>menu</code> event.\n     */\n    menu() {\n      this.fireEvent(\"menu\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      Lifecycle Methods\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Lifecycle method. Called by the page manager when the page is shown.\n     * Fires the <code>initialize</code> event. You should create and add all your\n     * child widgets of the view,  either by listening to the {@link #initialize} event or overriding\n     * the {@link #_initialize} method. This is because a page can be instanced during\n     * application startup and would then decrease performance when the widgets would be\n     * added during constructor call. The {@link #_initialize} lifecycle method and the\n     * <code>initialize</code> are only called once when the page is shown for the first time.\n     */\n    initialize() {\n      if (!this.isInitialized()) {\n        this._initialize();\n        this.__initialized = true;\n        this.setLifeCycleState(\"initialize\");\n      }\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when initialize\n     * is called.\n     *\n     * @see #initialize\n     */\n    _initialize() {},\n\n    /**\n     * Returns the status of the initialization of the page.\n     *\n     * @return {Boolean} Whether the page is already initialized or not\n     */\n    isInitialized() {\n      return this.__initialized;\n    },\n\n    /**\n     * Lifecycle method. Called by the page manager after the {@link #initialize}\n     * method when the page is shown. Fires the <code>start</code> event. You should\n     * register all your event listener when this event occurs, so that no page\n     * updates are done when page is not shown.\n     */\n    start() {\n      this._start();\n      this.setLifeCycleState(\"start\");\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when start\n     * is called.\n     *\n     * @see #start\n     */\n    _start() {},\n\n    /**\n     * Lifecycle method. Called by the page manager when another page is shown.\n     * Fires the <code>stop</code> event. You should unregister all your event\n     * listener when this event occurs, so that no page updates are down when page is not shown.\n     */\n    stop() {\n      if (!this.isInitialized()) {\n        return;\n      }\n      this._stop();\n      this.setLifeCycleState(\"stop\");\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when stop\n     * is called.\n     *\n     * @see #stop\n     */\n    _stop() {},\n\n    /**\n     * Lifecycle method. Not used right now. Should be called when the current page\n     * is interrupted, e.g. by a dialog, so that page view updates can be interrupted.\n     * Fires the <code>pause</code> event.\n     */\n    pause() {\n      this._pause();\n      this.setLifeCycleState(\"pause\");\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when pause\n     * is called.\n     *\n     * @see #pause\n     */\n    _pause() {},\n\n    /**\n     * Lifecycle method. Not used right now. Should be called when the current page\n     * is resuming from a interruption, e.g. when a dialog is closed, so that page\n     * can resume updating the view.\n     * Fires the <code>resume</code> event.\n     */\n    resume() {\n      this._resume();\n      this.setLifeCycleState(\"resume\");\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when resume\n     * is called.\n     *\n     * @see #resume\n     */\n    _resume() {},\n\n    /**\n     * Lifecycle method. Not used right now. Should be called when the current page\n     * waits for data request etc.\n     * Fires the <code>wait</code> event.\n     */\n    wait() {\n      this._wait();\n      this.setLifeCycleState(\"wait\");\n    },\n\n    /**\n     * Override this method if you would like to perform a certain action when wait\n     * is called.\n     *\n     * @see #wait\n     */\n    _wait() {},\n\n    // property apply\n    _applyLifeCycleState(value, old) {\n      if (value == \"start\" || value == \"stop\") {\n        qx.core.Init.getApplication().fireEvent(value);\n      }\n\n      this.fireEvent(value);\n    }\n  },\n\n  /*\n   *****************************************************************************\n       DEFER\n   *****************************************************************************\n   */\n\n  defer(statics) {\n    if (\n      qx.core.Environment.get(\"phonegap\") &&\n      qx.core.Environment.get(\"os.name\") == \"android\"\n    ) {\n      qx.bom.Event.addNativeListener(\n        document,\n        \"deviceready\",\n        statics._onDeviceReady\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wBAAwB,EAAE;IACxCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,SAAS,CAACC,SAAS;IACxCC,OAAO,EAAEX,EAAE,CAACO,EAAE,CAACC,MAAM,CAACI,IAAI,CAACC,OAAO;IAElC;AACF;AACA;AACA;AACA;IAEEC,SAAS,qBAACC,MAAM,EAAE;MAChB,wDAAMA,MAAM,IAAI,IAAIf,EAAE,CAACO,EAAE,CAACC,MAAM,CAACO,MAAM,CAACC,IAAI,EAAE;IAChD,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPC,YAAY,EAAE,IAAI;MAElB;AACJ;AACA;MACIC,cAAc,4BAAG;QACfnB,EAAE,CAACoB,GAAG,CAACC,KAAK,CAACC,iBAAiB,CAC5BC,QAAQ,EACR,YAAY,EACZvB,EAAE,CAACO,EAAE,CAACC,MAAM,CAACgB,IAAI,CAACC,IAAI,CAACC,aAAa,CACrC;QAED1B,EAAE,CAACoB,GAAG,CAACC,KAAK,CAACC,iBAAiB,CAC5BC,QAAQ,EACR,YAAY,EACZvB,EAAE,CAACO,EAAE,CAACC,MAAM,CAACgB,IAAI,CAACC,IAAI,CAACE,aAAa,CACrC;MACH,CAAC;MAED;AACJ;AACA;MACID,aAAa,2BAAG;QACd,IACE1B,EAAE,CAACY,IAAI,CAACgB,WAAW,CAACC,GAAG,CAAC,UAAU,CAAC,IACnC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"
}