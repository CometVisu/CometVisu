{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "events",
    "updateLayout",
    "members",
    "_widget",
    "__cachedProperties",
    "__cachedChildLayoutProperties",
    "_getCssClasses",
    "_getSupportedChildLayoutProperties",
    "_setLayoutProperty",
    "widget",
    "property",
    "value",
    "setLayoutProperties",
    "properties",
    "supportedChildLayoutProperties",
    "Error",
    "_addPropertyToChildLayoutCache",
    "connectToWidget",
    "removeCssClasses",
    "addCssClasses",
    "reset",
    "set",
    "connectToChildWidget",
    "disconnectFromChildWidget",
    "action",
    "fireDataEvent",
    "_addCachedProperty",
    "_getChildLayoutPropertyValue",
    "cache",
    "__getChildLayoutPropertyCache",
    "hash",
    "toHashCode",
    "destruct",
    "ui",
    "mobile",
    "layout",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/layout/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * Base class for all layout managers.\n *\n * Custom layout managers must derive from\n * this class and implement the methods {@link #_getCssClasses},\n * {@link #_getSupportedChildLayoutProperties} and {@link #_setLayoutProperty}.\n */\nqx.Class.define(\"qx.ui.mobile.layout.Abstract\", {\n  extend: qx.core.Object,\n  type: \"abstract\",\n\n  /*\n   *****************************************************************************\n      EVENTS\n   *****************************************************************************\n   */\n\n  events: {\n    /** Fired when the layout is updated. Data contains the \"widget\", \"action\", \"properties\" */\n    updateLayout: \"qx.event.type.Data\"\n  },\n\n  /*\n   *****************************************************************************\n      MEMBERS\n   *****************************************************************************\n   */\n\n  members: {\n    _widget: null,\n    __cachedProperties: null,\n    __cachedChildLayoutProperties: null,\n\n    /**\n     * Returns the css classes in an array that the layout is using.\n     *\n     * @return {Array} The css classes that the layout is using\n     */\n    _getCssClasses() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        throw new Error(\"Abstract method call\");\n      }\n    },\n\n    /**\n     * Returns the supported child layout properties. Needed to validate\n     * the incoming layout properties. Override this function in your implementation.\n     *\n     * @return {Map} The supported child layout properties, e.g. <code>{\"property\":1}</code>\n     */\n    _getSupportedChildLayoutProperties() {\n      return null;\n    },\n\n    /**\n     * Abstracts method. Override this in your implementation.\n     * The function is called for all given layout properties once.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String?null} Optional. The layout property to set.\n     * @param value {var?} Optional. The value of the layout property.\n     */\n    _setLayoutProperty(widget, property, value) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        throw new Error(\"Abstract method call\");\n      }\n    },\n\n    /**\n     * Sets the given layout properties to a widget.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param properties {Map} The layout properties to set. Key / value pairs.\n     */\n    setLayoutProperties(widget, properties) {\n      if (properties == null) {\n        return;\n      }\n\n      var supportedChildLayoutProperties =\n        this._getSupportedChildLayoutProperties();\n      if (!supportedChildLayoutProperties) {\n        return;\n      }\n\n      for (var property in properties) {\n        if (!supportedChildLayoutProperties[property]) {\n          throw new Error(\n            \"The layout does not support the \" + property + \" property\"\n          );\n        }\n        var value = properties[property];\n        this._setLayoutProperty(widget, property, value);\n        this._addPropertyToChildLayoutCache(widget, property, value);\n      }\n    },\n\n    /**\n     * This method is called by the widget to connect the widget with the layout.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    connectToWidget(widget) {\n      if (this._widget) {\n        this._widget.removeCssClasses(this._getCssClasses());\n      }\n\n      this._widget = widget;\n      if (widget) {\n        widget.addCssClasses(this._getCssClasses());\n        if (this.__cachedProperties) {\n          for (var property in this.__cachedProperties) {\n            this.reset(property);\n            this.set(property, this.__cachedProperties[property]);\n          }\n        }\n      } else {\n        this.__cachedProperties = null;\n      }\n    },\n\n    /**\n     * Connects the layout to a given child widget. Can be overridden in a concrete\n     * interface implementation.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    connectToChildWidget(widget) {},\n\n    /**\n     * Disconnects the layout from a given child widget. Can be overridden in a concrete\n     * interface implementation.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    disconnectFromChildWidget(widget) {},\n\n    /**\n     * Updates the layout. Method is called by a widget, when it changes its state.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param action {String} The causing action that triggered the layout update.\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     */\n    updateLayout(widget, action, properties) {\n      this.fireDataEvent(\"updateLayout\", {\n        widget: widget,\n        action: action,\n        properties: properties\n      });\n    },\n\n    /**\n     * Adds a property to the cache. Needed when the layout is not yet\n     * connected with the widget.\n     *\n     * @param property {String} The property to add\n     * @param value {var} The value of the property to add\n     */\n    _addCachedProperty(property, value) {\n      if (!this.__cachedProperties) {\n        this.__cachedProperties = {};\n      }\n      this.__cachedProperties[property] = value;\n    },\n\n    /**\n     * Returns a child layout property value.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String} The property to retrieve the value from\n     * @return {var} The value of the given property\n     */\n    _getChildLayoutPropertyValue(widget, property) {\n      var cache = this.__getChildLayoutPropertyCache(widget);\n      return cache[property];\n    },\n\n    /**\n     * Adds a child layout property to the cache. When the value is\n     * <code>null</code> the property will be deleted from the cache.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String} The property to add\n     * @param value {var} The value of the property to add\n     */\n    _addPropertyToChildLayoutCache(widget, property, value) {\n      var cache = this.__getChildLayoutPropertyCache(widget);\n      if (value == null) {\n        delete cache[property];\n      } else {\n        cache[property] = value;\n      }\n    },\n\n    /**\n     * Returns the child layout property cache.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @return {Map} The child layout property cache for the given widget.\n     *     Key / value pairs.\n     */\n    __getChildLayoutPropertyCache(widget) {\n      if (!this.__cachedChildLayoutProperties) {\n        this.__cachedChildLayoutProperties = {};\n      }\n\n      var cache = this.__cachedChildLayoutProperties;\n      var hash = widget.toHashCode();\n      if (!cache[hash]) {\n        cache[hash] = {};\n      }\n      return cache[hash];\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n\n  destruct() {\n    this._widget = null;\n  }\n});\n"
  ],
  "mappings": "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"
}