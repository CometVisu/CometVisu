{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "events",
    "updateLayout",
    "members",
    "_widget",
    "__cachedProperties",
    "__cachedChildLayoutProperties",
    "_getCssClasses",
    "_getSupportedChildLayoutProperties",
    "_setLayoutProperty",
    "widget",
    "property",
    "value",
    "setLayoutProperties",
    "properties",
    "supportedChildLayoutProperties",
    "Error",
    "_addPropertyToChildLayoutCache",
    "connectToWidget",
    "removeCssClasses",
    "addCssClasses",
    "reset",
    "set",
    "connectToChildWidget",
    "disconnectFromChildWidget",
    "action",
    "fireDataEvent",
    "_addCachedProperty",
    "_getChildLayoutPropertyValue",
    "cache",
    "__getChildLayoutPropertyCache",
    "hash",
    "toHashCode",
    "destruct",
    "ui",
    "mobile",
    "layout",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/layout/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * Base class for all layout managers.\n *\n * Custom layout managers must derive from\n * this class and implement the methods {@link #_getCssClasses},\n * {@link #_getSupportedChildLayoutProperties} and {@link #_setLayoutProperty}.\n */\nqx.Class.define(\"qx.ui.mobile.layout.Abstract\", {\n  extend: qx.core.Object,\n  type: \"abstract\",\n\n  /*\n   *****************************************************************************\n      EVENTS\n   *****************************************************************************\n   */\n\n  events: {\n    /** Fired when the layout is updated. Data contains the \"widget\", \"action\", \"properties\" */\n    updateLayout: \"qx.event.type.Data\"\n  },\n\n  /*\n   *****************************************************************************\n      MEMBERS\n   *****************************************************************************\n   */\n\n  members: {\n    _widget: null,\n    __cachedProperties: null,\n    __cachedChildLayoutProperties: null,\n\n    /**\n     * Returns the css classes in an array that the layout is using.\n     *\n     * @return {Array} The css classes that the layout is using\n     */\n    _getCssClasses() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        throw new Error(\"Abstract method call\");\n      }\n    },\n\n    /**\n     * Returns the supported child layout properties. Needed to validate\n     * the incoming layout properties. Override this function in your implementation.\n     *\n     * @return {Map} The supported child layout properties, e.g. <code>{\"property\":1}</code>\n     */\n    _getSupportedChildLayoutProperties() {\n      return null;\n    },\n\n    /**\n     * Abstracts method. Override this in your implementation.\n     * The function is called for all given layout properties once.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String?null} Optional. The layout property to set.\n     * @param value {var?} Optional. The value of the layout property.\n     */\n    _setLayoutProperty(widget, property, value) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        throw new Error(\"Abstract method call\");\n      }\n    },\n\n    /**\n     * Sets the given layout properties to a widget.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param properties {Map} The layout properties to set. Key / value pairs.\n     */\n    setLayoutProperties(widget, properties) {\n      if (properties == null) {\n        return;\n      }\n\n      var supportedChildLayoutProperties =\n        this._getSupportedChildLayoutProperties();\n      if (!supportedChildLayoutProperties) {\n        return;\n      }\n\n      for (var property in properties) {\n        if (!supportedChildLayoutProperties[property]) {\n          throw new Error(\n            \"The layout does not support the \" + property + \" property\"\n          );\n        }\n        var value = properties[property];\n        this._setLayoutProperty(widget, property, value);\n        this._addPropertyToChildLayoutCache(widget, property, value);\n      }\n    },\n\n    /**\n     * This method is called by the widget to connect the widget with the layout.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    connectToWidget(widget) {\n      if (this._widget) {\n        this._widget.removeCssClasses(this._getCssClasses());\n      }\n\n      this._widget = widget;\n      if (widget) {\n        widget.addCssClasses(this._getCssClasses());\n        if (this.__cachedProperties) {\n          for (var property in this.__cachedProperties) {\n            this.reset(property);\n            this.set(property, this.__cachedProperties[property]);\n          }\n        }\n      } else {\n        this.__cachedProperties = null;\n      }\n    },\n\n    /**\n     * Connects the layout to a given child widget. Can be overridden in a concrete\n     * interface implementation.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    connectToChildWidget(widget) {},\n\n    /**\n     * Disconnects the layout from a given child widget. Can be overridden in a concrete\n     * interface implementation.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The widget to connect to\n     */\n    disconnectFromChildWidget(widget) {},\n\n    /**\n     * Updates the layout. Method is called by a widget, when it changes its state.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param action {String} The causing action that triggered the layout update.\n     * @param properties {Map} The animation properties to set. Key / value pairs.\n     */\n    updateLayout(widget, action, properties) {\n      this.fireDataEvent(\"updateLayout\", {\n        widget: widget,\n        action: action,\n        properties: properties\n      });\n    },\n\n    /**\n     * Adds a property to the cache. Needed when the layout is not yet\n     * connected with the widget.\n     *\n     * @param property {String} The property to add\n     * @param value {var} The value of the property to add\n     */\n    _addCachedProperty(property, value) {\n      if (!this.__cachedProperties) {\n        this.__cachedProperties = {};\n      }\n      this.__cachedProperties[property] = value;\n    },\n\n    /**\n     * Returns a child layout property value.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String} The property to retrieve the value from\n     * @return {var} The value of the given property\n     */\n    _getChildLayoutPropertyValue(widget, property) {\n      var cache = this.__getChildLayoutPropertyCache(widget);\n      return cache[property];\n    },\n\n    /**\n     * Adds a child layout property to the cache. When the value is\n     * <code>null</code> the property will be deleted from the cache.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @param property {String} The property to add\n     * @param value {var} The value of the property to add\n     */\n    _addPropertyToChildLayoutCache(widget, property, value) {\n      var cache = this.__getChildLayoutPropertyCache(widget);\n      if (value == null) {\n        delete cache[property];\n      } else {\n        cache[property] = value;\n      }\n    },\n\n    /**\n     * Returns the child layout property cache.\n     *\n     * @param widget {qx.ui.mobile.core.Widget} The target widget\n     * @return {Map} The child layout property cache for the given widget.\n     *     Key / value pairs.\n     */\n    __getChildLayoutPropertyCache(widget) {\n      if (!this.__cachedChildLayoutProperties) {\n        this.__cachedChildLayoutProperties = {};\n      }\n\n      var cache = this.__cachedChildLayoutProperties;\n      var hash = widget.toHashCode();\n      if (!cache[hash]) {\n        cache[hash] = {};\n      }\n      return cache[hash];\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n\n  destruct() {\n    this._widget = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}