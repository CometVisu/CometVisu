{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/Part.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "construct",
    "_setLayout",
    "layout",
    "HBox",
    "_createChildControl",
    "properties",
    "appearance",
    "refine",
    "init",
    "show",
    "check",
    "inheritable",
    "event",
    "spacing",
    "nullable",
    "themeable",
    "apply",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Image",
    "setAlignY",
    "_add",
    "toolbar",
    "PartContainer",
    "addListener",
    "__onSyncAppearance",
    "getChildrenContainer",
    "getChildControl",
    "_applySpacing",
    "value",
    "old",
    "getLayout",
    "resetSpacing",
    "setSpacing",
    "children",
    "getChildren",
    "filter",
    "child",
    "getVisibility",
    "i",
    "length",
    "addState",
    "removeState",
    "addSeparator",
    "add",
    "Separator",
    "getMenuButtons",
    "buttons",
    "l",
    "menubar",
    "Button",
    "push",
    "Part"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A part is a container for multiple toolbar buttons. Each part comes\n * with a handle which may be used in later versions to drag the part\n * around and move it to another position. Currently mainly used\n * for structuring large toolbars beyond the capabilities of the\n * {@link Separator}.\n *\n * @childControl handle {qx.ui.basic.Image} prat handle to visualize the separation\n * @childControl container {qx.ui.toolbar.PartContainer} holds the content of the toolbar part\n */\nqx.Class.define(\"qx.ui.toolbar.Part\",\n{\n  extend : qx.ui.core.Widget,\n  include : [qx.ui.core.MRemoteChildrenHandling],\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    // Hard coded HBox layout\n    this._setLayout(new qx.ui.layout.HBox);\n\n    // Force creation of the handle\n    this._createChildControl(\"handle\");\n  },\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    appearance :\n    {\n      refine : true,\n      init : \"toolbar/part\"\n    },\n\n    /** Whether icons, labels, both or none should be shown. */\n    show :\n    {\n      init : \"both\",\n      check : [ \"both\", \"label\", \"icon\" ],\n      inheritable : true,\n      event : \"changeShow\"\n    },\n\n    /** The spacing between every child of the toolbar */\n    spacing :\n    {\n      nullable : true,\n      check : \"Integer\",\n      themeable : true,\n      apply : \"_applySpacing\"\n    }\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"handle\":\n          control = new qx.ui.basic.Image();\n          control.setAlignY(\"middle\");\n          this._add(control);\n          break;\n\n        case \"container\":\n          control = new qx.ui.toolbar.PartContainer();\n          control.addListener(\"syncAppearance\", this.__onSyncAppearance, this);\n          this._add(control);\n          control.addListener(\"changeChildren\", function() {\n            this.__onSyncAppearance();\n          }, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    getChildrenContainer : function() {\n      return this.getChildControl(\"container\");\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    _applySpacing : function(value, old)\n    {\n      var layout = this.getChildControl(\"container\").getLayout();\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Helper which applies the left, right and middle states.\n     */\n    __onSyncAppearance : function() {\n      // check every child\n      var children = this.getChildrenContainer().getChildren();\n      children = children.filter(function(child) {\n        return child.getVisibility() == \"visible\";\n      });\n      for (var i = 0; i < children.length; i++) {\n        // if its the first child\n        if (i == 0 && i != children.length - 1) {\n          children[i].addState(\"left\");\n          children[i].removeState(\"right\");\n          children[i].removeState(\"middle\");\n        // if its the last child\n        } else if (i == children.length - 1 && i != 0) {\n          children[i].addState(\"right\");\n          children[i].removeState(\"left\");\n          children[i].removeState(\"middle\");\n        // if there is only one child\n        } else if (i == 0 && i == children.length - 1) {\n          children[i].removeState(\"left\");\n          children[i].removeState(\"middle\");\n          children[i].removeState(\"right\");\n        } else {\n          children[i].addState(\"middle\");\n          children[i].removeState(\"right\");\n          children[i].removeState(\"left\");\n        }\n      };\n    },\n\n\n    /**\n     * Adds a separator to the toolbar part.\n     */\n    addSeparator : function() {\n      this.add(new qx.ui.toolbar.Separator);\n    },\n\n\n    /**\n     * Returns all nested buttons which contains a menu to show. This is mainly\n     * used for keyboard support.\n     *\n     * @return {Array} List of all menu buttons\n     */\n    getMenuButtons : function()\n    {\n      var children = this.getChildren();\n      var buttons = [];\n      var child;\n\n      for (var i=0, l=children.length; i<l; i++)\n      {\n        child = children[i];\n\n        if (child instanceof qx.ui.menubar.Button) {\n          buttons.push(child);\n        }\n      }\n\n      return buttons;\n    }\n  }\n});\n"
  ]
}