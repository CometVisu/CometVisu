{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MChildrenHandling",
    "construct",
    "layout",
    "getContentElement",
    "setAttribute",
    "_setLayout",
    "HBox",
    "__removedItems",
    "__removePriority",
    "properties",
    "appearance",
    "refine",
    "init",
    "openMenu",
    "check",
    "event",
    "nullable",
    "show",
    "inheritable",
    "apply",
    "spacing",
    "themeable",
    "overflowIndicator",
    "overflowHandling",
    "events",
    "hideItem",
    "showItem",
    "members",
    "_computeSizeHint",
    "hint",
    "getOverflowHandling",
    "minWidth",
    "overflowWidget",
    "getOverflowIndicator",
    "getSizeHint",
    "width",
    "getSpacing",
    "_onResize",
    "e",
    "_recalculateOverflow",
    "getData",
    "requiredWidth",
    "overflowWidgetWidth",
    "undefined",
    "getBounds",
    "childToHide",
    "_getNextToHide",
    "margins",
    "getMarginLeft",
    "getMarginRight",
    "Math",
    "max",
    "childWidth",
    "__hideChild",
    "getVisibility",
    "setVisibility",
    "overflowWidgetMargins",
    "length",
    "removedChild",
    "getDomElement",
    "syncAppearance",
    "invalidateLayoutCache",
    "removedChildWidth",
    "fits",
    "addedMargin",
    "wouldRequiredWidth",
    "__showChild",
    "child",
    "shift",
    "fireDataEvent",
    "unshift",
    "i",
    "item",
    "children",
    "_getChildren",
    "setRemovePriority",
    "priority",
    "override",
    "Error",
    "_applyOverflowHandling",
    "value",
    "old",
    "parent",
    "getLayoutParent",
    "bounds",
    "addListener",
    "removeListener",
    "_applyOverflowIndicator",
    "_remove",
    "_indexOf",
    "__allowMenuOpenHover",
    "_setAllowMenuOpenHover",
    "_isAllowMenuOpenHover",
    "_applySpacing",
    "_getLayout",
    "resetSpacing",
    "setSpacing",
    "_applyShow",
    "setShow",
    "_add",
    "options",
    "util",
    "PropertyUtil",
    "getUserValue",
    "getShow",
    "newWidth",
    "_addAt",
    "index",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "_removeAt",
    "_removeAll",
    "addSpacer",
    "spacer",
    "Spacer",
    "flex",
    "addSeparator",
    "add",
    "toolbar",
    "Separator",
    "getMenuButtons",
    "getChildren",
    "buttons",
    "l",
    "menubar",
    "Button",
    "push",
    "Part",
    "destruct",
    "hasListener",
    "ToolBar"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/ToolBar.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The Toolbar class is the main part of the toolbar widget.\n *\n * It can handle added {@link Button}s, {@link CheckBox}es, {@link RadioButton}s\n * and {@link Separator}s in its {@link #add} method. The {@link #addSpacer} method\n * adds a spacer at the current toolbar position. This means that the widgets\n * added after the method call of {@link #addSpacer} are aligned to the right of\n * the toolbar.\n *\n * For more details on the documentation of the toolbar widget, take a look at the\n * documentation of the {@link qx.ui.toolbar}-Package.\n */\nqx.Class.define(\"qx.ui.toolbar.ToolBar\", {\n  extend: qx.ui.core.Widget,\n  include: qx.ui.core.MChildrenHandling,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Constructor\n   * @param {qx.ui.layout.Abstract?} layout optional layout, defaults to qx.ui.layout.HBox\n   */\n  construct(layout) {\n    super();\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"toolbar\");\n\n    // add needed layout\n    this._setLayout(layout || new qx.ui.layout.HBox());\n\n    // initialize the overflow handling\n    this.__removedItems = [];\n    this.__removePriority = [];\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Appearance of the widget */\n    appearance: {\n      refine: true,\n      init: \"toolbar\"\n    },\n\n    /** Holds the currently open menu (when the toolbar is used for menus) */\n    openMenu: {\n      check: \"qx.ui.menu.Menu\",\n      event: \"changeOpenMenu\",\n      nullable: true\n    },\n\n    /** Whether icons, labels, both or none should be shown. */\n    show: {\n      init: \"both\",\n      check: [\"both\", \"label\", \"icon\"],\n      inheritable: true,\n      apply: \"_applyShow\",\n      event: \"changeShow\"\n    },\n\n    /** The spacing between every child of the toolbar */\n    spacing: {\n      nullable: true,\n      check: \"Integer\",\n      themeable: true,\n      apply: \"_applySpacing\"\n    },\n\n    /**\n     * Widget which will be shown if at least one toolbar item is hidden.\n     * Keep in mind to add this widget to the toolbar before you set it as\n     * indicator!\n     */\n    overflowIndicator: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      apply: \"_applyOverflowIndicator\"\n    },\n\n    /** Enables the overflow handling which automatically removes items.*/\n    overflowHandling: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyOverflowHandling\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired if an item will be hidden by the {@link #overflowHandling}.*/\n    hideItem: \"qx.event.type.Data\",\n\n    /** Fired if an item will be shown by the {@link #overflowHandling}.*/\n    showItem: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      OVERFLOW HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __removedItems: null,\n    __removePriority: null,\n\n    // overridden\n    _computeSizeHint() {\n      // get the original hint\n      var hint = super._computeSizeHint();\n      if (true && this.getOverflowHandling()) {\n        var minWidth = 0;\n        // if an overflow widget is given, use its width + spacing as min width\n        var overflowWidget = this.getOverflowIndicator();\n        if (overflowWidget) {\n          minWidth = overflowWidget.getSizeHint().width + this.getSpacing();\n        }\n        // reset the minWidth because we reduce the count of elements\n        hint.minWidth = minWidth;\n      }\n      return hint;\n    },\n\n    /**\n     * Resize event handler.\n     *\n     * @param e {qx.event.type.Data} The resize event.\n     */\n    _onResize(e) {\n      this._recalculateOverflow(e.getData().width);\n    },\n\n    /**\n     * Responsible for calculation the overflow based on the available width.\n     *\n     * @param width {Integer?null} The available width.\n     * @param requiredWidth {Integer?null} The required width for the widget\n     *   if available.\n     */\n    _recalculateOverflow(width, requiredWidth) {\n      // do nothing if overflow handling is not enabled\n      if (!this.getOverflowHandling()) {\n        return;\n      }\n\n      // get all required sizes\n      requiredWidth = requiredWidth || this.getSizeHint().width;\n      var overflowWidget = this.getOverflowIndicator();\n      var overflowWidgetWidth = 0;\n      if (overflowWidget) {\n        overflowWidgetWidth = overflowWidget.getSizeHint().width;\n      }\n\n      if (width == undefined && this.getBounds() != null) {\n        width = this.getBounds().width;\n      }\n\n      // if we still don't have a width, than we are not added to a parent\n      if (width == undefined) {\n        // we should ignore it in that case\n        return;\n      }\n\n      // if we have not enough space\n      if (width < requiredWidth) {\n        do {\n          // get the next child\n          var childToHide = this._getNextToHide();\n          // if there is no child to hide, just do nothing\n          if (!childToHide) {\n            return;\n          }\n          // get margins or spacing\n          var margins =\n            childToHide.getMarginLeft() + childToHide.getMarginRight();\n          margins = Math.max(margins, this.getSpacing());\n          var childWidth = childToHide.getSizeHint().width + margins;\n          this.__hideChild(childToHide);\n\n          // new width is the requiredWidth - the removed childs width\n          requiredWidth -= childWidth;\n\n          // show the overflowWidgetWidth\n          if (overflowWidget && overflowWidget.getVisibility() != \"visible\") {\n            overflowWidget.setVisibility(\"visible\");\n            // if we need to add the overflow indicator, we need to add its width\n            requiredWidth += overflowWidgetWidth;\n            // add spacing or margins\n            var overflowWidgetMargins =\n              overflowWidget.getMarginLeft() + overflowWidget.getMarginRight();\n            requiredWidth += Math.max(overflowWidgetMargins, this.getSpacing());\n          }\n        } while (requiredWidth > width);\n\n        // if we can possibly show something\n      } else if (this.__removedItems.length > 0) {\n        do {\n          var removedChild = this.__removedItems[0];\n          // if we have something we can show\n          if (removedChild) {\n            // get the margins or spacing\n            var margins =\n              removedChild.getMarginLeft() + removedChild.getMarginRight();\n            margins = Math.max(margins, this.getSpacing());\n\n            // check if the element has been rendered before [BUG #4542]\n            if (removedChild.getContentElement().getDomElement() == null) {\n              // if not, apply the decorator element because it can change the\n              // width of the child with padding e.g.\n              removedChild.syncAppearance();\n              // also invalidate the layout cache to trigger size hint\n              // recalculation\n              removedChild.invalidateLayoutCache();\n            }\n            var removedChildWidth = removedChild.getSizeHint().width;\n\n            // check if it fits in in case its the last child to replace\n            var fits = false;\n            // if we can remove the overflow widget if its available\n\n            if (this.__removedItems.length == 1 && overflowWidgetWidth > 0) {\n              var addedMargin = margins - this.getSpacing();\n              var wouldRequiredWidth =\n                requiredWidth -\n                overflowWidgetWidth +\n                removedChildWidth +\n                addedMargin;\n              fits = width > wouldRequiredWidth;\n            }\n\n            // if it just fits in || it fits in when we remove the overflow widget\n            if (width > requiredWidth + removedChildWidth + margins || fits) {\n              this.__showChild(removedChild);\n              requiredWidth += removedChildWidth;\n              // check if we need to remove the overflow widget\n              if (overflowWidget && this.__removedItems.length == 0) {\n                overflowWidget.setVisibility(\"excluded\");\n              }\n            } else {\n              return;\n            }\n          }\n        } while (width >= requiredWidth && this.__removedItems.length > 0);\n      }\n    },\n\n    /**\n     * Helper to show a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to show.\n     */\n    __showChild(child) {\n      child.setVisibility(\"visible\");\n      this.__removedItems.shift();\n      this.fireDataEvent(\"showItem\", child);\n    },\n\n    /**\n     * Helper to exclude a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to exclude.\n     */\n    __hideChild(child) {\n      // ignore the call if no child is given\n      if (!child) {\n        return;\n      }\n      this.__removedItems.unshift(child);\n      child.setVisibility(\"excluded\");\n      this.fireDataEvent(\"hideItem\", child);\n    },\n\n    /**\n     * Responsible for returning the next item to remove. In It checks the\n     * priorities added by {@link #setRemovePriority}. If all priorized widgets\n     * already excluded, it takes the widget added at last.\n     *\n     * @return {qx.ui.core.Widget|null} The widget which should be removed next.\n     *   If null is returned, no widget is available to remove.\n     */\n    _getNextToHide() {\n      // get the elements by priority\n      for (var i = this.__removePriority.length - 1; i >= 0; i--) {\n        var item = this.__removePriority[i];\n        // maybe a priority is left out and spacers don't have the visibility\n        if (item && item.getVisibility && item.getVisibility() == \"visible\") {\n          return item;\n        }\n      }\n\n      // if there is non found by priority, check all available widgets\n      var children = this._getChildren();\n      for (var i = children.length - 1; i >= 0; i--) {\n        var child = children[i];\n        // ignore the overflow widget\n        if (child == this.getOverflowIndicator()) {\n          continue;\n        }\n        // spacer don't have the visibility\n        if (child.getVisibility && child.getVisibility() == \"visible\") {\n          return child;\n        }\n      }\n    },\n\n    /**\n     * The removal of the toolbar items is priority based. You can change these\n     * priorities with this method. The higher a priority, the earlier it will\n     * be excluded. Remember to use every priority only once! If you want\n     * override an already set priority, use the override parameter.\n     * Keep in mind to only use already added items.\n     *\n     * @param item {qx.ui.core.Widget} The item to give the priority.\n     * @param priority {Integer} The priority, higher means removed earlier.\n     * @param override {Boolean} true, if the priority should be overridden.\n     */\n    setRemovePriority(item, priority, override) {\n      // security check for overriding priorities\n      if (!override && this.__removePriority[priority] != undefined) {\n        throw new Error(\"Priority already in use!\");\n      }\n      this.__removePriority[priority] = item;\n    },\n\n    // property apply\n    _applyOverflowHandling(value, old) {\n      // invalidate the own and the parents layout cache because the size hint changes\n      this.invalidateLayoutCache();\n      var parent = this.getLayoutParent();\n      if (parent) {\n        parent.invalidateLayoutCache();\n      }\n\n      // recalculate if possible\n      var bounds = this.getBounds();\n      if (bounds && bounds.width) {\n        this._recalculateOverflow(bounds.width);\n      }\n\n      // if the handling has been enabled\n      if (value) {\n        // add the resize listener\n        this.addListener(\"resize\", this._onResize, this);\n\n        // if the handles has been disabled\n      } else {\n        this.removeListener(\"resize\", this._onResize, this);\n\n        // set the overflow indicator to excluded\n        var overflowIndicator = this.getOverflowIndicator();\n        if (overflowIndicator) {\n          overflowIndicator.setVisibility(\"excluded\");\n        }\n\n        // set all buttons back to visible\n        for (var i = 0; i < this.__removedItems.length; i++) {\n          this.__removedItems[i].setVisibility(\"visible\");\n        }\n        // reset the removed items\n        this.__removedItems = [];\n      }\n    },\n\n    // property apply\n    _applyOverflowIndicator(value, old) {\n      if (old) {\n        this._remove(old);\n      }\n\n      if (value) {\n        // check if its a child of the toolbar\n        if (this._indexOf(value) == -1) {\n          throw new Error(\"Widget must be child of the toolbar.\");\n        }\n        // hide the widget\n        value.setVisibility(\"excluded\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MENU OPEN\n    ---------------------------------------------------------------------------\n    */\n\n    __allowMenuOpenHover: false,\n\n    /**\n     * Indicate if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @param value {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _setAllowMenuOpenHover(value) {\n      this.__allowMenuOpenHover = value;\n    },\n\n    /**\n     * Return if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowMenuOpenHover() {\n      return this.__allowMenuOpenHover;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applySpacing(value, old) {\n      var layout = this._getLayout();\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\n    },\n\n    // property apply\n    _applyShow(value) {\n      var children = this._getChildren();\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].setShow) {\n          children[i].setShow(value);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD HANDLING\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _add(child, options) {\n      super._add(child, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAt(child, index, options) {\n      super._addAt(child, index, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addBefore(child, before, options) {\n      super._addBefore(child, before, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAfter(child, after, options) {\n      super._addAfter(child, after, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _remove(child) {\n      super._remove(child);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _removeAt(index) {\n      var child = this._getChildren()[index];\n      super._removeAt(index);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n      return child;\n    },\n\n    // overridden\n    _removeAll() {\n      var children = super._removeAll();\n      this._recalculateOverflow(null, 0);\n      return children;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a spacer to the toolbar. The spacer has a flex\n     * value of one and will stretch to the available space.\n     *\n     * @return {qx.ui.core.Spacer} The newly added spacer object. A reference\n     *   to the spacer is needed to remove this spacer from the layout.\n     */\n    addSpacer() {\n      var spacer = new qx.ui.core.Spacer();\n      this._add(spacer, { flex: 1 });\n      return spacer;\n    },\n\n    /**\n     * Adds a separator to the toolbar.\n     */\n    addSeparator() {\n      this.add(new qx.ui.toolbar.Separator());\n    },\n\n    /**\n     * Returns all nested buttons which contains a menu to show. This is mainly\n     * used for keyboard support.\n     *\n     * @return {Array} List of all menu buttons\n     */\n    getMenuButtons() {\n      var children = this.getChildren();\n      var buttons = [];\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        if (child instanceof qx.ui.menubar.Button) {\n          buttons.push(child);\n        } else if (child instanceof qx.ui.toolbar.Part) {\n          buttons.push.apply(buttons, child.getMenuButtons());\n        }\n      }\n\n      return buttons;\n    }\n  },\n\n  destruct() {\n    if (this.hasListener(\"resize\")) {\n      this.removeListener(\"resize\", this._onResize, this);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}