{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MChildrenHandling",
    "construct",
    "layout",
    "constructor",
    "call",
    "getContentElement",
    "setAttribute",
    "_setLayout",
    "HBox",
    "__removedItems",
    "__removePriority",
    "properties",
    "appearance",
    "refine",
    "init",
    "openMenu",
    "check",
    "event",
    "nullable",
    "show",
    "inheritable",
    "apply",
    "spacing",
    "themeable",
    "overflowIndicator",
    "overflowHandling",
    "events",
    "hideItem",
    "showItem",
    "members",
    "_computeSizeHint",
    "hint",
    "toolbar",
    "ToolBar",
    "superclass",
    "prototype",
    "getOverflowHandling",
    "minWidth",
    "overflowWidget",
    "getOverflowIndicator",
    "getSizeHint",
    "width",
    "getSpacing",
    "_onResize",
    "e",
    "_recalculateOverflow",
    "getData",
    "requiredWidth",
    "overflowWidgetWidth",
    "undefined",
    "getBounds",
    "childToHide",
    "_getNextToHide",
    "margins",
    "getMarginLeft",
    "getMarginRight",
    "Math",
    "max",
    "childWidth",
    "__hideChild",
    "getVisibility",
    "setVisibility",
    "overflowWidgetMargins",
    "length",
    "removedChild",
    "getDomElement",
    "syncAppearance",
    "invalidateLayoutCache",
    "removedChildWidth",
    "fits",
    "addedMargin",
    "wouldRequiredWidth",
    "__showChild",
    "__P_459_3",
    "child",
    "shift",
    "fireDataEvent",
    "__P_459_2",
    "unshift",
    "i",
    "item",
    "children",
    "_getChildren",
    "setRemovePriority",
    "priority",
    "override",
    "Error",
    "_applyOverflowHandling",
    "value",
    "old",
    "parent",
    "getLayoutParent",
    "bounds",
    "addListener",
    "removeListener",
    "_applyOverflowIndicator",
    "_remove",
    "_indexOf",
    "__allowMenuOpenHover",
    "_setAllowMenuOpenHover",
    "_isAllowMenuOpenHover",
    "_applySpacing",
    "_getLayout",
    "resetSpacing",
    "setSpacing",
    "_applyShow",
    "setShow",
    "_add",
    "options",
    "util",
    "PropertyUtil",
    "getUserValue",
    "getShow",
    "newWidth",
    "_addAt",
    "index",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "_removeAt",
    "_removeAll",
    "addSpacer",
    "spacer",
    "Spacer",
    "flex",
    "addSeparator",
    "add",
    "Separator",
    "getMenuButtons",
    "getChildren",
    "buttons",
    "l",
    "menubar",
    "Button",
    "push",
    "Part",
    "destruct",
    "hasListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/ToolBar.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Martin Wittemann (martinwittemann)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The Toolbar class is the main part of the toolbar widget.\r\n *\r\n * It can handle added {@link Button}s, {@link CheckBox}es, {@link RadioButton}s\r\n * and {@link Separator}s in its {@link #add} method. The {@link #addSpacer} method\r\n * adds a spacer at the current toolbar position. This means that the widgets\r\n * added after the method call of {@link #addSpacer} are aligned to the right of\r\n * the toolbar.\r\n *\r\n * For more details on the documentation of the toolbar widget, take a look at the\r\n * documentation of the {@link qx.ui.toolbar}-Package.\r\n */\r\nqx.Class.define(\"qx.ui.toolbar.ToolBar\", {\r\n  extend: qx.ui.core.Widget,\r\n  include: qx.ui.core.MChildrenHandling,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {qx.ui.layout.Abstract?} layout optional layout, defaults to qx.ui.layout.HBox\r\n   */\r\n  construct(layout) {\r\n    super();\r\n\r\n    // ARIA attrs\r\n    this.getContentElement().setAttribute(\"role\", \"toolbar\");\r\n\r\n    // add needed layout\r\n    this._setLayout(layout || new qx.ui.layout.HBox());\r\n\r\n    // initialize the overflow handling\r\n    this.__removedItems = [];\r\n    this.__removePriority = [];\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** Appearance of the widget */\r\n    appearance: {\r\n      refine: true,\r\n      init: \"toolbar\"\r\n    },\r\n\r\n    /** Holds the currently open menu (when the toolbar is used for menus) */\r\n    openMenu: {\r\n      check: \"qx.ui.menu.Menu\",\r\n      event: \"changeOpenMenu\",\r\n      nullable: true\r\n    },\r\n\r\n    /** Whether icons, labels, both or none should be shown. */\r\n    show: {\r\n      init: \"both\",\r\n      check: [\"both\", \"label\", \"icon\"],\r\n      inheritable: true,\r\n      apply: \"_applyShow\",\r\n      event: \"changeShow\"\r\n    },\r\n\r\n    /** The spacing between every child of the toolbar */\r\n    spacing: {\r\n      nullable: true,\r\n      check: \"Integer\",\r\n      themeable: true,\r\n      apply: \"_applySpacing\"\r\n    },\r\n\r\n    /**\r\n     * Widget which will be shown if at least one toolbar item is hidden.\r\n     * Keep in mind to add this widget to the toolbar before you set it as\r\n     * indicator!\r\n     */\r\n    overflowIndicator: {\r\n      check: \"qx.ui.core.Widget\",\r\n      nullable: true,\r\n      apply: \"_applyOverflowIndicator\"\r\n    },\r\n\r\n    /** Enables the overflow handling which automatically removes items.*/\r\n    overflowHandling: {\r\n      init: false,\r\n      check: \"Boolean\",\r\n      apply: \"_applyOverflowHandling\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Fired if an item will be hidden by the {@link #overflowHandling}.*/\r\n    hideItem: \"qx.event.type.Data\",\r\n\r\n    /** Fired if an item will be shown by the {@link #overflowHandling}.*/\r\n    showItem: \"qx.event.type.Data\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      OVERFLOW HANDLING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    __removedItems: null,\r\n    __removePriority: null,\r\n\r\n    // overridden\r\n    _computeSizeHint() {\r\n      // get the original hint\r\n      var hint = super._computeSizeHint();\r\n      if (true && this.getOverflowHandling()) {\r\n        var minWidth = 0;\r\n        // if an overflow widget is given, use its width + spacing as min width\r\n        var overflowWidget = this.getOverflowIndicator();\r\n        if (overflowWidget) {\r\n          minWidth = overflowWidget.getSizeHint().width + this.getSpacing();\r\n        }\r\n        // reset the minWidth because we reduce the count of elements\r\n        hint.minWidth = minWidth;\r\n      }\r\n      return hint;\r\n    },\r\n\r\n    /**\r\n     * Resize event handler.\r\n     *\r\n     * @param e {qx.event.type.Data} The resize event.\r\n     */\r\n    _onResize(e) {\r\n      this._recalculateOverflow(e.getData().width);\r\n    },\r\n\r\n    /**\r\n     * Responsible for calculation the overflow based on the available width.\r\n     *\r\n     * @param width {Integer?null} The available width.\r\n     * @param requiredWidth {Integer?null} The required width for the widget\r\n     *   if available.\r\n     */\r\n    _recalculateOverflow(width, requiredWidth) {\r\n      // do nothing if overflow handling is not enabled\r\n      if (!this.getOverflowHandling()) {\r\n        return;\r\n      }\r\n\r\n      // get all required sizes\r\n      requiredWidth = requiredWidth || this.getSizeHint().width;\r\n      var overflowWidget = this.getOverflowIndicator();\r\n      var overflowWidgetWidth = 0;\r\n      if (overflowWidget) {\r\n        overflowWidgetWidth = overflowWidget.getSizeHint().width;\r\n      }\r\n\r\n      if (width == undefined && this.getBounds() != null) {\r\n        width = this.getBounds().width;\r\n      }\r\n\r\n      // if we still don't have a width, than we are not added to a parent\r\n      if (width == undefined) {\r\n        // we should ignore it in that case\r\n        return;\r\n      }\r\n\r\n      // if we have not enough space\r\n      if (width < requiredWidth) {\r\n        do {\r\n          // get the next child\r\n          var childToHide = this._getNextToHide();\r\n          // if there is no child to hide, just do nothing\r\n          if (!childToHide) {\r\n            return;\r\n          }\r\n          // get margins or spacing\r\n          var margins =\r\n            childToHide.getMarginLeft() + childToHide.getMarginRight();\r\n          margins = Math.max(margins, this.getSpacing());\r\n          var childWidth = childToHide.getSizeHint().width + margins;\r\n          this.__hideChild(childToHide);\r\n\r\n          // new width is the requiredWidth - the removed childs width\r\n          requiredWidth -= childWidth;\r\n\r\n          // show the overflowWidgetWidth\r\n          if (overflowWidget && overflowWidget.getVisibility() != \"visible\") {\r\n            overflowWidget.setVisibility(\"visible\");\r\n            // if we need to add the overflow indicator, we need to add its width\r\n            requiredWidth += overflowWidgetWidth;\r\n            // add spacing or margins\r\n            var overflowWidgetMargins =\r\n              overflowWidget.getMarginLeft() + overflowWidget.getMarginRight();\r\n            requiredWidth += Math.max(overflowWidgetMargins, this.getSpacing());\r\n          }\r\n        } while (requiredWidth > width);\r\n\r\n        // if we can possibly show something\r\n      } else if (this.__removedItems.length > 0) {\r\n        do {\r\n          var removedChild = this.__removedItems[0];\r\n          // if we have something we can show\r\n          if (removedChild) {\r\n            // get the margins or spacing\r\n            var margins =\r\n              removedChild.getMarginLeft() + removedChild.getMarginRight();\r\n            margins = Math.max(margins, this.getSpacing());\r\n\r\n            // check if the element has been rendered before [BUG #4542]\r\n            if (removedChild.getContentElement().getDomElement() == null) {\r\n              // if not, apply the decorator element because it can change the\r\n              // width of the child with padding e.g.\r\n              removedChild.syncAppearance();\r\n              // also invalidate the layout cache to trigger size hint\r\n              // recalculation\r\n              removedChild.invalidateLayoutCache();\r\n            }\r\n            var removedChildWidth = removedChild.getSizeHint().width;\r\n\r\n            // check if it fits in in case its the last child to replace\r\n            var fits = false;\r\n            // if we can remove the overflow widget if its available\r\n\r\n            if (this.__removedItems.length == 1 && overflowWidgetWidth > 0) {\r\n              var addedMargin = margins - this.getSpacing();\r\n              var wouldRequiredWidth =\r\n                requiredWidth -\r\n                overflowWidgetWidth +\r\n                removedChildWidth +\r\n                addedMargin;\r\n              fits = width > wouldRequiredWidth;\r\n            }\r\n\r\n            // if it just fits in || it fits in when we remove the overflow widget\r\n            if (width > requiredWidth + removedChildWidth + margins || fits) {\r\n              this.__showChild(removedChild);\r\n              requiredWidth += removedChildWidth;\r\n              // check if we need to remove the overflow widget\r\n              if (overflowWidget && this.__removedItems.length == 0) {\r\n                overflowWidget.setVisibility(\"excluded\");\r\n              }\r\n            } else {\r\n              return;\r\n            }\r\n          }\r\n        } while (width >= requiredWidth && this.__removedItems.length > 0);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper to show a toolbar item.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The widget to show.\r\n     */\r\n    __showChild(child) {\r\n      child.setVisibility(\"visible\");\r\n      this.__removedItems.shift();\r\n      this.fireDataEvent(\"showItem\", child);\r\n    },\r\n\r\n    /**\r\n     * Helper to exclude a toolbar item.\r\n     *\r\n     * @param child {qx.ui.core.Widget} The widget to exclude.\r\n     */\r\n    __hideChild(child) {\r\n      // ignore the call if no child is given\r\n      if (!child) {\r\n        return;\r\n      }\r\n      this.__removedItems.unshift(child);\r\n      child.setVisibility(\"excluded\");\r\n      this.fireDataEvent(\"hideItem\", child);\r\n    },\r\n\r\n    /**\r\n     * Responsible for returning the next item to remove. In It checks the\r\n     * priorities added by {@link #setRemovePriority}. If all priorized widgets\r\n     * already excluded, it takes the widget added at last.\r\n     *\r\n     * @return {qx.ui.core.Widget|null} The widget which should be removed next.\r\n     *   If null is returned, no widget is available to remove.\r\n     */\r\n    _getNextToHide() {\r\n      // get the elements by priority\r\n      for (var i = this.__removePriority.length - 1; i >= 0; i--) {\r\n        var item = this.__removePriority[i];\r\n        // maybe a priority is left out and spacers don't have the visibility\r\n        if (item && item.getVisibility && item.getVisibility() == \"visible\") {\r\n          return item;\r\n        }\r\n      }\r\n\r\n      // if there is non found by priority, check all available widgets\r\n      var children = this._getChildren();\r\n      for (var i = children.length - 1; i >= 0; i--) {\r\n        var child = children[i];\r\n        // ignore the overflow widget\r\n        if (child == this.getOverflowIndicator()) {\r\n          continue;\r\n        }\r\n        // spacer don't have the visibility\r\n        if (child.getVisibility && child.getVisibility() == \"visible\") {\r\n          return child;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * The removal of the toolbar items is priority based. You can change these\r\n     * priorities with this method. The higher a priority, the earlier it will\r\n     * be excluded. Remember to use every priority only once! If you want\r\n     * override an already set priority, use the override parameter.\r\n     * Keep in mind to only use already added items.\r\n     *\r\n     * @param item {qx.ui.core.Widget} The item to give the priority.\r\n     * @param priority {Integer} The priority, higher means removed earlier.\r\n     * @param override {Boolean} true, if the priority should be overridden.\r\n     */\r\n    setRemovePriority(item, priority, override) {\r\n      // security check for overriding priorities\r\n      if (!override && this.__removePriority[priority] != undefined) {\r\n        throw new Error(\"Priority already in use!\");\r\n      }\r\n      this.__removePriority[priority] = item;\r\n    },\r\n\r\n    // property apply\r\n    _applyOverflowHandling(value, old) {\r\n      // invalidate the own and the parents layout cache because the size hint changes\r\n      this.invalidateLayoutCache();\r\n      var parent = this.getLayoutParent();\r\n      if (parent) {\r\n        parent.invalidateLayoutCache();\r\n      }\r\n\r\n      // recalculate if possible\r\n      var bounds = this.getBounds();\r\n      if (bounds && bounds.width) {\r\n        this._recalculateOverflow(bounds.width);\r\n      }\r\n\r\n      // if the handling has been enabled\r\n      if (value) {\r\n        // add the resize listener\r\n        this.addListener(\"resize\", this._onResize, this);\r\n\r\n        // if the handles has been disabled\r\n      } else {\r\n        this.removeListener(\"resize\", this._onResize, this);\r\n\r\n        // set the overflow indicator to excluded\r\n        var overflowIndicator = this.getOverflowIndicator();\r\n        if (overflowIndicator) {\r\n          overflowIndicator.setVisibility(\"excluded\");\r\n        }\r\n\r\n        // set all buttons back to visible\r\n        for (var i = 0; i < this.__removedItems.length; i++) {\r\n          this.__removedItems[i].setVisibility(\"visible\");\r\n        }\r\n        // reset the removed items\r\n        this.__removedItems = [];\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyOverflowIndicator(value, old) {\r\n      if (old) {\r\n        this._remove(old);\r\n      }\r\n\r\n      if (value) {\r\n        // check if its a child of the toolbar\r\n        if (this._indexOf(value) == -1) {\r\n          throw new Error(\"Widget must be child of the toolbar.\");\r\n        }\r\n        // hide the widget\r\n        value.setVisibility(\"excluded\");\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      MENU OPEN\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    __allowMenuOpenHover: false,\r\n\r\n    /**\r\n     * Indicate if a menu could be opened on hover or not.\r\n     *\r\n     * @internal\r\n     * @param value {Boolean} <code>true</code> if a menu could be opened,\r\n     *    <code>false</code> otherwise.\r\n     */\r\n    _setAllowMenuOpenHover(value) {\r\n      this.__allowMenuOpenHover = value;\r\n    },\r\n\r\n    /**\r\n     * Return if a menu could be opened on hover or not.\r\n     *\r\n     * @internal\r\n     * @return {Boolean} <code>true</code> if a menu could be opened,\r\n     *    <code>false</code> otherwise.\r\n     */\r\n    _isAllowMenuOpenHover() {\r\n      return this.__allowMenuOpenHover;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applySpacing(value, old) {\r\n      var layout = this._getLayout();\r\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyShow(value) {\r\n      var children = this._getChildren();\r\n      for (var i = 0; i < children.length; i++) {\r\n        if (children[i].setShow) {\r\n          children[i].setShow(value);\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CHILD HANDLING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    // overridden\r\n    _add(child, options) {\r\n      super._add(child, options);\r\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\r\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\r\n        child.setShow(this.getShow());\r\n      }\r\n\r\n      var newWidth =\r\n        this.getSizeHint().width +\r\n        child.getSizeHint().width +\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n    },\r\n\r\n    // overridden\r\n    _addAt(child, index, options) {\r\n      super._addAt(child, index, options);\r\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\r\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\r\n        child.setShow(this.getShow());\r\n      }\r\n\r\n      var newWidth =\r\n        this.getSizeHint().width +\r\n        child.getSizeHint().width +\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n    },\r\n\r\n    // overridden\r\n    _addBefore(child, before, options) {\r\n      super._addBefore(child, before, options);\r\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\r\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\r\n        child.setShow(this.getShow());\r\n      }\r\n\r\n      var newWidth =\r\n        this.getSizeHint().width +\r\n        child.getSizeHint().width +\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n    },\r\n\r\n    // overridden\r\n    _addAfter(child, after, options) {\r\n      super._addAfter(child, after, options);\r\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\r\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\r\n        child.setShow(this.getShow());\r\n      }\r\n\r\n      var newWidth =\r\n        this.getSizeHint().width +\r\n        child.getSizeHint().width +\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n    },\r\n\r\n    // overridden\r\n    _remove(child) {\r\n      super._remove(child);\r\n      var newWidth =\r\n        this.getSizeHint().width -\r\n        child.getSizeHint().width -\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n    },\r\n\r\n    // overridden\r\n    _removeAt(index) {\r\n      var child = this._getChildren()[index];\r\n      super._removeAt(index);\r\n      var newWidth =\r\n        this.getSizeHint().width -\r\n        child.getSizeHint().width -\r\n        2 * this.getSpacing();\r\n      this._recalculateOverflow(null, newWidth);\r\n      return child;\r\n    },\r\n\r\n    // overridden\r\n    _removeAll() {\r\n      var children = super._removeAll();\r\n      this._recalculateOverflow(null, 0);\r\n      return children;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      UTILITIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Add a spacer to the toolbar. The spacer has a flex\r\n     * value of one and will stretch to the available space.\r\n     *\r\n     * @return {qx.ui.core.Spacer} The newly added spacer object. A reference\r\n     *   to the spacer is needed to remove this spacer from the layout.\r\n     */\r\n    addSpacer() {\r\n      var spacer = new qx.ui.core.Spacer();\r\n      this._add(spacer, { flex: 1 });\r\n      return spacer;\r\n    },\r\n\r\n    /**\r\n     * Adds a separator to the toolbar.\r\n     */\r\n    addSeparator() {\r\n      this.add(new qx.ui.toolbar.Separator());\r\n    },\r\n\r\n    /**\r\n     * Returns all nested buttons which contains a menu to show. This is mainly\r\n     * used for keyboard support.\r\n     *\r\n     * @return {Array} List of all menu buttons\r\n     */\r\n    getMenuButtons() {\r\n      var children = this.getChildren();\r\n      var buttons = [];\r\n      var child;\r\n\r\n      for (var i = 0, l = children.length; i < l; i++) {\r\n        child = children[i];\r\n\r\n        if (child instanceof qx.ui.menubar.Button) {\r\n          buttons.push(child);\r\n        } else if (child instanceof qx.ui.toolbar.Part) {\r\n          buttons.push.apply(buttons, child.getMenuButtons());\r\n        }\r\n      }\r\n\r\n      return buttons;\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    if (this.hasListener(\"resize\")) {\r\n      this.removeListener(\"resize\", this._onResize, this);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}