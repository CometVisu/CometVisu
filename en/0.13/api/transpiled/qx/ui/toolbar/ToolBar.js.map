{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MChildrenHandling",
    "construct",
    "layout",
    "getContentElement",
    "setAttribute",
    "_setLayout",
    "HBox",
    "__removedItems",
    "__removePriority",
    "properties",
    "appearance",
    "refine",
    "init",
    "openMenu",
    "check",
    "event",
    "nullable",
    "show",
    "inheritable",
    "apply",
    "spacing",
    "themeable",
    "overflowIndicator",
    "overflowHandling",
    "events",
    "hideItem",
    "showItem",
    "members",
    "_computeSizeHint",
    "hint",
    "getOverflowHandling",
    "minWidth",
    "overflowWidget",
    "getOverflowIndicator",
    "getSizeHint",
    "width",
    "getSpacing",
    "_onResize",
    "e",
    "_recalculateOverflow",
    "getData",
    "requiredWidth",
    "overflowWidgetWidth",
    "undefined",
    "getBounds",
    "childToHide",
    "_getNextToHide",
    "margins",
    "getMarginLeft",
    "getMarginRight",
    "Math",
    "max",
    "childWidth",
    "__hideChild",
    "getVisibility",
    "setVisibility",
    "overflowWidgetMargins",
    "length",
    "removedChild",
    "getDomElement",
    "syncAppearance",
    "invalidateLayoutCache",
    "removedChildWidth",
    "fits",
    "addedMargin",
    "wouldRequiredWidth",
    "__showChild",
    "child",
    "shift",
    "fireDataEvent",
    "unshift",
    "i",
    "item",
    "children",
    "_getChildren",
    "setRemovePriority",
    "priority",
    "override",
    "Error",
    "_applyOverflowHandling",
    "value",
    "old",
    "parent",
    "getLayoutParent",
    "bounds",
    "addListener",
    "removeListener",
    "_applyOverflowIndicator",
    "_remove",
    "_indexOf",
    "__allowMenuOpenHover",
    "_setAllowMenuOpenHover",
    "_isAllowMenuOpenHover",
    "_applySpacing",
    "_getLayout",
    "resetSpacing",
    "setSpacing",
    "_applyShow",
    "setShow",
    "_add",
    "options",
    "util",
    "PropertyUtil",
    "getUserValue",
    "getShow",
    "newWidth",
    "_addAt",
    "index",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "_removeAt",
    "_removeAll",
    "addSpacer",
    "spacer",
    "Spacer",
    "flex",
    "addSeparator",
    "add",
    "toolbar",
    "Separator",
    "getMenuButtons",
    "getChildren",
    "buttons",
    "l",
    "menubar",
    "Button",
    "push",
    "Part",
    "destruct",
    "hasListener",
    "ToolBar"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/ToolBar.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * The Toolbar class is the main part of the toolbar widget.\n *\n * It can handle added {@link Button}s, {@link CheckBox}es, {@link RadioButton}s\n * and {@link Separator}s in its {@link #add} method. The {@link #addSpacer} method\n * adds a spacer at the current toolbar position. This means that the widgets\n * added after the method call of {@link #addSpacer} are aligned to the right of\n * the toolbar.\n *\n * For more details on the documentation of the toolbar widget, take a look at the\n * documentation of the {@link qx.ui.toolbar}-Package.\n */\nqx.Class.define(\"qx.ui.toolbar.ToolBar\", {\n  extend: qx.ui.core.Widget,\n  include: qx.ui.core.MChildrenHandling,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Constructor\n   * @param {qx.ui.layout.Abstract?} layout optional layout, defaults to qx.ui.layout.HBox\n   */\n  construct(layout) {\n    super();\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"toolbar\");\n\n    // add needed layout\n    this._setLayout(layout || new qx.ui.layout.HBox());\n\n    // initialize the overflow handling\n    this.__removedItems = [];\n    this.__removePriority = [];\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Appearance of the widget */\n    appearance: {\n      refine: true,\n      init: \"toolbar\"\n    },\n\n    /** Holds the currently open menu (when the toolbar is used for menus) */\n    openMenu: {\n      check: \"qx.ui.menu.Menu\",\n      event: \"changeOpenMenu\",\n      nullable: true\n    },\n\n    /** Whether icons, labels, both or none should be shown. */\n    show: {\n      init: \"both\",\n      check: [\"both\", \"label\", \"icon\"],\n      inheritable: true,\n      apply: \"_applyShow\",\n      event: \"changeShow\"\n    },\n\n    /** The spacing between every child of the toolbar */\n    spacing: {\n      nullable: true,\n      check: \"Integer\",\n      themeable: true,\n      apply: \"_applySpacing\"\n    },\n\n    /**\n     * Widget which will be shown if at least one toolbar item is hidden.\n     * Keep in mind to add this widget to the toolbar before you set it as\n     * indicator!\n     */\n    overflowIndicator: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      apply: \"_applyOverflowIndicator\"\n    },\n\n    /** Enables the overflow handling which automatically removes items.*/\n    overflowHandling: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyOverflowHandling\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired if an item will be hidden by the {@link #overflowHandling}.*/\n    hideItem: \"qx.event.type.Data\",\n\n    /** Fired if an item will be shown by the {@link #overflowHandling}.*/\n    showItem: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      OVERFLOW HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    __removedItems: null,\n    __removePriority: null,\n\n    // overridden\n    _computeSizeHint() {\n      // get the original hint\n      var hint = super._computeSizeHint();\n      if (true && this.getOverflowHandling()) {\n        var minWidth = 0;\n        // if an overflow widget is given, use its width + spacing as min width\n        var overflowWidget = this.getOverflowIndicator();\n        if (overflowWidget) {\n          minWidth = overflowWidget.getSizeHint().width + this.getSpacing();\n        }\n        // reset the minWidth because we reduce the count of elements\n        hint.minWidth = minWidth;\n      }\n      return hint;\n    },\n\n    /**\n     * Resize event handler.\n     *\n     * @param e {qx.event.type.Data} The resize event.\n     */\n    _onResize(e) {\n      this._recalculateOverflow(e.getData().width);\n    },\n\n    /**\n     * Responsible for calculation the overflow based on the available width.\n     *\n     * @param width {Integer?null} The available width.\n     * @param requiredWidth {Integer?null} The required width for the widget\n     *   if available.\n     */\n    _recalculateOverflow(width, requiredWidth) {\n      // do nothing if overflow handling is not enabled\n      if (!this.getOverflowHandling()) {\n        return;\n      }\n\n      // get all required sizes\n      requiredWidth = requiredWidth || this.getSizeHint().width;\n      var overflowWidget = this.getOverflowIndicator();\n      var overflowWidgetWidth = 0;\n      if (overflowWidget) {\n        overflowWidgetWidth = overflowWidget.getSizeHint().width;\n      }\n\n      if (width == undefined && this.getBounds() != null) {\n        width = this.getBounds().width;\n      }\n\n      // if we still don't have a width, than we are not added to a parent\n      if (width == undefined) {\n        // we should ignore it in that case\n        return;\n      }\n\n      // if we have not enough space\n      if (width < requiredWidth) {\n        do {\n          // get the next child\n          var childToHide = this._getNextToHide();\n          // if there is no child to hide, just do nothing\n          if (!childToHide) {\n            return;\n          }\n          // get margins or spacing\n          var margins =\n            childToHide.getMarginLeft() + childToHide.getMarginRight();\n          margins = Math.max(margins, this.getSpacing());\n          var childWidth = childToHide.getSizeHint().width + margins;\n          this.__hideChild(childToHide);\n\n          // new width is the requiredWidth - the removed childs width\n          requiredWidth -= childWidth;\n\n          // show the overflowWidgetWidth\n          if (overflowWidget && overflowWidget.getVisibility() != \"visible\") {\n            overflowWidget.setVisibility(\"visible\");\n            // if we need to add the overflow indicator, we need to add its width\n            requiredWidth += overflowWidgetWidth;\n            // add spacing or margins\n            var overflowWidgetMargins =\n              overflowWidget.getMarginLeft() + overflowWidget.getMarginRight();\n            requiredWidth += Math.max(overflowWidgetMargins, this.getSpacing());\n          }\n        } while (requiredWidth > width);\n\n        // if we can possibly show something\n      } else if (this.__removedItems.length > 0) {\n        do {\n          var removedChild = this.__removedItems[0];\n          // if we have something we can show\n          if (removedChild) {\n            // get the margins or spacing\n            var margins =\n              removedChild.getMarginLeft() + removedChild.getMarginRight();\n            margins = Math.max(margins, this.getSpacing());\n\n            // check if the element has been rendered before [BUG #4542]\n            if (removedChild.getContentElement().getDomElement() == null) {\n              // if not, apply the decorator element because it can change the\n              // width of the child with padding e.g.\n              removedChild.syncAppearance();\n              // also invalidate the layout cache to trigger size hint\n              // recalculation\n              removedChild.invalidateLayoutCache();\n            }\n            var removedChildWidth = removedChild.getSizeHint().width;\n\n            // check if it fits in in case its the last child to replace\n            var fits = false;\n            // if we can remove the overflow widget if its available\n\n            if (this.__removedItems.length == 1 && overflowWidgetWidth > 0) {\n              var addedMargin = margins - this.getSpacing();\n              var wouldRequiredWidth =\n                requiredWidth -\n                overflowWidgetWidth +\n                removedChildWidth +\n                addedMargin;\n              fits = width > wouldRequiredWidth;\n            }\n\n            // if it just fits in || it fits in when we remove the overflow widget\n            if (width > requiredWidth + removedChildWidth + margins || fits) {\n              this.__showChild(removedChild);\n              requiredWidth += removedChildWidth;\n              // check if we need to remove the overflow widget\n              if (overflowWidget && this.__removedItems.length == 0) {\n                overflowWidget.setVisibility(\"excluded\");\n              }\n            } else {\n              return;\n            }\n          }\n        } while (width >= requiredWidth && this.__removedItems.length > 0);\n      }\n    },\n\n    /**\n     * Helper to show a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to show.\n     */\n    __showChild(child) {\n      child.setVisibility(\"visible\");\n      this.__removedItems.shift();\n      this.fireDataEvent(\"showItem\", child);\n    },\n\n    /**\n     * Helper to exclude a toolbar item.\n     *\n     * @param child {qx.ui.core.Widget} The widget to exclude.\n     */\n    __hideChild(child) {\n      // ignore the call if no child is given\n      if (!child) {\n        return;\n      }\n      this.__removedItems.unshift(child);\n      child.setVisibility(\"excluded\");\n      this.fireDataEvent(\"hideItem\", child);\n    },\n\n    /**\n     * Responsible for returning the next item to remove. In It checks the\n     * priorities added by {@link #setRemovePriority}. If all priorized widgets\n     * already excluded, it takes the widget added at last.\n     *\n     * @return {qx.ui.core.Widget|null} The widget which should be removed next.\n     *   If null is returned, no widget is available to remove.\n     */\n    _getNextToHide() {\n      // get the elements by priority\n      for (var i = this.__removePriority.length - 1; i >= 0; i--) {\n        var item = this.__removePriority[i];\n        // maybe a priority is left out and spacers don't have the visibility\n        if (item && item.getVisibility && item.getVisibility() == \"visible\") {\n          return item;\n        }\n      }\n\n      // if there is non found by priority, check all available widgets\n      var children = this._getChildren();\n      for (var i = children.length - 1; i >= 0; i--) {\n        var child = children[i];\n        // ignore the overflow widget\n        if (child == this.getOverflowIndicator()) {\n          continue;\n        }\n        // spacer don't have the visibility\n        if (child.getVisibility && child.getVisibility() == \"visible\") {\n          return child;\n        }\n      }\n    },\n\n    /**\n     * The removal of the toolbar items is priority based. You can change these\n     * priorities with this method. The higher a priority, the earlier it will\n     * be excluded. Remember to use every priority only once! If you want\n     * override an already set priority, use the override parameter.\n     * Keep in mind to only use already added items.\n     *\n     * @param item {qx.ui.core.Widget} The item to give the priority.\n     * @param priority {Integer} The priority, higher means removed earlier.\n     * @param override {Boolean} true, if the priority should be overridden.\n     */\n    setRemovePriority(item, priority, override) {\n      // security check for overriding priorities\n      if (!override && this.__removePriority[priority] != undefined) {\n        throw new Error(\"Priority already in use!\");\n      }\n      this.__removePriority[priority] = item;\n    },\n\n    // property apply\n    _applyOverflowHandling(value, old) {\n      // invalidate the own and the parents layout cache because the size hint changes\n      this.invalidateLayoutCache();\n      var parent = this.getLayoutParent();\n      if (parent) {\n        parent.invalidateLayoutCache();\n      }\n\n      // recalculate if possible\n      var bounds = this.getBounds();\n      if (bounds && bounds.width) {\n        this._recalculateOverflow(bounds.width);\n      }\n\n      // if the handling has been enabled\n      if (value) {\n        // add the resize listener\n        this.addListener(\"resize\", this._onResize, this);\n\n        // if the handles has been disabled\n      } else {\n        this.removeListener(\"resize\", this._onResize, this);\n\n        // set the overflow indicator to excluded\n        var overflowIndicator = this.getOverflowIndicator();\n        if (overflowIndicator) {\n          overflowIndicator.setVisibility(\"excluded\");\n        }\n\n        // set all buttons back to visible\n        for (var i = 0; i < this.__removedItems.length; i++) {\n          this.__removedItems[i].setVisibility(\"visible\");\n        }\n        // reset the removed items\n        this.__removedItems = [];\n      }\n    },\n\n    // property apply\n    _applyOverflowIndicator(value, old) {\n      if (old) {\n        this._remove(old);\n      }\n\n      if (value) {\n        // check if its a child of the toolbar\n        if (this._indexOf(value) == -1) {\n          throw new Error(\"Widget must be child of the toolbar.\");\n        }\n        // hide the widget\n        value.setVisibility(\"excluded\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MENU OPEN\n    ---------------------------------------------------------------------------\n    */\n\n    __allowMenuOpenHover: false,\n\n    /**\n     * Indicate if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @param value {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _setAllowMenuOpenHover(value) {\n      this.__allowMenuOpenHover = value;\n    },\n\n    /**\n     * Return if a menu could be opened on hover or not.\n     *\n     * @internal\n     * @return {Boolean} <code>true</code> if a menu could be opened,\n     *    <code>false</code> otherwise.\n     */\n    _isAllowMenuOpenHover() {\n      return this.__allowMenuOpenHover;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applySpacing(value, old) {\n      var layout = this._getLayout();\n      value == null ? layout.resetSpacing() : layout.setSpacing(value);\n    },\n\n    // property apply\n    _applyShow(value) {\n      var children = this._getChildren();\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].setShow) {\n          children[i].setShow(value);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD HANDLING\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _add(child, options) {\n      super._add(child, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAt(child, index, options) {\n      super._addAt(child, index, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addBefore(child, before, options) {\n      super._addBefore(child, before, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _addAfter(child, after, options) {\n      super._addAfter(child, after, options);\n      // sync the show property (bug #6743) - but only if show wasn't explicitly set for the child (bug #6823)\n      if (child.setShow && !qx.util.PropertyUtil.getUserValue(child, \"show\")) {\n        child.setShow(this.getShow());\n      }\n\n      var newWidth =\n        this.getSizeHint().width +\n        child.getSizeHint().width +\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _remove(child) {\n      super._remove(child);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n    },\n\n    // overridden\n    _removeAt(index) {\n      var child = this._getChildren()[index];\n      super._removeAt(index);\n      var newWidth =\n        this.getSizeHint().width -\n        child.getSizeHint().width -\n        2 * this.getSpacing();\n      this._recalculateOverflow(null, newWidth);\n      return child;\n    },\n\n    // overridden\n    _removeAll() {\n      var children = super._removeAll();\n      this._recalculateOverflow(null, 0);\n      return children;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Add a spacer to the toolbar. The spacer has a flex\n     * value of one and will stretch to the available space.\n     *\n     * @return {qx.ui.core.Spacer} The newly added spacer object. A reference\n     *   to the spacer is needed to remove this spacer from the layout.\n     */\n    addSpacer() {\n      var spacer = new qx.ui.core.Spacer();\n      this._add(spacer, { flex: 1 });\n      return spacer;\n    },\n\n    /**\n     * Adds a separator to the toolbar.\n     */\n    addSeparator() {\n      this.add(new qx.ui.toolbar.Separator());\n    },\n\n    /**\n     * Returns all nested buttons which contains a menu to show. This is mainly\n     * used for keyboard support.\n     *\n     * @return {Array} List of all menu buttons\n     */\n    getMenuButtons() {\n      var children = this.getChildren();\n      var buttons = [];\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        if (child instanceof qx.ui.menubar.Button) {\n          buttons.push(child);\n        } else if (child instanceof qx.ui.toolbar.Part) {\n          buttons.push.apply(buttons, child.getMenuButtons());\n        }\n      }\n\n      return buttons;\n    }\n  },\n\n  destruct() {\n    if (this.hasListener(\"resize\")) {\n      this.removeListener(\"resize\", this._onResize, this);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}