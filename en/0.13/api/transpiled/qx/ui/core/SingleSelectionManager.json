{
  "className": "qx.ui.core.SingleSelectionManager",
  "packageName": "qx.ui.core",
  "name": "SingleSelectionManager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 700
      },
      "end": {
        "line": 278,
        "column": 3,
        "index": 7656
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Responsible for the single selection management.\n The class manage a list of {@link qx.ui.core.Widget} which are returned from\n {@link qx.ui.core.ISingleSelectionProvider#getItems}.</p>"
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 42,
        "column": 2,
        "index": 1135
      },
      "end": {
        "line": 54,
        "column": 3,
        "index": 1443
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Construct the single selection manager.</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "selectionProvider {qx.ui.core.ISingleSelectionProvider} The provider\n for selection.",
          "paramName": "selectionProvider",
          "description": " The provider\n for selection.",
          "type": "qx.ui.core.ISingleSelectionProvider"
        }
      ]
    }
  },
  "events": {
    "changeSelected": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1695
        },
        "end": {
          "line": 64,
          "column": 40,
          "index": 1731
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after the selection was modified</p>"
          }
        ]
      },
      "name": "changeSelected",
      "type": "qx.event.type.Data"
    }
  },
  "properties": {
    "allowEmptySelection": {
      "location": {
        "start": {
          "line": 79,
          "column": 4,
          "index": 2179
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2291
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If the value is <code>true</code> the manager allows an empty selection,\n otherwise the first selectable element returned from the\n <code>qx.ui.core.ISingleSelectionProvider</code> will be selected.</p>"
          }
        ]
      },
      "name": "allowEmptySelection",
      "propertyType": "new",
      "apply": "__P_319_1",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__selected": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2557
        },
        "end": {
          "line": 94,
          "column": 20,
          "index": 2573
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.core.Widget} The selected widget."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__selectionProvider": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2673
        },
        "end": {
          "line": 97,
          "column": 29,
          "index": 2698
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.core.ISingleSelectionProvider} The provider for selection management"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getSelected": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3094
        },
        "end": {
          "line": 113,
          "column": 5,
          "index": 3145
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the current selected element.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget | null} The current selected widget or\n    <code>null</code> if the selection is empty.",
            "type": "qx.ui.core.Widget | null",
            "description": " The current selected widget or\n    <code>null</code> if the selection is empty."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setSelected": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3330
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 3552
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selects the passed element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Element to select.",
            "paramName": "item",
            "description": " Element to select.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the element is not a child element.",
            "type": "Error",
            "description": " if the element is not a child element."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetSelected": {
      "location": {
        "start": {
          "line": 135,
          "column": 4,
          "index": 3714
        },
        "end": {
          "line": 137,
          "column": 5,
          "index": 3769
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset the current selection. If {@link #allowEmptySelection} is set to\n <code>true</code> the first element will be selected.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelected": {
      "location": {
        "start": {
          "line": 147,
          "column": 4,
          "index": 4111
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 4393
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return <code>true</code> if the passed element is selected.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Element to check if selected.",
            "paramName": "item",
            "description": " Element to check if selected.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if passed element is selected,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> if passed element is selected,\n    <code>false</code> otherwise."
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if the element is not a child element.",
            "type": "Error",
            "description": " if the element is not a child element."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectionEmpty": {
      "location": {
        "start": {
          "line": 165,
          "column": 4,
          "index": 4585
        },
        "end": {
          "line": 167,
          "column": 5,
          "index": 4649
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns <code>true</code> if selection is empty.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if selection is empty,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> if selection is empty,\n    <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectables": {
      "location": {
        "start": {
          "line": 176,
          "column": 4,
          "index": 4910
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 5451
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all elements which are selectable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "all {Boolean} true for all selectables, false for the\n   selectables the user can interactively select",
            "paramName": "all",
            "description": " true for all selectables, false for the\n   selectables the user can interactively select",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget[]} The contained items.",
            "type": "qx.ui.core.Widget[]",
            "description": " The contained items."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__applyAllowEmptySelection": {
      "location": {
        "start": {
          "line": 205,
          "column": 4,
          "index": 5674
        },
        "end": {
          "line": 209,
          "column": 5,
          "index": 5793
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "private"
    },
    "__setSelected": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 6241
        },
        "end": {
          "line": 243,
          "column": 5,
          "index": 6745
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set selected element.\n If passes value is <code>null</code>, the selection will be reseted.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget | null} element to select, or\n    <code>null</code> to reset selection.",
            "paramName": "item",
            "description": " element to select, or\n    <code>null</code> to reset selection.",
            "type": [
              "qx.ui.core.Widget",
              "null"
            ]
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__isChildElement": {
      "location": {
        "start": {
          "line": 252,
          "column": 4,
          "index": 7013
        },
        "end": {
          "line": 261,
          "column": 5,
          "index": 7240
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if passed element is a child element.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Element to check if child element.",
            "paramName": "item",
            "description": " Element to check if child element.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if element is child element,\n    <code>false</code> otherwise.",
            "type": "Boolean",
            "description": " <code>true</code> if element is child element,\n    <code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getAllowEmptySelection": {
      "type": "function",
      "name": "getAllowEmptySelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowEmptySelection</code>.\n\nFor further details take a look at the property definition: {@link #allowEmptySelection}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowEmptySelection"
          }
        ]
      }
    },
    "isAllowEmptySelection": {
      "type": "function",
      "name": "isAllowEmptySelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>allowEmptySelection</code>.\n\nFor further details take a look at the property definition: {@link #allowEmptySelection}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for allowEmptySelection"
          }
        ]
      }
    },
    "setAllowEmptySelection": {
      "type": "function",
      "name": "setAllowEmptySelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>allowEmptySelection</code>.\n\nFor further details take a look at the property definition: {@link #allowEmptySelection}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for allowEmptySelection"
          }
        ]
      }
    },
    "resetAllowEmptySelection": {
      "type": "function",
      "name": "resetAllowEmptySelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>allowEmptySelection</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #allowEmptySelection}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 269,
        "column": 2,
        "index": 7439
      },
      "end": {
        "line": 277,
        "column": 3,
        "index": 7652
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}