{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "events",
    "execute",
    "properties",
    "command",
    "check",
    "apply",
    "event",
    "nullable",
    "members",
    "__executableBindingIds",
    "__semaphore",
    "__executeListenerId",
    "_bindableProperties",
    "core",
    "Environment",
    "select",
    "cmd",
    "getCommand",
    "fireEvent",
    "__onCommandExecute",
    "__P_321_3",
    "e",
    "isEnabled",
    "_applyCommand",
    "value",
    "old",
    "removeListenerById",
    "addListener",
    "ids",
    "selfPropertyValue",
    "i",
    "length",
    "property",
    "isDisposed",
    "removeBinding",
    "Class",
    "hasProperty",
    "constructor",
    "cmdPropertyValue",
    "get",
    "$$resyncNeeded",
    "syncAppearance",
    "util",
    "PropertyUtil",
    "getThemeValue",
    "bind",
    "set",
    "destruct",
    "ui",
    "MExecutable"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MExecutable.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This mixin is included by all widgets, which support an 'execute' like\r\n * buttons or menu entries.\r\n */\r\nqx.Mixin.define(\"qx.ui.core.MExecutable\", {\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Fired if the {@link #execute} method is invoked.*/\r\n    execute: \"qx.event.type.Event\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * A command called if the {@link #execute} method is called, e.g. on a\r\n     * button tap.\r\n     */\r\n    command: {\r\n      check: \"qx.ui.command.Command\",\r\n      apply: \"_applyCommand\",\r\n      event: \"changeCommand\",\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __executableBindingIds: null,\r\n    __semaphore: false,\r\n    __executeListenerId: null,\r\n\r\n    /**\r\n     * @type {Map} Set of properties, which will by synced from the command to the\r\n     *    including widget\r\n     *\r\n     * @lint ignoreReferenceField(_bindableProperties)\r\n     */\r\n    _bindableProperties: qx.core.Environment.select(\"qx.command.bindEnabled\", {\r\n      true: [\"enabled\", \"label\", \"icon\", \"toolTipText\", \"value\", \"menu\"],\r\n\r\n      false: [\"label\", \"icon\", \"toolTipText\", \"value\", \"menu\"]\r\n    }),\r\n\r\n    /**\r\n     * Initiate the execute action.\r\n     */\r\n    execute() {\r\n      var cmd = this.getCommand();\r\n\r\n      if (cmd) {\r\n        if (this.__semaphore) {\r\n          this.__semaphore = false;\r\n        } else {\r\n          this.__semaphore = true;\r\n          cmd.execute(this);\r\n        }\r\n      }\r\n\r\n      this.fireEvent(\"execute\");\r\n    },\r\n\r\n    /**\r\n     * Handler for the execute event of the command.\r\n     *\r\n     * @param e {qx.event.type.Event} The execute event of the command.\r\n     */\r\n    __onCommandExecute(e) {\r\n      if (this.isEnabled()) {\r\n        if (this.__semaphore) {\r\n          this.__semaphore = false;\r\n          return;\r\n        }\r\n        if (this.isEnabled()) {\r\n          this.__semaphore = true;\r\n          this.execute();\r\n        }\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyCommand(value, old) {\r\n      // execute forwarding\r\n      if (old != null) {\r\n        old.removeListenerById(this.__executeListenerId);\r\n      }\r\n      if (value != null) {\r\n        this.__executeListenerId = value.addListener(\r\n          \"execute\",\r\n          this.__onCommandExecute,\r\n          this\r\n        );\r\n      }\r\n\r\n      // binding stuff\r\n      var ids = this.__executableBindingIds;\r\n      if (ids == null) {\r\n        this.__executableBindingIds = ids = {};\r\n      }\r\n\r\n      var selfPropertyValue;\r\n      for (var i = 0; i < this._bindableProperties.length; i++) {\r\n        var property = this._bindableProperties[i];\r\n\r\n        // remove the old binding\r\n        if (old != null && !old.isDisposed() && ids[property] != null) {\r\n          old.removeBinding(ids[property]);\r\n          ids[property] = null;\r\n        }\r\n\r\n        // add the new binding\r\n        if (value != null && qx.Class.hasProperty(this.constructor, property)) {\r\n          // handle the init value (don't sync the initial null)\r\n          var cmdPropertyValue = value.get(property);\r\n          if (cmdPropertyValue == null) {\r\n            selfPropertyValue = this.get(property);\r\n            // check also for themed values [BUG #5906]\r\n            if (selfPropertyValue == null) {\r\n              // update the appearance to make sure every themed property is up to date\r\n              this.$$resyncNeeded = true;\r\n              this.syncAppearance();\r\n              selfPropertyValue = qx.util.PropertyUtil.getThemeValue(\r\n                this,\r\n                property\r\n              );\r\n            }\r\n          } else {\r\n            // Reset the self property value [BUG #4534]\r\n            selfPropertyValue = null;\r\n          }\r\n          // set up the binding\r\n          ids[property] = value.bind(property, this, property);\r\n          // reapply the former value\r\n          if (selfPropertyValue) {\r\n            this.set(property, selfPropertyValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    this._applyCommand(null, this.getCommand());\r\n    this.__executableBindingIds = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}