{
  "className": "qx.ui.core.scroll.IScrollBar",
  "packageName": "qx.ui.core.scroll",
  "name": "IScrollBar",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 549
      },
      "end": {
        "line": 99,
        "column": 3,
        "index": 2673
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>All widget used as scrollbars must implement this interface.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "events": {
    "scroll": {
      "type": "event",
      "name": "scroll",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired if the user scroll</p>"
          }
        ]
      }
    },
    "scrollAnimationEnd": {
      "type": "event",
      "name": "scrollAnimationEnd",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired as soon as the scroll animation ended.</p>"
          }
        ]
      }
    }
  },
  "properties": {
    "orientation": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 863
        },
        "end": {
          "line": 34,
          "column": 19,
          "index": 878
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The scroll bar orientation</p>"
          }
        ]
      },
      "name": "orientation",
      "propertyType": "new"
    },
    "maximum": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 987
        },
        "end": {
          "line": 40,
          "column": 15,
          "index": 998
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum value (difference between available size and\n content size).</p>"
          }
        ]
      },
      "name": "maximum",
      "propertyType": "new"
    },
    "position": {
      "location": {
        "start": {
          "line": 50,
          "column": 4,
          "index": 1315
        },
        "end": {
          "line": 50,
          "column": 16,
          "index": 1327
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Position of the scrollbar (which means the scroll left/top of the\n attached area's pane)\n Strictly validates according to {@link #maximum}.\n Does not apply any correction to the incoming value. If you depend\n on this, please use {@link #scrollTo} instead.</p>"
          }
        ]
      },
      "name": "position",
      "propertyType": "new"
    },
    "knobFactor": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1465
        },
        "end": {
          "line": 56,
          "column": 18,
          "index": 1479
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Factor to apply to the width/height of the knob in relation\n to the dimension of the underlying area.</p>"
          }
        ]
      },
      "name": "knobFactor",
      "propertyType": "new"
    }
  },
  "members": {
    "scrollTo": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1835
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1906
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls to the given position.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "position {Integer} Scroll to this position. Must be greater zero.",
            "paramName": "position",
            "description": " Scroll to this position. Must be greater zero.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollBy": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2216
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2283
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls by the given offset.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "offset {Integer} Scroll by this offset",
            "paramName": "offset",
            "description": " Scroll by this offset",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollBySteps": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2595
        },
        "end": {
          "line": 97,
          "column": 5,
          "index": 2665
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scrolls by the given number of steps.\n This method automatically corrects the given position to respect\n the {@link #maximum}.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "steps {Integer} Number of steps",
            "paramName": "steps",
            "description": " Number of steps",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "duration {Number} The time in milliseconds the slide to should take.",
            "paramName": "duration",
            "description": " The time in milliseconds the slide to should take.",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getOrientation": {
      "type": "function",
      "name": "getOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>orientation</code>.\n\nFor further details take a look at the property definition: {@link #orientation}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for orientation"
          }
        ]
      }
    },
    "setOrientation": {
      "type": "function",
      "name": "setOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>orientation</code>.\n\nFor further details take a look at the property definition: {@link #orientation}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for orientation"
          }
        ]
      }
    },
    "resetOrientation": {
      "type": "function",
      "name": "resetOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>orientation</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #orientation}."
          }
        ]
      }
    },
    "getMaximum": {
      "type": "function",
      "name": "getMaximum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maximum</code>.\n\nFor further details take a look at the property definition: {@link #maximum}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for maximum"
          }
        ]
      }
    },
    "setMaximum": {
      "type": "function",
      "name": "setMaximum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maximum</code>.\n\nFor further details take a look at the property definition: {@link #maximum}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for maximum"
          }
        ]
      }
    },
    "resetMaximum": {
      "type": "function",
      "name": "resetMaximum",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maximum</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maximum}."
          }
        ]
      }
    },
    "getPosition": {
      "type": "function",
      "name": "getPosition",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>position</code>.\n\nFor further details take a look at the property definition: {@link #position}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for position"
          }
        ]
      }
    },
    "setPosition": {
      "type": "function",
      "name": "setPosition",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>position</code>.\n\nFor further details take a look at the property definition: {@link #position}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for position"
          }
        ]
      }
    },
    "resetPosition": {
      "type": "function",
      "name": "resetPosition",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>position</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #position}."
          }
        ]
      }
    },
    "getKnobFactor": {
      "type": "function",
      "name": "getKnobFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>knobFactor</code>.\n\nFor further details take a look at the property definition: {@link #knobFactor}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for knobFactor"
          }
        ]
      }
    },
    "setKnobFactor": {
      "type": "function",
      "name": "setKnobFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>knobFactor</code>.\n\nFor further details take a look at the property definition: {@link #knobFactor}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for knobFactor"
          }
        ]
      }
    },
    "resetKnobFactor": {
      "type": "function",
      "name": "resetKnobFactor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>knobFactor</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #knobFactor}."
          }
        ]
      }
    }
  },
  "descendants": []
}