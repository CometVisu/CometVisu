{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "scroll",
    "MScrollBarFactory",
    "MRoll",
    "MDragDropScrolling",
    "type",
    "statics",
    "DEFAULT_SCROLLBAR_WIDTH",
    "construct",
    "constructor",
    "call",
    "Environment",
    "get",
    "_setLayout",
    "layout",
    "Canvas",
    "grid",
    "Grid",
    "setColumnFlex",
    "setRowFlex",
    "size",
    "AbstractScrollArea",
    "set",
    "minHeight",
    "minWidth",
    "_addRollHandling",
    "events",
    "scrollAnimationXEnd",
    "scrollAnimationYEnd",
    "properties",
    "appearance",
    "refine",
    "init",
    "width",
    "height",
    "scrollbarX",
    "check",
    "themeable",
    "apply",
    "scrollbarY",
    "scrollbar",
    "group",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "ScrollPane",
    "addListener",
    "_computeScrollbars",
    "_onScrollPaneX",
    "_onScrollPaneY",
    "_add",
    "edge",
    "row",
    "column",
    "_createScrollBar",
    "setMinWidth",
    "exclude",
    "_onScrollBarX",
    "_onChangeScrollbarXVisibility",
    "_onScrollAnimationEnd",
    "bind",
    "setMinHeight",
    "bottom",
    "right",
    "left",
    "_onScrollBarY",
    "_onChangeScrollbarYVisibility",
    "top",
    "setWidth",
    "setHeight",
    "superclass",
    "prototype",
    "getPaneSize",
    "getChildControl",
    "getInnerSize",
    "getItemTop",
    "item",
    "getItemBottom",
    "getItemLeft",
    "getItemRight",
    "scrollToX",
    "value",
    "duration",
    "queue",
    "Manager",
    "flush",
    "scrollTo",
    "scrollByX",
    "scrollBy",
    "getScrollX",
    "getPosition",
    "scrollToY",
    "scrollByY",
    "getScrollY",
    "stopScrollAnimationX",
    "stopScrollAnimation",
    "stopScrollAnimationY",
    "direction",
    "fireEvent",
    "e",
    "getData",
    "updatePosition",
    "showX",
    "_isChildControlVisible",
    "showY",
    "_showChildControl",
    "_excludeChildControl",
    "pane",
    "content",
    "getChildren",
    "innerSize",
    "paneSize",
    "scrollSize",
    "getScrollSize",
    "getScrollbarX",
    "getScrollbarY",
    "barX",
    "show",
    "setMaximum",
    "Math",
    "max",
    "setKnobFactor",
    "barY"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/AbstractScrollArea.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The ScrollArea provides a container widget with on demand scroll bars\n * if the content size exceeds the size of the container.\n *\n * @childControl pane {qx.ui.core.scroll.ScrollPane} pane which holds the content to scroll\n * @childControl scrollbar-x {qx.ui.core.scroll.ScrollBar?qx.ui.core.scroll.NativeScrollBar} horizontal scrollbar\n * @childControl scrollbar-y {qx.ui.core.scroll.ScrollBar?qx.ui.core.scroll.NativeScrollBar} vertical scrollbar\n * @childControl corner {qx.ui.core.Widget} corner where no scrollbar is shown\n */\nqx.Class.define(\"qx.ui.core.scroll.AbstractScrollArea\", {\n  extend: qx.ui.core.Widget,\n  include: [\n    qx.ui.core.scroll.MScrollBarFactory,\n    qx.ui.core.scroll.MRoll,\n    qx.ui.core.MDragDropScrolling\n  ],\n\n  type: \"abstract\",\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * The default width which is used for the width of the scroll bar if\n     * overlaid.\n     */\n    DEFAULT_SCROLLBAR_WIDTH: 14\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n      // use a plain canvas to overlay the scroll bars\n      this._setLayout(new qx.ui.layout.Canvas());\n    } else {\n      // Create 'fixed' grid layout\n      var grid = new qx.ui.layout.Grid();\n      grid.setColumnFlex(0, 1);\n      grid.setRowFlex(0, 1);\n      this._setLayout(grid);\n    }\n\n    // since the scroll container disregards the min size of the scrollbars\n    // we have to set the min size of the scroll area to ensure that the\n    // scrollbars always have an usable size.\n    var size =\n      qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH * 2 + 14;\n    this.set({ minHeight: size, minWidth: size });\n\n    // Roll listener for scrolling\n    this._addRollHandling();\n  },\n\n  events: {\n    /** Fired as soon as the scroll animation in X direction ends. */\n    scrollAnimationXEnd: \"qx.event.type.Event\",\n\n    /** Fired as soon as the scroll animation in Y direction ends. */\n    scrollAnimationYEnd: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"scrollarea\"\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 0\n    },\n\n    // overridden\n    height: {\n      refine: true,\n      init: 0\n    },\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarX: {\n      check: [\"auto\", \"on\", \"off\"],\n      init: \"auto\",\n      themeable: true,\n      apply: \"_computeScrollbars\"\n    },\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarY: {\n      check: [\"auto\", \"on\", \"off\"],\n      init: \"auto\",\n      themeable: true,\n      apply: \"_computeScrollbars\"\n    },\n\n    /**\n     * Group property, to set the overflow of both scroll bars.\n     */\n    scrollbar: {\n      group: [\"scrollbarX\", \"scrollbarY\"]\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"pane\":\n          control = new qx.ui.core.scroll.ScrollPane();\n\n          control.addListener(\"update\", this._computeScrollbars, this);\n          control.addListener(\"scrollX\", this._onScrollPaneX, this);\n          control.addListener(\"scrollY\", this._onScrollPaneY, this);\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            this._add(control, { edge: 0 });\n          } else {\n            this._add(control, { row: 0, column: 0 });\n          }\n          break;\n\n        case \"scrollbar-x\":\n          control = this._createScrollBar(\"horizontal\");\n          control.setMinWidth(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarX, this);\n          control.addListener(\n            \"changeVisibility\",\n            this._onChangeScrollbarXVisibility,\n            this\n          );\n\n          control.addListener(\n            \"scrollAnimationEnd\",\n            this._onScrollAnimationEnd.bind(this, \"X\")\n          );\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            control.setMinHeight(\n              qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH\n            );\n\n            this._add(control, { bottom: 0, right: 0, left: 0 });\n          } else {\n            this._add(control, { row: 1, column: 0 });\n          }\n          break;\n\n        case \"scrollbar-y\":\n          control = this._createScrollBar(\"vertical\");\n          control.setMinHeight(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarY, this);\n          control.addListener(\n            \"changeVisibility\",\n            this._onChangeScrollbarYVisibility,\n            this\n          );\n\n          control.addListener(\n            \"scrollAnimationEnd\",\n            this._onScrollAnimationEnd.bind(this, \"Y\")\n          );\n\n          if (qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            control.setMinWidth(\n              qx.ui.core.scroll.AbstractScrollArea.DEFAULT_SCROLLBAR_WIDTH\n            );\n\n            this._add(control, { right: 0, bottom: 0, top: 0 });\n          } else {\n            this._add(control, { row: 0, column: 1 });\n          }\n          break;\n\n        case \"corner\":\n          control = new qx.ui.core.Widget();\n          control.setWidth(0);\n          control.setHeight(0);\n          control.exclude();\n\n          if (!qx.core.Environment.get(\"os.scrollBarOverlayed\")) {\n            // only add for non overlayed scroll bars\n            this._add(control, { row: 1, column: 1 });\n          }\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PANE SIZE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the dimensions of the pane.\n     *\n     * @return {Map|null} The pane dimension in pixel. Contains\n     *    the keys <code>width</code> and <code>height</code>.\n     */\n    getPaneSize() {\n      return this.getChildControl(\"pane\").getInnerSize();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ITEM LOCATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the top offset of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemTop(item) {\n      return this.getChildControl(\"pane\").getItemTop(item);\n    },\n\n    /**\n     * Returns the top offset of the end of the given item in relation to the\n     * inner height of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemBottom(item) {\n      return this.getChildControl(\"pane\").getItemBottom(item);\n    },\n\n    /**\n     * Returns the left offset of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Top offset\n     */\n    getItemLeft(item) {\n      return this.getChildControl(\"pane\").getItemLeft(item);\n    },\n\n    /**\n     * Returns the left offset of the end of the given item in relation to the\n     * inner width of this widget.\n     *\n     * @param item {qx.ui.core.Widget} Item to query\n     * @return {Integer} Right offset\n     */\n    getItemRight(item) {\n      return this.getChildControl(\"pane\").getItemRight(item);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls the element's content to the given left coordinate\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToX(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-x\").scrollTo(value, duration);\n    },\n\n    /**\n     * Scrolls the element's content by the given left offset\n     *\n     * @param value {Integer} The vertical position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByX(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-x\").scrollBy(value, duration);\n    },\n\n    /**\n     * Returns the scroll left position of the content\n     *\n     * @return {Integer} Horizontal scroll position\n     */\n    getScrollX() {\n      var scrollbar = this.getChildControl(\"scrollbar-x\", true);\n      return scrollbar ? scrollbar.getPosition() : 0;\n    },\n\n    /**\n     * Scrolls the element's content to the given top coordinate\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollToY(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-y\").scrollTo(value, duration);\n    },\n\n    /**\n     * Scrolls the element's content by the given top offset\n     *\n     * @param value {Integer} The horizontal position to scroll to.\n     * @param duration {Number?} The time in milliseconds the scroll to should take.\n     */\n    scrollByY(value, duration) {\n      // First flush queue before scroll\n      qx.ui.core.queue.Manager.flush();\n\n      this.getChildControl(\"scrollbar-y\").scrollBy(value, duration);\n    },\n\n    /**\n     * Returns the scroll top position of the content\n     *\n     * @return {Integer} Vertical scroll position\n     */\n    getScrollY() {\n      var scrollbar = this.getChildControl(\"scrollbar-y\", true);\n      return scrollbar ? scrollbar.getPosition() : 0;\n    },\n\n    /**\n     * In case a scroll animation is currently running in X direction,\n     * it will be stopped. If not, the method does nothing.\n     */\n    stopScrollAnimationX() {\n      var scrollbar = this.getChildControl(\"scrollbar-x\", true);\n      if (scrollbar) {\n        scrollbar.stopScrollAnimation();\n      }\n    },\n\n    /**\n     * In case a scroll animation is currently running in X direction,\n     * it will be stopped. If not, the method does nothing.\n     */\n    stopScrollAnimationY() {\n      var scrollbar = this.getChildControl(\"scrollbar-y\", true);\n      if (scrollbar) {\n        scrollbar.stopScrollAnimation();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Event handler for the scroll animation end event for both scroll bars.\n     *\n     * @param direction {String} Either \"X\" or \"Y\".\n     */\n    _onScrollAnimationEnd(direction) {\n      this.fireEvent(\"scrollAnimation\" + direction + \"End\");\n    },\n\n    /**\n     * Event handler for the scroll event of the horizontal scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarX(e) {\n      this.getChildControl(\"pane\").scrollToX(e.getData());\n    },\n\n    /**\n     * Event handler for the scroll event of the vertical scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarY(e) {\n      this.getChildControl(\"pane\").scrollToY(e.getData());\n    },\n\n    /**\n     * Event handler for the horizontal scroll event of the pane\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollPaneX(e) {\n      var scrollbar = this.getChildControl(\"scrollbar-x\");\n      if (scrollbar) {\n        scrollbar.updatePosition(e.getData());\n      }\n    },\n\n    /**\n     * Event handler for the vertical scroll event of the pane\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollPaneY(e) {\n      var scrollbar = this.getChildControl(\"scrollbar-y\");\n      if (scrollbar) {\n        scrollbar.updatePosition(e.getData());\n      }\n    },\n\n    /**\n     * Event handler for visibility changes of horizontal scrollbar.\n     *\n     * @param e {qx.event.type.Event} Property change event\n     */\n    _onChangeScrollbarXVisibility(e) {\n      var showX = this._isChildControlVisible(\"scrollbar-x\");\n      var showY = this._isChildControlVisible(\"scrollbar-y\");\n\n      if (!showX) {\n        this.scrollToX(0);\n      }\n\n      showX && showY\n        ? this._showChildControl(\"corner\")\n        : this._excludeChildControl(\"corner\");\n    },\n\n    /**\n     * Event handler for visibility changes of horizontal scrollbar.\n     *\n     * @param e {qx.event.type.Event} Property change event\n     */\n    _onChangeScrollbarYVisibility(e) {\n      var showX = this._isChildControlVisible(\"scrollbar-x\");\n      var showY = this._isChildControlVisible(\"scrollbar-y\");\n\n      if (!showY) {\n        this.scrollToY(0);\n      }\n\n      showX && showY\n        ? this._showChildControl(\"corner\")\n        : this._excludeChildControl(\"corner\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the visibility state for scrollbars.\n     *\n     */\n    _computeScrollbars() {\n      var pane = this.getChildControl(\"pane\");\n      var content = pane.getChildren()[0];\n      if (!content) {\n        this._excludeChildControl(\"scrollbar-x\");\n        this._excludeChildControl(\"scrollbar-y\");\n        return;\n      }\n\n      var innerSize = this.getInnerSize();\n      var paneSize = pane.getInnerSize();\n      var scrollSize = pane.getScrollSize();\n\n      // if the widget has not yet been rendered, return and try again in the\n      // resize event\n      if (!paneSize || !scrollSize) {\n        return;\n      }\n\n      var scrollbarX = this.getScrollbarX();\n      var scrollbarY = this.getScrollbarY();\n\n      if (scrollbarX === \"auto\" && scrollbarY === \"auto\") {\n        // Check if the container is big enough to show\n        // the full content.\n        var showX = scrollSize.width > innerSize.width;\n        var showY = scrollSize.height > innerSize.height;\n\n        // Dependency check\n        // We need a special intelligence here when only one\n        // of the autosized axis requires a scrollbar\n        // This scrollbar may then influence the need\n        // for the other one as well.\n        if ((showX || showY) && !(showX && showY)) {\n          if (showX) {\n            showY = scrollSize.height > paneSize.height;\n          } else if (showY) {\n            showX = scrollSize.width > paneSize.width;\n          }\n        }\n      } else {\n        var showX = scrollbarX === \"on\";\n        var showY = scrollbarY === \"on\";\n\n        // Check auto values afterwards with already\n        // corrected client dimensions\n        if (\n          scrollSize.width > (showX ? paneSize.width : innerSize.width) &&\n          scrollbarX === \"auto\"\n        ) {\n          showX = true;\n        }\n\n        if (\n          scrollSize.height > (showX ? paneSize.height : innerSize.height) &&\n          scrollbarY === \"auto\"\n        ) {\n          showY = true;\n        }\n      }\n\n      // Update scrollbars\n      if (showX) {\n        var barX = this.getChildControl(\"scrollbar-x\");\n\n        barX.show();\n        barX.setMaximum(Math.max(0, scrollSize.width - paneSize.width));\n        barX.setKnobFactor(\n          scrollSize.width === 0 ? 0 : paneSize.width / scrollSize.width\n        );\n      } else {\n        this._excludeChildControl(\"scrollbar-x\");\n      }\n\n      if (showY) {\n        var barY = this.getChildControl(\"scrollbar-y\");\n\n        barY.show();\n        barY.setMaximum(Math.max(0, scrollSize.height - paneSize.height));\n        barY.setKnobFactor(\n          scrollSize.height === 0 ? 0 : paneSize.height / scrollSize.height\n        );\n      } else {\n        this._excludeChildControl(\"scrollbar-y\");\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}