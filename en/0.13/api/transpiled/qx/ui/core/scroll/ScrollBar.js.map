{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "scroll",
    "IScrollBar",
    "construct",
    "orientation",
    "constructor",
    "call",
    "_createChildControl",
    "addListener",
    "_onResizeSlider",
    "setOrientation",
    "initOrientation",
    "e",
    "stopPropagation",
    "events",
    "scrollAnimationEnd",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "maximum",
    "position",
    "event",
    "singleStep",
    "pageStep",
    "knobFactor",
    "nullable",
    "members",
    "__offset",
    "__originalMinSize",
    "_computeSizeHint",
    "hint",
    "ScrollBar",
    "superclass",
    "prototype",
    "getOrientation",
    "minWidth",
    "minHeight",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "horizontal",
    "getChildControl",
    "setVisibility",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "ScrollSlider",
    "setPageStep",
    "setFocusable",
    "_onChangeSliderValue",
    "_onSlideAnimationEnd",
    "_add",
    "flex",
    "form",
    "RepeatButton",
    "_onExecuteBegin",
    "_onExecuteEnd",
    "_applyMaximum",
    "value",
    "setMaximum",
    "_applyPosition",
    "setValue",
    "_applyKnobFactor",
    "setKnobFactor",
    "_applyPageStep",
    "_applyOrientation",
    "old",
    "getContentElement",
    "setAttribute",
    "oldLayout",
    "_getLayout",
    "dispose",
    "_setLayout",
    "layout",
    "HBox",
    "setAllowStretchX",
    "setAllowStretchY",
    "replaceState",
    "VBox",
    "scrollTo",
    "duration",
    "slideTo",
    "scrollBy",
    "offset",
    "slideBy",
    "scrollBySteps",
    "steps",
    "size",
    "getSingleStep",
    "updatePosition",
    "stopScrollAnimation",
    "stopSlideAnimation",
    "fireEvent",
    "setPosition",
    "getData",
    "knob",
    "knobHint",
    "getSizeHint",
    "hideKnob",
    "sliderSize",
    "getInnerSize",
    "exclude",
    "show"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/ScrollBar.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The scroll bar widget, is a special slider, which is used in qooxdoo instead\r\n * of the native browser scroll bars.\r\n *\r\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\r\n * a scroll bar is not used directly.\r\n *\r\n * @childControl slider {qx.ui.core.scroll.ScrollSlider} scroll slider component\r\n * @childControl button-begin {qx.ui.form.RepeatButton} button to scroll to top\r\n * @childControl button-end {qx.ui.form.RepeatButton} button to scroll to bottom\r\n *\r\n * *Example*\r\n *\r\n * Here is a little example of how to use the widget.\r\n *\r\n * <pre class='javascript'>\r\n *   var scrollBar = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\r\n *   scrollBar.set({\r\n *     maximum: 500\r\n *   })\r\n *   this.getRoot().add(scrollBar);\r\n * </pre>\r\n *\r\n * This example creates a horizontal scroll bar with a maximum value of 500.\r\n *\r\n * *External Documentation*\r\n *\r\n * <a href='http://qooxdoo.org/docs/#desktop/widget/scrollbar.md' target='_blank'>\r\n * Documentation of this widget in the qooxdoo manual.</a>\r\n */\r\nqx.Class.define(\"qx.ui.core.scroll.ScrollBar\", {\r\n  extend: qx.ui.core.Widget,\r\n  implement: qx.ui.core.scroll.IScrollBar,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\r\n   */\r\n  construct(orientation) {\r\n    super();\r\n\r\n    // Create child controls\r\n    this._createChildControl(\"button-begin\");\r\n    this._createChildControl(\"slider\").addListener(\r\n      \"resize\",\r\n      this._onResizeSlider,\r\n      this\r\n    );\r\n\r\n    this._createChildControl(\"button-end\");\r\n\r\n    // Configure orientation\r\n    if (orientation != null) {\r\n      this.setOrientation(orientation);\r\n    } else {\r\n      this.initOrientation();\r\n    }\r\n\r\n    // prevent drag & drop on scrolling\r\n    this.addListener(\"track\", e => {\r\n      e.stopPropagation();\r\n    });\r\n  },\r\n\r\n  events: {\r\n    /** Change event for the value. */\r\n    scrollAnimationEnd: \"qx.event.type.Event\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"scrollbar\"\r\n    },\r\n\r\n    /**\r\n     * The scroll bar orientation\r\n     */\r\n    orientation: {\r\n      check: [\"horizontal\", \"vertical\"],\r\n      init: \"horizontal\",\r\n      apply: \"_applyOrientation\"\r\n    },\r\n\r\n    /**\r\n     * The maximum value (difference between available size and\r\n     * content size).\r\n     */\r\n    maximum: {\r\n      check: \"PositiveInteger\",\r\n      apply: \"_applyMaximum\",\r\n      init: 100\r\n    },\r\n\r\n    /**\r\n     * Position of the scrollbar (which means the scroll left/top of the\r\n     * attached area's pane)\r\n     *\r\n     * Strictly validates according to {@link #maximum}.\r\n     * Does not apply any correction to the incoming value. If you depend\r\n     * on this, please use {@link #scrollTo} instead.\r\n     */\r\n    position: {\r\n      check: \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()\",\r\n      init: 0,\r\n      apply: \"_applyPosition\",\r\n      event: \"scroll\"\r\n    },\r\n\r\n    /**\r\n     * Step size for each tap on the up/down or left/right buttons.\r\n     */\r\n    singleStep: {\r\n      check: \"Integer\",\r\n      init: 20\r\n    },\r\n\r\n    /**\r\n     * The amount to increment on each event. Typically corresponds\r\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\r\n     */\r\n    pageStep: {\r\n      check: \"Integer\",\r\n      init: 10,\r\n      apply: \"_applyPageStep\"\r\n    },\r\n\r\n    /**\r\n     * Factor to apply to the width/height of the knob in relation\r\n     * to the dimension of the underlying area.\r\n     */\r\n    knobFactor: {\r\n      check: \"PositiveNumber\",\r\n      apply: \"_applyKnobFactor\",\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __offset: 2,\r\n    __originalMinSize: 0,\r\n\r\n    // overridden\r\n    _computeSizeHint() {\r\n      var hint = super._computeSizeHint();\r\n      if (this.getOrientation() === \"horizontal\") {\r\n        this.__originalMinSize = hint.minWidth;\r\n        hint.minWidth = 0;\r\n      } else {\r\n        this.__originalMinSize = hint.minHeight;\r\n        hint.minHeight = 0;\r\n      }\r\n      return hint;\r\n    },\r\n\r\n    // overridden\r\n    renderLayout(left, top, width, height) {\r\n      var changes = super.renderLayout(left, top, width, height);\r\n      var horizontal = this.getOrientation() === \"horizontal\";\r\n      if (this.__originalMinSize >= (horizontal ? width : height)) {\r\n        this.getChildControl(\"button-begin\").setVisibility(\"hidden\");\r\n        this.getChildControl(\"button-end\").setVisibility(\"hidden\");\r\n      } else {\r\n        this.getChildControl(\"button-begin\").setVisibility(\"visible\");\r\n        this.getChildControl(\"button-end\").setVisibility(\"visible\");\r\n      }\r\n\r\n      return changes;\r\n    },\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"slider\":\r\n          control = new qx.ui.core.scroll.ScrollSlider();\r\n          control.setPageStep(100);\r\n          control.setFocusable(false);\r\n          control.addListener(\"changeValue\", this._onChangeSliderValue, this);\r\n          control.addListener(\r\n            \"slideAnimationEnd\",\r\n            this._onSlideAnimationEnd,\r\n            this\r\n          );\r\n\r\n          this._add(control, { flex: 1 });\r\n          break;\r\n\r\n        case \"button-begin\":\r\n          // Top/Left Button\r\n          control = new qx.ui.form.RepeatButton();\r\n          control.setFocusable(false);\r\n          control.addListener(\"execute\", this._onExecuteBegin, this);\r\n          this._add(control);\r\n          break;\r\n\r\n        case \"button-end\":\r\n          // Bottom/Right Button\r\n          control = new qx.ui.form.RepeatButton();\r\n          control.setFocusable(false);\r\n          control.addListener(\"execute\", this._onExecuteEnd, this);\r\n          this._add(control);\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyMaximum(value) {\r\n      this.getChildControl(\"slider\").setMaximum(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyPosition(value) {\r\n      this.getChildControl(\"slider\").setValue(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyKnobFactor(value) {\r\n      this.getChildControl(\"slider\").setKnobFactor(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyPageStep(value) {\r\n      this.getChildControl(\"slider\").setPageStep(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyOrientation(value, old) {\r\n      // ARIA attrs\r\n      this.getContentElement().setAttribute(\"aria-orientation\", value);\r\n\r\n      // Dispose old layout\r\n      var oldLayout = this._getLayout();\r\n      if (oldLayout) {\r\n        oldLayout.dispose();\r\n      }\r\n\r\n      // Reconfigure\r\n      if (value === \"horizontal\") {\r\n        this._setLayout(new qx.ui.layout.HBox());\r\n\r\n        this.setAllowStretchX(true);\r\n        this.setAllowStretchY(false);\r\n\r\n        this.replaceState(\"vertical\", \"horizontal\");\r\n\r\n        this.getChildControl(\"button-begin\").replaceState(\"up\", \"left\");\r\n        this.getChildControl(\"button-end\").replaceState(\"down\", \"right\");\r\n      } else {\r\n        this._setLayout(new qx.ui.layout.VBox());\r\n\r\n        this.setAllowStretchX(false);\r\n        this.setAllowStretchY(true);\r\n\r\n        this.replaceState(\"horizontal\", \"vertical\");\r\n\r\n        this.getChildControl(\"button-begin\").replaceState(\"left\", \"up\");\r\n        this.getChildControl(\"button-end\").replaceState(\"right\", \"down\");\r\n      }\r\n\r\n      // Sync slider orientation\r\n      this.getChildControl(\"slider\").setOrientation(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      METHOD REDIRECTION TO SLIDER\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Scrolls to the given position.\r\n     *\r\n     * This method automatically corrects the given position to respect\r\n     * the {@link #maximum}.\r\n     *\r\n     * @param position {Integer} Scroll to this position. Must be greater zero.\r\n     * @param duration {Number} The time in milliseconds the slide to should take.\r\n     */\r\n    scrollTo(position, duration) {\r\n      this.getChildControl(\"slider\").slideTo(position, duration);\r\n    },\r\n\r\n    /**\r\n     * Scrolls by the given offset.\r\n     *\r\n     * This method automatically corrects the given position to respect\r\n     * the {@link #maximum}.\r\n     *\r\n     * @param offset {Integer} Scroll by this offset\r\n     * @param duration {Number} The time in milliseconds the slide to should take.\r\n     */\r\n    scrollBy(offset, duration) {\r\n      this.getChildControl(\"slider\").slideBy(offset, duration);\r\n    },\r\n\r\n    /**\r\n     * Scrolls by the given number of steps.\r\n     *\r\n     * This method automatically corrects the given position to respect\r\n     * the {@link #maximum}.\r\n     *\r\n     * @param steps {Integer} Number of steps\r\n     * @param duration {Number} The time in milliseconds the slide to should take.\r\n     */\r\n    scrollBySteps(steps, duration) {\r\n      var size = this.getSingleStep();\r\n      this.getChildControl(\"slider\").slideBy(steps * size, duration);\r\n    },\r\n\r\n    /**\r\n     * Updates the position property considering the minimum and maximum values.\r\n     * @param position {Number} The new position.\r\n     */\r\n    updatePosition(position) {\r\n      this.getChildControl(\"slider\").updatePosition(position);\r\n    },\r\n\r\n    /**\r\n     * If a scroll animation is running, it will be stopped.\r\n     */\r\n    stopScrollAnimation() {\r\n      this.getChildControl(\"slider\").stopSlideAnimation();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT LISTENER\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Executed when the up/left button is executed (pressed)\r\n     *\r\n     * @param e {qx.event.type.Event} Execute event of the button\r\n     */\r\n    _onExecuteBegin(e) {\r\n      this.scrollBy(-this.getSingleStep(), 50);\r\n    },\r\n\r\n    /**\r\n     * Executed when the down/right button is executed (pressed)\r\n     *\r\n     * @param e {qx.event.type.Event} Execute event of the button\r\n     */\r\n    _onExecuteEnd(e) {\r\n      this.scrollBy(this.getSingleStep(), 50);\r\n    },\r\n\r\n    /**\r\n     * Change listener for slider animation end.\r\n     */\r\n    _onSlideAnimationEnd() {\r\n      this.fireEvent(\"scrollAnimationEnd\");\r\n    },\r\n\r\n    /**\r\n     * Change listener for slider value changes.\r\n     *\r\n     * @param e {qx.event.type.Data} The change event object\r\n     */\r\n    _onChangeSliderValue(e) {\r\n      this.setPosition(e.getData());\r\n    },\r\n\r\n    /**\r\n     * Hide the knob of the slider if the slidebar is too small or show it\r\n     * otherwise.\r\n     *\r\n     * @param e {qx.event.type.Data} event object\r\n     */\r\n    _onResizeSlider(e) {\r\n      var knob = this.getChildControl(\"slider\").getChildControl(\"knob\");\r\n      var knobHint = knob.getSizeHint();\r\n      var hideKnob = false;\r\n      var sliderSize = this.getChildControl(\"slider\").getInnerSize();\r\n\r\n      if (this.getOrientation() == \"vertical\") {\r\n        if (sliderSize.height < knobHint.minHeight + this.__offset) {\r\n          hideKnob = true;\r\n        }\r\n      } else {\r\n        if (sliderSize.width < knobHint.minWidth + this.__offset) {\r\n          hideKnob = true;\r\n        }\r\n      }\r\n\r\n      if (hideKnob) {\r\n        knob.exclude();\r\n      } else {\r\n        knob.show();\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}