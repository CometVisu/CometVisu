{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/ScrollBar.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "scroll",
    "IScrollBar",
    "construct",
    "orientation",
    "_createChildControl",
    "addListener",
    "_onResizeSlider",
    "setOrientation",
    "initOrientation",
    "e",
    "stopPropagation",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "maximum",
    "position",
    "event",
    "singleStep",
    "pageStep",
    "knobFactor",
    "nullable",
    "members",
    "__offset",
    "__originalMinSize",
    "_computeSizeHint",
    "hint",
    "getOrientation",
    "minWidth",
    "minHeight",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "horizontal",
    "getChildControl",
    "setVisibility",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "ScrollSlider",
    "setPageStep",
    "setFocusable",
    "_onChangeSliderValue",
    "_onSlideAnimationEnd",
    "_add",
    "flex",
    "form",
    "RepeatButton",
    "_onExecuteBegin",
    "_onExecuteEnd",
    "_applyMaximum",
    "value",
    "setMaximum",
    "_applyPosition",
    "setValue",
    "_applyKnobFactor",
    "setKnobFactor",
    "_applyPageStep",
    "_applyOrientation",
    "old",
    "oldLayout",
    "_getLayout",
    "dispose",
    "_setLayout",
    "layout",
    "HBox",
    "setAllowStretchX",
    "setAllowStretchY",
    "replaceState",
    "VBox",
    "scrollTo",
    "duration",
    "slideTo",
    "scrollBy",
    "offset",
    "slideBy",
    "scrollBySteps",
    "steps",
    "size",
    "getSingleStep",
    "updatePosition",
    "stopScrollAnimation",
    "stopSlideAnimation",
    "fireEvent",
    "setPosition",
    "getData",
    "knob",
    "knobHint",
    "getSizeHint",
    "hideKnob",
    "sliderSize",
    "getInnerSize",
    "exclude",
    "show",
    "ScrollBar"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The scroll bar widget, is a special slider, which is used in qooxdoo instead\n * of the native browser scroll bars.\n *\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\n * a scroll bar is not used directly.\n *\n * @childControl slider {qx.ui.core.scroll.ScrollSlider} scroll slider component\n * @childControl button-begin {qx.ui.form.RepeatButton} button to scroll to top\n * @childControl button-end {qx.ui.form.RepeatButton} button to scroll to bottom\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var scrollBar = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n *   scrollBar.set({\n *     maximum: 500\n *   })\n *   this.getRoot().add(scrollBar);\n * </pre>\n *\n * This example creates a horizontal scroll bar with a maximum value of 500.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/scrollbar.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollBar\",\n{\n  extend : qx.ui.core.Widget,\n  implement : qx.ui.core.scroll.IScrollBar,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n   */\n  construct : function(orientation)\n  {\n    this.base(arguments);\n\n    // Create child controls\n    this._createChildControl(\"button-begin\");\n    this._createChildControl(\"slider\").addListener(\"resize\", this._onResizeSlider, this);\n    this._createChildControl(\"button-end\");\n\n    // Configure orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    // prevent drag & drop on scrolling\n    this.addListener(\"track\", function(e) {\n      e.stopPropagation();\n    }, this);\n  },\n\n\n  events : {\n    /** Change event for the value. */\n    \"scrollAnimationEnd\": \"qx.event.type.Event\"\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollbar\"\n    },\n\n\n    /**\n     * The scroll bar orientation\n     */\n    orientation :\n    {\n      check : [ \"horizontal\", \"vertical\" ],\n      init : \"horizontal\",\n      apply : \"_applyOrientation\"\n    },\n\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum :\n    {\n      check : \"PositiveInteger\",\n      apply : \"_applyMaximum\",\n      init : 100\n    },\n\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position :\n    {\n      check : \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()\",\n      init : 0,\n      apply : \"_applyPosition\",\n      event : \"scroll\"\n    },\n\n\n    /**\n     * Step size for each tap on the up/down or left/right buttons.\n     */\n    singleStep :\n    {\n      check : \"Integer\",\n      init : 20\n    },\n\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep :\n    {\n      check : \"Integer\",\n      init : 10,\n      apply : \"_applyPageStep\"\n    },\n\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor :\n    {\n      check : \"PositiveNumber\",\n      apply : \"_applyKnobFactor\",\n      nullable : true\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __offset : 2,\n    __originalMinSize : 0,\n\n\n    // overridden\n    _computeSizeHint : function() {\n      var hint = this.base(arguments);\n      if (this.getOrientation() === \"horizontal\") {\n        this.__originalMinSize = hint.minWidth;\n        hint.minWidth = 0;\n      } else {\n        this.__originalMinSize = hint.minHeight;\n        hint.minHeight = 0;\n      }\n      return hint;\n    },\n\n\n    // overridden\n    renderLayout : function(left, top, width, height) {\n      var changes = this.base(arguments, left, top, width, height);\n      var horizontal = this.getOrientation() === \"horizontal\";\n      if (this.__originalMinSize >= (horizontal ? width : height)) {\n        this.getChildControl(\"button-begin\").setVisibility(\"hidden\");\n        this.getChildControl(\"button-end\").setVisibility(\"hidden\");\n      } else {\n        this.getChildControl(\"button-begin\").setVisibility(\"visible\");\n        this.getChildControl(\"button-end\").setVisibility(\"visible\");\n      }\n\n      return changes;\n    },\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"slider\":\n          control = new qx.ui.core.scroll.ScrollSlider();\n          control.setPageStep(100);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onChangeSliderValue, this);\n          control.addListener(\"slideAnimationEnd\", this._onSlideAnimationEnd, this);\n          this._add(control, {flex: 1});\n          break;\n\n        case \"button-begin\":\n          // Top/Left Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteBegin, this);\n          this._add(control);\n          break;\n\n        case \"button-end\":\n          // Bottom/Right Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteEnd, this);\n          this._add(control);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaximum : function(value) {\n      this.getChildControl(\"slider\").setMaximum(value);\n    },\n\n\n    // property apply\n    _applyPosition : function(value) {\n      this.getChildControl(\"slider\").setValue(value);\n    },\n\n\n    // property apply\n    _applyKnobFactor : function(value) {\n      this.getChildControl(\"slider\").setKnobFactor(value);\n    },\n\n\n    // property apply\n    _applyPageStep : function(value) {\n      this.getChildControl(\"slider\").setPageStep(value);\n    },\n\n\n    // property apply\n    _applyOrientation : function(value, old)\n    {\n      // Dispose old layout\n      var oldLayout = this._getLayout();\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n\n      // Reconfigure\n      if (value === \"horizontal\")\n      {\n        this._setLayout(new qx.ui.layout.HBox());\n\n        this.setAllowStretchX(true);\n        this.setAllowStretchY(false);\n\n        this.replaceState(\"vertical\", \"horizontal\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"up\", \"left\");\n        this.getChildControl(\"button-end\").replaceState(\"down\", \"right\");\n      }\n      else\n      {\n        this._setLayout(new qx.ui.layout.VBox());\n\n        this.setAllowStretchX(false);\n        this.setAllowStretchY(true);\n\n        this.replaceState(\"horizontal\", \"vertical\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"left\", \"up\");\n        this.getChildControl(\"button-end\").replaceState(\"right\", \"down\");\n      }\n\n      // Sync slider orientation\n      this.getChildControl(\"slider\").setOrientation(value);\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      METHOD REDIRECTION TO SLIDER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo : function(position, duration) {\n      this.getChildControl(\"slider\").slideTo(position, duration);\n    },\n\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy : function(offset, duration) {\n      this.getChildControl(\"slider\").slideBy(offset, duration);\n    },\n\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps : function(steps, duration) {\n      var size = this.getSingleStep();\n      this.getChildControl(\"slider\").slideBy(steps * size, duration);\n    },\n\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param position {Number} The new position.\n     */\n    updatePosition : function(position) {\n      this.getChildControl(\"slider\").updatePosition(position);\n    },\n\n\n    /**\n     * If a scroll animation is running, it will be stopped.\n     */\n    stopScrollAnimation : function() {\n      this.getChildControl(\"slider\").stopSlideAnimation();\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Executed when the up/left button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteBegin : function(e) {\n      this.scrollBy(-this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Executed when the down/right button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteEnd : function(e) {\n      this.scrollBy(this.getSingleStep(), 50);\n    },\n\n\n    /**\n     * Change listener for slider animation end.\n     */\n    _onSlideAnimationEnd : function() {\n      this.fireEvent(\"scrollAnimationEnd\");\n    },\n\n\n    /**\n     * Change listener for slider value changes.\n     *\n     * @param e {qx.event.type.Data} The change event object\n     */\n    _onChangeSliderValue : function(e) {\n      this.setPosition(e.getData());\n    },\n\n    /**\n     * Hide the knob of the slider if the slidebar is too small or show it\n     * otherwise.\n     *\n     * @param e {qx.event.type.Data} event object\n     */\n    _onResizeSlider : function(e)\n    {\n      var knob = this.getChildControl(\"slider\").getChildControl(\"knob\");\n      var knobHint = knob.getSizeHint();\n      var hideKnob = false;\n      var sliderSize = this.getChildControl(\"slider\").getInnerSize();\n\n      if (this.getOrientation() == \"vertical\")\n      {\n        if (sliderSize.height  < knobHint.minHeight + this.__offset) {\n          hideKnob = true;\n        }\n      }\n      else\n      {\n        if (sliderSize.width  < knobHint.minWidth + this.__offset) {\n          hideKnob = true;\n        }\n      }\n\n      if (hideKnob) {\n        knob.exclude();\n      } else {\n        knob.show();\n      }\n    }\n  }\n});\n"
  ]
}