{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "scroll",
    "IScrollBar",
    "construct",
    "orientation",
    "_createChildControl",
    "addListener",
    "_onResizeSlider",
    "setOrientation",
    "initOrientation",
    "e",
    "stopPropagation",
    "events",
    "scrollAnimationEnd",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "maximum",
    "position",
    "event",
    "singleStep",
    "pageStep",
    "knobFactor",
    "nullable",
    "members",
    "__offset",
    "__originalMinSize",
    "_computeSizeHint",
    "hint",
    "getOrientation",
    "minWidth",
    "minHeight",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "horizontal",
    "getChildControl",
    "setVisibility",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "ScrollSlider",
    "setPageStep",
    "setFocusable",
    "_onChangeSliderValue",
    "_onSlideAnimationEnd",
    "_add",
    "flex",
    "form",
    "RepeatButton",
    "_onExecuteBegin",
    "_onExecuteEnd",
    "_applyMaximum",
    "value",
    "setMaximum",
    "_applyPosition",
    "setValue",
    "_applyKnobFactor",
    "setKnobFactor",
    "_applyPageStep",
    "_applyOrientation",
    "old",
    "getContentElement",
    "setAttribute",
    "oldLayout",
    "_getLayout",
    "dispose",
    "_setLayout",
    "layout",
    "HBox",
    "setAllowStretchX",
    "setAllowStretchY",
    "replaceState",
    "VBox",
    "scrollTo",
    "duration",
    "slideTo",
    "scrollBy",
    "offset",
    "slideBy",
    "scrollBySteps",
    "steps",
    "size",
    "getSingleStep",
    "updatePosition",
    "stopScrollAnimation",
    "stopSlideAnimation",
    "fireEvent",
    "setPosition",
    "getData",
    "knob",
    "knobHint",
    "getSizeHint",
    "hideKnob",
    "sliderSize",
    "getInnerSize",
    "exclude",
    "show",
    "ScrollBar"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/scroll/ScrollBar.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The scroll bar widget, is a special slider, which is used in qooxdoo instead\n * of the native browser scroll bars.\n *\n * Scroll bars are used by the {@link qx.ui.container.Scroll} container. Usually\n * a scroll bar is not used directly.\n *\n * @childControl slider {qx.ui.core.scroll.ScrollSlider} scroll slider component\n * @childControl button-begin {qx.ui.form.RepeatButton} button to scroll to top\n * @childControl button-end {qx.ui.form.RepeatButton} button to scroll to bottom\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var scrollBar = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n *   scrollBar.set({\n *     maximum: 500\n *   })\n *   this.getRoot().add(scrollBar);\n * </pre>\n *\n * This example creates a horizontal scroll bar with a maximum value of 500.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/scrollbar.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.core.scroll.ScrollBar\", {\n  extend: qx.ui.core.Widget,\n  implement: qx.ui.core.scroll.IScrollBar,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param orientation {String?\"horizontal\"} The initial scroll bar orientation\n   */\n  construct(orientation) {\n    super();\n\n    // Create child controls\n    this._createChildControl(\"button-begin\");\n    this._createChildControl(\"slider\").addListener(\n      \"resize\",\n      this._onResizeSlider,\n      this\n    );\n\n    this._createChildControl(\"button-end\");\n\n    // Configure orientation\n    if (orientation != null) {\n      this.setOrientation(orientation);\n    } else {\n      this.initOrientation();\n    }\n\n    // prevent drag & drop on scrolling\n    this.addListener(\"track\", e => {\n      e.stopPropagation();\n    });\n  },\n\n  events: {\n    /** Change event for the value. */\n    scrollAnimationEnd: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"scrollbar\"\n    },\n\n    /**\n     * The scroll bar orientation\n     */\n    orientation: {\n      check: [\"horizontal\", \"vertical\"],\n      init: \"horizontal\",\n      apply: \"_applyOrientation\"\n    },\n\n    /**\n     * The maximum value (difference between available size and\n     * content size).\n     */\n    maximum: {\n      check: \"PositiveInteger\",\n      apply: \"_applyMaximum\",\n      init: 100\n    },\n\n    /**\n     * Position of the scrollbar (which means the scroll left/top of the\n     * attached area's pane)\n     *\n     * Strictly validates according to {@link #maximum}.\n     * Does not apply any correction to the incoming value. If you depend\n     * on this, please use {@link #scrollTo} instead.\n     */\n    position: {\n      check: \"qx.lang.Type.isNumber(value)&&value>=0&&value<=this.getMaximum()\",\n      init: 0,\n      apply: \"_applyPosition\",\n      event: \"scroll\"\n    },\n\n    /**\n     * Step size for each tap on the up/down or left/right buttons.\n     */\n    singleStep: {\n      check: \"Integer\",\n      init: 20\n    },\n\n    /**\n     * The amount to increment on each event. Typically corresponds\n     * to the user pressing <code>PageUp</code> or <code>PageDown</code>.\n     */\n    pageStep: {\n      check: \"Integer\",\n      init: 10,\n      apply: \"_applyPageStep\"\n    },\n\n    /**\n     * Factor to apply to the width/height of the knob in relation\n     * to the dimension of the underlying area.\n     */\n    knobFactor: {\n      check: \"PositiveNumber\",\n      apply: \"_applyKnobFactor\",\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __offset: 2,\n    __originalMinSize: 0,\n\n    // overridden\n    _computeSizeHint() {\n      var hint = super._computeSizeHint();\n      if (this.getOrientation() === \"horizontal\") {\n        this.__originalMinSize = hint.minWidth;\n        hint.minWidth = 0;\n      } else {\n        this.__originalMinSize = hint.minHeight;\n        hint.minHeight = 0;\n      }\n      return hint;\n    },\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var changes = super.renderLayout(left, top, width, height);\n      var horizontal = this.getOrientation() === \"horizontal\";\n      if (this.__originalMinSize >= (horizontal ? width : height)) {\n        this.getChildControl(\"button-begin\").setVisibility(\"hidden\");\n        this.getChildControl(\"button-end\").setVisibility(\"hidden\");\n      } else {\n        this.getChildControl(\"button-begin\").setVisibility(\"visible\");\n        this.getChildControl(\"button-end\").setVisibility(\"visible\");\n      }\n\n      return changes;\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"slider\":\n          control = new qx.ui.core.scroll.ScrollSlider();\n          control.setPageStep(100);\n          control.setFocusable(false);\n          control.addListener(\"changeValue\", this._onChangeSliderValue, this);\n          control.addListener(\n            \"slideAnimationEnd\",\n            this._onSlideAnimationEnd,\n            this\n          );\n\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"button-begin\":\n          // Top/Left Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteBegin, this);\n          this._add(control);\n          break;\n\n        case \"button-end\":\n          // Bottom/Right Button\n          control = new qx.ui.form.RepeatButton();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onExecuteEnd, this);\n          this._add(control);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyMaximum(value) {\n      this.getChildControl(\"slider\").setMaximum(value);\n    },\n\n    // property apply\n    _applyPosition(value) {\n      this.getChildControl(\"slider\").setValue(value);\n    },\n\n    // property apply\n    _applyKnobFactor(value) {\n      this.getChildControl(\"slider\").setKnobFactor(value);\n    },\n\n    // property apply\n    _applyPageStep(value) {\n      this.getChildControl(\"slider\").setPageStep(value);\n    },\n\n    // property apply\n    _applyOrientation(value, old) {\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-orientation\", value);\n\n      // Dispose old layout\n      var oldLayout = this._getLayout();\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n\n      // Reconfigure\n      if (value === \"horizontal\") {\n        this._setLayout(new qx.ui.layout.HBox());\n\n        this.setAllowStretchX(true);\n        this.setAllowStretchY(false);\n\n        this.replaceState(\"vertical\", \"horizontal\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"up\", \"left\");\n        this.getChildControl(\"button-end\").replaceState(\"down\", \"right\");\n      } else {\n        this._setLayout(new qx.ui.layout.VBox());\n\n        this.setAllowStretchX(false);\n        this.setAllowStretchY(true);\n\n        this.replaceState(\"horizontal\", \"vertical\");\n\n        this.getChildControl(\"button-begin\").replaceState(\"left\", \"up\");\n        this.getChildControl(\"button-end\").replaceState(\"right\", \"down\");\n      }\n\n      // Sync slider orientation\n      this.getChildControl(\"slider\").setOrientation(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      METHOD REDIRECTION TO SLIDER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Scrolls to the given position.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param position {Integer} Scroll to this position. Must be greater zero.\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollTo(position, duration) {\n      this.getChildControl(\"slider\").slideTo(position, duration);\n    },\n\n    /**\n     * Scrolls by the given offset.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param offset {Integer} Scroll by this offset\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBy(offset, duration) {\n      this.getChildControl(\"slider\").slideBy(offset, duration);\n    },\n\n    /**\n     * Scrolls by the given number of steps.\n     *\n     * This method automatically corrects the given position to respect\n     * the {@link #maximum}.\n     *\n     * @param steps {Integer} Number of steps\n     * @param duration {Number} The time in milliseconds the slide to should take.\n     */\n    scrollBySteps(steps, duration) {\n      var size = this.getSingleStep();\n      this.getChildControl(\"slider\").slideBy(steps * size, duration);\n    },\n\n    /**\n     * Updates the position property considering the minimum and maximum values.\n     * @param position {Number} The new position.\n     */\n    updatePosition(position) {\n      this.getChildControl(\"slider\").updatePosition(position);\n    },\n\n    /**\n     * If a scroll animation is running, it will be stopped.\n     */\n    stopScrollAnimation() {\n      this.getChildControl(\"slider\").stopSlideAnimation();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Executed when the up/left button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteBegin(e) {\n      this.scrollBy(-this.getSingleStep(), 50);\n    },\n\n    /**\n     * Executed when the down/right button is executed (pressed)\n     *\n     * @param e {qx.event.type.Event} Execute event of the button\n     */\n    _onExecuteEnd(e) {\n      this.scrollBy(this.getSingleStep(), 50);\n    },\n\n    /**\n     * Change listener for slider animation end.\n     */\n    _onSlideAnimationEnd() {\n      this.fireEvent(\"scrollAnimationEnd\");\n    },\n\n    /**\n     * Change listener for slider value changes.\n     *\n     * @param e {qx.event.type.Data} The change event object\n     */\n    _onChangeSliderValue(e) {\n      this.setPosition(e.getData());\n    },\n\n    /**\n     * Hide the knob of the slider if the slidebar is too small or show it\n     * otherwise.\n     *\n     * @param e {qx.event.type.Data} event object\n     */\n    _onResizeSlider(e) {\n      var knob = this.getChildControl(\"slider\").getChildControl(\"knob\");\n      var knobHint = knob.getSizeHint();\n      var hideKnob = false;\n      var sliderSize = this.getChildControl(\"slider\").getInnerSize();\n\n      if (this.getOrientation() == \"vertical\") {\n        if (sliderSize.height < knobHint.minHeight + this.__offset) {\n          hideKnob = true;\n        }\n      } else {\n        if (sliderSize.width < knobHint.minWidth + this.__offset) {\n          hideKnob = true;\n        }\n      }\n\n      if (hideKnob) {\n        knob.exclude();\n      } else {\n        knob.show();\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}