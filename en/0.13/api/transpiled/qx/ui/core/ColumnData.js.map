{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "construct",
    "setColumnWidth",
    "members",
    "__computedWidth",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "getComputedWidth",
    "getFlex",
    "getLayoutProperties",
    "flex",
    "percent",
    "setWidth",
    "match",
    "parseFloat",
    "setLayoutProperties",
    "environment",
    "ColumnData"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/ColumnData.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * All of the resizing information about a column.\n *\n *  This is used internally by qx.ui.table and qx.ui.progressive's table and\n *  may be used for other widgets as well.\n */\nqx.Class.define(\"qx.ui.core.ColumnData\", {\n  extend: qx.ui.core.LayoutItem,\n\n  construct() {\n    super();\n    this.setColumnWidth(\"auto\");\n  },\n\n  members: {\n    __computedWidth: null,\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      this.__computedWidth = width;\n    },\n\n    /**\n     * Get the computed width of the column.\n     * @return {Integer} Computed column width\n     */\n    getComputedWidth() {\n      return this.__computedWidth;\n    },\n\n    /**\n     * Get the column's flex value\n     *\n     * @return {Integer} The column's flex value\n     */\n    getFlex() {\n      return this.getLayoutProperties().flex || 0;\n    },\n\n    /**\n     * Set the column width. The column width can be one of the following\n     * values:\n     *\n     * * Pixels: e.g. <code>23</code>\n     * * Autosized: <code>\"auto\"</code>\n     * * Flex: e.g. <code>\"1*\"</code>\n     * * Percent: e.g. <code>\"33%\"</code>\n     *\n     * @param width {Integer|String} The column width\n     * @param flex {Integer?0} Optional flex value of the column\n     */\n    setColumnWidth(width, flex) {\n      var flex = flex || 0;\n      var percent = null;\n\n      if (typeof width == \"number\") {\n        this.setWidth(width);\n      } else if (typeof width == \"string\") {\n        if (width == \"auto\") {\n          flex = 1;\n        } else {\n          var match = width.match(/^[0-9]+(?:\\.[0-9]+)?([%\\*])$/);\n          if (match) {\n            if (match[1] == \"*\") {\n              flex = parseFloat(width);\n            } else {\n              percent = width;\n            }\n          }\n        }\n      }\n      this.setLayoutProperties({\n        flex: flex,\n        width: percent\n      });\n    }\n  },\n\n  environment: {\n    \"qx.tableResizeDebug\": false\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;IACvCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,UADoB;IAGvCC,SAHuC,uBAG3B;MACV;MACA,KAAKC,cAAL,CAAoB,MAApB;IACD,CANsC;IAQvCC,OAAO,EAAE;MACPC,SAAe,EAAE,IADV;MAGP;MACAC,YAJO,wBAIMC,IAJN,EAIYC,GAJZ,EAIiBC,KAJjB,EAIwBC,MAJxB,EAIgC;QACrC,KAAKL,SAAL,GAAuBI,KAAvB;MACD,CANM;;MAQP;AACJ;AACA;AACA;MACIE,gBAZO,8BAYY;QACjB,OAAO,KAAKN,SAAZ;MACD,CAdM;;MAgBP;AACJ;AACA;AACA;AACA;MACIO,OArBO,qBAqBG;QACR,OAAO,KAAKC,mBAAL,GAA2BC,IAA3B,IAAmC,CAA1C;MACD,CAvBM;;MAyBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIX,cArCO,0BAqCQM,KArCR,EAqCeK,IArCf,EAqCqB;QAC1B,IAAIA,IAAI,GAAGA,IAAI,IAAI,CAAnB;QACA,IAAIC,OAAO,GAAG,IAAd;;QAEA,IAAI,OAAON,KAAP,IAAgB,QAApB,EAA8B;UAC5B,KAAKO,QAAL,CAAcP,KAAd;QACD,CAFD,MAEO,IAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;UACnC,IAAIA,KAAK,IAAI,MAAb,EAAqB;YACnBK,IAAI,GAAG,CAAP;UACD,CAFD,MAEO;YACL,IAAIG,KAAK,GAAGR,KAAK,CAACQ,KAAN,CAAY,8BAAZ,CAAZ;;YACA,IAAIA,KAAJ,EAAW;cACT,IAAIA,KAAK,CAAC,CAAD,CAAL,IAAY,GAAhB,EAAqB;gBACnBH,IAAI,GAAGI,UAAU,CAACT,KAAD,CAAjB;cACD,CAFD,MAEO;gBACLM,OAAO,GAAGN,KAAV;cACD;YACF;UACF;QACF;;QACD,KAAKU,mBAAL,CAAyB;UACvBL,IAAI,EAAEA,IADiB;UAEvBL,KAAK,EAAEM;QAFgB,CAAzB;MAID;IA7DM,CAR8B;IAwEvCK,WAAW,EAAE;MACX,uBAAuB;IADZ;EAxE0B,CAAzC;EAzBA5B,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWqB,UAAX,CAAsB1B,aAAtB,GAAsCA,aAAtC"
}