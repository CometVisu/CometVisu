{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "construct",
    "constructor",
    "call",
    "setColumnWidth",
    "members",
    "__computedWidth",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "getComputedWidth",
    "getFlex",
    "getLayoutProperties",
    "flex",
    "percent",
    "setWidth",
    "match",
    "parseFloat",
    "setLayoutProperties",
    "environment",
    "ColumnData"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/ColumnData.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007-2008 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * All of the resizing information about a column.\r\n *\r\n *  This is used internally by qx.ui.table and qx.ui.progressive's table and\r\n *  may be used for other widgets as well.\r\n */\r\nqx.Class.define(\"qx.ui.core.ColumnData\", {\r\n  extend: qx.ui.core.LayoutItem,\r\n\r\n  construct() {\r\n    super();\r\n    this.setColumnWidth(\"auto\");\r\n  },\r\n\r\n  members: {\r\n    __computedWidth: null,\r\n\r\n    // overridden\r\n    renderLayout(left, top, width, height) {\r\n      this.__computedWidth = width;\r\n    },\r\n\r\n    /**\r\n     * Get the computed width of the column.\r\n     * @return {Integer} Computed column width\r\n     */\r\n    getComputedWidth() {\r\n      return this.__computedWidth;\r\n    },\r\n\r\n    /**\r\n     * Get the column's flex value\r\n     *\r\n     * @return {Integer} The column's flex value\r\n     */\r\n    getFlex() {\r\n      return this.getLayoutProperties().flex || 0;\r\n    },\r\n\r\n    /**\r\n     * Set the column width. The column width can be one of the following\r\n     * values:\r\n     *\r\n     * * Pixels: e.g. <code>23</code>\r\n     * * Autosized: <code>\"auto\"</code>\r\n     * * Flex: e.g. <code>\"1*\"</code>\r\n     * * Percent: e.g. <code>\"33%\"</code>\r\n     *\r\n     * @param width {Integer|String} The column width\r\n     * @param flex {Integer?0} Optional flex value of the column\r\n     */\r\n    setColumnWidth(width, flex) {\r\n      var flex = flex || 0;\r\n      var percent = null;\r\n\r\n      if (typeof width == \"number\") {\r\n        this.setWidth(width);\r\n      } else if (typeof width == \"string\") {\r\n        if (width == \"auto\") {\r\n          flex = 1;\r\n        } else {\r\n          var match = width.match(/^[0-9]+(?:\\.[0-9]+)?([%\\*])$/);\r\n          if (match) {\r\n            if (match[1] == \"*\") {\r\n              flex = parseFloat(width);\r\n            } else {\r\n              percent = width;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.setLayoutProperties({\r\n        flex: flex,\r\n        width: percent\r\n      });\r\n    }\r\n  },\r\n\r\n  environment: {\r\n    \"qx.tableResizeDebug\": false\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,uBAAuB,EAAE;IACvCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,UAAU;IAE7BC,SAAS,WAAAA,UAAA,EAAG;MACVV,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAE,WAAA,CAAAC,IAAA;MACA,IAAI,CAACC,cAAc,CAAC,MAAM,CAAC;IAC7B,CAAC;IAEDC,OAAO,EAAE;MACPC,SAAe,EAAE,IAAI;MAErB;MACAC,YAAY,WAAAA,aAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;QACrC,IAAI,CAACL,SAAe,GAAGI,KAAK;MAC9B,CAAC;MAED;AACJ;AACA;AACA;MACIE,gBAAgB,WAAAA,iBAAA,EAAG;QACjB,OAAO,IAAI,CAACN,SAAe;MAC7B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIO,OAAO,WAAAA,QAAA,EAAG;QACR,OAAO,IAAI,CAACC,mBAAmB,CAAC,CAAC,CAACC,IAAI,IAAI,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIX,cAAc,WAAAA,eAACM,KAAK,EAAEK,IAAI,EAAE;QAC1B,IAAIA,IAAI,GAAGA,IAAI,IAAI,CAAC;QACpB,IAAIC,OAAO,GAAG,IAAI;QAElB,IAAI,OAAON,KAAK,IAAI,QAAQ,EAAE;UAC5B,IAAI,CAACO,QAAQ,CAACP,KAAK,CAAC;QACtB,CAAC,MAAM,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAE;UACnC,IAAIA,KAAK,IAAI,MAAM,EAAE;YACnBK,IAAI,GAAG,CAAC;UACV,CAAC,MAAM;YACL,IAAIG,KAAK,GAAGR,KAAK,CAACQ,KAAK,CAAC,8BAA8B,CAAC;YACvD,IAAIA,KAAK,EAAE;cACT,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;gBACnBH,IAAI,GAAGI,UAAU,CAACT,KAAK,CAAC;cAC1B,CAAC,MAAM;gBACLM,OAAO,GAAGN,KAAK;cACjB;YACF;UACF;QACF;QACA,IAAI,CAACU,mBAAmB,CAAC;UACvBL,IAAI,EAAEA,IAAI;UACVL,KAAK,EAAEM;QACT,CAAC,CAAC;MACJ;IACF,CAAC;IAEDK,WAAW,EAAE;MACX,qBAAqB,EAAE;IACzB;EACF,CAAC,CAAC;EApGF9B,EAAE,CAACO,EAAE,CAACC,IAAI,CAACuB,UAAU,CAAC5B,aAAa,GAAGA,aAAa;AAAC"
}