{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "contentPaddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "contentPaddingRight",
    "contentPaddingBottom",
    "contentPaddingLeft",
    "contentPadding",
    "group",
    "mode",
    "members",
    "__contentPaddingSetter",
    "__contentPaddingThemedSetter",
    "__contentPaddingResetter",
    "_applyContentPadding",
    "value",
    "old",
    "name",
    "variant",
    "target",
    "_getContentPaddingTarget",
    "resetter",
    "setter",
    "ui",
    "core",
    "MContentPadding"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MContentPadding.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This mixin defines the <code>contentPadding</code> property, which is used\r\n * by widgets like the window or group box, which must have a property, which\r\n * defines the padding of an inner pane.\r\n *\r\n * The including class must implement the method\r\n * <code>_getContentPaddingTarget</code>, which must return the widget on which\r\n * the padding should be applied.\r\n */\r\nqx.Mixin.define(\"qx.ui.core.MContentPadding\", {\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** Top padding of the content pane */\r\n    contentPaddingTop: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyContentPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Right padding of the content pane */\r\n    contentPaddingRight: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyContentPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Bottom padding of the content pane */\r\n    contentPaddingBottom: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyContentPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Left padding of the content pane */\r\n    contentPaddingLeft: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyContentPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The 'contentPadding' property is a shorthand property for setting 'contentPaddingTop',\r\n     * 'contentPaddingRight', 'contentPaddingBottom' and 'contentPaddingLeft'\r\n     * at the same time.\r\n     *\r\n     * If four values are specified they apply to top, right, bottom and left respectively.\r\n     * If there is only one value, it applies to all sides, if there are two or three,\r\n     * the missing values are taken from the opposite side.\r\n     */\r\n    contentPadding: {\r\n      group: [\r\n        \"contentPaddingTop\",\r\n        \"contentPaddingRight\",\r\n        \"contentPaddingBottom\",\r\n        \"contentPaddingLeft\"\r\n      ],\r\n\r\n      mode: \"shorthand\",\r\n      themeable: true\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    /**\r\n     * @type {Map} Maps property names of content padding to the setter of the padding\r\n     *\r\n     * @lint ignoreReferenceField(__contentPaddingSetter)\r\n     */\r\n    __contentPaddingSetter: {\r\n      contentPaddingTop: \"setPaddingTop\",\r\n      contentPaddingRight: \"setPaddingRight\",\r\n      contentPaddingBottom: \"setPaddingBottom\",\r\n      contentPaddingLeft: \"setPaddingLeft\"\r\n    },\r\n\r\n    /**\r\n     * @type {Map} Maps property names of content padding to the themed setter of the padding\r\n     *\r\n     * @lint ignoreReferenceField(__contentPaddingThemedSetter)\r\n     */\r\n    __contentPaddingThemedSetter: {\r\n      contentPaddingTop: \"setThemedPaddingTop\",\r\n      contentPaddingRight: \"setThemedPaddingRight\",\r\n      contentPaddingBottom: \"setThemedPaddingBottom\",\r\n      contentPaddingLeft: \"setThemedPaddingLeft\"\r\n    },\r\n\r\n    /**\r\n     * @type {Map} Maps property names of content padding to the resetter of the padding\r\n     *\r\n     * @lint ignoreReferenceField(__contentPaddingResetter)\r\n     */\r\n    __contentPaddingResetter: {\r\n      contentPaddingTop: \"resetPaddingTop\",\r\n      contentPaddingRight: \"resetPaddingRight\",\r\n      contentPaddingBottom: \"resetPaddingBottom\",\r\n      contentPaddingLeft: \"resetPaddingLeft\"\r\n    },\r\n\r\n    // property apply\r\n    _applyContentPadding(value, old, name, variant) {\r\n      var target = this._getContentPaddingTarget();\r\n\r\n      if (value == null) {\r\n        var resetter = this.__contentPaddingResetter[name];\r\n        target[resetter]();\r\n      } else {\r\n        // forward the themed sates if case the apply was invoked by a theme\r\n        if (variant == \"setThemed\" || variant == \"resetThemed\") {\r\n          var setter = this.__contentPaddingThemedSetter[name];\r\n          target[setter](value);\r\n        } else {\r\n          var setter = this.__contentPaddingSetter[name];\r\n          target[setter](value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}