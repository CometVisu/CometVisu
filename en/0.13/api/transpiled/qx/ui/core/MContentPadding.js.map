{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "contentPaddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "contentPaddingRight",
    "contentPaddingBottom",
    "contentPaddingLeft",
    "contentPadding",
    "group",
    "mode",
    "members",
    "__contentPaddingSetter",
    "__contentPaddingThemedSetter",
    "__contentPaddingResetter",
    "_applyContentPadding",
    "value",
    "old",
    "name",
    "variant",
    "target",
    "_getContentPaddingTarget",
    "resetter",
    "setter",
    "ui",
    "core",
    "MContentPadding"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MContentPadding.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin defines the <code>contentPadding</code> property, which is used\n * by widgets like the window or group box, which must have a property, which\n * defines the padding of an inner pane.\n *\n * The including class must implement the method\n * <code>_getContentPaddingTarget</code>, which must return the widget on which\n * the padding should be applied.\n */\nqx.Mixin.define(\"qx.ui.core.MContentPadding\", {\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Top padding of the content pane */\n    contentPaddingTop: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyContentPadding\",\n      themeable: true\n    },\n\n    /** Right padding of the content pane */\n    contentPaddingRight: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyContentPadding\",\n      themeable: true\n    },\n\n    /** Bottom padding of the content pane */\n    contentPaddingBottom: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyContentPadding\",\n      themeable: true\n    },\n\n    /** Left padding of the content pane */\n    contentPaddingLeft: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyContentPadding\",\n      themeable: true\n    },\n\n    /**\n     * The 'contentPadding' property is a shorthand property for setting 'contentPaddingTop',\n     * 'contentPaddingRight', 'contentPaddingBottom' and 'contentPaddingLeft'\n     * at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    contentPadding: {\n      group: [\n        \"contentPaddingTop\",\n        \"contentPaddingRight\",\n        \"contentPaddingBottom\",\n        \"contentPaddingLeft\"\n      ],\n\n      mode: \"shorthand\",\n      themeable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /**\n     * @type {Map} Maps property names of content padding to the setter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingSetter)\n     */\n    __contentPaddingSetter: {\n      contentPaddingTop: \"setPaddingTop\",\n      contentPaddingRight: \"setPaddingRight\",\n      contentPaddingBottom: \"setPaddingBottom\",\n      contentPaddingLeft: \"setPaddingLeft\"\n    },\n\n    /**\n     * @type {Map} Maps property names of content padding to the themed setter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingThemedSetter)\n     */\n    __contentPaddingThemedSetter: {\n      contentPaddingTop: \"setThemedPaddingTop\",\n      contentPaddingRight: \"setThemedPaddingRight\",\n      contentPaddingBottom: \"setThemedPaddingBottom\",\n      contentPaddingLeft: \"setThemedPaddingLeft\"\n    },\n\n    /**\n     * @type {Map} Maps property names of content padding to the resetter of the padding\n     *\n     * @lint ignoreReferenceField(__contentPaddingResetter)\n     */\n    __contentPaddingResetter: {\n      contentPaddingTop: \"resetPaddingTop\",\n      contentPaddingRight: \"resetPaddingRight\",\n      contentPaddingBottom: \"resetPaddingBottom\",\n      contentPaddingLeft: \"resetPaddingLeft\"\n    },\n\n    // property apply\n    _applyContentPadding(value, old, name, variant) {\n      var target = this._getContentPaddingTarget();\n\n      if (value == null) {\n        var resetter = this.__contentPaddingResetter[name];\n        target[resetter]();\n      } else {\n        // forward the themed sates if case the apply was invoked by a theme\n        if (variant == \"setThemed\" || variant == \"resetThemed\") {\n          var setter = this.__contentPaddingThemedSetter[name];\n          target[setter](value);\n        } else {\n          var setter = this.__contentPaddingSetter[name];\n          target[setter](value);\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}