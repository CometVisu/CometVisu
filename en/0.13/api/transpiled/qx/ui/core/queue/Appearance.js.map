{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__queue",
    "__lookup",
    "remove",
    "widget",
    "toHashCode",
    "lang",
    "Array",
    "add",
    "unshift",
    "ui",
    "core",
    "queue",
    "Manager",
    "scheduleFlush",
    "has",
    "flush",
    "Visibility",
    "obj",
    "i",
    "length",
    "splice",
    "isVisible",
    "syncAppearance",
    "$$stateChanges",
    "Appearance"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Appearance.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The AppearanceQueue registers all widgets which are influences through\r\n * state changes.\r\n */\r\nqx.Class.define(\"qx.ui.core.queue.Appearance\", {\r\n  statics: {\r\n    /** @type {Array} This contains all the queued widgets for the next flush. */\r\n    __queue: [],\r\n\r\n    /** @type {Map} map of widgets by hash code which are in the queue */\r\n    __lookup: {},\r\n\r\n    /**\r\n     * Clears the widget from the internal queue. Normally only used\r\n     * during interims disposes of one or a few widgets.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to clear\r\n     */\r\n    remove(widget) {\r\n      if (this.__lookup[widget.toHashCode()]) {\r\n        qx.lang.Array.remove(this.__queue, widget);\r\n        delete this.__lookup[widget.toHashCode()];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds a widget to the queue.\r\n     *\r\n     * Should only be used by {@link qx.ui.core.Widget}.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to add.\r\n     */\r\n    add(widget) {\r\n      if (this.__lookup[widget.toHashCode()]) {\r\n        return;\r\n      }\r\n\r\n      this.__queue.unshift(widget);\r\n      this.__lookup[widget.toHashCode()] = widget;\r\n      qx.ui.core.queue.Manager.scheduleFlush(\"appearance\");\r\n    },\r\n\r\n    /**\r\n     * Whether the given widget is already queued\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to check\r\n     * @return {Boolean} <code>true</code> if the widget is queued\r\n     */\r\n    has(widget) {\r\n      return !!this.__lookup[widget.toHashCode()];\r\n    },\r\n\r\n    /**\r\n     * Flushes the appearance queue.\r\n     *\r\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\r\n     */\r\n    flush() {\r\n      var Visibility = qx.ui.core.queue.Visibility;\r\n\r\n      var queue = this.__queue;\r\n      var obj;\r\n\r\n      for (var i = queue.length - 1; i >= 0; i--) {\r\n        // Order is important to allow the same widget to be re-queued directly\r\n        obj = queue[i];\r\n        queue.splice(i, 1);\r\n        delete this.__lookup[obj.toHashCode()];\r\n\r\n        // Only apply to currently visible widgets\r\n        if (Visibility.isVisible(obj)) {\r\n          obj.syncAppearance();\r\n        } else {\r\n          obj.$$stateChanges = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,6BAA6B,EAAE;IAC7CC,OAAO,EAAE;MACP;MACAC,SAAO,EAAE,EAAE;MAEX;MACAC,SAAQ,EAAE,CAAC,CAAC;MAEZ;AACJ;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,MAAM,EAAE;QACb,IAAI,IAAI,CAACF,SAAQ,CAACE,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE;UACtCX,EAAE,CAACY,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,IAAI,CAACF,SAAO,EAAEG,MAAM,CAAC;UAC1C,OAAO,IAAI,CAACF,SAAQ,CAACE,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;QAC3C;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIG,GAAG,WAAAA,IAACJ,MAAM,EAAE;QACV,IAAI,IAAI,CAACF,SAAQ,CAACE,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE;UACtC;QACF;QAEA,IAAI,CAACJ,SAAO,CAACQ,OAAO,CAACL,MAAM,CAAC;QAC5B,IAAI,CAACF,SAAQ,CAACE,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,GAAGD,MAAM;QAC3CV,EAAE,CAACgB,EAAE,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,aAAa,CAAC,YAAY,CAAC;MACtD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACX,MAAM,EAAE;QACV,OAAO,CAAC,CAAC,IAAI,CAACF,SAAQ,CAACE,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;MAC7C,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIW,KAAK,WAAAA,MAAA,EAAG;QACN,IAAIC,UAAU,GAAGvB,EAAE,CAACgB,EAAE,CAACC,IAAI,CAACC,KAAK,CAACK,UAAU;QAE5C,IAAIL,KAAK,GAAG,IAAI,CAACX,SAAO;QACxB,IAAIiB,GAAG;QAEP,KAAK,IAAIC,CAAC,GAAGP,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1C;UACAD,GAAG,GAAGN,KAAK,CAACO,CAAC,CAAC;UACdP,KAAK,CAACS,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;UAClB,OAAO,IAAI,CAACjB,SAAQ,CAACgB,GAAG,CAACb,UAAU,CAAC,CAAC,CAAC;;UAEtC;UACA,IAAIY,UAAU,CAACK,SAAS,CAACJ,GAAG,CAAC,EAAE;YAC7BA,GAAG,CAACK,cAAc,CAAC,CAAC;UACtB,CAAC,MAAM;YACLL,GAAG,CAACM,cAAc,GAAG,IAAI;UAC3B;QACF;MACF;IACF;EACF,CAAC,CAAC;EAjGF9B,EAAE,CAACgB,EAAE,CAACC,IAAI,CAACC,KAAK,CAACa,UAAU,CAAC5B,aAAa,GAAGA,aAAa;AAAC"
}