{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__queue",
    "__jobs",
    "remove",
    "widget",
    "job",
    "queue",
    "includes",
    "hash",
    "toHashCode",
    "lang",
    "Array",
    "Object",
    "getLength",
    "add",
    "unshift",
    "ui",
    "core",
    "Manager",
    "scheduleFlush",
    "flush",
    "obj",
    "jobs",
    "i",
    "length",
    "splice",
    "syncWidget",
    "Widget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n     * Mustafa Sak (msak)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The widget queue handles the deferred computation of certain widget properties.\r\n * It is used e.g. for the tree to update the indentation of tree nodes.\r\n *\r\n * This queue calls the method {@link qx.ui.core.Widget#syncWidget} of each\r\n * queued widget before the layout queues are processed.\r\n */\r\nqx.Class.define(\"qx.ui.core.queue.Widget\", {\r\n  statics: {\r\n    /** @type {Array} This contains all the queued widgets for the next flush. */\r\n    __queue: [],\r\n\r\n    /**\r\n     * @type {Object} This contains a map of widgets hash ($$hash) and their\r\n     * corresponding map of jobs.\r\n     */\r\n    __jobs: {},\r\n\r\n    /**\r\n     * Clears given job of a widget from the internal queue. If no jobs left, the\r\n     * widget will be removed completely from queue. If job param is <code>null</code>\r\n     * or <code>undefined</code> widget will be removed completely from queue.\r\n     * Normally only used during interims disposes of one or a few widgets.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to clear\r\n     * @param job {String?} Job identifier. If not used, it will be converted to\r\n     * \"$$default\".\r\n     */\r\n    remove(widget, job) {\r\n      var queue = this.__queue;\r\n\r\n      if (!queue.includes(widget)) {\r\n        return;\r\n      }\r\n\r\n      var hash = widget.toHashCode();\r\n\r\n      // remove widget and all corresponding jobs, if job param is not given.\r\n      if (job == null) {\r\n        qx.lang.Array.remove(queue, widget);\r\n        delete this.__jobs[hash];\r\n        return;\r\n      }\r\n\r\n      if (this.__jobs[hash]) {\r\n        delete this.__jobs[hash][job];\r\n\r\n        if (qx.lang.Object.getLength(this.__jobs[hash]) == 0) {\r\n          qx.lang.Array.remove(queue, widget);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds a widget to the queue. The second param can be used to identify\r\n     * several jobs. You can add one job at once, which will be returned as\r\n     * an map at flushing on method {@link qx.ui.core.Widget#syncWidget}.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to add.\r\n     * @param job {String?} Job identifier. If not used, it will be converted to\r\n     * \"$$default\".\r\n     */\r\n    add(widget, job) {\r\n      var queue = this.__queue;\r\n      //add widget if not containing\r\n      if (!queue.includes(widget)) {\r\n        queue.unshift(widget);\r\n      }\r\n\r\n      //add job\r\n      if (job == null) {\r\n        job = \"$$default\";\r\n      }\r\n      var hash = widget.toHashCode();\r\n      if (!this.__jobs[hash]) {\r\n        this.__jobs[hash] = {};\r\n      }\r\n      this.__jobs[hash][job] = true;\r\n\r\n      qx.ui.core.queue.Manager.scheduleFlush(\"widget\");\r\n    },\r\n\r\n    /**\r\n     * Flushes the widget queue.\r\n     *\r\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\r\n     */\r\n    flush() {\r\n      // Process all registered widgets\r\n      var queue = this.__queue;\r\n      var obj, jobs;\r\n      for (var i = queue.length - 1; i >= 0; i--) {\r\n        // Order is important to allow the same widget to be requeued directly\r\n        obj = queue[i];\r\n        jobs = this.__jobs[obj.toHashCode()];\r\n\r\n        queue.splice(i, 1);\r\n        obj.syncWidget(jobs);\r\n      }\r\n\r\n      // Empty check\r\n      if (queue.length != 0) {\r\n        return;\r\n      }\r\n\r\n      // Recreate the array is cheaper compared to keep a sparse array over time\r\n      this.__queue = [];\r\n      this.__jobs = {};\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,OAAO,EAAE;MACP;MACAC,SAAO,EAAE,EAAE;MAEX;AACJ;AACA;AACA;MACIC,SAAM,EAAE,CAAC,CAAC;MAEV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,MAAM,EAAEC,GAAG,EAAE;QAClB,IAAIC,KAAK,GAAG,IAAI,CAACL,SAAO;QAExB,IAAI,CAACK,KAAK,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;UAC3B;QACF;QAEA,IAAII,IAAI,GAAGJ,MAAM,CAACK,UAAU,CAAC,CAAC;;QAE9B;QACA,IAAIJ,GAAG,IAAI,IAAI,EAAE;UACfX,EAAE,CAACgB,IAAI,CAACC,KAAK,CAACR,MAAM,CAACG,KAAK,EAAEF,MAAM,CAAC;UACnC,OAAO,IAAI,CAACF,SAAM,CAACM,IAAI,CAAC;UACxB;QACF;QAEA,IAAI,IAAI,CAACN,SAAM,CAACM,IAAI,CAAC,EAAE;UACrB,OAAO,IAAI,CAACN,SAAM,CAACM,IAAI,CAAC,CAACH,GAAG,CAAC;UAE7B,IAAIX,EAAE,CAACgB,IAAI,CAACE,MAAM,CAACC,SAAS,CAAC,IAAI,CAACX,SAAM,CAACM,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;YACpDd,EAAE,CAACgB,IAAI,CAACC,KAAK,CAACR,MAAM,CAACG,KAAK,EAAEF,MAAM,CAAC;UACrC;QACF;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIU,GAAG,WAAAA,IAACV,MAAM,EAAEC,GAAG,EAAE;QACf,IAAIC,KAAK,GAAG,IAAI,CAACL,SAAO;QACxB;QACA,IAAI,CAACK,KAAK,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;UAC3BE,KAAK,CAACS,OAAO,CAACX,MAAM,CAAC;QACvB;;QAEA;QACA,IAAIC,GAAG,IAAI,IAAI,EAAE;UACfA,GAAG,GAAG,WAAW;QACnB;QACA,IAAIG,IAAI,GAAGJ,MAAM,CAACK,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAACP,SAAM,CAACM,IAAI,CAAC,EAAE;UACtB,IAAI,CAACN,SAAM,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB;QACA,IAAI,CAACN,SAAM,CAACM,IAAI,CAAC,CAACH,GAAG,CAAC,GAAG,IAAI;QAE7BX,EAAE,CAACsB,EAAE,CAACC,IAAI,CAACX,KAAK,CAACY,OAAO,CAACC,aAAa,CAAC,QAAQ,CAAC;MAClD,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,KAAK,WAAAA,MAAA,EAAG;QACN;QACA,IAAId,KAAK,GAAG,IAAI,CAACL,SAAO;QACxB,IAAIoB,GAAG,EAAEC,IAAI;QACb,KAAK,IAAIC,CAAC,GAAGjB,KAAK,CAACkB,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1C;UACAF,GAAG,GAAGf,KAAK,CAACiB,CAAC,CAAC;UACdD,IAAI,GAAG,IAAI,CAACpB,SAAM,CAACmB,GAAG,CAACZ,UAAU,CAAC,CAAC,CAAC;UAEpCH,KAAK,CAACmB,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;UAClBF,GAAG,CAACK,UAAU,CAACJ,IAAI,CAAC;QACtB;;QAEA;QACA,IAAIhB,KAAK,CAACkB,MAAM,IAAI,CAAC,EAAE;UACrB;QACF;;QAEA;QACA,IAAI,CAACvB,SAAO,GAAG,EAAE;QACjB,IAAI,CAACC,SAAM,GAAG,CAAC,CAAC;MAClB;IACF;EACF,CAAC,CAAC;EAlIFR,EAAE,CAACsB,EAAE,CAACC,IAAI,CAACX,KAAK,CAACqB,MAAM,CAAC9B,aAAa,GAAGA,aAAa;AAAC"
}