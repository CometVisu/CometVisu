{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__queue",
    "__jobs",
    "remove",
    "widget",
    "job",
    "queue",
    "includes",
    "hash",
    "toHashCode",
    "lang",
    "Array",
    "Object",
    "getLength",
    "add",
    "unshift",
    "ui",
    "core",
    "Manager",
    "scheduleFlush",
    "flush",
    "obj",
    "jobs",
    "i",
    "length",
    "splice",
    "syncWidget",
    "Widget"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * The widget queue handles the deferred computation of certain widget properties.\n * It is used e.g. for the tree to update the indentation of tree nodes.\n *\n * This queue calls the method {@link qx.ui.core.Widget#syncWidget} of each\n * queued widget before the layout queues are processed.\n */\nqx.Class.define(\"qx.ui.core.queue.Widget\", {\n  statics: {\n    /** @type {Array} This contains all the queued widgets for the next flush. */\n    __queue: [],\n\n    /**\n     * @type {Object} This contains a map of widgets hash ($$hash) and their\n     * corresponding map of jobs.\n     */\n    __jobs: {},\n\n    /**\n     * Clears given job of a widget from the internal queue. If no jobs left, the\n     * widget will be removed completely from queue. If job param is <code>null</code>\n     * or <code>undefined</code> widget will be removed completely from queue.\n     * Normally only used during interims disposes of one or a few widgets.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to clear\n     * @param job {String?} Job identifier. If not used, it will be converted to\n     * \"$$default\".\n     */\n    remove(widget, job) {\n      var queue = this.__queue;\n\n      if (!queue.includes(widget)) {\n        return;\n      }\n\n      var hash = widget.toHashCode();\n\n      // remove widget and all corresponding jobs, if job param is not given.\n      if (job == null) {\n        qx.lang.Array.remove(queue, widget);\n        delete this.__jobs[hash];\n        return;\n      }\n\n      if (this.__jobs[hash]) {\n        delete this.__jobs[hash][job];\n\n        if (qx.lang.Object.getLength(this.__jobs[hash]) == 0) {\n          qx.lang.Array.remove(queue, widget);\n        }\n      }\n    },\n\n    /**\n     * Adds a widget to the queue. The second param can be used to identify\n     * several jobs. You can add one job at once, which will be returned as\n     * an map at flushing on method {@link qx.ui.core.Widget#syncWidget}.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add.\n     * @param job {String?} Job identifier. If not used, it will be converted to\n     * \"$$default\".\n     */\n    add(widget, job) {\n      var queue = this.__queue;\n      //add widget if not containing\n      if (!queue.includes(widget)) {\n        queue.unshift(widget);\n      }\n\n      //add job\n      if (job == null) {\n        job = \"$$default\";\n      }\n      var hash = widget.toHashCode();\n      if (!this.__jobs[hash]) {\n        this.__jobs[hash] = {};\n      }\n      this.__jobs[hash][job] = true;\n\n      qx.ui.core.queue.Manager.scheduleFlush(\"widget\");\n    },\n\n    /**\n     * Flushes the widget queue.\n     *\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\n     */\n    flush() {\n      // Process all registered widgets\n      var queue = this.__queue;\n      var obj, jobs;\n      for (var i = queue.length - 1; i >= 0; i--) {\n        // Order is important to allow the same widget to be requeued directly\n        obj = queue[i];\n        jobs = this.__jobs[obj.toHashCode()];\n\n        queue.splice(i, 1);\n        obj.syncWidget(jobs);\n      }\n\n      // Empty check\n      if (queue.length != 0) {\n        return;\n      }\n\n      // Recreate the array is cheaper compared to keep a sparse array over time\n      this.__queue = [];\n      this.__jobs = {};\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}