{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__queue",
    "__lookup",
    "__data",
    "remove",
    "widget",
    "toHashCode",
    "lang",
    "Array",
    "isVisible",
    "__computeVisible",
    "__P_334_3",
    "data",
    "hash",
    "visible",
    "isExcluded",
    "parent",
    "$$parent",
    "isRootWidget",
    "add",
    "unshift",
    "ui",
    "core",
    "queue",
    "Manager",
    "scheduleFlush",
    "flush",
    "i",
    "length",
    "addChildrenToQueue",
    "oldData",
    "splice",
    "checkAppearanceNeeds",
    "Visibility"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Visibility.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Keeps data about the visibility of all widgets. Updates the internal\r\n * tree when widgets are added, removed or modify their visibility.\r\n */\r\nqx.Class.define(\"qx.ui.core.queue.Visibility\", {\r\n  statics: {\r\n    /** @type {Array} This contains all the queued widgets for the next flush. */\r\n    __queue: [],\r\n\r\n    /** @type {Map} map of widgets by hash code which are in the queue */\r\n    __lookup: {},\r\n\r\n    /** @type {Map} Maps hash codes to visibility */\r\n    __data: {},\r\n\r\n    /**\r\n     * Clears the cached data of the given widget. Normally only used\r\n     * during interims disposes of one or a few widgets.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to clear\r\n     */\r\n    remove(widget) {\r\n      if (this.__lookup[widget.toHashCode()]) {\r\n        delete this.__lookup[widget.toHashCode()];\r\n        qx.lang.Array.remove(this.__queue, widget);\r\n      }\r\n      delete this.__data[widget.toHashCode()];\r\n    },\r\n\r\n    /**\r\n     * Whether the given widget is visible.\r\n     *\r\n     * Please note that the information given by this method is queued and may not be accurate\r\n     * until the next queue flush happens.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to query\r\n     * @return {Boolean} Whether the widget is visible\r\n     */\r\n    isVisible(widget) {\r\n      return this.__data[widget.toHashCode()] || false;\r\n    },\r\n\r\n    /**\r\n     * Computes the visibility for the given widget\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to update\r\n     * @return {Boolean} Whether the widget is visible\r\n     */\r\n    __computeVisible(widget) {\r\n      var data = this.__data;\r\n      var hash = widget.toHashCode();\r\n      var visible;\r\n\r\n      // Respect local value\r\n      if (widget.isExcluded()) {\r\n        visible = false;\r\n      } else {\r\n        // Parent hierarchy\r\n        var parent = widget.$$parent;\r\n        if (parent) {\r\n          visible = this.__computeVisible(parent);\r\n        } else {\r\n          visible = widget.isRootWidget();\r\n        }\r\n      }\r\n\r\n      return (data[hash] = visible);\r\n    },\r\n\r\n    /**\r\n     * Adds a widget to the queue.\r\n     *\r\n     * Should only be used by {@link qx.ui.core.Widget}.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to add.\r\n     */\r\n    add(widget) {\r\n      if (this.__lookup[widget.toHashCode()]) {\r\n        return;\r\n      }\r\n\r\n      this.__queue.unshift(widget);\r\n      this.__lookup[widget.toHashCode()] = widget;\r\n      qx.ui.core.queue.Manager.scheduleFlush(\"visibility\");\r\n    },\r\n\r\n    /**\r\n     * Flushes the visibility queue.\r\n     *\r\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\r\n     */\r\n    flush() {\r\n      // Dispose all registered objects\r\n      var queue = this.__queue;\r\n      var data = this.__data;\r\n\r\n      // Dynamically add children to queue\r\n      // Only respect already known widgets because otherwise the children\r\n      // are also already in the queue (added on their own)\r\n      for (var i = queue.length - 1; i >= 0; i--) {\r\n        var hash = queue[i].toHashCode();\r\n        if (data[hash] != null) {\r\n          // recursive method call which adds widgets to the queue so be\r\n          // careful with that one (performance critical)\r\n          queue[i].addChildrenToQueue(queue);\r\n        }\r\n      }\r\n\r\n      // Cache old data, clear current data\r\n      // Do this before starting with recomputation because\r\n      // new data may also be added by related widgets and not\r\n      // only the widget itself.\r\n      var oldData = {};\r\n      for (var i = queue.length - 1; i >= 0; i--) {\r\n        var hash = queue[i].toHashCode();\r\n        oldData[hash] = data[hash];\r\n        data[hash] = null;\r\n      }\r\n\r\n      // Finally recompute\r\n      for (var i = queue.length - 1; i >= 0; i--) {\r\n        var widget = queue[i];\r\n        var hash = widget.toHashCode();\r\n        queue.splice(i, 1);\r\n\r\n        // Only update when not already updated by another widget\r\n        if (data[hash] == null) {\r\n          this.__computeVisible(widget);\r\n        }\r\n\r\n        // Check for updates required to the appearance.\r\n        // Hint: Invisible widgets are ignored inside appearance flush\r\n        if (data[hash] && data[hash] != oldData[hash]) {\r\n          widget.checkAppearanceNeeds();\r\n        }\r\n      }\r\n\r\n      // Recreate the array is cheaper compared to keep a sparse array over time\r\n      this.__queue = [];\r\n      this.__lookup = {};\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}