{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__queue",
    "add",
    "widget",
    "queue",
    "includes",
    "unshift",
    "ui",
    "core",
    "Manager",
    "scheduleFlush",
    "isEmpty",
    "length",
    "flush",
    "i",
    "splice",
    "dispose",
    "Dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Dispose.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The DisposeQueue registers all widgets which are should be disposed.\n * This queue makes it possible to remove widgets from the DOM using\n * the layout and element queues and dispose them afterwards.\n */\nqx.Class.define(\"qx.ui.core.queue.Dispose\", {\n  statics: {\n    /** @type {Array} This contains all the queued widgets for the next flush. */\n    __queue: [],\n\n    /**\n     * Adds a widget to the queue.\n     *\n     * Should only be used by {@link qx.ui.core.Widget}.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add.\n     */\n    add(widget) {\n      var queue = this.__queue;\n      if (queue.includes(widget)) {\n        return;\n      }\n\n      queue.unshift(widget);\n      qx.ui.core.queue.Manager.scheduleFlush(\"dispose\");\n    },\n\n    /**\n     * Whether the dispose queue is empty\n     * @return {Boolean}\n     * @internal\n     */\n    isEmpty() {\n      return this.__queue.length == 0;\n    },\n\n    /**\n     * Flushes the dispose queue.\n     *\n     * This is used exclusively by the {@link qx.ui.core.queue.Manager}.\n     */\n    flush() {\n      // Dispose all registered objects\n      var queue = this.__queue;\n      for (var i = queue.length - 1; i >= 0; i--) {\n        var widget = queue[i];\n        queue.splice(i, 1);\n        widget.dispose();\n      }\n\n      // Empty check\n      if (queue.length != 0) {\n        return;\n      }\n\n      // Recreate the array is cheaper compared to keep a sparse array over time\n      this.__queue = [];\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EAA4C;IAC1CC,OAAO,EAAE;MACP;MACAC,SAAO,EAAE,EAFF;;MAIP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,GAXO,eAWHC,MAXG,EAWK;QACV,IAAIC,KAAK,GAAG,KAAKH,SAAjB;;QACA,IAAIG,KAAK,CAACC,QAAN,CAAeF,MAAf,CAAJ,EAA4B;UAC1B;QACD;;QAEDC,KAAK,CAACE,OAAN,CAAcH,MAAd;QACAT,EAAE,CAACa,EAAH,CAAMC,IAAN,CAAWJ,KAAX,CAAiBK,OAAjB,CAAyBC,aAAzB,CAAuC,SAAvC;MACD,CAnBM;;MAqBP;AACJ;AACA;AACA;AACA;MACIC,OA1BO,qBA0BG;QACR,OAAO,KAAKV,SAAL,CAAaW,MAAb,IAAuB,CAA9B;MACD,CA5BM;;MA8BP;AACJ;AACA;AACA;AACA;MACIC,KAnCO,mBAmCC;QACN;QACA,IAAIT,KAAK,GAAG,KAAKH,SAAjB;;QACA,KAAK,IAAIa,CAAC,GAAGV,KAAK,CAACQ,MAAN,GAAe,CAA5B,EAA+BE,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;UAC1C,IAAIX,MAAM,GAAGC,KAAK,CAACU,CAAD,CAAlB;UACAV,KAAK,CAACW,MAAN,CAAaD,CAAb,EAAgB,CAAhB;UACAX,MAAM,CAACa,OAAP;QACD,CAPK,CASN;;;QACA,IAAIZ,KAAK,CAACQ,MAAN,IAAgB,CAApB,EAAuB;UACrB;QACD,CAZK,CAcN;;;QACA,KAAKX,SAAL,GAAe,EAAf;MACD;IAnDM;EADiC,CAA5C;EAxBAP,EAAE,CAACa,EAAH,CAAMC,IAAN,CAAWJ,KAAX,CAAiBa,OAAjB,CAAyBpB,aAAzB,GAAyCA,aAAzC"
}