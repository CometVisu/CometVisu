{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__scheduled",
    "__canceled",
    "__jobs",
    "__retries",
    "MAX_RETRIES",
    "scheduleFlush",
    "job",
    "self",
    "ui",
    "core",
    "queue",
    "Manager",
    "bom",
    "AnimationFrame",
    "request",
    "flush",
    "__inFlush",
    "jobs",
    "__executeAndRescheduleOnError",
    "visibility",
    "widget",
    "appearance",
    "layout",
    "element",
    "Widget",
    "e",
    "log",
    "Logger",
    "error",
    "Visibility",
    "Appearance",
    "Layout",
    "html",
    "Element",
    "dispose",
    "Dispose",
    "Environment",
    "select",
    "_true",
    "callback",
    "finallyCode",
    "_false",
    "Error",
    "__onUserAction",
    "__P_325_6",
    "defer",
    "_scheduleFlush",
    "event",
    "Registration",
    "addListener",
    "window",
    "get"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/queue/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class performs the auto flush of all layout relevant queues.\n *\n * @require(qx.event.handler.UserAction)\n */\nqx.Class.define(\"qx.ui.core.queue.Manager\", {\n  statics: {\n    /** @type {Boolean} Whether a flush was scheduled */\n    __scheduled: false,\n\n    /** @type {Boolean} true, if the flush should not be executed */\n    __canceled: false,\n\n    /** @type {Map} Internal data structure for the current job list */\n    __jobs: {},\n\n    /** @type {Integer} Counts how often a flush failed due to exceptions */\n    __retries: 0,\n\n    /** @type {Integer} Maximum number of flush retries */\n    MAX_RETRIES: 10,\n\n    /**\n     * Schedule a deferred flush of all queues.\n     *\n     * @param job {String} The job, which should be performed. Valid values are\n     *     <code>layout</code>, <code>decoration</code> and <code>element</code>.\n     */\n    scheduleFlush(job) {\n      // Sometimes not executed in context, fix this\n      var self = qx.ui.core.queue.Manager;\n\n      self.__jobs[job] = true;\n\n      if (!self.__scheduled) {\n        self.__canceled = false;\n\n        qx.bom.AnimationFrame.request(function () {\n          if (self.__canceled) {\n            self.__canceled = false;\n            return;\n          }\n          self.flush();\n        }, self);\n        self.__scheduled = true;\n      }\n    },\n\n    /**\n     * Flush all layout queues in the correct order. This function is called\n     * deferred if {@link #scheduleFlush} is called.\n     *\n     */\n    flush() {\n      // Sometimes not executed in context, fix this\n      var self = qx.ui.core.queue.Manager;\n\n      // Stop when already executed\n      if (self.__inFlush) {\n        return;\n      }\n\n      self.__inFlush = true;\n\n      // Cancel timeout if called manually\n      self.__canceled = true;\n\n      var jobs = self.__jobs;\n\n      self.__executeAndRescheduleOnError(\n        function () {\n          // Process jobs\n          while (\n            jobs.visibility ||\n            jobs.widget ||\n            jobs.appearance ||\n            jobs.layout ||\n            jobs.element\n          ) {\n            // No else blocks here because each flush can influence the following flushes!\n            if (jobs.widget) {\n              delete jobs.widget;\n\n              if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n                try {\n                  qx.ui.core.queue.Widget.flush();\n                } catch (e) {\n                  qx.log.Logger.error(\n                    qx.ui.core.queue.Widget,\n                    \"Error in the 'Widget' queue:\" + e,\n                    e\n                  );\n                }\n              } else {\n                qx.ui.core.queue.Widget.flush();\n              }\n            }\n\n            if (jobs.visibility) {\n              delete jobs.visibility;\n\n              if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n                try {\n                  qx.ui.core.queue.Visibility.flush();\n                } catch (e) {\n                  qx.log.Logger.error(\n                    qx.ui.core.queue.Visibility,\n                    \"Error in the 'Visibility' queue:\" + e,\n                    e\n                  );\n                }\n              } else {\n                qx.ui.core.queue.Visibility.flush();\n              }\n            }\n\n            if (jobs.appearance) {\n              delete jobs.appearance;\n\n              if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n                try {\n                  qx.ui.core.queue.Appearance.flush();\n                } catch (e) {\n                  qx.log.Logger.error(\n                    qx.ui.core.queue.Appearance,\n                    \"Error in the 'Appearance' queue:\" + e,\n                    e\n                  );\n                }\n              } else {\n                qx.ui.core.queue.Appearance.flush();\n              }\n            }\n\n            // Defer layout as long as possible\n            if (jobs.widget || jobs.visibility || jobs.appearance) {\n              continue;\n            }\n\n            if (jobs.layout) {\n              delete jobs.layout;\n\n              if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n                try {\n                  qx.ui.core.queue.Layout.flush();\n                } catch (e) {\n                  qx.log.Logger.error(\n                    qx.ui.core.queue.Layout,\n                    \"Error in the 'Layout' queue:\" + e,\n                    e\n                  );\n                }\n              } else {\n                qx.ui.core.queue.Layout.flush();\n              }\n            }\n\n            // Defer element as long as possible\n            if (\n              jobs.widget ||\n              jobs.visibility ||\n              jobs.appearance ||\n              jobs.layout\n            ) {\n              continue;\n            }\n\n            if (jobs.element) {\n              delete jobs.element;\n              qx.html.Element.flush();\n            }\n          }\n        },\n        function () {\n          self.__scheduled = false;\n        }\n      );\n\n      self.__executeAndRescheduleOnError(\n        function () {\n          if (jobs.dispose) {\n            delete jobs.dispose;\n\n            if (qx.core.Environment.get(\"qx.debug.ui.queue\")) {\n              try {\n                qx.ui.core.queue.Dispose.flush();\n              } catch (e) {\n                qx.log.Logger.error(\"Error in the 'Dispose' queue:\" + e);\n              }\n            } else {\n              qx.ui.core.queue.Dispose.flush();\n            }\n          }\n        },\n        function () {\n          // Clear flag\n          self.__inFlush = false;\n        }\n      );\n\n      // flush succeeded successfully. Reset retries\n      self.__retries = 0;\n    },\n\n    /**\n     * Executes the callback code. If the callback throws an error the current\n     * flush is cleaned up and rescheduled. The finally code is called after the\n     * callback even if it has thrown an exception.\n     *\n     * @signature function(callback, finallyCode)\n     * @param callback {Function} the callback function\n     * @param finallyCode {Function} function to be called in the finally block\n     */\n    __executeAndRescheduleOnError: qx.core.Environment.select(\"qx.debug\", {\n      true(callback, finallyCode) {\n        callback();\n        finallyCode();\n      },\n\n      false(callback, finallyCode) {\n        var self = qx.ui.core.queue.Manager;\n\n        try {\n          callback();\n        } catch (e) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            qx.log.Logger.error(\n              \"Error while layout flush: \" +\n                e +\n                \"\\n\" +\n                \"Stack trace: \\n\" +\n                qx.dev.StackTrace.getStackTraceFromError(e)\n            );\n          }\n          self.__scheduled = false;\n          self.__inFlush = false;\n          self.__retries += 1;\n\n          if (self.__retries <= self.MAX_RETRIES) {\n            self.scheduleFlush();\n          } else {\n            throw new Error(\n              \"Fatal Error: Flush terminated \" +\n                (self.__retries - 1) +\n                \" times in a row\" +\n                \" due to exceptions in user code. The application has to be reloaded!\"\n            );\n          }\n\n          throw e;\n        } finally {\n          finallyCode();\n        }\n      }\n    }),\n\n    /**\n     * Handler used on touch devices to prevent the queue from manipulating\n     * the dom during the touch - mouse - ... event sequence. Usually, iOS\n     * devices fire a click event 300ms after the touchend event. So using\n     * 500ms should be a good value to be on the save side. This is necessary\n     * due to the fact that the event chain is stopped if a manipulation in\n     * the DOM is done.\n     *\n     * @param e {qx.event.type.Data} The user action data event.\n     */\n    __onUserAction(e) {\n      qx.ui.core.queue.Manager.flush();\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    // Replace default scheduler for HTML element with local one.\n    // This is quite a hack, but allows us to force other flushes\n    // before the HTML element flush.\n    qx.html.Element._scheduleFlush = statics.scheduleFlush;\n\n    // Register to user action\n    qx.event.Registration.addListener(\n      window,\n      \"useraction\",\n      qx.core.Environment.get(\"event.touch\")\n        ? statics.__onUserAction\n        : statics.flush\n    );\n  }\n});\n"
  ],
  "mappings": "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"
}