{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "blockerColor",
    "check",
    "init",
    "nullable",
    "apply",
    "themeable",
    "blockerOpacity",
    "members",
    "__blocker",
    "_createBlocker",
    "ui",
    "core",
    "Blocker",
    "_applyBlockerColor",
    "value",
    "old",
    "getBlocker",
    "setColor",
    "_applyBlockerOpacity",
    "setOpacity",
    "block",
    "isBlocked",
    "unblock",
    "forceUnblock",
    "blockContent",
    "zIndex",
    "destruct",
    "_disposeObjects",
    "MBlocker"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MBlocker.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin blocks events and can be included into all widgets.\n *\n * The {@link #block} and {@link #unblock} methods provided by this mixin can be used\n * to block any event from the widget. When blocked,\n * the blocker widget overlays the widget to block, including the padding area.\n *\n * The ({@link #blockContent} method can be used to block child widgets with a\n * zIndex below a certain value.\n */\nqx.Mixin.define(\"qx.ui.core.MBlocker\", {\n  properties: {\n    /**\n     * Color of the blocker\n     */\n    blockerColor: {\n      check: \"Color\",\n      init: null,\n      nullable: true,\n      apply: \"_applyBlockerColor\",\n      themeable: true\n    },\n\n    /**\n     * Opacity of the blocker\n     */\n    blockerOpacity: {\n      check: \"Number\",\n      init: 1,\n      apply: \"_applyBlockerOpacity\",\n      themeable: true\n    }\n  },\n\n  members: {\n    __blocker: null,\n\n    /**\n     * Template method for creating the blocker item.\n     * @return {qx.ui.core.Blocker} The blocker to use.\n     */\n    _createBlocker() {\n      return new qx.ui.core.Blocker(this);\n    },\n\n    // property apply\n    _applyBlockerColor(value, old) {\n      this.getBlocker().setColor(value);\n    },\n\n    // property apply\n    _applyBlockerOpacity(value, old) {\n      this.getBlocker().setOpacity(value);\n    },\n\n    /**\n     * Block all events from this widget by placing a transparent overlay widget,\n     * which receives all events, exactly over the widget.\n     */\n    block() {\n      this.getBlocker().block();\n    },\n\n    /**\n     * Returns whether the widget is blocked.\n     *\n     * @return {Boolean} Whether the widget is blocked.\n     */\n    isBlocked() {\n      return this.__blocker && this.__blocker.isBlocked();\n    },\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it takes care of\n     * the amount of {@link #block} calls. The blocker is only removed if\n     * the number of {@link #unblock} calls is identical to {@link #block} calls.\n     */\n    unblock() {\n      if (this.__blocker) {\n        this.__blocker.unblock();\n      }\n    },\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it doesn't take care of\n     * the amount of {@link #block} calls. The blocker is directly removed.\n     */\n    forceUnblock() {\n      if (this.__blocker) {\n        this.__blocker.forceUnblock();\n      }\n    },\n\n    /**\n     * Block direct child widgets with a zIndex below <code>zIndex</code>\n     *\n     * @param zIndex {Integer} All child widgets with a zIndex below this value\n     *     will be blocked\n     */\n    blockContent(zIndex) {\n      this.getBlocker().blockContent(zIndex);\n    },\n\n    /**\n     * Get the blocker\n     *\n     * @return {qx.ui.core.Blocker} The blocker\n     */\n    getBlocker() {\n      if (!this.__blocker) {\n        this.__blocker = this._createBlocker();\n      }\n      return this.__blocker;\n    }\n  },\n\n  destruct() {\n    this._disposeObjects(\"__blocker\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;IACrCC,UAAU,EAAE;MACV;AACJ;AACA;MACIC,YAAY,EAAE;QACZC,KAAK,EAAE,OADK;QAEZC,IAAI,EAAE,IAFM;QAGZC,QAAQ,EAAE,IAHE;QAIZC,KAAK,EAAE,oBAJK;QAKZC,SAAS,EAAE;MALC,CAJJ;;MAYV;AACJ;AACA;MACIC,cAAc,EAAE;QACdL,KAAK,EAAE,QADO;QAEdC,IAAI,EAAE,CAFQ;QAGdE,KAAK,EAAE,sBAHO;QAIdC,SAAS,EAAE;MAJG;IAfN,CADyB;IAwBrCE,OAAO,EAAE;MACPC,SAAS,EAAE,IADJ;;MAGP;AACJ;AACA;AACA;MACIC,cAPO,4BAOU;QACf,OAAO,IAAIhB,EAAE,CAACiB,EAAH,CAAMC,IAAN,CAAWC,OAAf,CAAuB,IAAvB,CAAP;MACD,CATM;MAWP;MACAC,kBAZO,8BAYYC,KAZZ,EAYmBC,GAZnB,EAYwB;QAC7B,KAAKC,UAAL,GAAkBC,QAAlB,CAA2BH,KAA3B;MACD,CAdM;MAgBP;MACAI,oBAjBO,gCAiBcJ,KAjBd,EAiBqBC,GAjBrB,EAiB0B;QAC/B,KAAKC,UAAL,GAAkBG,UAAlB,CAA6BL,KAA7B;MACD,CAnBM;;MAqBP;AACJ;AACA;AACA;MACIM,KAzBO,mBAyBC;QACN,KAAKJ,UAAL,GAAkBI,KAAlB;MACD,CA3BM;;MA6BP;AACJ;AACA;AACA;AACA;MACIC,SAlCO,uBAkCK;QACV,OAAO,KAAKb,SAAL,IAAkB,KAAKA,SAAL,CAAea,SAAf,EAAzB;MACD,CApCM;;MAsCP;AACJ;AACA;AACA;AACA;MACIC,OA3CO,qBA2CG;QACR,IAAI,KAAKd,SAAT,EAAoB;UAClB,KAAKA,SAAL,CAAec,OAAf;QACD;MACF,CA/CM;;MAiDP;AACJ;AACA;AACA;MACIC,YArDO,0BAqDQ;QACb,IAAI,KAAKf,SAAT,EAAoB;UAClB,KAAKA,SAAL,CAAee,YAAf;QACD;MACF,CAzDM;;MA2DP;AACJ;AACA;AACA;AACA;AACA;MACIC,YAjEO,wBAiEMC,MAjEN,EAiEc;QACnB,KAAKT,UAAL,GAAkBQ,YAAlB,CAA+BC,MAA/B;MACD,CAnEM;;MAqEP;AACJ;AACA;AACA;AACA;MACIT,UA1EO,wBA0EM;QACX,IAAI,CAAC,KAAKR,SAAV,EAAqB;UACnB,KAAKA,SAAL,GAAiB,KAAKC,cAAL,EAAjB;QACD;;QACD,OAAO,KAAKD,SAAZ;MACD;IA/EM,CAxB4B;IA0GrCkB,QA1GqC,sBA0G1B;MACT,KAAKC,eAAL,CAAqB,WAArB;IACD;EA5GoC,CAAvC;EA5BAlC,EAAE,CAACiB,EAAH,CAAMC,IAAN,CAAWiB,QAAX,CAAoBhC,aAApB,GAAoCA,aAApC"
}