{
  "className": "qx.ui.core.MMovable",
  "packageName": "qx.ui.core",
  "name": "MMovable",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 779
      },
      "end": {
        "line": 354,
        "column": 3,
        "index": 9929
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Provides move behavior to any widget.\n The widget using the mixin must register a widget as move handle so that\n the pointer events needed for moving it are attached to this widget).\n </p>\n<pre class='javascript'>this._activateMoveHandle(widget);</pre>"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "movable": {
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 1068
        },
        "end": {
          "line": 39,
          "column": 5,
          "index": 1125
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the widget is movable</p>"
          }
        ]
      },
      "name": "movable",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "useMoveFrame": {
      "location": {
        "start": {
          "line": 42,
          "column": 4,
          "index": 1219
        },
        "end": {
          "line": 45,
          "column": 5,
          "index": 1282
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to use a frame instead of the original widget during move sequences</p>"
          }
        ]
      },
      "name": "useMoveFrame",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    }
  },
  "members": {
    "__moveHandle": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1490
        },
        "end": {
          "line": 55,
          "column": 22,
          "index": 1508
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__moveFrame": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1514
        },
        "end": {
          "line": 56,
          "column": 21,
          "index": 1531
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dragRange": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1537
        },
        "end": {
          "line": 57,
          "column": 21,
          "index": 1554
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dragLeft": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1560
        },
        "end": {
          "line": 58,
          "column": 20,
          "index": 1576
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dragTop": {
      "location": {
        "start": {
          "line": 59,
          "column": 4,
          "index": 1582
        },
        "end": {
          "line": 59,
          "column": 19,
          "index": 1597
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__parentLeft": {
      "location": {
        "start": {
          "line": 60,
          "column": 4,
          "index": 1603
        },
        "end": {
          "line": 60,
          "column": 22,
          "index": 1621
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__parentTop": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1627
        },
        "end": {
          "line": 61,
          "column": 21,
          "index": 1644
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__blockerAdded": {
      "location": {
        "start": {
          "line": 63,
          "column": 4,
          "index": 1651
        },
        "end": {
          "line": 63,
          "column": 25,
          "index": 1672
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__oldBlockerColor": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1678
        },
        "end": {
          "line": 64,
          "column": 27,
          "index": 1701
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__oldBlockerOpacity": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1707
        },
        "end": {
          "line": 65,
          "column": 26,
          "index": 1729
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_activateMoveHandle": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2081
        },
        "end": {
          "line": 88,
          "column": 5,
          "index": 2543
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Configures the given widget as a move handle</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Widget to activate as move handle",
            "paramName": "widget",
            "description": " Widget to activate as move handle",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__getMoveFrame": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2683
        },
        "end": {
          "line": 106,
          "column": 5,
          "index": 2981
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the widget, which draws the resize/move frame.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The resize frame",
            "type": "qx.ui.core.Widget",
            "description": " The resize frame"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__showMoveFrame": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 3063
        },
        "end": {
          "line": 124,
          "column": 5,
          "index": 3405
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates, shows and syncs the frame with the widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__computeMoveCoordinates": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3786
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4450
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Computes the new drag coordinates</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Pointer event",
            "paramName": "e",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the computed drag coordinates",
            "type": "Map",
            "description": " A map with the computed drag coordinates"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onMoveRoll": {
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 4846
        },
        "end": {
          "line": 175,
          "column": 5,
          "index": 4884
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Roll handler which prevents the scrolling via tap &amp; move on parent widgets\n during the move of the widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} The roll event",
            "paramName": "e",
            "description": " The roll event",
            "type": "qx.event.type.Roll"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onMovePointerDown": {
      "location": {
        "start": {
          "line": 183,
          "column": 4,
          "index": 5138
        },
        "end": {
          "line": 237,
          "column": 5,
          "index": 6763
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Enables the capturing of the caption bar and prepares the drag session and the\n appearance (translucent, frame or opaque) for the moving of the window.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointer down event",
            "paramName": "e",
            "description": " pointer down event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onMovePointerMove": {
      "location": {
        "start": {
          "line": 245,
          "column": 4,
          "index": 6984
        },
        "end": {
          "line": 267,
          "column": 5,
          "index": 7610
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Does the moving of the window by rendering the position\n of the window (or frame) at runtime using direct dom methods.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointer move event",
            "paramName": "e",
            "description": " pointer move event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onMovePointerUp": {
      "location": {
        "start": {
          "line": 276,
          "column": 4,
          "index": 7867
        },
        "end": {
          "line": 321,
          "column": 5,
          "index": 9184
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Disables the capturing of the caption bar and moves the window\n to the last position of the drag session. Also restores the appearance\n of the window.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointer up event",
            "paramName": "e",
            "description": " pointer up event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onMoveLoseCapture": {
      "location": {
        "start": {
          "line": 328,
          "column": 4,
          "index": 9329
        },
        "end": {
          "line": 341,
          "column": 5,
          "index": 9627
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for <code>losecapture</code> event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Lose capture event",
            "paramName": "e",
            "description": " Lose capture event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getMovable": {
      "type": "function",
      "name": "getMovable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>movable</code>.\n\nFor further details take a look at the property definition: {@link #movable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for movable"
          }
        ]
      }
    },
    "isMovable": {
      "type": "function",
      "name": "isMovable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>movable</code>.\n\nFor further details take a look at the property definition: {@link #movable}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for movable"
          }
        ]
      }
    },
    "setMovable": {
      "type": "function",
      "name": "setMovable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>movable</code>.\n\nFor further details take a look at the property definition: {@link #movable}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for movable"
          }
        ]
      }
    },
    "resetMovable": {
      "type": "function",
      "name": "resetMovable",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>movable</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #movable}."
          }
        ]
      }
    },
    "getUseMoveFrame": {
      "type": "function",
      "name": "getUseMoveFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useMoveFrame</code>.\n\nFor further details take a look at the property definition: {@link #useMoveFrame}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useMoveFrame"
          }
        ]
      }
    },
    "isUseMoveFrame": {
      "type": "function",
      "name": "isUseMoveFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>useMoveFrame</code>.\n\nFor further details take a look at the property definition: {@link #useMoveFrame}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for useMoveFrame"
          }
        ]
      }
    },
    "setUseMoveFrame": {
      "type": "function",
      "name": "setUseMoveFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>useMoveFrame</code>.\n\nFor further details take a look at the property definition: {@link #useMoveFrame}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for useMoveFrame"
          }
        ]
      }
    },
    "resetUseMoveFrame": {
      "type": "function",
      "name": "resetUseMoveFrame",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>useMoveFrame</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #useMoveFrame}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 350,
        "column": 2,
        "index": 9823
      },
      "end": {
        "line": 353,
        "column": 3,
        "index": 9925
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}