{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "setLayout",
    "layout",
    "container",
    "getChildrenContainer",
    "_setLayout",
    "getLayout",
    "_getLayout",
    "ui",
    "core",
    "MRemoteLayoutHandling"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MRemoteLayoutHandling.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This mixin redirects the layout manager to a child widget of the\r\n * including class. This is e.g. used in {@link qx.ui.window.Window} to configure\r\n * the layout manager of the window pane instead of the window directly.\r\n *\r\n * The including class must implement the method <code>getChildrenContainer</code>,\r\n * which has to return the widget, to which the layout should be set.\r\n */\r\n\r\nqx.Mixin.define(\"qx.ui.core.MRemoteLayoutHandling\", {\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /**\r\n     * Set a layout manager for the widget. A a layout manager can only be connected\r\n     * with one widget. Reset the connection with a previous widget first, if you\r\n     * like to use it in another widget instead.\r\n     *\r\n     * @param layout {qx.ui.layout.Abstract} The new layout or\r\n     *     <code>null</code> to reset the layout.\r\n     */\r\n    setLayout(layout) {\r\n      var container = this.getChildrenContainer();\r\n      if (container === this) {\r\n        container._setLayout(layout);\r\n      } else {\r\n        container.setLayout(layout);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the widget's layout manager.\r\n     *\r\n     * @return {qx.ui.layout.Abstract} The widget's layout manager\r\n     */\r\n    getLayout() {\r\n      var container = this.getChildrenContainer();\r\n      if (container === this) {\r\n        return container._getLayout();\r\n      }\r\n      return container.getLayout();\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kCAAkC,EAAE;IAClD;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,WAAAA,UAACC,MAAM,EAAE;QAChB,IAAIC,SAAS,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;QAC3C,IAAID,SAAS,KAAK,IAAI,EAAE;UACtBA,SAAS,CAACE,UAAU,CAACH,MAAM,CAAC;QAC9B,CAAC,MAAM;UACLC,SAAS,CAACF,SAAS,CAACC,MAAM,CAAC;QAC7B;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,SAAS,WAAAA,UAAA,EAAG;QACV,IAAIH,SAAS,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;QAC3C,IAAID,SAAS,KAAK,IAAI,EAAE;UACtB,OAAOA,SAAS,CAACI,UAAU,CAAC,CAAC;QAC/B;QACA,OAAOJ,SAAS,CAACG,SAAS,CAAC,CAAC;MAC9B;IACF;EACF,CAAC,CAAC;EAlEFZ,EAAE,CAACc,EAAE,CAACC,IAAI,CAACC,qBAAqB,CAACb,aAAa,GAAGA,aAAa;AAAC"
}