{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "widget",
    "ui",
    "core",
    "DragDropScrolling",
    "_getWidget",
    "addListener",
    "__onDrag",
    "__onDragend",
    "__xDirs",
    "__yDirs",
    "properties",
    "dragScrollThresholdX",
    "check",
    "init",
    "dragScrollThresholdY",
    "dragScrollSlowDownFactor",
    "members",
    "__dragScrollTimer",
    "_findScrollableParent",
    "cur",
    "getLayoutParent",
    "_isScrollable",
    "Class",
    "hasMixin",
    "constructor",
    "scroll",
    "MScrollBarFactory",
    "_getBounds",
    "scrollable",
    "bounds",
    "getContentLocation",
    "getScrollAreaContainer",
    "_getEdgeType",
    "diff",
    "thresholdX",
    "thresholdY",
    "left",
    "top",
    "right",
    "bottom",
    "_getAxis",
    "edgeType",
    "indexOf",
    "Error",
    "_getThresholdByEdgeType",
    "getDragScrollThresholdX",
    "getDragScrollThresholdY",
    "_isScrollbarVisible",
    "axis",
    "_isChildControlVisible",
    "_isScrollbarExceedingMaxPos",
    "scrollbar",
    "amount",
    "newPos",
    "getPosition",
    "getMaximum",
    "_calculateThresholdExceedance",
    "threshold",
    "Math",
    "abs",
    "_calculateScrollAmount",
    "scrollbarSize",
    "exceedanceAmount",
    "floor",
    "getDragScrollSlowDownFactor",
    "_scrollBy",
    "getChildControl",
    "getBounds",
    "width",
    "height",
    "stop",
    "scrollBy",
    "e",
    "target",
    "getOriginalTarget",
    "Widget",
    "getWidgetByElement",
    "xPos",
    "getDocumentLeft",
    "yPos",
    "getDocumentTop",
    "dispose",
    "event",
    "Timer",
    "bind",
    "start",
    "stopPropagation",
    "destruct",
    "MDragDropScrolling"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MDragDropScrolling.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\n/**\n * Provides scrolling ability during drag session to the widget.\n */\nqx.Mixin.define(\"qx.ui.core.MDragDropScrolling\", {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    var widget = this;\n\n    if (this instanceof qx.ui.core.DragDropScrolling) {\n      widget = this._getWidget();\n    }\n\n    widget.addListener(\"drag\", this.__onDrag, this);\n    widget.addListener(\"dragend\", this.__onDragend, this);\n\n    this.__xDirs = [\"left\", \"right\"];\n    this.__yDirs = [\"top\", \"bottom\"];\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The threshold for the x-axis (in pixel) to activate scrolling at the edges. */\n    dragScrollThresholdX: {\n      check: \"Integer\",\n      init: 30\n    },\n\n    /** The threshold for the y-axis (in pixel) to activate scrolling at the edges. */\n    dragScrollThresholdY: {\n      check: \"Integer\",\n      init: 30\n    },\n\n    /** The factor for slowing down the scrolling. */\n    dragScrollSlowDownFactor: {\n      check: \"Float\",\n      init: 0.1\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __dragScrollTimer: null,\n    __xDirs: null,\n    __yDirs: null,\n\n    /**\n     * Finds the first scrollable parent (in the parent chain).\n     *\n     * @param widget {qx.ui.core.LayoutItem} The widget to start from.\n     * @return {qx.ui.core.Widget} A scrollable widget.\n     */\n    _findScrollableParent(widget) {\n      var cur = widget;\n      if (cur === null) {\n        return null;\n      }\n\n      while (cur.getLayoutParent()) {\n        cur = cur.getLayoutParent();\n        if (this._isScrollable(cur)) {\n          return cur;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Whether the widget is scrollable.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check.\n     * @return {Boolean} Whether the widget is scrollable.\n     */\n    _isScrollable(widget) {\n      return qx.Class.hasMixin(\n        widget.constructor,\n        qx.ui.core.scroll.MScrollBarFactory\n      );\n    },\n\n    /**\n     * Gets the bounds of the given scrollable.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @return {Map} A map with all four bounds (e.g. {\"left\":0, \"top\":20, \"right\":0, \"bottom\":80}).\n     */\n    _getBounds(scrollable) {\n      var bounds = scrollable.getContentLocation();\n\n      // the scrollable may dictate a nested widget for more precise bounds\n      if (scrollable.getScrollAreaContainer) {\n        bounds = scrollable.getScrollAreaContainer().getContentLocation();\n      }\n\n      return bounds;\n    },\n\n    /**\n     * Gets the edge type or null if the pointer isn't within one of the thresholds.\n     *\n     * @param diff {Map} Difference map with all for edgeTypes.\n     * @param thresholdX {Number} x-axis threshold.\n     * @param thresholdY {Number} y-axis threshold.\n     * @return {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     */\n    _getEdgeType(diff, thresholdX, thresholdY) {\n      if (diff.left * -1 <= thresholdX && diff.left < 0) {\n        return \"left\";\n      } else if (diff.top * -1 <= thresholdY && diff.top < 0) {\n        return \"top\";\n      } else if (diff.right <= thresholdX && diff.right > 0) {\n        return \"right\";\n      } else if (diff.bottom <= thresholdY && diff.bottom > 0) {\n        return \"bottom\";\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Gets the axis ('x' or 'y') by the edge type.\n     *\n     * @param edgeType {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     * @throws {Error} If edgeType is not one of the distinct four ones.\n     * @return {String} Returns 'y' or 'x'.\n     */\n    _getAxis(edgeType) {\n      if (this.__xDirs.indexOf(edgeType) !== -1) {\n        return \"x\";\n      } else if (this.__yDirs.indexOf(edgeType) !== -1) {\n        return \"y\";\n      } else {\n        throw new Error(\n          \"Invalid edge type given (\" +\n            edgeType +\n            \"). Must be: 'left', 'right', 'top' or 'bottom'\"\n        );\n      }\n    },\n\n    /**\n     * Gets the threshold amount by edge type.\n     *\n     * @param edgeType {String} One of the four edgeTypes ('left', 'right', 'top', 'bottom').\n     * @return {Number} The threshold of the x or y axis.\n     */\n    _getThresholdByEdgeType(edgeType) {\n      if (this.__xDirs.indexOf(edgeType) !== -1) {\n        return this.getDragScrollThresholdX();\n      } else if (this.__yDirs.indexOf(edgeType) !== -1) {\n        return this.getDragScrollThresholdY();\n      }\n    },\n\n    /**\n     * Whether the scrollbar is visible.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @return {Boolean} Whether the scrollbar is visible.\n     */\n    _isScrollbarVisible(scrollable, axis) {\n      if (scrollable && scrollable._isChildControlVisible) {\n        return scrollable._isChildControlVisible(\"scrollbar-\" + axis);\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * Whether the scrollbar is exceeding it's maximum position.\n     *\n     * @param scrollbar {qx.ui.core.scroll.IScrollBar} Scrollbar to check.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @param amount {Number} Amount to scroll which may be negative.\n     * @return {Boolean} Whether the amount will exceed the scrollbar max position.\n     */\n    _isScrollbarExceedingMaxPos(scrollbar, axis, amount) {\n      var newPos = 0;\n      if (!scrollbar) {\n        return true;\n      }\n      newPos = scrollbar.getPosition() + amount;\n      return newPos > scrollbar.getMaximum() || newPos < 0;\n    },\n\n    /**\n     * Calculates the threshold exceedance (which may be negative).\n     *\n     * @param diff {Number} Difference value of one edgeType.\n     * @param threshold {Number} x-axis or y-axis threshold.\n     * @return {Number} Threshold exceedance amount (positive or negative).\n     */\n    _calculateThresholdExceedance(diff, threshold) {\n      var amount = threshold - Math.abs(diff);\n      return diff < 0 ? amount * -1 : amount;\n    },\n\n    /**\n     * Calculates the scroll amount (which may be negative).\n     * The amount is influenced by the scrollbar size (bigger = faster)\n     * the exceedanceAmount (bigger = faster) and the slowDownFactor.\n     *\n     * @param scrollbarSize {Number} Size of the scrollbar.\n     * @param exceedanceAmount {Number} Threshold exceedance amount (positive or negative).\n     * @return {Number} Scroll amount (positive or negative).\n     */\n    _calculateScrollAmount(scrollbarSize, exceedanceAmount) {\n      return Math.floor(\n        (scrollbarSize / 100) *\n          exceedanceAmount *\n          this.getDragScrollSlowDownFactor()\n      );\n    },\n\n    /**\n     * Scrolls the given scrollable on the given axis for the given amount.\n     *\n     * @param scrollable {qx.ui.core.Widget} Scrollable which has scrollbar child controls.\n     * @param axis {String} Can be 'y' or 'x'.\n     * @param exceedanceAmount {Number} Threshold exceedance amount (positive or negative).\n     */\n    _scrollBy(scrollable, axis, exceedanceAmount) {\n      var scrollbar = scrollable.getChildControl(\"scrollbar-\" + axis, true);\n      if (!scrollbar) {\n        return;\n      }\n      var bounds = scrollbar.getBounds(),\n        scrollbarSize = axis === \"x\" ? bounds.width : bounds.height,\n        amount = this._calculateScrollAmount(scrollbarSize, exceedanceAmount);\n\n      if (this._isScrollbarExceedingMaxPos(scrollbar, axis, amount)) {\n        this.__dragScrollTimer.stop();\n      }\n\n      scrollbar.scrollBy(amount);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n    EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the drag event.\n     *\n     * @param e {qx.event.type.Drag} The drag event instance.\n     */\n    __onDrag(e) {\n      if (this.__dragScrollTimer) {\n        // stop last scroll action\n        this.__dragScrollTimer.stop();\n      }\n\n      var target;\n      if (e.getOriginalTarget() instanceof qx.ui.core.Widget) {\n        target = e.getOriginalTarget();\n      } else {\n        target = qx.ui.core.Widget.getWidgetByElement(e.getOriginalTarget());\n      }\n      if (!target) {\n        return;\n      }\n      var scrollable;\n      if (this._isScrollable(target)) {\n        scrollable = target;\n      } else {\n        scrollable = this._findScrollableParent(target);\n      }\n\n      while (scrollable) {\n        var bounds = this._getBounds(scrollable),\n          xPos = e.getDocumentLeft(),\n          yPos = e.getDocumentTop(),\n          diff = {\n            left: bounds.left - xPos,\n            right: bounds.right - xPos,\n            top: bounds.top - yPos,\n            bottom: bounds.bottom - yPos\n          },\n          edgeType = null,\n          axis = \"\",\n          exceedanceAmount = 0;\n\n        edgeType = this._getEdgeType(\n          diff,\n          this.getDragScrollThresholdX(),\n          this.getDragScrollThresholdY()\n        );\n\n        if (!edgeType) {\n          scrollable = this._findScrollableParent(scrollable);\n          continue;\n        }\n        axis = this._getAxis(edgeType);\n\n        if (this._isScrollbarVisible(scrollable, axis)) {\n          exceedanceAmount = this._calculateThresholdExceedance(\n            diff[edgeType],\n            this._getThresholdByEdgeType(edgeType)\n          );\n\n          if (this.__dragScrollTimer) {\n            this.__dragScrollTimer.dispose();\n          }\n\n          this.__dragScrollTimer = new qx.event.Timer(50);\n          this.__dragScrollTimer.addListener(\n            \"interval\",\n            function (scrollable, axis, amount) {\n              this._scrollBy(scrollable, axis, amount);\n            }.bind(this, scrollable, axis, exceedanceAmount)\n          );\n\n          this.__dragScrollTimer.start();\n          e.stopPropagation();\n          return;\n        } else {\n          scrollable = this._findScrollableParent(scrollable);\n        }\n      }\n    },\n\n    /**\n     * Event handler for the dragend event.\n     *\n     * @param e {qx.event.type.Drag} The drag event instance.\n     */\n    __onDragend(e) {\n      if (this.__dragScrollTimer) {\n        this.__dragScrollTimer.stop();\n      }\n    }\n  },\n\n  destruct() {\n    if (this.__dragScrollTimer) {\n      this.__dragScrollTimer.dispose();\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}