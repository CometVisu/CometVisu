{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "selectionProvider",
    "__selectionProvider",
    "events",
    "changeSelected",
    "properties",
    "allowEmptySelection",
    "check",
    "init",
    "apply",
    "members",
    "__selected",
    "getSelected",
    "setSelected",
    "item",
    "__isChildElement",
    "Error",
    "__setSelected",
    "resetSelected",
    "isSelected",
    "isSelectionEmpty",
    "getSelectables",
    "all",
    "items",
    "getItems",
    "result",
    "i",
    "length",
    "isItemSelectable",
    "push",
    "getEnabled",
    "splice",
    "__applyAllowEmptySelection",
    "value",
    "old",
    "oldSelected",
    "newSelected",
    "isAllowEmptySelection",
    "firstElement",
    "fireDataEvent",
    "destruct",
    "toHashCode",
    "_disposeObjects",
    "ui",
    "SingleSelectionManager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/SingleSelectionManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Responsible for the single selection management.\n *\n * The class manage a list of {@link qx.ui.core.Widget} which are returned from\n * {@link qx.ui.core.ISingleSelectionProvider#getItems}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.core.SingleSelectionManager\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Construct the single selection manager.\n   *\n   * @param selectionProvider {qx.ui.core.ISingleSelectionProvider} The provider\n   * for selection.\n   */\n  construct(selectionProvider) {\n    super();\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      qx.core.Assert.assertInterface(\n        selectionProvider,\n        qx.ui.core.ISingleSelectionProvider,\n        \"Invalid selectionProvider!\"\n      );\n    }\n\n    this.__selectionProvider = selectionProvider;\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fires after the selection was modified */\n    changeSelected: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * If the value is <code>true</code> the manager allows an empty selection,\n     * otherwise the first selectable element returned from the\n     * <code>qx.ui.core.ISingleSelectionProvider</code> will be selected.\n     */\n    allowEmptySelection: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"__applyAllowEmptySelection\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.ui.core.Widget} The selected widget. */\n    __selected: null,\n\n    /** @type {qx.ui.core.ISingleSelectionProvider} The provider for selection management */\n    __selectionProvider: null,\n\n    /*\n    ---------------------------------------------------------------------------\n       PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selected element.\n     *\n     * @return {qx.ui.core.Widget|null} The current selected widget or\n     *    <code>null</code> if the selection is empty.\n     */\n    getSelected() {\n      return this.__selected;\n    },\n\n    /**\n     * Selects the passed element.\n     *\n     * @param item {qx.ui.core.Widget} Element to select.\n     * @throws {Error} if the element is not a child element.\n     */\n    setSelected(item) {\n      if (!this.__isChildElement(item)) {\n        throw new Error(\n          \"Could not select \" + item + \", because it is not a child element!\"\n        );\n      }\n\n      this.__setSelected(item);\n    },\n\n    /**\n     * Reset the current selection. If {@link #allowEmptySelection} is set to\n     * <code>true</code> the first element will be selected.\n     */\n    resetSelected() {\n      this.__setSelected(null);\n    },\n\n    /**\n     * Return <code>true</code> if the passed element is selected.\n     *\n     * @param item {qx.ui.core.Widget} Element to check if selected.\n     * @return {Boolean} <code>true</code> if passed element is selected,\n     *    <code>false</code> otherwise.\n     * @throws {Error} if the element is not a child element.\n     */\n    isSelected(item) {\n      if (!this.__isChildElement(item)) {\n        throw new Error(\n          \"Could not check if \" +\n            item +\n            \" is selected,\" +\n            \" because it is not a child element!\"\n        );\n      }\n      return this.__selected === item;\n    },\n\n    /**\n     * Returns <code>true</code> if selection is empty.\n     *\n     * @return {Boolean} <code>true</code> if selection is empty,\n     *    <code>false</code> otherwise.\n     */\n    isSelectionEmpty() {\n      return this.__selected == null;\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     * @return {qx.ui.core.Widget[]} The contained items.\n     */\n    getSelectables(all) {\n      var items = this.__selectionProvider.getItems();\n      var result = [];\n\n      for (var i = 0; i < items.length; i++) {\n        if (this.__selectionProvider.isItemSelectable(items[i])) {\n          result.push(items[i]);\n        }\n      }\n\n      // in case of an user selectable list, remove the enabled items\n      if (!all) {\n        for (var i = result.length - 1; i >= 0; i--) {\n          if (!result[i].getEnabled()) {\n            result.splice(i, 1);\n          }\n        }\n      }\n\n      return result;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // apply method\n    __applyAllowEmptySelection(value, old) {\n      if (!value) {\n        this.__setSelected(this.__selected);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set selected element.\n     *\n     * If passes value is <code>null</code>, the selection will be reseted.\n     *\n     * @param item {qx.ui.core.Widget | null} element to select, or\n     *    <code>null</code> to reset selection.\n     */\n    __setSelected(item) {\n      var oldSelected = this.__selected;\n      var newSelected = item;\n\n      if (newSelected != null && oldSelected === newSelected) {\n        return;\n      }\n\n      if (!this.isAllowEmptySelection() && newSelected == null) {\n        var firstElement = this.getSelectables(true)[0];\n\n        if (firstElement) {\n          newSelected = firstElement;\n        }\n      }\n\n      this.__selected = newSelected;\n      this.fireDataEvent(\"changeSelected\", newSelected, oldSelected);\n    },\n\n    /**\n     * Checks if passed element is a child element.\n     *\n     * @param item {qx.ui.core.Widget} Element to check if child element.\n     * @return {Boolean} <code>true</code> if element is child element,\n     *    <code>false</code> otherwise.\n     */\n    __isChildElement(item) {\n      var items = this.__selectionProvider.getItems();\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === item) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n  destruct() {\n    if (this.__selectionProvider.toHashCode) {\n      this._disposeObjects(\"__selectionProvider\");\n    } else {\n      this.__selectionProvider = null;\n    }\n\n    this._disposeObjects(\"__selected\");\n  }\n});\n"
  ],
  "mappings": "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"
}