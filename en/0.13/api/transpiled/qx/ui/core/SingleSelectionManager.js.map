{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "selectionProvider",
    "constructor",
    "call",
    "__selectionProvider",
    "events",
    "changeSelected",
    "properties",
    "allowEmptySelection",
    "check",
    "init",
    "apply",
    "members",
    "__selected",
    "getSelected",
    "setSelected",
    "item",
    "__isChildElement",
    "Error",
    "__setSelected",
    "resetSelected",
    "isSelected",
    "isSelectionEmpty",
    "getSelectables",
    "all",
    "items",
    "getItems",
    "result",
    "i",
    "length",
    "isItemSelectable",
    "push",
    "getEnabled",
    "splice",
    "__applyAllowEmptySelection",
    "__P_546_1",
    "value",
    "old",
    "__P_546_4",
    "oldSelected",
    "newSelected",
    "isAllowEmptySelection",
    "firstElement",
    "fireDataEvent",
    "__P_546_3",
    "destruct",
    "toHashCode",
    "_disposeObjects",
    "ui",
    "SingleSelectionManager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/SingleSelectionManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Responsible for the single selection management.\n *\n * The class manage a list of {@link qx.ui.core.Widget} which are returned from\n * {@link qx.ui.core.ISingleSelectionProvider#getItems}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.core.SingleSelectionManager\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Construct the single selection manager.\n   *\n   * @param selectionProvider {qx.ui.core.ISingleSelectionProvider} The provider\n   * for selection.\n   */\n  construct(selectionProvider) {\n    super();\n\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      qx.core.Assert.assertInterface(\n        selectionProvider,\n        qx.ui.core.ISingleSelectionProvider,\n        \"Invalid selectionProvider!\"\n      );\n    }\n\n    this.__selectionProvider = selectionProvider;\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fires after the selection was modified */\n    changeSelected: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * If the value is <code>true</code> the manager allows an empty selection,\n     * otherwise the first selectable element returned from the\n     * <code>qx.ui.core.ISingleSelectionProvider</code> will be selected.\n     */\n    allowEmptySelection: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"__applyAllowEmptySelection\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.ui.core.Widget} The selected widget. */\n    __selected: null,\n\n    /** @type {qx.ui.core.ISingleSelectionProvider} The provider for selection management */\n    __selectionProvider: null,\n\n    /*\n    ---------------------------------------------------------------------------\n       PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selected element.\n     *\n     * @return {qx.ui.core.Widget|null} The current selected widget or\n     *    <code>null</code> if the selection is empty.\n     */\n    getSelected() {\n      return this.__selected;\n    },\n\n    /**\n     * Selects the passed element.\n     *\n     * @param item {qx.ui.core.Widget} Element to select.\n     * @throws {Error} if the element is not a child element.\n     */\n    setSelected(item) {\n      if (!this.__isChildElement(item)) {\n        throw new Error(\n          \"Could not select \" + item + \", because it is not a child element!\"\n        );\n      }\n\n      this.__setSelected(item);\n    },\n\n    /**\n     * Reset the current selection. If {@link #allowEmptySelection} is set to\n     * <code>true</code> the first element will be selected.\n     */\n    resetSelected() {\n      this.__setSelected(null);\n    },\n\n    /**\n     * Return <code>true</code> if the passed element is selected.\n     *\n     * @param item {qx.ui.core.Widget} Element to check if selected.\n     * @return {Boolean} <code>true</code> if passed element is selected,\n     *    <code>false</code> otherwise.\n     * @throws {Error} if the element is not a child element.\n     */\n    isSelected(item) {\n      if (!this.__isChildElement(item)) {\n        throw new Error(\n          \"Could not check if \" +\n            item +\n            \" is selected,\" +\n            \" because it is not a child element!\"\n        );\n      }\n      return this.__selected === item;\n    },\n\n    /**\n     * Returns <code>true</code> if selection is empty.\n     *\n     * @return {Boolean} <code>true</code> if selection is empty,\n     *    <code>false</code> otherwise.\n     */\n    isSelectionEmpty() {\n      return this.__selected == null;\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     * @return {qx.ui.core.Widget[]} The contained items.\n     */\n    getSelectables(all) {\n      var items = this.__selectionProvider.getItems();\n      var result = [];\n\n      for (var i = 0; i < items.length; i++) {\n        if (this.__selectionProvider.isItemSelectable(items[i])) {\n          result.push(items[i]);\n        }\n      }\n\n      // in case of an user selectable list, remove the enabled items\n      if (!all) {\n        for (var i = result.length - 1; i >= 0; i--) {\n          if (!result[i].getEnabled()) {\n            result.splice(i, 1);\n          }\n        }\n      }\n\n      return result;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       APPLY METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // apply method\n    __applyAllowEmptySelection(value, old) {\n      if (!value) {\n        this.__setSelected(this.__selected);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set selected element.\n     *\n     * If passes value is <code>null</code>, the selection will be reseted.\n     *\n     * @param item {qx.ui.core.Widget | null} element to select, or\n     *    <code>null</code> to reset selection.\n     */\n    __setSelected(item) {\n      var oldSelected = this.__selected;\n      var newSelected = item;\n\n      if (newSelected != null && oldSelected === newSelected) {\n        return;\n      }\n\n      if (!this.isAllowEmptySelection() && newSelected == null) {\n        var firstElement = this.getSelectables(true)[0];\n\n        if (firstElement) {\n          newSelected = firstElement;\n        }\n      }\n\n      this.__selected = newSelected;\n      this.fireDataEvent(\"changeSelected\", newSelected, oldSelected);\n    },\n\n    /**\n     * Checks if passed element is a child element.\n     *\n     * @param item {qx.ui.core.Widget} Element to check if child element.\n     * @return {Boolean} <code>true</code> if element is child element,\n     *    <code>false</code> otherwise.\n     */\n    __isChildElement(item) {\n      var items = this.__selectionProvider.getItems();\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] === item) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n  destruct() {\n    if (this.__selectionProvider.toHashCode) {\n      this._disposeObjects(\"__selectionProvider\");\n    } else {\n      this.__selectionProvider = null;\n    }\n\n    this._disposeObjects(\"__selected\");\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}