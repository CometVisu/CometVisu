{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "content",
    "getContentElement",
    "addListener",
    "__onResizePointerDown",
    "__onResizePointerUp",
    "__onResizePointerMove",
    "__onResizePointerOut",
    "__onResizeLoseCapture",
    "domElement",
    "getDomElement",
    "window",
    "__dragDropHandler",
    "event",
    "Registration",
    "getManager",
    "getHandler",
    "handler",
    "DragDrop",
    "properties",
    "resizableTop",
    "check",
    "init",
    "resizableRight",
    "resizableBottom",
    "resizableLeft",
    "resizable",
    "group",
    "mode",
    "resizeSensitivity",
    "useResizeFrame",
    "members",
    "__resizeFrame",
    "__resizeActive",
    "__resizeLeft",
    "__resizeTop",
    "__resizeStart",
    "__resizeRange",
    "RESIZE_TOP",
    "RESIZE_BOTTOM",
    "RESIZE_LEFT",
    "RESIZE_RIGHT",
    "_getResizeFrame",
    "frame",
    "ui",
    "core",
    "Widget",
    "setAppearance",
    "exclude",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "__showResizeFrame",
    "__P_326_12",
    "location",
    "getContentLocation",
    "setUserBounds",
    "left",
    "top",
    "right",
    "bottom",
    "show",
    "setZIndex",
    "getZIndex",
    "__computeResizeResult",
    "__P_326_13",
    "e",
    "resizeActive",
    "hint",
    "getSizeHint",
    "range",
    "start",
    "width",
    "height",
    "diff",
    "Math",
    "max",
    "min",
    "getDocumentTop",
    "minHeight",
    "maxHeight",
    "getDocumentLeft",
    "minWidth",
    "maxWidth",
    "viewportLeft",
    "viewportTop",
    "parentLeft",
    "bounds",
    "parentTop",
    "__resizeCursors",
    "__computeResizeMode",
    "__P_326_15",
    "pointerTolerance",
    "getResizeSensitivity",
    "pointerLeft",
    "pointerTop",
    "__computeResizeActive",
    "__P_326_16",
    "getResizableTop",
    "abs",
    "getResizableBottom",
    "getResizableLeft",
    "getResizableRight",
    "__P_326_0",
    "getEnabled",
    "getPointerType",
    "addState",
    "getBounds",
    "lang",
    "Object",
    "clone",
    "parent",
    "getLayoutParent",
    "parentLocation",
    "parentBounds",
    "getUseResizeFrame",
    "capture",
    "stop",
    "__P_326_1",
    "hasState",
    "setWidth",
    "setHeight",
    "setLayoutProperties",
    "removeState",
    "resetCursor",
    "getApplicationRoot",
    "resetGlobalCursor",
    "releaseCapture",
    "stopPropagation",
    "__P_326_4",
    "__P_326_2",
    "isSessionActive",
    "root",
    "cursor",
    "setCursor",
    "setGlobalCursor",
    "getCursor",
    "__P_326_3",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "destroy",
    "MResizable"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MResizable.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007 David PÃ©rez Carmona\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * David Perez Carmona (david-perez)\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Provides resizing behavior to any widget.\r\n */\r\nqx.Mixin.define(\"qx.ui.core.MResizable\", {\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    // Register listeners to the content\r\n    var content = this.getContentElement();\r\n    content.addListener(\"pointerdown\", this.__onResizePointerDown, this, true);\r\n    content.addListener(\"pointerup\", this.__onResizePointerUp, this);\r\n    content.addListener(\"pointermove\", this.__onResizePointerMove, this);\r\n    content.addListener(\"pointerout\", this.__onResizePointerOut, this);\r\n    content.addListener(\"losecapture\", this.__onResizeLoseCapture, this);\r\n\r\n    // Get a reference of the drag and drop handler\r\n    var domElement = content.getDomElement();\r\n    if (domElement == null) {\r\n      domElement = window;\r\n    }\r\n\r\n    this.__dragDropHandler = qx.event.Registration.getManager(\r\n      domElement\r\n    ).getHandler(qx.event.handler.DragDrop);\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** Whether the top edge is resizable */\r\n    resizableTop: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    },\r\n\r\n    /** Whether the right edge is resizable */\r\n    resizableRight: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    },\r\n\r\n    /** Whether the bottom edge is resizable */\r\n    resizableBottom: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    },\r\n\r\n    /** Whether the left edge is resizable */\r\n    resizableLeft: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    },\r\n\r\n    /**\r\n     * Property group to configure the resize behaviour for all edges at once\r\n     */\r\n    resizable: {\r\n      group: [\r\n        \"resizableTop\",\r\n        \"resizableRight\",\r\n        \"resizableBottom\",\r\n        \"resizableLeft\"\r\n      ],\r\n\r\n      mode: \"shorthand\"\r\n    },\r\n\r\n    /** The tolerance to activate resizing */\r\n    resizeSensitivity: {\r\n      check: \"Integer\",\r\n      init: 5\r\n    },\r\n\r\n    /** Whether a frame replacement should be used during the resize sequence */\r\n    useResizeFrame: {\r\n      check: \"Boolean\",\r\n      init: true\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\r\n  members: {\r\n    __dragDropHandler: null,\r\n    __resizeFrame: null,\r\n    __resizeActive: null,\r\n    __resizeLeft: null,\r\n    __resizeTop: null,\r\n    __resizeStart: null,\r\n    __resizeRange: null,\r\n\r\n    RESIZE_TOP: 1,\r\n    RESIZE_BOTTOM: 2,\r\n    RESIZE_LEFT: 4,\r\n    RESIZE_RIGHT: 8,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CORE FEATURES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Get the widget, which draws the resize/move frame. The resize frame is\r\n     * shared by all widgets and is added to the root widget.\r\n     *\r\n     * @return {qx.ui.core.Widget} The resize frame\r\n     */\r\n    _getResizeFrame() {\r\n      var frame = this.__resizeFrame;\r\n      if (!frame) {\r\n        frame = this.__resizeFrame = new qx.ui.core.Widget();\r\n        frame.setAppearance(\"resize-frame\");\r\n        frame.exclude();\r\n\r\n        qx.core.Init.getApplication().getRoot().add(frame);\r\n      }\r\n\r\n      return frame;\r\n    },\r\n\r\n    /**\r\n     * Creates, shows and syncs the frame with the widget.\r\n     */\r\n    __showResizeFrame() {\r\n      var location = this.getContentLocation();\r\n      var frame = this._getResizeFrame();\r\n      frame.setUserBounds(\r\n        location.left,\r\n        location.top,\r\n        location.right - location.left,\r\n        location.bottom - location.top\r\n      );\r\n\r\n      frame.show();\r\n      frame.setZIndex(this.getZIndex() + 1);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      RESIZE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Computes the new boundaries at each interval\r\n     * of the resize sequence.\r\n     *\r\n     * @param e {qx.event.type.Pointer} Last pointer event\r\n     * @return {Map} A map with the computed boundaries\r\n     */\r\n    __computeResizeResult(e) {\r\n      // Detect mode\r\n      var resizeActive = this.__resizeActive;\r\n\r\n      // Read size hint\r\n      var hint = this.getSizeHint();\r\n      var range = this.__resizeRange;\r\n\r\n      // Read original values\r\n      var start = this.__resizeStart;\r\n      var width = start.width;\r\n      var height = start.height;\r\n      var left = start.left;\r\n      var top = start.top;\r\n      var diff;\r\n\r\n      if (resizeActive & this.RESIZE_TOP || resizeActive & this.RESIZE_BOTTOM) {\r\n        diff =\r\n          Math.max(range.top, Math.min(range.bottom, e.getDocumentTop())) -\r\n          this.__resizeTop;\r\n\r\n        if (resizeActive & this.RESIZE_TOP) {\r\n          height -= diff;\r\n        } else {\r\n          height += diff;\r\n        }\r\n\r\n        if (height < hint.minHeight) {\r\n          height = hint.minHeight;\r\n        } else if (height > hint.maxHeight) {\r\n          height = hint.maxHeight;\r\n        }\r\n\r\n        if (resizeActive & this.RESIZE_TOP) {\r\n          top += start.height - height;\r\n        }\r\n      }\r\n\r\n      if (resizeActive & this.RESIZE_LEFT || resizeActive & this.RESIZE_RIGHT) {\r\n        diff =\r\n          Math.max(range.left, Math.min(range.right, e.getDocumentLeft())) -\r\n          this.__resizeLeft;\r\n\r\n        if (resizeActive & this.RESIZE_LEFT) {\r\n          width -= diff;\r\n        } else {\r\n          width += diff;\r\n        }\r\n\r\n        if (width < hint.minWidth) {\r\n          width = hint.minWidth;\r\n        } else if (width > hint.maxWidth) {\r\n          width = hint.maxWidth;\r\n        }\r\n\r\n        if (resizeActive & this.RESIZE_LEFT) {\r\n          left += start.width - width;\r\n        }\r\n      }\r\n\r\n      return {\r\n        // left and top of the visible widget\r\n        viewportLeft: left,\r\n        viewportTop: top,\r\n\r\n        parentLeft: start.bounds.left + left - start.left,\r\n        parentTop: start.bounds.top + top - start.top,\r\n\r\n        // dimensions of the visible widget\r\n        width: width,\r\n        height: height\r\n      };\r\n    },\r\n\r\n    /**\r\n     * @type {Map} Maps internal states to cursor symbols to use\r\n     *\r\n     * @lint ignoreReferenceField(__resizeCursors)\r\n     */\r\n    __resizeCursors: {\r\n      1: \"n-resize\",\r\n      2: \"s-resize\",\r\n      4: \"w-resize\",\r\n      8: \"e-resize\",\r\n\r\n      5: \"nw-resize\",\r\n      6: \"sw-resize\",\r\n      9: \"ne-resize\",\r\n      10: \"se-resize\"\r\n    },\r\n\r\n    /**\r\n     * Updates the internally stored resize mode\r\n     *\r\n     * @param e {qx.event.type.Pointer} Last pointer event\r\n     */\r\n    __computeResizeMode(e) {\r\n      var location = this.getContentLocation();\r\n      var pointerTolerance = this.getResizeSensitivity();\r\n\r\n      var pointerLeft = e.getDocumentLeft();\r\n      var pointerTop = e.getDocumentTop();\r\n\r\n      var resizeActive = this.__computeResizeActive(\r\n        location,\r\n        pointerLeft,\r\n        pointerTop,\r\n        pointerTolerance\r\n      );\r\n\r\n      // check again in case we have a corner [BUG #1200]\r\n      if (resizeActive > 0) {\r\n        // this is really a | (or)!\r\n        resizeActive =\r\n          resizeActive |\r\n          this.__computeResizeActive(\r\n            location,\r\n            pointerLeft,\r\n            pointerTop,\r\n            pointerTolerance * 2\r\n          );\r\n      }\r\n\r\n      this.__resizeActive = resizeActive;\r\n    },\r\n\r\n    /**\r\n     * Internal helper for computing the proper resize action based on the\r\n     * given parameters.\r\n     *\r\n     * @param location {Map} The current location of the widget.\r\n     * @param pointerLeft {Integer} The left position of the pointer.\r\n     * @param pointerTop {Integer} The top position of the pointer.\r\n     * @param pointerTolerance {Integer} The desired distance to the edge.\r\n     * @return {Integer} The resize active number.\r\n     */\r\n    __computeResizeActive(location, pointerLeft, pointerTop, pointerTolerance) {\r\n      var resizeActive = 0;\r\n\r\n      // TOP\r\n      if (\r\n        this.getResizableTop() &&\r\n        Math.abs(location.top - pointerTop) < pointerTolerance &&\r\n        pointerLeft > location.left - pointerTolerance &&\r\n        pointerLeft < location.right + pointerTolerance\r\n      ) {\r\n        resizeActive += this.RESIZE_TOP;\r\n\r\n        // BOTTOM\r\n      } else if (\r\n        this.getResizableBottom() &&\r\n        Math.abs(location.bottom - pointerTop) < pointerTolerance &&\r\n        pointerLeft > location.left - pointerTolerance &&\r\n        pointerLeft < location.right + pointerTolerance\r\n      ) {\r\n        resizeActive += this.RESIZE_BOTTOM;\r\n      }\r\n\r\n      // LEFT\r\n      if (\r\n        this.getResizableLeft() &&\r\n        Math.abs(location.left - pointerLeft) < pointerTolerance &&\r\n        pointerTop > location.top - pointerTolerance &&\r\n        pointerTop < location.bottom + pointerTolerance\r\n      ) {\r\n        resizeActive += this.RESIZE_LEFT;\r\n\r\n        // RIGHT\r\n      } else if (\r\n        this.getResizableRight() &&\r\n        Math.abs(location.right - pointerLeft) < pointerTolerance &&\r\n        pointerTop > location.top - pointerTolerance &&\r\n        pointerTop < location.bottom + pointerTolerance\r\n      ) {\r\n        resizeActive += this.RESIZE_RIGHT;\r\n      }\r\n      return resizeActive;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      RESIZE EVENT HANDLERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event handler for the pointer down event\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event instance\r\n     */\r\n    __onResizePointerDown(e) {\r\n      // Check for active resize\r\n      if (\r\n        !this.__resizeActive ||\r\n        !this.getEnabled() ||\r\n        e.getPointerType() == \"touch\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Add resize state\r\n      this.addState(\"resize\");\r\n\r\n      // Store pointer coordinates\r\n      this.__resizeLeft = e.getDocumentLeft();\r\n      this.__resizeTop = e.getDocumentTop();\r\n\r\n      // Cache bounds\r\n      var location = this.getContentLocation();\r\n      var bounds = this.getBounds();\r\n\r\n      this.__resizeStart = {\r\n        top: location.top,\r\n        left: location.left,\r\n        width: location.right - location.left,\r\n        height: location.bottom - location.top,\r\n        bounds: qx.lang.Object.clone(bounds)\r\n      };\r\n\r\n      // Compute range\r\n      var parent = this.getLayoutParent();\r\n      var parentLocation = parent.getContentLocation();\r\n      var parentBounds = parent.getBounds();\r\n\r\n      this.__resizeRange = {\r\n        left: parentLocation.left,\r\n        top: parentLocation.top,\r\n        right: parentLocation.left + parentBounds.width,\r\n        bottom: parentLocation.top + parentBounds.height\r\n      };\r\n\r\n      // Show frame if configured this way\r\n      if (this.getUseResizeFrame()) {\r\n        this.__showResizeFrame();\r\n      }\r\n\r\n      // Enable capturing\r\n      this.capture();\r\n\r\n      // Stop event\r\n      e.stop();\r\n    },\r\n\r\n    /**\r\n     * Event handler for the pointer up event\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event instance\r\n     */\r\n    __onResizePointerUp(e) {\r\n      // Check for active resize\r\n      if (\r\n        !this.hasState(\"resize\") ||\r\n        !this.getEnabled() ||\r\n        e.getPointerType() == \"touch\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Hide frame afterwards\r\n      if (this.getUseResizeFrame()) {\r\n        this._getResizeFrame().exclude();\r\n      }\r\n\r\n      // Compute bounds\r\n      var bounds = this.__computeResizeResult(e);\r\n\r\n      // Sync with widget\r\n      this.setWidth(bounds.width);\r\n      this.setHeight(bounds.height);\r\n\r\n      // Update coordinate in canvas\r\n      if (this.getResizableLeft() || this.getResizableTop()) {\r\n        this.setLayoutProperties({\r\n          left: bounds.parentLeft,\r\n          top: bounds.parentTop\r\n        });\r\n      }\r\n\r\n      // Clear mode\r\n      this.__resizeActive = 0;\r\n\r\n      // Remove resize state\r\n      this.removeState(\"resize\");\r\n\r\n      // Reset cursor\r\n      this.resetCursor();\r\n      this.getApplicationRoot().resetGlobalCursor();\r\n\r\n      // Disable capturing\r\n      this.releaseCapture();\r\n\r\n      e.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * Event listener for <code>losecapture</code> event.\r\n     *\r\n     * @param e {qx.event.type.Event} Lose capture event\r\n     */\r\n    __onResizeLoseCapture(e) {\r\n      // Check for active resize\r\n      if (!this.__resizeActive) {\r\n        return;\r\n      }\r\n\r\n      // Reset cursor\r\n      this.resetCursor();\r\n      this.getApplicationRoot().resetGlobalCursor();\r\n\r\n      // Remove drag state\r\n      this.removeState(\"move\");\r\n\r\n      // Hide frame afterwards\r\n      if (this.getUseResizeFrame()) {\r\n        this._getResizeFrame().exclude();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event handler for the pointer move event\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event instance\r\n     */\r\n    __onResizePointerMove(e) {\r\n      if (!this.getEnabled() || e.getPointerType() == \"touch\") {\r\n        return;\r\n      }\r\n\r\n      if (this.hasState(\"resize\")) {\r\n        var bounds = this.__computeResizeResult(e);\r\n\r\n        // Update widget\r\n        if (this.getUseResizeFrame()) {\r\n          // Sync new bounds to frame\r\n          var frame = this._getResizeFrame();\r\n          frame.setUserBounds(\r\n            bounds.viewportLeft,\r\n            bounds.viewportTop,\r\n            bounds.width,\r\n            bounds.height\r\n          );\r\n        } else {\r\n          // Update size\r\n          this.setWidth(bounds.width);\r\n          this.setHeight(bounds.height);\r\n\r\n          // Update coordinate in canvas\r\n          if (this.getResizableLeft() || this.getResizableTop()) {\r\n            this.setLayoutProperties({\r\n              left: bounds.parentLeft,\r\n              top: bounds.parentTop\r\n            });\r\n          }\r\n        }\r\n\r\n        // Full stop for event\r\n        e.stopPropagation();\r\n      } else if (\r\n        !this.hasState(\"maximized\") &&\r\n        !this.__dragDropHandler.isSessionActive()\r\n      ) {\r\n        this.__computeResizeMode(e);\r\n\r\n        var resizeActive = this.__resizeActive;\r\n        var root = this.getApplicationRoot();\r\n\r\n        if (resizeActive) {\r\n          var cursor = this.__resizeCursors[resizeActive];\r\n          this.setCursor(cursor);\r\n          root.setGlobalCursor(cursor);\r\n        } else if (this.getCursor()) {\r\n          this.resetCursor();\r\n          root.resetGlobalCursor();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event handler for the pointer out event\r\n     *\r\n     * @param e {qx.event.type.Pointer} The pointer event instance\r\n     */\r\n    __onResizePointerOut(e) {\r\n      if (e.getPointerType() == \"touch\") {\r\n        return;\r\n      }\r\n      // When the pointer left the window and resizing is not yet\r\n      // active we must be sure to (especially) reset the global\r\n      // cursor.\r\n      if (this.getCursor() && !this.hasState(\"resize\")) {\r\n        this.resetCursor();\r\n        this.getApplicationRoot().resetGlobalCursor();\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (this.getCursor()) {\r\n      this.getApplicationRoot().resetGlobalCursor();\r\n    }\r\n\r\n    if (this.__resizeFrame != null && !qx.core.ObjectRegistry.inShutDown) {\r\n      this.__resizeFrame.destroy();\r\n      this.__resizeFrame = null;\r\n    }\r\n\r\n    this.__dragDropHandler = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}