{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "content",
    "getContentElement",
    "addListener",
    "__onResizePointerDown",
    "__onResizePointerUp",
    "__onResizePointerMove",
    "__onResizePointerOut",
    "__onResizeLoseCapture",
    "domElement",
    "getDomElement",
    "window",
    "__dragDropHandler",
    "event",
    "Registration",
    "getManager",
    "getHandler",
    "handler",
    "DragDrop",
    "properties",
    "resizableTop",
    "check",
    "init",
    "resizableRight",
    "resizableBottom",
    "resizableLeft",
    "resizable",
    "group",
    "mode",
    "resizeSensitivity",
    "useResizeFrame",
    "members",
    "__resizeFrame",
    "__resizeActive",
    "__resizeLeft",
    "__resizeTop",
    "__resizeStart",
    "__resizeRange",
    "RESIZE_TOP",
    "RESIZE_BOTTOM",
    "RESIZE_LEFT",
    "RESIZE_RIGHT",
    "_getResizeFrame",
    "frame",
    "ui",
    "core",
    "Widget",
    "setAppearance",
    "exclude",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "__showResizeFrame",
    "location",
    "getContentLocation",
    "setUserBounds",
    "left",
    "top",
    "right",
    "bottom",
    "show",
    "setZIndex",
    "getZIndex",
    "__computeResizeResult",
    "e",
    "resizeActive",
    "hint",
    "getSizeHint",
    "range",
    "start",
    "width",
    "height",
    "diff",
    "Math",
    "max",
    "min",
    "getDocumentTop",
    "minHeight",
    "maxHeight",
    "getDocumentLeft",
    "minWidth",
    "maxWidth",
    "viewportLeft",
    "viewportTop",
    "parentLeft",
    "bounds",
    "parentTop",
    "__resizeCursors",
    "__computeResizeMode",
    "pointerTolerance",
    "getResizeSensitivity",
    "pointerLeft",
    "pointerTop",
    "__computeResizeActive",
    "getResizableTop",
    "abs",
    "getResizableBottom",
    "getResizableLeft",
    "getResizableRight",
    "getEnabled",
    "getPointerType",
    "addState",
    "getBounds",
    "lang",
    "Object",
    "clone",
    "parent",
    "getLayoutParent",
    "parentLocation",
    "parentBounds",
    "getUseResizeFrame",
    "capture",
    "stop",
    "hasState",
    "setWidth",
    "setHeight",
    "setLayoutProperties",
    "removeState",
    "resetCursor",
    "getApplicationRoot",
    "resetGlobalCursor",
    "releaseCapture",
    "stopPropagation",
    "isSessionActive",
    "root",
    "cursor",
    "setCursor",
    "setGlobalCursor",
    "getCursor",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "destroy",
    "MResizable"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MResizable.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 David PÃ©rez Carmona\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * David Perez Carmona (david-perez)\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Provides resizing behavior to any widget.\n */\nqx.Mixin.define(\"qx.ui.core.MResizable\", {\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    // Register listeners to the content\n    var content = this.getContentElement();\n    content.addListener(\"pointerdown\", this.__onResizePointerDown, this, true);\n    content.addListener(\"pointerup\", this.__onResizePointerUp, this);\n    content.addListener(\"pointermove\", this.__onResizePointerMove, this);\n    content.addListener(\"pointerout\", this.__onResizePointerOut, this);\n    content.addListener(\"losecapture\", this.__onResizeLoseCapture, this);\n\n    // Get a reference of the drag and drop handler\n    var domElement = content.getDomElement();\n    if (domElement == null) {\n      domElement = window;\n    }\n\n    this.__dragDropHandler = qx.event.Registration.getManager(\n      domElement\n    ).getHandler(qx.event.handler.DragDrop);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Whether the top edge is resizable */\n    resizableTop: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether the right edge is resizable */\n    resizableRight: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether the bottom edge is resizable */\n    resizableBottom: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether the left edge is resizable */\n    resizableLeft: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /**\n     * Property group to configure the resize behaviour for all edges at once\n     */\n    resizable: {\n      group: [\n        \"resizableTop\",\n        \"resizableRight\",\n        \"resizableBottom\",\n        \"resizableLeft\"\n      ],\n\n      mode: \"shorthand\"\n    },\n\n    /** The tolerance to activate resizing */\n    resizeSensitivity: {\n      check: \"Integer\",\n      init: 5\n    },\n\n    /** Whether a frame replacement should be used during the resize sequence */\n    useResizeFrame: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __dragDropHandler: null,\n    __resizeFrame: null,\n    __resizeActive: null,\n    __resizeLeft: null,\n    __resizeTop: null,\n    __resizeStart: null,\n    __resizeRange: null,\n\n    RESIZE_TOP: 1,\n    RESIZE_BOTTOM: 2,\n    RESIZE_LEFT: 4,\n    RESIZE_RIGHT: 8,\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the widget, which draws the resize/move frame. The resize frame is\n     * shared by all widgets and is added to the root widget.\n     *\n     * @return {qx.ui.core.Widget} The resize frame\n     */\n    _getResizeFrame() {\n      var frame = this.__resizeFrame;\n      if (!frame) {\n        frame = this.__resizeFrame = new qx.ui.core.Widget();\n        frame.setAppearance(\"resize-frame\");\n        frame.exclude();\n\n        qx.core.Init.getApplication().getRoot().add(frame);\n      }\n\n      return frame;\n    },\n\n    /**\n     * Creates, shows and syncs the frame with the widget.\n     */\n    __showResizeFrame() {\n      var location = this.getContentLocation();\n      var frame = this._getResizeFrame();\n      frame.setUserBounds(\n        location.left,\n        location.top,\n        location.right - location.left,\n        location.bottom - location.top\n      );\n\n      frame.show();\n      frame.setZIndex(this.getZIndex() + 1);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESIZE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the new boundaries at each interval\n     * of the resize sequence.\n     *\n     * @param e {qx.event.type.Pointer} Last pointer event\n     * @return {Map} A map with the computed boundaries\n     */\n    __computeResizeResult(e) {\n      // Detect mode\n      var resizeActive = this.__resizeActive;\n\n      // Read size hint\n      var hint = this.getSizeHint();\n      var range = this.__resizeRange;\n\n      // Read original values\n      var start = this.__resizeStart;\n      var width = start.width;\n      var height = start.height;\n      var left = start.left;\n      var top = start.top;\n      var diff;\n\n      if (resizeActive & this.RESIZE_TOP || resizeActive & this.RESIZE_BOTTOM) {\n        diff =\n          Math.max(range.top, Math.min(range.bottom, e.getDocumentTop())) -\n          this.__resizeTop;\n\n        if (resizeActive & this.RESIZE_TOP) {\n          height -= diff;\n        } else {\n          height += diff;\n        }\n\n        if (height < hint.minHeight) {\n          height = hint.minHeight;\n        } else if (height > hint.maxHeight) {\n          height = hint.maxHeight;\n        }\n\n        if (resizeActive & this.RESIZE_TOP) {\n          top += start.height - height;\n        }\n      }\n\n      if (resizeActive & this.RESIZE_LEFT || resizeActive & this.RESIZE_RIGHT) {\n        diff =\n          Math.max(range.left, Math.min(range.right, e.getDocumentLeft())) -\n          this.__resizeLeft;\n\n        if (resizeActive & this.RESIZE_LEFT) {\n          width -= diff;\n        } else {\n          width += diff;\n        }\n\n        if (width < hint.minWidth) {\n          width = hint.minWidth;\n        } else if (width > hint.maxWidth) {\n          width = hint.maxWidth;\n        }\n\n        if (resizeActive & this.RESIZE_LEFT) {\n          left += start.width - width;\n        }\n      }\n\n      return {\n        // left and top of the visible widget\n        viewportLeft: left,\n        viewportTop: top,\n\n        parentLeft: start.bounds.left + left - start.left,\n        parentTop: start.bounds.top + top - start.top,\n\n        // dimensions of the visible widget\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * @type {Map} Maps internal states to cursor symbols to use\n     *\n     * @lint ignoreReferenceField(__resizeCursors)\n     */\n    __resizeCursors: {\n      1: \"n-resize\",\n      2: \"s-resize\",\n      4: \"w-resize\",\n      8: \"e-resize\",\n\n      5: \"nw-resize\",\n      6: \"sw-resize\",\n      9: \"ne-resize\",\n      10: \"se-resize\"\n    },\n\n    /**\n     * Updates the internally stored resize mode\n     *\n     * @param e {qx.event.type.Pointer} Last pointer event\n     */\n    __computeResizeMode(e) {\n      var location = this.getContentLocation();\n      var pointerTolerance = this.getResizeSensitivity();\n\n      var pointerLeft = e.getDocumentLeft();\n      var pointerTop = e.getDocumentTop();\n\n      var resizeActive = this.__computeResizeActive(\n        location,\n        pointerLeft,\n        pointerTop,\n        pointerTolerance\n      );\n\n      // check again in case we have a corner [BUG #1200]\n      if (resizeActive > 0) {\n        // this is really a | (or)!\n        resizeActive =\n          resizeActive |\n          this.__computeResizeActive(\n            location,\n            pointerLeft,\n            pointerTop,\n            pointerTolerance * 2\n          );\n      }\n\n      this.__resizeActive = resizeActive;\n    },\n\n    /**\n     * Internal helper for computing the proper resize action based on the\n     * given parameters.\n     *\n     * @param location {Map} The current location of the widget.\n     * @param pointerLeft {Integer} The left position of the pointer.\n     * @param pointerTop {Integer} The top position of the pointer.\n     * @param pointerTolerance {Integer} The desired distance to the edge.\n     * @return {Integer} The resize active number.\n     */\n    __computeResizeActive(location, pointerLeft, pointerTop, pointerTolerance) {\n      var resizeActive = 0;\n\n      // TOP\n      if (\n        this.getResizableTop() &&\n        Math.abs(location.top - pointerTop) < pointerTolerance &&\n        pointerLeft > location.left - pointerTolerance &&\n        pointerLeft < location.right + pointerTolerance\n      ) {\n        resizeActive += this.RESIZE_TOP;\n\n        // BOTTOM\n      } else if (\n        this.getResizableBottom() &&\n        Math.abs(location.bottom - pointerTop) < pointerTolerance &&\n        pointerLeft > location.left - pointerTolerance &&\n        pointerLeft < location.right + pointerTolerance\n      ) {\n        resizeActive += this.RESIZE_BOTTOM;\n      }\n\n      // LEFT\n      if (\n        this.getResizableLeft() &&\n        Math.abs(location.left - pointerLeft) < pointerTolerance &&\n        pointerTop > location.top - pointerTolerance &&\n        pointerTop < location.bottom + pointerTolerance\n      ) {\n        resizeActive += this.RESIZE_LEFT;\n\n        // RIGHT\n      } else if (\n        this.getResizableRight() &&\n        Math.abs(location.right - pointerLeft) < pointerTolerance &&\n        pointerTop > location.top - pointerTolerance &&\n        pointerTop < location.bottom + pointerTolerance\n      ) {\n        resizeActive += this.RESIZE_RIGHT;\n      }\n      return resizeActive;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESIZE EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the pointer down event\n     *\n     * @param e {qx.event.type.Pointer} The pointer event instance\n     */\n    __onResizePointerDown(e) {\n      // Check for active resize\n      if (\n        !this.__resizeActive ||\n        !this.getEnabled() ||\n        e.getPointerType() == \"touch\"\n      ) {\n        return;\n      }\n\n      // Add resize state\n      this.addState(\"resize\");\n\n      // Store pointer coordinates\n      this.__resizeLeft = e.getDocumentLeft();\n      this.__resizeTop = e.getDocumentTop();\n\n      // Cache bounds\n      var location = this.getContentLocation();\n      var bounds = this.getBounds();\n\n      this.__resizeStart = {\n        top: location.top,\n        left: location.left,\n        width: location.right - location.left,\n        height: location.bottom - location.top,\n        bounds: qx.lang.Object.clone(bounds)\n      };\n\n      // Compute range\n      var parent = this.getLayoutParent();\n      var parentLocation = parent.getContentLocation();\n      var parentBounds = parent.getBounds();\n\n      this.__resizeRange = {\n        left: parentLocation.left,\n        top: parentLocation.top,\n        right: parentLocation.left + parentBounds.width,\n        bottom: parentLocation.top + parentBounds.height\n      };\n\n      // Show frame if configured this way\n      if (this.getUseResizeFrame()) {\n        this.__showResizeFrame();\n      }\n\n      // Enable capturing\n      this.capture();\n\n      // Stop event\n      e.stop();\n    },\n\n    /**\n     * Event handler for the pointer up event\n     *\n     * @param e {qx.event.type.Pointer} The pointer event instance\n     */\n    __onResizePointerUp(e) {\n      // Check for active resize\n      if (\n        !this.hasState(\"resize\") ||\n        !this.getEnabled() ||\n        e.getPointerType() == \"touch\"\n      ) {\n        return;\n      }\n\n      // Hide frame afterwards\n      if (this.getUseResizeFrame()) {\n        this._getResizeFrame().exclude();\n      }\n\n      // Compute bounds\n      var bounds = this.__computeResizeResult(e);\n\n      // Sync with widget\n      this.setWidth(bounds.width);\n      this.setHeight(bounds.height);\n\n      // Update coordinate in canvas\n      if (this.getResizableLeft() || this.getResizableTop()) {\n        this.setLayoutProperties({\n          left: bounds.parentLeft,\n          top: bounds.parentTop\n        });\n      }\n\n      // Clear mode\n      this.__resizeActive = 0;\n\n      // Remove resize state\n      this.removeState(\"resize\");\n\n      // Reset cursor\n      this.resetCursor();\n      this.getApplicationRoot().resetGlobalCursor();\n\n      // Disable capturing\n      this.releaseCapture();\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Event listener for <code>losecapture</code> event.\n     *\n     * @param e {qx.event.type.Event} Lose capture event\n     */\n    __onResizeLoseCapture(e) {\n      // Check for active resize\n      if (!this.__resizeActive) {\n        return;\n      }\n\n      // Reset cursor\n      this.resetCursor();\n      this.getApplicationRoot().resetGlobalCursor();\n\n      // Remove drag state\n      this.removeState(\"move\");\n\n      // Hide frame afterwards\n      if (this.getUseResizeFrame()) {\n        this._getResizeFrame().exclude();\n      }\n    },\n\n    /**\n     * Event handler for the pointer move event\n     *\n     * @param e {qx.event.type.Pointer} The pointer event instance\n     */\n    __onResizePointerMove(e) {\n      if (!this.getEnabled() || e.getPointerType() == \"touch\") {\n        return;\n      }\n\n      if (this.hasState(\"resize\")) {\n        var bounds = this.__computeResizeResult(e);\n\n        // Update widget\n        if (this.getUseResizeFrame()) {\n          // Sync new bounds to frame\n          var frame = this._getResizeFrame();\n          frame.setUserBounds(\n            bounds.viewportLeft,\n            bounds.viewportTop,\n            bounds.width,\n            bounds.height\n          );\n        } else {\n          // Update size\n          this.setWidth(bounds.width);\n          this.setHeight(bounds.height);\n\n          // Update coordinate in canvas\n          if (this.getResizableLeft() || this.getResizableTop()) {\n            this.setLayoutProperties({\n              left: bounds.parentLeft,\n              top: bounds.parentTop\n            });\n          }\n        }\n\n        // Full stop for event\n        e.stopPropagation();\n      } else if (\n        !this.hasState(\"maximized\") &&\n        !this.__dragDropHandler.isSessionActive()\n      ) {\n        this.__computeResizeMode(e);\n\n        var resizeActive = this.__resizeActive;\n        var root = this.getApplicationRoot();\n\n        if (resizeActive) {\n          var cursor = this.__resizeCursors[resizeActive];\n          this.setCursor(cursor);\n          root.setGlobalCursor(cursor);\n        } else if (this.getCursor()) {\n          this.resetCursor();\n          root.resetGlobalCursor();\n        }\n      }\n    },\n\n    /**\n     * Event handler for the pointer out event\n     *\n     * @param e {qx.event.type.Pointer} The pointer event instance\n     */\n    __onResizePointerOut(e) {\n      if (e.getPointerType() == \"touch\") {\n        return;\n      }\n      // When the pointer left the window and resizing is not yet\n      // active we must be sure to (especially) reset the global\n      // cursor.\n      if (this.getCursor() && !this.hasState(\"resize\")) {\n        this.resetCursor();\n        this.getApplicationRoot().resetGlobalCursor();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.getCursor()) {\n      this.getApplicationRoot().resetGlobalCursor();\n    }\n\n    if (this.__resizeFrame != null && !qx.core.ObjectRegistry.inShutDown) {\n      this.__resizeFrame.destroy();\n      this.__resizeFrame = null;\n    }\n\n    this.__dragDropHandler = null;\n  }\n});\n"
  ],
  "mappings": "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"
}