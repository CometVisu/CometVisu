{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "include",
    "locale",
    "MTranslation",
    "implement",
    "IDisposable",
    "construct",
    "constructor",
    "call",
    "__contentElement",
    "__createContentElement",
    "initFocusable",
    "initSelectable",
    "initNativeContextMenu",
    "events",
    "appear",
    "disappear",
    "createChildControl",
    "resize",
    "move",
    "syncAppearance",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "auxclick",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "dbltap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "roll",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "capture",
    "losecapture",
    "drop",
    "dragleave",
    "dragover",
    "drag",
    "dragstart",
    "dragend",
    "dragchange",
    "droprequest",
    "properties",
    "paddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "zIndex",
    "nullable",
    "event",
    "decorator",
    "backgroundColor",
    "textColor",
    "inheritable",
    "font",
    "dereference",
    "opacity",
    "cursor",
    "toolTip",
    "toolTipText",
    "toolTipIcon",
    "blockToolTip",
    "showToolTipWhenDisabled",
    "visibility",
    "enabled",
    "anonymous",
    "tabIndex",
    "focusable",
    "keepFocus",
    "keepActive",
    "draggable",
    "droppable",
    "selectable",
    "contextMenu",
    "nativeContextMenu",
    "appearance",
    "statics",
    "DEBUG",
    "UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR",
    "getWidgetByElement",
    "element",
    "considerAnonymousState",
    "widget",
    "$$qxObject",
    "getAnonymous",
    "parentNode",
    "e",
    "contains",
    "parent",
    "child",
    "getLayoutParent",
    "__separatorPool",
    "util",
    "ObjectPool",
    "members",
    "__initialAppearanceApplied",
    "__toolTipTextListenerId",
    "__layoutManager",
    "_getLayout",
    "_setLayout",
    "layout",
    "connectToWidget",
    "queue",
    "Layout",
    "add",
    "setLayoutParent",
    "$$parent",
    "content",
    "getContentElement",
    "$$disposed",
    "remove",
    "$$refreshInheritables",
    "Visibility",
    "_updateInsets",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "Widget",
    "superclass",
    "prototype",
    "lang",
    "Object",
    "isEmpty",
    "inner",
    "size",
    "pixel",
    "contentStyles",
    "position",
    "margin",
    "keys",
    "length",
    "setStyles",
    "local",
    "hasLayoutChildren",
    "inset",
    "getInsets",
    "innerWidth",
    "right",
    "innerHeight",
    "bottom",
    "getDecorator",
    "decoratorPadding",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getPadding",
    "getPaddingTop",
    "getPaddingRight",
    "getPaddingBottom",
    "getPaddingLeft",
    "Error",
    "_findTopControl",
    "hasListener",
    "fireDataEvent",
    "getBounds",
    "__separators",
    "clearSeparators",
    "reg",
    "pool",
    "i",
    "l",
    "poolObject",
    "renderSeparator",
    "separator",
    "bounds",
    "getObject",
    "set",
    "elem",
    "domEl",
    "getDomElement",
    "style",
    "push",
    "_computeSizeHint",
    "getWidth",
    "minWidth",
    "getMinWidth",
    "maxWidth",
    "getMaxWidth",
    "getHeight",
    "minHeight",
    "getMinHeight",
    "maxHeight",
    "getMaxHeight",
    "contentHint",
    "_getContentHint",
    "insets",
    "insetX",
    "insetY",
    "Infinity",
    "invalidateLayoutCache",
    "hint",
    "getSizeHint",
    "_getHeightForWidth",
    "contentWidth",
    "contentHeight",
    "hasHeightForWidth",
    "getHeightForWidth",
    "_getContentHeightForWidth",
    "getInnerSize",
    "computed",
    "fadeOut",
    "duration",
    "fadeIn",
    "_applyAnonymous",
    "value",
    "setAttribute",
    "removeAttribute",
    "show",
    "setVisibility",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "Manager",
    "flush",
    "offsetWidth",
    "__P_329_1",
    "el",
    "_createContentElement",
    "connectObject",
    "styles",
    "boxSizing",
    "root",
    "Inline",
    "html",
    "Element",
    "overflowX",
    "overflowY",
    "__widgetChildren",
    "getLayoutChildren",
    "children",
    "__emptyChildren",
    "layoutChildren",
    "hasUserBounds",
    "concat",
    "Array",
    "scheduleLayoutUpdate",
    "invalidateLayoutChildren",
    "invalidateChildrenCache",
    "getChildrenContainer",
    "_getChildren",
    "_indexOf",
    "indexOf",
    "_hasChildren",
    "addChildrenToQueue",
    "_add",
    "options",
    "__addHelper",
    "_addAt",
    "index",
    "ref",
    "setLayoutProperties",
    "insertBefore",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "insertAfter",
    "_remove",
    "__removeHelper",
    "_removeAt",
    "removeAt",
    "_removeAll",
    "_afterAddChild",
    "_afterRemoveChild",
    "__P_329_9",
    "updateLayoutProperties",
    "__P_329_10",
    "releaseCapture",
    "isCapturing",
    "Registration",
    "getManager",
    "dispatcher",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "_applyPadding",
    "old",
    "name",
    "__updateContentPadding",
    "__P_329_11",
    "direction",
    "firstLow",
    "replace",
    "setStyle",
    "_applyDecorator",
    "getCssClassName",
    "removeClass",
    "addCssClass",
    "addClass",
    "_applyToolTipText",
    "_this",
    "addListener",
    "getToolTipText",
    "translate",
    "setToolTipText",
    "_applyTextColor",
    "_applyZIndex",
    "_applyVisibility",
    "_applyOpacity",
    "_applyCursor",
    "isSelectable",
    "Environment",
    "get",
    "_applyBackgroundColor",
    "color",
    "getBackgroundColor",
    "resolved",
    "Color",
    "_applyFont",
    "_onChangeTheme",
    "isDisposed",
    "updateAppearance",
    "getFont",
    "Type",
    "isString",
    "getTextColor",
    "__states",
    "$$stateChanges",
    "_forwardStates",
    "hasState",
    "state",
    "states",
    "addState",
    "Appearance",
    "forward",
    "controls",
    "__childControls",
    "control",
    "id",
    "removeState",
    "replaceState",
    "__appearanceSelector",
    "__updateSelector",
    "selector",
    "styler",
    "Property",
    "$$method",
    "setThemed",
    "unstyler",
    "resetThemed",
    "oldData",
    "styleFrom",
    "getAppearance",
    "obj",
    "$$subcontrol",
    "$$subparent",
    "reverse",
    "join",
    "newData",
    "prop",
    "undefined",
    "_applyAppearance",
    "checkAppearanceNeeds",
    "syncWidget",
    "jobs",
    "getEventTarget",
    "target",
    "getFocusTarget",
    "getEnabled",
    "getFocusable",
    "getFocusElement",
    "isTabable",
    "isFocusable",
    "_applyFocusable",
    "getTabIndex",
    "isNativelyFocusable",
    "_applyKeepFocus",
    "_applyKeepActive",
    "_applyTabIndex",
    "_applySelectable",
    "getCursor",
    "setSelectable",
    "_applyEnabled",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "_applyNativeContextMenu",
    "_applyContextMenu",
    "getOpener",
    "resetOpener",
    "removeListener",
    "_onContextMenuOpen",
    "_onBeforeContextMenuOpen",
    "setOpener",
    "getType",
    "getPointerType",
    "getContextMenu",
    "openAtPointer",
    "stop",
    "getData",
    "_onStopEvent",
    "stopPropagation",
    "_getDragDropCursor",
    "DragDropCursor",
    "isEnabled",
    "_onDragStart",
    "_onDrag",
    "_onDragEnd",
    "_onDragChange",
    "placeToPointer",
    "getApplicationRoot",
    "setGlobalCursor",
    "moveTo",
    "resetGlobalCursor",
    "action",
    "getCurrentAction",
    "setAction",
    "resetAction",
    "visualizeFocus",
    "visualizeBlur",
    "scrollChildIntoView",
    "alignX",
    "alignY",
    "direct",
    "isScheduled",
    "getChildren",
    "forEach",
    "sibling",
    "scrollChildIntoViewX",
    "scrollChildIntoViewY",
    "align",
    "tabFocus",
    "hasChildControl",
    "_getCreatedChildControls",
    "getChildControl",
    "notcreate",
    "_createChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_isChildControlVisible",
    "_releaseChildControl",
    "pos",
    "_createChildControlImpl",
    "substring",
    "exc",
    "message",
    "toString",
    "$$resyncNeeded",
    "hash",
    "_disposeChildControls",
    "destroy",
    "dispose",
    "getSubcontrolId",
    "getContentLocation",
    "bom",
    "Location",
    "setDomLeft",
    "setDomTop",
    "setDomPosition",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "_len",
    "arguments",
    "labelWidgets",
    "_key",
    "__addAriaXBy",
    "addAriaDescribedBy",
    "_len2",
    "describingWidgets",
    "_key2",
    "__P_329_16",
    "widgets",
    "ariaAttr",
    "includes",
    "idArr",
    "_iterator",
    "_createForOfIteratorHelper",
    "_step",
    "s",
    "n",
    "done",
    "contentEl",
    "widgetId",
    "getAttribute",
    "toHashCode",
    "err",
    "f",
    "idStr",
    "res",
    "removeAllListeners",
    "Dispose",
    "clone",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "removeListenerById",
    "disconnectWidget",
    "setContextMenu",
    "_disposeArray",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/* ************************************************************************\r\n\r\n\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This is the base class for all widgets.\r\n *\r\n * *External Documentation*\r\n *\r\n * <a href='http://qooxdoo.org/docs/#core/' target='_blank'>\r\n * Documentation of this widget in the qooxdoo manual.</a>\r\n *\r\n * NOTE: Instances of this class must be disposed of after use\r\n *\r\n * @use(qx.ui.core.EventHandler)\r\n * @use(qx.event.handler.DragDrop)\r\n * @asset(qx/static/blank.gif)\r\n *\r\n * @ignore(qx.ui.root.Inline)\r\n */\r\nqx.Class.define(\"qx.ui.core.Widget\", {\r\n  extend: qx.ui.core.LayoutItem,\r\n  include: [qx.locale.MTranslation],\r\n  implement: [qx.core.IDisposable],\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  construct() {\r\n    super();\r\n\r\n    // Create basic element\r\n    this.__contentElement = this.__createContentElement();\r\n\r\n    // Initialize properties\r\n    this.initFocusable();\r\n    this.initSelectable();\r\n    this.initNativeContextMenu();\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /**\r\n     * Fired after the widget appears on the screen.\r\n     */\r\n    appear: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired after the widget disappears from the screen.\r\n     */\r\n    disappear: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired after the creation of a child control. The passed data is the\r\n     * newly created child widget.\r\n     */\r\n    createChildControl: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * Fired on resize (after layout) of the widget.\r\n     * The data property of the event contains the widget's computed location\r\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\r\n     */\r\n    resize: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * Fired on move (after layout) of the widget.\r\n     * The data property of the event contains the widget's computed location\r\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\r\n     */\r\n    move: \"qx.event.type.Data\",\r\n\r\n    /**\r\n     * Fired after the appearance has been applied. This happens before the\r\n     * widget becomes visible, on state and appearance changes. The data field\r\n     * contains the state map. This can be used to react on state changes or to\r\n     * read properties set by the appearance.\r\n     */\r\n    syncAppearance: \"qx.event.type.Data\",\r\n\r\n    /** Fired if the mouse cursor moves over the widget.\r\n     *  The data property of the event contains the widget's computed location\r\n     *  and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\r\n     */\r\n    mousemove: \"qx.event.type.Mouse\",\r\n\r\n    /**\r\n     * Fired if the mouse cursor enters the widget.\r\n     *\r\n     * Note: This event is also dispatched if the widget is disabled!\r\n     */\r\n    mouseover: \"qx.event.type.Mouse\",\r\n\r\n    /**\r\n     * Fired if the mouse cursor leaves widget.\r\n     *\r\n     * Note: This event is also dispatched if the widget is disabled!\r\n     */\r\n    mouseout: \"qx.event.type.Mouse\",\r\n\r\n    /** Mouse button is pressed on the widget. */\r\n    mousedown: \"qx.event.type.Mouse\",\r\n\r\n    /** Mouse button is released on the widget. */\r\n    mouseup: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is clicked using left or middle button.\r\n        {@link qx.event.type.Mouse#getButton} for more details.*/\r\n    click: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is clicked using a non primary button.\r\n        {@link qx.event.type.Mouse#getButton} for more details.*/\r\n    auxclick: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is double clicked using left or middle button.\r\n        {@link qx.event.type.Mouse#getButton} for more details.*/\r\n    dblclick: \"qx.event.type.Mouse\",\r\n\r\n    /** Widget is clicked using the right mouse button. */\r\n    contextmenu: \"qx.event.type.Mouse\",\r\n\r\n    /** Fired before the context menu is opened. */\r\n    beforeContextmenuOpen: \"qx.event.type.Data\",\r\n\r\n    /** Fired if the mouse wheel is used over the widget. */\r\n    mousewheel: \"qx.event.type.MouseWheel\",\r\n\r\n    /** Fired if a touch at the screen is started. */\r\n    touchstart: \"qx.event.type.Touch\",\r\n\r\n    /** Fired if a touch at the screen has ended. */\r\n    touchend: \"qx.event.type.Touch\",\r\n\r\n    /** Fired during a touch at the screen. */\r\n    touchmove: \"qx.event.type.Touch\",\r\n\r\n    /** Fired if a touch at the screen is canceled. */\r\n    touchcancel: \"qx.event.type.Touch\",\r\n\r\n    /** Fired when a pointer taps on the screen. */\r\n    tap: \"qx.event.type.Tap\",\r\n\r\n    /** Fired when a pointer holds on the screen. */\r\n    longtap: \"qx.event.type.Tap\",\r\n\r\n    /** Fired when a pointer taps twice on the screen. */\r\n    dbltap: \"qx.event.type.Tap\",\r\n\r\n    /** Fired when a pointer swipes over the screen. */\r\n    swipe: \"qx.event.type.Touch\",\r\n\r\n    /** Fired when two pointers performing a rotate gesture on the screen. */\r\n    rotate: \"qx.event.type.Rotate\",\r\n\r\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\r\n    pinch: \"qx.event.type.Pinch\",\r\n\r\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\r\n    track: \"qx.event.type.Track\",\r\n\r\n    /** Fired when an active pointer moves on the screen or the mouse wheel is used. */\r\n    roll: \"qx.event.type.Roll\",\r\n\r\n    /** Fired if a pointer (mouse/touch/pen) moves or changes any of it's values. */\r\n    pointermove: \"qx.event.type.Pointer\",\r\n\r\n    /** Fired if a pointer (mouse/touch/pen) hovers the widget. */\r\n    pointerover: \"qx.event.type.Pointer\",\r\n\r\n    /** Fired if a pointer (mouse/touch/pen) leaves this widget. */\r\n    pointerout: \"qx.event.type.Pointer\",\r\n\r\n    /**\r\n     * Fired if a pointer (mouse/touch/pen) button is pressed or\r\n     * a finger touches the widget.\r\n     */\r\n    pointerdown: \"qx.event.type.Pointer\",\r\n\r\n    /**\r\n     * Fired if all pointer (mouse/touch/pen) buttons are released or\r\n     * the finger is lifted from the widget.\r\n     */\r\n    pointerup: \"qx.event.type.Pointer\",\r\n\r\n    /** Fired if a pointer (mouse/touch/pen) action is canceled. */\r\n    pointercancel: \"qx.event.type.Pointer\",\r\n\r\n    /** This event if fired if a keyboard key is released. */\r\n    keyup: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event if fired if a keyboard key is pressed down. This event is\r\n     * only fired once if the user keeps the key pressed for a while.\r\n     */\r\n    keydown: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event is fired any time a key is pressed. It will be repeated if\r\n     * the user keeps the key pressed. The pressed key can be determined using\r\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\r\n     */\r\n    keypress: \"qx.event.type.KeySequence\",\r\n\r\n    /**\r\n     * This event is fired if the pressed key or keys result in a printable\r\n     * character. Since the character is not necessarily associated with a\r\n     * single physical key press, the event does not have a key identifier\r\n     * getter. This event gets repeated if the user keeps pressing the key(s).\r\n     *\r\n     * The unicode code of the pressed key can be read using\r\n     * {@link qx.event.type.KeyInput#getCharCode}.\r\n     */\r\n    keyinput: \"qx.event.type.KeyInput\",\r\n\r\n    /**\r\n     * The event is fired when the widget gets focused. Only widgets which are\r\n     * {@link #focusable} receive this event.\r\n     */\r\n    focus: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * The event is fired when the widget gets blurred. Only widgets which are\r\n     * {@link #focusable} receive this event.\r\n     */\r\n    blur: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget itself or any child of the widget receive the focus.\r\n     */\r\n    focusin: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget itself or any child of the widget lost the focus.\r\n     */\r\n    focusout: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget gets active (receives keyboard events etc.)\r\n     */\r\n    activate: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * When the widget gets inactive\r\n     */\r\n    deactivate: \"qx.event.type.Focus\",\r\n\r\n    /**\r\n     * Fired if the widget becomes the capturing widget by a call to {@link #capture}.\r\n     */\r\n    capture: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired if the widget looses the capturing mode by a call to\r\n     * {@link #releaseCapture} or a mouse click.\r\n     */\r\n    losecapture: \"qx.event.type.Event\",\r\n\r\n    /**\r\n     * Fired on the drop target when the drag&drop action is finished\r\n     * successfully. This event is normally used to transfer the data\r\n     * from the drag to the drop target.\r\n     *\r\n     * Modeled after the WHATWG specification of Drag&Drop:\r\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\r\n     */\r\n    drop: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired on a potential drop target when leaving it.\r\n     *\r\n     * Modeled after the WHATWG specification of Drag&Drop:\r\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\r\n     */\r\n    dragleave: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired on a potential drop target when reaching it via the pointer.\r\n     * This event can be canceled if none of the incoming data types\r\n     * are supported.\r\n     *\r\n     * Modeled after the WHATWG specification of Drag&Drop:\r\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\r\n     */\r\n    dragover: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired during the drag. Contains the current pointer coordinates\r\n     * using {@link qx.event.type.Drag#getDocumentLeft} and\r\n     * {@link qx.event.type.Drag#getDocumentTop}\r\n     *\r\n     * Modeled after the WHATWG specification of Drag&Drop:\r\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\r\n     */\r\n    drag: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Initiate the drag-and-drop operation. This event is cancelable\r\n     * when the drag operation is currently not allowed/possible.\r\n     *\r\n     * Modeled after the WHATWG specification of Drag&Drop:\r\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\r\n     */\r\n    dragstart: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired on the source (drag) target every time a drag session was ended.\r\n     */\r\n    dragend: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired when the drag configuration has been modified e.g. the user\r\n     * pressed a key which changed the selected action. This event will be\r\n     * fired on the draggable and the droppable element. In case of the\r\n     * droppable element, you can cancel the event and prevent a drop based on\r\n     * e.g. the current action.\r\n     */\r\n    dragchange: \"qx.event.type.Drag\",\r\n\r\n    /**\r\n     * Fired when the drop was successfully done and the target widget\r\n     * is now asking for data. The listener should transfer the data,\r\n     * respecting the selected action, to the event. This can be done using\r\n     * the event's {@link qx.event.type.Drag#addData} method.\r\n     */\r\n    droprequest: \"qx.event.type.Drag\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PADDING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** Padding of the widget (top) */\r\n    paddingTop: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Padding of the widget (right) */\r\n    paddingRight: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Padding of the widget (bottom) */\r\n    paddingBottom: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /** Padding of the widget (left) */\r\n    paddingLeft: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyPadding\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\r\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\r\n     *\r\n     * If four values are specified they apply to top, right, bottom and left respectively.\r\n     * If there is only one value, it applies to all sides, if there are two or three,\r\n     * the missing values are taken from the opposite side.\r\n     */\r\n    padding: {\r\n      group: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\r\n      mode: \"shorthand\",\r\n      themeable: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      STYLING PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * The z-index property sets the stack order of an element. An element with\r\n     * greater stack order is always in front of another element with lower stack order.\r\n     */\r\n    zIndex: {\r\n      nullable: true,\r\n      init: 10,\r\n      apply: \"_applyZIndex\",\r\n      event: \"changeZIndex\",\r\n      check: \"Integer\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The decorator property points to an object, which is responsible\r\n     * for drawing the widget's decoration, e.g. border, background or shadow.\r\n     *\r\n     * This can be a decorator object or a string pointing to a decorator\r\n     * defined in the decoration theme.\r\n     */\r\n    decorator: {\r\n      nullable: true,\r\n      init: null,\r\n      apply: \"_applyDecorator\",\r\n      event: \"changeDecorator\",\r\n      check: \"Decorator\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The background color the rendered widget.\r\n     */\r\n    backgroundColor: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyBackgroundColor\",\r\n      event: \"changeBackgroundColor\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * The text color the rendered widget.\r\n     */\r\n    textColor: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyTextColor\",\r\n      event: \"changeTextColor\",\r\n      themeable: true,\r\n      inheritable: true\r\n    },\r\n\r\n    /**\r\n     * The widget's font. The value is either a font name defined in the font\r\n     * theme or an instance of {@link qx.bom.Font}.\r\n     */\r\n    font: {\r\n      nullable: true,\r\n      apply: \"_applyFont\",\r\n      check: \"Font\",\r\n      event: \"changeFont\",\r\n      themeable: true,\r\n      inheritable: true,\r\n      dereference: true\r\n    },\r\n\r\n    /**\r\n     * Mapping to native style property opacity.\r\n     *\r\n     * The uniform opacity setting to be applied across an entire object.\r\n     * Behaves like the new CSS-3 Property.\r\n     * Any values outside the range 0.0 (fully transparent) to 1.0\r\n     * (fully opaque) will be clamped to this range.\r\n     */\r\n    opacity: {\r\n      check: \"Number\",\r\n      apply: \"_applyOpacity\",\r\n      themeable: true,\r\n      nullable: true,\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * Mapping to native style property cursor.\r\n     *\r\n     * The name of the cursor to show when the pointer is over the widget.\r\n     * This is any valid CSS2 cursor name defined by W3C.\r\n     *\r\n     * The following values are possible crossbrowser:\r\n     * <ul><li>default</li>\r\n     * <li>crosshair</li>\r\n     * <li>pointer</li>\r\n     * <li>move</li>\r\n     * <li>n-resize</li>\r\n     * <li>ne-resize</li>\r\n     * <li>e-resize</li>\r\n     * <li>se-resize</li>\r\n     * <li>s-resize</li>\r\n     * <li>sw-resize</li>\r\n     * <li>w-resize</li>\r\n     * <li>nw-resize</li>\r\n     * <li>nesw-resize</li>\r\n     * <li>nwse-resize</li>\r\n     * <li>text</li>\r\n     * <li>wait</li>\r\n     * <li>help </li>\r\n     * </ul>\r\n     */\r\n    cursor: {\r\n      check: \"String\",\r\n      apply: \"_applyCursor\",\r\n      themeable: true,\r\n      inheritable: true,\r\n      nullable: true,\r\n      init: null\r\n    },\r\n\r\n    /**\r\n     * Sets the tooltip instance to use for this widget. If only the tooltip\r\n     * text and icon have to be set its better to use the {@link #toolTipText}\r\n     * and {@link #toolTipIcon} properties since they use a shared tooltip\r\n     * instance.\r\n     *\r\n     * If this property is set the {@link #toolTipText} and {@link #toolTipIcon}\r\n     * properties are ignored.\r\n     */\r\n    toolTip: {\r\n      check: \"qx.ui.tooltip.ToolTip\",\r\n      nullable: true\r\n    },\r\n\r\n    /**\r\n     * The text of the widget's tooltip. This text can contain HTML markup.\r\n     * The text is displayed using a shared tooltip instance. If the tooltip\r\n     * must be customized beyond the text and an icon {@link #toolTipIcon}, the\r\n     * {@link #toolTip} property has to be used\r\n     */\r\n    toolTipText: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      event: \"changeToolTipText\",\r\n      apply: \"_applyToolTipText\"\r\n    },\r\n\r\n    /**\r\n     * The icon URI of the widget's tooltip. This icon is displayed using a shared\r\n     * tooltip instance. If the tooltip must be customized beyond the tooltip text\r\n     * {@link #toolTipText} and the icon, the {@link #toolTip} property has to be\r\n     * used.\r\n     */\r\n    toolTipIcon: {\r\n      check: \"String\",\r\n      nullable: true,\r\n      event: \"changeToolTipText\"\r\n    },\r\n\r\n    /**\r\n     * Controls if a tooltip should shown or not.\r\n     */\r\n    blockToolTip: {\r\n      check: \"Boolean\",\r\n      init: false\r\n    },\r\n\r\n    /**\r\n     * Forces to show tooltip when widget is disabled.\r\n     */\r\n    showToolTipWhenDisabled: {\r\n      check: \"Boolean\",\r\n      init: false\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      MANAGEMENT PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Controls the visibility. Valid values are:\r\n     *\r\n     * <ul>\r\n     *   <li><b>visible</b>: Render the widget</li>\r\n     *   <li><b>hidden</b>: Hide the widget but don't relayout the widget's parent.</li>\r\n     *   <li><b>excluded</b>: Hide the widget and relayout the parent as if the\r\n     *     widget was not a child of its parent.</li>\r\n     * </ul>\r\n     */\r\n    visibility: {\r\n      check: [\"visible\", \"hidden\", \"excluded\"],\r\n      init: \"visible\",\r\n      apply: \"_applyVisibility\",\r\n      event: \"changeVisibility\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is enabled. Disabled widgets are usually grayed out\r\n     * and do not process user created events. While in the disabled state most\r\n     * user input events are blocked. Only the {@link #pointerover} and\r\n     * {@link #pointerout} events will be dispatched.\r\n     */\r\n    enabled: {\r\n      init: true,\r\n      check: \"Boolean\",\r\n      inheritable: true,\r\n      apply: \"_applyEnabled\",\r\n      event: \"changeEnabled\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is anonymous.\r\n     *\r\n     * Anonymous widgets are ignored in the event hierarchy. This is useful\r\n     * for combined widgets where the internal structure do not have a custom\r\n     * appearance with a different styling from the element around. This is\r\n     * especially true for widgets like checkboxes or buttons where the text\r\n     * or icon are handled synchronously for state changes to the outer widget.\r\n     */\r\n    anonymous: {\r\n      init: false,\r\n      check: \"Boolean\",\r\n      apply: \"_applyAnonymous\"\r\n    },\r\n\r\n    /**\r\n     * Defines the tab index of an widget. If widgets with tab indexes are part\r\n     * of the current focus root these elements are sorted in first priority. Afterwards\r\n     * the sorting continues by rendered position, zIndex and other criteria.\r\n     *\r\n     * Please note: The value must be between 1 and 32000.\r\n     */\r\n    tabIndex: {\r\n      check: \"Integer\",\r\n      nullable: true,\r\n      apply: \"_applyTabIndex\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is focusable e.g. rendering a focus border and visualize\r\n     * as active element.\r\n     *\r\n     * See also {@link #isTabable} which allows runtime checks for\r\n     * <code>isChecked</code> or other stuff to test whether the widget is\r\n     * reachable via the TAB key.\r\n     */\r\n    focusable: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyFocusable\"\r\n    },\r\n\r\n    /**\r\n     * If this property is enabled, the widget and all of its child widgets\r\n     * will never get focused. The focus keeps at the currently\r\n     * focused widget.\r\n     *\r\n     * This only works for widgets which are not {@link #focusable}.\r\n     *\r\n     * This is mainly useful for widget authors. Please use with caution!\r\n     */\r\n    keepFocus: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyKeepFocus\"\r\n    },\r\n\r\n    /**\r\n     * If this property if enabled, the widget and all of its child widgets\r\n     * will never get activated. The activation keeps at the currently\r\n     * activated widget.\r\n     *\r\n     * This is mainly useful for widget authors. Please use with caution!\r\n     */\r\n    keepActive: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyKeepActive\"\r\n    },\r\n\r\n    /** Whether the widget acts as a source for drag&drop operations */\r\n    draggable: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyDraggable\"\r\n    },\r\n\r\n    /** Whether the widget acts as a target for drag&drop operations */\r\n    droppable: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyDroppable\"\r\n    },\r\n\r\n    /**\r\n     * Whether the widget contains content which may be selected by the user.\r\n     *\r\n     * If the value set to <code>true</code> the native browser selection can\r\n     * be used for text selection. But it is normally useful for\r\n     * forms fields, longer texts/documents, editors, etc.\r\n     */\r\n    selectable: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      event: \"changeSelectable\",\r\n      apply: \"_applySelectable\"\r\n    },\r\n\r\n    /**\r\n     * Whether to show a context menu and which one\r\n     */\r\n    contextMenu: {\r\n      check: \"qx.ui.menu.Menu\",\r\n      apply: \"_applyContextMenu\",\r\n      nullable: true,\r\n      event: \"changeContextMenu\"\r\n    },\r\n\r\n    /**\r\n     * Whether the native context menu should be enabled for this widget. To\r\n     * globally enable the native context menu set the {@link #nativeContextMenu}\r\n     * property of the root widget ({@link qx.ui.root.Abstract}) to\r\n     * <code>true</code>.\r\n     */\r\n    nativeContextMenu: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      themeable: true,\r\n      event: \"changeNativeContextMenu\",\r\n      apply: \"_applyNativeContextMenu\"\r\n    },\r\n\r\n    /**\r\n     * The appearance ID. This ID is used to identify the appearance theme\r\n     * entry to use for this widget. This controls the styling of the element.\r\n     */\r\n    appearance: {\r\n      check: \"String\",\r\n      init: \"widget\",\r\n      apply: \"_applyAppearance\",\r\n      event: \"changeAppearance\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** Whether the widget should print out hints and debug messages */\r\n    DEBUG: false,\r\n\r\n    /** Whether to throw an error on focus/blur if the widget is unfocusable */\r\n    UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR: true,\r\n\r\n    /**\r\n     * Returns the widget, which contains the given DOM element.\r\n     *\r\n     * @param element {Element} The DOM element to search the widget for.\r\n     * @param considerAnonymousState {Boolean?false} If true, anonymous widget\r\n     *   will not be returned.\r\n     * @return {qx.ui.core.Widget} The widget containing the element.\r\n     */\r\n    getWidgetByElement(element, considerAnonymousState) {\r\n      while (element) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          qx.core.Assert.assertTrue(\r\n            (!element.$$qxObjectHash && !element.$$qxObject) ||\r\n              (element.$$qxObject &&\r\n                element.$$qxObjectHash &&\r\n                element.$$qxObject.toHashCode() === element.$$qxObjectHash)\r\n          );\r\n        }\r\n        var widget = element.$$qxObject;\r\n\r\n        // check for anonymous widgets\r\n        if (widget) {\r\n          if (!considerAnonymousState || !widget.getAnonymous()) {\r\n            return widget;\r\n          }\r\n        }\r\n\r\n        // Fix for FF, which occasionally breaks (BUG#3525)\r\n        try {\r\n          element = element.parentNode;\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Whether the \"parent\" widget contains the \"child\" widget.\r\n     *\r\n     * @param parent {qx.ui.core.Widget} The parent widget\r\n     * @param child {qx.ui.core.Widget} The child widget\r\n     * @return {Boolean} Whether one of the \"child\"'s parents is \"parent\"\r\n     */\r\n    contains(parent, child) {\r\n      while (child) {\r\n        child = child.getLayoutParent();\r\n\r\n        if (parent == child) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /** @type {Map} Contains all pooled separators for reuse */\r\n    __separatorPool: new qx.util.ObjectPool()\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __contentElement: null,\r\n    __initialAppearanceApplied: null,\r\n    __toolTipTextListenerId: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LAYOUT INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * @type {qx.ui.layout.Abstract} The connected layout manager\r\n     */\r\n    __layoutManager: null,\r\n\r\n    // overridden\r\n    _getLayout() {\r\n      return this.__layoutManager;\r\n    },\r\n\r\n    /**\r\n     * Set a layout manager for the widget. A a layout manager can only be connected\r\n     * with one widget. Reset the connection with a previous widget first, if you\r\n     * like to use it in another widget instead.\r\n     *\r\n     * @param layout {qx.ui.layout.Abstract} The new layout or\r\n     *     <code>null</code> to reset the layout.\r\n     */\r\n    _setLayout(layout) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (layout) {\r\n          this.assertInstance(layout, qx.ui.layout.Abstract);\r\n        }\r\n      }\r\n\r\n      if (this.__layoutManager) {\r\n        this.__layoutManager.connectToWidget(null);\r\n      }\r\n\r\n      if (layout) {\r\n        layout.connectToWidget(this);\r\n      }\r\n\r\n      this.__layoutManager = layout;\r\n      qx.ui.core.queue.Layout.add(this);\r\n    },\r\n\r\n    // overridden\r\n    setLayoutParent(parent) {\r\n      if (this.$$parent === parent) {\r\n        return;\r\n      }\r\n\r\n      var content = this.getContentElement();\r\n\r\n      if (this.$$parent && !this.$$parent.$$disposed) {\r\n        this.$$parent.getContentElement().remove(content);\r\n      }\r\n\r\n      this.$$parent = parent || null;\r\n\r\n      if (parent && !parent.$$disposed) {\r\n        this.$$parent.getContentElement().add(content);\r\n      }\r\n\r\n      // Update inheritable properties\r\n      this.$$refreshInheritables();\r\n\r\n      // Update visibility cache\r\n      qx.ui.core.queue.Visibility.add(this);\r\n    },\r\n\r\n    /** @type {Boolean} Whether insets have changed and must be updated */\r\n    _updateInsets: null,\r\n\r\n    // overridden\r\n    renderLayout(left, top, width, height) {\r\n      var changes = super.renderLayout(left, top, width, height);\r\n\r\n      // Directly return if superclass has detected that no\r\n      // changes needs to be applied\r\n      if (!changes) {\r\n        return null;\r\n      }\r\n\r\n      if (qx.lang.Object.isEmpty(changes) && !this._updateInsets) {\r\n        return null;\r\n      }\r\n\r\n      var content = this.getContentElement();\r\n      var inner = changes.size || this._updateInsets;\r\n      var pixel = \"px\";\r\n\r\n      var contentStyles = {};\r\n      // Move content to new position\r\n      if (changes.position) {\r\n        contentStyles.left = left + pixel;\r\n        contentStyles.top = top + pixel;\r\n      }\r\n\r\n      if (inner || changes.margin) {\r\n        contentStyles.width = width + pixel;\r\n        contentStyles.height = height + pixel;\r\n      }\r\n\r\n      if (Object.keys(contentStyles).length > 0) {\r\n        content.setStyles(contentStyles);\r\n      }\r\n\r\n      if (inner || changes.local || changes.margin) {\r\n        if (this.__layoutManager && this.hasLayoutChildren()) {\r\n          var inset = this.getInsets();\r\n          var innerWidth = width - inset.left - inset.right;\r\n          var innerHeight = height - inset.top - inset.bottom;\r\n\r\n          var decorator = this.getDecorator();\r\n          var decoratorPadding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n          if (decorator) {\r\n            decorator =\r\n              qx.theme.manager.Decoration.getInstance().resolve(decorator);\r\n            decoratorPadding = decorator.getPadding();\r\n          }\r\n\r\n          var padding = {\r\n            top: this.getPaddingTop() + decoratorPadding.top,\r\n            right: this.getPaddingRight() + decoratorPadding.right,\r\n            bottom: this.getPaddingBottom() + decoratorPadding.bottom,\r\n            left: this.getPaddingLeft() + decoratorPadding.left\r\n          };\r\n\r\n          this.__layoutManager.renderLayout(innerWidth, innerHeight, padding);\r\n        } else if (this.hasLayoutChildren()) {\r\n          throw new Error(\r\n            \"At least one child in control \" +\r\n              this._findTopControl() +\r\n              \" requires a layout, but no one was defined!\"\r\n          );\r\n        }\r\n      }\r\n\r\n      // Fire events\r\n      if (changes.position && this.hasListener(\"move\")) {\r\n        this.fireDataEvent(\"move\", this.getBounds());\r\n      }\r\n\r\n      if (changes.size && this.hasListener(\"resize\")) {\r\n        this.fireDataEvent(\"resize\", this.getBounds());\r\n      }\r\n\r\n      // Cleanup flags\r\n      delete this._updateInsets;\r\n\r\n      return changes;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      SEPARATOR SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    __separators: null,\r\n\r\n    // overridden\r\n    clearSeparators() {\r\n      var reg = this.__separators;\r\n      if (!reg) {\r\n        return;\r\n      }\r\n\r\n      var pool = qx.ui.core.Widget.__separatorPool;\r\n      var content = this.getContentElement();\r\n      var widget;\r\n\r\n      for (var i = 0, l = reg.length; i < l; i++) {\r\n        widget = reg[i];\r\n        pool.poolObject(widget);\r\n        content.remove(widget.getContentElement());\r\n      }\r\n\r\n      // Clear registry\r\n      reg.length = 0;\r\n    },\r\n\r\n    // overridden\r\n    renderSeparator(separator, bounds) {\r\n      // Insert\r\n      var widget = qx.ui.core.Widget.__separatorPool.getObject(\r\n        qx.ui.core.Widget\r\n      );\r\n\r\n      widget.set({\r\n        decorator: separator\r\n      });\r\n\r\n      var elem = widget.getContentElement();\r\n      this.getContentElement().add(elem);\r\n\r\n      // Move\r\n      var domEl = elem.getDomElement();\r\n      // use the DOM element because the cache of the qx.html.Element could be\r\n      // wrong due to changes made by the decorators which work on the DOM element too\r\n      if (domEl) {\r\n        domEl.style.top = bounds.top + \"px\";\r\n        domEl.style.left = bounds.left + \"px\";\r\n        domEl.style.width = bounds.width + \"px\";\r\n        domEl.style.height = bounds.height + \"px\";\r\n      } else {\r\n        elem.setStyles({\r\n          left: bounds.left + \"px\",\r\n          top: bounds.top + \"px\",\r\n          width: bounds.width + \"px\",\r\n          height: bounds.height + \"px\"\r\n        });\r\n      }\r\n\r\n      // Remember element\r\n      if (!this.__separators) {\r\n        this.__separators = [];\r\n      }\r\n      this.__separators.push(widget);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      SIZE HINTS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    _computeSizeHint() {\r\n      // Start with the user defined values\r\n      var width = this.getWidth();\r\n      var minWidth = this.getMinWidth();\r\n      var maxWidth = this.getMaxWidth();\r\n\r\n      var height = this.getHeight();\r\n      var minHeight = this.getMinHeight();\r\n      var maxHeight = this.getMaxHeight();\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (minWidth !== null && maxWidth !== null) {\r\n          this.assert(\r\n            minWidth <= maxWidth,\r\n            \"minWidth is larger than maxWidth!\"\r\n          );\r\n        }\r\n        if (minHeight !== null && maxHeight !== null) {\r\n          this.assert(\r\n            minHeight <= maxHeight,\r\n            \"minHeight is larger than maxHeight!\"\r\n          );\r\n        }\r\n      }\r\n\r\n      // Ask content\r\n      var contentHint = this._getContentHint();\r\n\r\n      var insets = this.getInsets();\r\n      var insetX = insets.left + insets.right;\r\n      var insetY = insets.top + insets.bottom;\r\n\r\n      if (width == null) {\r\n        width = contentHint.width + insetX;\r\n      }\r\n\r\n      if (height == null) {\r\n        height = contentHint.height + insetY;\r\n      }\r\n\r\n      if (minWidth == null) {\r\n        minWidth = insetX;\r\n\r\n        if (contentHint.minWidth != null) {\r\n          minWidth += contentHint.minWidth;\r\n          // do not apply bigger min width than max width [BUG #5008]\r\n          if (minWidth > maxWidth && maxWidth != null) {\r\n            minWidth = maxWidth;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (minHeight == null) {\r\n        minHeight = insetY;\r\n\r\n        if (contentHint.minHeight != null) {\r\n          minHeight += contentHint.minHeight;\r\n          // do not apply bigger min height than max height [BUG #5008]\r\n          if (minHeight > maxHeight && maxHeight != null) {\r\n            minHeight = maxHeight;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (maxWidth == null) {\r\n        if (contentHint.maxWidth == null) {\r\n          maxWidth = Infinity;\r\n        } else {\r\n          maxWidth = contentHint.maxWidth + insetX;\r\n          // do not apply bigger min width than max width [BUG #5008]\r\n          if (maxWidth < minWidth && minWidth != null) {\r\n            maxWidth = minWidth;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (maxHeight == null) {\r\n        if (contentHint.maxHeight == null) {\r\n          maxHeight = Infinity;\r\n        } else {\r\n          maxHeight = contentHint.maxHeight + insetY;\r\n          // do not apply bigger min width than max width [BUG #5008]\r\n          if (maxHeight < minHeight && minHeight != null) {\r\n            maxHeight = minHeight;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Build size hint and return\r\n      return {\r\n        width: width,\r\n        minWidth: minWidth,\r\n        maxWidth: maxWidth,\r\n        height: height,\r\n        minHeight: minHeight,\r\n        maxHeight: maxHeight\r\n      };\r\n    },\r\n\r\n    // overridden\r\n    invalidateLayoutCache() {\r\n      super.invalidateLayoutCache();\r\n\r\n      if (this.__layoutManager) {\r\n        this.__layoutManager.invalidateLayoutCache();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the recommended/natural dimensions of the widget's content.\r\n     *\r\n     * For labels and images this may be their natural size when defined without\r\n     * any dimensions. For containers this may be the recommended size of the\r\n     * underlying layout manager.\r\n     *\r\n     * Developer note: This can be overwritten by the derived classes to allow\r\n     * a custom handling here.\r\n     *\r\n     * @return {Map}\r\n     */\r\n    _getContentHint() {\r\n      var layout = this.__layoutManager;\r\n      if (layout) {\r\n        if (this.hasLayoutChildren()) {\r\n          var hint = layout.getSizeHint();\r\n\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            var msg =\r\n              \"The layout of the widget\" +\r\n              this.toString() +\r\n              \" returned an invalid size hint!\";\r\n            this.assertInteger(hint.width, \"Wrong 'left' argument. \" + msg);\r\n            this.assertInteger(hint.height, \"Wrong 'top' argument. \" + msg);\r\n          }\r\n\r\n          return hint;\r\n        } else {\r\n          return {\r\n            width: 0,\r\n            height: 0\r\n          };\r\n        }\r\n      } else {\r\n        return {\r\n          width: 100,\r\n          height: 50\r\n        };\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _getHeightForWidth(width) {\r\n      // Prepare insets\r\n      var insets = this.getInsets();\r\n\r\n      var insetX = insets.left + insets.right;\r\n      var insetY = insets.top + insets.bottom;\r\n\r\n      // Compute content width\r\n      var contentWidth = width - insetX;\r\n\r\n      // Compute height\r\n      var contentHeight = 0;\r\n      var layout = this._getLayout();\r\n      if (layout && layout.hasHeightForWidth()) {\r\n        contentHeight = layout.getHeightForWidth(contentWidth);\r\n      } else {\r\n        contentHeight = this._getContentHeightForWidth(contentWidth);\r\n      }\r\n\r\n      // Computed box height\r\n      var height = contentHeight + insetY;\r\n\r\n      return height;\r\n    },\r\n\r\n    /**\r\n     * Returns the computed height for the given width.\r\n     *\r\n     * @abstract\r\n     * @param width {Integer} Incoming width (as limitation)\r\n     * @return {Integer} Computed height while respecting the given width.\r\n     */\r\n    _getContentHeightForWidth(width) {\r\n      throw new Error(\"Abstract method call: _getContentHeightForWidth()!\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      INSET CALCULATION SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the sum of the widget's padding and border width.\r\n     *\r\n     * @return {Map} Contains the keys <code>top</code>, <code>right</code>,\r\n     *   <code>bottom</code> and <code>left</code>. All values are integers.\r\n     */\r\n    getInsets() {\r\n      var top = this.getPaddingTop();\r\n      var right = this.getPaddingRight();\r\n      var bottom = this.getPaddingBottom();\r\n      var left = this.getPaddingLeft();\r\n      if (this.getDecorator()) {\r\n        var decorator = qx.theme.manager.Decoration.getInstance().resolve(\r\n          this.getDecorator()\r\n        );\r\n\r\n        var inset = decorator.getInsets();\r\n\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          this.assertNumber(\r\n            inset.top,\r\n            \"Invalid top decorator inset detected: \" + inset.top\r\n          );\r\n\r\n          this.assertNumber(\r\n            inset.right,\r\n            \"Invalid right decorator inset detected: \" + inset.right\r\n          );\r\n\r\n          this.assertNumber(\r\n            inset.bottom,\r\n            \"Invalid bottom decorator inset detected: \" + inset.bottom\r\n          );\r\n\r\n          this.assertNumber(\r\n            inset.left,\r\n            \"Invalid left decorator inset detected: \" + inset.left\r\n          );\r\n        }\r\n\r\n        top += inset.top;\r\n        right += inset.right;\r\n        bottom += inset.bottom;\r\n        left += inset.left;\r\n      }\r\n\r\n      return {\r\n        top: top,\r\n        right: right,\r\n        bottom: bottom,\r\n        left: left\r\n      };\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      COMPUTED LAYOUT SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Returns the widget's computed inner size as available\r\n     * through the layout process.\r\n     *\r\n     * This function is guaranteed to return a correct value\r\n     * during a {@link #resize} or {@link #move} event dispatch.\r\n     *\r\n     * @return {Map} The widget inner dimension in pixel (if the layout is\r\n     *    valid). Contains the keys <code>width</code> and <code>height</code>.\r\n     */\r\n    getInnerSize() {\r\n      var computed = this.getBounds();\r\n      if (!computed) {\r\n        return null;\r\n      }\r\n\r\n      // Return map data\r\n      var insets = this.getInsets();\r\n      return {\r\n        width: computed.width - insets.left - insets.right,\r\n        height: computed.height - insets.top - insets.bottom\r\n      };\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      ANIMATION SUPPORT: USER API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Fade out this widget.\r\n     * @param duration {Number} Time in ms.\r\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\r\n     *   the fade animation.\r\n     */\r\n    fadeOut(duration) {\r\n      return this.getContentElement().fadeOut(duration);\r\n    },\r\n\r\n    /**\r\n     * Fade in the widget.\r\n     * @param duration {Number} Time in ms.\r\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\r\n     *   the fade animation.\r\n     */\r\n    fadeIn(duration) {\r\n      return this.getContentElement().fadeIn(duration);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      VISIBILITY SUPPORT: USER API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyAnonymous(value) {\r\n      if (value) {\r\n        this.getContentElement().setAttribute(\"qxanonymous\", \"true\");\r\n      } else {\r\n        this.getContentElement().removeAttribute(\"qxanonymous\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Make this widget visible.\r\n     *\r\n     */\r\n    show() {\r\n      this.setVisibility(\"visible\");\r\n    },\r\n\r\n    /**\r\n     * Hide this widget.\r\n     *\r\n     */\r\n    hide() {\r\n      this.setVisibility(\"hidden\");\r\n    },\r\n\r\n    /**\r\n     * Hide this widget and exclude it from the underlying layout.\r\n     *\r\n     */\r\n    exclude() {\r\n      this.setVisibility(\"excluded\");\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally visible.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\r\n     */\r\n    isVisible() {\r\n      return this.getVisibility() === \"visible\";\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally hidden.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\r\n     */\r\n    isHidden() {\r\n      return this.getVisibility() !== \"visible\";\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is locally excluded.\r\n     *\r\n     * Note: This method does not respect the hierarchy.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\r\n     */\r\n    isExcluded() {\r\n      return this.getVisibility() === \"excluded\";\r\n    },\r\n\r\n    /**\r\n     * Detects if the widget and all its parents are visible.\r\n     *\r\n     * WARNING: Please use this method with caution because it flushes the\r\n     * internal queues which might be an expensive operation.\r\n     *\r\n     * @return {Boolean} true, if the widget is currently on the screen\r\n     */\r\n    isSeeable() {\r\n      // Flush the queues because to detect if the widget ins visible, the\r\n      // queues need to be flushed (see bug #5254)\r\n      qx.ui.core.queue.Manager.flush();\r\n      // if the element is already rendered, a check for the offsetWidth is enough\r\n      var element = this.getContentElement().getDomElement();\r\n      if (element) {\r\n        // will also be 0 if the parents are not visible\r\n        return element.offsetWidth > 0;\r\n      }\r\n      // if no element is available, it can not be visible\r\n      return false;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CREATION OF HTML ELEMENTS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Create the widget's content HTML element.\r\n     *\r\n     * @return {qx.html.Element} The content HTML element\r\n     */\r\n    __createContentElement() {\r\n      var el = this._createContentElement();\r\n      el.connectObject(this);\r\n\r\n      // make sure to allow all pointer events\r\n      el.setStyles({ \"touch-action\": \"none\", \"-ms-touch-action\": \"none\" });\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        el.setAttribute(\"qxClass\", this.classname);\r\n      }\r\n\r\n      var styles = {\r\n        zIndex: 10,\r\n        boxSizing: \"border-box\"\r\n      };\r\n\r\n      if (!qx.ui.root.Inline || !(this instanceof qx.ui.root.Inline)) {\r\n        styles.position = \"absolute\";\r\n      }\r\n\r\n      el.setStyles(styles);\r\n\r\n      return el;\r\n    },\r\n\r\n    /**\r\n     * Creates the content element. The style properties\r\n     * position and zIndex are modified from the Widget\r\n     * core.\r\n     *\r\n     * This function may be overridden to customize a class\r\n     * content.\r\n     *\r\n     * @return {qx.html.Element} The widget's content element\r\n     */\r\n    _createContentElement() {\r\n      return new qx.html.Element(\"div\", {\r\n        overflowX: \"hidden\",\r\n        overflowY: \"hidden\"\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Returns the element wrapper of the widget's content element.\r\n     * This method exposes widget internal and must be used with caution!\r\n     *\r\n     * @return {qx.html.Element} The widget's content element\r\n     */\r\n    getContentElement() {\r\n      return this.__contentElement;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CHILDREN HANDLING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** @type {qx.ui.core.LayoutItem[]} List of all child widgets */\r\n    __widgetChildren: null,\r\n\r\n    /**\r\n     * Returns all children, which are layout relevant. This excludes all widgets,\r\n     * which have a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>.\r\n     *\r\n     * @internal\r\n     * @return {qx.ui.core.Widget[]} All layout relevant children.\r\n     */\r\n    getLayoutChildren() {\r\n      var children = this.__widgetChildren;\r\n      if (!children) {\r\n        return this.__emptyChildren;\r\n      }\r\n\r\n      var layoutChildren;\r\n      for (var i = 0, l = children.length; i < l; i++) {\r\n        var child = children[i];\r\n        if (child.hasUserBounds() || child.isExcluded()) {\r\n          if (layoutChildren == null) {\r\n            layoutChildren = children.concat();\r\n          }\r\n\r\n          qx.lang.Array.remove(layoutChildren, child);\r\n        }\r\n      }\r\n\r\n      return layoutChildren || children;\r\n    },\r\n\r\n    /**\r\n     * Marks the layout of this widget as invalid and triggers a layout update.\r\n     * This is a shortcut for <code>qx.ui.core.queue.Layout.add(this);</code>.\r\n     */\r\n    scheduleLayoutUpdate() {\r\n      qx.ui.core.queue.Layout.add(this);\r\n    },\r\n\r\n    /**\r\n     * Resets the cache for children which should be laid out.\r\n     */\r\n    invalidateLayoutChildren() {\r\n      var layout = this.__layoutManager;\r\n      if (layout) {\r\n        layout.invalidateChildrenCache();\r\n      }\r\n\r\n      qx.ui.core.queue.Layout.add(this);\r\n    },\r\n\r\n    /**\r\n     * Returns whether the layout has children, which are layout relevant. This\r\n     * excludes all widgets, which have a {@link qx.ui.core.Widget#visibility}\r\n     * value of <code>exclude</code>.\r\n     *\r\n     * @return {Boolean} Whether the layout has layout relevant children\r\n     */\r\n    hasLayoutChildren() {\r\n      var children = this.__widgetChildren;\r\n      if (!children) {\r\n        return false;\r\n      }\r\n\r\n      var child;\r\n      for (var i = 0, l = children.length; i < l; i++) {\r\n        child = children[i];\r\n        if (!child.hasUserBounds() && !child.isExcluded()) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Returns the widget which contains the children and\r\n     * is relevant for laying them out. This is from the user point of\r\n     * view and may not be identical to the technical structure.\r\n     *\r\n     * @return {qx.ui.core.Widget} Widget which contains the children.\r\n     */\r\n    getChildrenContainer() {\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * @type {Array} Placeholder for children list in empty widgets.\r\n     *     Mainly to keep instance number low.\r\n     *\r\n     * @lint ignoreReferenceField(__emptyChildren)\r\n     */\r\n    __emptyChildren: [],\r\n\r\n    /**\r\n     * Returns the children list\r\n     *\r\n     * @return {qx.ui.core.LayoutItem[]} The children array (Arrays are\r\n     *   reference types, so please do not modify it in-place).\r\n     */\r\n    _getChildren() {\r\n      return this.__widgetChildren || this.__emptyChildren;\r\n    },\r\n\r\n    /**\r\n     * Returns the index position of the given widget if it is\r\n     * a child widget. Otherwise it returns <code>-1</code>.\r\n     *\r\n     * @param child {qx.ui.core.Widget} the widget to query for\r\n     * @return {Integer} The index position or <code>-1</code> when\r\n     *   the given widget is no child of this layout.\r\n     */\r\n    _indexOf(child) {\r\n      var children = this.__widgetChildren;\r\n      if (!children) {\r\n        return -1;\r\n      }\r\n\r\n      return children.indexOf(child);\r\n    },\r\n\r\n    /**\r\n     * Whether the widget contains children.\r\n     *\r\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\r\n     */\r\n    _hasChildren() {\r\n      var children = this.__widgetChildren;\r\n      return children != null && !!children[0];\r\n    },\r\n\r\n    /**\r\n     * Recursively adds all children to the given queue\r\n     *\r\n     * @param queue {Array} The queue to add widgets to\r\n     */\r\n    addChildrenToQueue(queue) {\r\n      var children = this.__widgetChildren;\r\n      if (!children) {\r\n        return;\r\n      }\r\n\r\n      var child;\r\n      for (var i = 0, l = children.length; i < l; i++) {\r\n        child = children[i];\r\n        queue.push(child);\r\n\r\n        child.addChildrenToQueue(queue);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds a new child widget.\r\n     *\r\n     * The supported keys of the layout options map depend on the layout manager\r\n     * used to position the widget. The options are documented in the class\r\n     * documentation of each layout manager {@link qx.ui.layout}.\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} the widget to add.\r\n     * @param options {Map?null} Optional layout data for widget.\r\n     */\r\n    _add(child, options) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertInstance(\r\n          child,\r\n          qx.ui.core.LayoutItem.constructor,\r\n          \"'Child' must be an instance of qx.ui.core.LayoutItem!\"\r\n        );\r\n      }\r\n\r\n      // When moving in the same widget, remove widget first\r\n      if (child.getLayoutParent() == this) {\r\n        qx.lang.Array.remove(this.__widgetChildren, child);\r\n      }\r\n\r\n      if (this.__widgetChildren) {\r\n        this.__widgetChildren.push(child);\r\n      } else {\r\n        this.__widgetChildren = [child];\r\n      }\r\n\r\n      this.__addHelper(child, options);\r\n    },\r\n\r\n    /**\r\n     * Add a child widget at the specified index\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} widget to add\r\n     * @param index {Integer} Index, at which the widget will be inserted. If no\r\n     *   widget exists at the given index, the new widget gets appended to the\r\n     *   current list of children.\r\n     * @param options {Map?null} Optional layout data for widget.\r\n     */\r\n    _addAt(child, index, options) {\r\n      if (!this.__widgetChildren) {\r\n        this.__widgetChildren = [];\r\n      }\r\n\r\n      // When moving in the same widget, remove widget first\r\n      if (child.getLayoutParent() == this) {\r\n        qx.lang.Array.remove(this.__widgetChildren, child);\r\n      }\r\n\r\n      var ref = this.__widgetChildren[index];\r\n\r\n      if (ref === child) {\r\n        child.setLayoutProperties(options);\r\n      }\r\n\r\n      if (ref) {\r\n        qx.lang.Array.insertBefore(this.__widgetChildren, child, ref);\r\n      } else {\r\n        this.__widgetChildren.push(child);\r\n      }\r\n\r\n      this.__addHelper(child, options);\r\n    },\r\n\r\n    /**\r\n     * Add a widget before another already inserted widget\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} widget to add\r\n     * @param before {qx.ui.core.LayoutItem} widget before the new widget will be inserted.\r\n     * @param options {Map?null} Optional layout data for widget.\r\n     */\r\n    _addBefore(child, before, options) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertInArray(\r\n          before,\r\n          this._getChildren(),\r\n          \"The 'before' widget is not a child of this widget!\"\r\n        );\r\n      }\r\n\r\n      if (child == before) {\r\n        return;\r\n      }\r\n\r\n      if (!this.__widgetChildren) {\r\n        this.__widgetChildren = [];\r\n      }\r\n\r\n      // When moving in the same widget, remove widget first\r\n      if (child.getLayoutParent() == this) {\r\n        qx.lang.Array.remove(this.__widgetChildren, child);\r\n      }\r\n\r\n      qx.lang.Array.insertBefore(this.__widgetChildren, child, before);\r\n\r\n      this.__addHelper(child, options);\r\n    },\r\n\r\n    /**\r\n     * Add a widget after another already inserted widget\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} widget to add\r\n     * @param after {qx.ui.core.LayoutItem} widget, after which the new widget will\r\n     *   be inserted\r\n     * @param options {Map?null} Optional layout data for widget.\r\n     */\r\n    _addAfter(child, after, options) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertInArray(\r\n          after,\r\n          this._getChildren(),\r\n          \"The 'after' widget is not a child of this widget!\"\r\n        );\r\n      }\r\n\r\n      if (child == after) {\r\n        return;\r\n      }\r\n\r\n      if (!this.__widgetChildren) {\r\n        this.__widgetChildren = [];\r\n      }\r\n\r\n      // When moving in the same widget, remove widget first\r\n      if (child.getLayoutParent() == this) {\r\n        qx.lang.Array.remove(this.__widgetChildren, child);\r\n      }\r\n\r\n      qx.lang.Array.insertAfter(this.__widgetChildren, child, after);\r\n\r\n      this.__addHelper(child, options);\r\n    },\r\n\r\n    /**\r\n     * Remove the given child widget.\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} the widget to remove\r\n     */\r\n    _remove(child) {\r\n      if (!this.__widgetChildren) {\r\n        throw new Error(\"This widget has no children!\");\r\n      }\r\n\r\n      qx.lang.Array.remove(this.__widgetChildren, child);\r\n      this.__removeHelper(child);\r\n    },\r\n\r\n    /**\r\n     * Remove the widget at the specified index.\r\n     *\r\n     * @param index {Integer} Index of the widget to remove.\r\n     * @return {qx.ui.core.LayoutItem} The removed item.\r\n     */\r\n    _removeAt(index) {\r\n      if (!this.__widgetChildren) {\r\n        throw new Error(\"This widget has no children!\");\r\n      }\r\n\r\n      var child = this.__widgetChildren[index];\r\n\r\n      qx.lang.Array.removeAt(this.__widgetChildren, index);\r\n      this.__removeHelper(child);\r\n\r\n      return child;\r\n    },\r\n\r\n    /**\r\n     * Remove all children.\r\n     *\r\n     * @return {Array} An array containing the removed children.\r\n     */\r\n    _removeAll() {\r\n      if (!this.__widgetChildren) {\r\n        return [];\r\n      }\r\n\r\n      // Working on a copy to make it possible to clear the\r\n      // internal array before calling setLayoutParent()\r\n      var children = this.__widgetChildren.concat();\r\n      this.__widgetChildren.length = 0;\r\n\r\n      for (var i = children.length - 1; i >= 0; i--) {\r\n        this.__removeHelper(children[i]);\r\n      }\r\n\r\n      qx.ui.core.queue.Layout.add(this);\r\n\r\n      return children;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CHILDREN HANDLING - TEMPLATE METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * This method gets called each time after a child widget was added and can\r\n     * be overridden to get notified about child adds.\r\n     *\r\n     * @signature function(child)\r\n     * @param child {qx.ui.core.LayoutItem} The added child.\r\n     */\r\n    _afterAddChild: null,\r\n\r\n    /**\r\n     * This method gets called each time after a child widget was removed and\r\n     * can be overridden to get notified about child removes.\r\n     *\r\n     * @signature function(child)\r\n     * @param child {qx.ui.core.LayoutItem} The removed child.\r\n     */\r\n    _afterRemoveChild: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CHILDREN HANDLING - IMPLEMENTATION\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Convenience function to add a child widget. It will insert the child to\r\n     * the parent widget and schedule a layout update.\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} The child to add.\r\n     * @param options {Map|null} Optional layout data for the widget.\r\n     */\r\n    __addHelper(child, options) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertInstance(\r\n          child,\r\n          qx.ui.core.LayoutItem,\r\n          \"Invalid widget to add: \" + child\r\n        );\r\n\r\n        this.assertNotIdentical(\r\n          child,\r\n          this,\r\n          \"Could not add widget to itself: \" + child\r\n        );\r\n\r\n        if (options != null) {\r\n          this.assertType(options, \"object\", \"Invalid layout data: \" + options);\r\n        }\r\n      }\r\n\r\n      // Remove from old parent\r\n      var parent = child.getLayoutParent();\r\n      if (parent && parent != this) {\r\n        parent._remove(child);\r\n      }\r\n\r\n      // Remember parent\r\n      child.setLayoutParent(this);\r\n\r\n      // Import options: This call will\r\n      //  - clear the layout's children cache as well and\r\n      //  - add its parent (this widget) to the layout queue\r\n      if (options) {\r\n        child.setLayoutProperties(options);\r\n      } else {\r\n        this.updateLayoutProperties();\r\n      }\r\n\r\n      // call the template method\r\n      if (this._afterAddChild) {\r\n        this._afterAddChild(child);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Convenience function to remove a child widget. It will remove it\r\n     * from the parent widget and schedule a layout update.\r\n     *\r\n     * @param child {qx.ui.core.LayoutItem} The child to remove.\r\n     */\r\n    __removeHelper(child) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.assertNotUndefined(child);\r\n      }\r\n\r\n      if (child.getLayoutParent() !== this) {\r\n        throw new Error(\r\n          \"Remove Error: \" + child + \" is not a child of this widget!\"\r\n        );\r\n      }\r\n\r\n      // Clear parent connection\r\n      child.setLayoutParent(null);\r\n\r\n      // clear the layout's children cache\r\n      if (this.__layoutManager) {\r\n        this.__layoutManager.invalidateChildrenCache();\r\n      }\r\n\r\n      // Add to layout queue\r\n      qx.ui.core.queue.Layout.add(this);\r\n\r\n      // call the template method\r\n      if (this._afterRemoveChild) {\r\n        this._afterRemoveChild(child);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENTS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Enables pointer event capturing. All pointer events will dispatched on this\r\n     * widget until capturing is disabled using {@link #releaseCapture} or a\r\n     * pointer button is clicked. If the widgets becomes the capturing widget the\r\n     * {@link #capture} event is fired. Once it loses capture mode the\r\n     * {@link #losecapture} event is fired.\r\n     *\r\n     * @param capture {Boolean?true} If true all events originating in\r\n     *   the container are captured. If false events originating in the container\r\n     *   are not captured.\r\n     */\r\n    capture(capture) {\r\n      this.getContentElement().capture(capture);\r\n    },\r\n\r\n    /**\r\n     * Disables pointer capture mode enabled by {@link #capture}.\r\n     */\r\n    releaseCapture() {\r\n      this.getContentElement().releaseCapture();\r\n    },\r\n\r\n    /**\r\n     * Checks if pointer event capturing is enabled for this widget.\r\n     *\r\n     * @return {Boolean} <code>true</code> if capturing is active\r\n     */\r\n    isCapturing() {\r\n      var el = this.getContentElement().getDomElement();\r\n      if (!el) {\r\n        return false;\r\n      }\r\n      var manager = qx.event.Registration.getManager(el);\r\n      var dispatcher = manager.getDispatcher(qx.event.dispatch.MouseCapture);\r\n      return el == dispatcher.getCaptureElement();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PADDING SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyPadding(value, old, name) {\r\n      this._updateInsets = true;\r\n      qx.ui.core.queue.Layout.add(this);\r\n\r\n      this.__updateContentPadding(name, value);\r\n    },\r\n\r\n    /**\r\n     * Helper to updated the css padding of the content element considering the\r\n     * padding of the decorator.\r\n     * @param style {String} The name of the css padding property e.g. <code>paddingTop</code>\r\n     * @param value {Number} The value to set.\r\n     */\r\n    __updateContentPadding(style, value) {\r\n      var content = this.getContentElement();\r\n      var decorator = this.getDecorator();\r\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\r\n      if (decorator) {\r\n        var direction = qx.Bootstrap.firstLow(style.replace(\"padding\", \"\"));\r\n        value += decorator.getPadding()[direction] || 0;\r\n      }\r\n      content.setStyle(style, value + \"px\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      DECORATION SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyDecorator(value, old) {\r\n      var content = this.getContentElement();\r\n\r\n      if (old) {\r\n        old = qx.theme.manager.Decoration.getInstance().getCssClassName(old);\r\n        content.removeClass(old);\r\n      }\r\n\r\n      if (value) {\r\n        value = qx.theme.manager.Decoration.getInstance().addCssClass(value);\r\n        content.addClass(value);\r\n      }\r\n      if (value || old) {\r\n        qx.ui.core.queue.Layout.add(this);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      OTHER PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyToolTipText(value, old) {\r\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n        if (this.__toolTipTextListenerId) {\r\n          return;\r\n        }\r\n        var manager = qx.locale.Manager.getInstance();\r\n        this.__toolTipTextListenerId = manager.addListener(\r\n          \"changeLocale\",\r\n          () => {\r\n            var toolTipText = this.getToolTipText();\r\n            if (toolTipText && toolTipText.translate) {\r\n              this.setToolTipText(toolTipText.translate());\r\n            }\r\n          }\r\n        );\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyTextColor(value, old) {\r\n      // empty template\r\n    }, // property apply\r\n    _applyZIndex(value, old) {\r\n      this.getContentElement().setStyle(\"zIndex\", value == null ? 0 : value);\r\n    }, // property apply\r\n    _applyVisibility(value, old) {\r\n      var content = this.getContentElement();\r\n      if (value === \"visible\") {\r\n        content.show();\r\n      } else {\r\n        content.hide();\r\n      } // only force a layout update if visibility change from/to \"exclude\"\r\n      var parent = this.$$parent;\r\n      if (\r\n        parent &&\r\n        (old == null ||\r\n          value == null ||\r\n          old === \"excluded\" ||\r\n          value === \"excluded\")\r\n      ) {\r\n        parent.invalidateLayoutChildren();\r\n      }\r\n\r\n      // Update visibility cache\r\n      qx.ui.core.queue.Visibility.add(this);\r\n    },\r\n\r\n    // property apply\r\n    _applyOpacity(value, old) {\r\n      this.getContentElement().setStyle(\"opacity\", value == 1 ? null : value);\r\n    },\r\n\r\n    // property apply\r\n    _applyCursor(value, old) {\r\n      if (value == null && !this.isSelectable()) {\r\n        value = \"default\";\r\n      }\r\n\r\n      // In Opera the cursor must be set directly.\r\n      // http://bugzilla.qooxdoo.org/show_bug.cgi?id=1729\r\n      this.getContentElement().setStyle(\r\n        \"cursor\",\r\n        value,\r\n        qx.core.Environment.get(\"engine.name\") == \"opera\"\r\n      );\r\n    },\r\n\r\n    // property apply\r\n    _applyBackgroundColor(value, old) {\r\n      var color = this.getBackgroundColor();\r\n      var content = this.getContentElement();\r\n\r\n      var resolved = qx.theme.manager.Color.getInstance().resolve(color);\r\n      content.setStyle(\"backgroundColor\", resolved);\r\n    },\r\n\r\n    // property apply\r\n    _applyFont(value, old) {\r\n      // empty template\r\n    }, // ---------------------------------------------------------------------------\r\n    // DYNAMIC THEME SWITCH SUPPORT\r\n    // ---------------------------------------------------------------------------\r\n    // overridden\r\n    _onChangeTheme() {\r\n      if (this.isDisposed()) {\r\n        return;\r\n      }\r\n      super._onChangeTheme(); // update the appearance\r\n      this.updateAppearance(); // DECORATOR //\r\n      var value = this.getDecorator();\r\n      this._applyDecorator(null, value);\r\n      this._applyDecorator(value); // FONT //\r\n      value = this.getFont();\r\n      if (qx.lang.Type.isString(value)) {\r\n        this._applyFont(value, value);\r\n      }\r\n\r\n      // TEXT COLOR //\r\n      value = this.getTextColor();\r\n      if (qx.lang.Type.isString(value)) {\r\n        this._applyTextColor(value, value);\r\n      }\r\n\r\n      // BACKGROUND COLOR //\r\n      value = this.getBackgroundColor();\r\n      if (qx.lang.Type.isString(value)) {\r\n        this._applyBackgroundColor(value, value);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      STATE HANDLING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** @type {Map} The current widget states */\r\n    __states: null,\r\n\r\n    /** @type {Boolean} Whether the widget has state changes which are not yet queued */\r\n    $$stateChanges: null,\r\n\r\n    /** @type {Map} Can be overridden to forward states to the child controls. */\r\n    _forwardStates: null,\r\n\r\n    /**\r\n     * Returns whether a state is set.\r\n     *\r\n     * @param state {String} the state to check.\r\n     * @return {Boolean} whether the state is set.\r\n     */\r\n    hasState(state) {\r\n      var states = this.__states;\r\n      return !!states && !!states[state];\r\n    },\r\n\r\n    /**\r\n     * Sets a state.\r\n     *\r\n     * @param state {String} The state to add\r\n     */\r\n    addState(state) {\r\n      // Dynamically create state map\r\n      var states = this.__states;\r\n      if (!states) {\r\n        states = this.__states = {};\r\n      }\r\n\r\n      if (states[state]) {\r\n        return;\r\n      }\r\n\r\n      // Add state and queue\r\n      this.__states[state] = true;\r\n\r\n      // Fast path for hovered state\r\n      if (state === \"hovered\") {\r\n        this.syncAppearance();\r\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\r\n        this.$$stateChanges = true;\r\n      } else {\r\n        qx.ui.core.queue.Appearance.add(this);\r\n      }\r\n\r\n      // Forward state change to child controls\r\n      var forward = this._forwardStates;\r\n      var controls = this.__childControls;\r\n\r\n      if (forward && forward[state] && controls) {\r\n        var control;\r\n        for (var id in controls) {\r\n          control = controls[id];\r\n          if (control instanceof qx.ui.core.Widget) {\r\n            controls[id].addState(state);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Clears a state.\r\n     *\r\n     * @param state {String} the state to clear.\r\n     */\r\n    removeState(state) {\r\n      // Check for existing state\r\n      var states = this.__states;\r\n      if (!states || !states[state]) {\r\n        return;\r\n      }\r\n\r\n      // Clear state and queue\r\n      delete this.__states[state];\r\n\r\n      // Fast path for hovered state\r\n      if (state === \"hovered\") {\r\n        this.syncAppearance();\r\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\r\n        this.$$stateChanges = true;\r\n      } else {\r\n        qx.ui.core.queue.Appearance.add(this);\r\n      }\r\n\r\n      // Forward state change to child controls\r\n      var forward = this._forwardStates;\r\n      var controls = this.__childControls;\r\n\r\n      if (forward && forward[state] && controls) {\r\n        for (var id in controls) {\r\n          var control = controls[id];\r\n          if (control instanceof qx.ui.core.Widget) {\r\n            control.removeState(state);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Replaces the first state with the second one.\r\n     *\r\n     * This method is ideal for state transitions e.g. normal => selected.\r\n     *\r\n     * @param old {String} Previous state\r\n     * @param value {String} New state\r\n     */\r\n    replaceState(old, value) {\r\n      var states = this.__states;\r\n      if (!states) {\r\n        states = this.__states = {};\r\n      }\r\n\r\n      if (!states[value]) {\r\n        states[value] = true;\r\n      }\r\n\r\n      if (states[old]) {\r\n        delete states[old];\r\n      }\r\n\r\n      if (!qx.ui.core.queue.Visibility.isVisible(this)) {\r\n        this.$$stateChanges = true;\r\n      } else {\r\n        qx.ui.core.queue.Appearance.add(this);\r\n      }\r\n\r\n      // Forward state change to child controls\r\n      var forward = this._forwardStates;\r\n      var controls = this.__childControls;\r\n\r\n      if (forward && forward[value] && controls) {\r\n        for (var id in controls) {\r\n          var control = controls[id];\r\n          if (control instanceof qx.ui.core.Widget) {\r\n            control.replaceState(old, value);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      APPEARANCE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** @type {String} The currently compiled selector to lookup the matching appearance */\r\n    __appearanceSelector: null,\r\n\r\n    /** @type {Boolean} Whether the selectors needs to be recomputed before updating appearance */\r\n    __updateSelector: null,\r\n\r\n    /**\r\n     * Renders the appearance using the current widget states.\r\n     *\r\n     * Used exclusively by {qx.ui.core.queue.Appearance}.\r\n     */\r\n    syncAppearance() {\r\n      var states = this.__states;\r\n      var selector = this.__appearanceSelector;\r\n      var manager = qx.theme.manager.Appearance.getInstance();\r\n\r\n      // Cache deep accessor\r\n      var styler = qx.core.Property.$$method.setThemed;\r\n      var unstyler = qx.core.Property.$$method.resetThemed;\r\n\r\n      // Check for requested selector update\r\n      if (this.__updateSelector) {\r\n        // Clear flag\r\n        delete this.__updateSelector;\r\n\r\n        // Check if the selector was created previously\r\n        if (selector) {\r\n          // Query old selector\r\n          var oldData = manager.styleFrom(\r\n            selector,\r\n            states,\r\n            null,\r\n            this.getAppearance()\r\n          );\r\n\r\n          // Clear current selector (to force recompute)\r\n          selector = null;\r\n        }\r\n      }\r\n\r\n      // Build selector\r\n      if (!selector) {\r\n        var obj = this;\r\n        var id = [];\r\n\r\n        do {\r\n          id.push(obj.$$subcontrol || obj.getAppearance());\r\n        } while ((obj = obj.$$subparent));\r\n\r\n        // Combine parent control IDs, add top level appearance, filter result\r\n        // to not include positioning information anymore (e.g. #3)\r\n        selector = id\r\n          .reverse()\r\n          .join(\"/\")\r\n          .replace(/#[0-9]+/g, \"\");\r\n        this.__appearanceSelector = selector;\r\n      }\r\n\r\n      // Query current selector\r\n      var newData = manager.styleFrom(\r\n        selector,\r\n        states,\r\n        null,\r\n        this.getAppearance()\r\n      );\r\n\r\n      if (newData) {\r\n        if (oldData) {\r\n          for (var prop in oldData) {\r\n            if (newData[prop] === undefined) {\r\n              this[unstyler[prop]]();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Check property availability of new data\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          for (var prop in newData) {\r\n            if (!this[styler[prop]]) {\r\n              throw new Error(\r\n                this.classname +\r\n                  ' has no themeable property \"' +\r\n                  prop +\r\n                  '\" while styling ' +\r\n                  selector\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // Apply new data\r\n        for (var prop in newData) {\r\n          newData[prop] === undefined\r\n            ? this[unstyler[prop]]()\r\n            : this[styler[prop]](newData[prop]);\r\n        }\r\n      } else if (oldData) {\r\n        // Clear old data\r\n        for (var prop in oldData) {\r\n          this[unstyler[prop]]();\r\n        }\r\n      }\r\n\r\n      this.fireDataEvent(\"syncAppearance\", this.__states);\r\n    },\r\n\r\n    // property apply\r\n    _applyAppearance(value, old) {\r\n      this.updateAppearance();\r\n    },\r\n\r\n    /**\r\n     * Helper method called from the visibility queue to detect outstanding changes\r\n     * to the appearance.\r\n     *\r\n     * @internal\r\n     */\r\n    checkAppearanceNeeds() {\r\n      // CASE 1: Widget has never got an appearance already because it was never\r\n      // visible before. Normally add it to the queue is the easiest way to update it.\r\n      if (!this.__initialAppearanceApplied) {\r\n        qx.ui.core.queue.Appearance.add(this);\r\n        this.__initialAppearanceApplied = true;\r\n      }\r\n\r\n      // CASE 2: Widget has got an appearance before, but was hidden for some time\r\n      // which results into maybe omitted state changes have not been applied.\r\n      // In this case the widget is already queued in the appearance. This is basically\r\n      // what all addState/removeState do, but the queue itself may not have been registered\r\n      // to be flushed\r\n      else if (this.$$stateChanges) {\r\n        qx.ui.core.queue.Appearance.add(this);\r\n        delete this.$$stateChanges;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Refreshes the appearance of this widget and all\r\n     * registered child controls.\r\n     */\r\n    updateAppearance() {\r\n      // Clear selector\r\n      this.__updateSelector = true;\r\n\r\n      // Add to appearance queue\r\n      qx.ui.core.queue.Appearance.add(this);\r\n\r\n      // Update child controls\r\n      var controls = this.__childControls;\r\n      if (controls) {\r\n        var obj;\r\n        for (var id in controls) {\r\n          obj = controls[id];\r\n\r\n          if (obj instanceof qx.ui.core.Widget) {\r\n            obj.updateAppearance();\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET QUEUE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * This method is called during the flush of the\r\n     * {@link qx.ui.core.queue.Widget widget queue}.\r\n     *\r\n     * @param jobs {Map} A map of jobs.\r\n     */\r\n    syncWidget(jobs) {\r\n      // empty implementation\r\n    },\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n    EVENT SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */ /**\r\n     * Returns the next event target in the parent chain. May\r\n     * also return the widget itself if it is not anonymous.\r\n     *\r\n     * @return {qx.ui.core.Widget} A working event target of this widget.\r\n     *    May be <code>null</code> as well.\r\n     */ getEventTarget() {\r\n      var target = this;\r\n      while (target.getAnonymous()) {\r\n        target = target.getLayoutParent();\r\n        if (!target) {\r\n          return null;\r\n        }\r\n      }\r\n      return target;\r\n    },\r\n\r\n    /**\r\n     * Returns the next focus target in the parent chain. May\r\n     * also return the widget itself if it is not anonymous and focusable.\r\n     *\r\n     * @return {qx.ui.core.Widget} A working focus target of this widget.\r\n     *    May be <code>null</code> as well.\r\n     */\r\n    getFocusTarget() {\r\n      var target = this;\r\n\r\n      if (!target.getEnabled()) {\r\n        return null;\r\n      }\r\n\r\n      while (target.getAnonymous() || !target.getFocusable()) {\r\n        target = target.getLayoutParent();\r\n        if (!target || !target.getEnabled()) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      return target;\r\n    },\r\n\r\n    /**\r\n     * Returns the element which should be focused.\r\n     *\r\n     * @return {qx.html.Element} The html element to focus.\r\n     */\r\n    getFocusElement() {\r\n      return this.getContentElement();\r\n    },\r\n\r\n    /**\r\n     * Whether the widget is reachable by pressing the TAB key.\r\n     *\r\n     * Normally tests for both, the focusable property and a positive or\r\n     * undefined tabIndex property. The widget must have a DOM element\r\n     * since only visible widgets are tabable.\r\n     *\r\n     * @return {Boolean} Whether the element is tabable.\r\n     */\r\n    isTabable() {\r\n      return !!this.getContentElement().getDomElement() && this.isFocusable();\r\n    },\r\n\r\n    // property apply\r\n    _applyFocusable(value, old) {\r\n      var target = this.getFocusElement();\r\n\r\n      // Apply native tabIndex attribute\r\n      if (value) {\r\n        var tabIndex = this.getTabIndex();\r\n        if (tabIndex == null) {\r\n          tabIndex = 1;\r\n        }\r\n\r\n        target.setAttribute(\"tabIndex\", tabIndex);\r\n\r\n        // Omit native dotted outline border\r\n        target.setStyle(\"outline\", \"none\");\r\n      } else {\r\n        if (target.isNativelyFocusable()) {\r\n          target.setAttribute(\"tabIndex\", -1);\r\n        } else if (old) {\r\n          target.setAttribute(\"tabIndex\", null);\r\n        }\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyKeepFocus(value) {\r\n      var target = this.getFocusElement();\r\n      target.setAttribute(\"qxKeepFocus\", value ? \"on\" : null);\r\n    },\r\n\r\n    // property apply\r\n    _applyKeepActive(value) {\r\n      var target = this.getContentElement();\r\n      target.setAttribute(\"qxKeepActive\", value ? \"on\" : null);\r\n    },\r\n\r\n    // property apply\r\n    _applyTabIndex(value) {\r\n      if (value == null) {\r\n        value = 1;\r\n      } else if (value < 1 || value > 32000) {\r\n        throw new Error(\"TabIndex property must be between 1 and 32000\");\r\n      }\r\n\r\n      if (this.getFocusable() && value != null) {\r\n        this.getFocusElement().setAttribute(\"tabIndex\", value);\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applySelectable(value, old) {\r\n      // Re-apply cursor if not in \"initSelectable\"\r\n      if (old !== null) {\r\n        this._applyCursor(this.getCursor());\r\n      }\r\n\r\n      // Apply qooxdoo attribute\r\n      this.getContentElement().setSelectable(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyEnabled(value, old) {\r\n      if (value === false) {\r\n        this.addState(\"disabled\");\r\n\r\n        // hovered not configured in widget, but as this is a\r\n        // standardized name in qooxdoo and we never want a hover\r\n        // state for disabled widgets, remove this state every time\r\n        this.removeState(\"hovered\");\r\n\r\n        // Blur when focused\r\n        if (this.isFocusable()) {\r\n          // Remove focused state\r\n          this.removeState(\"focused\");\r\n\r\n          // Remove tabIndex\r\n          this._applyFocusable(false, true);\r\n        }\r\n\r\n        // Remove draggable\r\n        if (this.isDraggable()) {\r\n          this._applyDraggable(false, true);\r\n        }\r\n\r\n        // Remove droppable\r\n        if (this.isDroppable()) {\r\n          this._applyDroppable(false, true);\r\n        }\r\n      } else {\r\n        this.removeState(\"disabled\");\r\n\r\n        // Re-add tabIndex\r\n        if (this.isFocusable()) {\r\n          this._applyFocusable(true, false);\r\n        }\r\n\r\n        // Re-add draggable\r\n        if (this.isDraggable()) {\r\n          this._applyDraggable(true, false);\r\n        }\r\n\r\n        // Re-add droppable\r\n        if (this.isDroppable()) {\r\n          this._applyDroppable(true, false);\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CONTEXT MENU\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyNativeContextMenu(value, old, name) {\r\n      // empty body to allow overriding\r\n    }, // property apply\r\n    _applyContextMenu(value, old) {\r\n      if (old) {\r\n        old.removeState(\"contextmenu\");\r\n        if (old.getOpener() == this) {\r\n          old.resetOpener();\r\n        }\r\n        if (!value) {\r\n          this.removeListener(\"contextmenu\", this._onContextMenuOpen);\r\n          this.removeListener(\"longtap\", this._onContextMenuOpen);\r\n          old.removeListener(\r\n            \"changeVisibility\",\r\n            this._onBeforeContextMenuOpen,\r\n            this\r\n          );\r\n        }\r\n      }\r\n\r\n      if (value) {\r\n        value.setOpener(this);\r\n        value.addState(\"contextmenu\");\r\n\r\n        if (!old) {\r\n          this.addListener(\"contextmenu\", this._onContextMenuOpen);\r\n          this.addListener(\"longtap\", this._onContextMenuOpen);\r\n          value.addListener(\r\n            \"changeVisibility\",\r\n            this._onBeforeContextMenuOpen,\r\n            this\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for <code>contextmenu</code> event\r\n     *\r\n     * @param e {qx.event.type.Pointer} The event object\r\n     */\r\n    _onContextMenuOpen(e) {\r\n      // only allow long tap context menu on touch interactions\r\n      if (e.getType() == \"longtap\") {\r\n        if (e.getPointerType() !== \"touch\") {\r\n          return;\r\n        }\r\n      }\r\n      this.getContextMenu().openAtPointer(e);\r\n\r\n      // Do not show native menu\r\n      // don't open any other contextmenus\r\n      e.stop();\r\n    },\r\n\r\n    /**\r\n     * Event listener for <code>beforeContextmenuOpen</code> event\r\n     *\r\n     * @param e {qx.event.type.Data} The data event\r\n     */\r\n    _onBeforeContextMenuOpen(e) {\r\n      if (\r\n        e.getData() == \"visible\" &&\r\n        this.hasListener(\"beforeContextmenuOpen\")\r\n      ) {\r\n        this.fireDataEvent(\"beforeContextmenuOpen\", e);\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      USEFUL COMMON EVENT LISTENERS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event listener which stops a bubbling event from\r\n     * propagates further.\r\n     *\r\n     * @param e {qx.event.type.Event} Any bubbling event\r\n     */\r\n    _onStopEvent(e) {\r\n      e.stopPropagation();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      DRAG & DROP SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Helper to return a instance of a {@link qx.ui.core.DragDropCursor}.\r\n     * If you want to use your own DragDropCursor, override this method\r\n     * and return your custom instance.\r\n     * @return {qx.ui.core.DragDropCursor} A drag drop cursor implementation.\r\n     */\r\n    _getDragDropCursor() {\r\n      return qx.ui.core.DragDropCursor.getInstance();\r\n    },\r\n\r\n    // property apply\r\n    _applyDraggable(value, old) {\r\n      if (!this.isEnabled() && value === true) {\r\n        value = false;\r\n      }\r\n\r\n      // Force cursor creation\r\n      this._getDragDropCursor();\r\n\r\n      // Process listeners\r\n      if (value) {\r\n        this.addListener(\"dragstart\", this._onDragStart);\r\n        this.addListener(\"drag\", this._onDrag);\r\n        this.addListener(\"dragend\", this._onDragEnd);\r\n        this.addListener(\"dragchange\", this._onDragChange);\r\n      } else {\r\n        this.removeListener(\"dragstart\", this._onDragStart);\r\n        this.removeListener(\"drag\", this._onDrag);\r\n        this.removeListener(\"dragend\", this._onDragEnd);\r\n        this.removeListener(\"dragchange\", this._onDragChange);\r\n      }\r\n\r\n      // Sync DOM attribute\r\n      this.getContentElement().setAttribute(\"qxDraggable\", value ? \"on\" : null);\r\n    },\r\n\r\n    // property apply\r\n    _applyDroppable(value, old) {\r\n      if (!this.isEnabled() && value === true) {\r\n        value = false;\r\n      }\r\n\r\n      // Sync DOM attribute\r\n      this.getContentElement().setAttribute(\"qxDroppable\", value ? \"on\" : null);\r\n    },\r\n\r\n    /**\r\n     * Event listener for own <code>dragstart</code> event.\r\n     *\r\n     * @param e {qx.event.type.Drag} Drag event\r\n     */\r\n    _onDragStart(e) {\r\n      this._getDragDropCursor().placeToPointer(e);\r\n      this.getApplicationRoot().setGlobalCursor(\"default\");\r\n    },\r\n\r\n    /**\r\n     * Event listener for own <code>drag</code> event.\r\n     *\r\n     * @param e {qx.event.type.Drag} Drag event\r\n     */\r\n    _onDrag(e) {\r\n      this._getDragDropCursor().placeToPointer(e);\r\n    },\r\n\r\n    /**\r\n     * Event listener for own <code>dragend</code> event.\r\n     *\r\n     * @param e {qx.event.type.Drag} Drag event\r\n     */\r\n    _onDragEnd(e) {\r\n      this._getDragDropCursor().moveTo(-1000, -1000);\r\n      this.getApplicationRoot().resetGlobalCursor();\r\n    },\r\n\r\n    /**\r\n     * Event listener for own <code>dragchange</code> event.\r\n     *\r\n     * @param e {qx.event.type.Drag} Drag event\r\n     */\r\n    _onDragChange(e) {\r\n      var cursor = this._getDragDropCursor();\r\n      var action = e.getCurrentAction();\r\n      action ? cursor.setAction(action) : cursor.resetAction();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      VISUALIZE FOCUS STATES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Event handler which is executed when the widget receives the focus.\r\n     *\r\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\r\n     * apply states etc. to a focused widget.\r\n     *\r\n     * @internal\r\n     */\r\n    visualizeFocus() {\r\n      this.addState(\"focused\");\r\n    },\r\n\r\n    /**\r\n     * Event handler which is executed when the widget lost the focus.\r\n     *\r\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\r\n     * remove states etc. from a previously focused widget.\r\n     *\r\n     * @internal\r\n     */\r\n    visualizeBlur() {\r\n      this.removeState(\"focused\");\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      SCROLL CHILD INTO VIEW\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * The method scrolls the given item into view.\r\n     *\r\n     * @param child {qx.ui.core.Widget} Child to scroll into view\r\n     * @param alignX {String?null} Alignment of the item. Allowed values:\r\n     *   <code>left</code> or <code>right</code>. Could also be null.\r\n     *   Without a given alignment the method tries to scroll the widget\r\n     *   with the minimum effort needed.\r\n     * @param alignY {String?null} Alignment of the item. Allowed values:\r\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\r\n     *   Without a given alignment the method tries to scroll the widget\r\n     *   with the minimum effort needed.\r\n     * @param direct {Boolean?true} Whether the execution should be made\r\n     *   directly when possible\r\n     */\r\n    scrollChildIntoView(child, alignX, alignY, direct) {\r\n      // Scroll directly on default\r\n      direct = typeof direct == \"undefined\" ? true : direct;\r\n\r\n      // Always lazy scroll when either\r\n      // - the child\r\n      // - its layout parent\r\n      // - its siblings\r\n      // have layout changes scheduled.\r\n      //\r\n      // This is to make sure that the scroll position is computed\r\n      // after layout changes have been applied to the DOM. Note that changes\r\n      // scheduled for the grand parent (and up) are not tracked and need to\r\n      // be signaled manually.\r\n      var Layout = qx.ui.core.queue.Layout;\r\n      var parent;\r\n\r\n      // Child\r\n      if (direct) {\r\n        direct = !Layout.isScheduled(child);\r\n        parent = child.getLayoutParent();\r\n\r\n        // Parent\r\n        if (direct && parent) {\r\n          direct = !Layout.isScheduled(parent);\r\n\r\n          // Siblings\r\n          if (direct) {\r\n            parent.getChildren().forEach(function (sibling) {\r\n              direct = direct && !Layout.isScheduled(sibling);\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.scrollChildIntoViewX(child, alignX, direct);\r\n      this.scrollChildIntoViewY(child, alignY, direct);\r\n    },\r\n\r\n    /**\r\n     * The method scrolls the given item into view (x-axis only).\r\n     *\r\n     * @param child {qx.ui.core.Widget} Child to scroll into view\r\n     * @param align {String?null} Alignment of the item. Allowed values:\r\n     *   <code>left</code> or <code>right</code>. Could also be null.\r\n     *   Without a given alignment the method tries to scroll the widget\r\n     *   with the minimum effort needed.\r\n     * @param direct {Boolean?true} Whether the execution should be made\r\n     *   directly when possible\r\n     */\r\n    scrollChildIntoViewX(child, align, direct) {\r\n      this.getContentElement().scrollChildIntoViewX(\r\n        child.getContentElement(),\r\n        align,\r\n        direct\r\n      );\r\n    },\r\n\r\n    /**\r\n     * The method scrolls the given item into view (y-axis only).\r\n     *\r\n     * @param child {qx.ui.core.Widget} Child to scroll into view\r\n     * @param align {String?null} Alignment of the element. Allowed values:\r\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\r\n     *   Without a given alignment the method tries to scroll the widget\r\n     *   with the minimum effort needed.\r\n     * @param direct {Boolean?true} Whether the execution should be made\r\n     *   directly when possible\r\n     */\r\n    scrollChildIntoViewY(child, align, direct) {\r\n      this.getContentElement().scrollChildIntoViewY(\r\n        child.getContentElement(),\r\n        align,\r\n        direct\r\n      );\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FOCUS SYSTEM USER ACCESS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Focus this widget.\r\n     *\r\n     */\r\n    focus() {\r\n      if (this.isFocusable()) {\r\n        this.getFocusElement().focus();\r\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\r\n        throw new Error(\"Widget is not focusable!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove focus from this widget.\r\n     *\r\n     */\r\n    blur() {\r\n      if (this.isFocusable()) {\r\n        this.getFocusElement().blur();\r\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\r\n        throw new Error(\"Widget is not focusable!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Activate this widget e.g. for keyboard events.\r\n     *\r\n     */\r\n    activate() {\r\n      this.getContentElement().activate();\r\n    },\r\n\r\n    /**\r\n     * Deactivate this widget e.g. for keyboard events.\r\n     *\r\n     */\r\n    deactivate() {\r\n      this.getContentElement().deactivate();\r\n    },\r\n\r\n    /**\r\n     * Focus this widget when using the keyboard. This is\r\n     * mainly thought for the advanced qooxdoo keyboard handling\r\n     * and should not be used by the application developer.\r\n     *\r\n     * @internal\r\n     */\r\n    tabFocus() {\r\n      this.getFocusElement().focus();\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CHILD CONTROL SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Whether the given ID is assigned to a child control.\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @return {Boolean} <code>true</code> when the child control is registered.\r\n     */\r\n    hasChildControl(id) {\r\n      if (!this.__childControls) {\r\n        return false;\r\n      }\r\n\r\n      return !!this.__childControls[id];\r\n    },\r\n\r\n    /** @type {Map} Map of instantiated child controls */\r\n    __childControls: null,\r\n\r\n    /**\r\n     * Returns a map of all already created child controls\r\n     *\r\n     * @return {Map} mapping of child control id to the child widget.\r\n     */\r\n    _getCreatedChildControls() {\r\n      return this.__childControls;\r\n    },\r\n\r\n    /**\r\n     * Returns the child control from the given ID. Returns\r\n     * <code>null</code> when the child control is unknown.\r\n     *\r\n     * It is designed for widget authors, who want to access child controls,\r\n     * which are created by the widget itself.\r\n     *\r\n     * <b>Warning</b>: This method exposes widget internals and modifying the\r\n     * returned sub widget may bring the widget into an inconsistent state.\r\n     * Accessing child controls defined in a super class or in an foreign class\r\n     * is not supported. Do not use it if the result can be achieved using public\r\n     * API or theming.\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @param notcreate {Boolean?false} Whether the child control\r\n     *    should not be created dynamically if not yet available.\r\n     * @return {qx.ui.core.Widget} Child control\r\n     */\r\n    getChildControl(id, notcreate) {\r\n      if (!this.__childControls) {\r\n        if (notcreate) {\r\n          return null;\r\n        }\r\n\r\n        this.__childControls = {};\r\n      }\r\n\r\n      var control = this.__childControls[id];\r\n      if (control) {\r\n        return control;\r\n      }\r\n\r\n      if (notcreate === true) {\r\n        return null;\r\n      }\r\n\r\n      return this._createChildControl(id);\r\n    },\r\n\r\n    /**\r\n     * Shows the given child control by ID\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @return {qx.ui.core.Widget} the child control\r\n     */\r\n    _showChildControl(id) {\r\n      var control = this.getChildControl(id);\r\n      control.show();\r\n      return control;\r\n    },\r\n\r\n    /**\r\n     * Excludes the given child control by ID\r\n     *\r\n     * @param id {String} ID of the child control\r\n     */\r\n    _excludeChildControl(id) {\r\n      var control = this.getChildControl(id, true);\r\n      if (control) {\r\n        control.exclude();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Whether the given child control is visible.\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @return {Boolean} <code>true</code> when the child control is visible.\r\n     */\r\n    _isChildControlVisible(id) {\r\n      var control = this.getChildControl(id, true);\r\n      if (control) {\r\n        return control.isVisible();\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Release the child control by ID and decouple the\r\n     * child from the parent. This method does not dispose the child control.\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @return {qx.ui.core.Widget} The released control\r\n     */\r\n    _releaseChildControl(id) {\r\n      var control = this.getChildControl(id, false);\r\n      if (!control) {\r\n        throw new Error(\"Unsupported control: \" + id);\r\n      }\r\n\r\n      // remove connection to parent\r\n      delete control.$$subcontrol;\r\n      delete control.$$subparent;\r\n\r\n      // remove state forwarding\r\n      var states = this.__states;\r\n      var forward = this._forwardStates;\r\n\r\n      if (states && forward && control instanceof qx.ui.core.Widget) {\r\n        for (var state in states) {\r\n          if (forward[state]) {\r\n            control.removeState(state);\r\n          }\r\n        }\r\n      }\r\n\r\n      delete this.__childControls[id];\r\n\r\n      return control;\r\n    },\r\n\r\n    /**\r\n     * Force the creation of the given child control by ID.\r\n     *\r\n     * Do not override this method! Override {@link #_createChildControlImpl}\r\n     * instead if you need to support new controls.\r\n     *\r\n     * @param id {String} ID of the child control\r\n     * @return {qx.ui.core.Widget} The created control\r\n     * @throws {Error} when the control was created before\r\n     */\r\n    _createChildControl(id) {\r\n      if (!this.__childControls) {\r\n        this.__childControls = {};\r\n      } else if (this.__childControls[id]) {\r\n        throw new Error(\"Child control '\" + id + \"' already created!\");\r\n      }\r\n\r\n      var pos = id.indexOf(\"#\");\r\n      try {\r\n        if (pos == -1) {\r\n          var control = this._createChildControlImpl(id);\r\n        } else {\r\n          var control = this._createChildControlImpl(\r\n            id.substring(0, pos),\r\n            id.substring(pos + 1, id.length)\r\n          );\r\n        }\r\n      } catch (exc) {\r\n        exc.message =\r\n          \"Exception while creating child control '\" +\r\n          id +\r\n          \"' of widget \" +\r\n          this.toString() +\r\n          \": \" +\r\n          exc.message;\r\n        throw exc;\r\n      }\r\n\r\n      if (!control) {\r\n        throw new Error(\"Unsupported control: \" + id);\r\n      }\r\n\r\n      // Establish connection to parent\r\n      control.$$subcontrol = id;\r\n      control.$$subparent = this;\r\n\r\n      // Support for state forwarding\r\n      var states = this.__states;\r\n      var forward = this._forwardStates;\r\n\r\n      if (states && forward && control instanceof qx.ui.core.Widget) {\r\n        for (var state in states) {\r\n          if (forward[state]) {\r\n            control.addState(state);\r\n          }\r\n        }\r\n      }\r\n\r\n      // If the appearance is already synced after the child control\r\n      // we need to update the appearance now, because the selector\r\n      // might be not correct in certain cases.\r\n      if (control.$$resyncNeeded) {\r\n        delete control.$$resyncNeeded;\r\n        control.updateAppearance();\r\n      }\r\n\r\n      this.fireDataEvent(\"createChildControl\", control);\r\n\r\n      // Register control and return\r\n      return (this.__childControls[id] = control);\r\n    },\r\n\r\n    /**\r\n     * Internal method to create child controls. This method\r\n     * should be overwritten by classes which extends this one\r\n     * to support new child control types.\r\n     *\r\n     * @param id {String} ID of the child control. If a # is used, the id is\r\n     *   the part in front of the #.\r\n     * @param hash {String?undefined} If a child control name contains a #,\r\n     *   all text following the # will be the hash argument.\r\n     * @return {qx.ui.core.Widget} The created control or <code>null</code>\r\n     */\r\n    _createChildControlImpl(id, hash) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Dispose all registered controls. This is automatically\r\n     * executed by the widget.\r\n     *\r\n     */\r\n    _disposeChildControls() {\r\n      var controls = this.__childControls;\r\n      if (!controls) {\r\n        return;\r\n      }\r\n\r\n      var Widget = qx.ui.core.Widget;\r\n\r\n      for (var id in controls) {\r\n        var control = controls[id];\r\n        if (!Widget.contains(this, control)) {\r\n          control.destroy();\r\n        } else {\r\n          control.dispose();\r\n        }\r\n      }\r\n\r\n      delete this.__childControls;\r\n    },\r\n\r\n    /**\r\n     * Finds and returns the top level control. This is the first\r\n     * widget which is not a child control of any other widget.\r\n     *\r\n     * @return {qx.ui.core.Widget} The top control\r\n     */\r\n    _findTopControl() {\r\n      var obj = this;\r\n      while (obj) {\r\n        if (!obj.$$subparent) {\r\n          return obj;\r\n        }\r\n\r\n        obj = obj.$$subparent;\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return the ID (name) if this instance was a created as a child control of another widget.\r\n     *\r\n     * See the first parameter id in {@link qx.ui.core.Widget#_createChildControlImpl}\r\n     *\r\n     * @return {String|null} ID of the current widget or null if it was not created as a subcontrol\r\n     */\r\n    getSubcontrolId() {\r\n      return this.$$subcontrol || null;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LOWER LEVEL ACCESS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Computes the location of the content element in context of the document\r\n     * dimensions.\r\n     *\r\n     * Supported modes:\r\n     *\r\n     * * <code>margin</code>: Calculate from the margin box of the element\r\n     *   (bigger than the visual appearance: including margins of given element)\r\n     * * <code>box</code>: Calculates the offset box of the element (default,\r\n     *   uses the same size as visible)\r\n     * * <code>border</code>: Calculate the border box (useful to align to\r\n     *   border edges of two elements).\r\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute\r\n     *   positioned content).\r\n     * * <code>padding</code>: Calculate the padding box (relevant for\r\n     *   static/relative positioned content).\r\n     *\r\n     * @param mode {String?box} A supported option. See comment above.\r\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\r\n     *   <code>right</code> and <code>bottom</code> which contains the distance\r\n     *   of the element relative to the document.\r\n     */\r\n    getContentLocation(mode) {\r\n      var domEl = this.getContentElement().getDomElement();\r\n      return domEl ? qx.bom.element.Location.get(domEl, mode) : null;\r\n    },\r\n\r\n    /**\r\n     * Directly modifies the relative left position in relation\r\n     * to the parent element.\r\n     *\r\n     * Use with caution! This may be used for animations, drag&drop\r\n     * or other cases where high performance location manipulation\r\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\r\n     *\r\n     * @param value {Integer} Left position\r\n     */\r\n    setDomLeft(value) {\r\n      var domEl = this.getContentElement().getDomElement();\r\n      if (domEl) {\r\n        domEl.style.left = value + \"px\";\r\n      } else {\r\n        throw new Error(\"DOM element is not yet created!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Directly modifies the relative top position in relation\r\n     * to the parent element.\r\n     *\r\n     * Use with caution! This may be used for animations, drag&drop\r\n     * or other cases where high performance location manipulation\r\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\r\n     *\r\n     * @param value {Integer} Top position\r\n     */\r\n    setDomTop(value) {\r\n      var domEl = this.getContentElement().getDomElement();\r\n      if (domEl) {\r\n        domEl.style.top = value + \"px\";\r\n      } else {\r\n        throw new Error(\"DOM element is not yet created!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Directly modifies the relative left and top position in relation\r\n     * to the parent element.\r\n     *\r\n     * Use with caution! This may be used for animations, drag&drop\r\n     * or other cases where high performance location manipulation\r\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\r\n     *\r\n     * @param left {Integer} Left position\r\n     * @param top {Integer} Top position\r\n     */\r\n    setDomPosition(left, top) {\r\n      var domEl = this.getContentElement().getDomElement();\r\n      if (domEl) {\r\n        domEl.style.left = left + \"px\";\r\n        domEl.style.top = top + \"px\";\r\n      } else {\r\n        throw new Error(\"DOM element is not yet created!\");\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      ARIA attrs support\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Sets the string which labels this widget. This will be read out by screenreaders. Needed if there is no\r\n     * readable text/label in this widget which would automatically act as aria-label.\r\n     * @param label {String} Labelling Text\r\n     */\r\n    setAriaLabel(label) {\r\n      this.getContentElement().setAttribute(\"aria-label\", label);\r\n    },\r\n\r\n    /**\r\n     * Marks that this widget gets labelled by another widget. This will be read out by screenreaders as first\r\n     * information.\r\n     * Similiar to aria-label, difference being that the labelling widget is an different widget and multiple\r\n     * widgets can be added.\r\n     * @param labelWidgets {qx.ui.core.Widget[]} Indefinite Number of labelling Widgets\r\n     */\r\n    addAriaLabelledBy(...labelWidgets) {\r\n      this.__addAriaXBy(labelWidgets, \"aria-labelledby\");\r\n    },\r\n\r\n    /**\r\n     * Marks that this widget gets described by another widget. This will be read out by screenreaders as last\r\n     * information. Multiple Widgets possible.\r\n     * @param describingWidgets {qx.ui.core.Widget[]} Indefinite Number of describing Widgets\r\n     */\r\n    addAriaDescribedBy(...describingWidgets) {\r\n      this.__addAriaXBy(describingWidgets, \"aria-describedby\");\r\n    },\r\n\r\n    /**\r\n     * Sets either aria-labelledby or aria-describedby\r\n     * @param widgets {qx.ui.core.Widget[]} Indefinite Number of widgets\r\n     * @param ariaAttr {String} aria-labelledby | aria-describedby\r\n     */\r\n    __addAriaXBy(widgets, ariaAttr) {\r\n      if (![\"aria-labelledby\", \"aria-describedby\"].includes(ariaAttr)) {\r\n        throw new Error(\"Only aria-labelledby or aria-describedby allowed!\");\r\n      }\r\n      let idArr = [];\r\n      for (const widget of widgets) {\r\n        if (!(widget instanceof qx.ui.core.Widget)) {\r\n          throw new Error(\r\n            \"Given widget \" +\r\n              widget +\r\n              \" is not an instance of qx.ui.core.Widget!\"\r\n          );\r\n        }\r\n        const contentEl = widget.getContentElement();\r\n        let widgetId = contentEl.getAttribute(\"id\");\r\n        if (!widgetId) {\r\n          widgetId = `label-${widget.toHashCode()}`;\r\n          contentEl.setAttribute(\"id\", widgetId);\r\n        }\r\n        if (!idArr.includes(widgetId)) {\r\n          idArr.push(widgetId);\r\n        }\r\n      }\r\n      if (idArr.length === 0) {\r\n        return;\r\n      }\r\n      const idStr = idArr.join(\" \");\r\n      const contentEl = this.getContentElement();\r\n      let res = contentEl.getAttribute(ariaAttr);\r\n      res = res ? `${res} ${idStr}` : idStr;\r\n      contentEl.setAttribute(ariaAttr, res);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      ENHANCED DISPOSE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Removes this widget from its parent and disposes it.\r\n     *\r\n     * Please note that the widget is not disposed synchronously. The\r\n     * real dispose happens after the next queue flush.\r\n     *\r\n     */\r\n    destroy() {\r\n      if (this.$$disposed) {\r\n        return;\r\n      }\r\n\r\n      // We may be deferring disposing, but we can at least prevent\r\n      // listener handlers from being called. We don't know exactly\r\n      // what listeners have already been disposed at this point.\r\n      qx.event.Registration.removeAllListeners(this);\r\n\r\n      var parent = this.$$parent;\r\n      if (parent) {\r\n        parent._remove(this);\r\n      }\r\n\r\n      qx.ui.core.queue.Dispose.add(this);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      CLONE SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    clone() {\r\n      var clone = super.clone();\r\n\r\n      if (this.getChildren) {\r\n        var children = this.getChildren();\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n          clone.add(children[i].clone());\r\n        }\r\n      }\r\n\r\n      return clone;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    // Some dispose stuff is not needed in global shutdown, otherwise\r\n    // it just slows down things a bit, so do not do them.\r\n    if (!qx.core.ObjectRegistry.inShutDown) {\r\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\r\n        if (this.__toolTipTextListenerId) {\r\n          qx.locale.Manager.getInstance().removeListenerById(\r\n            this.__toolTipTextListenerId\r\n          );\r\n        }\r\n      }\r\n\r\n      // Remove widget pointer from DOM\r\n      var contentEl = this.getContentElement();\r\n      if (contentEl) {\r\n        contentEl.disconnectWidget(this);\r\n      }\r\n\r\n      // Clean up all child controls\r\n      this._disposeChildControls();\r\n\r\n      // Remove from ui queues\r\n      qx.ui.core.queue.Appearance.remove(this);\r\n      qx.ui.core.queue.Layout.remove(this);\r\n      qx.ui.core.queue.Visibility.remove(this);\r\n      qx.ui.core.queue.Widget.remove(this);\r\n    }\r\n\r\n    if (this.getContextMenu()) {\r\n      this.setContextMenu(null);\r\n    }\r\n\r\n    // pool decorators if not in global shutdown\r\n    if (!qx.core.ObjectRegistry.inShutDown) {\r\n      this.clearSeparators();\r\n      this.__separators = null;\r\n    } else {\r\n      this._disposeArray(\"__separators\");\r\n    }\r\n\r\n    // Clear children array\r\n    this._disposeArray(\"__widgetChildren\");\r\n\r\n    // Cleanup map of appearance states\r\n    this.__states = this.__childControls = null;\r\n\r\n    // Dispose layout manager and HTML elements\r\n    this._disposeObjects(\"__layoutManager\", \"__contentElement\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}