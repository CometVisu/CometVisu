{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "include",
    "locale",
    "MTranslation",
    "implement",
    "IDisposable",
    "construct",
    "__contentElement",
    "__createContentElement",
    "initFocusable",
    "initSelectable",
    "initNativeContextMenu",
    "events",
    "appear",
    "disappear",
    "createChildControl",
    "resize",
    "move",
    "syncAppearance",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "auxclick",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "dbltap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "roll",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "capture",
    "losecapture",
    "drop",
    "dragleave",
    "dragover",
    "drag",
    "dragstart",
    "dragend",
    "dragchange",
    "droprequest",
    "properties",
    "paddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "zIndex",
    "nullable",
    "event",
    "decorator",
    "backgroundColor",
    "textColor",
    "inheritable",
    "font",
    "dereference",
    "opacity",
    "cursor",
    "toolTip",
    "toolTipText",
    "toolTipIcon",
    "blockToolTip",
    "showToolTipWhenDisabled",
    "visibility",
    "enabled",
    "anonymous",
    "tabIndex",
    "focusable",
    "keepFocus",
    "keepActive",
    "draggable",
    "droppable",
    "selectable",
    "contextMenu",
    "nativeContextMenu",
    "appearance",
    "statics",
    "DEBUG",
    "UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR",
    "getWidgetByElement",
    "element",
    "considerAnonymousState",
    "widget",
    "$$qxObject",
    "getAnonymous",
    "parentNode",
    "e",
    "contains",
    "parent",
    "child",
    "getLayoutParent",
    "__separatorPool",
    "util",
    "ObjectPool",
    "members",
    "__initialAppearanceApplied",
    "__toolTipTextListenerId",
    "__layoutManager",
    "_getLayout",
    "_setLayout",
    "layout",
    "connectToWidget",
    "queue",
    "Layout",
    "add",
    "setLayoutParent",
    "$$parent",
    "content",
    "getContentElement",
    "$$disposed",
    "remove",
    "$$refreshInheritables",
    "Visibility",
    "_updateInsets",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "lang",
    "Object",
    "isEmpty",
    "inner",
    "size",
    "pixel",
    "contentStyles",
    "position",
    "margin",
    "keys",
    "length",
    "setStyles",
    "local",
    "hasLayoutChildren",
    "inset",
    "getInsets",
    "innerWidth",
    "right",
    "innerHeight",
    "bottom",
    "getDecorator",
    "decoratorPadding",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getPadding",
    "getPaddingTop",
    "getPaddingRight",
    "getPaddingBottom",
    "getPaddingLeft",
    "Error",
    "_findTopControl",
    "hasListener",
    "fireDataEvent",
    "getBounds",
    "__separators",
    "clearSeparators",
    "reg",
    "pool",
    "Widget",
    "i",
    "l",
    "poolObject",
    "renderSeparator",
    "separator",
    "bounds",
    "getObject",
    "set",
    "elem",
    "domEl",
    "getDomElement",
    "style",
    "push",
    "_computeSizeHint",
    "getWidth",
    "minWidth",
    "getMinWidth",
    "maxWidth",
    "getMaxWidth",
    "getHeight",
    "minHeight",
    "getMinHeight",
    "maxHeight",
    "getMaxHeight",
    "contentHint",
    "_getContentHint",
    "insets",
    "insetX",
    "insetY",
    "Infinity",
    "invalidateLayoutCache",
    "hint",
    "getSizeHint",
    "_getHeightForWidth",
    "contentWidth",
    "contentHeight",
    "hasHeightForWidth",
    "getHeightForWidth",
    "_getContentHeightForWidth",
    "getInnerSize",
    "computed",
    "fadeOut",
    "duration",
    "fadeIn",
    "_applyAnonymous",
    "value",
    "setAttribute",
    "removeAttribute",
    "show",
    "setVisibility",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "Manager",
    "flush",
    "offsetWidth",
    "el",
    "_createContentElement",
    "connectObject",
    "styles",
    "boxSizing",
    "root",
    "Inline",
    "html",
    "Element",
    "overflowX",
    "overflowY",
    "__widgetChildren",
    "getLayoutChildren",
    "children",
    "__emptyChildren",
    "layoutChildren",
    "hasUserBounds",
    "concat",
    "Array",
    "scheduleLayoutUpdate",
    "invalidateLayoutChildren",
    "invalidateChildrenCache",
    "getChildrenContainer",
    "_getChildren",
    "_indexOf",
    "indexOf",
    "_hasChildren",
    "addChildrenToQueue",
    "_add",
    "options",
    "__addHelper",
    "_addAt",
    "index",
    "ref",
    "setLayoutProperties",
    "insertBefore",
    "_addBefore",
    "before",
    "_addAfter",
    "after",
    "insertAfter",
    "_remove",
    "__removeHelper",
    "_removeAt",
    "removeAt",
    "_removeAll",
    "_afterAddChild",
    "_afterRemoveChild",
    "updateLayoutProperties",
    "releaseCapture",
    "isCapturing",
    "Registration",
    "getManager",
    "dispatcher",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "_applyPadding",
    "old",
    "name",
    "__updateContentPadding",
    "direction",
    "firstLow",
    "replace",
    "setStyle",
    "_applyDecorator",
    "getCssClassName",
    "removeClass",
    "addCssClass",
    "addClass",
    "_applyToolTipText",
    "addListener",
    "getToolTipText",
    "translate",
    "setToolTipText",
    "_applyTextColor",
    "_applyZIndex",
    "_applyVisibility",
    "_applyOpacity",
    "_applyCursor",
    "isSelectable",
    "Environment",
    "get",
    "_applyBackgroundColor",
    "color",
    "getBackgroundColor",
    "resolved",
    "Color",
    "_applyFont",
    "_onChangeTheme",
    "isDisposed",
    "updateAppearance",
    "getFont",
    "Type",
    "isString",
    "getTextColor",
    "__states",
    "$$stateChanges",
    "_forwardStates",
    "hasState",
    "state",
    "states",
    "addState",
    "Appearance",
    "forward",
    "controls",
    "__childControls",
    "control",
    "id",
    "removeState",
    "replaceState",
    "__appearanceSelector",
    "__updateSelector",
    "selector",
    "styler",
    "Property",
    "$$method",
    "setThemed",
    "unstyler",
    "resetThemed",
    "oldData",
    "styleFrom",
    "getAppearance",
    "obj",
    "$$subcontrol",
    "$$subparent",
    "reverse",
    "join",
    "newData",
    "prop",
    "undefined",
    "_applyAppearance",
    "checkAppearanceNeeds",
    "syncWidget",
    "jobs",
    "getEventTarget",
    "target",
    "getFocusTarget",
    "getEnabled",
    "getFocusable",
    "getFocusElement",
    "isTabable",
    "isFocusable",
    "_applyFocusable",
    "getTabIndex",
    "isNativelyFocusable",
    "_applyKeepFocus",
    "_applyKeepActive",
    "_applyTabIndex",
    "_applySelectable",
    "getCursor",
    "setSelectable",
    "_applyEnabled",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "_applyNativeContextMenu",
    "_applyContextMenu",
    "getOpener",
    "resetOpener",
    "removeListener",
    "_onContextMenuOpen",
    "_onBeforeContextMenuOpen",
    "setOpener",
    "getType",
    "getPointerType",
    "getContextMenu",
    "openAtPointer",
    "stop",
    "getData",
    "_onStopEvent",
    "stopPropagation",
    "_getDragDropCursor",
    "DragDropCursor",
    "isEnabled",
    "_onDragStart",
    "_onDrag",
    "_onDragEnd",
    "_onDragChange",
    "placeToPointer",
    "getApplicationRoot",
    "setGlobalCursor",
    "moveTo",
    "resetGlobalCursor",
    "action",
    "getCurrentAction",
    "setAction",
    "resetAction",
    "visualizeFocus",
    "visualizeBlur",
    "scrollChildIntoView",
    "alignX",
    "alignY",
    "direct",
    "isScheduled",
    "getChildren",
    "forEach",
    "sibling",
    "scrollChildIntoViewX",
    "scrollChildIntoViewY",
    "align",
    "tabFocus",
    "hasChildControl",
    "_getCreatedChildControls",
    "getChildControl",
    "notcreate",
    "_createChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_isChildControlVisible",
    "_releaseChildControl",
    "pos",
    "_createChildControlImpl",
    "substring",
    "exc",
    "message",
    "toString",
    "$$resyncNeeded",
    "hash",
    "_disposeChildControls",
    "destroy",
    "dispose",
    "getSubcontrolId",
    "getContentLocation",
    "bom",
    "Location",
    "setDomLeft",
    "setDomTop",
    "setDomPosition",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "labelWidgets",
    "__addAriaXBy",
    "addAriaDescribedBy",
    "describingWidgets",
    "widgets",
    "ariaAttr",
    "includes",
    "idArr",
    "contentEl",
    "widgetId",
    "getAttribute",
    "toHashCode",
    "idStr",
    "res",
    "removeAllListeners",
    "Dispose",
    "clone",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "removeListenerById",
    "disconnectWidget",
    "setContextMenu",
    "_disposeArray",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Widget.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n\n************************************************************************ */\n\n/**\n * This is the base class for all widgets.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#core/' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @use(qx.ui.core.EventHandler)\n * @use(qx.event.handler.DragDrop)\n * @asset(qx/static/blank.gif)\n *\n * @ignore(qx.ui.root.Inline)\n */\nqx.Class.define(\"qx.ui.core.Widget\", {\n  extend: qx.ui.core.LayoutItem,\n  include: [qx.locale.MTranslation],\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create basic element\n    this.__contentElement = this.__createContentElement();\n\n    // Initialize properties\n    this.initFocusable();\n    this.initSelectable();\n    this.initNativeContextMenu();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired after the widget appears on the screen.\n     */\n    appear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget disappears from the screen.\n     */\n    disappear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the creation of a child control. The passed data is the\n     * newly created child widget.\n     */\n    createChildControl: \"qx.event.type.Data\",\n\n    /**\n     * Fired on resize (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    resize: \"qx.event.type.Data\",\n\n    /**\n     * Fired on move (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    move: \"qx.event.type.Data\",\n\n    /**\n     * Fired after the appearance has been applied. This happens before the\n     * widget becomes visible, on state and appearance changes. The data field\n     * contains the state map. This can be used to react on state changes or to\n     * read properties set by the appearance.\n     */\n    syncAppearance: \"qx.event.type.Data\",\n\n    /** Fired if the mouse cursor moves over the widget.\n     *  The data property of the event contains the widget's computed location\n     *  and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    mousemove: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor enters the widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseover: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor leaves widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseout: \"qx.event.type.Mouse\",\n\n    /** Mouse button is pressed on the widget. */\n    mousedown: \"qx.event.type.Mouse\",\n\n    /** Mouse button is released on the widget. */\n    mouseup: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    click: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using a non primary button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    auxclick: \"qx.event.type.Mouse\",\n\n    /** Widget is double clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    dblclick: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using the right mouse button. */\n    contextmenu: \"qx.event.type.Mouse\",\n\n    /** Fired before the context menu is opened. */\n    beforeContextmenuOpen: \"qx.event.type.Data\",\n\n    /** Fired if the mouse wheel is used over the widget. */\n    mousewheel: \"qx.event.type.MouseWheel\",\n\n    /** Fired if a touch at the screen is started. */\n    touchstart: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen has ended. */\n    touchend: \"qx.event.type.Touch\",\n\n    /** Fired during a touch at the screen. */\n    touchmove: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen is canceled. */\n    touchcancel: \"qx.event.type.Touch\",\n\n    /** Fired when a pointer taps on the screen. */\n    tap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer holds on the screen. */\n    longtap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer taps twice on the screen. */\n    dbltap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer swipes over the screen. */\n    swipe: \"qx.event.type.Touch\",\n\n    /** Fired when two pointers performing a rotate gesture on the screen. */\n    rotate: \"qx.event.type.Rotate\",\n\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\n    pinch: \"qx.event.type.Pinch\",\n\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\n    track: \"qx.event.type.Track\",\n\n    /** Fired when an active pointer moves on the screen or the mouse wheel is used. */\n    roll: \"qx.event.type.Roll\",\n\n    /** Fired if a pointer (mouse/touch/pen) moves or changes any of it's values. */\n    pointermove: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) hovers the widget. */\n    pointerover: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) leaves this widget. */\n    pointerout: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if a pointer (mouse/touch/pen) button is pressed or\n     * a finger touches the widget.\n     */\n    pointerdown: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if all pointer (mouse/touch/pen) buttons are released or\n     * the finger is lifted from the widget.\n     */\n    pointerup: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) action is canceled. */\n    pointercancel: \"qx.event.type.Pointer\",\n\n    /** This event if fired if a keyboard key is released. */\n    keyup: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event if fired if a keyboard key is pressed down. This event is\n     * only fired once if the user keeps the key pressed for a while.\n     */\n    keydown: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired any time a key is pressed. It will be repeated if\n     * the user keeps the key pressed. The pressed key can be determined using\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\n     */\n    keypress: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired if the pressed key or keys result in a printable\n     * character. Since the character is not necessarily associated with a\n     * single physical key press, the event does not have a key identifier\n     * getter. This event gets repeated if the user keeps pressing the key(s).\n     *\n     * The unicode code of the pressed key can be read using\n     * {@link qx.event.type.KeyInput#getCharCode}.\n     */\n    keyinput: \"qx.event.type.KeyInput\",\n\n    /**\n     * The event is fired when the widget gets focused. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    focus: \"qx.event.type.Focus\",\n\n    /**\n     * The event is fired when the widget gets blurred. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    blur: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget receive the focus.\n     */\n    focusin: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget lost the focus.\n     */\n    focusout: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets active (receives keyboard events etc.)\n     */\n    activate: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets inactive\n     */\n    deactivate: \"qx.event.type.Focus\",\n\n    /**\n     * Fired if the widget becomes the capturing widget by a call to {@link #capture}.\n     */\n    capture: \"qx.event.type.Event\",\n\n    /**\n     * Fired if the widget looses the capturing mode by a call to\n     * {@link #releaseCapture} or a mouse click.\n     */\n    losecapture: \"qx.event.type.Event\",\n\n    /**\n     * Fired on the drop target when the drag&drop action is finished\n     * successfully. This event is normally used to transfer the data\n     * from the drag to the drop target.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drop: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when leaving it.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragleave: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when reaching it via the pointer.\n     * This event can be canceled if none of the incoming data types\n     * are supported.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragover: \"qx.event.type.Drag\",\n\n    /**\n     * Fired during the drag. Contains the current pointer coordinates\n     * using {@link qx.event.type.Drag#getDocumentLeft} and\n     * {@link qx.event.type.Drag#getDocumentTop}\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drag: \"qx.event.type.Drag\",\n\n    /**\n     * Initiate the drag-and-drop operation. This event is cancelable\n     * when the drag operation is currently not allowed/possible.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragstart: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on the source (drag) target every time a drag session was ended.\n     */\n    dragend: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drag configuration has been modified e.g. the user\n     * pressed a key which changed the selected action. This event will be\n     * fired on the draggable and the droppable element. In case of the\n     * droppable element, you can cancel the event and prevent a drop based on\n     * e.g. the current action.\n     */\n    dragchange: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drop was successfully done and the target widget\n     * is now asking for data. The listener should transfer the data,\n     * respecting the selected action, to the event. This can be done using\n     * the event's {@link qx.event.type.Drag#addData} method.\n     */\n    droprequest: \"qx.event.type.Drag\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (right) */\n    paddingRight: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (bottom) */\n    paddingBottom: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (left) */\n    paddingLeft: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    padding: {\n      group: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n      mode: \"shorthand\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLING PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The z-index property sets the stack order of an element. An element with\n     * greater stack order is always in front of another element with lower stack order.\n     */\n    zIndex: {\n      nullable: true,\n      init: 10,\n      apply: \"_applyZIndex\",\n      event: \"changeZIndex\",\n      check: \"Integer\",\n      themeable: true\n    },\n\n    /**\n     * The decorator property points to an object, which is responsible\n     * for drawing the widget's decoration, e.g. border, background or shadow.\n     *\n     * This can be a decorator object or a string pointing to a decorator\n     * defined in the decoration theme.\n     */\n    decorator: {\n      nullable: true,\n      init: null,\n      apply: \"_applyDecorator\",\n      event: \"changeDecorator\",\n      check: \"Decorator\",\n      themeable: true\n    },\n\n    /**\n     * The background color the rendered widget.\n     */\n    backgroundColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyBackgroundColor\",\n      event: \"changeBackgroundColor\",\n      themeable: true\n    },\n\n    /**\n     * The text color the rendered widget.\n     */\n    textColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyTextColor\",\n      event: \"changeTextColor\",\n      themeable: true,\n      inheritable: true\n    },\n\n    /**\n     * The widget's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font: {\n      nullable: true,\n      apply: \"_applyFont\",\n      check: \"Font\",\n      event: \"changeFont\",\n      themeable: true,\n      inheritable: true,\n      dereference: true\n    },\n\n    /**\n     * Mapping to native style property opacity.\n     *\n     * The uniform opacity setting to be applied across an entire object.\n     * Behaves like the new CSS-3 Property.\n     * Any values outside the range 0.0 (fully transparent) to 1.0\n     * (fully opaque) will be clamped to this range.\n     */\n    opacity: {\n      check: \"Number\",\n      apply: \"_applyOpacity\",\n      themeable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Mapping to native style property cursor.\n     *\n     * The name of the cursor to show when the pointer is over the widget.\n     * This is any valid CSS2 cursor name defined by W3C.\n     *\n     * The following values are possible crossbrowser:\n     * <ul><li>default</li>\n     * <li>crosshair</li>\n     * <li>pointer</li>\n     * <li>move</li>\n     * <li>n-resize</li>\n     * <li>ne-resize</li>\n     * <li>e-resize</li>\n     * <li>se-resize</li>\n     * <li>s-resize</li>\n     * <li>sw-resize</li>\n     * <li>w-resize</li>\n     * <li>nw-resize</li>\n     * <li>nesw-resize</li>\n     * <li>nwse-resize</li>\n     * <li>text</li>\n     * <li>wait</li>\n     * <li>help </li>\n     * </ul>\n     */\n    cursor: {\n      check: \"String\",\n      apply: \"_applyCursor\",\n      themeable: true,\n      inheritable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Sets the tooltip instance to use for this widget. If only the tooltip\n     * text and icon have to be set its better to use the {@link #toolTipText}\n     * and {@link #toolTipIcon} properties since they use a shared tooltip\n     * instance.\n     *\n     * If this property is set the {@link #toolTipText} and {@link #toolTipIcon}\n     * properties are ignored.\n     */\n    toolTip: {\n      check: \"qx.ui.tooltip.ToolTip\",\n      nullable: true\n    },\n\n    /**\n     * The text of the widget's tooltip. This text can contain HTML markup.\n     * The text is displayed using a shared tooltip instance. If the tooltip\n     * must be customized beyond the text and an icon {@link #toolTipIcon}, the\n     * {@link #toolTip} property has to be used\n     */\n    toolTipText: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\",\n      apply: \"_applyToolTipText\"\n    },\n\n    /**\n     * The icon URI of the widget's tooltip. This icon is displayed using a shared\n     * tooltip instance. If the tooltip must be customized beyond the tooltip text\n     * {@link #toolTipText} and the icon, the {@link #toolTip} property has to be\n     * used.\n     */\n    toolTipIcon: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\"\n    },\n\n    /**\n     * Controls if a tooltip should shown or not.\n     */\n    blockToolTip: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n     * Forces to show tooltip when widget is disabled.\n     */\n    showToolTipWhenDisabled: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MANAGEMENT PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Controls the visibility. Valid values are:\n     *\n     * <ul>\n     *   <li><b>visible</b>: Render the widget</li>\n     *   <li><b>hidden</b>: Hide the widget but don't relayout the widget's parent.</li>\n     *   <li><b>excluded</b>: Hide the widget and relayout the parent as if the\n     *     widget was not a child of its parent.</li>\n     * </ul>\n     */\n    visibility: {\n      check: [\"visible\", \"hidden\", \"excluded\"],\n      init: \"visible\",\n      apply: \"_applyVisibility\",\n      event: \"changeVisibility\"\n    },\n\n    /**\n     * Whether the widget is enabled. Disabled widgets are usually grayed out\n     * and do not process user created events. While in the disabled state most\n     * user input events are blocked. Only the {@link #pointerover} and\n     * {@link #pointerout} events will be dispatched.\n     */\n    enabled: {\n      init: true,\n      check: \"Boolean\",\n      inheritable: true,\n      apply: \"_applyEnabled\",\n      event: \"changeEnabled\"\n    },\n\n    /**\n     * Whether the widget is anonymous.\n     *\n     * Anonymous widgets are ignored in the event hierarchy. This is useful\n     * for combined widgets where the internal structure do not have a custom\n     * appearance with a different styling from the element around. This is\n     * especially true for widgets like checkboxes or buttons where the text\n     * or icon are handled synchronously for state changes to the outer widget.\n     */\n    anonymous: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyAnonymous\"\n    },\n\n    /**\n     * Defines the tab index of an widget. If widgets with tab indexes are part\n     * of the current focus root these elements are sorted in first priority. Afterwards\n     * the sorting continues by rendered position, zIndex and other criteria.\n     *\n     * Please note: The value must be between 1 and 32000.\n     */\n    tabIndex: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyTabIndex\"\n    },\n\n    /**\n     * Whether the widget is focusable e.g. rendering a focus border and visualize\n     * as active element.\n     *\n     * See also {@link #isTabable} which allows runtime checks for\n     * <code>isChecked</code> or other stuff to test whether the widget is\n     * reachable via the TAB key.\n     */\n    focusable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyFocusable\"\n    },\n\n    /**\n     * If this property is enabled, the widget and all of its child widgets\n     * will never get focused. The focus keeps at the currently\n     * focused widget.\n     *\n     * This only works for widgets which are not {@link #focusable}.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepFocus: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepFocus\"\n    },\n\n    /**\n     * If this property if enabled, the widget and all of its child widgets\n     * will never get activated. The activation keeps at the currently\n     * activated widget.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepActive: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepActive\"\n    },\n\n    /** Whether the widget acts as a source for drag&drop operations */\n    draggable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDraggable\"\n    },\n\n    /** Whether the widget acts as a target for drag&drop operations */\n    droppable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDroppable\"\n    },\n\n    /**\n     * Whether the widget contains content which may be selected by the user.\n     *\n     * If the value set to <code>true</code> the native browser selection can\n     * be used for text selection. But it is normally useful for\n     * forms fields, longer texts/documents, editors, etc.\n     */\n    selectable: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeSelectable\",\n      apply: \"_applySelectable\"\n    },\n\n    /**\n     * Whether to show a context menu and which one\n     */\n    contextMenu: {\n      check: \"qx.ui.menu.Menu\",\n      apply: \"_applyContextMenu\",\n      nullable: true,\n      event: \"changeContextMenu\"\n    },\n\n    /**\n     * Whether the native context menu should be enabled for this widget. To\n     * globally enable the native context menu set the {@link #nativeContextMenu}\n     * property of the root widget ({@link qx.ui.root.Abstract}) to\n     * <code>true</code>.\n     */\n    nativeContextMenu: {\n      check: \"Boolean\",\n      init: false,\n      themeable: true,\n      event: \"changeNativeContextMenu\",\n      apply: \"_applyNativeContextMenu\"\n    },\n\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this widget. This controls the styling of the element.\n     */\n    appearance: {\n      check: \"String\",\n      init: \"widget\",\n      apply: \"_applyAppearance\",\n      event: \"changeAppearance\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** Whether the widget should print out hints and debug messages */\n    DEBUG: false,\n\n    /** Whether to throw an error on focus/blur if the widget is unfocusable */\n    UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR: true,\n\n    /**\n     * Returns the widget, which contains the given DOM element.\n     *\n     * @param element {Element} The DOM element to search the widget for.\n     * @param considerAnonymousState {Boolean?false} If true, anonymous widget\n     *   will not be returned.\n     * @return {qx.ui.core.Widget} The widget containing the element.\n     */\n    getWidgetByElement(element, considerAnonymousState) {\n      while (element) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.core.Assert.assertTrue(\n            (!element.$$qxObjectHash && !element.$$qxObject) ||\n              (element.$$qxObject &&\n                element.$$qxObjectHash &&\n                element.$$qxObject.toHashCode() === element.$$qxObjectHash)\n          );\n        }\n        var widget = element.$$qxObject;\n\n        // check for anonymous widgets\n        if (widget) {\n          if (!considerAnonymousState || !widget.getAnonymous()) {\n            return widget;\n          }\n        }\n\n        // Fix for FF, which occasionally breaks (BUG#3525)\n        try {\n          element = element.parentNode;\n        } catch (e) {\n          return null;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Whether the \"parent\" widget contains the \"child\" widget.\n     *\n     * @param parent {qx.ui.core.Widget} The parent widget\n     * @param child {qx.ui.core.Widget} The child widget\n     * @return {Boolean} Whether one of the \"child\"'s parents is \"parent\"\n     */\n    contains(parent, child) {\n      while (child) {\n        child = child.getLayoutParent();\n\n        if (parent == child) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /** @type {Map} Contains all pooled separators for reuse */\n    __separatorPool: new qx.util.ObjectPool()\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __contentElement: null,\n    __initialAppearanceApplied: null,\n    __toolTipTextListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {qx.ui.layout.Abstract} The connected layout manager\n     */\n    __layoutManager: null,\n\n    // overridden\n    _getLayout() {\n      return this.__layoutManager;\n    },\n\n    /**\n     * Set a layout manager for the widget. A a layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    _setLayout(layout) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (layout) {\n          this.assertInstance(layout, qx.ui.layout.Abstract);\n        }\n      }\n\n      if (this.__layoutManager) {\n        this.__layoutManager.connectToWidget(null);\n      }\n\n      if (layout) {\n        layout.connectToWidget(this);\n      }\n\n      this.__layoutManager = layout;\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      if (this.$$parent === parent) {\n        return;\n      }\n\n      var content = this.getContentElement();\n\n      if (this.$$parent && !this.$$parent.$$disposed) {\n        this.$$parent.getContentElement().remove(content);\n      }\n\n      this.$$parent = parent || null;\n\n      if (parent && !parent.$$disposed) {\n        this.$$parent.getContentElement().add(content);\n      }\n\n      // Update inheritable properties\n      this.$$refreshInheritables();\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    /** @type {Boolean} Whether insets have changed and must be updated */\n    _updateInsets: null,\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var changes = super.renderLayout(left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return null;\n      }\n\n      if (qx.lang.Object.isEmpty(changes) && !this._updateInsets) {\n        return null;\n      }\n\n      var content = this.getContentElement();\n      var inner = changes.size || this._updateInsets;\n      var pixel = \"px\";\n\n      var contentStyles = {};\n      // Move content to new position\n      if (changes.position) {\n        contentStyles.left = left + pixel;\n        contentStyles.top = top + pixel;\n      }\n\n      if (inner || changes.margin) {\n        contentStyles.width = width + pixel;\n        contentStyles.height = height + pixel;\n      }\n\n      if (Object.keys(contentStyles).length > 0) {\n        content.setStyles(contentStyles);\n      }\n\n      if (inner || changes.local || changes.margin) {\n        if (this.__layoutManager && this.hasLayoutChildren()) {\n          var inset = this.getInsets();\n          var innerWidth = width - inset.left - inset.right;\n          var innerHeight = height - inset.top - inset.bottom;\n\n          var decorator = this.getDecorator();\n          var decoratorPadding = { left: 0, right: 0, top: 0, bottom: 0 };\n          if (decorator) {\n            decorator =\n              qx.theme.manager.Decoration.getInstance().resolve(decorator);\n            decoratorPadding = decorator.getPadding();\n          }\n\n          var padding = {\n            top: this.getPaddingTop() + decoratorPadding.top,\n            right: this.getPaddingRight() + decoratorPadding.right,\n            bottom: this.getPaddingBottom() + decoratorPadding.bottom,\n            left: this.getPaddingLeft() + decoratorPadding.left\n          };\n\n          this.__layoutManager.renderLayout(innerWidth, innerHeight, padding);\n        } else if (this.hasLayoutChildren()) {\n          throw new Error(\n            \"At least one child in control \" +\n              this._findTopControl() +\n              \" requires a layout, but no one was defined!\"\n          );\n        }\n      }\n\n      // Fire events\n      if (changes.position && this.hasListener(\"move\")) {\n        this.fireDataEvent(\"move\", this.getBounds());\n      }\n\n      if (changes.size && this.hasListener(\"resize\")) {\n        this.fireDataEvent(\"resize\", this.getBounds());\n      }\n\n      // Cleanup flags\n      delete this._updateInsets;\n\n      return changes;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SEPARATOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    __separators: null,\n\n    // overridden\n    clearSeparators() {\n      var reg = this.__separators;\n      if (!reg) {\n        return;\n      }\n\n      var pool = qx.ui.core.Widget.__separatorPool;\n      var content = this.getContentElement();\n      var widget;\n\n      for (var i = 0, l = reg.length; i < l; i++) {\n        widget = reg[i];\n        pool.poolObject(widget);\n        content.remove(widget.getContentElement());\n      }\n\n      // Clear registry\n      reg.length = 0;\n    },\n\n    // overridden\n    renderSeparator(separator, bounds) {\n      // Insert\n      var widget = qx.ui.core.Widget.__separatorPool.getObject(\n        qx.ui.core.Widget\n      );\n\n      widget.set({\n        decorator: separator\n      });\n\n      var elem = widget.getContentElement();\n      this.getContentElement().add(elem);\n\n      // Move\n      var domEl = elem.getDomElement();\n      // use the DOM element because the cache of the qx.html.Element could be\n      // wrong due to changes made by the decorators which work on the DOM element too\n      if (domEl) {\n        domEl.style.top = bounds.top + \"px\";\n        domEl.style.left = bounds.left + \"px\";\n        domEl.style.width = bounds.width + \"px\";\n        domEl.style.height = bounds.height + \"px\";\n      } else {\n        elem.setStyles({\n          left: bounds.left + \"px\",\n          top: bounds.top + \"px\",\n          width: bounds.width + \"px\",\n          height: bounds.height + \"px\"\n        });\n      }\n\n      // Remember element\n      if (!this.__separators) {\n        this.__separators = [];\n      }\n      this.__separators.push(widget);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE HINTS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _computeSizeHint() {\n      // Start with the user defined values\n      var width = this.getWidth();\n      var minWidth = this.getMinWidth();\n      var maxWidth = this.getMaxWidth();\n\n      var height = this.getHeight();\n      var minHeight = this.getMinHeight();\n      var maxHeight = this.getMaxHeight();\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (minWidth !== null && maxWidth !== null) {\n          this.assert(\n            minWidth <= maxWidth,\n            \"minWidth is larger than maxWidth!\"\n          );\n        }\n        if (minHeight !== null && maxHeight !== null) {\n          this.assert(\n            minHeight <= maxHeight,\n            \"minHeight is larger than maxHeight!\"\n          );\n        }\n      }\n\n      // Ask content\n      var contentHint = this._getContentHint();\n\n      var insets = this.getInsets();\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      if (width == null) {\n        width = contentHint.width + insetX;\n      }\n\n      if (height == null) {\n        height = contentHint.height + insetY;\n      }\n\n      if (minWidth == null) {\n        minWidth = insetX;\n\n        if (contentHint.minWidth != null) {\n          minWidth += contentHint.minWidth;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (minWidth > maxWidth && maxWidth != null) {\n            minWidth = maxWidth;\n          }\n        }\n      }\n\n      if (minHeight == null) {\n        minHeight = insetY;\n\n        if (contentHint.minHeight != null) {\n          minHeight += contentHint.minHeight;\n          // do not apply bigger min height than max height [BUG #5008]\n          if (minHeight > maxHeight && maxHeight != null) {\n            minHeight = maxHeight;\n          }\n        }\n      }\n\n      if (maxWidth == null) {\n        if (contentHint.maxWidth == null) {\n          maxWidth = Infinity;\n        } else {\n          maxWidth = contentHint.maxWidth + insetX;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxWidth < minWidth && minWidth != null) {\n            maxWidth = minWidth;\n          }\n        }\n      }\n\n      if (maxHeight == null) {\n        if (contentHint.maxHeight == null) {\n          maxHeight = Infinity;\n        } else {\n          maxHeight = contentHint.maxHeight + insetY;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxHeight < minHeight && minHeight != null) {\n            maxHeight = minHeight;\n          }\n        }\n      }\n\n      // Build size hint and return\n      return {\n        width: width,\n        minWidth: minWidth,\n        maxWidth: maxWidth,\n        height: height,\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      };\n    },\n\n    // overridden\n    invalidateLayoutCache() {\n      super.invalidateLayoutCache();\n\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateLayoutCache();\n      }\n    },\n\n    /**\n     * Returns the recommended/natural dimensions of the widget's content.\n     *\n     * For labels and images this may be their natural size when defined without\n     * any dimensions. For containers this may be the recommended size of the\n     * underlying layout manager.\n     *\n     * Developer note: This can be overwritten by the derived classes to allow\n     * a custom handling here.\n     *\n     * @return {Map}\n     */\n    _getContentHint() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        if (this.hasLayoutChildren()) {\n          var hint = layout.getSizeHint();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            var msg =\n              \"The layout of the widget\" +\n              this.toString() +\n              \" returned an invalid size hint!\";\n            this.assertInteger(hint.width, \"Wrong 'left' argument. \" + msg);\n            this.assertInteger(hint.height, \"Wrong 'top' argument. \" + msg);\n          }\n\n          return hint;\n        } else {\n          return {\n            width: 0,\n            height: 0\n          };\n        }\n      } else {\n        return {\n          width: 100,\n          height: 50\n        };\n      }\n    },\n\n    // overridden\n    _getHeightForWidth(width) {\n      // Prepare insets\n      var insets = this.getInsets();\n\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      // Compute content width\n      var contentWidth = width - insetX;\n\n      // Compute height\n      var contentHeight = 0;\n      var layout = this._getLayout();\n      if (layout && layout.hasHeightForWidth()) {\n        contentHeight = layout.getHeightForWidth(contentWidth);\n      } else {\n        contentHeight = this._getContentHeightForWidth(contentWidth);\n      }\n\n      // Computed box height\n      var height = contentHeight + insetY;\n\n      return height;\n    },\n\n    /**\n     * Returns the computed height for the given width.\n     *\n     * @abstract\n     * @param width {Integer} Incoming width (as limitation)\n     * @return {Integer} Computed height while respecting the given width.\n     */\n    _getContentHeightForWidth(width) {\n      throw new Error(\"Abstract method call: _getContentHeightForWidth()!\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INSET CALCULATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the sum of the widget's padding and border width.\n     *\n     * @return {Map} Contains the keys <code>top</code>, <code>right</code>,\n     *   <code>bottom</code> and <code>left</code>. All values are integers.\n     */\n    getInsets() {\n      var top = this.getPaddingTop();\n      var right = this.getPaddingRight();\n      var bottom = this.getPaddingBottom();\n      var left = this.getPaddingLeft();\n      if (this.getDecorator()) {\n        var decorator = qx.theme.manager.Decoration.getInstance().resolve(\n          this.getDecorator()\n        );\n\n        var inset = decorator.getInsets();\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.assertNumber(\n            inset.top,\n            \"Invalid top decorator inset detected: \" + inset.top\n          );\n\n          this.assertNumber(\n            inset.right,\n            \"Invalid right decorator inset detected: \" + inset.right\n          );\n\n          this.assertNumber(\n            inset.bottom,\n            \"Invalid bottom decorator inset detected: \" + inset.bottom\n          );\n\n          this.assertNumber(\n            inset.left,\n            \"Invalid left decorator inset detected: \" + inset.left\n          );\n        }\n\n        top += inset.top;\n        right += inset.right;\n        bottom += inset.bottom;\n        left += inset.left;\n      }\n\n      return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPUTED LAYOUT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget's computed inner size as available\n     * through the layout process.\n     *\n     * This function is guaranteed to return a correct value\n     * during a {@link #resize} or {@link #move} event dispatch.\n     *\n     * @return {Map} The widget inner dimension in pixel (if the layout is\n     *    valid). Contains the keys <code>width</code> and <code>height</code>.\n     */\n    getInnerSize() {\n      var computed = this.getBounds();\n      if (!computed) {\n        return null;\n      }\n\n      // Return map data\n      var insets = this.getInsets();\n      return {\n        width: computed.width - insets.left - insets.right,\n        height: computed.height - insets.top - insets.bottom\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fade out this widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut(duration) {\n      return this.getContentElement().fadeOut(duration);\n    },\n\n    /**\n     * Fade in the widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn(duration) {\n      return this.getContentElement().fadeIn(duration);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyAnonymous(value) {\n      if (value) {\n        this.getContentElement().setAttribute(\"qxanonymous\", \"true\");\n      } else {\n        this.getContentElement().removeAttribute(\"qxanonymous\");\n      }\n    },\n\n    /**\n     * Make this widget visible.\n     *\n     */\n    show() {\n      this.setVisibility(\"visible\");\n    },\n\n    /**\n     * Hide this widget.\n     *\n     */\n    hide() {\n      this.setVisibility(\"hidden\");\n    },\n\n    /**\n     * Hide this widget and exclude it from the underlying layout.\n     *\n     */\n    exclude() {\n      this.setVisibility(\"excluded\");\n    },\n\n    /**\n     * Whether the widget is locally visible.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\n     */\n    isVisible() {\n      return this.getVisibility() === \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally hidden.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\n     */\n    isHidden() {\n      return this.getVisibility() !== \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally excluded.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\n     */\n    isExcluded() {\n      return this.getVisibility() === \"excluded\";\n    },\n\n    /**\n     * Detects if the widget and all its parents are visible.\n     *\n     * WARNING: Please use this method with caution because it flushes the\n     * internal queues which might be an expensive operation.\n     *\n     * @return {Boolean} true, if the widget is currently on the screen\n     */\n    isSeeable() {\n      // Flush the queues because to detect if the widget ins visible, the\n      // queues need to be flushed (see bug #5254)\n      qx.ui.core.queue.Manager.flush();\n      // if the element is already rendered, a check for the offsetWidth is enough\n      var element = this.getContentElement().getDomElement();\n      if (element) {\n        // will also be 0 if the parents are not visible\n        return element.offsetWidth > 0;\n      }\n      // if no element is available, it can not be visible\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CREATION OF HTML ELEMENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create the widget's content HTML element.\n     *\n     * @return {qx.html.Element} The content HTML element\n     */\n    __createContentElement() {\n      var el = this._createContentElement();\n      el.connectObject(this);\n\n      // make sure to allow all pointer events\n      el.setStyles({ \"touch-action\": \"none\", \"-ms-touch-action\": \"none\" });\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        el.setAttribute(\"qxClass\", this.classname);\n      }\n\n      var styles = {\n        zIndex: 10,\n        boxSizing: \"border-box\"\n      };\n\n      if (!qx.ui.root.Inline || !(this instanceof qx.ui.root.Inline)) {\n        styles.position = \"absolute\";\n      }\n\n      el.setStyles(styles);\n\n      return el;\n    },\n\n    /**\n     * Creates the content element. The style properties\n     * position and zIndex are modified from the Widget\n     * core.\n     *\n     * This function may be overridden to customize a class\n     * content.\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    _createContentElement() {\n      return new qx.html.Element(\"div\", {\n        overflowX: \"hidden\",\n        overflowY: \"hidden\"\n      });\n    },\n\n    /**\n     * Returns the element wrapper of the widget's content element.\n     * This method exposes widget internal and must be used with caution!\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    getContentElement() {\n      return this.__contentElement;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {qx.ui.core.LayoutItem[]} List of all child widgets */\n    __widgetChildren: null,\n\n    /**\n     * Returns all children, which are layout relevant. This excludes all widgets,\n     * which have a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>.\n     *\n     * @internal\n     * @return {qx.ui.core.Widget[]} All layout relevant children.\n     */\n    getLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return this.__emptyChildren;\n      }\n\n      var layoutChildren;\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        if (child.hasUserBounds() || child.isExcluded()) {\n          if (layoutChildren == null) {\n            layoutChildren = children.concat();\n          }\n\n          qx.lang.Array.remove(layoutChildren, child);\n        }\n      }\n\n      return layoutChildren || children;\n    },\n\n    /**\n     * Marks the layout of this widget as invalid and triggers a layout update.\n     * This is a shortcut for <code>qx.ui.core.queue.Layout.add(this);</code>.\n     */\n    scheduleLayoutUpdate() {\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Resets the cache for children which should be laid out.\n     */\n    invalidateLayoutChildren() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        layout.invalidateChildrenCache();\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Returns whether the layout has children, which are layout relevant. This\n     * excludes all widgets, which have a {@link qx.ui.core.Widget#visibility}\n     * value of <code>exclude</code>.\n     *\n     * @return {Boolean} Whether the layout has layout relevant children\n     */\n    hasLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return false;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        if (!child.hasUserBounds() && !child.isExcluded()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns the widget which contains the children and\n     * is relevant for laying them out. This is from the user point of\n     * view and may not be identical to the technical structure.\n     *\n     * @return {qx.ui.core.Widget} Widget which contains the children.\n     */\n    getChildrenContainer() {\n      return this;\n    },\n\n    /**\n     * @type {Array} Placeholder for children list in empty widgets.\n     *     Mainly to keep instance number low.\n     *\n     * @lint ignoreReferenceField(__emptyChildren)\n     */\n    __emptyChildren: [],\n\n    /**\n     * Returns the children list\n     *\n     * @return {qx.ui.core.LayoutItem[]} The children array (Arrays are\n     *   reference types, so please do not modify it in-place).\n     */\n    _getChildren() {\n      return this.__widgetChildren || this.__emptyChildren;\n    },\n\n    /**\n     * Returns the index position of the given widget if it is\n     * a child widget. Otherwise it returns <code>-1</code>.\n     *\n     * @param child {qx.ui.core.Widget} the widget to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given widget is no child of this layout.\n     */\n    _indexOf(child) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return -1;\n      }\n\n      return children.indexOf(child);\n    },\n\n    /**\n     * Whether the widget contains children.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\n     */\n    _hasChildren() {\n      var children = this.__widgetChildren;\n      return children != null && !!children[0];\n    },\n\n    /**\n     * Recursively adds all children to the given queue\n     *\n     * @param queue {Array} The queue to add widgets to\n     */\n    addChildrenToQueue(queue) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        queue.push(child);\n\n        child.addChildrenToQueue(queue);\n      }\n    },\n\n    /**\n     * Adds a new child widget.\n     *\n     * The supported keys of the layout options map depend on the layout manager\n     * used to position the widget. The options are documented in the class\n     * documentation of each layout manager {@link qx.ui.layout}.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to add.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _add(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem.constructor,\n          \"'Child' must be an instance of qx.ui.core.LayoutItem!\"\n        );\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      if (this.__widgetChildren) {\n        this.__widgetChildren.push(child);\n      } else {\n        this.__widgetChildren = [child];\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a child widget at the specified index\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param index {Integer} Index, at which the widget will be inserted. If no\n     *   widget exists at the given index, the new widget gets appended to the\n     *   current list of children.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAt(child, index, options) {\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      var ref = this.__widgetChildren[index];\n\n      if (ref === child) {\n        child.setLayoutProperties(options);\n      }\n\n      if (ref) {\n        qx.lang.Array.insertBefore(this.__widgetChildren, child, ref);\n      } else {\n        this.__widgetChildren.push(child);\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget before another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param before {qx.ui.core.LayoutItem} widget before the new widget will be inserted.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addBefore(child, before, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          before,\n          this._getChildren(),\n          \"The 'before' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == before) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertBefore(this.__widgetChildren, child, before);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget after another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param after {qx.ui.core.LayoutItem} widget, after which the new widget will\n     *   be inserted\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAfter(child, after, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          after,\n          this._getChildren(),\n          \"The 'after' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == after) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertAfter(this.__widgetChildren, child, after);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Remove the given child widget.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to remove\n     */\n    _remove(child) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      qx.lang.Array.remove(this.__widgetChildren, child);\n      this.__removeHelper(child);\n    },\n\n    /**\n     * Remove the widget at the specified index.\n     *\n     * @param index {Integer} Index of the widget to remove.\n     * @return {qx.ui.core.LayoutItem} The removed item.\n     */\n    _removeAt(index) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      var child = this.__widgetChildren[index];\n\n      qx.lang.Array.removeAt(this.__widgetChildren, index);\n      this.__removeHelper(child);\n\n      return child;\n    },\n\n    /**\n     * Remove all children.\n     *\n     * @return {Array} An array containing the removed children.\n     */\n    _removeAll() {\n      if (!this.__widgetChildren) {\n        return [];\n      }\n\n      // Working on a copy to make it possible to clear the\n      // internal array before calling setLayoutParent()\n      var children = this.__widgetChildren.concat();\n      this.__widgetChildren.length = 0;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        this.__removeHelper(children[i]);\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n\n      return children;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - TEMPLATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method gets called each time after a child widget was added and can\n     * be overridden to get notified about child adds.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The added child.\n     */\n    _afterAddChild: null,\n\n    /**\n     * This method gets called each time after a child widget was removed and\n     * can be overridden to get notified about child removes.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The removed child.\n     */\n    _afterRemoveChild: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Convenience function to add a child widget. It will insert the child to\n     * the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to add.\n     * @param options {Map|null} Optional layout data for the widget.\n     */\n    __addHelper(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem,\n          \"Invalid widget to add: \" + child\n        );\n\n        this.assertNotIdentical(\n          child,\n          this,\n          \"Could not add widget to itself: \" + child\n        );\n\n        if (options != null) {\n          this.assertType(options, \"object\", \"Invalid layout data: \" + options);\n        }\n      }\n\n      // Remove from old parent\n      var parent = child.getLayoutParent();\n      if (parent && parent != this) {\n        parent._remove(child);\n      }\n\n      // Remember parent\n      child.setLayoutParent(this);\n\n      // Import options: This call will\n      //  - clear the layout's children cache as well and\n      //  - add its parent (this widget) to the layout queue\n      if (options) {\n        child.setLayoutProperties(options);\n      } else {\n        this.updateLayoutProperties();\n      }\n\n      // call the template method\n      if (this._afterAddChild) {\n        this._afterAddChild(child);\n      }\n    },\n\n    /**\n     * Convenience function to remove a child widget. It will remove it\n     * from the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to remove.\n     */\n    __removeHelper(child) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertNotUndefined(child);\n      }\n\n      if (child.getLayoutParent() !== this) {\n        throw new Error(\n          \"Remove Error: \" + child + \" is not a child of this widget!\"\n        );\n      }\n\n      // Clear parent connection\n      child.setLayoutParent(null);\n\n      // clear the layout's children cache\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateChildrenCache();\n      }\n\n      // Add to layout queue\n      qx.ui.core.queue.Layout.add(this);\n\n      // call the template method\n      if (this._afterRemoveChild) {\n        this._afterRemoveChild(child);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enables pointer event capturing. All pointer events will dispatched on this\n     * widget until capturing is disabled using {@link #releaseCapture} or a\n     * pointer button is clicked. If the widgets becomes the capturing widget the\n     * {@link #capture} event is fired. Once it loses capture mode the\n     * {@link #losecapture} event is fired.\n     *\n     * @param capture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(capture) {\n      this.getContentElement().capture(capture);\n    },\n\n    /**\n     * Disables pointer capture mode enabled by {@link #capture}.\n     */\n    releaseCapture() {\n      this.getContentElement().releaseCapture();\n    },\n\n    /**\n     * Checks if pointer event capturing is enabled for this widget.\n     *\n     * @return {Boolean} <code>true</code> if capturing is active\n     */\n    isCapturing() {\n      var el = this.getContentElement().getDomElement();\n      if (!el) {\n        return false;\n      }\n      var manager = qx.event.Registration.getManager(el);\n      var dispatcher = manager.getDispatcher(qx.event.dispatch.MouseCapture);\n      return el == dispatcher.getCaptureElement();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPadding(value, old, name) {\n      this._updateInsets = true;\n      qx.ui.core.queue.Layout.add(this);\n\n      this.__updateContentPadding(name, value);\n    },\n\n    /**\n     * Helper to updated the css padding of the content element considering the\n     * padding of the decorator.\n     * @param style {String} The name of the css padding property e.g. <code>paddingTop</code>\n     * @param value {Number} The value to set.\n     */\n    __updateContentPadding(style, value) {\n      var content = this.getContentElement();\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (decorator) {\n        var direction = qx.Bootstrap.firstLow(style.replace(\"padding\", \"\"));\n        value += decorator.getPadding()[direction] || 0;\n      }\n      content.setStyle(style, value + \"px\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DECORATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyDecorator(value, old) {\n      var content = this.getContentElement();\n\n      if (old) {\n        old = qx.theme.manager.Decoration.getInstance().getCssClassName(old);\n        content.removeClass(old);\n      }\n\n      if (value) {\n        value = qx.theme.manager.Decoration.getInstance().addCssClass(value);\n        content.addClass(value);\n      }\n      if (value || old) {\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyToolTipText(value, old) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          return;\n        }\n        var manager = qx.locale.Manager.getInstance();\n        this.__toolTipTextListenerId = manager.addListener(\n          \"changeLocale\",\n          () => {\n            var toolTipText = this.getToolTipText();\n            if (toolTipText && toolTipText.translate) {\n              this.setToolTipText(toolTipText.translate());\n            }\n          }\n        );\n      }\n    },\n\n    // property apply\n    _applyTextColor(value, old) {\n      // empty template\n    }, // property apply\n    _applyZIndex(value, old) {\n      this.getContentElement().setStyle(\"zIndex\", value == null ? 0 : value);\n    }, // property apply\n    _applyVisibility(value, old) {\n      var content = this.getContentElement();\n      if (value === \"visible\") {\n        content.show();\n      } else {\n        content.hide();\n      } // only force a layout update if visibility change from/to \"exclude\"\n      var parent = this.$$parent;\n      if (\n        parent &&\n        (old == null ||\n          value == null ||\n          old === \"excluded\" ||\n          value === \"excluded\")\n      ) {\n        parent.invalidateLayoutChildren();\n      }\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    // property apply\n    _applyOpacity(value, old) {\n      this.getContentElement().setStyle(\"opacity\", value == 1 ? null : value);\n    },\n\n    // property apply\n    _applyCursor(value, old) {\n      if (value == null && !this.isSelectable()) {\n        value = \"default\";\n      }\n\n      // In Opera the cursor must be set directly.\n      // http://bugzilla.qooxdoo.org/show_bug.cgi?id=1729\n      this.getContentElement().setStyle(\n        \"cursor\",\n        value,\n        qx.core.Environment.get(\"engine.name\") == \"opera\"\n      );\n    },\n\n    // property apply\n    _applyBackgroundColor(value, old) {\n      var color = this.getBackgroundColor();\n      var content = this.getContentElement();\n\n      var resolved = qx.theme.manager.Color.getInstance().resolve(color);\n      content.setStyle(\"backgroundColor\", resolved);\n    },\n\n    // property apply\n    _applyFont(value, old) {\n      // empty template\n    }, // ---------------------------------------------------------------------------\n    // DYNAMIC THEME SWITCH SUPPORT\n    // ---------------------------------------------------------------------------\n    // overridden\n    _onChangeTheme() {\n      if (this.isDisposed()) {\n        return;\n      }\n      super._onChangeTheme(); // update the appearance\n      this.updateAppearance(); // DECORATOR //\n      var value = this.getDecorator();\n      this._applyDecorator(null, value);\n      this._applyDecorator(value); // FONT //\n      value = this.getFont();\n      if (qx.lang.Type.isString(value)) {\n        this._applyFont(value, value);\n      }\n\n      // TEXT COLOR //\n      value = this.getTextColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyTextColor(value, value);\n      }\n\n      // BACKGROUND COLOR //\n      value = this.getBackgroundColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyBackgroundColor(value, value);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} The current widget states */\n    __states: null,\n\n    /** @type {Boolean} Whether the widget has state changes which are not yet queued */\n    $$stateChanges: null,\n\n    /** @type {Map} Can be overridden to forward states to the child controls. */\n    _forwardStates: null,\n\n    /**\n     * Returns whether a state is set.\n     *\n     * @param state {String} the state to check.\n     * @return {Boolean} whether the state is set.\n     */\n    hasState(state) {\n      var states = this.__states;\n      return !!states && !!states[state];\n    },\n\n    /**\n     * Sets a state.\n     *\n     * @param state {String} The state to add\n     */\n    addState(state) {\n      // Dynamically create state map\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (states[state]) {\n        return;\n      }\n\n      // Add state and queue\n      this.__states[state] = true;\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        var control;\n        for (var id in controls) {\n          control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            controls[id].addState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Clears a state.\n     *\n     * @param state {String} the state to clear.\n     */\n    removeState(state) {\n      // Check for existing state\n      var states = this.__states;\n      if (!states || !states[state]) {\n        return;\n      }\n\n      // Clear state and queue\n      delete this.__states[state];\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.removeState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Replaces the first state with the second one.\n     *\n     * This method is ideal for state transitions e.g. normal => selected.\n     *\n     * @param old {String} Previous state\n     * @param value {String} New state\n     */\n    replaceState(old, value) {\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (!states[value]) {\n        states[value] = true;\n      }\n\n      if (states[old]) {\n        delete states[old];\n      }\n\n      if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[value] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.replaceState(old, value);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPEARANCE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {String} The currently compiled selector to lookup the matching appearance */\n    __appearanceSelector: null,\n\n    /** @type {Boolean} Whether the selectors needs to be recomputed before updating appearance */\n    __updateSelector: null,\n\n    /**\n     * Renders the appearance using the current widget states.\n     *\n     * Used exclusively by {qx.ui.core.queue.Appearance}.\n     */\n    syncAppearance() {\n      var states = this.__states;\n      var selector = this.__appearanceSelector;\n      var manager = qx.theme.manager.Appearance.getInstance();\n\n      // Cache deep accessor\n      var styler = qx.core.Property.$$method.setThemed;\n      var unstyler = qx.core.Property.$$method.resetThemed;\n\n      // Check for requested selector update\n      if (this.__updateSelector) {\n        // Clear flag\n        delete this.__updateSelector;\n\n        // Check if the selector was created previously\n        if (selector) {\n          // Query old selector\n          var oldData = manager.styleFrom(\n            selector,\n            states,\n            null,\n            this.getAppearance()\n          );\n\n          // Clear current selector (to force recompute)\n          selector = null;\n        }\n      }\n\n      // Build selector\n      if (!selector) {\n        var obj = this;\n        var id = [];\n\n        do {\n          id.push(obj.$$subcontrol || obj.getAppearance());\n        } while ((obj = obj.$$subparent));\n\n        // Combine parent control IDs, add top level appearance, filter result\n        // to not include positioning information anymore (e.g. #3)\n        selector = id\n          .reverse()\n          .join(\"/\")\n          .replace(/#[0-9]+/g, \"\");\n        this.__appearanceSelector = selector;\n      }\n\n      // Query current selector\n      var newData = manager.styleFrom(\n        selector,\n        states,\n        null,\n        this.getAppearance()\n      );\n\n      if (newData) {\n        if (oldData) {\n          for (var prop in oldData) {\n            if (newData[prop] === undefined) {\n              this[unstyler[prop]]();\n            }\n          }\n        }\n\n        // Check property availability of new data\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          for (var prop in newData) {\n            if (!this[styler[prop]]) {\n              throw new Error(\n                this.classname +\n                  ' has no themeable property \"' +\n                  prop +\n                  '\" while styling ' +\n                  selector\n              );\n            }\n          }\n        }\n\n        // Apply new data\n        for (var prop in newData) {\n          newData[prop] === undefined\n            ? this[unstyler[prop]]()\n            : this[styler[prop]](newData[prop]);\n        }\n      } else if (oldData) {\n        // Clear old data\n        for (var prop in oldData) {\n          this[unstyler[prop]]();\n        }\n      }\n\n      this.fireDataEvent(\"syncAppearance\", this.__states);\n    },\n\n    // property apply\n    _applyAppearance(value, old) {\n      this.updateAppearance();\n    },\n\n    /**\n     * Helper method called from the visibility queue to detect outstanding changes\n     * to the appearance.\n     *\n     * @internal\n     */\n    checkAppearanceNeeds() {\n      // CASE 1: Widget has never got an appearance already because it was never\n      // visible before. Normally add it to the queue is the easiest way to update it.\n      if (!this.__initialAppearanceApplied) {\n        qx.ui.core.queue.Appearance.add(this);\n        this.__initialAppearanceApplied = true;\n      }\n\n      // CASE 2: Widget has got an appearance before, but was hidden for some time\n      // which results into maybe omitted state changes have not been applied.\n      // In this case the widget is already queued in the appearance. This is basically\n      // what all addState/removeState do, but the queue itself may not have been registered\n      // to be flushed\n      else if (this.$$stateChanges) {\n        qx.ui.core.queue.Appearance.add(this);\n        delete this.$$stateChanges;\n      }\n    },\n\n    /**\n     * Refreshes the appearance of this widget and all\n     * registered child controls.\n     */\n    updateAppearance() {\n      // Clear selector\n      this.__updateSelector = true;\n\n      // Add to appearance queue\n      qx.ui.core.queue.Appearance.add(this);\n\n      // Update child controls\n      var controls = this.__childControls;\n      if (controls) {\n        var obj;\n        for (var id in controls) {\n          obj = controls[id];\n\n          if (obj instanceof qx.ui.core.Widget) {\n            obj.updateAppearance();\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET QUEUE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method is called during the flush of the\n     * {@link qx.ui.core.queue.Widget widget queue}.\n     *\n     * @param jobs {Map} A map of jobs.\n     */\n    syncWidget(jobs) {\n      // empty implementation\n    },\n    /*\n    ---------------------------------------------------------------------------\n    EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */ /**\n     * Returns the next event target in the parent chain. May\n     * also return the widget itself if it is not anonymous.\n     *\n     * @return {qx.ui.core.Widget} A working event target of this widget.\n     *    May be <code>null</code> as well.\n     */ getEventTarget() {\n      var target = this;\n      while (target.getAnonymous()) {\n        target = target.getLayoutParent();\n        if (!target) {\n          return null;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns the next focus target in the parent chain. May\n     * also return the widget itself if it is not anonymous and focusable.\n     *\n     * @return {qx.ui.core.Widget} A working focus target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getFocusTarget() {\n      var target = this;\n\n      if (!target.getEnabled()) {\n        return null;\n      }\n\n      while (target.getAnonymous() || !target.getFocusable()) {\n        target = target.getLayoutParent();\n        if (!target || !target.getEnabled()) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns the element which should be focused.\n     *\n     * @return {qx.html.Element} The html element to focus.\n     */\n    getFocusElement() {\n      return this.getContentElement();\n    },\n\n    /**\n     * Whether the widget is reachable by pressing the TAB key.\n     *\n     * Normally tests for both, the focusable property and a positive or\n     * undefined tabIndex property. The widget must have a DOM element\n     * since only visible widgets are tabable.\n     *\n     * @return {Boolean} Whether the element is tabable.\n     */\n    isTabable() {\n      return !!this.getContentElement().getDomElement() && this.isFocusable();\n    },\n\n    // property apply\n    _applyFocusable(value, old) {\n      var target = this.getFocusElement();\n\n      // Apply native tabIndex attribute\n      if (value) {\n        var tabIndex = this.getTabIndex();\n        if (tabIndex == null) {\n          tabIndex = 1;\n        }\n\n        target.setAttribute(\"tabIndex\", tabIndex);\n\n        // Omit native dotted outline border\n        target.setStyle(\"outline\", \"none\");\n      } else {\n        if (target.isNativelyFocusable()) {\n          target.setAttribute(\"tabIndex\", -1);\n        } else if (old) {\n          target.setAttribute(\"tabIndex\", null);\n        }\n      }\n    },\n\n    // property apply\n    _applyKeepFocus(value) {\n      var target = this.getFocusElement();\n      target.setAttribute(\"qxKeepFocus\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyKeepActive(value) {\n      var target = this.getContentElement();\n      target.setAttribute(\"qxKeepActive\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyTabIndex(value) {\n      if (value == null) {\n        value = 1;\n      } else if (value < 1 || value > 32000) {\n        throw new Error(\"TabIndex property must be between 1 and 32000\");\n      }\n\n      if (this.getFocusable() && value != null) {\n        this.getFocusElement().setAttribute(\"tabIndex\", value);\n      }\n    },\n\n    // property apply\n    _applySelectable(value, old) {\n      // Re-apply cursor if not in \"initSelectable\"\n      if (old !== null) {\n        this._applyCursor(this.getCursor());\n      }\n\n      // Apply qooxdoo attribute\n      this.getContentElement().setSelectable(value);\n    },\n\n    // property apply\n    _applyEnabled(value, old) {\n      if (value === false) {\n        this.addState(\"disabled\");\n\n        // hovered not configured in widget, but as this is a\n        // standardized name in qooxdoo and we never want a hover\n        // state for disabled widgets, remove this state every time\n        this.removeState(\"hovered\");\n\n        // Blur when focused\n        if (this.isFocusable()) {\n          // Remove focused state\n          this.removeState(\"focused\");\n\n          // Remove tabIndex\n          this._applyFocusable(false, true);\n        }\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      } else {\n        this.removeState(\"disabled\");\n\n        // Re-add tabIndex\n        if (this.isFocusable()) {\n          this._applyFocusable(true, false);\n        }\n\n        // Re-add draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(true, false);\n        }\n\n        // Re-add droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(true, false);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXT MENU\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyNativeContextMenu(value, old, name) {\n      // empty body to allow overriding\n    }, // property apply\n    _applyContextMenu(value, old) {\n      if (old) {\n        old.removeState(\"contextmenu\");\n        if (old.getOpener() == this) {\n          old.resetOpener();\n        }\n        if (!value) {\n          this.removeListener(\"contextmenu\", this._onContextMenuOpen);\n          this.removeListener(\"longtap\", this._onContextMenuOpen);\n          old.removeListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n\n      if (value) {\n        value.setOpener(this);\n        value.addState(\"contextmenu\");\n\n        if (!old) {\n          this.addListener(\"contextmenu\", this._onContextMenuOpen);\n          this.addListener(\"longtap\", this._onContextMenuOpen);\n          value.addListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n    },\n\n    /**\n     * Event listener for <code>contextmenu</code> event\n     *\n     * @param e {qx.event.type.Pointer} The event object\n     */\n    _onContextMenuOpen(e) {\n      // only allow long tap context menu on touch interactions\n      if (e.getType() == \"longtap\") {\n        if (e.getPointerType() !== \"touch\") {\n          return;\n        }\n      }\n      this.getContextMenu().openAtPointer(e);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      e.stop();\n    },\n\n    /**\n     * Event listener for <code>beforeContextmenuOpen</code> event\n     *\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onBeforeContextMenuOpen(e) {\n      if (\n        e.getData() == \"visible\" &&\n        this.hasListener(\"beforeContextmenuOpen\")\n      ) {\n        this.fireDataEvent(\"beforeContextmenuOpen\", e);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USEFUL COMMON EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener which stops a bubbling event from\n     * propagates further.\n     *\n     * @param e {qx.event.type.Event} Any bubbling event\n     */\n    _onStopEvent(e) {\n      e.stopPropagation();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DRAG & DROP SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper to return a instance of a {@link qx.ui.core.DragDropCursor}.\n     * If you want to use your own DragDropCursor, override this method\n     * and return your custom instance.\n     * @return {qx.ui.core.DragDropCursor} A drag drop cursor implementation.\n     */\n    _getDragDropCursor() {\n      return qx.ui.core.DragDropCursor.getInstance();\n    },\n\n    // property apply\n    _applyDraggable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Force cursor creation\n      this._getDragDropCursor();\n\n      // Process listeners\n      if (value) {\n        this.addListener(\"dragstart\", this._onDragStart);\n        this.addListener(\"drag\", this._onDrag);\n        this.addListener(\"dragend\", this._onDragEnd);\n        this.addListener(\"dragchange\", this._onDragChange);\n      } else {\n        this.removeListener(\"dragstart\", this._onDragStart);\n        this.removeListener(\"drag\", this._onDrag);\n        this.removeListener(\"dragend\", this._onDragEnd);\n        this.removeListener(\"dragchange\", this._onDragChange);\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDraggable\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyDroppable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDroppable\", value ? \"on\" : null);\n    },\n\n    /**\n     * Event listener for own <code>dragstart</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragStart(e) {\n      this._getDragDropCursor().placeToPointer(e);\n      this.getApplicationRoot().setGlobalCursor(\"default\");\n    },\n\n    /**\n     * Event listener for own <code>drag</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDrag(e) {\n      this._getDragDropCursor().placeToPointer(e);\n    },\n\n    /**\n     * Event listener for own <code>dragend</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragEnd(e) {\n      this._getDragDropCursor().moveTo(-1000, -1000);\n      this.getApplicationRoot().resetGlobalCursor();\n    },\n\n    /**\n     * Event listener for own <code>dragchange</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragChange(e) {\n      var cursor = this._getDragDropCursor();\n      var action = e.getCurrentAction();\n      action ? cursor.setAction(action) : cursor.resetAction();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISUALIZE FOCUS STATES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler which is executed when the widget receives the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * apply states etc. to a focused widget.\n     *\n     * @internal\n     */\n    visualizeFocus() {\n      this.addState(\"focused\");\n    },\n\n    /**\n     * Event handler which is executed when the widget lost the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * remove states etc. from a previously focused widget.\n     *\n     * @internal\n     */\n    visualizeBlur() {\n      this.removeState(\"focused\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL CHILD INTO VIEW\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The method scrolls the given item into view.\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param alignX {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param alignY {String?null} Alignment of the item. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoView(child, alignX, alignY, direct) {\n      // Scroll directly on default\n      direct = typeof direct == \"undefined\" ? true : direct;\n\n      // Always lazy scroll when either\n      // - the child\n      // - its layout parent\n      // - its siblings\n      // have layout changes scheduled.\n      //\n      // This is to make sure that the scroll position is computed\n      // after layout changes have been applied to the DOM. Note that changes\n      // scheduled for the grand parent (and up) are not tracked and need to\n      // be signaled manually.\n      var Layout = qx.ui.core.queue.Layout;\n      var parent;\n\n      // Child\n      if (direct) {\n        direct = !Layout.isScheduled(child);\n        parent = child.getLayoutParent();\n\n        // Parent\n        if (direct && parent) {\n          direct = !Layout.isScheduled(parent);\n\n          // Siblings\n          if (direct) {\n            parent.getChildren().forEach(function (sibling) {\n              direct = direct && !Layout.isScheduled(sibling);\n            });\n          }\n        }\n      }\n\n      this.scrollChildIntoViewX(child, alignX, direct);\n      this.scrollChildIntoViewY(child, alignY, direct);\n    },\n\n    /**\n     * The method scrolls the given item into view (x-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewX(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /**\n     * The method scrolls the given item into view (y-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewY(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS SYSTEM USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Focus this widget.\n     *\n     */\n    focus() {\n      if (this.isFocusable()) {\n        this.getFocusElement().focus();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Remove focus from this widget.\n     *\n     */\n    blur() {\n      if (this.isFocusable()) {\n        this.getFocusElement().blur();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Activate this widget e.g. for keyboard events.\n     *\n     */\n    activate() {\n      this.getContentElement().activate();\n    },\n\n    /**\n     * Deactivate this widget e.g. for keyboard events.\n     *\n     */\n    deactivate() {\n      this.getContentElement().deactivate();\n    },\n\n    /**\n     * Focus this widget when using the keyboard. This is\n     * mainly thought for the advanced qooxdoo keyboard handling\n     * and should not be used by the application developer.\n     *\n     * @internal\n     */\n    tabFocus() {\n      this.getFocusElement().focus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given ID is assigned to a child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is registered.\n     */\n    hasChildControl(id) {\n      if (!this.__childControls) {\n        return false;\n      }\n\n      return !!this.__childControls[id];\n    },\n\n    /** @type {Map} Map of instantiated child controls */\n    __childControls: null,\n\n    /**\n     * Returns a map of all already created child controls\n     *\n     * @return {Map} mapping of child control id to the child widget.\n     */\n    _getCreatedChildControls() {\n      return this.__childControls;\n    },\n\n    /**\n     * Returns the child control from the given ID. Returns\n     * <code>null</code> when the child control is unknown.\n     *\n     * It is designed for widget authors, who want to access child controls,\n     * which are created by the widget itself.\n     *\n     * <b>Warning</b>: This method exposes widget internals and modifying the\n     * returned sub widget may bring the widget into an inconsistent state.\n     * Accessing child controls defined in a super class or in an foreign class\n     * is not supported. Do not use it if the result can be achieved using public\n     * API or theming.\n     *\n     * @param id {String} ID of the child control\n     * @param notcreate {Boolean?false} Whether the child control\n     *    should not be created dynamically if not yet available.\n     * @return {qx.ui.core.Widget} Child control\n     */\n    getChildControl(id, notcreate) {\n      if (!this.__childControls) {\n        if (notcreate) {\n          return null;\n        }\n\n        this.__childControls = {};\n      }\n\n      var control = this.__childControls[id];\n      if (control) {\n        return control;\n      }\n\n      if (notcreate === true) {\n        return null;\n      }\n\n      return this._createChildControl(id);\n    },\n\n    /**\n     * Shows the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} the child control\n     */\n    _showChildControl(id) {\n      var control = this.getChildControl(id);\n      control.show();\n      return control;\n    },\n\n    /**\n     * Excludes the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     */\n    _excludeChildControl(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        control.exclude();\n      }\n    },\n\n    /**\n     * Whether the given child control is visible.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is visible.\n     */\n    _isChildControlVisible(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        return control.isVisible();\n      }\n\n      return false;\n    },\n\n    /**\n     * Release the child control by ID and decouple the\n     * child from the parent. This method does not dispose the child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The released control\n     */\n    _releaseChildControl(id) {\n      var control = this.getChildControl(id, false);\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // remove connection to parent\n      delete control.$$subcontrol;\n      delete control.$$subparent;\n\n      // remove state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.removeState(state);\n          }\n        }\n      }\n\n      delete this.__childControls[id];\n\n      return control;\n    },\n\n    /**\n     * Force the creation of the given child control by ID.\n     *\n     * Do not override this method! Override {@link #_createChildControlImpl}\n     * instead if you need to support new controls.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The created control\n     * @throws {Error} when the control was created before\n     */\n    _createChildControl(id) {\n      if (!this.__childControls) {\n        this.__childControls = {};\n      } else if (this.__childControls[id]) {\n        throw new Error(\"Child control '\" + id + \"' already created!\");\n      }\n\n      var pos = id.indexOf(\"#\");\n      try {\n        if (pos == -1) {\n          var control = this._createChildControlImpl(id);\n        } else {\n          var control = this._createChildControlImpl(\n            id.substring(0, pos),\n            id.substring(pos + 1, id.length)\n          );\n        }\n      } catch (exc) {\n        exc.message =\n          \"Exception while creating child control '\" +\n          id +\n          \"' of widget \" +\n          this.toString() +\n          \": \" +\n          exc.message;\n        throw exc;\n      }\n\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // Establish connection to parent\n      control.$$subcontrol = id;\n      control.$$subparent = this;\n\n      // Support for state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.addState(state);\n          }\n        }\n      }\n\n      // If the appearance is already synced after the child control\n      // we need to update the appearance now, because the selector\n      // might be not correct in certain cases.\n      if (control.$$resyncNeeded) {\n        delete control.$$resyncNeeded;\n        control.updateAppearance();\n      }\n\n      this.fireDataEvent(\"createChildControl\", control);\n\n      // Register control and return\n      return (this.__childControls[id] = control);\n    },\n\n    /**\n     * Internal method to create child controls. This method\n     * should be overwritten by classes which extends this one\n     * to support new child control types.\n     *\n     * @param id {String} ID of the child control. If a # is used, the id is\n     *   the part in front of the #.\n     * @param hash {String?undefined} If a child control name contains a #,\n     *   all text following the # will be the hash argument.\n     * @return {qx.ui.core.Widget} The created control or <code>null</code>\n     */\n    _createChildControlImpl(id, hash) {\n      return null;\n    },\n\n    /**\n     * Dispose all registered controls. This is automatically\n     * executed by the widget.\n     *\n     */\n    _disposeChildControls() {\n      var controls = this.__childControls;\n      if (!controls) {\n        return;\n      }\n\n      var Widget = qx.ui.core.Widget;\n\n      for (var id in controls) {\n        var control = controls[id];\n        if (!Widget.contains(this, control)) {\n          control.destroy();\n        } else {\n          control.dispose();\n        }\n      }\n\n      delete this.__childControls;\n    },\n\n    /**\n     * Finds and returns the top level control. This is the first\n     * widget which is not a child control of any other widget.\n     *\n     * @return {qx.ui.core.Widget} The top control\n     */\n    _findTopControl() {\n      var obj = this;\n      while (obj) {\n        if (!obj.$$subparent) {\n          return obj;\n        }\n\n        obj = obj.$$subparent;\n      }\n\n      return null;\n    },\n\n    /**\n     * Return the ID (name) if this instance was a created as a child control of another widget.\n     *\n     * See the first parameter id in {@link qx.ui.core.Widget#_createChildControlImpl}\n     *\n     * @return {String|null} ID of the current widget or null if it was not created as a subcontrol\n     */\n    getSubcontrolId() {\n      return this.$$subcontrol || null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LOWER LEVEL ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the location of the content element in context of the document\n     * dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element\n     *   (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default,\n     *   uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to\n     *   border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute\n     *   positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for\n     *   static/relative positioned content).\n     *\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\n     *   <code>right</code> and <code>bottom</code> which contains the distance\n     *   of the element relative to the document.\n     */\n    getContentLocation(mode) {\n      var domEl = this.getContentElement().getDomElement();\n      return domEl ? qx.bom.element.Location.get(domEl, mode) : null;\n    },\n\n    /**\n     * Directly modifies the relative left position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Left position\n     */\n    setDomLeft(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Top position\n     */\n    setDomTop(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.top = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative left and top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param left {Integer} Left position\n     * @param top {Integer} Top position\n     */\n    setDomPosition(left, top) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = left + \"px\";\n        domEl.style.top = top + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ARIA attrs support\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the string which labels this widget. This will be read out by screenreaders. Needed if there is no\n     * readable text/label in this widget which would automatically act as aria-label.\n     * @param label {String} Labelling Text\n     */\n    setAriaLabel(label) {\n      this.getContentElement().setAttribute(\"aria-label\", label);\n    },\n\n    /**\n     * Marks that this widget gets labelled by another widget. This will be read out by screenreaders as first\n     * information.\n     * Similiar to aria-label, difference being that the labelling widget is an different widget and multiple\n     * widgets can be added.\n     * @param labelWidgets {qx.ui.core.Widget[]} Indefinite Number of labelling Widgets\n     */\n    addAriaLabelledBy(...labelWidgets) {\n      this.__addAriaXBy(labelWidgets, \"aria-labelledby\");\n    },\n\n    /**\n     * Marks that this widget gets described by another widget. This will be read out by screenreaders as last\n     * information. Multiple Widgets possible.\n     * @param describingWidgets {qx.ui.core.Widget[]} Indefinite Number of describing Widgets\n     */\n    addAriaDescribedBy(...describingWidgets) {\n      this.__addAriaXBy(describingWidgets, \"aria-describedby\");\n    },\n\n    /**\n     * Sets either aria-labelledby or aria-describedby\n     * @param widgets {qx.ui.core.Widget[]} Indefinite Number of widgets\n     * @param ariaAttr {String} aria-labelledby | aria-describedby\n     */\n    __addAriaXBy(widgets, ariaAttr) {\n      if (![\"aria-labelledby\", \"aria-describedby\"].includes(ariaAttr)) {\n        throw new Error(\"Only aria-labelledby or aria-describedby allowed!\");\n      }\n      let idArr = [];\n      for (const widget of widgets) {\n        if (!(widget instanceof qx.ui.core.Widget)) {\n          throw new Error(\n            \"Given widget \" +\n              widget +\n              \" is not an instance of qx.ui.core.Widget!\"\n          );\n        }\n        const contentEl = widget.getContentElement();\n        let widgetId = contentEl.getAttribute(\"id\");\n        if (!widgetId) {\n          widgetId = `label-${widget.toHashCode()}`;\n          contentEl.setAttribute(\"id\", widgetId);\n        }\n        if (!idArr.includes(widgetId)) {\n          idArr.push(widgetId);\n        }\n      }\n      if (idArr.length === 0) {\n        return;\n      }\n      const idStr = idArr.join(\" \");\n      const contentEl = this.getContentElement();\n      let res = contentEl.getAttribute(ariaAttr);\n      res = res ? `${res} ${idStr}` : idStr;\n      contentEl.setAttribute(ariaAttr, res);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ENHANCED DISPOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes this widget from its parent and disposes it.\n     *\n     * Please note that the widget is not disposed synchronously. The\n     * real dispose happens after the next queue flush.\n     *\n     */\n    destroy() {\n      if (this.$$disposed) {\n        return;\n      }\n\n      // We may be deferring disposing, but we can at least prevent\n      // listener handlers from being called. We don't know exactly\n      // what listeners have already been disposed at this point.\n      qx.event.Registration.removeAllListeners(this);\n\n      var parent = this.$$parent;\n      if (parent) {\n        parent._remove(this);\n      }\n\n      qx.ui.core.queue.Dispose.add(this);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLONE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone() {\n      var clone = super.clone();\n\n      if (this.getChildren) {\n        var children = this.getChildren();\n        for (var i = 0, l = children.length; i < l; i++) {\n          clone.add(children[i].clone());\n        }\n      }\n\n      return clone;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // Some dispose stuff is not needed in global shutdown, otherwise\n    // it just slows down things a bit, so do not do them.\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          qx.locale.Manager.getInstance().removeListenerById(\n            this.__toolTipTextListenerId\n          );\n        }\n      }\n\n      // Remove widget pointer from DOM\n      var contentEl = this.getContentElement();\n      if (contentEl) {\n        contentEl.disconnectWidget(this);\n      }\n\n      // Clean up all child controls\n      this._disposeChildControls();\n\n      // Remove from ui queues\n      qx.ui.core.queue.Appearance.remove(this);\n      qx.ui.core.queue.Layout.remove(this);\n      qx.ui.core.queue.Visibility.remove(this);\n      qx.ui.core.queue.Widget.remove(this);\n    }\n\n    if (this.getContextMenu()) {\n      this.setContextMenu(null);\n    }\n\n    // pool decorators if not in global shutdown\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      this.clearSeparators();\n      this.__separators = null;\n    } else {\n      this._disposeArray(\"__separators\");\n    }\n\n    // Clear children array\n    this._disposeArray(\"__widgetChildren\");\n\n    // Cleanup map of appearance states\n    this.__states = this.__childControls = null;\n\n    // Dispose layout manager and HTML elements\n    this._disposeObjects(\"__layoutManager\", \"__contentElement\");\n  }\n});\n"
  ],
  "mappings": "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"
}