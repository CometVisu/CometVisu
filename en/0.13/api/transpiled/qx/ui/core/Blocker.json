{
  "className": "qx.ui.core.Blocker",
  "packageName": "qx.ui.core",
  "name": "Blocker",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0,
        "index": 808
      },
      "end": {
        "line": 522,
        "column": 3,
        "index": 14177
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class blocks events and can be included into all widgets.\n The {@link #block} and {@link #unblock} methods provided by this class can be used\n to block any event from the widget. When blocked,\n the blocker widget overlays the widget to block, including the padding area.</p>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.ui.root.Abstract"
        }
      ]
    }
  },
  "type": "class",
  "events": {
    "blocked": {
      "location": {
        "start": {
          "line": 35,
          "column": 4,
          "index": 951
        },
        "end": {
          "line": 35,
          "column": 34,
          "index": 981
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after {@link #block} executed.</p>"
          }
        ]
      },
      "name": "blocked",
      "type": "qx.event.type.Event"
    },
    "unblocked": {
      "location": {
        "start": {
          "line": 40,
          "column": 4,
          "index": 1050
        },
        "end": {
          "line": 40,
          "column": 36,
          "index": 1082
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fires after {@link #unblock} executed.</p>"
          }
        ]
      },
      "name": "unblocked",
      "type": "qx.event.type.Event"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 48,
        "column": 2,
        "index": 1234
      },
      "end": {
        "line": 75,
        "column": 3,
        "index": 1954
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Creates a blocker for the passed widget.</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "widget {qx.ui.core.Widget} Widget which should be added the blocker",
          "paramName": "widget",
          "description": " Widget which should be added the blocker",
          "type": "qx.ui.core.Widget"
        }
      ]
    }
  },
  "properties": {
    "color": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2208
        },
        "end": {
          "line": 93,
          "column": 5,
          "index": 2334
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Color of the blocker</p>"
          }
        ]
      },
      "name": "color",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyColor",
      "nullable": true,
      "allowNull": true,
      "check": "Color"
    },
    "opacity": {
      "location": {
        "start": {
          "line": 98,
          "column": 4,
          "index": 2387
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2493
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Opacity of the blocker</p>"
          }
        ]
      },
      "name": "opacity",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyOpacity",
      "init": 1,
      "check": "Number",
      "defaultValue": 1
    },
    "keepBlockerActive": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3221
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3289
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If this property is enabled, the blocker created with {@link #block}\n will always stay activated. This means that the blocker then gets all keyboard\n events, this is useful to block keyboard input on other widgets.\n Take care that only one blocker instance will be kept active, otherwise your\n browser will freeze.\n Setting this property to true is ignored, if the blocker is attached to a\n widget with a focus handler, as this would mean that the focus handler\n tries to activate the widget behind the blocker.\n fixes:\n     https://github.com/qooxdoo/qooxdoo/issues/9449\n     https://github.com/qooxdoo/qooxdoo/issues/8104</p>"
          }
        ]
      },
      "name": "keepBlockerActive",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__blocker": {
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 3497
        },
        "end": {
          "line": 133,
          "column": 19,
          "index": 3512
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__blockerCount": {
      "location": {
        "start": {
          "line": 134,
          "column": 4,
          "index": 3518
        },
        "end": {
          "line": 134,
          "column": 21,
          "index": 3535
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__activeElements": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 3542
        },
        "end": {
          "line": 136,
          "column": 26,
          "index": 3564
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__focusElements": {
      "location": {
        "start": {
          "line": 137,
          "column": 4,
          "index": 3570
        },
        "end": {
          "line": 137,
          "column": 25,
          "index": 3591
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__timer": {
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3598
        },
        "end": {
          "line": 139,
          "column": 17,
          "index": 3611
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_widget": {
      "location": {
        "start": {
          "line": 141,
          "column": 4,
          "index": 3618
        },
        "end": {
          "line": 141,
          "column": 17,
          "index": 3631
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "_isRoot": {
      "location": {
        "start": {
          "line": 142,
          "column": 4,
          "index": 3637
        },
        "end": {
          "line": 142,
          "column": 18,
          "index": 3651
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__appearListener": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3658
        },
        "end": {
          "line": 144,
          "column": 26,
          "index": 3680
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__onBoundsChange": {
      "location": {
        "start": {
          "line": 151,
          "column": 4,
          "index": 3811
        },
        "end": {
          "line": 157,
          "column": 5,
          "index": 3948
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adjust html element size on layout resizes.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} event object",
            "paramName": "e",
            "description": " event object",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onWidgetAppear": {
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 4053
        },
        "end": {
          "line": 172,
          "column": 5,
          "index": 4397
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Widget re-appears: Update blocker size/position and attach to (new) parent</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onWidgetDisappear": {
      "location": {
        "start": {
          "line": 177,
          "column": 4,
          "index": 4471
        },
        "end": {
          "line": 182,
          "column": 5,
          "index": 4694
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove the blocker if the widget disappears</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_updateBlockerBounds": {
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 4839
        },
        "end": {
          "line": 195,
          "column": 5,
          "index": 5067
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>set the blocker's size and position</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "bounds {Map} Map with the new width, height, left and top values",
            "paramName": "bounds",
            "description": " Map with the new width, height, left and top values",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyColor": {
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 5096
        },
        "end": {
          "line": 201,
          "column": 5,
          "index": 5255
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "color"
      ]
    },
    "_applyOpacity": {
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 5284
        },
        "end": {
          "line": 206,
          "column": 5,
          "index": 5366
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "opacity"
      ]
    },
    "_onChangeTheme": {
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5455
        },
        "end": {
          "line": 217,
          "column": 6,
          "index": 5606
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handler for the theme change.</p>"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__setBlockersStyle": {
      "location": {
        "start": {
          "line": 225,
          "column": 4,
          "index": 5804
        },
        "end": {
          "line": 232,
          "column": 5,
          "index": 6023
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Set the style to all blockers (blocker and content blocker).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key {String} The name of the style attribute.",
            "paramName": "key",
            "description": " The name of the style attribute.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "value {String} The value.",
            "paramName": "value",
            "description": " The value.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_backupActiveWidget": {
      "location": {
        "start": {
          "line": 237,
          "column": 4,
          "index": 6099
        },
        "end": {
          "line": 260,
          "column": 5,
          "index": 6722
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Backup the current active and focused widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_restoreActiveWidget": {
      "location": {
        "start": {
          "line": 265,
          "column": 4,
          "index": 6799
        },
        "end": {
          "line": 285,
          "column": 5,
          "index": 7348
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Restore the current active and focused widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__createBlockerElement": {
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 7467
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 7569
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the blocker element.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element} The blocker element",
            "type": "qx.html.Element",
            "description": " The blocker element"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getBlockerElement": {
      "location": {
        "start": {
          "line": 303,
          "column": 4,
          "index": 7797
        },
        "end": {
          "line": 320,
          "column": 5,
          "index": 8273
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get/create the blocker element</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} The blocker will be added to this\n widget's content element",
            "paramName": "widget",
            "description": " The blocker will be added to this\n widget's content element",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element} The blocker element",
            "type": "qx.html.Element",
            "description": " The blocker element"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "block": {
      "location": {
        "start": {
          "line": 326,
          "column": 4,
          "index": 8437
        },
        "end": {
          "line": 328,
          "column": 5,
          "index": 8473
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Block all events from this widget by placing a transparent overlay widget,\n which receives all events, exactly over the widget.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_block": {
      "location": {
        "start": {
          "line": 336,
          "column": 4,
          "index": 8754
        },
        "end": {
          "line": 381,
          "column": 5,
          "index": 10114
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds the blocker to the appropriate element and includes it.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "zIndex {Number} All child widgets with a zIndex below this value will be blocked",
            "paramName": "zIndex",
            "description": " All child widgets with a zIndex below this value will be blocked",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "blockContent {Boolean} append the blocker to the widget's content if true",
            "paramName": "blockContent",
            "description": " append the blocker to the widget's content if true",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "isBlocked": {
      "location": {
        "start": {
          "line": 388,
          "column": 4,
          "index": 10246
        },
        "end": {
          "line": 390,
          "column": 5,
          "index": 10303
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the widget is blocked.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the widget is blocked.",
            "type": "Boolean",
            "description": " Whether the widget is blocked."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "unblock": {
      "location": {
        "start": {
          "line": 397,
          "column": 4,
          "index": 10556
        },
        "end": {
          "line": 412,
          "column": 5,
          "index": 10908
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unblock the widget blocked by {@link #block}, but it takes care of\n the amount of {@link #block} calls. The blocker is only removed if\n the number of {@link #unblock} calls is identical to {@link #block} calls.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "forceUnblock": {
      "location": {
        "start": {
          "line": 418,
          "column": 4,
          "index": 11088
        },
        "end": {
          "line": 430,
          "column": 5,
          "index": 11367
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unblock the widget blocked by {@link #block}, but it doesn't take care of\n the amount of {@link #block} calls. The blocker is directly removed.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__unblock": {
      "location": {
        "start": {
          "line": 435,
          "column": 4,
          "index": 11443
        },
        "end": {
          "line": 446,
          "column": 5,
          "index": 11910
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Unblock the widget blocked by {@link #block}.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "blockContent": {
      "location": {
        "start": {
          "line": 454,
          "column": 4,
          "index": 12121
        },
        "end": {
          "line": 456,
          "column": 5,
          "index": 12182
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Block direct child widgets with a zIndex below <code>zIndex</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "zIndex {Integer} All child widgets with a zIndex below this value\n     will be blocked",
            "paramName": "zIndex",
            "description": " All child widgets with a zIndex below this value\n     will be blocked",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__stopTabEvent": {
      "location": {
        "start": {
          "line": 463,
          "column": 4,
          "index": 12308
        },
        "end": {
          "line": 467,
          "column": 5,
          "index": 12402
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the passed \"Tab\" event.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} event to stop.",
            "paramName": "e",
            "description": " event to stop.",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__activateBlockerElement": {
      "location": {
        "start": {
          "line": 472,
          "column": 4,
          "index": 12468
        },
        "end": {
          "line": 491,
          "column": 5,
          "index": 13218
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the blocker element to active.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getColor": {
      "type": "function",
      "name": "getColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>color</code>.\n\nFor further details take a look at the property definition: {@link #color}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for color"
          }
        ]
      }
    },
    "setColor": {
      "type": "function",
      "name": "setColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>color</code>.\n\nFor further details take a look at the property definition: {@link #color}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for color"
          }
        ]
      }
    },
    "resetColor": {
      "type": "function",
      "name": "resetColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>color</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #color}."
          }
        ]
      }
    },
    "getOpacity": {
      "type": "function",
      "name": "getOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>opacity</code>.\n\nFor further details take a look at the property definition: {@link #opacity}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for opacity"
          }
        ]
      }
    },
    "setOpacity": {
      "type": "function",
      "name": "setOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>opacity</code>.\n\nFor further details take a look at the property definition: {@link #opacity}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for opacity"
          }
        ]
      }
    },
    "resetOpacity": {
      "type": "function",
      "name": "resetOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>opacity</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #opacity}."
          }
        ]
      }
    },
    "getKeepBlockerActive": {
      "type": "function",
      "name": "getKeepBlockerActive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepBlockerActive</code>.\n\nFor further details take a look at the property definition: {@link #keepBlockerActive}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepBlockerActive"
          }
        ]
      }
    },
    "isKeepBlockerActive": {
      "type": "function",
      "name": "isKeepBlockerActive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>keepBlockerActive</code>.\n\nFor further details take a look at the property definition: {@link #keepBlockerActive}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for keepBlockerActive"
          }
        ]
      }
    },
    "setKeepBlockerActive": {
      "type": "function",
      "name": "setKeepBlockerActive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>keepBlockerActive</code>.\n\nFor further details take a look at the property definition: {@link #keepBlockerActive}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for keepBlockerActive"
          }
        ]
      }
    },
    "resetKeepBlockerActive": {
      "type": "function",
      "name": "resetKeepBlockerActive",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>keepBlockerActive</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #keepBlockerActive}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 500,
        "column": 2,
        "index": 13414
      },
      "end": {
        "line": 521,
        "column": 3,
        "index": 14173
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}