{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "MenuButton",
    "implement",
    "table",
    "IColumnMenuButton",
    "construct",
    "constructor",
    "call",
    "__blocker",
    "core",
    "Blocker",
    "members",
    "__columnMenuButtons",
    "factory",
    "item",
    "options",
    "menu",
    "Menu",
    "setMenu",
    "menuButton",
    "columnmenu",
    "MenuItem",
    "text",
    "setColumnVisible",
    "bVisible",
    "getMenu",
    "add",
    "button",
    "Button",
    "set",
    "appearance",
    "Separator",
    "Error",
    "getBlocker",
    "empty",
    "entries",
    "getChildren",
    "i",
    "l",
    "length",
    "destroy",
    "destruct",
    "dispose"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/columnmenu/Button.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2009 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n     * Jonathan Wei√ü (jonathan_rass)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The traditional qx.ui.menu.MenuButton to access the column visibility menu.\r\n */\r\nqx.Class.define(\"qx.ui.table.columnmenu.Button\", {\r\n  extend: qx.ui.form.MenuButton,\r\n  implement: qx.ui.table.IColumnMenuButton,\r\n\r\n  /**\r\n   * Create a new instance of a column visibility menu button. This button\r\n   * also contains the factory for creating each of the sub-widgets.\r\n   */\r\n  construct() {\r\n    super();\r\n\r\n    // add blocker\r\n    this.__blocker = new qx.ui.core.Blocker(this);\r\n  },\r\n\r\n  members: {\r\n    __columnMenuButtons: null,\r\n    __blocker: null,\r\n\r\n    // Documented in qx.ui.table.IColumnMenu\r\n    factory(item, options) {\r\n      switch (item) {\r\n        case \"menu\":\r\n          var menu = new qx.ui.menu.Menu();\r\n          this.setMenu(menu);\r\n          return menu;\r\n\r\n        case \"menu-button\":\r\n          var menuButton = new qx.ui.table.columnmenu.MenuItem(options.text);\r\n          menuButton.setColumnVisible(options.bVisible);\r\n          this.getMenu().add(menuButton);\r\n          return menuButton;\r\n\r\n        case \"user-button\":\r\n          var button = new qx.ui.menu.Button(options.text);\r\n          button.set({\r\n            appearance: \"table-column-reset-button\"\r\n          });\r\n\r\n          return button;\r\n\r\n        case \"separator\":\r\n          return new qx.ui.menu.Separator();\r\n\r\n        default:\r\n          throw new Error(\"Unrecognized factory request: \" + item);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the blocker of the columnmenu button.\r\n     *\r\n     * @return {qx.ui.core.Blocker} the blocker.\r\n     */\r\n    getBlocker() {\r\n      return this.__blocker;\r\n    },\r\n\r\n    // Documented in qx.ui.table.IColumnMenu\r\n    empty() {\r\n      var menu = this.getMenu();\r\n      var entries = menu.getChildren();\r\n\r\n      for (var i = 0, l = entries.length; i < l; i++) {\r\n        entries[0].destroy();\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this.__blocker.dispose();\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,+BAA+B,EAAE;IAC/CC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,UAAU;IAC7BC,SAAS,EAAEV,EAAE,CAACO,EAAE,CAACI,KAAK,CAACC,iBAAiB;IAExC;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAAA,EAAG;MACVb,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,UAAA,CAAAK,WAAA,CAAAC,IAAA;;MAEA;MACA,IAAI,CAACC,SAAS,GAAG,IAAIhB,EAAE,CAACO,EAAE,CAACU,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC;IAC/C,CAAC;IAEDC,OAAO,EAAE;MACPC,SAAmB,EAAE,IAAI;MACzBJ,SAAS,EAAE,IAAI;MAEf;MACAK,OAAO,WAAAA,QAACC,IAAI,EAAEC,OAAO,EAAE;QACrB,QAAQD,IAAI;UACV,KAAK,MAAM;YACT,IAAIE,IAAI,GAAG,IAAIxB,EAAE,CAACO,EAAE,CAACiB,IAAI,CAACC,IAAI,CAAC,CAAC;YAChC,IAAI,CAACC,OAAO,CAACF,IAAI,CAAC;YAClB,OAAOA,IAAI;UAEb,KAAK,aAAa;YAChB,IAAIG,UAAU,GAAG,IAAI3B,EAAE,CAACO,EAAE,CAACI,KAAK,CAACiB,UAAU,CAACC,QAAQ,CAACN,OAAO,CAACO,IAAI,CAAC;YAClEH,UAAU,CAACI,gBAAgB,CAACR,OAAO,CAACS,QAAQ,CAAC;YAC7C,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACP,UAAU,CAAC;YAC9B,OAAOA,UAAU;UAEnB,KAAK,aAAa;YAChB,IAAIQ,MAAM,GAAG,IAAInC,EAAE,CAACO,EAAE,CAACiB,IAAI,CAACY,MAAM,CAACb,OAAO,CAACO,IAAI,CAAC;YAChDK,MAAM,CAACE,GAAG,CAAC;cACTC,UAAU,EAAE;YACd,CAAC,CAAC;YAEF,OAAOH,MAAM;UAEf,KAAK,WAAW;YACd,OAAO,IAAInC,EAAE,CAACO,EAAE,CAACiB,IAAI,CAACe,SAAS,CAAC,CAAC;UAEnC;YACE,MAAM,IAAIC,KAAK,CAAC,gCAAgC,GAAGlB,IAAI,CAAC;QAC5D;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACImB,UAAU,WAAAA,WAAA,EAAG;QACX,OAAO,IAAI,CAACzB,SAAS;MACvB,CAAC;MAED;MACA0B,KAAK,WAAAA,MAAA,EAAG;QACN,IAAIlB,IAAI,GAAG,IAAI,CAACS,OAAO,CAAC,CAAC;QACzB,IAAIU,OAAO,GAAGnB,IAAI,CAACoB,WAAW,CAAC,CAAC;QAEhC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;UAC9CF,OAAO,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;QACtB;MACF;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IAEEC,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,CAACjC,SAAS,CAACkC,OAAO,CAAC,CAAC;IAC1B;EACF,CAAC,CAAC;EApGFlD,EAAE,CAACO,EAAE,CAACI,KAAK,CAACiB,UAAU,CAACQ,MAAM,CAACjC,aAAa,GAAGA,aAAa;AAAC"
}