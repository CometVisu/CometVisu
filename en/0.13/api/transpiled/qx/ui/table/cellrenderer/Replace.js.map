{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "Default",
    "properties",
    "replaceMap",
    "check",
    "nullable",
    "init",
    "replaceFunction",
    "members",
    "_getContentHtml",
    "cellInfo",
    "value",
    "getReplaceMap",
    "replaceFunc",
    "getReplaceFunction",
    "label",
    "bom",
    "String",
    "escape",
    "_formatValue",
    "addReversedReplaceMap",
    "map",
    "key",
    "Replace"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Replace.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 by Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * The cell will use, if given, the\n * replaceMap property and/or the replaceFunction to look up labels for a\n * specific cell value. if the replaceMap, which does not need to be used but\n * takes precedence if given, has no entry for a specific value, you can implement\n * a fallback lookup in the replacementFunction, or use the replacementFunction exclusively.\n *\n * In editable cells, you need to make sure that the method returning the data\n * to the data storage (for example, a database backend) translates the replaced\n * cell value (the label) back into the corresponding value. Thus, both map and\n * function MUST also take care of the reverse translation of labels into\n * values. Example: if you have a field that should display \"Active\" on a \"1\"\n * value and \"Inactive\" on a \"0\" value, you must use the following map:\n *\n * <pre class='javascript'>\n * {\n *   0 : \"Inactive\",\n *   1 : \"Active\",\n *   \"Inactive\" : 0,\n *   \"Active\" : 1\n * }\n * </pre>\n *\n * You can use the addReversedReplaceMap() method to do this for you:\n * <pre class='javascript'>\n * var propertyCellRenderer = new qx.ui.table.cellrenderer.Replace;\n * propertyCellRenderer.setReplaceMap({\n *    1 : \"Active\",\n *   0 : \"Inactive\",\n *   2  : \"Waiting\",\n *   'admin' : \"System Administrator\",\n *   'manager' : \"User Manager\",\n *   'user' : \"Website User\"\n * });\n * propertyCellRenderer.addReversedReplaceMap();\n * </pre>\n *\n * @param cellInfo {Map} The information about the cell.\n *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n * @return {String}\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Replace\", {\n  extend: qx.ui.table.cellrenderer.Default,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** a hashmap which is used to replace values by labels */\n    replaceMap: {\n      check: \"Object\",\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * function that provides the label for a specific value\n     **/\n    replaceFunction: {\n      check: \"Function\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // overridden\n    _getContentHtml(cellInfo) {\n      var value = cellInfo.value;\n      var replaceMap = this.getReplaceMap();\n      var replaceFunc = this.getReplaceFunction();\n      var label;\n\n      // use map\n      if (replaceMap) {\n        label = replaceMap[value];\n        if (typeof label != \"undefined\") {\n          cellInfo.value = label;\n          return qx.bom.String.escape(this._formatValue(cellInfo));\n        }\n      }\n\n      // use function\n      if (replaceFunc) {\n        cellInfo.value = replaceFunc(value);\n      }\n      return qx.bom.String.escape(this._formatValue(cellInfo));\n    },\n\n    /**\n     * adds a reversed replaceMap to itself to translate labels back to the original values\n     * @return {Boolean} <code>true</code>\n     */\n    addReversedReplaceMap() {\n      var map = this.getReplaceMap();\n      for (var key in map) {\n        var value = map[key];\n        map[value] = key;\n      }\n      return true;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kCAAhB,EAAoD;IAClDC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,YAAZ,CAAyBC,OADiB;;IAGlD;AACF;AACA;AACA;AACA;IAEEC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,KAAK,EAAE,QADG;QAEVC,QAAQ,EAAE,IAFA;QAGVC,IAAI,EAAE;MAHI,CAFF;;MAQV;AACJ;AACA;MACIC,eAAe,EAAE;QACfH,KAAK,EAAE,UADQ;QAEfC,QAAQ,EAAE,IAFK;QAGfC,IAAI,EAAE;MAHS;IAXP,CATsC;;IA2BlD;AACF;AACA;AACA;AACA;IAEEE,OAAO,EAAE;MACP;MACAC,eAFO,2BAESC,QAFT,EAEmB;QACxB,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAArB;QACA,IAAIR,UAAU,GAAG,KAAKS,aAAL,EAAjB;QACA,IAAIC,WAAW,GAAG,KAAKC,kBAAL,EAAlB;QACA,IAAIC,KAAJ,CAJwB,CAMxB;;QACA,IAAIZ,UAAJ,EAAgB;UACdY,KAAK,GAAGZ,UAAU,CAACQ,KAAD,CAAlB;;UACA,IAAI,OAAOI,KAAP,IAAgB,WAApB,EAAiC;YAC/BL,QAAQ,CAACC,KAAT,GAAiBI,KAAjB;YACA,OAAOxB,EAAE,CAACyB,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqB,KAAKC,YAAL,CAAkBT,QAAlB,CAArB,CAAP;UACD;QACF,CAbuB,CAexB;;;QACA,IAAIG,WAAJ,EAAiB;UACfH,QAAQ,CAACC,KAAT,GAAiBE,WAAW,CAACF,KAAD,CAA5B;QACD;;QACD,OAAOpB,EAAE,CAACyB,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqB,KAAKC,YAAL,CAAkBT,QAAlB,CAArB,CAAP;MACD,CAtBM;;MAwBP;AACJ;AACA;AACA;MACIU,qBA5BO,mCA4BiB;QACtB,IAAIC,GAAG,GAAG,KAAKT,aAAL,EAAV;;QACA,KAAK,IAAIU,GAAT,IAAgBD,GAAhB,EAAqB;UACnB,IAAIV,KAAK,GAAGU,GAAG,CAACC,GAAD,CAAf;UACAD,GAAG,CAACV,KAAD,CAAH,GAAaW,GAAb;QACD;;QACD,OAAO,IAAP;MACD;IAnCM;EAjCyC,CAApD;EA3DA/B,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,YAAZ,CAAyBuB,OAAzB,CAAiC7B,aAAjC,GAAiDA,aAAjD"
}