{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "implement",
    "ui",
    "table",
    "ICellRenderer",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "cr",
    "cellrenderer",
    "Abstract",
    "__clazz",
    "_createStyleSheet",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "_onChangeTheme",
    "properties",
    "defaultCellStyle",
    "init",
    "check",
    "nullable",
    "members",
    "Environment",
    "select",
    "_true",
    "bom",
    "Stylesheet",
    "removeAllRules",
    "stylesheet",
    "_insetX",
    "_insetY",
    "colorMgr",
    "Color",
    "element",
    "Style",
    "compile",
    "position",
    "top",
    "overflow",
    "whiteSpace",
    "borderRight",
    "resolve",
    "padding",
    "cursor",
    "textOverflow",
    "userSelect",
    "get",
    "BoxSizing",
    "createElement",
    "_getCellClass",
    "cellInfo",
    "_getCellStyle",
    "style",
    "_getCellAttributes",
    "cellId",
    "toHashCode",
    "row",
    "col",
    "readOnly",
    "editable",
    "undefined",
    "_getContentHtml",
    "value",
    "_getCellSizeStyle",
    "width",
    "height",
    "insetX",
    "insetY",
    "Math",
    "max",
    "createDataCellHtml",
    "htmlArr",
    "push",
    "styleLeft",
    "styleWidth",
    "styleHeight",
    "destruct",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Til Schneider (til132)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * An abstract data cell renderer that does the basic coloring\r\n * (borders, selected look, ...).\r\n *\r\n * @require(qx.bom.Stylesheet)\r\n */\r\nqx.Class.define(\"qx.ui.table.cellrenderer.Abstract\", {\r\n  type: \"abstract\",\r\n  implement: qx.ui.table.ICellRenderer,\r\n  extend: qx.core.Object,\r\n\r\n  construct() {\r\n    super();\r\n\r\n    var cr = qx.ui.table.cellrenderer.Abstract;\r\n    if (!cr.__clazz) {\r\n      cr.__clazz = this.self(arguments);\r\n      this._createStyleSheet();\r\n\r\n      // add dynamic theme listener\r\n      if (qx.core.Environment.get(\"qx.dyntheme\")) {\r\n        qx.theme.manager.Meta.getInstance().addListener(\r\n          \"changeTheme\",\r\n          this._onChangeTheme,\r\n          this\r\n        );\r\n      }\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    /**\r\n     * The default cell style. The value of this property will be provided\r\n     * to the cell renderer as cellInfo.style.\r\n     */\r\n    defaultCellStyle: {\r\n      init: null,\r\n      check: \"String\",\r\n      nullable: true\r\n    }\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Handler for the theme change.\r\n     * @signature function()\r\n     */\r\n    _onChangeTheme: qx.core.Environment.select(\"qx.dyntheme\", {\r\n      true() {\r\n        qx.bom.Stylesheet.removeAllRules(\r\n          qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet\r\n        );\r\n\r\n        this._createStyleSheet();\r\n      },\r\n      false: null\r\n    }),\r\n\r\n    /**\r\n     * the sum of the horizontal insets. This is needed to compute the box model\r\n     * independent size\r\n     */\r\n    _insetX: 6 + 6 + 1, // paddingLeft + paddingRight + borderRight\r\n\r\n    /**\r\n     * the sum of the vertical insets. This is needed to compute the box model\r\n     * independent size\r\n     */\r\n    _insetY: 0,\r\n\r\n    /**\r\n     * Creates the style sheet used for the table cells.\r\n     */\r\n    _createStyleSheet() {\r\n      var colorMgr = qx.theme.manager.Color.getInstance();\r\n      var stylesheet =\r\n        \".qooxdoo-table-cell {\" +\r\n        qx.bom.element.Style.compile({\r\n          position: \"absolute\",\r\n          top: \"0px\",\r\n          overflow: \"hidden\",\r\n          whiteSpace: \"nowrap\",\r\n          borderRight: \"1px solid \" + colorMgr.resolve(\"table-column-line\"),\r\n          padding: \"0px 6px\",\r\n          cursor: \"default\",\r\n          textOverflow: \"ellipsis\",\r\n          userSelect: \"none\"\r\n        }) +\r\n        \"} \" +\r\n        \".qooxdoo-table-cell-right { text-align:right } \" +\r\n        \".qooxdoo-table-cell-italic { font-style:italic} \" +\r\n        \".qooxdoo-table-cell-bold { font-weight:bold } \";\r\n\r\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\r\n        stylesheet +=\r\n          \".qooxdoo-table-cell {\" +\r\n          qx.bom.element.BoxSizing.compile(\"content-box\") +\r\n          \"}\";\r\n      }\r\n\r\n      qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet =\r\n        qx.bom.Stylesheet.createElement(stylesheet);\r\n    },\r\n\r\n    /**\r\n     * Get a string of the cell element's HTML classes.\r\n     *\r\n     * This method may be overridden by sub classes.\r\n     *\r\n     * @param cellInfo {Map} cellInfo of the cell\r\n     * @return {String} The table cell HTML classes as string.\r\n     */\r\n    _getCellClass(cellInfo) {\r\n      return \"qooxdoo-table-cell\";\r\n    },\r\n\r\n    /**\r\n     * Returns the CSS styles that should be applied to the main div of this\r\n     * cell.\r\n     *\r\n     * This method may be overridden by sub classes.\r\n     *\r\n     * @param cellInfo {Map} The information about the cell.\r\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\r\n     * @return {var} the CSS styles of the main div.\r\n     */\r\n    _getCellStyle(cellInfo) {\r\n      return cellInfo.style || \"\";\r\n    },\r\n\r\n    /**\r\n     * Retrieve any extra attributes the cell renderer wants applied to this\r\n     * cell.\r\n     *\r\n     * @param cellInfo {Map} The information about the cell.\r\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\r\n     *\r\n     * @return {String}\r\n     *   The extra attributes to be applied to this cell.\r\n     */\r\n    _getCellAttributes(cellInfo) {\r\n      const cellId =\r\n        \"qooxdoo-table-cell-\" +\r\n        cellInfo.table.toHashCode() +\r\n        \"-\" +\r\n        cellInfo.row +\r\n        \"-\" +\r\n        cellInfo.col;\r\n      const readOnly =\r\n        cellInfo.editable !== null && cellInfo.editable !== undefined\r\n          ? !cellInfo.editable\r\n          : true;\r\n      return \"id=\" + cellId + \" role=gridcell aria-readonly=\" + readOnly;\r\n    },\r\n\r\n    /**\r\n     * Returns the HTML that should be used inside the main div of this cell.\r\n     *\r\n     * This method may be overridden by sub classes.\r\n     *\r\n     * @param cellInfo {Map} The information about the cell.\r\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\r\n     * @return {String} the inner HTML of the cell.\r\n     */\r\n    _getContentHtml(cellInfo) {\r\n      return cellInfo.value || \"\";\r\n    },\r\n\r\n    /**\r\n     * Get the cell size taking the box model into account\r\n     *\r\n     * @param width {Integer} The cell's (border-box) width in pixel\r\n     * @param height {Integer} The cell's (border-box) height in pixel\r\n     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of\r\n     *    horizontal paddings and borders\r\n     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of\r\n     *    vertical paddings and borders\r\n     * @return {String} The CSS style string for the cell size\r\n     */\r\n    _getCellSizeStyle(width, height, insetX, insetY) {\r\n      var style = \"\";\r\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\r\n        width -= insetX;\r\n        height -= insetY;\r\n      }\r\n\r\n      style += \"width:\" + Math.max(width, 0) + \"px;\";\r\n      style += \"height:\" + Math.max(height, 0) + \"px;\";\r\n\r\n      return style;\r\n    },\r\n\r\n    // interface implementation\r\n    createDataCellHtml(cellInfo, htmlArr) {\r\n      htmlArr.push(\r\n        '<div class=\"',\r\n        this._getCellClass(cellInfo),\r\n        '\" style=\"',\r\n        \"left:\",\r\n        cellInfo.styleLeft,\r\n        \"px;\",\r\n        this._getCellSizeStyle(\r\n          cellInfo.styleWidth,\r\n          cellInfo.styleHeight,\r\n          this._insetX,\r\n          this._insetY\r\n        ),\r\n\r\n        this._getCellStyle(cellInfo),\r\n        '\" ',\r\n        'data-qx-table-cell-row=\"',\r\n        cellInfo.row,\r\n        '\" ',\r\n        'data-qx-table-cell-col=\"',\r\n        cellInfo.col,\r\n        '\" ',\r\n        this._getCellAttributes(cellInfo),\r\n        \">\" + this._getContentHtml(cellInfo),\r\n        \"</div>\"\r\n      );\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    // remove dynamic theme listener\r\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\r\n      qx.theme.manager.Meta.getInstance().removeListener(\r\n        \"changeTheme\",\r\n        this._onChangeTheme,\r\n        this\r\n      );\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}