{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "implement",
    "ui",
    "table",
    "ICellRenderer",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "cr",
    "cellrenderer",
    "Abstract",
    "__clazz",
    "_createStyleSheet",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "_onChangeTheme",
    "properties",
    "defaultCellStyle",
    "init",
    "check",
    "nullable",
    "members",
    "Environment",
    "select",
    "_true",
    "bom",
    "Stylesheet",
    "removeAllRules",
    "stylesheet",
    "_insetX",
    "_insetY",
    "colorMgr",
    "Color",
    "element",
    "Style",
    "compile",
    "position",
    "top",
    "overflow",
    "whiteSpace",
    "borderRight",
    "resolve",
    "padding",
    "cursor",
    "textOverflow",
    "userSelect",
    "get",
    "BoxSizing",
    "createElement",
    "_getCellClass",
    "cellInfo",
    "_getCellStyle",
    "style",
    "_getCellAttributes",
    "cellId",
    "toHashCode",
    "row",
    "col",
    "readOnly",
    "editable",
    "undefined",
    "_getContentHtml",
    "value",
    "_getCellSizeStyle",
    "width",
    "height",
    "insetX",
    "insetY",
    "Math",
    "max",
    "createDataCellHtml",
    "htmlArr",
    "push",
    "styleLeft",
    "styleWidth",
    "styleHeight",
    "destruct",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * An abstract data cell renderer that does the basic coloring\n * (borders, selected look, ...).\n *\n * @require(qx.bom.Stylesheet)\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Abstract\", {\n  type: \"abstract\",\n  implement: qx.ui.table.ICellRenderer,\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n\n    var cr = qx.ui.table.cellrenderer.Abstract;\n    if (!cr.__clazz) {\n      cr.__clazz = this.self(arguments);\n      this._createStyleSheet();\n\n      // add dynamic theme listener\n      if (qx.core.Environment.get(\"qx.dyntheme\")) {\n        qx.theme.manager.Meta.getInstance().addListener(\n          \"changeTheme\",\n          this._onChangeTheme,\n          this\n        );\n      }\n    }\n  },\n\n  properties: {\n    /**\n     * The default cell style. The value of this property will be provided\n     * to the cell renderer as cellInfo.style.\n     */\n    defaultCellStyle: {\n      init: null,\n      check: \"String\",\n      nullable: true\n    }\n  },\n\n  members: {\n    /**\n     * Handler for the theme change.\n     * @signature function()\n     */\n    _onChangeTheme: qx.core.Environment.select(\"qx.dyntheme\", {\n      true() {\n        qx.bom.Stylesheet.removeAllRules(\n          qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet\n        );\n\n        this._createStyleSheet();\n      },\n      false: null\n    }),\n\n    /**\n     * the sum of the horizontal insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetX: 6 + 6 + 1, // paddingLeft + paddingRight + borderRight\n\n    /**\n     * the sum of the vertical insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetY: 0,\n\n    /**\n     * Creates the style sheet used for the table cells.\n     */\n    _createStyleSheet() {\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var stylesheet =\n        \".qooxdoo-table-cell {\" +\n        qx.bom.element.Style.compile({\n          position: \"absolute\",\n          top: \"0px\",\n          overflow: \"hidden\",\n          whiteSpace: \"nowrap\",\n          borderRight: \"1px solid \" + colorMgr.resolve(\"table-column-line\"),\n          padding: \"0px 6px\",\n          cursor: \"default\",\n          textOverflow: \"ellipsis\",\n          userSelect: \"none\"\n        }) +\n        \"} \" +\n        \".qooxdoo-table-cell-right { text-align:right } \" +\n        \".qooxdoo-table-cell-italic { font-style:italic} \" +\n        \".qooxdoo-table-cell-bold { font-weight:bold } \";\n\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        stylesheet +=\n          \".qooxdoo-table-cell {\" +\n          qx.bom.element.BoxSizing.compile(\"content-box\") +\n          \"}\";\n      }\n\n      qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet =\n        qx.bom.Stylesheet.createElement(stylesheet);\n    },\n\n    /**\n     * Get a string of the cell element's HTML classes.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} cellInfo of the cell\n     * @return {String} The table cell HTML classes as string.\n     */\n    _getCellClass(cellInfo) {\n      return \"qooxdoo-table-cell\";\n    },\n\n    /**\n     * Returns the CSS styles that should be applied to the main div of this\n     * cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {var} the CSS styles of the main div.\n     */\n    _getCellStyle(cellInfo) {\n      return cellInfo.style || \"\";\n    },\n\n    /**\n     * Retrieve any extra attributes the cell renderer wants applied to this\n     * cell.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     *\n     * @return {String}\n     *   The extra attributes to be applied to this cell.\n     */\n    _getCellAttributes(cellInfo) {\n      const cellId =\n        \"qooxdoo-table-cell-\" +\n        cellInfo.table.toHashCode() +\n        \"-\" +\n        cellInfo.row +\n        \"-\" +\n        cellInfo.col;\n      const readOnly =\n        cellInfo.editable !== null && cellInfo.editable !== undefined\n          ? !cellInfo.editable\n          : true;\n      return \"id=\" + cellId + \" role=gridcell aria-readonly=\" + readOnly;\n    },\n\n    /**\n     * Returns the HTML that should be used inside the main div of this cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {String} the inner HTML of the cell.\n     */\n    _getContentHtml(cellInfo) {\n      return cellInfo.value || \"\";\n    },\n\n    /**\n     * Get the cell size taking the box model into account\n     *\n     * @param width {Integer} The cell's (border-box) width in pixel\n     * @param height {Integer} The cell's (border-box) height in pixel\n     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of\n     *    horizontal paddings and borders\n     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of\n     *    vertical paddings and borders\n     * @return {String} The CSS style string for the cell size\n     */\n    _getCellSizeStyle(width, height, insetX, insetY) {\n      var style = \"\";\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\n        width -= insetX;\n        height -= insetY;\n      }\n\n      style += \"width:\" + Math.max(width, 0) + \"px;\";\n      style += \"height:\" + Math.max(height, 0) + \"px;\";\n\n      return style;\n    },\n\n    // interface implementation\n    createDataCellHtml(cellInfo, htmlArr) {\n      htmlArr.push(\n        '<div class=\"',\n        this._getCellClass(cellInfo),\n        '\" style=\"',\n        \"left:\",\n        cellInfo.styleLeft,\n        \"px;\",\n        this._getCellSizeStyle(\n          cellInfo.styleWidth,\n          cellInfo.styleHeight,\n          this._insetX,\n          this._insetY\n        ),\n\n        this._getCellStyle(cellInfo),\n        '\" ',\n        'data-qx-table-cell-row=\"',\n        cellInfo.row,\n        '\" ',\n        'data-qx-table-cell-col=\"',\n        cellInfo.col,\n        '\" ',\n        this._getCellAttributes(cellInfo),\n        \">\" + this._getContentHtml(cellInfo),\n        \"</div>\"\n      );\n    }\n  },\n\n  destruct() {\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\",\n        this._onChangeTheme,\n        this\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}