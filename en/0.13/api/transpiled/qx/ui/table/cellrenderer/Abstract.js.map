{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "implement",
    "ui",
    "table",
    "ICellRenderer",
    "extend",
    "core",
    "Object",
    "construct",
    "cr",
    "cellrenderer",
    "Abstract",
    "__clazz",
    "_createStyleSheet",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "_onChangeTheme",
    "properties",
    "defaultCellStyle",
    "init",
    "check",
    "nullable",
    "members",
    "Environment",
    "select",
    "bom",
    "Stylesheet",
    "removeAllRules",
    "stylesheet",
    "_insetX",
    "_insetY",
    "colorMgr",
    "Color",
    "element",
    "Style",
    "compile",
    "position",
    "top",
    "overflow",
    "whiteSpace",
    "borderRight",
    "resolve",
    "padding",
    "cursor",
    "textOverflow",
    "userSelect",
    "get",
    "BoxSizing",
    "createElement",
    "_getCellClass",
    "cellInfo",
    "_getCellStyle",
    "style",
    "_getCellAttributes",
    "cellId",
    "toHashCode",
    "row",
    "col",
    "readOnly",
    "editable",
    "undefined",
    "_getContentHtml",
    "value",
    "_getCellSizeStyle",
    "width",
    "height",
    "insetX",
    "insetY",
    "Math",
    "max",
    "createDataCellHtml",
    "htmlArr",
    "push",
    "styleLeft",
    "styleWidth",
    "styleHeight",
    "destruct",
    "removeListener"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * An abstract data cell renderer that does the basic coloring\n * (borders, selected look, ...).\n *\n * @require(qx.bom.Stylesheet)\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Abstract\", {\n  type: \"abstract\",\n  implement: qx.ui.table.ICellRenderer,\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n\n    var cr = qx.ui.table.cellrenderer.Abstract;\n    if (!cr.__clazz) {\n      cr.__clazz = this.self(arguments);\n      this._createStyleSheet();\n\n      // add dynamic theme listener\n      if (qx.core.Environment.get(\"qx.dyntheme\")) {\n        qx.theme.manager.Meta.getInstance().addListener(\n          \"changeTheme\",\n          this._onChangeTheme,\n          this\n        );\n      }\n    }\n  },\n\n  properties: {\n    /**\n     * The default cell style. The value of this property will be provided\n     * to the cell renderer as cellInfo.style.\n     */\n    defaultCellStyle: {\n      init: null,\n      check: \"String\",\n      nullable: true\n    }\n  },\n\n  members: {\n    /**\n     * Handler for the theme change.\n     * @signature function()\n     */\n    _onChangeTheme: qx.core.Environment.select(\"qx.dyntheme\", {\n      true() {\n        qx.bom.Stylesheet.removeAllRules(\n          qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet\n        );\n\n        this._createStyleSheet();\n      },\n      false: null\n    }),\n\n    /**\n     * the sum of the horizontal insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetX: 6 + 6 + 1, // paddingLeft + paddingRight + borderRight\n\n    /**\n     * the sum of the vertical insets. This is needed to compute the box model\n     * independent size\n     */\n    _insetY: 0,\n\n    /**\n     * Creates the style sheet used for the table cells.\n     */\n    _createStyleSheet() {\n      var colorMgr = qx.theme.manager.Color.getInstance();\n      var stylesheet =\n        \".qooxdoo-table-cell {\" +\n        qx.bom.element.Style.compile({\n          position: \"absolute\",\n          top: \"0px\",\n          overflow: \"hidden\",\n          whiteSpace: \"nowrap\",\n          borderRight: \"1px solid \" + colorMgr.resolve(\"table-column-line\"),\n          padding: \"0px 6px\",\n          cursor: \"default\",\n          textOverflow: \"ellipsis\",\n          userSelect: \"none\"\n        }) +\n        \"} \" +\n        \".qooxdoo-table-cell-right { text-align:right } \" +\n        \".qooxdoo-table-cell-italic { font-style:italic} \" +\n        \".qooxdoo-table-cell-bold { font-weight:bold } \";\n\n      if (qx.core.Environment.get(\"css.boxsizing\")) {\n        stylesheet +=\n          \".qooxdoo-table-cell {\" +\n          qx.bom.element.BoxSizing.compile(\"content-box\") +\n          \"}\";\n      }\n\n      qx.ui.table.cellrenderer.Abstract.__clazz.stylesheet =\n        qx.bom.Stylesheet.createElement(stylesheet);\n    },\n\n    /**\n     * Get a string of the cell element's HTML classes.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} cellInfo of the cell\n     * @return {String} The table cell HTML classes as string.\n     */\n    _getCellClass(cellInfo) {\n      return \"qooxdoo-table-cell\";\n    },\n\n    /**\n     * Returns the CSS styles that should be applied to the main div of this\n     * cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {var} the CSS styles of the main div.\n     */\n    _getCellStyle(cellInfo) {\n      return cellInfo.style || \"\";\n    },\n\n    /**\n     * Retrieve any extra attributes the cell renderer wants applied to this\n     * cell.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     *\n     * @return {String}\n     *   The extra attributes to be applied to this cell.\n     */\n    _getCellAttributes(cellInfo) {\n      const cellId =\n        \"qooxdoo-table-cell-\" +\n        cellInfo.table.toHashCode() +\n        \"-\" +\n        cellInfo.row +\n        \"-\" +\n        cellInfo.col;\n      const readOnly =\n        cellInfo.editable !== null && cellInfo.editable !== undefined\n          ? !cellInfo.editable\n          : true;\n      return \"id=\" + cellId + \" role=gridcell aria-readonly=\" + readOnly;\n    },\n\n    /**\n     * Returns the HTML that should be used inside the main div of this cell.\n     *\n     * This method may be overridden by sub classes.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {String} the inner HTML of the cell.\n     */\n    _getContentHtml(cellInfo) {\n      return cellInfo.value || \"\";\n    },\n\n    /**\n     * Get the cell size taking the box model into account\n     *\n     * @param width {Integer} The cell's (border-box) width in pixel\n     * @param height {Integer} The cell's (border-box) height in pixel\n     * @param insetX {Integer} The cell's horizontal insets, i.e. the sum of\n     *    horizontal paddings and borders\n     * @param insetY {Integer} The cell's vertical insets, i.e. the sum of\n     *    vertical paddings and borders\n     * @return {String} The CSS style string for the cell size\n     */\n    _getCellSizeStyle(width, height, insetX, insetY) {\n      var style = \"\";\n      if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\n        width -= insetX;\n        height -= insetY;\n      }\n\n      style += \"width:\" + Math.max(width, 0) + \"px;\";\n      style += \"height:\" + Math.max(height, 0) + \"px;\";\n\n      return style;\n    },\n\n    // interface implementation\n    createDataCellHtml(cellInfo, htmlArr) {\n      htmlArr.push(\n        '<div class=\"',\n        this._getCellClass(cellInfo),\n        '\" style=\"',\n        \"left:\",\n        cellInfo.styleLeft,\n        \"px;\",\n        this._getCellSizeStyle(\n          cellInfo.styleWidth,\n          cellInfo.styleHeight,\n          this._insetX,\n          this._insetY\n        ),\n\n        this._getCellStyle(cellInfo),\n        '\" ',\n        'data-qx-table-cell-row=\"',\n        cellInfo.row,\n        '\" ',\n        'data-qx-table-cell-col=\"',\n        cellInfo.col,\n        '\" ',\n        this._getCellAttributes(cellInfo),\n        \">\" + this._getContentHtml(cellInfo),\n        \"</div>\"\n      );\n    }\n  },\n\n  destruct() {\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\",\n        this._onChangeTheme,\n        this\n      );\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}