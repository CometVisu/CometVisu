{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "Default",
    "members",
    "_getContentHtml",
    "cellInfo",
    "value",
    "replace",
    "bom",
    "String",
    "escape",
    "_formatValue",
    "Password"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Password.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2007 by Christian Boulanger\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Boulanger (cboulanger)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A cell renderer which hides cell values such as passwords form view\r\n * by masking them by *s\r\n *\r\n */\r\nqx.Class.define(\"qx.ui.table.cellrenderer.Password\", {\r\n  extend: qx.ui.table.cellrenderer.Default,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /**\r\n     * Overridden; called whenever the cell updates.\r\n     *\r\n     * @param cellInfo {Map} The information about the cell.\r\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\r\n     * @return {String}\r\n     */\r\n    _getContentHtml(cellInfo) {\r\n      var value = cellInfo.value;\r\n      if (value === null) {\r\n        value = \"\";\r\n      }\r\n      cellInfo.value = value.replace(/./g, \"*\");\r\n      return qx.bom.String.escape(this._formatValue(cellInfo));\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mCAAmC,EAAE;IACnDC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO;IAExC;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,eAAe,WAAAA,gBAACC,QAAQ,EAAE;QACxB,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAAK;QAC1B,IAAIA,KAAK,KAAK,IAAI,EAAE;UAClBA,KAAK,GAAG,EAAE;QACZ;QACAD,QAAQ,CAACC,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QACzC,OAAOf,EAAE,CAACgB,GAAG,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACC,YAAY,CAACN,QAAQ,CAAC,CAAC;MAC1D;IACF;EACF,CAAC,CAAC;EAjDFb,EAAE,CAACO,EAAE,CAACC,KAAK,CAACC,YAAY,CAACW,QAAQ,CAACjB,aAAa,GAAGA,aAAa;AAAC"
}