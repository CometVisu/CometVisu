{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "AbstractImage",
    "construct",
    "width",
    "height",
    "__imageWidth",
    "__imageHeight",
    "__am",
    "util",
    "AliasManager",
    "getInstance",
    "members",
    "_identifyImage",
    "cellInfo",
    "imageHints",
    "imageWidth",
    "imageHeight",
    "value",
    "url",
    "resolve",
    "tooltip",
    "destruct",
    "Image"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Image.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 by Tartan Solutions, Inc, http://www.tartansolutions.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n   Authors:\n     * Dan Hummon\n\n************************************************************************ */\n\n/**\n * The image cell renderer renders image into table cells.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Image\", {\n  extend: qx.ui.table.cellrenderer.AbstractImage,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param height {Integer?16} The height of the image. The default is 16.\n   * @param width {Integer?16} The width of the image. The default is 16.\n   */\n  construct(width, height) {\n    super();\n\n    if (width) {\n      this.__imageWidth = width;\n    }\n\n    if (height) {\n      this.__imageHeight = height;\n    }\n\n    this.__am = qx.util.AliasManager.getInstance();\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __am: null,\n    __imageHeight: 16,\n    __imageWidth: 16,\n\n    // overridden\n    _identifyImage(cellInfo) {\n      var imageHints = {\n        imageWidth: this.__imageWidth,\n        imageHeight: this.__imageHeight\n      };\n\n      if (cellInfo.value == \"\") {\n        imageHints.url = null;\n      } else {\n        imageHints.url = this.__am.resolve(cellInfo.value);\n      }\n\n      imageHints.tooltip = cellInfo.tooltip;\n\n      return imageHints;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__am = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gCAAhB,EAAkD;IAChDC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,YAAZ,CAAyBC,aADe;;IAGhD;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;IACEC,SAbgD,qBAatCC,KAbsC,EAa/BC,MAb+B,EAavB;MACvB;;MAEA,IAAID,KAAJ,EAAW;QACT,KAAKE,SAAL,GAAoBF,KAApB;MACD;;MAED,IAAIC,MAAJ,EAAY;QACV,KAAKE,SAAL,GAAqBF,MAArB;MACD;;MAED,KAAKG,SAAL,GAAYhB,EAAE,CAACiB,IAAH,CAAQC,YAAR,CAAqBC,WAArB,EAAZ;IACD,CAzB+C;;IA2BhD;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACPJ,SAAI,EAAE,IADC;MAEPD,SAAa,EAAE,EAFR;MAGPD,SAAY,EAAE,EAHP;MAKP;MACAO,cANO,0BAMQC,QANR,EAMkB;QACvB,IAAIC,UAAU,GAAG;UACfC,UAAU,EAAE,KAAKV,SADF;UAEfW,WAAW,EAAE,KAAKV;QAFH,CAAjB;;QAKA,IAAIO,QAAQ,CAACI,KAAT,IAAkB,EAAtB,EAA0B;UACxBH,UAAU,CAACI,GAAX,GAAiB,IAAjB;QACD,CAFD,MAEO;UACLJ,UAAU,CAACI,GAAX,GAAiB,KAAKX,SAAL,CAAUY,OAAV,CAAkBN,QAAQ,CAACI,KAA3B,CAAjB;QACD;;QAEDH,UAAU,CAACM,OAAX,GAAqBP,QAAQ,CAACO,OAA9B;QAEA,OAAON,UAAP;MACD;IArBM,CAjCuC;;IAyDhD;AACF;AACA;AACA;AACA;IAEEO,QA/DgD,sBA+DrC;MACT,KAAKd,SAAL,GAAY,IAAZ;IACD;EAjE+C,CAAlD;EApBAhB,EAAE,CAACO,EAAH,CAAMC,KAAN,CAAYC,YAAZ,CAAyBsB,KAAzB,CAA+B5B,aAA/B,GAA+CA,aAA/C"
}