{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/AbstractImage.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "Abstract",
    "type",
    "construct",
    "clazz",
    "stylesheet",
    "bom",
    "Stylesheet",
    "createElement",
    "properties",
    "repeat",
    "check",
    "value",
    "valid",
    "includes",
    "init",
    "members",
    "__defaultWidth",
    "__defaultHeight",
    "__imageData",
    "_identifyImage",
    "cellInfo",
    "Error",
    "_getImageInfos",
    "imageData",
    "url",
    "tooltip",
    "imageWidth",
    "imageHeight",
    "sizes",
    "__getImageSize",
    "width",
    "height",
    "source",
    "ResourceManager",
    "util",
    "getInstance",
    "ImageLoader",
    "io",
    "has",
    "getImageWidth",
    "getImageHeight",
    "isLoaded",
    "getWidth",
    "getHeight",
    "createDataCellHtml",
    "htmlArr",
    "_getCellClass",
    "_getContentHtml",
    "content",
    "srcUrl",
    "highResolutionSource",
    "findHighResolutionSource",
    "style",
    "display",
    "core",
    "Environment",
    "get",
    "verticalAlign",
    "position",
    "getCombinedFormat",
    "element",
    "Decoration",
    "create",
    "getRepeat",
    "_getCellAttributes",
    "destruct",
    "AbstractImage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Carsten Lergenmueller (carstenl)\n\n************************************************************************ */\n\n/**\n * A template class for cell renderer, which display images. Concrete\n * implementations must implement the method {@link #_identifyImage}.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.AbstractImage\",\n{\n  extend : qx.ui.table.cellrenderer.Abstract,\n  type : \"abstract\",\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    var clazz = this.self(arguments);\n    if (!clazz.stylesheet)\n    {\n      clazz.stylesheet = qx.bom.Stylesheet.createElement(\n        \".qooxdoo-table-cell-icon {\" +\n        \"  text-align:center;\" +\n        \"}\"\n      );\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    /**\n     * Whether to repeat or scale the image.\n     *\n     * @param repeat {String}\n     *   One of\n     *     <code>scale</code>,\n     *     <code>scale-x</code>,\n     *     <code>scale-y</code>,\n     *     <code>repeat</code>,\n     *     <code>repeat-x</code>,\n     *     <code>repeat-y</code>,\n     *     <code>no-repeat</code>\n    */\n    repeat :\n    {\n      check : function(value)\n      {\n        var valid =\n          [\n            \"scale\",\n            \"scale-x\",\n            \"scale-y\",\n            \"repeat\",\n            \"repeat-x\",\n            \"repeat-y\",\n            \"no-repeat\"\n          ];\n        return valid.includes(value);\n      },\n      init  : \"no-repeat\"\n    }\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __defaultWidth : 16,\n    __defaultHeight : 16,\n    __imageData : null,\n\n\n    /**\n     * Identifies the Image to show. This is a template method, which must be\n     * implemented by sub classes.\n     *\n     * @abstract\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} A map having the following attributes:\n     *           <ul>\n     *           <li>\n     *             \"url\": (type string) must be the URL of the image to show.\n     *             The url given must either be managed by the {@link qx.util.ResourceManager}\n     *             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n     *             the renderer knows the dimensions and the format of the image.\n     *           </li>\n     *           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n     *           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n     *           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n     *           </ul>\n     * @throws {Error} the abstract function warning.\n     */\n    _identifyImage : function(cellInfo) {\n      throw new Error(\"_identifyImage is abstract\");\n    },\n\n\n    /**\n     * Retrieves the image infos.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} Map with an \"url\" attribute (type string)\n     *                 holding the URL of the image to show\n     *                 and a \"tooltip\" attribute\n     *                 (type string) being the tooltip text (or null if none was specified)\n     */\n    _getImageInfos : function(cellInfo)\n    {\n      // Query the subclass about image and tooltip\n      var imageData = this._identifyImage(cellInfo);\n\n      // If subclass refuses to give map, construct it with required properties\n      // If no map is given, but instead a string, assume that this string is\n      // the URL of the image [BUG #4289]\n      if (imageData == null || typeof imageData == \"string\")\n      {\n        imageData =\n        {\n          url : imageData,\n          tooltip : null\n        };\n      }\n\n      // If sizes are not included in map given by subclass,\n      // fall-back to calculated image size\n      if (!imageData.imageWidth || !imageData.imageHeight)\n      {\n        var sizes = this.__getImageSize(imageData.url);\n\n        imageData.imageWidth = sizes.width;\n        imageData.imageHeight = sizes.height;\n      }\n\n      // Add width and height keys to map [BUG #4289]\n      // - [width|height] is read by _getContentHtml()\n      // - [imageWidth|imageHeight] is possibly read in legacy applications\n      imageData.width = imageData.imageWidth;\n      imageData.height = imageData.imageHeight;\n\n      return imageData;\n    },\n\n\n    /**\n     * Compute the size of the given image\n     *\n     * @param source {String} the image URL\n     * @return {Map} A map containing the image's <code>width</code> and\n     *    <code>height</code>\n     */\n    __getImageSize : function(source)\n    {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var ImageLoader = qx.io.ImageLoader;\n      var width, height;\n\n      // Detect if the image registry knows this image\n      if (ResourceManager.has(source))\n      {\n        width = ResourceManager.getImageWidth(source);\n        height = ResourceManager.getImageHeight(source);\n      }\n      else if (ImageLoader.isLoaded(source))\n      {\n        width = ImageLoader.getWidth(source);\n        height = ImageLoader.getHeight(source);\n      }\n      else\n      {\n        width = this.__defaultWidth;\n        height = this.__defaultHeight;\n      }\n\n      return {width : width, height : height};\n    },\n\n\n    // overridden\n    createDataCellHtml : function(cellInfo, htmlArr)\n    {\n      this.__imageData = this._getImageInfos(cellInfo);\n      return this.base(arguments, cellInfo, htmlArr);\n    },\n\n\n    // overridden\n    _getCellClass : function(cellInfo) {\n      return this.base(arguments) + \" qooxdoo-table-cell-icon\";\n    },\n\n\n    // overridden\n    _getContentHtml : function(cellInfo) {\n      var content = \"<div></div>\";\n      // set image\n      if (this.__imageData.url) {\n        var srcUrl = this.__imageData.url;\n        var highResolutionSource = qx.util.ResourceManager.getInstance().findHighResolutionSource(this.__imageData.url);\n        if (highResolutionSource) {\n          srcUrl = highResolutionSource;\n        }\n        var style = {\n          width: this.__imageData.width + \"px\",\n          height: this.__imageData.height + \"px\",\n          display: qx.core.Environment.get(\"css.inlineblock\"),\n          verticalAlign: \"middle\",\n          position: \"static\"\n        }\n        if (qx.util.ResourceManager.getInstance().getCombinedFormat(this.__imageData.url) === \"\") {\n          // background size is critical for high-resolution images but breaks combined images\n          style[\"background-size\"] = this.__imageData.width + \"px \" + this.__imageData.height + \"px\";\n        }\n        content = qx.bom.element.Decoration.create(srcUrl, this.getRepeat(), style);\n      }\n      return content;\n    },\n\n\n    // overridden\n    _getCellAttributes : function(cellInfo)\n    {\n      var tooltip = this.__imageData.tooltip;\n\n      if (tooltip) {\n        return \"title='\" + tooltip + \"'\";\n      } else {\n        return \"\";\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function()\n  {\n    this.__imageData = null;\n  }\n});\n"
  ]
}