{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "Abstract",
    "type",
    "construct",
    "constructor",
    "call",
    "clazz",
    "AbstractImage",
    "stylesheet",
    "bom",
    "Stylesheet",
    "createElement",
    "properties",
    "repeat",
    "check",
    "value",
    "valid",
    "includes",
    "init",
    "members",
    "__defaultWidth",
    "__defaultHeight",
    "__imageData",
    "_identifyImage",
    "cellInfo",
    "Error",
    "_getImageInfos",
    "imageData",
    "url",
    "tooltip",
    "imageWidth",
    "imageHeight",
    "sizes",
    "__getImageSize",
    "width",
    "height",
    "__P_665_3",
    "source",
    "ResourceManager",
    "util",
    "getInstance",
    "ImageLoader",
    "io",
    "has",
    "getImageWidth",
    "getImageHeight",
    "isLoaded",
    "getWidth",
    "getHeight",
    "createDataCellHtml",
    "htmlArr",
    "superclass",
    "prototype",
    "_getCellClass",
    "_getContentHtml",
    "content",
    "srcUrl",
    "highResolutionSource",
    "findHighResolutionSource",
    "style",
    "display",
    "core",
    "Environment",
    "get",
    "verticalAlign",
    "position",
    "getCombinedFormat",
    "element",
    "Decoration",
    "create",
    "getRepeat",
    "_getCellAttributes",
    "baseAttrs",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/AbstractImage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Carsten Lergenmueller (carstenl)\n\n************************************************************************ */\n\n/**\n * A template class for cell renderer, which display images. Concrete\n * implementations must implement the method {@link #_identifyImage}.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.AbstractImage\", {\n  extend: qx.ui.table.cellrenderer.Abstract,\n  type: \"abstract\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    var clazz = this.self(arguments);\n    if (!clazz.stylesheet) {\n      clazz.stylesheet = qx.bom.Stylesheet.createElement(\n        \".qooxdoo-table-cell-icon {\" + \"  text-align:center;\" + \"}\"\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties: {\n    /**\n     * Whether to repeat or scale the image.\n     *\n     * @param repeat {String}\n     *   One of\n     *     <code>scale</code>,\n     *     <code>scale-x</code>,\n     *     <code>scale-y</code>,\n     *     <code>repeat</code>,\n     *     <code>repeat-x</code>,\n     *     <code>repeat-y</code>,\n     *     <code>no-repeat</code>\n     */\n    repeat: {\n      check(value) {\n        var valid = [\n          \"scale\",\n          \"scale-x\",\n          \"scale-y\",\n          \"repeat\",\n          \"repeat-x\",\n          \"repeat-y\",\n          \"no-repeat\"\n        ];\n\n        return valid.includes(value);\n      },\n      init: \"no-repeat\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __defaultWidth: 16,\n    __defaultHeight: 16,\n    __imageData: null,\n\n    /**\n     * Identifies the Image to show. This is a template method, which must be\n     * implemented by sub classes.\n     *\n     * @abstract\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} A map having the following attributes:\n     *           <ul>\n     *           <li>\n     *             \"url\": (type string) must be the URL of the image to show.\n     *             The url given must either be managed by the {@link qx.util.ResourceManager}\n     *             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n     *             the renderer knows the dimensions and the format of the image.\n     *           </li>\n     *           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n     *           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n     *           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n     *           </ul>\n     * @throws {Error} the abstract function warning.\n     */\n    _identifyImage(cellInfo) {\n      throw new Error(\"_identifyImage is abstract\");\n    },\n\n    /**\n     * Retrieves the image infos.\n     *\n     * @param cellInfo {Map} The information about the cell.\n     *          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Map} Map with an \"url\" attribute (type string)\n     *                 holding the URL of the image to show\n     *                 and a \"tooltip\" attribute\n     *                 (type string) being the tooltip text (or null if none was specified)\n     */\n    _getImageInfos(cellInfo) {\n      // Query the subclass about image and tooltip\n      var imageData = this._identifyImage(cellInfo);\n\n      // If subclass refuses to give map, construct it with required properties\n      // If no map is given, but instead a string, assume that this string is\n      // the URL of the image [BUG #4289]\n      if (imageData == null || typeof imageData == \"string\") {\n        imageData = {\n          url: imageData,\n          tooltip: null\n        };\n      }\n\n      // If sizes are not included in map given by subclass,\n      // fall-back to calculated image size\n      if (!imageData.imageWidth || !imageData.imageHeight) {\n        var sizes = this.__getImageSize(imageData.url);\n\n        imageData.imageWidth = sizes.width;\n        imageData.imageHeight = sizes.height;\n      }\n\n      // Add width and height keys to map [BUG #4289]\n      // - [width|height] is read by _getContentHtml()\n      // - [imageWidth|imageHeight] is possibly read in legacy applications\n      imageData.width = imageData.imageWidth;\n      imageData.height = imageData.imageHeight;\n\n      return imageData;\n    },\n\n    /**\n     * Compute the size of the given image\n     *\n     * @param source {String} the image URL\n     * @return {Map} A map containing the image's <code>width</code> and\n     *    <code>height</code>\n     */\n    __getImageSize(source) {\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n      var ImageLoader = qx.io.ImageLoader;\n      var width, height;\n\n      // Detect if the image registry knows this image\n      if (ResourceManager.has(source)) {\n        width = ResourceManager.getImageWidth(source);\n        height = ResourceManager.getImageHeight(source);\n      } else if (ImageLoader.isLoaded(source)) {\n        width = ImageLoader.getWidth(source);\n        height = ImageLoader.getHeight(source);\n      } else {\n        width = this.__defaultWidth;\n        height = this.__defaultHeight;\n      }\n\n      return { width: width, height: height };\n    },\n\n    // overridden\n    createDataCellHtml(cellInfo, htmlArr) {\n      this.__imageData = this._getImageInfos(cellInfo);\n      return super.createDataCellHtml(cellInfo, htmlArr);\n    },\n\n    // overridden\n    _getCellClass(cellInfo) {\n      return super._getCellClass() + \" qooxdoo-table-cell-icon\";\n    },\n\n    // overridden\n    _getContentHtml(cellInfo) {\n      var content = \"<div></div>\";\n      // set image\n      if (this.__imageData.url) {\n        var srcUrl = this.__imageData.url;\n        var highResolutionSource =\n          qx.util.ResourceManager.getInstance().findHighResolutionSource(\n            this.__imageData.url\n          );\n\n        if (highResolutionSource) {\n          srcUrl = highResolutionSource;\n        }\n        var style = {\n          width: this.__imageData.width + \"px\",\n          height: this.__imageData.height + \"px\",\n          display: qx.core.Environment.get(\"css.inlineblock\"),\n          verticalAlign: \"middle\",\n          position: \"static\"\n        };\n\n        if (\n          qx.util.ResourceManager.getInstance().getCombinedFormat(\n            this.__imageData.url\n          ) === \"\"\n        ) {\n          // background size is critical for high-resolution images but breaks combined images\n          style[\"background-size\"] =\n            this.__imageData.width + \"px \" + this.__imageData.height + \"px\";\n        }\n        content = qx.bom.element.Decoration.create(\n          srcUrl,\n          this.getRepeat(),\n          style\n        );\n      }\n      return content;\n    },\n\n    // overridden\n    _getCellAttributes(cellInfo) {\n      let baseAttrs = super._getCellAttributes(cellInfo);\n      if (!baseAttrs) {\n        baseAttrs = \"\";\n      }\n\n      var tooltip = this.__imageData.tooltip;\n      if (tooltip) {\n        return baseAttrs + \" title='\" + tooltip + \"'\";\n      } else {\n        return baseAttrs;\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__imageData = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}