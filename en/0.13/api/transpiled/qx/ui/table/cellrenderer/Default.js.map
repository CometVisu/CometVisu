{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "cellrenderer",
    "Abstract",
    "statics",
    "STYLEFLAG_ALIGN_RIGHT",
    "STYLEFLAG_BOLD",
    "STYLEFLAG_ITALIC",
    "_numberFormat",
    "properties",
    "useAutoAlign",
    "check",
    "init",
    "members",
    "_getStyleFlags",
    "cellInfo",
    "getUseAutoAlign",
    "value",
    "Default",
    "_getCellClass",
    "cellClass",
    "stylesToApply",
    "_getContentHtml",
    "bom",
    "String",
    "escape",
    "_formatValue",
    "res",
    "util",
    "format",
    "NumberFormat",
    "setMaximumFractionDigits",
    "Date",
    "DateFormat",
    "getDateInstance",
    "toString"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/cellrenderer/Default.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * The default data cell renderer.\n */\nqx.Class.define(\"qx.ui.table.cellrenderer.Default\", {\n  extend: qx.ui.table.cellrenderer.Abstract,\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    STYLEFLAG_ALIGN_RIGHT: 1,\n    STYLEFLAG_BOLD: 2,\n    STYLEFLAG_ITALIC: 4,\n    _numberFormat: null\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Whether the alignment should automatically be set according to the cell value.\n     * If true numbers will be right-aligned.\n     */\n    useAutoAlign: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /**\n     * Determines the styles to apply to the cell\n     *\n     * @param cellInfo {Map} cellInfo of the cell\n     *     See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {Integer} the sum of any of the STYLEFLAGS defined below\n     */\n    _getStyleFlags(cellInfo) {\n      if (this.getUseAutoAlign()) {\n        if (typeof cellInfo.value == \"number\") {\n          return qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT;\n        }\n      }\n      return 0;\n    },\n\n    // overridden\n    _getCellClass(cellInfo) {\n      var cellClass = super._getCellClass(cellInfo);\n      if (!cellClass) {\n        return \"\";\n      }\n\n      var stylesToApply = this._getStyleFlags(cellInfo);\n\n      if (\n        stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_ALIGN_RIGHT\n      ) {\n        cellClass += \" qooxdoo-table-cell-right\";\n      }\n\n      if (stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_BOLD) {\n        cellClass += \" qooxdoo-table-cell-bold\";\n      }\n\n      if (stylesToApply & qx.ui.table.cellrenderer.Default.STYLEFLAG_ITALIC) {\n        cellClass += \" qooxdoo-table-cell-italic\";\n      }\n\n      return cellClass;\n    },\n\n    // overridden\n    _getContentHtml(cellInfo) {\n      return qx.bom.String.escape(this._formatValue(cellInfo));\n    },\n\n    /**\n     * Formats a value.\n     *\n     * @param cellInfo {Map} A map containing the information about the cell to\n     *          create. This map has the same structure as in\n     *          {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.\n     * @return {String} the formatted value.\n     */\n    _formatValue(cellInfo) {\n      var value = cellInfo.value;\n      var res;\n\n      if (value == null) {\n        return \"\";\n      }\n\n      if (typeof value == \"string\") {\n        return value;\n      } else if (typeof value == \"number\") {\n        if (!qx.ui.table.cellrenderer.Default._numberFormat) {\n          qx.ui.table.cellrenderer.Default._numberFormat =\n            new qx.util.format.NumberFormat();\n          qx.ui.table.cellrenderer.Default._numberFormat.setMaximumFractionDigits(\n            2\n          );\n        }\n\n        res = qx.ui.table.cellrenderer.Default._numberFormat.format(value);\n      } else if (value instanceof Date) {\n        res = qx.util.format.DateFormat.getDateInstance().format(value);\n      } else {\n        res = value.toString();\n      }\n\n      return res;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}