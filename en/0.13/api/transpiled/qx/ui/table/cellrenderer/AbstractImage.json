{
  "className": "qx.ui.table.cellrenderer.AbstractImage",
  "packageName": "qx.ui.table.cellrenderer",
  "name": "AbstractImage",
  "superClass": "qx.ui.table.cellrenderer.Abstract",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 653
      },
      "end": {
        "line": 263,
        "column": 3,
        "index": 8097
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A template class for cell renderer, which display images. Concrete\n implementations must implement the method {@link #_identifyImage}.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 969
      },
      "end": {
        "line": 43,
        "column": 3,
        "index": 1208
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "repeat": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1762
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2050
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to repeat or scale the image.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "repeat {String}\n   One of\n     <code>scale</code>,\n     <code>scale-x</code>,\n     <code>scale-y</code>,\n     <code>repeat</code>,\n     <code>repeat-x</code>,\n     <code>repeat-y</code>,\n     <code>no-repeat</code>",
            "paramName": "repeat",
            "description": "\n   One of\n     <code>scale</code>,\n     <code>scale-x</code>,\n     <code>scale-y</code>,\n     <code>repeat</code>,\n     <code>repeat-x</code>,\n     <code>repeat-y</code>,\n     <code>no-repeat</code>",
            "type": "qx.ui.table.cellrenderer.String"
          }
        ]
      },
      "name": "repeat",
      "propertyType": "new",
      "init": "no-repeat",
      "check": "[[ ObjectMethod Function ]]",
      "defaultValue": "no-repeat"
    }
  },
  "members": {
    "__defaultWidth": {
      "location": {
        "start": {
          "line": 89,
          "column": 4,
          "index": 2258
        },
        "end": {
          "line": 89,
          "column": 22,
          "index": 2276
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__defaultHeight": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2282
        },
        "end": {
          "line": 90,
          "column": 23,
          "index": 2301
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__imageData": {
      "location": {
        "start": {
          "line": 91,
          "column": 4,
          "index": 2307
        },
        "end": {
          "line": 91,
          "column": 21,
          "index": 2324
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_identifyImage": {
      "location": {
        "start": {
          "line": 114,
          "column": 4,
          "index": 3432
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 3517
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Identifies the Image to show. This is a template method, which must be\n implemented by sub classes.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>",
            "type": "Map",
            "description": " A map having the following attributes:\n           <ul>\n           <li>\n             \"url\": (type string) must be the URL of the image to show.\n             The url given must either be managed by the {@link qx.util.ResourceManager}\n             or pre-loaded with {@link qx.io.ImageLoader}. This is to make sure that\n             the renderer knows the dimensions and the format of the image.\n           </li>\n           <li>\"imageWidth\": (type int) the width of the image in pixels.</li>\n           <li>\"imageHeight\": (type int) the height of the image in pixels.</li>\n           <li>\"tooltip\": (type string) must be the image tooltip text.</li>\n           </ul>"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} the abstract function warning.",
            "type": "Error",
            "description": " the abstract function warning."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getImageInfos": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3988
        },
        "end": {
          "line": 158,
          "column": 5,
          "index": 5107
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Retrieves the image infos.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cellInfo {Map} The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "paramName": "cellInfo",
            "description": " The information about the cell.\n          See {@link qx.ui.table.cellrenderer.Abstract#createDataCellHtml}.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "type string) being the tooltip text (or null if none was specified"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__getImageSize": {
      "location": {
        "start": {
          "line": 167,
          "column": 4,
          "index": 5327
        },
        "end": {
          "line": 185,
          "column": 5,
          "index": 5991
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compute the size of the given image</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {String} the image URL",
            "paramName": "source",
            "description": " the image URL",
            "type": "qx.ui.table.cellrenderer.String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing the image's <code>width</code> and\n    <code>height</code>",
            "type": "Map",
            "description": " A map containing the image's <code>width</code> and\n    <code>height</code>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "createDataCellHtml": {
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 6016
        },
        "end": {
          "line": 191,
          "column": 5,
          "index": 6175
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract",
        "qx.ui.table.ICellRenderer"
      ]
    },
    "_getCellClass": {
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 6200
        },
        "end": {
          "line": 196,
          "column": 5,
          "index": 6296
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_getContentHtml": {
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 6321
        },
        "end": {
          "line": 236,
          "column": 5,
          "index": 7505
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "_getCellAttributes": {
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 7530
        },
        "end": {
          "line": 251,
          "column": 5,
          "index": 7852
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "appearsIn": [
        "qx.ui.table.cellrenderer.Abstract"
      ]
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDefaultCellStyle": {
      "type": "function",
      "name": "getDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for defaultCellStyle"
          }
        ]
      }
    },
    "setDefaultCellStyle": {
      "type": "function",
      "name": "setDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultCellStyle</code>.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for defaultCellStyle"
          }
        ]
      }
    },
    "resetDefaultCellStyle": {
      "type": "function",
      "name": "resetDefaultCellStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.table.cellrenderer.Abstract",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultCellStyle</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultCellStyle}."
          }
        ]
      }
    },
    "getRepeat": {
      "type": "function",
      "name": "getRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for repeat"
          }
        ]
      }
    },
    "setRepeat": {
      "type": "function",
      "name": "setRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>repeat</code>.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for repeat"
          }
        ]
      }
    },
    "resetRepeat": {
      "type": "function",
      "name": "resetRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>repeat</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #repeat}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 260,
        "column": 2,
        "index": 8048
      },
      "end": {
        "line": 262,
        "column": 3,
        "index": 8093
      }
    },
    "jsdoc": {}
  },
  "descendants": [
    "qx.ui.table.cellrenderer.Boolean",
    "qx.ui.table.cellrenderer.Image"
  ]
}