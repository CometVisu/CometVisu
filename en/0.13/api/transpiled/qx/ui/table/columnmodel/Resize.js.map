{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "table",
    "columnmodel",
    "Basic",
    "include",
    "locale",
    "MTranslation",
    "construct",
    "constructor",
    "call",
    "__bInProgress",
    "__bAppeared",
    "properties",
    "behavior",
    "check",
    "init",
    "nullable",
    "apply",
    "event",
    "members",
    "__table",
    "_applyBehavior",
    "value",
    "old",
    "dispose",
    "_setNumColumns",
    "getOverallColumnCount",
    "setTableColumnModel",
    "numColumns",
    "Resize",
    "superclass",
    "prototype",
    "addListener",
    "_onappear",
    "_onTableWidthChanged",
    "_onverticalscrollbarchanged",
    "_addResetColumnWidthButton",
    "_oncolumnwidthchanged",
    "_onvisibilitychanged",
    "getBehavior",
    "setBehavior",
    "resizebehavior",
    "Default",
    "getTable",
    "data",
    "getData",
    "columnButton",
    "menu",
    "o",
    "factory",
    "add",
    "text",
    "tr",
    "onAppear",
    "getType",
    "_updateScrollerWidths",
    "_updateScrollBarVisibility",
    "onTableWidthChanged",
    "onVerticalScrollBarChanged",
    "Timer",
    "once",
    "isDisposed",
    "onColumnWidthChanged",
    "onVisibilityChanged",
    "destruct"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/columnmodel/Resize.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * A table column model that automatically resizes columns based on a\n * selected behavior.\n *\n * @see qx.ui.table.columnmodel.Basic\n */\nqx.Class.define(\"qx.ui.table.columnmodel.Resize\", {\n  extend: qx.ui.table.columnmodel.Basic,\n  include: qx.locale.MTranslation,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // We don't want to recursively call ourself based on our resetting of\n    // column sizes.  Track when we're resizing.\n    this.__bInProgress = false;\n\n    // Track when the table has appeared.  We want to ignore resize events\n    // until then since we won't be able to determine the available width\n    // anyway.\n    this.__bAppeared = false;\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The behavior to use.\n     *\n     * The provided behavior must extend {@link qx.ui.table.columnmodel.resizebehavior.Abstract} and\n     * implement the <i>onAppear</i>, <i>onTableWidthChanged</i>,\n     * <i>onColumnWidthChanged</i> and <i>onVisibilityChanged</i>methods.\n     */\n    behavior: {\n      check: \"qx.ui.table.columnmodel.resizebehavior.Abstract\",\n      init: null,\n      nullable: true,\n      apply: \"_applyBehavior\",\n      event: \"changeBehavior\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __bAppeared: null,\n    __bInProgress: null,\n    __table: null,\n\n    // Behavior modifier\n    _applyBehavior(value, old) {\n      if (old != null) {\n        old.dispose();\n        old = null;\n      }\n\n      // Tell the new behavior how many columns there are\n      value._setNumColumns(this.getOverallColumnCount());\n      value.setTableColumnModel(this);\n    },\n\n    /**\n     * Initializes the column model.\n     *\n     * @param numColumns {Integer} the number of columns the model should have.\n     * @param table {qx.ui.table.Table}\n     *   The table which this model is used for. This allows us access to\n     *   other aspects of the table, as the <i>behavior</i> sees fit.\n     */\n    init(numColumns, table) {\n      // Call our superclass\n      super.init(numColumns, table);\n\n      if (this.__table == null) {\n        this.__table = table;\n        // We'll do our column resizing when the table appears, ...\n        table.addListener(\"appear\", this._onappear, this);\n\n        // ... when the inner width of the table changes, ...\n        table.addListener(\"tableWidthChanged\", this._onTableWidthChanged, this);\n\n        // ... when a vertical scroll bar appears or disappears\n        table.addListener(\n          \"verticalScrollBarChanged\",\n          this._onverticalscrollbarchanged,\n          this\n        );\n\n        // We want to manipulate the button visibility menu\n        table.addListener(\n          \"columnVisibilityMenuCreateEnd\",\n          this._addResetColumnWidthButton,\n          this\n        );\n\n        // ... when columns are resized, ...\n        this.addListener(\"widthChanged\", this._oncolumnwidthchanged, this);\n\n        // ... and when a column visibility changes.\n        this.addListener(\"visibilityChanged\", this._onvisibilitychanged, this);\n      }\n\n      // Set the initial resize behavior\n      if (this.getBehavior() == null) {\n        this.setBehavior(new qx.ui.table.columnmodel.resizebehavior.Default());\n      }\n\n      // Tell the behavior how many columns there are\n      this.getBehavior()._setNumColumns(numColumns);\n    },\n\n    /**\n     * Get the table widget\n     *\n     * @return {qx.ui.table.Table} the table widget\n     */\n    getTable() {\n      return this.__table;\n    },\n\n    /**\n     * Reset the column widths to their \"onappear\" defaults.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"columnVisibilityMenuCreateEnd\" event indicating that the menu is\n     *   being generated.  The data is a map containing properties <i>table</i>\n     *   and <i>menu</i>.\n     *\n     */\n    _addResetColumnWidthButton(event) {\n      var data = event.getData();\n      var columnButton = data.columnButton;\n      var menu = data.menu;\n      var o;\n\n      // Add a separator between the column names and our reset button\n      o = columnButton.factory(\"separator\");\n      menu.add(o);\n\n      // Add a button to reset the column widths\n      o = columnButton.factory(\"user-button\", {\n        text: this.tr(\"Reset column widths\")\n      });\n\n      menu.add(o);\n      o.addListener(\"execute\", this._onappear, this);\n    },\n\n    /**\n     * Event handler for the \"appear\" event.\n     *\n     * @param event {qx.event.type.Event}\n     *   The \"onappear\" event object.\n     *\n     */\n    _onappear(event) {\n      // Is this a recursive call?\n      if (this.__bInProgress) {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\n          this.debug(\"onappear\");\n        }\n      }\n\n      // this handler is also called by the \"execute\" event of the menu button\n      this.getBehavior().onAppear(event, event.getType() !== \"appear\");\n\n      this.__table._updateScrollerWidths();\n      this.__table._updateScrollBarVisibility();\n\n      this.__bInProgress = false;\n\n      this.__bAppeared = true;\n    },\n\n    /**\n     * Event handler for the \"tableWidthChanged\" event.\n     *\n     * @param event {qx.event.type.Event}\n     *   The \"onwindowresize\" event object.\n     *\n     */\n    _onTableWidthChanged(event) {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared) {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\n          this.debug(\"ontablewidthchanged\");\n        }\n      }\n\n      this.getBehavior().onTableWidthChanged(event);\n      this.__bInProgress = false;\n    },\n\n    /**\n     * Event handler for the \"verticalScrollBarChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"verticalScrollBarChanged\" event object.  The data is a boolean\n     *   indicating whether a vertical scroll bar is now present.\n     *\n     */\n    _onverticalscrollbarchanged(event) {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared) {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\n          this.debug(\"onverticalscrollbarchanged\");\n        }\n      }\n\n      this.getBehavior().onVerticalScrollBarChanged(event);\n\n      qx.event.Timer.once(\n        function () {\n          if (this.__table && !this.__table.isDisposed()) {\n            this.__table._updateScrollerWidths();\n            this.__table._updateScrollBarVisibility();\n          }\n        },\n        this,\n        0\n      );\n\n      this.__bInProgress = false;\n    },\n\n    /**\n     * Event handler for the \"widthChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"widthChanged\" event object.\n     *\n     */\n    _oncolumnwidthchanged(event) {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared) {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\n          this.debug(\"oncolumnwidthchanged\");\n        }\n      }\n\n      this.getBehavior().onColumnWidthChanged(event);\n      this.__bInProgress = false;\n    },\n\n    /**\n     * Event handler for the \"visibilityChanged\" event.\n     *\n     * @param event {qx.event.type.Data}\n     *   The \"visibilityChanged\" event object.\n     *\n     */\n    _onvisibilitychanged(event) {\n      // Is this a recursive call or has the table not yet been rendered?\n      if (this.__bInProgress || !this.__bAppeared) {\n        // Yup.  Ignore it.\n        return;\n      }\n\n      this.__bInProgress = true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\n          this.debug(\"onvisibilitychanged\");\n        }\n      }\n\n      this.getBehavior().onVisibilityChanged(event);\n      this.__bInProgress = false;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n\n  destruct() {\n    var behavior = this.getBehavior();\n    if (behavior) {\n      behavior.dispose();\n    }\n    this.__table = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}