{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "addListener",
    "e",
    "contextMenu",
    "getContextMenu",
    "isDisposed",
    "hide",
    "setContextMenu",
    "getApplicationRoot",
    "remove",
    "dispose",
    "col",
    "getColumn",
    "contextMenuHandler",
    "getContextMenuHandler",
    "handlerContext",
    "__contextMenuHandlerContext",
    "tableModel",
    "getTableModel",
    "ui",
    "menu",
    "Menu",
    "preventDefault",
    "addListenerOnce",
    "bShowContextMenu",
    "call",
    "getRow",
    "__contextMenuHandler",
    "members",
    "setContextMenuHandler",
    "handler",
    "context",
    "destruct",
    "table",
    "MTableContextMenu"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/MTableContextMenu.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006-2009 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * This mixin allows easily adding handlers for context menus on table columns.\n */\nqx.Mixin.define(\"qx.ui.table.MTableContextMenu\", {\n  construct() {\n    // Add an event listener to handle context menu events.  The actual menu\n    // is built by a function registered with a call to\n    // setContextMenuHandler(col, handler).\n    this.addListener(\"cellContextmenu\", e => {\n      var contextMenu = this.getContextMenu();\n\n      // Dispose of any previously existing context menu\n      if (contextMenu && !contextMenu.isDisposed()) {\n        // Dispose of the context menu.\n        contextMenu.hide();\n        this.setContextMenu(null);\n        this.getApplicationRoot().remove(contextMenu);\n        contextMenu.dispose();\n        contextMenu = null;\n      }\n\n      // Get the context menu handler for the column on which the context\n      // menu request was issued.\n      var col = e.getColumn();\n      var contextMenuHandler = this.getContextMenuHandler(col);\n\n      // If there's no context menu handler for this column, we have nothing\n      // to do.\n      if (typeof contextMenuHandler !== \"function\") {\n        return;\n      }\n\n      // Get the context object for the handler function\n      var handlerContext = this.__contextMenuHandlerContext[col];\n\n      // Get the data model\n      var tableModel = this.getTableModel();\n\n      // Create a context menu for this tree.\n      contextMenu = new qx.ui.menu.Menu();\n\n      // Don't display context menus from the context menu\n      contextMenu.addListener(\"contextmenu\", function (e) {\n        e.preventDefault();\n      });\n\n      // This prevents the display of context menu on table header cells\n      contextMenu.addListenerOnce(\"disappear\", () => {\n        this.setContextMenu(null);\n      });\n\n      // Call the context menu handler for this column.\n      var bShowContextMenu = contextMenuHandler.call(\n        handlerContext,\n        col,\n        e.getRow(),\n        this,\n        tableModel,\n        contextMenu\n      );\n\n      // If we were told not to display the context menu...\n      if (!bShowContextMenu) {\n        // ... then we're all done here.\n        contextMenu.dispose();\n        return;\n      }\n\n      // Set the context menu\n      this.setContextMenu(contextMenu);\n    });\n\n    // Provide an array in which context menu handlers will be stored.  The\n    // array is indexed by column number.\n    this.__contextMenuHandler = [];\n    this.__contextMenuHandlerContext = [];\n  },\n\n  members: {\n    __contextMenuHandler: null,\n    __contextMenuHandlerContext: null,\n\n    /**\n     * Add a handler for a context menu which is initiated in a specific\n     * column.\n     *\n     * @param col {Integer}\n     *   The column number in which the context menu request originated\n     *\n     * @param handler {Function}\n     *   The function to call when a context menu request originates in the\n     *   specified column. The handler is called with the following arguments:\n     *   <ul>\n     *     <li>\n     *       <b>column</b>: (Integer)\n     *       The number of the column in which the right click was issued\n     *     </li>\n     *     <li>\n     *       <b>row</b>: (Integer)\n     *       The number of the row in which the right click was issued\n     *     </li>\n     *     <li>\n     *       <b>table</b>: {@link qx.ui.table.Table}\n     *       The table in which the right click was issued\n     *     </li>\n     *     <li>\n     *       <b>dataModel</b>: {@link qx.ui.table.model.Abstract}\n     *       Complete data model of the table\n     *     </li>\n     *     <li>\n     *       <b>contextMenu</b>: {@link qx.ui.menu.Menu}\n     *       Menu in which buttons can be added to implement this context menu\n     *     </li>\n     *   </ul>\n     *   The function must return a (Boolean), indicating whether the context\n     *   menu should be shown or not. The context menu will be shown when the\n     *   handler function returns <code>true</code>. When the handler function\n     *   returns <code>false</code> the context menu will <b>not</b> be shown.\n     *\n     * @param context {Object?this}\n     *   Optional execution context for the callback (i.e. \"this\").\n     *   If not provided, the {@link qx.ui.table.Table} object this mixin is\n     *   applied to is used.\n     *\n     */\n    setContextMenuHandler(col, handler, context) {\n      this.__contextMenuHandler[col] = handler;\n      this.__contextMenuHandlerContext[col] = context || this;\n    },\n\n    /**\n     * Return the registered context menu handler for a column.\n     *\n     * @param col {Integer}\n     *   The column number for which the context menu handler is requested\n     *\n     * @return {Function}\n     *   The handler function which has been registered for the specified\n     *   column. The arguments of the handler is documented in\n     *   {@link #setContextMenuHandler}.\n     */\n    getContextMenuHandler(col) {\n      return this.__contextMenuHandler[col];\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__contextMenuHandler = null;\n    this.__contextMenuHandlerContext = null;\n  }\n});\n"
  ],
  "mappings": "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"
}