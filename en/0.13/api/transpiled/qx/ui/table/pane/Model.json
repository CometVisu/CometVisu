{
  "className": "qx.ui.table.pane.Model",
  "packageName": "qx.ui.table.pane",
  "name": "Model",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 647
      },
      "end": {
        "line": 292,
        "column": 3,
        "index": 7875
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The model of a table pane. This model works as proxy to a\n {@link qx.ui.table.columnmodel.Basic} and manages the visual order of the columns shown in\n a {@link Pane}.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1049
      },
      "end": {
        "line": 46,
        "column": 3,
        "index": 1306
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "tableColumnModel {qx.ui.table.columnmodel.Basic} The TableColumnModel of which this\n    model is the proxy.",
          "paramName": "tableColumnModel",
          "description": " The TableColumnModel of which this\n    model is the proxy.",
          "type": "qx.ui.table.columnmodel.Basic"
        }
      ]
    }
  },
  "events": {
    "modelChanged": {
      "location": {
        "start": {
          "line": 56,
          "column": 4,
          "index": 1549
        },
        "end": {
          "line": 56,
          "column": 39,
          "index": 1584
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the model changed.</p>"
          }
        ]
      },
      "name": "modelChanged",
      "type": "qx.event.type.Event"
    }
  },
  "statics": {
    "EVENT_TYPE_MODEL_CHANGED": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1870
        },
        "end": {
          "line": 67,
          "column": 44,
          "index": 1910
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{string} The type of the event fired when the model changed."
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "properties": {
    "firstColumnX": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 2205
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 2299
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The visible x position of the first column this model should contain.</p>"
          }
        ]
      },
      "name": "firstColumnX",
      "propertyType": "new",
      "apply": "_applyFirstColumnX",
      "init": 0,
      "check": "Integer",
      "defaultValue": 0
    },
    "maxColumnCount": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2446
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2544
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The maximum number of columns this model should contain. If -1 this model will\n contain all remaining columns.</p>"
          }
        ]
      },
      "name": "maxColumnCount",
      "propertyType": "new",
      "apply": "_applyMaxColumnCount",
      "init": -1,
      "check": "Number",
      "defaultValue": -1
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__columnCount": {
      "location": {
        "start": {
          "line": 102,
          "column": 4,
          "index": 2752
        },
        "end": {
          "line": 102,
          "column": 23,
          "index": 2771
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__tableColumnModel": {
      "location": {
        "start": {
          "line": 103,
          "column": 4,
          "index": 2777
        },
        "end": {
          "line": 103,
          "column": 28,
          "index": 2801
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__defferedEventDispatcher": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2807
        },
        "end": {
          "line": 104,
          "column": 35,
          "index": 2838
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applyFirstColumnX": {
      "location": {
        "start": {
          "line": 107,
          "column": 4,
          "index": 2870
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2990
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "firstColumnX"
      ]
    },
    "_applyMaxColumnCount": {
      "location": {
        "start": {
          "line": 113,
          "column": 4,
          "index": 3022
        },
        "end": {
          "line": 116,
          "column": 5,
          "index": 3144
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "maxColumnCount"
      ]
    },
    "setTableColumnModel": {
      "location": {
        "start": {
          "line": 123,
          "column": 4,
          "index": 3306
        },
        "end": {
          "line": 151,
          "column": 5,
          "index": 4068
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Connects the table model to the column model</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "tableColumnModel {qx.ui.table.columnmodel.Basic} the column model",
            "paramName": "tableColumnModel",
            "description": " the column model",
            "type": "qx.ui.table.columnmodel.Basic"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onColVisibilityChanged": {
      "location": {
        "start": {
          "line": 158,
          "column": 4,
          "index": 4207
        },
        "end": {
          "line": 162,
          "column": 5,
          "index": 4326
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the visibility of a column has changed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {Map} the event.",
            "paramName": "evt",
            "description": " the event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onHeaderCellRendererChanged": {
      "location": {
        "start": {
          "line": 169,
          "column": 4,
          "index": 4468
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4558
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called when the cell renderer of a column has changed.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "evt {Map} the event.",
            "paramName": "evt",
            "description": " the event.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getColumnCount": {
      "location": {
        "start": {
          "line": 178,
          "column": 4,
          "index": 4702
        },
        "end": {
          "line": 192,
          "column": 5,
          "index": 5182
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the number of columns in this model.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the number of columns in this model.",
            "type": "Integer",
            "description": " the number of columns in this model."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnAtX": {
      "location": {
        "start": {
          "line": 200,
          "column": 4,
          "index": 5425
        },
        "end": {
          "line": 203,
          "column": 5,
          "index": 5567
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the model index of the column at the position <code>xPos</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "xPos {Integer} the x position in the table pane of the column.",
            "paramName": "xPos",
            "description": " the x position in the table pane of the column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the model index of the column.",
            "type": "Integer",
            "description": " the model index of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getX": {
      "location": {
        "start": {
          "line": 211,
          "column": 4,
          "index": 5791
        },
        "end": {
          "line": 222,
          "column": 5,
          "index": 6090
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the x position of the column <code>col</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer} the model index of the column.",
            "paramName": "col",
            "description": " the model index of the column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the x position in the table pane of the column.",
            "type": "Integer",
            "description": " the x position in the table pane of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnLeft": {
      "location": {
        "start": {
          "line": 234,
          "column": 4,
          "index": 6468
        },
        "end": {
          "line": 249,
          "column": 5,
          "index": 6802
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the position of the left side of a column (in pixels, relative to the\n left side of the table pane).\n This value corresponds to the sum of the widths of all columns left of the\n column.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "col {Integer} the model index of the column.",
            "paramName": "col",
            "description": " the model index of the column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the position of the left side of the column.",
            "type": "var",
            "description": " the position of the left side of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTotalWidth": {
      "location": {
        "start": {
          "line": 256,
          "column": 4,
          "index": 6962
        },
        "end": {
          "line": 266,
          "column": 5,
          "index": 7240
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the total width of all columns in the model.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the total width of all columns in the model.",
            "type": "Integer",
            "description": " the total width of all columns in the model."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getFirstColumnX": {
      "type": "function",
      "name": "getFirstColumnX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>firstColumnX</code>.\n\nFor further details take a look at the property definition: {@link #firstColumnX}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for firstColumnX"
          }
        ]
      }
    },
    "setFirstColumnX": {
      "type": "function",
      "name": "setFirstColumnX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>firstColumnX</code>.\n\nFor further details take a look at the property definition: {@link #firstColumnX}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for firstColumnX"
          }
        ]
      }
    },
    "resetFirstColumnX": {
      "type": "function",
      "name": "resetFirstColumnX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>firstColumnX</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #firstColumnX}."
          }
        ]
      }
    },
    "getMaxColumnCount": {
      "type": "function",
      "name": "getMaxColumnCount",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>maxColumnCount</code>.\n\nFor further details take a look at the property definition: {@link #maxColumnCount}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for maxColumnCount"
          }
        ]
      }
    },
    "setMaxColumnCount": {
      "type": "function",
      "name": "setMaxColumnCount",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>maxColumnCount</code>.\n\nFor further details take a look at the property definition: {@link #maxColumnCount}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for maxColumnCount"
          }
        ]
      }
    },
    "resetMaxColumnCount": {
      "type": "function",
      "name": "resetMaxColumnCount",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>maxColumnCount</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #maxColumnCount}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 275,
        "column": 2,
        "index": 7436
      },
      "end": {
        "line": 291,
        "column": 3,
        "index": 7871
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}