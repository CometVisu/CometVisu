{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "tableColumnModel",
    "setTableColumnModel",
    "__defferedEventDispatcher",
    "util",
    "DeferredCall",
    "fireEvent",
    "ui",
    "table",
    "pane",
    "Model",
    "EVENT_TYPE_MODEL_CHANGED",
    "events",
    "modelChanged",
    "statics",
    "properties",
    "firstColumnX",
    "check",
    "init",
    "apply",
    "maxColumnCount",
    "members",
    "__columnCount",
    "__tableColumnModel",
    "_applyFirstColumnX",
    "value",
    "old",
    "schedule",
    "_applyMaxColumnCount",
    "removeListener",
    "_onColVisibilityChanged",
    "_onHeaderCellRendererChanged",
    "addListener",
    "evt",
    "getColumnCount",
    "firstX",
    "getFirstColumnX",
    "maxColCount",
    "getMaxColumnCount",
    "totalColCount",
    "getVisibleColumnCount",
    "getColumnAtX",
    "xPos",
    "getVisibleColumnAtX",
    "getX",
    "col",
    "x",
    "getVisibleX",
    "getColumnLeft",
    "left",
    "colCount",
    "currCol",
    "getColumnWidth",
    "getTotalWidth",
    "totalWidth",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/pane/Model.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * The model of a table pane. This model works as proxy to a\n * {@link qx.ui.table.columnmodel.Basic} and manages the visual order of the columns shown in\n * a {@link Pane}.\n */\nqx.Class.define(\"qx.ui.table.pane.Model\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   *\n   * @param tableColumnModel {qx.ui.table.columnmodel.Basic} The TableColumnModel of which this\n   *    model is the proxy.\n   */\n  construct(tableColumnModel) {\n    super();\n\n    this.setTableColumnModel(tableColumnModel);\n\n    this.__defferedEventDispatcher = new qx.util.DeferredCall(function () {\n      this.fireEvent(qx.ui.table.pane.Model.EVENT_TYPE_MODEL_CHANGED);\n    }, this);\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fired when the model changed. */\n    modelChanged: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {string} The type of the event fired when the model changed. */\n    EVENT_TYPE_MODEL_CHANGED: \"modelChanged\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The visible x position of the first column this model should contain. */\n    firstColumnX: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyFirstColumnX\"\n    },\n\n    /**\n     * The maximum number of columns this model should contain. If -1 this model will\n     * contain all remaining columns.\n     */\n    maxColumnCount: {\n      check: \"Number\",\n      init: -1,\n      apply: \"_applyMaxColumnCount\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __columnCount: null,\n    __tableColumnModel: null,\n    __defferedEventDispatcher: null,\n\n    // property modifier\n    _applyFirstColumnX(value, old) {\n      this.__columnCount = null;\n      this.__defferedEventDispatcher.schedule();\n    },\n\n    // property modifier\n    _applyMaxColumnCount(value, old) {\n      this.__columnCount = null;\n      this.__defferedEventDispatcher.schedule();\n    },\n\n    /**\n     * Connects the table model to the column model\n     *\n     * @param tableColumnModel {qx.ui.table.columnmodel.Basic} the column model\n     */\n    setTableColumnModel(tableColumnModel) {\n      if (this.__tableColumnModel) {\n        this.__tableColumnModel.removeListener(\n          \"visibilityChangedPre\",\n          this._onColVisibilityChanged,\n          this\n        );\n\n        this.__tableColumnModel.removeListener(\n          \"headerCellRendererChanged\",\n          this._onHeaderCellRendererChanged,\n          this\n        );\n      }\n      this.__tableColumnModel = tableColumnModel;\n      this.__tableColumnModel.addListener(\n        \"visibilityChangedPre\",\n        this._onColVisibilityChanged,\n        this\n      );\n\n      this.__tableColumnModel.addListener(\n        \"headerCellRendererChanged\",\n        this._onHeaderCellRendererChanged,\n        this\n      );\n\n      this.__columnCount = null;\n    },\n\n    /**\n     * Event handler. Called when the visibility of a column has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onColVisibilityChanged(evt) {\n      this.__columnCount = null;\n\n      this.__defferedEventDispatcher.schedule();\n    },\n\n    /**\n     * Event handler. Called when the cell renderer of a column has changed.\n     *\n     * @param evt {Map} the event.\n     */\n    _onHeaderCellRendererChanged(evt) {\n      this.__defferedEventDispatcher.schedule();\n    },\n\n    /**\n     * Returns the number of columns in this model.\n     *\n     * @return {Integer} the number of columns in this model.\n     */\n    getColumnCount() {\n      if (this.__columnCount == null) {\n        var firstX = this.getFirstColumnX();\n        var maxColCount = this.getMaxColumnCount();\n        var totalColCount = this.__tableColumnModel.getVisibleColumnCount();\n\n        if (maxColCount == -1 || firstX + maxColCount > totalColCount) {\n          this.__columnCount = totalColCount - firstX;\n        } else {\n          this.__columnCount = maxColCount;\n        }\n      }\n\n      return this.__columnCount;\n    },\n\n    /**\n     * Returns the model index of the column at the position <code>xPos</code>.\n     *\n     * @param xPos {Integer} the x position in the table pane of the column.\n     * @return {Integer} the model index of the column.\n     */\n    getColumnAtX(xPos) {\n      var firstX = this.getFirstColumnX();\n      return this.__tableColumnModel.getVisibleColumnAtX(firstX + xPos);\n    },\n\n    /**\n     * Returns the x position of the column <code>col</code>.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {Integer} the x position in the table pane of the column.\n     */\n    getX(col) {\n      var firstX = this.getFirstColumnX();\n      var maxColCount = this.getMaxColumnCount();\n\n      var x = this.__tableColumnModel.getVisibleX(col) - firstX;\n\n      if (x >= 0 && (maxColCount == -1 || x < maxColCount)) {\n        return x;\n      } else {\n        return -1;\n      }\n    },\n\n    /**\n     * Gets the position of the left side of a column (in pixels, relative to the\n     * left side of the table pane).\n     *\n     * This value corresponds to the sum of the widths of all columns left of the\n     * column.\n     *\n     * @param col {Integer} the model index of the column.\n     * @return {var} the position of the left side of the column.\n     */\n    getColumnLeft(col) {\n      var left = 0;\n      var colCount = this.getColumnCount();\n\n      for (var x = 0; x < colCount; x++) {\n        var currCol = this.getColumnAtX(x);\n\n        if (currCol == col) {\n          return left;\n        }\n\n        left += this.__tableColumnModel.getColumnWidth(currCol);\n      }\n\n      return -1;\n    },\n\n    /**\n     * Returns the total width of all columns in the model.\n     *\n     * @return {Integer} the total width of all columns in the model.\n     */\n    getTotalWidth() {\n      var totalWidth = 0;\n      var colCount = this.getColumnCount();\n\n      for (var x = 0; x < colCount; x++) {\n        var col = this.getColumnAtX(x);\n        totalWidth += this.__tableColumnModel.getColumnWidth(col);\n      }\n\n      return totalWidth;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__tableColumnModel) {\n      this.__tableColumnModel.removeListener(\n        \"visibilityChangedPre\",\n        this._onColVisibilityChanged,\n        this\n      );\n\n      this.__tableColumnModel.removeListener(\n        \"headerCellRendererChanged\",\n        this._onHeaderCellRendererChanged,\n        this\n      );\n    }\n    this.__tableColumnModel = null;\n    this._disposeObjects(\"__defferedEventDispatcher\");\n  }\n});\n"
  ],
  "mappings": "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"
}