{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "tableColumnModel",
    "constructor",
    "call",
    "setTableColumnModel",
    "__defferedEventDispatcher",
    "util",
    "DeferredCall",
    "fireEvent",
    "ui",
    "table",
    "pane",
    "Model",
    "EVENT_TYPE_MODEL_CHANGED",
    "events",
    "modelChanged",
    "statics",
    "properties",
    "firstColumnX",
    "check",
    "init",
    "apply",
    "maxColumnCount",
    "members",
    "__columnCount",
    "__tableColumnModel",
    "_applyFirstColumnX",
    "value",
    "old",
    "schedule",
    "_applyMaxColumnCount",
    "removeListener",
    "_onColVisibilityChanged",
    "_onHeaderCellRendererChanged",
    "addListener",
    "evt",
    "getColumnCount",
    "firstX",
    "getFirstColumnX",
    "maxColCount",
    "getMaxColumnCount",
    "totalColCount",
    "getVisibleColumnCount",
    "getColumnAtX",
    "xPos",
    "getVisibleColumnAtX",
    "getX",
    "col",
    "x",
    "getVisibleX",
    "getColumnLeft",
    "left",
    "colCount",
    "currCol",
    "getColumnWidth",
    "getTotalWidth",
    "totalWidth",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/pane/Model.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Til Schneider (til132)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The model of a table pane. This model works as proxy to a\r\n * {@link qx.ui.table.columnmodel.Basic} and manages the visual order of the columns shown in\r\n * a {@link Pane}.\r\n */\r\nqx.Class.define(\"qx.ui.table.pane.Model\", {\r\n  extend: qx.core.Object,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   *\r\n   * @param tableColumnModel {qx.ui.table.columnmodel.Basic} The TableColumnModel of which this\r\n   *    model is the proxy.\r\n   */\r\n  construct(tableColumnModel) {\r\n    super();\r\n\r\n    this.setTableColumnModel(tableColumnModel);\r\n\r\n    this.__defferedEventDispatcher = new qx.util.DeferredCall(function () {\r\n      this.fireEvent(qx.ui.table.pane.Model.EVENT_TYPE_MODEL_CHANGED);\r\n    }, this);\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     EVENTS\r\n  *****************************************************************************\r\n  */\r\n\r\n  events: {\r\n    /** Fired when the model changed. */\r\n    modelChanged: \"qx.event.type.Event\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     STATICS\r\n  *****************************************************************************\r\n  */\r\n\r\n  statics: {\r\n    /** @type {string} The type of the event fired when the model changed. */\r\n    EVENT_TYPE_MODEL_CHANGED: \"modelChanged\"\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** The visible x position of the first column this model should contain. */\r\n    firstColumnX: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyFirstColumnX\"\r\n    },\r\n\r\n    /**\r\n     * The maximum number of columns this model should contain. If -1 this model will\r\n     * contain all remaining columns.\r\n     */\r\n    maxColumnCount: {\r\n      check: \"Number\",\r\n      init: -1,\r\n      apply: \"_applyMaxColumnCount\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __columnCount: null,\r\n    __tableColumnModel: null,\r\n    __defferedEventDispatcher: null,\r\n\r\n    // property modifier\r\n    _applyFirstColumnX(value, old) {\r\n      this.__columnCount = null;\r\n      this.__defferedEventDispatcher.schedule();\r\n    },\r\n\r\n    // property modifier\r\n    _applyMaxColumnCount(value, old) {\r\n      this.__columnCount = null;\r\n      this.__defferedEventDispatcher.schedule();\r\n    },\r\n\r\n    /**\r\n     * Connects the table model to the column model\r\n     *\r\n     * @param tableColumnModel {qx.ui.table.columnmodel.Basic} the column model\r\n     */\r\n    setTableColumnModel(tableColumnModel) {\r\n      if (this.__tableColumnModel) {\r\n        this.__tableColumnModel.removeListener(\r\n          \"visibilityChangedPre\",\r\n          this._onColVisibilityChanged,\r\n          this\r\n        );\r\n\r\n        this.__tableColumnModel.removeListener(\r\n          \"headerCellRendererChanged\",\r\n          this._onHeaderCellRendererChanged,\r\n          this\r\n        );\r\n      }\r\n      this.__tableColumnModel = tableColumnModel;\r\n      this.__tableColumnModel.addListener(\r\n        \"visibilityChangedPre\",\r\n        this._onColVisibilityChanged,\r\n        this\r\n      );\r\n\r\n      this.__tableColumnModel.addListener(\r\n        \"headerCellRendererChanged\",\r\n        this._onHeaderCellRendererChanged,\r\n        this\r\n      );\r\n\r\n      this.__columnCount = null;\r\n    },\r\n\r\n    /**\r\n     * Event handler. Called when the visibility of a column has changed.\r\n     *\r\n     * @param evt {Map} the event.\r\n     */\r\n    _onColVisibilityChanged(evt) {\r\n      this.__columnCount = null;\r\n\r\n      this.__defferedEventDispatcher.schedule();\r\n    },\r\n\r\n    /**\r\n     * Event handler. Called when the cell renderer of a column has changed.\r\n     *\r\n     * @param evt {Map} the event.\r\n     */\r\n    _onHeaderCellRendererChanged(evt) {\r\n      this.__defferedEventDispatcher.schedule();\r\n    },\r\n\r\n    /**\r\n     * Returns the number of columns in this model.\r\n     *\r\n     * @return {Integer} the number of columns in this model.\r\n     */\r\n    getColumnCount() {\r\n      if (this.__columnCount == null) {\r\n        var firstX = this.getFirstColumnX();\r\n        var maxColCount = this.getMaxColumnCount();\r\n        var totalColCount = this.__tableColumnModel.getVisibleColumnCount();\r\n\r\n        if (maxColCount == -1 || firstX + maxColCount > totalColCount) {\r\n          this.__columnCount = totalColCount - firstX;\r\n        } else {\r\n          this.__columnCount = maxColCount;\r\n        }\r\n      }\r\n\r\n      return this.__columnCount;\r\n    },\r\n\r\n    /**\r\n     * Returns the model index of the column at the position <code>xPos</code>.\r\n     *\r\n     * @param xPos {Integer} the x position in the table pane of the column.\r\n     * @return {Integer} the model index of the column.\r\n     */\r\n    getColumnAtX(xPos) {\r\n      var firstX = this.getFirstColumnX();\r\n      return this.__tableColumnModel.getVisibleColumnAtX(firstX + xPos);\r\n    },\r\n\r\n    /**\r\n     * Returns the x position of the column <code>col</code>.\r\n     *\r\n     * @param col {Integer} the model index of the column.\r\n     * @return {Integer} the x position in the table pane of the column.\r\n     */\r\n    getX(col) {\r\n      var firstX = this.getFirstColumnX();\r\n      var maxColCount = this.getMaxColumnCount();\r\n\r\n      var x = this.__tableColumnModel.getVisibleX(col) - firstX;\r\n\r\n      if (x >= 0 && (maxColCount == -1 || x < maxColCount)) {\r\n        return x;\r\n      } else {\r\n        return -1;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Gets the position of the left side of a column (in pixels, relative to the\r\n     * left side of the table pane).\r\n     *\r\n     * This value corresponds to the sum of the widths of all columns left of the\r\n     * column.\r\n     *\r\n     * @param col {Integer} the model index of the column.\r\n     * @return {var} the position of the left side of the column.\r\n     */\r\n    getColumnLeft(col) {\r\n      var left = 0;\r\n      var colCount = this.getColumnCount();\r\n\r\n      for (var x = 0; x < colCount; x++) {\r\n        var currCol = this.getColumnAtX(x);\r\n\r\n        if (currCol == col) {\r\n          return left;\r\n        }\r\n\r\n        left += this.__tableColumnModel.getColumnWidth(currCol);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    /**\r\n     * Returns the total width of all columns in the model.\r\n     *\r\n     * @return {Integer} the total width of all columns in the model.\r\n     */\r\n    getTotalWidth() {\r\n      var totalWidth = 0;\r\n      var colCount = this.getColumnCount();\r\n\r\n      for (var x = 0; x < colCount; x++) {\r\n        var col = this.getColumnAtX(x);\r\n        totalWidth += this.__tableColumnModel.getColumnWidth(col);\r\n      }\r\n\r\n      return totalWidth;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (this.__tableColumnModel) {\r\n      this.__tableColumnModel.removeListener(\r\n        \"visibilityChangedPre\",\r\n        this._onColVisibilityChanged,\r\n        this\r\n      );\r\n\r\n      this.__tableColumnModel.removeListener(\r\n        \"headerCellRendererChanged\",\r\n        this._onHeaderCellRendererChanged,\r\n        this\r\n      );\r\n    }\r\n    this.__tableColumnModel = null;\r\n    this._disposeObjects(\"__defferedEventDispatcher\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}