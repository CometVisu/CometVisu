{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "updateDataRowElement",
    "rowInfo",
    "rowElement",
    "getRowHeightStyle",
    "height",
    "createRowStyle",
    "getRowClass",
    "ui",
    "table",
    "IRowRenderer"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/IRowRenderer.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * Interface for a row renderer.\n */\nqx.Interface.define(\"qx.ui.table.IRowRenderer\", {\n  members: {\n    /**\n     * Updates a data row.\n     *\n     * The rowInfo map contains the following properties:\n     * <ul>\n     * <li>rowData (var): contains the row data for the row.\n     *   The kind of this object depends on the table model, see\n     *   {@link ITableModel#getRowData()}</li>\n     * <li>row (int): the model index of the row.</li>\n     * <li>selected (boolean): whether a cell in this row is selected.</li>\n     * <li>focusedRow (boolean): whether the focused cell is in this row.</li>\n     * <li>table (qx.ui.table.Table): the table the row belongs to.</li>\n     * </ul>\n     *\n     * @abstract\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update.\n     * @param rowElement {Element} the DOM element that renders the data row.\n     */\n    updateDataRowElement(rowInfo, rowElement) {},\n\n    /**\n     * Get the row's height CSS style taking the box model into account\n     *\n     * @param height {Integer} The row's (border-box) height in pixel\n     */\n    getRowHeightStyle(height) {},\n\n    /**\n     * Create a style string, which will be set as the style property of the row.\n     *\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update. See {@link #updateDataRowElement} for more information.\n     */\n    createRowStyle(rowInfo) {},\n\n    /**\n     * Create a HTML class string, which will be set as the class property of the row.\n     *\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update. See {@link #updateDataRowElement} for more information.\n     */\n    getRowClass(rowInfo) {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,0BAA0B,EAAE;IAC9CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,oBAAoB,gCAACC,OAAO,EAAEC,UAAU,EAAE,CAAC,CAAC;MAE5C;AACJ;AACA;AACA;AACA;MACIC,iBAAiB,6BAACC,MAAM,EAAE,CAAC,CAAC;MAE5B;AACJ;AACA;AACA;AACA;AACA;MACIC,cAAc,0BAACJ,OAAO,EAAE,CAAC,CAAC;MAE1B;AACJ;AACA;AACA;AACA;AACA;MACIK,WAAW,uBAACL,OAAO,EAAE,CAAC;IACxB;EACF,CAAC,CAAC;EAnEFR,EAAE,CAACc,EAAE,CAACC,KAAK,CAACC,YAAY,CAACb,aAAa,GAAGA,aAAa;AAAC"
}