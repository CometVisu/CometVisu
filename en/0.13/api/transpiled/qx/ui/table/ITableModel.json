{
  "className": "qx.ui.table.ITableModel",
  "packageName": "qx.ui.table",
  "name": "ITableModel",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 22,
        "column": 0,
        "index": 503
      },
      "end": {
        "line": 216,
        "column": 3,
        "index": 6439
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The data model of a table.</p>"
        }
      ]
    }
  },
  "type": "interface",
  "events": {
    "dataChanged": {
      "type": "event",
      "name": "dataChanged",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the table data changed (the stuff shown in the table body).\n The data property of the event may be null or a map having the following attributes:\n </p>\n<ul>\n   <li>firstRow: The index of the first row that has changed.</li>\n   <li>lastRow: The index of the last row that has changed.</li>\n   <li>firstColumn: The model index of the first column that has changed.</li>\n   <li>lastColumn: The model index of the last column that has changed.</li>\n </ul>"
          }
        ]
      }
    },
    "metaDataChanged": {
      "type": "event",
      "name": "metaDataChanged",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the meta data changed (the stuff shown in the table header).</p>"
          }
        ]
      }
    },
    "sorted": {
      "type": "event",
      "name": "sorted",
      "abstract": true,
      "mixin": false,
      "access": "public",
      "overriddenFrom": null,
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired after the table is sorted (but before the metaDataChanged event)</p>"
          }
        ]
      }
    }
  },
  "members": {
    "getRowCount": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1917
        },
        "end": {
          "line": 66,
          "column": 20,
          "index": 1933
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the number of rows in the model.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the number of rows.",
            "type": "Integer",
            "description": " the number of rows."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRowData": {
      "location": {
        "start": {
          "line": 82,
          "column": 4,
          "index": 2615
        },
        "end": {
          "line": 82,
          "column": 27,
          "index": 2638
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the data of one row. This function may be overridden by models which hold\n all data of a row in one object. By using this function, clients have a way of\n quickly retrieving the entire row data.\n <b>Important:</b>Models which do not have their row data accessible in one object\n may return null.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "rowIndex {Integer} the model index of the row.",
            "paramName": "rowIndex",
            "description": " the model index of the row.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} the row data as an object or null if the model does not support row data\n                    objects. The details on the object returned are determined by the model\n                    implementation only.",
            "type": "Object",
            "description": " the row data as an object or null if the model does not support row data\n                    objects. The details on the object returned are determined by the model\n                    implementation only."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnCount": {
      "location": {
        "start": {
          "line": 90,
          "column": 4,
          "index": 2784
        },
        "end": {
          "line": 90,
          "column": 23,
          "index": 2803
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the number of columns in the model.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the number of columns.",
            "type": "Integer",
            "description": " the number of columns."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnId": {
      "location": {
        "start": {
          "line": 101,
          "column": 4,
          "index": 3159
        },
        "end": {
          "line": 101,
          "column": 31,
          "index": 3186
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the ID of column. The ID may be used to identify columns\n independent from their index in the model. E.g. for being aware of added\n columns when saving the width of a column.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the index of the column.",
            "paramName": "columnIndex",
            "description": " the index of the column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the ID of the column.",
            "type": "String",
            "description": " the ID of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnIndexById": {
      "location": {
        "start": {
          "line": 110,
          "column": 4,
          "index": 3375
        },
        "end": {
          "line": 110,
          "column": 35,
          "index": 3406
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the index of a column.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnId {String} the ID of the column.",
            "paramName": "columnId",
            "description": " the ID of the column.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the index of the column.",
            "type": "Integer",
            "description": " the index of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnName": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 3663
        },
        "end": {
          "line": 120,
          "column": 33,
          "index": 3692
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the name of a column. This name will be shown to the user in the\n table header.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the index of the column.",
            "paramName": "columnIndex",
            "description": " the index of the column.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the name of the column.",
            "type": "String",
            "description": " the name of the column."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isColumnEditable": {
      "location": {
        "start": {
          "line": 128,
          "column": 4,
          "index": 3881
        },
        "end": {
          "line": 128,
          "column": 36,
          "index": 3913
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether a column is editable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the column to check.",
            "paramName": "columnIndex",
            "description": " the column to check.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the column is editable.",
            "type": "Boolean",
            "description": " whether the column is editable."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isColumnSortable": {
      "location": {
        "start": {
          "line": 136,
          "column": 4,
          "index": 4102
        },
        "end": {
          "line": 136,
          "column": 36,
          "index": 4134
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether a column is sortable.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the column to check.",
            "paramName": "columnIndex",
            "description": " the column to check.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the column is sortable.",
            "type": "Boolean",
            "description": " whether the column is sortable."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "sortByColumn": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 4320
        },
        "end": {
          "line": 144,
          "column": 43,
          "index": 4359
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sorts the model by a column.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the column to sort by.",
            "paramName": "columnIndex",
            "description": " the column to sort by.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "ascending {Boolean} whether to sort ascending.",
            "paramName": "ascending",
            "description": " whether to sort ascending.",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSortColumnIndex": {
      "location": {
        "start": {
          "line": 152,
          "column": 4,
          "index": 4561
        },
        "end": {
          "line": 152,
          "column": 27,
          "index": 4584
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the column index the model is sorted by. If the model is not sorted\n -1 is returned.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the column index the model is sorted by.",
            "type": "Integer",
            "description": " the column index the model is sorted by."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSortAscending": {
      "location": {
        "start": {
          "line": 159,
          "column": 4,
          "index": 4732
        },
        "end": {
          "line": 159,
          "column": 24,
          "index": 4752
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns whether the model is sorted ascending.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the model is sorted ascending.",
            "type": "Boolean",
            "description": " whether the model is sorted ascending."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "prefetchRows": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 5011
        },
        "end": {
          "line": 168,
          "column": 48,
          "index": 5055
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Prefetches some rows. This is a hint to the model that the specified rows\n will be read soon.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRowIndex {Integer} the index of first row.",
            "paramName": "firstRowIndex",
            "description": " the index of first row.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "lastRowIndex {Integer} the index of last row.",
            "paramName": "lastRowIndex",
            "description": " the index of last row.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getValue": {
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 5333
        },
        "end": {
          "line": 179,
          "column": 38,
          "index": 5367
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a cell value by column index.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} the index of the column.",
            "paramName": "columnIndex",
            "description": " the index of the column.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowIndex {Integer} the index of the row.",
            "paramName": "rowIndex",
            "description": " the index of the row.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The value of the cell.",
            "type": "var",
            "description": " The value of the cell."
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#getValueById"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getValueById": {
      "location": {
        "start": {
          "line": 191,
          "column": 4,
          "index": 5707
        },
        "end": {
          "line": 191,
          "column": 39,
          "index": 5742
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a cell value by column ID.\n Whenever you have the choice, use {@link #getValue()} instead,\n because this should be faster.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnId {String} the ID of the column.",
            "paramName": "columnId",
            "description": " the ID of the column.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "rowIndex {Integer} the index of the row.",
            "paramName": "rowIndex",
            "description": " the index of the row.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} the value of the cell.",
            "type": "var",
            "description": " the value of the cell."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 202,
          "column": 4,
          "index": 6014
        },
        "end": {
          "line": 202,
          "column": 45,
          "index": 6055
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets a cell value by column index.</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnIndex {Integer} The index of the column.",
            "paramName": "columnIndex",
            "description": " The index of the column.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowIndex {Integer} the index of the row.",
            "paramName": "rowIndex",
            "description": " the index of the row.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "value {var} The new value.",
            "paramName": "value",
            "description": " The new value.",
            "type": "var"
          }
        ],
        "@see": [
          {
            "name": "@see",
            "body": "#setValueById"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setValueById": {
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 6389
        },
        "end": {
          "line": 214,
          "column": 46,
          "index": 6431
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets a cell value by column ID.\n Whenever you have the choice, use {@link #setValue()} instead,\n because this should be faster.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "columnId {String} The ID of the column.",
            "paramName": "columnId",
            "description": " The ID of the column.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "rowIndex {Integer} The index of the row.",
            "paramName": "rowIndex",
            "description": " The index of the row.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "value {var} The new value.",
            "paramName": "value",
            "description": " The new value.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}