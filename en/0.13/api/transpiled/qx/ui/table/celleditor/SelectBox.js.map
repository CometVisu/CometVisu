{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "table",
    "ICellEditorFactory",
    "properties",
    "validationFunction",
    "check",
    "nullable",
    "init",
    "listData",
    "members",
    "createCellEditor",
    "cellInfo",
    "cellEditor",
    "form",
    "SelectBox",
    "set",
    "appearance",
    "value",
    "originalValue",
    "cellRenderer",
    "getTableColumnModel",
    "getDataCellRenderer",
    "col",
    "label",
    "_getContentHtml",
    "list",
    "getListData",
    "item",
    "i",
    "l",
    "length",
    "row",
    "Array",
    "ListItem",
    "setUserData",
    "add",
    "itemToSelect",
    "getChildrenContainer",
    "findItem",
    "setSelection",
    "resetSelection",
    "addListener",
    "open",
    "getCellEditorValue",
    "selection",
    "getSelection",
    "userValue",
    "getUserData",
    "undefined",
    "getLabel",
    "validationFunc",
    "getValidationFunction",
    "parseFloat",
    "celleditor"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/celleditor/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating select boxes.\n */\nqx.Class.define(\"qx.ui.table.celleditor.SelectBox\", {\n  extend: qx.core.Object,\n  implement: qx.ui.table.ICellEditorFactory,\n\n  properties: {\n    /**\n     * function that validates the result\n     * the function will be called with the new value and the old value and is\n     * supposed to return the value that is set as the table value.\n     **/\n    validationFunction: {\n      check: \"Function\",\n      nullable: true,\n      init: null\n    },\n\n    /** array of data to construct ListItem widgets with */\n    listData: {\n      check: \"Array\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    // interface implementation\n    createCellEditor(cellInfo) {\n      var cellEditor = new qx.ui.form.SelectBox().set({\n        appearance: \"table-editor-selectbox\"\n      });\n\n      var value = cellInfo.value;\n      cellEditor.originalValue = value;\n\n      // check if renderer does something with value\n      var cellRenderer = cellInfo.table\n        .getTableColumnModel()\n        .getDataCellRenderer(cellInfo.col);\n      var label = cellRenderer._getContentHtml(cellInfo);\n      if (value != label) {\n        value = label;\n      }\n\n      // replace null values\n      if (value === null) {\n        value = \"\";\n      }\n\n      var list = this.getListData();\n      if (list) {\n        var item;\n\n        for (var i = 0, l = list.length; i < l; i++) {\n          var row = list[i];\n          if (row instanceof Array) {\n            item = new qx.ui.form.ListItem(row[0], row[1]);\n            item.setUserData(\"row\", row[2]);\n            if (value == row[2]) {\n              label = row[0];\n            }\n          } else {\n            item = new qx.ui.form.ListItem(row, null);\n            item.setUserData(\"row\", row);\n          }\n          cellEditor.add(item);\n        }\n      }\n\n      if (label != null) {\n        var itemToSelect = cellEditor\n          .getChildrenContainer()\n          .findItem(label + \"\");\n      }\n\n      if (itemToSelect) {\n        cellEditor.setSelection([itemToSelect]);\n      } else {\n        cellEditor.resetSelection();\n      }\n      cellEditor.addListener(\"appear\", function () {\n        cellEditor.open();\n      });\n\n      return cellEditor;\n    },\n\n    // interface implementation\n    getCellEditorValue(cellEditor) {\n      var selection = cellEditor.getSelection();\n      var value = \"\";\n\n      if (selection && selection[0]) {\n        var userValue = selection[0].getUserData(\"row\");\n        value = userValue === undefined ? selection[0].getLabel() : userValue;\n      }\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc) {\n        value = validationFunc(value, cellEditor.originalValue);\n      }\n\n      if (typeof cellEditor.originalValue == \"number\") {\n        value = parseFloat(value);\n      }\n\n      return value;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}