{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "table",
    "ICellEditorFactory",
    "properties",
    "validationFunction",
    "check",
    "nullable",
    "init",
    "listData",
    "members",
    "createCellEditor",
    "cellInfo",
    "cellEditor",
    "form",
    "SelectBox",
    "set",
    "appearance",
    "value",
    "originalValue",
    "cellRenderer",
    "getTableColumnModel",
    "getDataCellRenderer",
    "col",
    "label",
    "_getContentHtml",
    "list",
    "getListData",
    "item",
    "i",
    "l",
    "length",
    "row",
    "Array",
    "ListItem",
    "setUserData",
    "add",
    "itemToSelect",
    "getChildrenContainer",
    "findItem",
    "setSelection",
    "resetSelection",
    "addListener",
    "open",
    "getCellEditorValue",
    "selection",
    "getSelection",
    "userValue",
    "getUserData",
    "undefined",
    "getLabel",
    "validationFunc",
    "getValidationFunction",
    "parseFloat",
    "celleditor"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/table/celleditor/SelectBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A cell editor factory creating select boxes.\n */\nqx.Class.define(\"qx.ui.table.celleditor.SelectBox\", {\n  extend: qx.core.Object,\n  implement: qx.ui.table.ICellEditorFactory,\n\n  properties: {\n    /**\n     * function that validates the result\n     * the function will be called with the new value and the old value and is\n     * supposed to return the value that is set as the table value.\n     **/\n    validationFunction: {\n      check: \"Function\",\n      nullable: true,\n      init: null\n    },\n\n    /** array of data to construct ListItem widgets with */\n    listData: {\n      check: \"Array\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    // interface implementation\n    createCellEditor(cellInfo) {\n      var cellEditor = new qx.ui.form.SelectBox().set({\n        appearance: \"table-editor-selectbox\"\n      });\n\n      var value = cellInfo.value;\n      cellEditor.originalValue = value;\n\n      // check if renderer does something with value\n      var cellRenderer = cellInfo.table\n        .getTableColumnModel()\n        .getDataCellRenderer(cellInfo.col);\n      var label = cellRenderer._getContentHtml(cellInfo);\n      if (value != label) {\n        value = label;\n      }\n\n      // replace null values\n      if (value === null) {\n        value = \"\";\n      }\n\n      var list = this.getListData();\n      if (list) {\n        var item;\n\n        for (var i = 0, l = list.length; i < l; i++) {\n          var row = list[i];\n          if (row instanceof Array) {\n            item = new qx.ui.form.ListItem(row[0], row[1]);\n            item.setUserData(\"row\", row[2]);\n            if (value == row[2]) {\n              label = row[0];\n            }\n          } else {\n            item = new qx.ui.form.ListItem(row, null);\n            item.setUserData(\"row\", row);\n          }\n          cellEditor.add(item);\n        }\n      }\n\n      if (label != null) {\n        var itemToSelect = cellEditor\n          .getChildrenContainer()\n          .findItem(label + \"\");\n      }\n\n      if (itemToSelect) {\n        cellEditor.setSelection([itemToSelect]);\n      } else {\n        cellEditor.resetSelection();\n      }\n      cellEditor.addListener(\"appear\", function () {\n        cellEditor.open();\n      });\n\n      return cellEditor;\n    },\n\n    // interface implementation\n    getCellEditorValue(cellEditor) {\n      var selection = cellEditor.getSelection();\n      var value = \"\";\n\n      if (selection && selection[0]) {\n        var userValue = selection[0].getUserData(\"row\");\n        value = userValue === undefined ? selection[0].getLabel() : userValue;\n      }\n\n      // validation function will be called with new and old value\n      var validationFunc = this.getValidationFunction();\n      if (validationFunc) {\n        value = validationFunc(value, cellEditor.originalValue);\n      }\n\n      if (typeof cellEditor.originalValue == \"number\") {\n        value = parseFloat(value);\n      }\n\n      return value;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}