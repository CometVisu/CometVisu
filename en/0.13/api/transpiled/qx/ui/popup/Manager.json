{
  "className": "qx.ui.popup.Manager",
  "packageName": "qx.ui.popup",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0,
        "index": 626
      },
      "end": {
        "line": 191,
        "column": 3,
        "index": 5052
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This singleton is used to manager multiple instances of popups and their\n state.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 915
      },
      "end": {
        "line": 51,
        "column": 3,
        "index": 1359
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "containsFunction": {
      "location": {
        "start": {
          "line": 57,
          "column": 4,
          "index": 1492
        },
        "end": {
          "line": 60,
          "column": 5,
          "index": 1584
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Function that is used to determine if a widget is contained within another one.</p>"
          }
        ]
      },
      "name": "containsFunction",
      "propertyType": "new",
      "init": "qx.ui.core.Widget.contains",
      "check": "Function",
      "defaultValue": "qx.ui.core.Widget.contains"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__objects": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1802
        },
        "end": {
          "line": 70,
          "column": 19,
          "index": 1817
        }
      },
      "type": "variable",
      "access": "private"
    },
    "add": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1948
        },
        "end": {
          "line": 86,
          "column": 5,
          "index": 2211
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Registers a visible popup.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.popup.Popup} The popup to register",
            "paramName": "obj",
            "description": " The popup to register",
            "type": "qx.ui.popup.Popup"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2356
        },
        "end": {
          "line": 102,
          "column": 5,
          "index": 2639
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a popup from the registry</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.popup.Popup} The popup which was excluded",
            "paramName": "obj",
            "description": " The popup which was excluded",
            "type": "qx.ui.popup.Popup"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hideAll": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2785
        },
        "end": {
          "line": 118,
          "column": 5,
          "index": 3013
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Excludes all currently open popups,\n except those with {@link qx.ui.popup.Popup#autoHide} set to false.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__updateIndexes": {
      "location": {
        "start": {
          "line": 131,
          "column": 4,
          "index": 3359
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 3518
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates the zIndex of all registered items to push\n newly added ones on top of existing ones</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onPointerDown": {
      "location": {
        "start": {
          "line": 149,
          "column": 4,
          "index": 3862
        },
        "end": {
          "line": 171,
          "column": 5,
          "index": 4625
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for pointer down events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Pointer event object",
            "paramName": "e",
            "description": " Pointer event object",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getContainsFunction": {
      "type": "function",
      "name": "getContainsFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>containsFunction</code>.\n\nFor further details take a look at the property definition: {@link #containsFunction}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Function",
            "desc": "Returns the value for containsFunction"
          }
        ]
      }
    },
    "setContainsFunction": {
      "type": "function",
      "name": "setContainsFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>containsFunction</code>.\n\nFor further details take a look at the property definition: {@link #containsFunction}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Function",
            "paramName": "value",
            "desc": "Value for containsFunction"
          }
        ]
      }
    },
    "resetContainsFunction": {
      "type": "function",
      "name": "resetContainsFunction",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>containsFunction</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #containsFunction}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 180,
        "column": 2,
        "index": 4830
      },
      "end": {
        "line": 190,
        "column": 3,
        "index": 5047
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}