{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "selection",
    "ScrollArea",
    "members",
    "_getSelectableLocationY",
    "item",
    "computed",
    "getBounds",
    "top",
    "_getWidget",
    "getItemTop",
    "bottom",
    "height",
    "_isSelectable",
    "_isItemSelectable",
    "tree",
    "AbstractTreeItem",
    "_getSelectableFromPointerEvent",
    "event",
    "getTreeItem",
    "getTarget",
    "getSelectables",
    "all",
    "oldUserInteraction",
    "_userInteraction",
    "widget",
    "result",
    "getRoot",
    "items",
    "getItems",
    "getHideRoot",
    "i",
    "length",
    "push",
    "_getSelectableRange",
    "item1",
    "item2",
    "selectables",
    "item1Index",
    "indexOf",
    "item2Index",
    "slice",
    "_getFirstSelectable",
    "_getLastSelectable",
    "_getRelatedSelectable",
    "relation",
    "related",
    "getPreviousNodeOf",
    "getNextNodeOf",
    "SelectionManager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/selection/SelectionManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Responsible for the selection management of the {@link qx.ui.tree.Tree}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.tree.selection.SelectionManager\", {\n  extend: qx.ui.core.selection.ScrollArea,\n\n  members: {\n    // overridden\n    _getSelectableLocationY(item) {\n      var computed = item.getBounds();\n      if (computed) {\n        var top = this._getWidget().getItemTop(item);\n        return {\n          top: top,\n          bottom: top + computed.height\n        };\n      }\n    },\n\n    // overridden\n    _isSelectable(item) {\n      return (\n        this._isItemSelectable(item) &&\n        item instanceof qx.ui.tree.core.AbstractTreeItem\n      );\n    },\n\n    // overridden\n    _getSelectableFromPointerEvent(event) {\n      return this._getWidget().getTreeItem(event.getTarget());\n    },\n\n    // overridden\n    getSelectables(all) {\n      // if only the user selectables should be returned\n      var oldUserInteraction = false;\n      if (!all) {\n        oldUserInteraction = this._userInteraction;\n        this._userInteraction = true;\n      }\n\n      var widget = this._getWidget();\n      var result = [];\n\n      if (widget.getRoot() != null) {\n        var items = widget\n          .getRoot()\n          .getItems(true, !!all, widget.getHideRoot());\n\n        for (var i = 0; i < items.length; i++) {\n          if (this._isSelectable(items[i])) {\n            result.push(items[i]);\n          }\n        }\n      }\n\n      // reset to the former user interaction state\n      this._userInteraction = oldUserInteraction;\n\n      return result;\n    },\n\n    // overridden\n    _getSelectableRange(item1, item2) {\n      // Fast path for identical items\n      if (item1 === item2) {\n        return [item1];\n      }\n\n      var selectables = this.getSelectables();\n\n      var item1Index = selectables.indexOf(item1);\n      var item2Index = selectables.indexOf(item2);\n\n      if (item1Index < 0 || item2Index < 0) {\n        return [];\n      }\n\n      if (item1Index < item2Index) {\n        return selectables.slice(item1Index, item2Index + 1);\n      } else {\n        return selectables.slice(item2Index, item1Index + 1);\n      }\n    },\n\n    // overridden\n    _getFirstSelectable() {\n      return this.getSelectables()[0] || null;\n    },\n\n    // overridden\n    _getLastSelectable() {\n      var selectables = this.getSelectables();\n      if (selectables.length > 0) {\n        return selectables[selectables.length - 1];\n      } else {\n        return null;\n      }\n    },\n\n    // overridden\n    _getRelatedSelectable(item, relation) {\n      var widget = this._getWidget();\n      var related = null;\n\n      switch (relation) {\n        case \"above\":\n          related = widget.getPreviousNodeOf(item, false);\n          break;\n\n        case \"under\":\n          related = widget.getNextNodeOf(item, false);\n          break;\n\n        case \"left\":\n        case \"right\":\n          break;\n      }\n\n      if (!related) {\n        return null;\n      }\n\n      if (this._isSelectable(related)) {\n        return related;\n      } else {\n        return this._getRelatedSelectable(related, relation);\n      }\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}