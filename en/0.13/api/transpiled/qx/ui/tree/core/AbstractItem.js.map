{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "type",
    "include",
    "form",
    "MModelProperty",
    "implement",
    "IModel",
    "construct",
    "label",
    "setLabel",
    "_setLayout",
    "layout",
    "HBox",
    "_addWidgets",
    "initOpen",
    "properties",
    "open",
    "check",
    "init",
    "event",
    "apply",
    "openSymbolMode",
    "indent",
    "themeable",
    "icon",
    "nullable",
    "iconOpened",
    "members",
    "__labelAdded",
    "__iconAdded",
    "__spacer",
    "Error",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Label",
    "set",
    "alignY",
    "anonymous",
    "value",
    "getLabel",
    "Image",
    "source",
    "getIcon",
    "tree",
    "FolderOpenButton",
    "addListener",
    "_onChangeOpen",
    "_updateIndent",
    "addWidget",
    "widget",
    "options",
    "_add",
    "addSpacer",
    "Spacer",
    "_remove",
    "addOpenButton",
    "getChildControl",
    "e",
    "isOpenable",
    "setOpen",
    "getData",
    "addIcon",
    "addLabel",
    "text",
    "setValue",
    "_applyIcon",
    "old",
    "__getUserValueIconOpened",
    "__setIconSource",
    "isOpen",
    "_applyIconOpened",
    "__getUserValueIcon",
    "_applyLabel",
    "_applyOpen",
    "getIconOpened",
    "addState",
    "removeState",
    "util",
    "PropertyUtil",
    "getUserValue",
    "url",
    "setSource",
    "openMode",
    "getOpenSymbolMode",
    "hasChildren",
    "_shouldShowOpenSymbol",
    "_applyOpenSymbolMode",
    "openWidth",
    "show",
    "openBounds",
    "getBounds",
    "width",
    "exclude",
    "setWidth",
    "getLevel",
    "getIndent",
    "_applyIndent",
    "syncWidget",
    "jobs",
    "destruct",
    "_disposeObjects",
    "AbstractItem"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/AbstractItem.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The AbstractItem serves as a common superclass for the {@link\n * qx.ui.tree.core.AbstractTreeItem} and {@link qx.ui.tree.VirtualTreeItem} classes.\n *\n * @childControl label {qx.ui.basic.Label} label of the tree item\n * @childControl icon {qx.ui.basic.Image} icon of the tree item\n * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n */\nqx.Class.define(\"qx.ui.tree.core.AbstractItem\", {\n  extend: qx.ui.core.Widget,\n  type: \"abstract\",\n  include: [qx.ui.form.MModelProperty],\n  implement: [qx.ui.form.IModel],\n\n  /**\n   * @param label {String?null} The tree item's caption text\n   */\n  construct(label) {\n    super();\n\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    this._setLayout(new qx.ui.layout.HBox());\n    this._addWidgets();\n\n    this.initOpen();\n  },\n\n  properties: {\n    /**\n     * Whether the tree item is opened.\n     */\n    open: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeOpen\",\n      apply: \"_applyOpen\"\n    },\n\n    /**\n     * Controls, when to show the open symbol. If the mode is \"auto\" , the open\n     * symbol is shown only if the item has child items.\n     */\n    openSymbolMode: {\n      check: [\"always\", \"never\", \"auto\"],\n      init: \"auto\",\n      event: \"changeOpenSymbolMode\",\n      apply: \"_applyOpenSymbolMode\"\n    },\n\n    /**\n     * The number of pixel to indent the tree item for each level.\n     */\n    indent: {\n      check: \"Integer\",\n      init: 19,\n      apply: \"_applyIndent\",\n      event: \"changeIndent\",\n      themeable: true\n    },\n\n    /**\n     * URI of \"closed\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    icon: {\n      check: \"String\",\n      apply: \"_applyIcon\",\n      event: \"changeIcon\",\n      nullable: true,\n      themeable: true\n    },\n\n    /**\n     * URI of \"opened\" icon. Can be any URI String supported by qx.ui.basic.Image.\n     **/\n    iconOpened: {\n      check: \"String\",\n      apply: \"_applyIconOpened\",\n      event: \"changeIconOpened\",\n      nullable: true,\n      themeable: true\n    },\n\n    /**\n     * The label/caption/text\n     */\n    label: {\n      check: \"String\",\n      apply: \"_applyLabel\",\n      event: \"changeLabel\",\n      init: \"\"\n    }\n  },\n\n  members: {\n    __labelAdded: null,\n    __iconAdded: null,\n    __spacer: null,\n\n    /**\n     * This method configures the tree item by adding its sub widgets like\n     * label, icon, open symbol, ...\n     *\n     * This method must be overridden by sub classes.\n     */\n    _addWidgets() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"label\":\n          control = new qx.ui.basic.Label().set({\n            alignY: \"middle\",\n            anonymous: true,\n            value: this.getLabel()\n          });\n\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image().set({\n            alignY: \"middle\",\n            anonymous: true,\n            source: this.getIcon()\n          });\n\n          break;\n\n        case \"open\":\n          control = new qx.ui.tree.core.FolderOpenButton().set({\n            alignY: \"middle\"\n          });\n\n          control.addListener(\"changeOpen\", this._onChangeOpen, this);\n          control.addListener(\"resize\", this._updateIndent, this);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TREE ITEM CONFIGURATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a sub widget to the tree item's horizontal box layout.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to add\n     * @param options {Map?null} The (optional) layout options to use for the widget\n     */\n    addWidget(widget, options) {\n      this._add(widget, options);\n    },\n\n    /**\n     * Adds the spacer used to render the indentation to the item's horizontal\n     * box layout. If the spacer has been added before, it is removed from its\n     * old position and added to the end of the layout.\n     */\n    addSpacer() {\n      if (!this.__spacer) {\n        this.__spacer = new qx.ui.core.Spacer();\n      } else {\n        this._remove(this.__spacer);\n      }\n\n      this._add(this.__spacer);\n    },\n\n    /**\n     * Adds the open button to the item's horizontal box layout. If the open\n     * button has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addOpenButton() {\n      this._add(this.getChildControl(\"open\"));\n    },\n\n    /**\n     * Event handler, which listens to open state changes of the open button\n     *\n     * @param e {qx.event.type.Data} The event object\n     */\n    _onChangeOpen(e) {\n      if (this.isOpenable()) {\n        this.setOpen(e.getData());\n      }\n    },\n\n    /**\n     * Adds the icon widget to the item's horizontal box layout. If the icon\n     * widget has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     */\n    addIcon() {\n      var icon = this.getChildControl(\"icon\");\n\n      if (this.__iconAdded) {\n        this._remove(icon);\n      }\n\n      this._add(icon);\n      this.__iconAdded = true;\n    },\n\n    /**\n     * Adds the label to the item's horizontal box layout. If the label\n     * has been added before, it is removed from its old position and\n     * added to the end of the layout.\n     *\n     * @param text {String?0} The label's contents\n     */\n    addLabel(text) {\n      var label = this.getChildControl(\"label\");\n\n      if (this.__labelAdded) {\n        this._remove(label);\n      }\n\n      if (text) {\n        this.setLabel(text);\n      } else {\n        label.setValue(this.getLabel());\n      }\n\n      this._add(label);\n      this.__labelAdded = true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIcon(value, old) {\n      // Set \"closed\" icon - even when \"opened\" - if no \"opened\" icon was\n      // user-defined\n      if (!this.__getUserValueIconOpened()) {\n        this.__setIconSource(value);\n      } else if (!this.isOpen()) {\n        this.__setIconSource(value);\n      }\n    },\n\n    // property apply\n    _applyIconOpened(value, old) {\n      if (this.isOpen()) {\n        // ... both \"closed\" and \"opened\" icon were user-defined\n        if (this.__getUserValueIcon() && this.__getUserValueIconOpened()) {\n          this.__setIconSource(value);\n        }\n\n        // .. only \"opened\" icon was user-defined\n        else if (\n          !this.__getUserValueIcon() &&\n          this.__getUserValueIconOpened()\n        ) {\n          this.__setIconSource(value);\n        }\n      }\n    },\n\n    // property apply\n    _applyLabel(value, old) {\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // property apply\n    _applyOpen(value, old) {\n      var open = this.getChildControl(\"open\", true);\n      if (open) {\n        open.setOpen(value);\n      }\n\n      //\n      // Determine source of icon for \"opened\" or \"closed\" state\n      //\n      var source;\n\n      // Opened\n      if (value) {\n        // Never overwrite user-defined icon with themed \"opened\" icon\n        source = this.__getUserValueIconOpened() ? this.getIconOpened() : null;\n      }\n\n      // Closed\n      else {\n        source = this.getIcon();\n      }\n\n      if (source) {\n        this.__setIconSource(source);\n      }\n\n      value ? this.addState(\"opened\") : this.removeState(\"opened\");\n    },\n\n    /**\n     * Get user-defined value of \"icon\" property\n     *\n     * @return {var} The user value of the property \"icon\"\n     */\n    __getUserValueIcon() {\n      return qx.util.PropertyUtil.getUserValue(this, \"icon\");\n    },\n\n    /**\n     * Get user-defined value of \"iconOpened\" property\n     *\n     * @return {var} The user value of the property \"iconOpened\"\n     */\n    __getUserValueIconOpened() {\n      return qx.util.PropertyUtil.getUserValue(this, \"iconOpened\");\n    },\n\n    /**\n     * Set source of icon child control\n     *\n     * @param url {String} The URL of the icon\n     */\n    __setIconSource(url) {\n      var icon = this.getChildControl(\"icon\", true);\n      if (icon) {\n        icon.setSource(url);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INDENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the tree item can be opened.\n     *\n     * @return {Boolean} Whether the tree item can be opened.\n     */\n    isOpenable() {\n      var openMode = this.getOpenSymbolMode();\n      return (\n        openMode === \"always\" || (openMode === \"auto\" && this.hasChildren())\n      );\n    },\n\n    /**\n     * Whether the open symbol should be shown\n     *\n     * @return {Boolean} Whether the open symbol should be shown.\n     */\n    _shouldShowOpenSymbol() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n    // property apply\n    _applyOpenSymbolMode(value, old) {\n      this._updateIndent();\n    },\n\n    /**\n     * Update the indentation of the tree item.\n     */\n    _updateIndent() {\n      var openWidth = 0;\n      var open = this.getChildControl(\"open\", true);\n\n      if (open) {\n        if (this._shouldShowOpenSymbol()) {\n          open.show();\n\n          var openBounds = open.getBounds();\n          if (openBounds) {\n            openWidth = openBounds.width;\n          } else {\n            return;\n          }\n        } else {\n          open.exclude();\n        }\n      }\n\n      if (this.__spacer) {\n        this.__spacer.setWidth(\n          (this.getLevel() + 1) * this.getIndent() - openWidth\n        );\n      }\n    },\n\n    // property apply\n    _applyIndent(value, old) {\n      this._updateIndent();\n    },\n\n    /**\n     * Computes the item's nesting level. If the item is not part of a tree\n     * this function will return <code>null</code>.\n     *\n     * @return {Integer|null} The item's nesting level or <code>null</code>.\n     */\n    getLevel() {\n      throw new Error(\"Abstract method call.\");\n    },\n\n    // overridden\n    syncWidget(jobs) {\n      this._updateIndent();\n    },\n\n    /**\n     * Whether the item has any children\n     *\n     * @return {Boolean} Whether the item has any children.\n     */\n    hasChildren() {\n      throw new Error(\"Abstract method call.\");\n    }\n  },\n\n  destruct() {\n    this._disposeObjects(\"__spacer\");\n  }\n});\n"
  ],
  "mappings": "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"
}