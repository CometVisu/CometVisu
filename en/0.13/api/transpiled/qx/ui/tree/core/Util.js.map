{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "isNode",
    "node",
    "childProperty",
    "hasProperty",
    "constructor",
    "hasChildren",
    "ignoreLeafs",
    "children",
    "get",
    "length",
    "i",
    "getLength",
    "child",
    "getItem",
    "ui",
    "tree",
    "core",
    "Util"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/Util.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This utility class implements some methods for the <code>VirtualTree</code>.\n */\nqx.Class.define(\"qx.ui.tree.core.Util\", {\n  statics: {\n    /**\n     * Returns if the passed item is a node or a leaf.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @return {Boolean} <code>True</code> when the passed item is a node,\n     *   </code>false</code> when it is a leaf.\n     */\n    isNode(node, childProperty) {\n      if (node == null || childProperty == null) {\n        return false;\n      }\n      return qx.Class.hasProperty(node.constructor, childProperty);\n    },\n\n    /**\n     * Returns whether the node has visible children or not.\n     *\n     * @param node {qx.core.Object} Node to check.\n     * @param childProperty {String} The property name to find the children.\n     * @param ignoreLeafs {Boolean?} Indicates whether leafs are ignored. This means when it is set to\n     *    <code>true</code> a node which contains only leafs has no children. The default value is <code>false</code>.\n     * @return {Boolean} <code>True</code> when the node has visible children,\n     *   <code>false</code> otherwise.\n     */\n    hasChildren(node, childProperty, ignoreLeafs) {\n      if (\n        node == null ||\n        childProperty == null ||\n        !this.isNode(node, childProperty)\n      ) {\n        return false;\n      }\n\n      var children = node.get(childProperty);\n      if (children == null) {\n        return false;\n      }\n\n      if (!ignoreLeafs) {\n        return children.length > 0;\n      } else {\n        for (var i = 0; i < children.getLength(); i++) {\n          var child = children.getItem(i);\n          if (this.isNode(child, childProperty)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sBAAsB,EAAE;IACtCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,kBAACC,IAAI,EAAEC,aAAa,EAAE;QAC1B,IAAID,IAAI,IAAI,IAAI,IAAIC,aAAa,IAAI,IAAI,EAAE;UACzC,OAAO,KAAK;QACd;QACA,OAAOT,EAAE,CAACI,KAAK,CAACM,WAAW,CAACF,IAAI,CAACG,WAAW,EAAEF,aAAa,CAAC;MAC9D,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,WAAW,uBAACJ,IAAI,EAAEC,aAAa,EAAEI,WAAW,EAAE;QAC5C,IACEL,IAAI,IAAI,IAAI,IACZC,aAAa,IAAI,IAAI,IACrB,CAAC,IAAI,CAACF,MAAM,CAACC,IAAI,EAAEC,aAAa,CAAC,EACjC;UACA,OAAO,KAAK;QACd;QAEA,IAAIK,QAAQ,GAAGN,IAAI,CAACO,GAAG,CAACN,aAAa,CAAC;QACtC,IAAIK,QAAQ,IAAI,IAAI,EAAE;UACpB,OAAO,KAAK;QACd;QAEA,IAAI,CAACD,WAAW,EAAE;UAChB,OAAOC,QAAQ,CAACE,MAAM,GAAG,CAAC;QAC5B,CAAC,MAAM;UACL,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,SAAS,EAAE,EAAED,CAAC,EAAE,EAAE;YAC7C,IAAIE,KAAK,GAAGL,QAAQ,CAACM,OAAO,CAACH,CAAC,CAAC;YAC/B,IAAI,IAAI,CAACV,MAAM,CAACY,KAAK,EAAEV,aAAa,CAAC,EAAE;cACrC,OAAO,IAAI;YACb;UACF;QACF;QACA,OAAO,KAAK;MACd;IACF;EACF,CAAC,CAAC;EA3EFT,EAAE,CAACqB,EAAE,CAACC,IAAI,CAACC,IAAI,CAACC,IAAI,CAACrB,aAAa,GAAGA,aAAa;AAAC"
}