{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "tree",
    "rootModel",
    "openProperty",
    "getOpenProperty",
    "constructor",
    "call",
    "_tree",
    "_lids",
    "sync",
    "node",
    "hasProperty",
    "getChildren",
    "forEach",
    "get",
    "openNode",
    "closeNode",
    "bind",
    "lid",
    "addListener",
    "_onOpen",
    "push",
    "_onClose",
    "_onChangeBubble",
    "members",
    "ev",
    "getData",
    "set",
    "index",
    "item",
    "isOpen",
    "bubble",
    "name",
    "replace",
    "getItem",
    "isNodeOpen",
    "refresh",
    "destruct",
    "data",
    "removeListenerById",
    "ui",
    "OpenCloseController"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/OpenCloseController.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2017 Cajus Pollmeier\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Cajus Pollmeier\r\n     * Derrell Lipman\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Because of the virtual nature of the VirtualTree, and the fact that\r\n * rendering occurs asynchronously, it is not a simple matter to bind a\r\n * property in the model that will open or close branches in the\r\n * tree. Instead, this controller listens to both the model and the tree, and\r\n * synchronizes the openness of branches in the tree.\r\n *\r\n * To use this controller, simply instantiate it with the requisite\r\n * constructor arguments.\r\n */\r\nqx.Class.define(\"qx.ui.tree.core.OpenCloseController\", {\r\n  extend: qx.core.Object,\r\n\r\n  /**\r\n   * @param tree {qx.ui.tree.VirtualTree}\r\n   *   The tree whose branch open or closed state is to be synchronized to a\r\n   *   model property.\r\n   *\r\n   * @param rootModel {qx.data.Array}\r\n   *   The tree root model wherein a property is to be synchronized to the\r\n   *   tree branches' open or closed states\r\n   */\r\n  construct(tree, rootModel) {\r\n    var openProperty = tree.getOpenProperty();\r\n\r\n    super();\r\n\r\n    // Save the tree and initialize storage of listener IDs\r\n    this._tree = tree;\r\n    this._lids = [];\r\n\r\n    // Sync tree nodes\r\n    var sync = function (node) {\r\n      if (qx.Class.hasProperty(node.constructor, \"children\")) {\r\n        node.getChildren().forEach(sync);\r\n      }\r\n\r\n      if (qx.Class.hasProperty(node.constructor, openProperty)) {\r\n        if (node.get(openProperty)) {\r\n          tree.openNode(node);\r\n        } else {\r\n          tree.closeNode(node);\r\n        }\r\n      }\r\n    }.bind(this);\r\n    sync(rootModel);\r\n\r\n    // Wire change listeners\r\n    var lid = tree.addListener(\"open\", this._onOpen, this);\r\n    this._lids.push([tree, lid]);\r\n    lid = tree.addListener(\"close\", this._onClose, this);\r\n    this._lids.push([tree, lid]);\r\n    lid = rootModel.addListener(\"changeBubble\", this._onChangeBubble, this);\r\n    this._lids.push([rootModel, lid]);\r\n  },\r\n\r\n  members: {\r\n    /** The tree which is synced to the model */\r\n    _tree: null,\r\n\r\n    /** Listener IDs that we manage */\r\n    _lids: null,\r\n\r\n    // event listener for \"open\" on the tree\r\n    _onOpen(ev) {\r\n      ev.getData().set(this._tree.getOpenProperty(), true);\r\n    },\r\n\r\n    // event listener for \"close\" on the tree\r\n    _onClose(ev) {\r\n      ev.getData().set(this._tree.getOpenProperty(), false);\r\n    },\r\n\r\n    // event listener for model changes\r\n    _onChangeBubble(ev) {\r\n      var index;\r\n      var item;\r\n      var isOpen;\r\n      var bubble = ev.getData();\r\n\r\n      // Extract the index of the current item\r\n      index = bubble.name.replace(/.*\\[([0-9]+)\\]$/, \"$1\");\r\n\r\n      // Retrieve that indexed array item if it's an array; otherwise the item itself\r\n      item = bubble.item.getItem ? bubble.item.getItem(index) : bubble.item;\r\n\r\n      // If this item isn't being deleted and has an open property...\r\n      if (\r\n        item &&\r\n        qx.Class.hasProperty(item.constructor, this._tree.getOpenProperty())\r\n      ) {\r\n        // ... then find out if this branch is open\r\n        isOpen = item.get(this._tree.getOpenProperty());\r\n\r\n        // Open or close the tree branch as necessary\r\n        if (isOpen && !this._tree.isNodeOpen(item)) {\r\n          this._tree.openNode(item);\r\n        } else if (!isOpen && this._tree.isNodeOpen(item)) {\r\n          this._tree.closeNode(item);\r\n        }\r\n      }\r\n\r\n      // Rebuild the internal lookup table\r\n      this._tree.refresh();\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    this._tree = null;\r\n    this._lids.forEach(function (data) {\r\n      data[0].removeListenerById(data[1]);\r\n    });\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}