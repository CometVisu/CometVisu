{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "construct",
    "__boundItems",
    "properties",
    "labelPath",
    "check",
    "nullable",
    "iconPath",
    "labelOptions",
    "iconOptions",
    "childProperty",
    "delegate",
    "event",
    "init",
    "members",
    "bindDefaultProperties",
    "item",
    "index",
    "bindProperty",
    "getLabelPath",
    "getLabelOptions",
    "bindPath",
    "__getBindPath",
    "bindTarget",
    "_tree",
    "getLookupTable",
    "data",
    "SingleValueBinding",
    "resolvePropertyChain",
    "util",
    "OOUtil",
    "hasProperty",
    "constructor",
    "getChildProperty",
    "converter",
    "setAppearance",
    "getIconPath",
    "getIconOptions",
    "sourcePath",
    "targetProperty",
    "options",
    "targetWidget",
    "id",
    "bind",
    "__addBinding",
    "bindPropertyReverse",
    "targetPath",
    "sourceProperty",
    "sourceWidget",
    "removeBindings",
    "length",
    "pop",
    "_removeBindingsFrom",
    "_bindItem",
    "bindItem",
    "Delegate",
    "getMethod",
    "getDelegate",
    "bindings",
    "__getBindings",
    "removeBinding",
    "e",
    "includes",
    "lang",
    "Array",
    "remove",
    "__P_465_1",
    "path",
    "__P_465_2",
    "widget",
    "push",
    "__P_465_3",
    "getUserData",
    "setUserData",
    "destruct",
    "ui",
    "tree",
    "core",
    "MWidgetController"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/MWidgetController.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The mixin controls the binding between model and item.\n *\n * @internal\n */\nqx.Mixin.define(\"qx.ui.tree.core.MWidgetController\", {\n  construct() {\n    this.__boundItems = [];\n  },\n\n  properties: {\n    /**\n     * The name of the property, where the value for the tree node/leaf label\n     * is stored in the model classes.\n     */\n    labelPath: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * The path to the property which holds the information that should be\n     * shown as an icon.\n     */\n    iconPath: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions: {\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions: {\n      nullable: true\n    },\n\n    /**\n     * The name of the property, where the children are stored in the model.\n     * Instead of the {@link #labelPath} must the child property a direct\n     * property form the model instance.\n     */\n    childProperty: {\n      check: \"String\",\n      nullable: true\n    },\n\n    /**\n     * Delegation object, which can have one or more functions defined by the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate} interface.\n     */\n    delegate: {\n      event: \"changeDelegate\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  members: {\n    /** @type {Array} which contains the bounded items */\n    __boundItems: null,\n\n    /**\n     * Helper-Method for binding the default properties from the model to the\n     * target widget. The used default properties  depends on the passed item.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used node or\n     *   leaf.\n     * @param index {Integer} The index of the item (node or leaf).\n     */\n    bindDefaultProperties(item, index) {\n      // bind model first\n      this.bindProperty(\"\", \"model\", null, item, index);\n\n      this.bindProperty(\n        this.getLabelPath(),\n        \"label\",\n        this.getLabelOptions(),\n        item,\n        index\n      );\n\n      var bindPath = this.__getBindPath(index);\n      var bindTarget = this._tree.getLookupTable();\n      bindTarget = qx.data.SingleValueBinding.resolvePropertyChain(\n        bindTarget,\n        bindPath\n      );\n\n      if (\n        qx.util.OOUtil.hasProperty(\n          bindTarget.constructor,\n          this.getChildProperty()\n        )\n      ) {\n        this.bindProperty(\n          this.getChildProperty() + \".length\",\n          \"appearance\",\n          {\n            converter() {\n              return \"virtual-tree-folder\";\n            }\n          },\n\n          item,\n          index\n        );\n      } else {\n        item.setAppearance(\"virtual-tree-file\");\n      }\n\n      if (this.getIconPath() != null) {\n        this.bindProperty(\n          this.getIconPath(),\n          \"icon\",\n          this.getIconOptions(),\n          item,\n          index\n        );\n      }\n    },\n\n    /**\n     * Helper-Method for binding a given property from the model to the target\n     * widget.\n     *\n     * This method should only be called in the {@link IVirtualTreeDelegate#bindItem}\n     * function implemented by the {@link #delegate} property.\n     *\n     * @param sourcePath {String | null} The path to the property in the model.\n     *   If you use an empty string, the whole model item will be bound.\n     * @param targetProperty {String} The name of the property in the target widget.\n     * @param options {Map | null} The options to use for the binding.\n     * @param targetWidget {qx.ui.core.Widget} The target widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindProperty(sourcePath, targetProperty, options, targetWidget, index) {\n      var bindPath = this.__getBindPath(index, sourcePath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = bindTarget.bind(bindPath, targetWidget, targetProperty, options);\n      this.__addBinding(targetWidget, id);\n    },\n\n    /**\n     * Helper-Method for binding a given property from the target widget to\n     * the model.\n     * This method should only be called in the\n     * {@link qx.ui.tree.core.IVirtualTreeDelegate#bindItem} function implemented by the\n     * {@link #delegate} property.\n     *\n     * @param targetPath {String | null} The path to the property in the model.\n     * @param sourceProperty {String} The name of the property in the target.\n     * @param options {Map | null} The options to use for the binding.\n     * @param sourceWidget {qx.ui.core.Widget} The source widget.\n     * @param index {Integer} The index of the current binding.\n     */\n    bindPropertyReverse(\n      targetPath,\n      sourceProperty,\n      options,\n      sourceWidget,\n      index\n    ) {\n      var bindPath = this.__getBindPath(index, targetPath);\n      var bindTarget = this._tree.getLookupTable();\n\n      var id = sourceWidget.bind(sourceProperty, bindTarget, bindPath, options);\n      this.__addBinding(sourceWidget, id);\n    },\n\n    /**\n     * Remove all bindings from all bounded items.\n     */\n    removeBindings() {\n      while (this.__boundItems.length > 0) {\n        var item = this.__boundItems.pop();\n        this._removeBindingsFrom(item);\n      }\n    },\n\n    /**\n     * Sets up the binding for the given item and index.\n     *\n     * @param item {qx.ui.core.Widget} The internally created and used item.\n     * @param index {Integer} The index of the item.\n     */\n    _bindItem(item, index) {\n      var bindItem = qx.util.Delegate.getMethod(this.getDelegate(), \"bindItem\");\n\n      if (bindItem != null) {\n        bindItem(this, item, index);\n      } else {\n        this.bindDefaultProperties(item, index);\n      }\n    },\n\n    /**\n     * Removes the binding of the given item.\n     *\n     * @param item {qx.ui.core.Widget} The item which the binding should be\n     *   removed.\n     */\n    _removeBindingsFrom(item) {\n      var bindings = this.__getBindings(item);\n\n      while (bindings.length > 0) {\n        var id = bindings.pop();\n\n        try {\n          this._tree.getLookupTable().removeBinding(id);\n        } catch (e) {\n          item.removeBinding(id);\n        }\n      }\n\n      if (this.__boundItems.includes(item)) {\n        qx.lang.Array.remove(this.__boundItems, item);\n      }\n    },\n\n    /**\n     * Helper method to create the path for binding.\n     *\n     * @param index {Integer} The index of the item.\n     * @param path {String|null} The path to the property.\n     * @return {String} The binding path\n     */\n    __getBindPath(index, path) {\n      var bindPath = \"[\" + index + \"]\";\n      if (path != null && path != \"\") {\n        bindPath += \".\" + path;\n      }\n      return bindPath;\n    },\n\n    /**\n     * Helper method to save the binding for the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to save binding.\n     * @param id {var} the id from the binding.\n     */\n    __addBinding(widget, id) {\n      var bindings = this.__getBindings(widget);\n\n      if (!bindings.includes(id)) {\n        bindings.push(id);\n      }\n\n      if (!this.__boundItems.includes(widget)) {\n        this.__boundItems.push(widget);\n      }\n    },\n\n    /**\n     * Helper method which returns all bound id from the widget.\n     *\n     * @param widget {qx.ui.core.Widget} widget to get all binding.\n     * @return {Array} all bound id's.\n     */\n    __getBindings(widget) {\n      var bindings = widget.getUserData(\"BindingIds\");\n\n      if (bindings == null) {\n        bindings = [];\n        widget.setUserData(\"BindingIds\", bindings);\n      }\n\n      return bindings;\n    }\n  },\n\n  destruct() {\n    this.__boundItems = null;\n  }\n});\n"
  ],
  "mappings": "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"
}