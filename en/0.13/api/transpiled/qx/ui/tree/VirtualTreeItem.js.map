{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/VirtualTreeItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "core",
    "AbstractItem",
    "properties",
    "appearance",
    "refine",
    "init",
    "members",
    "_forwardStates",
    "selected",
    "_addWidgets",
    "addSpacer",
    "addOpenButton",
    "addIcon",
    "addLabel",
    "_shouldShowOpenSymbol",
    "open",
    "getChildControl",
    "isOpenable",
    "getLevel",
    "getUserData",
    "hasChildren",
    "model",
    "getModel",
    "childProperty",
    "showLeafs",
    "Util",
    "_applyModel",
    "value",
    "old",
    "isNode",
    "eventType",
    "lang",
    "String",
    "firstUp",
    "hasProperty",
    "constructor",
    "addListener",
    "_onChangeChildProperty",
    "get",
    "_onChangeLength",
    "_updateIndent",
    "removeListener",
    "oldChildren",
    "e",
    "children",
    "getData",
    "getOldData",
    "VirtualTreeItem"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * The tree item is a tree element for the {@link VirtualTree}, which can have\n * nested tree elements.\n */\nqx.Class.define(\"qx.ui.tree.VirtualTreeItem\",\n{\n  extend : qx.ui.tree.core.AbstractItem,\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"virtual-tree-folder\"\n    }\n  },\n\n\n  members :\n  {\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      selected : true\n    },\n\n\n    // overridden\n    _addWidgets : function()\n    {\n      this.addSpacer();\n      this.addOpenButton();\n      this.addIcon();\n      this.addLabel();\n    },\n\n\n    // overridden\n    _shouldShowOpenSymbol : function()\n    {\n      var open = this.getChildControl(\"open\", true);\n      if (open == null) {\n        return false;\n      }\n\n      return this.isOpenable();\n    },\n\n\n    // overridden\n    getLevel : function() {\n      return this.getUserData(\"cell.level\");\n    },\n\n\n    // overridden\n    hasChildren : function()\n    {\n      var model = this.getModel();\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      return qx.ui.tree.core.Util.hasChildren(model, childProperty, !showLeafs);\n    },\n\n\n    // apply method\n    _applyModel : function(value, old)\n    {\n      var childProperty = this.getUserData(\"cell.childProperty\");\n      var showLeafs = this.getUserData(\"cell.showLeafs\");\n\n      if (value != null && qx.ui.tree.core.Util.isNode(value, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        // listen to children property changes\n        if (qx.Class.hasProperty(value.constructor, childProperty)) {\n          value.addListener(eventType, this._onChangeChildProperty, this);\n        }\n\n\n        // children property has been set already, immediately add\n        // listener for indent updating\n        if (qx.ui.tree.core.Util.hasChildren(value, childProperty, !showLeafs)) {\n          value.get(childProperty).addListener(\"changeLength\",\n            this._onChangeLength, this);\n          this._updateIndent();\n        }\n      }\n\n\n      if (old != null && qx.ui.tree.core.Util.isNode(old, childProperty))\n      {\n        var eventType = \"change\" + qx.lang.String.firstUp(childProperty);\n        old.removeListener(eventType, this._onChangeChildProperty, this);\n\n        var oldChildren = old.get(childProperty);\n        if (oldChildren) {\n          oldChildren.removeListener(\"changeLength\", this._onChangeLength, this);\n        }\n      }\n    },\n\n\n    /**\n     * Handler to update open/close icon when model length changed.\n     */\n    _onChangeLength : function() {\n      this._updateIndent();\n    },\n\n\n    /**\n     * Handler to add listener to array of children property.\n     *\n     * @param e {qx.event.type.Data} Data event; provides children array\n     */\n    _onChangeChildProperty : function(e)\n    {\n      var children = e.getData();\n      var old = e.getOldData();\n\n      if (children) {\n        this._updateIndent();\n        children.addListener(\"changeLength\", this._onChangeLength, this);\n      }\n\n      if (old) {\n        old.removeListener(\"changeLength\", this._onChangeLength, this);\n      }\n    }\n  }\n});"
  ]
}