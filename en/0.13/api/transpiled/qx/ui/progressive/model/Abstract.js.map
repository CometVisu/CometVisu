{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "events",
    "dataAvailable",
    "members",
    "getElementCount",
    "Error",
    "getNextElement",
    "ui",
    "progressive",
    "model",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/model/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2008 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Data Model for Progressive renderer.\r\n */\r\nqx.Class.define(\"qx.ui.progressive.model.Abstract\", {\r\n  type: \"abstract\",\r\n  extend: qx.core.Object,\r\n\r\n  events: {\r\n    /**\r\n     * This event is fired when new data has been added to the data model.  It\r\n     * typically informs Progressive to begin its rendering process.\r\n     *\r\n     * The event data is an integer: the number of elements now available on\r\n     * the element queue.\r\n     */\r\n    dataAvailable: \"qx.event.type.Data\"\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Get the number of data elements currently available.\r\n     *\r\n     * @throws {Error} An error if this method is called.\r\n     * @return {Integer}\r\n     */\r\n    getElementCount() {\r\n      throw new Error(\"getElementCount() is abstract\");\r\n    },\r\n\r\n    /**\r\n     * Get the next available element from the data model.\r\n     *\r\n     * @throws {Error} An error if this method is called.\r\n     * @return {Object}\r\n     *   The returned object must provide at least the following members:\r\n     *   <dl>\r\n     *     <dt>\r\n     *       renderer</dt>\r\n     *     <dd>\r\n     *       The name of a renderer.  That name is used by {@link\r\n     *       qx.ui.progressive.Progressive} to select the renderer to be used\r\n     *       to render this element.  The name should match one provided to\r\n     *       {@link qx.ui.progressive.Progressive#addRenderer}.\r\n     *     </dd>\r\n     *\r\n     *     <dt>\r\n     *       data\r\n     *     </dt>\r\n     *     <dd>\r\n     *       The data to be passed to the renderer.  The data may be of any\r\n     *       type that the renderer knows how to render.\r\n     *     </dd>\r\n     *   </dl>\r\n     */\r\n    getNextElement() {\r\n      throw new Error(\"getNextElement() is abstract\");\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kCAAkC,EAAE;IAClDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAACC,MAAM;IAEtBC,MAAM,EAAE;MACN;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,aAAa,EAAE;IACjB,CAAC;IAEDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIC,eAAe,WAAAA,gBAAA,EAAG;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,cAAc,WAAAA,eAAA,EAAG;QACf,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF;EACF,CAAC,CAAC;EA5EFd,EAAE,CAACgB,EAAE,CAACC,WAAW,CAACC,KAAK,CAACC,QAAQ,CAAChB,aAAa,GAAGA,aAAa;AAAC"
}