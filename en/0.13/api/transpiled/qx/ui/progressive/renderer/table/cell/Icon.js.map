{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "ui",
    "progressive",
    "renderer",
    "table",
    "cell",
    "Abstract",
    "construct",
    "constructor",
    "call",
    "aliasManager",
    "util",
    "AliasManager",
    "getInstance",
    "resourceManager",
    "ResourceManager",
    "blankImg",
    "resolve",
    "_imageBlank",
    "toUri",
    "members",
    "getBlankImage",
    "_identifyImage",
    "cellInfo",
    "Error",
    "_getCellStyle",
    "ret",
    "Icon",
    "superclass",
    "prototype",
    "_getContentHtml",
    "html",
    "imageData",
    "_getImageData",
    "push",
    "core",
    "Environment",
    "get",
    "test",
    "url",
    "imageWidth",
    "imageHeight",
    "tooltip",
    "extras",
    "join"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/renderer/table/cell/Icon.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\r\n     2008 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Til Schneider (til132)\r\n     * Carsten Lergenmueller (carstenl)\r\n     * Derrell Lipman (derrell)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Abstract Icon cell renderer.\r\n *\r\n * @asset(qx/static/blank.gif)\r\n */\r\nqx.Class.define(\"qx.ui.progressive.renderer.table.cell.Icon\", {\r\n  type: \"abstract\",\r\n  extend: qx.ui.progressive.renderer.table.cell.Abstract,\r\n\r\n  /** Create a new instance of an Icon cell renderer */\r\n  construct() {\r\n    super();\r\n\r\n    var aliasManager = qx.util.AliasManager.getInstance();\r\n    var resourceManager = qx.util.ResourceManager.getInstance();\r\n    var blankImg = aliasManager.resolve(\"qx/static/blank.gif\");\r\n\r\n    this._imageBlank = resourceManager.toUri(blankImg);\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * A blank image for use as a spacer in place of another image\r\n     */\r\n    _imageBlank: null,\r\n\r\n    /**\r\n     * Retrieve the URI for a blank image\r\n     *\r\n     * @return {String}\r\n     *   The URI of the blank image.\r\n     */\r\n    getBlankImage() {\r\n      return this._imageBlank;\r\n    },\r\n\r\n    /**\r\n     * Identify the image to be displayed in the cell.\r\n     *\r\n     * @param cellInfo {Map}\r\n     *   Information about the cell being renderered, including:\r\n     *   <ul>\r\n     *     <li>state</li>\r\n     *     <li>rowDiv</li>\r\n     *     <li>stylesheet</li>\r\n     *     <li>element</li>\r\n     *     <li>dataIndex</li>\r\n     *     <li>cellData</li>\r\n     *     <li>height</li>\r\n     *   </ul>\r\n     *\r\n     * @return {Map}\r\n     *   The returned map should contain at least the <i>url</i> field, but\r\n     *   may contain any others of these:\r\n     *\r\n     *   <dl>\r\n     *     <dt>\r\n     *       url\r\n     *     </dt>\r\n     *     <dd>\r\n     *       The URL of the image to be displayed\r\n     *     </dd>\r\n     *\r\n     *     <dt>\r\n     *       imageWidth\r\n     *     </dt>\r\n     *     <dd>\r\n     *       The width at which the image should be displayed\r\n     *     </dd>\r\n     *\r\n     *     <dt>\r\n     *       imageHeight\r\n     *     </dt>\r\n     *     <dd>\r\n     *       The height at which the image should be displayed\r\n     *     </dd>\r\n     *\r\n     *     <dt>\r\n     *       extras\r\n     *     </dt>\r\n     *     <dd>\r\n     *       Any extra attributes to be include in the 'image' tag.\r\n     *     </dd>\r\n     *   </dl>\r\n     */\r\n    _identifyImage(cellInfo) {\r\n      throw new Error(\"_identifyImage() is abstract\");\r\n    },\r\n\r\n    // overridden\r\n    _getCellStyle(cellInfo) {\r\n      var ret =\r\n        super._getCellStyle(cellInfo) +\r\n        \"text-align:center;\" +\r\n        \"vertical-align:middle;\";\r\n      return ret;\r\n    },\r\n\r\n    // overridden\r\n    _getContentHtml(cellInfo) {\r\n      var html = [];\r\n      var imageData = this._getImageData(cellInfo);\r\n\r\n      // Start the image tag\r\n      html.push(\"<img \");\r\n\r\n      // Add magic to make png images work in IE\r\n      if (\r\n        qx.core.Environment.get(\"css.alphaimageloaderneeded\") &&\r\n        /\\.png$/i.test(imageData.url)\r\n      ) {\r\n        html.push(\r\n          'src=\"',\r\n          this._imageBlank,\r\n          '\" style=\"filter:',\r\n          \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\",\r\n          imageData.url,\r\n          \"',sizingMethod='scale')\",\r\n          '\" '\r\n        );\r\n      } else {\r\n        html.push('src=\"', imageData.url, '\" ');\r\n      }\r\n\r\n      // If image width is specified...\r\n      if (imageData.imageWidth) {\r\n        // ... then add it.\r\n        html.push(\" width='\", imageData.imageWidth, \"px'\");\r\n      }\r\n\r\n      // If image height is specified...\r\n      if (imageData.imageHeight) {\r\n        // ... then add it.\r\n        html.push(\" height='\", imageData.imageHeight, \"px'\");\r\n      }\r\n\r\n      // Move the image off of the top border\r\n      html.push(\" style='padding-top:2px;'\");\r\n\r\n      // If a tooltip is specified...\r\n      if (imageData.tooltip) {\r\n        // ... then add it.\r\n        html.push(\" title='\", imageData.tooltip, \"'\");\r\n      }\r\n\r\n      // If there are any extra parameters specified, add them now.\r\n      if (imageData.extras) {\r\n        html.push(imageData.extras);\r\n      }\r\n\r\n      // All done.\r\n      html.push(\">\");\r\n\r\n      // Give 'em what they came for\r\n      return html.join(\"\");\r\n    },\r\n\r\n    /**\r\n     * Obtain the image data (url, tooltip) that's appropriate for this cell\r\n     *\r\n     * @param cellInfo {Map}\r\n     *   Information about the cell being renderered, including:\r\n     *   <ul>\r\n     *     <li>state</li>\r\n     *     <li>rowDiv</li>\r\n     *     <li>stylesheet</li>\r\n     *     <li>element</li>\r\n     *     <li>dataIndex</li>\r\n     *     <li>cellData</li>\r\n     *     <li>height</li>\r\n     *   </ul>\r\n     *\r\n     * @return {Map}\r\n     *   See {@link #_identifyImage}\r\n     */\r\n    _getImageData(cellInfo) {\r\n      // Query the subclass about image and tooltip\r\n      var imageData = this._identifyImage(cellInfo);\r\n\r\n      // If subclass refuses to give map, construct it\r\n      if (imageData == null || typeof imageData == \"string\") {\r\n        imageData = {\r\n          url: imageData,\r\n          tooltip: null\r\n        };\r\n      }\r\n\r\n      // If subclass gave null as url, replace with url to empty image\r\n      if (imageData.url == null) {\r\n        imageData.url = this._imageBlank;\r\n      }\r\n\r\n      return imageData;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}