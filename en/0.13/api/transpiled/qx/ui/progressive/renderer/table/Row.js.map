{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "progressive",
    "renderer",
    "Abstract",
    "construct",
    "columnWidths",
    "constructor",
    "call",
    "__columnWidths",
    "__renderers",
    "__defaultCellRenderer",
    "table",
    "cell",
    "Default",
    "__progressive",
    "__colors",
    "__linkColors",
    "__layout",
    "layout",
    "HBox",
    "connectToWidget",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "addListener",
    "statics",
    "__clazz",
    "__padding",
    "__tableCellStyleSheet",
    "core",
    "Environment",
    "get",
    "bom",
    "Style",
    "getCssName",
    "properties",
    "defaultRowHeight",
    "init",
    "members",
    "__name",
    "__hash",
    "__P_431_5",
    "colorMgr",
    "Color",
    "bgcol",
    "resolve",
    "join",
    "name",
    "Error",
    "tr",
    "Row",
    "hash",
    "toHashCode",
    "rowstylesheet",
    "cellstylesheet",
    "stylesheet",
    "Stylesheet",
    "createElement",
    "columnData",
    "getData",
    "i",
    "length",
    "pane",
    "getStructure",
    "getPane",
    "_resizeColumns",
    "addRenderer",
    "column",
    "removeRenderer",
    "render",
    "state",
    "element",
    "data",
    "html",
    "cellInfo",
    "height",
    "getRendererData",
    "end",
    "undefined",
    "start",
    "rows",
    "totalHeight",
    "div",
    "document",
    "rowDiv",
    "dataIndex",
    "cellData",
    "rowRenderer",
    "push",
    "getDefaultRowHeight",
    "rendererData",
    "style",
    "position",
    "className",
    "innerHTML",
    "location",
    "index",
    "backgroundColor",
    "getContentElement",
    "getDomElement",
    "appendChild",
    "elem",
    "children",
    "childNodes",
    "insertBefore",
    "getLayoutChildren",
    "e",
    "width",
    "getBounds",
    "Scroll",
    "getScrollbarWidth",
    "removeRule",
    "rule",
    "addRule",
    "renderLayout",
    "top",
    "right",
    "bottom",
    "left",
    "getComputedWidth",
    "inset",
    "widthRule",
    "paddingRule",
    "leftRule",
    "destruct",
    "removeListener",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/renderer/table/Row.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n   qooxdoo - the new era of web development\r\n   http://qooxdoo.org\r\n   Copyright:\r\n    2008 Derrell Lipman\r\n   License:\r\n    MIT: https://opensource.org/licenses/MIT\r\n    See the LICENSE file in the project's top-level directory for details.\r\n   Authors:\r\n    * Derrell Lipman (derrell)\r\n************************************************************************ */\r\n\r\n/**\r\n * Table Row renderer for Progressive.\r\n */\r\nqx.Class.define(\"qx.ui.progressive.renderer.table.Row\", {\r\n  extend: qx.ui.progressive.renderer.Abstract,\r\n\r\n  /**\r\n   * @param columnWidths {qx.ui.progressive.renderer.table.Widths}\r\n   *   Information that indicates how to resize each of the column widths\r\n   */\r\n  construct(columnWidths) {\r\n    super();\r\n\r\n    // Save the column widths\r\n    this.__columnWidths = columnWidths;\r\n\r\n    // Create space to store renderers for each column\r\n    this.__renderers = {};\r\n\r\n    // We need a default cell renderer to use if none is specified\r\n    this.__defaultCellRenderer =\r\n      new qx.ui.progressive.renderer.table.cell.Default();\r\n\r\n    // We don't yet know who our Progressive will be\r\n    this.__progressive = null;\r\n\r\n    this.__colors = {};\r\n    this.__linkColors();\r\n\r\n    // This layout is not connected to a widget but to this class. This class\r\n    // must implement the method \"getLayoutChildren\", which must return all\r\n    // columns (LayoutItems) which should be recalculated. The call\r\n    // \"layout.renderLayout\" will call the method \"renderLayout\" on each\r\n    // column data object The advantage of the use of the normal layout\r\n    // manager is that the semantics of flex and percent are exactly the same\r\n    // as in the widget code.\r\n    this.__layout = new qx.ui.layout.HBox();\r\n    this.__layout.connectToWidget(this);\r\n\r\n    // dynamic theme switch\r\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\r\n      qx.theme.manager.Meta.getInstance().addListener(\r\n        \"changeTheme\",\r\n        this.__linkColors,\r\n        this\r\n      );\r\n    }\r\n  },\r\n\r\n  statics: {\r\n    /**\r\n     * Storage for each progressive.\r\n     *\r\n     * @internal\r\n     */\r\n    __clazz: null,\r\n\r\n    /**\r\n     * Default row padding.\r\n     *\r\n     * @internal\r\n     */\r\n    __padding: 6, // modify padding parameter below too if this changes\r\n\r\n    /**\r\n     * Default style sheet for table cells.\r\n     *\r\n     * @internal\r\n     */\r\n    __tableCellStyleSheet:\r\n      \"  position: absolute;\" +\r\n      \"  top: 0px;\" +\r\n      \"  height: 100%;\" +\r\n      \"  overflow:hidden;\" +\r\n      (qx.core.Environment.get(\"css.textoverflow\")\r\n        ? qx.bom.Style.getCssName(qx.core.Environment.get(\"css.textoverflow\")) +\r\n          \":ellipsis;\"\r\n        : \"\") +\r\n      \"  white-space:nowrap;\" +\r\n      \"  border-right:1px solid #f2f2f2;\" +\r\n      \"  border-bottom:1px solid #eeeeee;\" +\r\n      \"  padding : 0px 6px 0px 6px;\" +\r\n      \"  cursor:default;\" +\r\n      \"  font-size: 11px;\" +\r\n      \"  font-family: 'Segoe UI', Corbel, Calibri, Tahoma, 'Lucida Sans Unicode', sans-serif;\" +\r\n      (qx.core.Environment.get(\"css.userselect\")\r\n        ? qx.bom.Style.getCssName(qx.core.Environment.get(\"css.userselect\")) +\r\n          \":\" +\r\n          qx.core.Environment.get(\"css.userselect.none\") +\r\n          \";\"\r\n        : \"\")\r\n  },\r\n\r\n  properties: {\r\n    /** The default height of a row, if not altered by a cell renderer. */\r\n    defaultRowHeight: {\r\n      init: 16\r\n    }\r\n  },\r\n\r\n  members: {\r\n    __progressive: null,\r\n    __name: null,\r\n    __hash: null,\r\n    __columnWidths: null,\r\n    __renderers: null,\r\n    __defaultCellRenderer: null,\r\n    __colors: null,\r\n    __layout: null,\r\n\r\n    /**\r\n     * Helper to link the theme colors to the current class\r\n     */\r\n    __linkColors() {\r\n      // link to color theme\r\n      var colorMgr = qx.theme.manager.Color.getInstance();\r\n      this.__colors.bgcol = [];\r\n      this.__colors.bgcol[0] = colorMgr.resolve(\r\n        \"progressive-table-row-background-even\"\r\n      );\r\n\r\n      this.__colors.bgcol[1] = colorMgr.resolve(\r\n        \"progressive-table-row-background-odd\"\r\n      );\r\n    },\r\n\r\n    // overridden\r\n    join(progressive, name) {\r\n      // Are we already joined?\r\n      if (this.__progressive) {\r\n        // Yup.  Let 'em know they can't do that.\r\n        throw new Error(\"Renderer is already joined to a Progressive.\");\r\n      }\r\n\r\n      // Save the Progressive to which we're joined\r\n      this.__progressive = progressive;\r\n\r\n      // Save the name that Progressive knows us by\r\n      this.__name = name;\r\n\r\n      // If we haven't created style sheets for this table yet...\r\n      var tr = qx.ui.progressive.renderer.table.Row;\r\n      if (!tr.__clazz) {\r\n        tr.__clazz = {};\r\n      }\r\n\r\n      var hash = progressive.toHashCode();\r\n      if (!tr.__clazz[hash]) {\r\n        // ... then do it now.\r\n        tr.__clazz[hash] = {\r\n          rowstylesheet: null,\r\n          cellstylesheet: []\r\n        };\r\n\r\n        var stylesheet =\r\n          \".qx-progressive-\" + hash + \"-row {\" + \"  width : 100%;\" + \"}\";\r\n        tr.__clazz[hash].rowstylesheet =\r\n          qx.bom.Stylesheet.createElement(stylesheet);\r\n\r\n        var columnData = this.__columnWidths.getData();\r\n\r\n        for (var i = 0; i < columnData.length; i++) {\r\n          var stylesheet =\r\n            \".qx-progressive-\" +\r\n            hash +\r\n            \"-col-\" +\r\n            i +\r\n            \" {\" +\r\n            tr.__tableCellStyleSheet +\r\n            \"}\";\r\n          tr.__clazz[hash].cellstylesheet[i] =\r\n            qx.bom.Stylesheet.createElement(stylesheet);\r\n        }\r\n\r\n        // Save the hash too\r\n        this.__hash = hash;\r\n\r\n        // Arrange to be called when the window appears or is resized, so we\r\n        // can set each style sheet's left and width field appropriately.\r\n        var pane = progressive.getStructure().getPane();\r\n        pane.addListener(\"resize\", this._resizeColumns, this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Add a cell renderer for use within a row rendered by this row\r\n     * renderer.\r\n     *\r\n     * @param column {Integer}\r\n     *   The column number for which the cell renderer applies\r\n     *\r\n     * @param renderer {qx.ui.progressive.renderer.table.cell.Abstract}\r\n     *   The cell renderer for the specified column.\r\n     *\r\n     */\r\n    addRenderer(column, renderer) {\r\n      var columnData = this.__columnWidths.getData();\r\n      if (column < 0 || column >= columnData.length) {\r\n        throw new Error(\r\n          \"Column \" +\r\n            column +\r\n            \" out of range (max: \" +\r\n            (columnData.length - 1) +\r\n            \")\"\r\n        );\r\n      }\r\n\r\n      this.__renderers[column] = renderer;\r\n    },\r\n\r\n    /**\r\n     * Remove a cell renderer previously added with {@link #addRenderer}.\r\n     *\r\n     * @param column {Integer}\r\n     *   The column for which the cell renderer is to be removed.\r\n     *\r\n     */\r\n    removeRenderer(column) {\r\n      var columnData = this.__columnWidths.getData();\r\n      if (column < 0 || column >= columnData.length) {\r\n        throw new Error(\r\n          \"Column \" +\r\n            column +\r\n            \" out of range (max: \" +\r\n            (columnData.length - 1) +\r\n            \")\"\r\n        );\r\n      }\r\n\r\n      if (!this.__renderers[column]) {\r\n        throw new Error(\"No existing renderer for column \" + column);\r\n      }\r\n\r\n      delete this.__renderers[column];\r\n    },\r\n\r\n    // overridden\r\n    render(state, element) {\r\n      var data = element.data;\r\n      var html = [];\r\n      var cellInfo;\r\n      var renderer;\r\n      var height = 0;\r\n\r\n      // Initialize row counter, if necessary.  We'll use this for shading\r\n      // alternate rows.\r\n\r\n      if (state.getRendererData()[this.__name].end === undefined) {\r\n        state.getRendererData()[this.__name] = {\r\n          end: 0,\r\n          start: 1,\r\n          rows: 0,\r\n          totalHeight: 0\r\n        };\r\n      }\r\n\r\n      // Create the div for this row\r\n      var div = document.createElement(\"div\");\r\n\r\n      // For each cell...\r\n      for (var i = 0; i < data.length; i++) {\r\n        var stylesheet = \"qx-progressive-\" + this.__hash + \"-col-\" + i;\r\n\r\n        // Determine what renderer to use for this column\r\n        renderer = this.__renderers[i] || this.__defaultCellRenderer;\r\n\r\n        // Specify information that cell renderer will need\r\n        cellInfo = {\r\n          state: state,\r\n          rowDiv: div,\r\n          stylesheet: stylesheet,\r\n          element: element,\r\n          dataIndex: i,\r\n          cellData: data[i],\r\n          height: height,\r\n          rowRenderer: this // useful, e.g., for getting default row height\r\n        };\r\n\r\n        // Render this cell\r\n        html.push(renderer.render(cellInfo));\r\n\r\n        // If this cell's height was greater than our current maximum...\r\n        if (cellInfo.height > height) {\r\n          // ... then it becomes our row height\r\n          height = cellInfo.height;\r\n        }\r\n      }\r\n\r\n      height = height > 0 ? height : this.getDefaultRowHeight();\r\n\r\n      // Get a reference to our renderer data\r\n      var rendererData = state.getRendererData()[this.__name];\r\n\r\n      // Track total height so we can determine if there's a vertical scrollbar\r\n      rendererData.totalHeight += height;\r\n\r\n      // Set properties for the row div\r\n      div.style.position = \"relative\";\r\n      div.style.height = height + \"px\";\r\n      div.className = \"qx-progressive-\" + this.__hash + \"-row\";\r\n      div.innerHTML = html.join(\"\");\r\n\r\n      // Add this row to the table\r\n      switch (element.location) {\r\n        case \"end\":\r\n          // Determine color of row based on state of last added row\r\n          var index = rendererData.end || 0;\r\n\r\n          // Set the background color of this row\r\n          div.style.backgroundColor = this.__colors.bgcol[index];\r\n\r\n          // Update state for next time\r\n          rendererData.end = index == 0 ? 1 : 0;\r\n\r\n          // Append our new row to the pane.\r\n          state.getPane().getContentElement().getDomElement().appendChild(div);\r\n          break;\r\n\r\n        case \"start\":\r\n          // Get the pane element\r\n          var elem = state.getPane().getContentElement().getDomElement();\r\n\r\n          // Get its children array\r\n          var children = elem.childNodes;\r\n\r\n          // Are there any children?\r\n          if (children.length > 0) {\r\n            // Yup.  Determine color of row based on state of last added row\r\n            var index = rendererData.start;\r\n\r\n            // Set the background color of this row\r\n            div.style.backgroundColor = this.__colors.bgcol[index];\r\n\r\n            // Update state for next time\r\n            rendererData.start = index == 0 ? 1 : 0;\r\n\r\n            // Insert our new row before the first child.\r\n            elem.insertBefore(div, children[0]);\r\n            break;\r\n          } else {\r\n            /* No children yet.  We can append our new row. */\r\n            elem.appendChild(div);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          throw new Error(\"Invalid location: \" + element.location);\r\n      }\r\n\r\n      // Increment row count\r\n      ++rendererData.rows;\r\n    },\r\n\r\n    /**\r\n     * This method is required by the box layout. If returns an array of items\r\n     * to relayout.\r\n     * @return {Array} Array of column data.\r\n     */\r\n    getLayoutChildren() {\r\n      return this.__columnWidths.getData();\r\n    },\r\n\r\n    /**\r\n     * Event handler for the \"resize\" event.  We recalculate the\r\n     * widths of each of the columns, and modify the stylesheet rule\r\n     * applicable to each column, to apply the new widths.\r\n     *\r\n     * @param e {qx.event.type.Event}\r\n     *   Ignored\r\n     *\r\n     */\r\n    _resizeColumns(e) {\r\n      var pane = this.__progressive.getStructure().getPane();\r\n\r\n      var width =\r\n        pane.getBounds().width - qx.bom.element.Scroll.getScrollbarWidth();\r\n\r\n      // Get the style sheet rule name for this row\r\n      var stylesheet = \".qx-progressive-\" + this.__hash + \"-row\";\r\n\r\n      // Remove the style rule for this row\r\n      var tr = qx.ui.progressive.renderer.table.Row;\r\n      qx.bom.Stylesheet.removeRule(\r\n        tr.__clazz[this.__hash].rowstylesheet,\r\n        stylesheet\r\n      );\r\n\r\n      // Create the new rule for this row\r\n      var rule = \"width: \" + width + \"px;\";\r\n\r\n      // Apply the new rule\r\n      qx.bom.Stylesheet.addRule(\r\n        tr.__clazz[this.__hash].rowstylesheet,\r\n        stylesheet,\r\n        rule\r\n      );\r\n\r\n      // Compute the column widths\r\n      this.__layout.renderLayout(width, 100, {\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0\r\n      });\r\n\r\n      // Get the column data\r\n      var columnData = this.__columnWidths.getData();\r\n\r\n      // Reset each of the column style sheets to deal with width changes\r\n      for (var i = 0, left = 0; i < columnData.length; i++, left += width) {\r\n        // Get the style sheet rule name for this cell\r\n        var stylesheet = \".qx-progressive-\" + this.__hash + \"-col-\" + i;\r\n\r\n        // Remove the style rule for this column\r\n        var tr = qx.ui.progressive.renderer.table.Row;\r\n        qx.bom.Stylesheet.removeRule(\r\n          tr.__clazz[this.__hash].cellstylesheet[i],\r\n          stylesheet\r\n        );\r\n\r\n        // Get this column width.\r\n        width = columnData[i].getComputedWidth();\r\n\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          if (qx.core.Environment.get(\"qx.tableResizeDebug\")) {\r\n            this.debug(\"col \" + i + \": width=\" + width);\r\n          }\r\n        }\r\n\r\n        // Make our width calculations box-model independent\r\n        var inset;\r\n        if (qx.core.Environment.get(\"css.boxmodel\") == \"content\") {\r\n          inset = qx.ui.progressive.renderer.table.Row.__padding * 2;\r\n        } else {\r\n          inset = -1;\r\n        }\r\n\r\n        // Create the new rule, based on calculated widths\r\n        var widthRule = width - inset + \"px;\";\r\n\r\n        var paddingRule =\r\n          \"0px \" +\r\n          qx.ui.progressive.renderer.table.Row.__padding +\r\n          \"px \" +\r\n          \"0px \" +\r\n          qx.ui.progressive.renderer.table.Row.__padding +\r\n          \"px;\";\r\n\r\n        var leftRule = left + \"px;\";\r\n\r\n        var rule =\r\n          tr.__tableCellStyleSheet +\r\n          \"width: \" +\r\n          widthRule +\r\n          \"left: \" +\r\n          leftRule +\r\n          \"padding: \" +\r\n          paddingRule;\r\n\r\n        // Apply the new rule\r\n        qx.bom.Stylesheet.addRule(\r\n          tr.__clazz[this.__hash].cellstylesheet[i],\r\n          stylesheet,\r\n          rule\r\n        );\r\n      }\r\n    }\r\n  },\r\n\r\n  destruct() {\r\n    // remove dynamic theme listener\r\n    qx.theme.manager.Meta.getInstance().removeListener(\r\n      \"changeTheme\",\r\n      this.__linkColors,\r\n      this\r\n    );\r\n\r\n    var name;\r\n\r\n    for (name in this.__renderers) {\r\n      this.__renderers[name] = null;\r\n    }\r\n\r\n    // Remove any style sheets that we had added\r\n    var tr = qx.ui.progressive.renderer.table.Row;\r\n    var hash = this.__progressive.toHashCode();\r\n    if (tr.__clazz && tr.__clazz[hash]) {\r\n      // Remove the row stylesheet\r\n      if (tr.__clazz[hash].rowstylesheet) {\r\n        // Get the style sheet rule name for this row\r\n        var stylesheet = \".qx-progressive-\" + this.__hash + \"-row\";\r\n\r\n        // Remove the style rule for this row\r\n        var tr = qx.ui.progressive.renderer.table.Row;\r\n        qx.bom.Stylesheet.removeRule(\r\n          tr.__clazz[this.__hash].rowstylesheet,\r\n          stylesheet\r\n        );\r\n      }\r\n\r\n      // Remove each of the column style sheets\r\n      if (tr.__clazz[hash].cellstylesheet) {\r\n        for (var i = tr.__clazz[hash].cellstylesheet.length - 1; i >= 0; i--) {\r\n          // Get the style sheet rule name for this cell\r\n          var stylesheet = \".qx-progressive-\" + this.__hash + \"-col-\" + i;\r\n          var rule = tr.__clazz[this.__hash].cellstylesheet[i];\r\n\r\n          // Remove the style rule for this column\r\n          var tr = qx.ui.progressive.renderer.table.Row;\r\n          qx.bom.Stylesheet.removeRule(rule, stylesheet);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.__progressive && this.__progressive.getRendererData) {\r\n      var rendererData = this.__progressive.getRendererData();\r\n      if (\r\n        rendererData &&\r\n        rendererData[this.__name] &&\r\n        rendererData[this.__name].end !== undefined\r\n      ) {\r\n        rendererData[this.__name] = null;\r\n      }\r\n    }\r\n\r\n    this.__colors =\r\n      this.__renderers =\r\n      this.__progressive =\r\n      this.__columnWidths =\r\n        null;\r\n\r\n    this._disposeObjects(\"__layout\", \"__defaultCellRenderer\", \"__columnData\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}