{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "members",
    "render",
    "state",
    "element",
    "Error",
    "join",
    "progressive",
    "name",
    "ui",
    "renderer",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/renderer/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2008 Derrell Lipman\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Derrell Lipman (derrell)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Abstract renderer for Progressive.\r\n */\r\nqx.Class.define(\"qx.ui.progressive.renderer.Abstract\", {\r\n  type: \"abstract\",\r\n  extend: qx.core.Object,\r\n\r\n  members: {\r\n    /**\r\n     * Render the provided element in the renderer's unique way.\r\n     *\r\n     * @param state {qx.ui.progressive.State}\r\n     *   Data relevant to the current rendering session.\r\n     *\r\n     * @param element {Object}\r\n     *   An object containing at least the following members:\r\n     *   <dl>\r\n     *     <dt>\r\n     *       renderer</dt>\r\n     *     <dd>\r\n     *       The name of a renderer.  That name is used by {@link\r\n     *       qx.ui.progressive.Progressive} to select the renderer to be used\r\n     *       to render this element.  The name should match one provided to\r\n     *       {@link qx.ui.progressive.Progressive#addRenderer}.\r\n     *     </dd>\r\n     *\r\n     *     <dt>\r\n     *       data\r\n     *     </dt>\r\n     *     <dd>\r\n     *       The data to be passed to the renderer.  The data may be of any\r\n     *       type that the renderer knows how to render.\r\n     *     </dd>\r\n     *   </dl>\r\n     *\r\n     */\r\n    render(state, element) {\r\n      throw new Error(\"render() is abstract\");\r\n    },\r\n\r\n    /**\r\n     * Join this renderer to its {@link qx.ui.progressive.Progressive}.\r\n     *\r\n     * @param progressive {qx.ui.progressive.Progressive}\r\n     *   The Progressive object to which we are being joined.\r\n     *\r\n     * @param name {String}\r\n     *   The name by which the data model will reference this renderer.  This\r\n     *   is important to know in order to access the appropriate member of the\r\n     *   {@link qx.ui.progressive.State}'s renderer array.  That array is\r\n     *   accessed from the renderer by\r\n     *   state.getRendererData()[element.renderer] where element.renderer will\r\n     *   be the name provided here.\r\n     */\r\n    join(progressive, name) {\r\n      // nothing to do in the default case\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qCAAqC,EAAE;IACrDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAACC,MAAM;IAEtBC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,WAAAA,OAACC,KAAK,EAAEC,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,IAAI,WAAAA,KAACC,WAAW,EAAEC,IAAI,EAAE;QACtB;MAAA;IAEJ;EACF,CAAC,CAAC;EA5EFjB,EAAE,CAACkB,EAAE,CAACF,WAAW,CAACG,QAAQ,CAACC,QAAQ,CAACjB,aAAa,GAAGA,aAAa;AAAC"
}