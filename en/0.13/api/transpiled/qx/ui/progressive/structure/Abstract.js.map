{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "pane",
    "constructor",
    "call",
    "__container",
    "ui",
    "Widget",
    "__pane",
    "getContentElement",
    "setStyle",
    "members",
    "applyStructure",
    "progressive",
    "Error",
    "getPane",
    "destruct",
    "dispose",
    "structure",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/structure/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Abstract structure definition for Progressive\n */\nqx.Class.define(\"qx.ui.progressive.structure.Abstract\", {\n  type: \"abstract\",\n  extend: qx.core.Object,\n\n  /**\n   * The abstract structure for use by Progressive.  It defines the pane\n   * container in which items are progressively rendered.\n   *\n   * @param pane {qx.ui.core.Widget|null}\n   *   The container to use as the pane, applied to the Progressive\n   *   structure.  If null, a qx.ui.core.Widget will be instantiated for\n   *   use as the pane.\n   */\n  construct(pane) {\n    super();\n\n    // If no pane was specified. Create one.\n    if (!pane) {\n      this.__container = new qx.ui.core.Widget();\n      this.__pane = this.__container;\n    } else {\n      this.__container = null;\n      this.__pane = pane;\n    }\n\n    this.__pane.getContentElement().setStyle(\"overflowY\", \"auto\");\n  },\n\n  members: {\n    __container: null,\n    __pane: null,\n\n    /**\n     * Apply the structure typically defined in the constructor to the\n     * Progressive.\n     *\n     * @param progressive {qx.ui.progressive.Progressive}\n     *   The Progressive to which the structure is to be applied.\n     */\n    applyStructure(progressive) {\n      throw new Error(\"applyStructure() is abstract\");\n    },\n\n    /**\n     * Get the pane in which this Progressive renders.\n     *\n     * @return {qx.ui.core.Widget}\n     */\n    getPane() {\n      return this.__pane;\n    }\n  },\n\n  destruct() {\n    if (this.__container) {\n      this.__container.dispose();\n    }\n\n    this.__container = this.__pane = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,sCAAsC,EAAE;IACtDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAEP,EAAE,CAACQ,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,IAAI,EAAE;MACdX,EAAA,CAAAQ,IAAA,CAAAC,MAAA,CAAAG,WAAA,CAAAC,IAAA;;MAEA;MACA,IAAI,CAACF,IAAI,EAAE;QACT,IAAI,CAACG,SAAW,GAAG,IAAId,EAAE,CAACe,EAAE,CAACP,IAAI,CAACQ,MAAM,EAAE;QAC1C,IAAI,CAACC,SAAM,GAAG,IAAI,CAACH,SAAW;MAChC,CAAC,MAAM;QACL,IAAI,CAACA,SAAW,GAAG,IAAI;QACvB,IAAI,CAACG,SAAM,GAAGN,IAAI;MACpB;MAEA,IAAI,CAACM,SAAM,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC;IAC/D,CAAC;IAEDC,OAAO,EAAE;MACPN,SAAW,EAAE,IAAI;MACjBG,SAAM,EAAE,IAAI;MAEZ;AACJ;AACA;AACA;AACA;AACA;AACA;MACII,cAAc,WAAAA,eAACC,WAAW,EAAE;QAC1B,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAAA,EAAG;QACR,OAAO,IAAI,CAACP,SAAM;MACpB;IACF,CAAC;IAEDQ,QAAQ,WAAAA,SAAA,EAAG;MACT,IAAI,IAAI,CAACX,SAAW,EAAE;QACpB,IAAI,CAACA,SAAW,CAACY,OAAO,EAAE;MAC5B;MAEA,IAAI,CAACZ,SAAW,GAAG,IAAI,CAACG,SAAM,GAAG,IAAI;IACvC;EACF,CAAC,CAAC;EAjFFjB,EAAE,CAACe,EAAE,CAACO,WAAW,CAACK,SAAS,CAACC,QAAQ,CAACzB,aAAa,GAAGA,aAAa;AAAC"
}