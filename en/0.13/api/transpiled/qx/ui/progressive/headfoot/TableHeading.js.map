{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "progressive",
    "headfoot",
    "Abstract",
    "construct",
    "columnWidths",
    "labelArr",
    "constructor",
    "call",
    "__columnWidths",
    "columnData",
    "getData",
    "__labels",
    "i",
    "length",
    "label",
    "basic",
    "Atom",
    "setAppearance",
    "add",
    "spacer",
    "core",
    "Widget",
    "set",
    "height",
    "appearance",
    "minWidth",
    "width",
    "flex",
    "addListener",
    "_resizeColumns",
    "__layout",
    "layout",
    "HBox",
    "connectToWidget",
    "properties",
    "refine",
    "init",
    "members",
    "__bCalculateWidths",
    "join",
    "TableHeading",
    "superclass",
    "prototype",
    "getLayoutChildren",
    "e",
    "insets",
    "getInsets",
    "getBounds",
    "bom",
    "element",
    "Scroll",
    "getScrollbarWidth",
    "left",
    "right",
    "padding",
    "top",
    "getPaddingTop",
    "getPaddingRight",
    "bottom",
    "getPaddingBottom",
    "getPaddingLeft",
    "renderLayout",
    "setWidth",
    "getComputedWidth",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/progressive/headfoot/TableHeading.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n/**\n * A header for a standard table.\n */\nqx.Class.define(\"qx.ui.progressive.headfoot.TableHeading\", {\n  extend: qx.ui.progressive.headfoot.Abstract,\n\n  /**\n   * @param columnWidths {qx.ui.progressive.renderer.table.Widths}\n   *   The set of widths, minimum widths, and maximum widths to be used for\n   *   each of the columns in the table.\n   *\n   * @param labelArr {Array}\n   *   Array of labels, one for each of the columns.\n   *\n   */\n  construct(columnWidths, labelArr) {\n    super();\n\n    // Save the Widths object containing all of our column widths\n    this.__columnWidths = columnWidths;\n\n    // Get the array of column width data\n    var columnData = columnWidths.getData();\n\n    // Create a place to put labels\n    this.__labels = [];\n\n    // For each label...\n    for (var i = 0; i < columnData.length; i++) {\n      // ... create an atom to hold the label\n      var label = new qx.ui.basic.Atom(labelArr[i]);\n      label.setAppearance(\"progressive-table-header-cell\");\n\n      // Add the label to this heading.\n      this.add(label);\n\n      // Save this label so we can resize it later\n      this.__labels[i] = label;\n    }\n\n    // Add a spacer to take up the scroll-bar width\n    var spacer = new qx.ui.core.Widget();\n    spacer.set({\n      height: 16,\n      appearance: \"progressive-table-header-cell\",\n      minWidth: 0,\n      width: 0\n    });\n\n    this.add(spacer, { flex: 1 });\n\n    // Arrange to be called when the window appears or is resized, so we\n    // can set each style sheet's left and width field appropriately.\n    this.addListener(\"resize\", this._resizeColumns, this);\n\n    // This layout is not connected to a widget but to this class. This class\n    // must implement the method \"getLayoutChildren\", which must return all\n    // columns (LayoutItems) which should be recalculated. The call\n    // \"layout.renderLayout\" will call the method \"renderLayout\" on each\n    // column data object The advantage of the use of the normal layout\n    // manager is that the semantics of flex and percent are exactly the same\n    // as in the widget code.\n    this.__layout = new qx.ui.layout.HBox();\n    this.__layout.connectToWidget(this);\n  },\n\n  properties: {\n    appearance: {\n      refine: true,\n      init: \"progressive-table-header\"\n    }\n  },\n\n  members: {\n    __columnWidths: null,\n    __bCalculateWidths: null,\n    __labels: null,\n    __layout: null,\n\n    // overridden\n    join(progressive) {\n      // Save the progressive handle\n      super.join(progressive);\n    },\n\n    /**\n     * This method is required by the box layout. If returns an array of items\n     * to relayout.\n     * @return {Array} List of child items\n     */\n    getLayoutChildren() {\n      if (this.__bCalculateWidths) {\n        return this.__columnWidths.getData();\n      } else {\n        return super.getLayoutChildren();\n      }\n    },\n\n    /**\n     * Event handler for the \"resize\" event.  We recalculate and set the\n     * new widths of each of our columns.\n     *\n     * @param e {qx.event.type.Event}\n     *   Ignored.\n     *\n     */\n    _resizeColumns(e) {\n      var insets = this.getInsets();\n      var width =\n        this.getBounds().width -\n        qx.bom.element.Scroll.getScrollbarWidth() -\n        insets.left -\n        insets.right;\n\n      // Compute the column widths\n      this.__bCalculateWidths = true;\n      var padding = {\n        top: this.getPaddingTop(),\n        right: this.getPaddingRight(),\n        bottom: this.getPaddingBottom(),\n        left: this.getPaddingLeft()\n      };\n\n      this.__layout.renderLayout(width, 100, padding);\n      this.__bCalculateWidths = false;\n\n      // Get the column data\n      var columnData = this.__columnWidths.getData();\n\n      // Get the column width data.  For each label...\n      for (var i = 0; i < columnData.length; i++) {\n        // ... reset the width of the corresponding column (label)\n        this.__labels[i].setWidth(columnData[i].getComputedWidth());\n      }\n    }\n  },\n\n  destruct() {\n    this.__columnWidths = this.__labels = null;\n\n    this._disposeObjects(\"_layout\");\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}