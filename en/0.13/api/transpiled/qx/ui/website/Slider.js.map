{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "ui",
    "website",
    "Widget",
    "statics",
    "_config",
    "minimum",
    "maximum",
    "offset",
    "step",
    "_templates",
    "knobContent",
    "slider",
    "value",
    "Slider",
    "init",
    "setConfig",
    "setValue",
    "getConfig",
    "construct",
    "selector",
    "context",
    "events",
    "changeValue",
    "changePosition",
    "members",
    "__dragMode",
    "_value",
    "cssPrefix",
    "getCssPrefix",
    "getValue",
    "defaultVal",
    "qxWeb",
    "type",
    "get",
    "on",
    "_onSliderPointerUp",
    "_onSliderFocus",
    "setStyle",
    "document",
    "_onDocPointerUp",
    "window",
    "_onWindowResize",
    "getChildren",
    "length",
    "append",
    "create",
    "addClass",
    "setAttributes",
    "draggable",
    "unselectable",
    "setHtml",
    "_getKnobContent",
    "_onPointerDown",
    "_onDragStart",
    "_onKnobFocus",
    "_onKnobBlur",
    "render",
    "Error",
    "min",
    "max",
    "Math",
    "round",
    "indexOf",
    "__valueToPosition",
    "emit",
    "_getPixels",
    "template",
    "getTemplate",
    "_getHalfKnobWidth",
    "knobWidth",
    "getWidth",
    "parseFloat",
    "_getDragBoundaries",
    "paddingLeft",
    "ceil",
    "getStyle",
    "paddingRight",
    "getOffset",
    "left",
    "dragBoundaries",
    "pixel",
    "push",
    "lastIndex",
    "usedWidth",
    "stepWidth",
    "stepCount",
    "i",
    "j",
    "_getNearestValue",
    "position",
    "pixels",
    "availableWidth",
    "relativePosition",
    "fraction",
    "result",
    "currentIndex",
    "before",
    "after",
    "abs",
    "e",
    "getDocumentLeft",
    "getDocumentTop",
    "getEnabled",
    "documentElement",
    "_onPointerMove",
    "stopPropagation",
    "off",
    "preventDefault",
    "dragPosition",
    "positionKnob",
    "_setKnobPosition",
    "focus",
    "_onKeyDown",
    "newValue",
    "currentValue",
    "stepType",
    "key",
    "getKeyIdentifier",
    "idx",
    "undefined",
    "x",
    "knob",
    "env",
    "translate",
    "valueToPixel",
    "range",
    "dispose",
    "defer",
    "$attach"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/website/Slider.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * The Slider control is used to select a numerical value from a given range.\n * It supports custom minimum/maximum values, step sizes and offsets (which limit\n * the knob's range).\n *\n * <h2>Markup</h2>\n * The Slider contains a single button element (the knob), which will be\n * created if it's not already present.\n *\n * <h2>CSS Classes</h2>\n * <table>\n *   <thead>\n *     <tr>\n *       <td>Class Name</td>\n *       <td>Applied to</td>\n *       <td>Description</td>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td><code>qx-slider</code></td>\n *       <td>Container element</td>\n *       <td>Identifies the Slider widget</td>\n *     </tr>\n *     <tr>\n *       <td><code>qx-slider-knob</code></td>\n *       <td>Slider knob (button)</td>\n *       <td>Identifies and styles the Slider's draggable knob</td>\n *     </tr>\n *   </tbody>\n * </table>\n *\n * <h2 class=\"widget-markup\">Generated DOM Structure</h2>\n *\n * @require(qx.module.event.Pointer)\n * @require(qx.module.Transform)\n * @require(qx.module.Template)\n * @require(qx.module.util.Type)\n *\n *\n * @group (Widget)\n */\nqx.Bootstrap.define(\"qx.ui.website.Slider\", {\n  extend: qx.ui.website.Widget,\n\n  statics: {\n    /**\n     * *step*\n     *\n     * The steps can be either a number or an array of predefined steps. In the\n     * case of a number, it defines the amount of each step. In the case of an\n     * array, the values of the array will be used as step values.\n     *\n     * Default value: <pre>1</pre>\n     *\n     *\n     * *minimum*\n     *\n     * The minimum value of the slider. This will only be used if no explicit\n     * steps are given.\n     *\n     * Default value: <pre>0 </pre>\n     *\n     *\n     * *maximum*\n     *\n     * The maximum value of the slider. This will only be used if no explicit\n     * steps are given.\n     *\n     * Default value: <pre>100</pre>\n     *\n     *\n     * *offset*\n     *\n     * The amount of pixel the slider should be position away from its left and\n     * right border.\n     *\n     * Default value: <pre>0 </pre>\n     */\n    _config: {\n      minimum: 0,\n      maximum: 100,\n      offset: 0,\n      step: 1\n    },\n\n    /**\n     * *knobContent*\n     *\n     * The content of the knob element.\n     *\n     * Default value: <pre>{{value}}</pre>\n     */\n    _templates: {\n      knobContent: \"{{value}}\"\n    },\n\n    /**\n     * Factory method which converts the current collection into a collection of\n     * slider widgets.\n     *\n     * @param value {Number?} The initial value of each slider widget\n     * @param step {Number|Array?} The step config value to configure the step\n     * width or the steps as array of numbers.\n     * @return {qx.ui.website.Slider} A new Slider collection.\n     * @attach {qxWeb}\n     */\n    slider(value, step) {\n      var slider = new qx.ui.website.Slider(this);\n      slider.init();\n      if (typeof step !== \"undefined\") {\n        slider.setConfig(\"step\", step);\n      }\n      if (typeof value !== \"undefined\") {\n        slider.setValue(value);\n      } else {\n        slider.setValue(slider.getConfig(\"minimum\"));\n      }\n\n      return slider;\n    }\n  },\n\n  construct(selector, context) {\n    super(selector, context);\n  },\n\n  events: {\n    /** Fired at each value change */\n    changeValue: \"Number\",\n\n    /** Fired with each pointer move event */\n    changePosition: \"Number\"\n  },\n\n  members: {\n    __dragMode: null,\n    _value: 0,\n\n    init() {\n      if (!super.init()) {\n        return false;\n      }\n\n      var cssPrefix = this.getCssPrefix();\n\n      if (!this.getValue()) {\n        var step = this.getConfig(\"step\");\n        var defaultVal =\n          qxWeb.type.get(step) == \"Array\" ? step[0] : this.getConfig(\"minimum\");\n        this._value = defaultVal;\n      }\n\n      this.on(\"pointerup\", this._onSliderPointerUp, this)\n        .on(\"focus\", this._onSliderFocus, this)\n        .setStyle(\"touch-action\", \"pan-y\");\n      qxWeb(document).on(\"pointerup\", this._onDocPointerUp, this);\n      qxWeb(window).on(\"resize\", this._onWindowResize, this);\n\n      if (this.getChildren(\".\" + cssPrefix + \"-knob\").length === 0) {\n        this.append(\n          qx.ui.website.Widget.create(\"<button>\").addClass(cssPrefix + \"-knob\")\n        );\n      }\n\n      this.getChildren(\".\" + cssPrefix + \"-knob\")\n        .setAttributes({\n          draggable: \"false\",\n          unselectable: \"true\"\n        })\n        .setHtml(this._getKnobContent())\n        .on(\"pointerdown\", this._onPointerDown, this)\n        .on(\"dragstart\", this._onDragStart, this)\n        .on(\"focus\", this._onKnobFocus, this)\n        .on(\"blur\", this._onKnobBlur, this);\n      this.render();\n\n      return true;\n    },\n\n    /**\n     * Returns the current value of the slider\n     *\n     * @return {Integer} slider value\n     */\n    getValue() {\n      return this._value;\n    },\n\n    /**\n     * Sets the current value of the slider.\n     *\n     * @param value {Integer} new value of the slider\n     *\n     * @return {qx.ui.website.Slider} The collection for chaining\n     */\n    setValue(value) {\n      if (qxWeb.type.get(value) != \"Number\") {\n        throw Error(\"Please provide a Number value for 'value'!\");\n      }\n\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) != \"Array\") {\n        var min = this.getConfig(\"minimum\");\n        var max = this.getConfig(\"maximum\");\n        if (value < min) {\n          value = min;\n        }\n        if (value > max) {\n          value = max;\n        }\n        if (qxWeb.type.get(step) == \"Number\") {\n          value = Math.round(value / step) * step;\n        }\n      }\n\n      this._value = value;\n\n      if (qxWeb.type.get(step) != \"Array\" || step.indexOf(value) != -1) {\n        this.__valueToPosition(value);\n        this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").setHtml(\n          this._getKnobContent()\n        );\n\n        this.emit(\"changeValue\", value);\n      }\n\n      return this;\n    },\n\n    render() {\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) == \"Array\") {\n        this._getPixels();\n        if (step.indexOf(this.getValue()) == -1) {\n          this.setValue(step[0]);\n        } else {\n          this.setValue(this.getValue());\n        }\n      } else if (qxWeb.type.get(step) == \"Number\") {\n        this.setValue(Math.round(this.getValue() / step) * step);\n      } else {\n        this.setValue(this.getValue());\n      }\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").setHtml(\n        this._getKnobContent()\n      );\n\n      return this;\n    },\n\n    /**\n     * Returns the content that should be displayed in the knob\n     * @return {String} knob content\n     */\n    _getKnobContent() {\n      return qxWeb.template.render(this.getTemplate(\"knobContent\"), {\n        value: this.getValue()\n      });\n    },\n\n    /**\n     * Returns half of the slider knob's width, used for positioning\n     * @return {Integer} half knob width\n     */\n    _getHalfKnobWidth() {\n      var knobWidth = this.getChildren(\n        \".\" + this.getCssPrefix() + \"-knob\"\n      ).getWidth();\n      return Math.round(parseFloat(knobWidth / 2));\n    },\n\n    /**\n     * Returns the boundaries (in pixels) of the slider's range of motion\n     * @return {Map} a map with the keys <code>min</code> and <code>max</code>\n     */\n    _getDragBoundaries() {\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var paddingRight = Math.ceil(\n        parseFloat(this.getStyle(\"paddingRight\")) || 0\n      );\n\n      var offset = this.getConfig(\"offset\");\n      return {\n        min: this.getOffset().left + offset + paddingLeft,\n        max: this.getOffset().left + this.getWidth() - offset - paddingRight\n      };\n    },\n\n    /**\n     * Creates a lookup table to get the pixel values for each slider step\n     * and computes the \"breakpoint\" between two steps in pixel.\n     *\n     * @return {Integer[]} list of pixel values\n     */\n    _getPixels() {\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) != \"Array\") {\n        return [];\n      }\n\n      var dragBoundaries = this._getDragBoundaries();\n      var pixel = [];\n\n      // First pixel value is fixed\n      pixel.push(dragBoundaries.min);\n\n      var lastIndex = step.length - 1;\n\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var paddingRight = Math.ceil(\n        parseFloat(this.getStyle(\"paddingRight\")) || 0\n      );\n\n      //The width really used by the slider (drag area)\n      var usedWidth =\n        this.getWidth() -\n        this.getConfig(\"offset\") * 2 -\n        paddingLeft -\n        paddingRight;\n\n      //The width of a single slider step\n      var stepWidth = usedWidth / (step[lastIndex] - step[0]);\n\n      var stepCount = 0;\n\n      for (var i = 1, j = step.length - 1; i < j; i++) {\n        stepCount = step[i] - step[0];\n        pixel.push(Math.round(stepCount * stepWidth) + dragBoundaries.min);\n      }\n\n      // Last pixel value is fixed\n      pixel.push(dragBoundaries.max);\n\n      return pixel;\n    },\n\n    /**\n     * Returns the nearest existing slider value according to he position of the knob element.\n     * @param position {Integer} The current knob position in pixels\n     * @return {Integer} The next position to snap to\n     */\n    _getNearestValue(position) {\n      var pixels = this._getPixels();\n      if (pixels.length === 0) {\n        var dragBoundaries = this._getDragBoundaries();\n        var availableWidth = dragBoundaries.max - dragBoundaries.min;\n        var relativePosition = position - dragBoundaries.min;\n        var fraction = relativePosition / availableWidth;\n        var min = this.getConfig(\"minimum\");\n        var max = this.getConfig(\"maximum\");\n        var result = (max - min) * fraction + min;\n        if (result < min) {\n          result = min;\n        }\n        if (result > max) {\n          result = max;\n        }\n        var step = this.getConfig(\"step\");\n        if (qxWeb.type.get(step) == \"Number\") {\n          result = Math.round(result / step) * step;\n        }\n        return result;\n      }\n\n      var currentIndex = 0,\n        before = 0,\n        after = 0;\n      for (var i = 0, j = pixels.length; i < j; i++) {\n        if (position >= pixels[i]) {\n          currentIndex = i;\n          before = pixels[i];\n          after = pixels[i + 1] || before;\n        } else {\n          break;\n        }\n      }\n\n      currentIndex =\n        Math.abs(position - before) <= Math.abs(position - after)\n          ? currentIndex\n          : currentIndex + 1;\n\n      return this.getConfig(\"step\")[currentIndex];\n    },\n\n    /**\n     * Reads the pointer's position and sets slider value to the nearest step.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onSliderPointerUp(e) {\n      if (\n        (e.getDocumentLeft() === 0 && e.getDocumentTop() === 0) ||\n        !this.getEnabled()\n      ) {\n        return;\n      }\n      this.setValue(this._getNearestValue(e.getDocumentLeft()));\n    },\n\n    /**\n     * Listener for the pointerdown event. Initializes drag or tracking mode.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onPointerDown(e) {\n      // this can happen if the user releases the button while dragging outside\n      // of the browser viewport\n      if (this.__dragMode) {\n        return;\n      }\n\n      this.__dragMode = true;\n\n      qxWeb(document.documentElement)\n        .on(\"pointermove\", this._onPointerMove, this)\n        .setStyle(\"cursor\", \"pointer\");\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener for the pointerup event. Used for cleanup of previously\n     * initialized modes.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onDocPointerUp(e) {\n      if (this.__dragMode === true) {\n        // Cleanup status flags\n        delete this.__dragMode;\n\n        this.__valueToPosition(this.getValue());\n\n        qxWeb(document.documentElement)\n          .off(\"pointermove\", this._onPointerMove, this)\n          .setStyle(\"cursor\", \"auto\");\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Listener for the pointermove event for the knob. Only used in drag mode.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onPointerMove(e) {\n      e.preventDefault();\n\n      if (this.__dragMode) {\n        var dragPosition = e.getDocumentLeft();\n        var dragBoundaries = this._getDragBoundaries();\n        var paddingLeft = Math.ceil(\n          parseFloat(this.getStyle(\"paddingLeft\")) || 0\n        );\n\n        var positionKnob =\n          dragPosition -\n          this.getOffset().left -\n          this._getHalfKnobWidth() -\n          paddingLeft;\n\n        if (\n          dragPosition >= dragBoundaries.min &&\n          dragPosition <= dragBoundaries.max\n        ) {\n          this.setValue(this._getNearestValue(dragPosition));\n          if (positionKnob > 0) {\n            this._setKnobPosition(positionKnob);\n            this.emit(\"changePosition\", positionKnob);\n          }\n        }\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Prevents drag event propagation\n     * @param e {Event} e drag start event\n     */\n    _onDragStart(e) {\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n    /**\n     * Delegates the Slider's focus to the knob\n     * @param e {Event} focus event\n     */\n    _onSliderFocus(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").focus();\n    },\n\n    /**\n     * Attaches the event listener for keyboard support to the knob on focus\n     * @param e {Event} focus event\n     */\n    _onKnobFocus(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").on(\n        \"keydown\",\n        this._onKeyDown,\n        this\n      );\n    },\n\n    /**\n     * Removes the event listener for keyboard support from the knob on blur\n     * @param e {Event} blur event\n     */\n    _onKnobBlur(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").off(\n        \"keydown\",\n        this._onKeyDown,\n        this\n      );\n    },\n\n    /**\n     * Moves the knob if the left or right arrow key is pressed\n     * @param e {Event} keydown event\n     */\n    _onKeyDown(e) {\n      var newValue;\n      var currentValue = this.getValue();\n      var step = this.getConfig(\"step\");\n      var stepType = qxWeb.type.get(step);\n      var key = e.getKeyIdentifier();\n      var idx;\n      if (key == \"Right\") {\n        if (stepType === \"Array\") {\n          idx = step.indexOf(currentValue);\n          if (idx !== undefined) {\n            newValue = step[idx + 1] || currentValue;\n          }\n        } else if (stepType === \"Number\") {\n          newValue = currentValue + step;\n        } else {\n          newValue = currentValue + 1;\n        }\n      } else if (key == \"Left\") {\n        if (stepType === \"Array\") {\n          idx = step.indexOf(currentValue);\n          if (idx !== undefined) {\n            newValue = step[idx - 1] || currentValue;\n          }\n        } else if (stepType === \"Number\") {\n          newValue = currentValue - step;\n        } else {\n          newValue = currentValue - 1;\n        }\n      } else {\n        return;\n      }\n\n      this.setValue(newValue);\n    },\n\n    /**\n     * Applies the horizontal position\n     * @param x {Integer} the position to move to\n     */\n    _setKnobPosition(x) {\n      var knob = this.getChildren(\".\" + this.getCssPrefix() + \"-knob\");\n      if (qxWeb.env.get(\"css.transform\")) {\n        knob.translate([x + \"px\", 0, 0]);\n      } else {\n        knob.setStyle(\"left\", x + \"px\");\n      }\n    },\n\n    /**\n     * Listener for window resize events. This listener method resets the\n     * calculated values which are used to position the slider knob.\n     */\n    _onWindowResize() {\n      if (qxWeb.type.get(this.getConfig(\"step\")) == \"Array\") {\n        this._getPixels();\n      }\n      this.__valueToPosition(this._value);\n    },\n\n    /**\n     * Positions the slider knob to the given value and fires the \"changePosition\"\n     * event with the current position as integer.\n     *\n     * @param value {Integer} slider step value\n     */\n    __valueToPosition(value) {\n      var pixels = this._getPixels();\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var valueToPixel;\n      if (pixels.length > 0) {\n        // Get the pixel value of the current step value\n        valueToPixel =\n          pixels[this.getConfig(\"step\").indexOf(value)] - paddingLeft;\n      } else {\n        var dragBoundaries = this._getDragBoundaries();\n        var availableWidth = dragBoundaries.max - dragBoundaries.min;\n        var range = this.getConfig(\"maximum\") - this.getConfig(\"minimum\");\n        var fraction = (value - this.getConfig(\"minimum\")) / range;\n        valueToPixel =\n          availableWidth * fraction + dragBoundaries.min - paddingLeft;\n      }\n\n      // relative position is necessary here\n      var position =\n        valueToPixel - this.getOffset().left - this._getHalfKnobWidth();\n      this._setKnobPosition(position);\n\n      this.emit(\"changePosition\", position);\n    },\n\n    dispose() {\n      qxWeb(document).off(\"pointerup\", this._onDocPointerUp, this);\n      qxWeb(window).off(\"resize\", this._onWindowResize, this);\n      this.off(\"pointerup\", this._onSliderPointerUp, this).off(\n        \"focus\",\n        this._onSliderFocus,\n        this\n      );\n\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\")\n        .off(\"pointerdown\", this._onPointerDown, this)\n        .off(\"dragstart\", this._onDragStart, this)\n        .off(\"focus\", this._onKnobFocus, this)\n        .off(\"blur\", this._onKnobBlur, this)\n        .off(\"keydown\", this._onKeyDown, this);\n\n      this.setHtml(\"\");\n\n      return super.dispose();\n    }\n  },\n\n  // Make the slider widget available as a qxWeb module\n  defer(statics) {\n    qxWeb.$attach({ slider: statics.slider });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,sBAApB,EAA4C;IAC1CC,MAAM,EAAEL,EAAE,CAACM,EAAH,CAAMC,OAAN,CAAcC,MADoB;IAG1CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,EAAE;QACPC,OAAO,EAAE,CADF;QAEPC,OAAO,EAAE,GAFF;QAGPC,MAAM,EAAE,CAHD;QAIPC,IAAI,EAAE;MAJC,CAlCF;;MAyCP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,UAAU,EAAE;QACVC,WAAW,EAAE;MADH,CAhDL;;MAoDP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MA9DO,kBA8DAC,KA9DA,EA8DOJ,IA9DP,EA8Da;QAClB,IAAIG,MAAM,GAAG,IAAIjB,EAAE,CAACM,EAAH,CAAMC,OAAN,CAAcY,MAAlB,CAAyB,IAAzB,CAAb;QACAF,MAAM,CAACG,IAAP;;QACA,IAAI,OAAON,IAAP,KAAgB,WAApB,EAAiC;UAC/BG,MAAM,CAACI,SAAP,CAAiB,MAAjB,EAAyBP,IAAzB;QACD;;QACD,IAAI,OAAOI,KAAP,KAAiB,WAArB,EAAkC;UAChC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"
}