{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "ui",
    "website",
    "Widget",
    "statics",
    "_config",
    "minimum",
    "maximum",
    "offset",
    "step",
    "_templates",
    "knobContent",
    "slider",
    "value",
    "Slider",
    "init",
    "setConfig",
    "setValue",
    "getConfig",
    "construct",
    "selector",
    "context",
    "events",
    "changeValue",
    "changePosition",
    "members",
    "__dragMode",
    "_value",
    "cssPrefix",
    "getCssPrefix",
    "getValue",
    "defaultVal",
    "qxWeb",
    "type",
    "get",
    "on",
    "_onSliderPointerUp",
    "_onSliderFocus",
    "setStyle",
    "document",
    "_onDocPointerUp",
    "window",
    "_onWindowResize",
    "getChildren",
    "length",
    "append",
    "create",
    "addClass",
    "setAttributes",
    "draggable",
    "unselectable",
    "setHtml",
    "_getKnobContent",
    "_onPointerDown",
    "_onDragStart",
    "_onKnobFocus",
    "_onKnobBlur",
    "render",
    "Error",
    "min",
    "max",
    "Math",
    "round",
    "indexOf",
    "__valueToPosition",
    "emit",
    "_getPixels",
    "template",
    "getTemplate",
    "_getHalfKnobWidth",
    "knobWidth",
    "getWidth",
    "parseFloat",
    "_getDragBoundaries",
    "paddingLeft",
    "ceil",
    "getStyle",
    "paddingRight",
    "getOffset",
    "left",
    "dragBoundaries",
    "pixel",
    "push",
    "lastIndex",
    "usedWidth",
    "stepWidth",
    "stepCount",
    "i",
    "j",
    "_getNearestValue",
    "position",
    "pixels",
    "availableWidth",
    "relativePosition",
    "fraction",
    "result",
    "currentIndex",
    "before",
    "after",
    "abs",
    "e",
    "getDocumentLeft",
    "getDocumentTop",
    "getEnabled",
    "documentElement",
    "_onPointerMove",
    "stopPropagation",
    "off",
    "preventDefault",
    "dragPosition",
    "positionKnob",
    "_setKnobPosition",
    "focus",
    "_onKeyDown",
    "newValue",
    "currentValue",
    "stepType",
    "key",
    "getKeyIdentifier",
    "idx",
    "undefined",
    "x",
    "knob",
    "env",
    "translate",
    "valueToPixel",
    "range",
    "dispose",
    "defer",
    "$attach"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/website/Slider.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * The Slider control is used to select a numerical value from a given range.\n * It supports custom minimum/maximum values, step sizes and offsets (which limit\n * the knob's range).\n *\n * <h2>Markup</h2>\n * The Slider contains a single button element (the knob), which will be\n * created if it's not already present.\n *\n * <h2>CSS Classes</h2>\n * <table>\n *   <thead>\n *     <tr>\n *       <td>Class Name</td>\n *       <td>Applied to</td>\n *       <td>Description</td>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td><code>qx-slider</code></td>\n *       <td>Container element</td>\n *       <td>Identifies the Slider widget</td>\n *     </tr>\n *     <tr>\n *       <td><code>qx-slider-knob</code></td>\n *       <td>Slider knob (button)</td>\n *       <td>Identifies and styles the Slider's draggable knob</td>\n *     </tr>\n *   </tbody>\n * </table>\n *\n * <h2 class=\"widget-markup\">Generated DOM Structure</h2>\n *\n * @require(qx.module.event.Pointer)\n * @require(qx.module.Transform)\n * @require(qx.module.Template)\n * @require(qx.module.util.Type)\n *\n *\n * @group (Widget)\n */\nqx.Bootstrap.define(\"qx.ui.website.Slider\", {\n  extend: qx.ui.website.Widget,\n\n  statics: {\n    /**\n     * *step*\n     *\n     * The steps can be either a number or an array of predefined steps. In the\n     * case of a number, it defines the amount of each step. In the case of an\n     * array, the values of the array will be used as step values.\n     *\n     * Default value: <pre>1</pre>\n     *\n     *\n     * *minimum*\n     *\n     * The minimum value of the slider. This will only be used if no explicit\n     * steps are given.\n     *\n     * Default value: <pre>0 </pre>\n     *\n     *\n     * *maximum*\n     *\n     * The maximum value of the slider. This will only be used if no explicit\n     * steps are given.\n     *\n     * Default value: <pre>100</pre>\n     *\n     *\n     * *offset*\n     *\n     * The amount of pixel the slider should be position away from its left and\n     * right border.\n     *\n     * Default value: <pre>0 </pre>\n     */\n    _config: {\n      minimum: 0,\n      maximum: 100,\n      offset: 0,\n      step: 1\n    },\n\n    /**\n     * *knobContent*\n     *\n     * The content of the knob element.\n     *\n     * Default value: <pre>{{value}}</pre>\n     */\n    _templates: {\n      knobContent: \"{{value}}\"\n    },\n\n    /**\n     * Factory method which converts the current collection into a collection of\n     * slider widgets.\n     *\n     * @param value {Number?} The initial value of each slider widget\n     * @param step {Number|Array?} The step config value to configure the step\n     * width or the steps as array of numbers.\n     * @return {qx.ui.website.Slider} A new Slider collection.\n     * @attach {qxWeb}\n     */\n    slider(value, step) {\n      var slider = new qx.ui.website.Slider(this);\n      slider.init();\n      if (typeof step !== \"undefined\") {\n        slider.setConfig(\"step\", step);\n      }\n      if (typeof value !== \"undefined\") {\n        slider.setValue(value);\n      } else {\n        slider.setValue(slider.getConfig(\"minimum\"));\n      }\n\n      return slider;\n    }\n  },\n\n  construct(selector, context) {\n    super(selector, context);\n  },\n\n  events: {\n    /** Fired at each value change */\n    changeValue: \"Number\",\n\n    /** Fired with each pointer move event */\n    changePosition: \"Number\"\n  },\n\n  members: {\n    __dragMode: null,\n    _value: 0,\n\n    init() {\n      if (!super.init()) {\n        return false;\n      }\n\n      var cssPrefix = this.getCssPrefix();\n\n      if (!this.getValue()) {\n        var step = this.getConfig(\"step\");\n        var defaultVal =\n          qxWeb.type.get(step) == \"Array\" ? step[0] : this.getConfig(\"minimum\");\n        this._value = defaultVal;\n      }\n\n      this.on(\"pointerup\", this._onSliderPointerUp, this)\n        .on(\"focus\", this._onSliderFocus, this)\n        .setStyle(\"touch-action\", \"pan-y\");\n      qxWeb(document).on(\"pointerup\", this._onDocPointerUp, this);\n      qxWeb(window).on(\"resize\", this._onWindowResize, this);\n\n      if (this.getChildren(\".\" + cssPrefix + \"-knob\").length === 0) {\n        this.append(\n          qx.ui.website.Widget.create(\"<button>\").addClass(cssPrefix + \"-knob\")\n        );\n      }\n\n      this.getChildren(\".\" + cssPrefix + \"-knob\")\n        .setAttributes({\n          draggable: \"false\",\n          unselectable: \"true\"\n        })\n        .setHtml(this._getKnobContent())\n        .on(\"pointerdown\", this._onPointerDown, this)\n        .on(\"dragstart\", this._onDragStart, this)\n        .on(\"focus\", this._onKnobFocus, this)\n        .on(\"blur\", this._onKnobBlur, this);\n      this.render();\n\n      return true;\n    },\n\n    /**\n     * Returns the current value of the slider\n     *\n     * @return {Integer} slider value\n     */\n    getValue() {\n      return this._value;\n    },\n\n    /**\n     * Sets the current value of the slider.\n     *\n     * @param value {Integer} new value of the slider\n     *\n     * @return {qx.ui.website.Slider} The collection for chaining\n     */\n    setValue(value) {\n      if (qxWeb.type.get(value) != \"Number\") {\n        throw Error(\"Please provide a Number value for 'value'!\");\n      }\n\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) != \"Array\") {\n        var min = this.getConfig(\"minimum\");\n        var max = this.getConfig(\"maximum\");\n        if (value < min) {\n          value = min;\n        }\n        if (value > max) {\n          value = max;\n        }\n        if (qxWeb.type.get(step) == \"Number\") {\n          value = Math.round(value / step) * step;\n        }\n      }\n\n      this._value = value;\n\n      if (qxWeb.type.get(step) != \"Array\" || step.indexOf(value) != -1) {\n        this.__valueToPosition(value);\n        this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").setHtml(\n          this._getKnobContent()\n        );\n\n        this.emit(\"changeValue\", value);\n      }\n\n      return this;\n    },\n\n    render() {\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) == \"Array\") {\n        this._getPixels();\n        if (step.indexOf(this.getValue()) == -1) {\n          this.setValue(step[0]);\n        } else {\n          this.setValue(this.getValue());\n        }\n      } else if (qxWeb.type.get(step) == \"Number\") {\n        this.setValue(Math.round(this.getValue() / step) * step);\n      } else {\n        this.setValue(this.getValue());\n      }\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").setHtml(\n        this._getKnobContent()\n      );\n\n      return this;\n    },\n\n    /**\n     * Returns the content that should be displayed in the knob\n     * @return {String} knob content\n     */\n    _getKnobContent() {\n      return qxWeb.template.render(this.getTemplate(\"knobContent\"), {\n        value: this.getValue()\n      });\n    },\n\n    /**\n     * Returns half of the slider knob's width, used for positioning\n     * @return {Integer} half knob width\n     */\n    _getHalfKnobWidth() {\n      var knobWidth = this.getChildren(\n        \".\" + this.getCssPrefix() + \"-knob\"\n      ).getWidth();\n      return Math.round(parseFloat(knobWidth / 2));\n    },\n\n    /**\n     * Returns the boundaries (in pixels) of the slider's range of motion\n     * @return {Map} a map with the keys <code>min</code> and <code>max</code>\n     */\n    _getDragBoundaries() {\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var paddingRight = Math.ceil(\n        parseFloat(this.getStyle(\"paddingRight\")) || 0\n      );\n\n      var offset = this.getConfig(\"offset\");\n      return {\n        min: this.getOffset().left + offset + paddingLeft,\n        max: this.getOffset().left + this.getWidth() - offset - paddingRight\n      };\n    },\n\n    /**\n     * Creates a lookup table to get the pixel values for each slider step\n     * and computes the \"breakpoint\" between two steps in pixel.\n     *\n     * @return {Integer[]} list of pixel values\n     */\n    _getPixels() {\n      var step = this.getConfig(\"step\");\n      if (qxWeb.type.get(step) != \"Array\") {\n        return [];\n      }\n\n      var dragBoundaries = this._getDragBoundaries();\n      var pixel = [];\n\n      // First pixel value is fixed\n      pixel.push(dragBoundaries.min);\n\n      var lastIndex = step.length - 1;\n\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var paddingRight = Math.ceil(\n        parseFloat(this.getStyle(\"paddingRight\")) || 0\n      );\n\n      //The width really used by the slider (drag area)\n      var usedWidth =\n        this.getWidth() -\n        this.getConfig(\"offset\") * 2 -\n        paddingLeft -\n        paddingRight;\n\n      //The width of a single slider step\n      var stepWidth = usedWidth / (step[lastIndex] - step[0]);\n\n      var stepCount = 0;\n\n      for (var i = 1, j = step.length - 1; i < j; i++) {\n        stepCount = step[i] - step[0];\n        pixel.push(Math.round(stepCount * stepWidth) + dragBoundaries.min);\n      }\n\n      // Last pixel value is fixed\n      pixel.push(dragBoundaries.max);\n\n      return pixel;\n    },\n\n    /**\n     * Returns the nearest existing slider value according to he position of the knob element.\n     * @param position {Integer} The current knob position in pixels\n     * @return {Integer} The next position to snap to\n     */\n    _getNearestValue(position) {\n      var pixels = this._getPixels();\n      if (pixels.length === 0) {\n        var dragBoundaries = this._getDragBoundaries();\n        var availableWidth = dragBoundaries.max - dragBoundaries.min;\n        var relativePosition = position - dragBoundaries.min;\n        var fraction = relativePosition / availableWidth;\n        var min = this.getConfig(\"minimum\");\n        var max = this.getConfig(\"maximum\");\n        var result = (max - min) * fraction + min;\n        if (result < min) {\n          result = min;\n        }\n        if (result > max) {\n          result = max;\n        }\n        var step = this.getConfig(\"step\");\n        if (qxWeb.type.get(step) == \"Number\") {\n          result = Math.round(result / step) * step;\n        }\n        return result;\n      }\n\n      var currentIndex = 0,\n        before = 0,\n        after = 0;\n      for (var i = 0, j = pixels.length; i < j; i++) {\n        if (position >= pixels[i]) {\n          currentIndex = i;\n          before = pixels[i];\n          after = pixels[i + 1] || before;\n        } else {\n          break;\n        }\n      }\n\n      currentIndex =\n        Math.abs(position - before) <= Math.abs(position - after)\n          ? currentIndex\n          : currentIndex + 1;\n\n      return this.getConfig(\"step\")[currentIndex];\n    },\n\n    /**\n     * Reads the pointer's position and sets slider value to the nearest step.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onSliderPointerUp(e) {\n      if (\n        (e.getDocumentLeft() === 0 && e.getDocumentTop() === 0) ||\n        !this.getEnabled()\n      ) {\n        return;\n      }\n      this.setValue(this._getNearestValue(e.getDocumentLeft()));\n    },\n\n    /**\n     * Listener for the pointerdown event. Initializes drag or tracking mode.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onPointerDown(e) {\n      // this can happen if the user releases the button while dragging outside\n      // of the browser viewport\n      if (this.__dragMode) {\n        return;\n      }\n\n      this.__dragMode = true;\n\n      qxWeb(document.documentElement)\n        .on(\"pointermove\", this._onPointerMove, this)\n        .setStyle(\"cursor\", \"pointer\");\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Listener for the pointerup event. Used for cleanup of previously\n     * initialized modes.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onDocPointerUp(e) {\n      if (this.__dragMode === true) {\n        // Cleanup status flags\n        delete this.__dragMode;\n\n        this.__valueToPosition(this.getValue());\n\n        qxWeb(document.documentElement)\n          .off(\"pointermove\", this._onPointerMove, this)\n          .setStyle(\"cursor\", \"auto\");\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Listener for the pointermove event for the knob. Only used in drag mode.\n     *\n     * @param e {qx.event.Emitter} Incoming event object\n     */\n    _onPointerMove(e) {\n      e.preventDefault();\n\n      if (this.__dragMode) {\n        var dragPosition = e.getDocumentLeft();\n        var dragBoundaries = this._getDragBoundaries();\n        var paddingLeft = Math.ceil(\n          parseFloat(this.getStyle(\"paddingLeft\")) || 0\n        );\n\n        var positionKnob =\n          dragPosition -\n          this.getOffset().left -\n          this._getHalfKnobWidth() -\n          paddingLeft;\n\n        if (\n          dragPosition >= dragBoundaries.min &&\n          dragPosition <= dragBoundaries.max\n        ) {\n          this.setValue(this._getNearestValue(dragPosition));\n          if (positionKnob > 0) {\n            this._setKnobPosition(positionKnob);\n            this.emit(\"changePosition\", positionKnob);\n          }\n        }\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Prevents drag event propagation\n     * @param e {Event} e drag start event\n     */\n    _onDragStart(e) {\n      e.stopPropagation();\n      e.preventDefault();\n    },\n\n    /**\n     * Delegates the Slider's focus to the knob\n     * @param e {Event} focus event\n     */\n    _onSliderFocus(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").focus();\n    },\n\n    /**\n     * Attaches the event listener for keyboard support to the knob on focus\n     * @param e {Event} focus event\n     */\n    _onKnobFocus(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").on(\n        \"keydown\",\n        this._onKeyDown,\n        this\n      );\n    },\n\n    /**\n     * Removes the event listener for keyboard support from the knob on blur\n     * @param e {Event} blur event\n     */\n    _onKnobBlur(e) {\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\").off(\n        \"keydown\",\n        this._onKeyDown,\n        this\n      );\n    },\n\n    /**\n     * Moves the knob if the left or right arrow key is pressed\n     * @param e {Event} keydown event\n     */\n    _onKeyDown(e) {\n      var newValue;\n      var currentValue = this.getValue();\n      var step = this.getConfig(\"step\");\n      var stepType = qxWeb.type.get(step);\n      var key = e.getKeyIdentifier();\n      var idx;\n      if (key == \"Right\") {\n        if (stepType === \"Array\") {\n          idx = step.indexOf(currentValue);\n          if (idx !== undefined) {\n            newValue = step[idx + 1] || currentValue;\n          }\n        } else if (stepType === \"Number\") {\n          newValue = currentValue + step;\n        } else {\n          newValue = currentValue + 1;\n        }\n      } else if (key == \"Left\") {\n        if (stepType === \"Array\") {\n          idx = step.indexOf(currentValue);\n          if (idx !== undefined) {\n            newValue = step[idx - 1] || currentValue;\n          }\n        } else if (stepType === \"Number\") {\n          newValue = currentValue - step;\n        } else {\n          newValue = currentValue - 1;\n        }\n      } else {\n        return;\n      }\n\n      this.setValue(newValue);\n    },\n\n    /**\n     * Applies the horizontal position\n     * @param x {Integer} the position to move to\n     */\n    _setKnobPosition(x) {\n      var knob = this.getChildren(\".\" + this.getCssPrefix() + \"-knob\");\n      if (qxWeb.env.get(\"css.transform\")) {\n        knob.translate([x + \"px\", 0, 0]);\n      } else {\n        knob.setStyle(\"left\", x + \"px\");\n      }\n    },\n\n    /**\n     * Listener for window resize events. This listener method resets the\n     * calculated values which are used to position the slider knob.\n     */\n    _onWindowResize() {\n      if (qxWeb.type.get(this.getConfig(\"step\")) == \"Array\") {\n        this._getPixels();\n      }\n      this.__valueToPosition(this._value);\n    },\n\n    /**\n     * Positions the slider knob to the given value and fires the \"changePosition\"\n     * event with the current position as integer.\n     *\n     * @param value {Integer} slider step value\n     */\n    __valueToPosition(value) {\n      var pixels = this._getPixels();\n      var paddingLeft = Math.ceil(\n        parseFloat(this.getStyle(\"paddingLeft\")) || 0\n      );\n\n      var valueToPixel;\n      if (pixels.length > 0) {\n        // Get the pixel value of the current step value\n        valueToPixel =\n          pixels[this.getConfig(\"step\").indexOf(value)] - paddingLeft;\n      } else {\n        var dragBoundaries = this._getDragBoundaries();\n        var availableWidth = dragBoundaries.max - dragBoundaries.min;\n        var range = this.getConfig(\"maximum\") - this.getConfig(\"minimum\");\n        var fraction = (value - this.getConfig(\"minimum\")) / range;\n        valueToPixel =\n          availableWidth * fraction + dragBoundaries.min - paddingLeft;\n      }\n\n      // relative position is necessary here\n      var position =\n        valueToPixel - this.getOffset().left - this._getHalfKnobWidth();\n      this._setKnobPosition(position);\n\n      this.emit(\"changePosition\", position);\n    },\n\n    dispose() {\n      qxWeb(document).off(\"pointerup\", this._onDocPointerUp, this);\n      qxWeb(window).off(\"resize\", this._onWindowResize, this);\n      this.off(\"pointerup\", this._onSliderPointerUp, this).off(\n        \"focus\",\n        this._onSliderFocus,\n        this\n      );\n\n      this.getChildren(\".\" + this.getCssPrefix() + \"-knob\")\n        .off(\"pointerdown\", this._onPointerDown, this)\n        .off(\"dragstart\", this._onDragStart, this)\n        .off(\"focus\", this._onKnobFocus, this)\n        .off(\"blur\", this._onKnobBlur, this)\n        .off(\"keydown\", this._onKeyDown, this);\n\n      this.setHtml(\"\");\n\n      return super.dispose();\n    }\n  },\n\n  // Make the slider widget available as a qxWeb module\n  defer(statics) {\n    qxWeb.$attach({ slider: statics.slider });\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACC,SAAS,CAACG,MAAM,CAAC,sBAAsB,EAAE;IAC1CC,MAAM,EAAEL,EAAE,CAACM,EAAE,CAACC,OAAO,CAACC,MAAM;IAE5BC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,OAAO,EAAE;QACPC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,GAAG;QACZC,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE;MACR,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,UAAU,EAAE;QACVC,WAAW,EAAE;MACf,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,MAAM,kBAACC,KAAK,EAAEJ,IAAI,EAAE;QAClB,IAAIG,MAAM,GAAG,IAAIjB,EAAE,CAACM,EAAE,CAACC,OAAO,CAACY,MAAM,CAAC,IAAI,CAAC;QAC3CF,MAAM,CAACG,IAAI,EAAE;QACb,IAAI,OAAON,IAAI,KAAK,WAAW,EAAE;UAC/BG,MAAM,CAACI,SAAS,CAAC,MAAM,EAAEP,IAAI,CAAC;QAChC;QACA,IAAI,OAAOI,KAAK,KAAK,WAAW,EAAE;UAChCD,MAAM,CAACK,Q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"
}