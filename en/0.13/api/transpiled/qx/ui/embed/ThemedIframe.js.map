{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/embed/ThemedIframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "embed",
    "AbstractIframe",
    "include",
    "core",
    "scroll",
    "MRoll",
    "construct",
    "source",
    "grid",
    "layout",
    "Grid",
    "setColumnFlex",
    "setRowFlex",
    "_setLayout",
    "_showChildControl",
    "properties",
    "appearance",
    "refine",
    "init",
    "scrollbarX",
    "check",
    "themeable",
    "apply",
    "scrollbarY",
    "scrollbar",
    "group",
    "members",
    "__iframeSize",
    "__iframeObserverId",
    "_getIframeElement",
    "getChildControl",
    "getContentElement",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Iframe",
    "getSource",
    "addListener",
    "_onIframeLoad",
    "_onIframeResize",
    "_add",
    "row",
    "column",
    "ScrollBar",
    "setMinWidth",
    "exclude",
    "_onScrollBarX",
    "setMinHeight",
    "_onScrollBarY",
    "Widget",
    "setWidth",
    "setHeight",
    "_disableScollbars",
    "body",
    "getBody",
    "_startIframeObserver",
    "_addRollListener",
    "fireEvent",
    "_updateScrollbars",
    "_excludeChildControl",
    "_stopIframeObserver",
    "bom",
    "Element",
    "_onRoll",
    "_onPointerDownForRoll",
    "e",
    "idle",
    "event",
    "Idle",
    "getInstance",
    "_onIframeObserverInterval",
    "removeListenerById",
    "iframeSize",
    "_getIframeSize",
    "width",
    "height",
    "_preventIframeScrolling",
    "win",
    "getWindow",
    "doc",
    "getDocument",
    "Document",
    "isStandardMode",
    "documentElement",
    "style",
    "overflow",
    "paneSize",
    "getBounds",
    "innerSize",
    "getInnerSize",
    "showX",
    "showY",
    "getScrollbarX",
    "getScrollbarY",
    "_configureScrollbar",
    "_updateCornerWidget",
    "frameSize",
    "getWidth",
    "getHeight",
    "_isChildControlVisible",
    "scrollbarId",
    "show",
    "containerSize",
    "contentSize",
    "bar",
    "set",
    "position",
    "maximum",
    "knobFactor",
    "enabled",
    "setMaximum",
    "Math",
    "min",
    "getPosition",
    "scrollToX",
    "getData",
    "scrollToY",
    "x",
    "Viewport",
    "getScrollTop",
    "y",
    "getScrollLeft",
    "destruct",
    "ThemedIframe"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Container widget for internal frames (iframes) with qooxdoo scroll bar and\n * size hint support.\n *\n * An iframe can display any HTML page inside the widget. Note that custom\n * scroll bars do only work if the iframe's source points to the same domain\n * as the application.\n *\n * @childControl iframe {qx.ui.embed.Iframe} embedded iframe component\n * @childControl scrollbar-x {qx.ui.core.scroll.ScrollBar} horizontal scrollbar\n * @childControl scrollbar-y {qx.ui.core.scroll.ScrollBar} vertical scrollbar\n * @childControl corner {qx.ui.core.Widget} corner widget where no scrollbar is shown\n *\n * *Example*\n *\n * Here is a little example of how to use the widget:\n *\n * <pre class='javascript'>\n * var document = this.getRoot();\n * var iframe = new qx.ui.embed.ThemedIframe(\"frame.html\");\n * document.add(iframe);\n * </pre>\n *\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/themediframe.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.embed.ThemedIframe\",\n{\n  extend : qx.ui.embed.AbstractIframe,\n  include : qx.ui.core.scroll.MRoll,\n\n  construct : function(source)\n  {\n    this.base(arguments, source);\n\n    // Create 'fixed' grid layout\n    var grid = new qx.ui.layout.Grid();\n    grid.setColumnFlex(0, 1);\n    grid.setRowFlex(0, 1);\n    this._setLayout(grid);\n\n    this._showChildControl(\"iframe\");\n  },\n\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"scrollarea\"\n    },\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarX :\n    {\n      check : [\"auto\", \"on\", \"off\"],\n      init : \"auto\",\n      themeable : true,\n      apply : \"_updateScrollbars\"\n    },\n\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarY :\n    {\n      check : [\"auto\", \"on\", \"off\"],\n      init : \"auto\",\n      themeable : true,\n      apply : \"_updateScrollbars\"\n    },\n\n\n    /**\n     * Group property, to set the overflow of both scroll bars.\n     */\n    scrollbar : {\n      group : [ \"scrollbarX\", \"scrollbarY\" ]\n    }\n  },\n\n\n  members :\n  {\n    __iframeSize : null,\n    __iframeObserverId : null,\n\n\n    // overridden\n    _getIframeElement : function() {\n      return this.getChildControl(\"iframe\").getContentElement();\n    },\n\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"iframe\":\n          control = new qx.ui.embed.Iframe(this.getSource());\n          control.addListener(\"load\", this._onIframeLoad, this);\n          control.addListener(\"resize\", this._onIframeResize, this);\n          this._add(control, {row: 0, column: 0});\n          break;\n\n\n        case \"scrollbar-x\":\n          control = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n          control.setMinWidth(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarX, this);\n\n          this._add(control, {row: 1, column: 0});\n          break;\n\n\n        case \"scrollbar-y\":\n          control = new qx.ui.core.scroll.ScrollBar(\"vertical\");\n          control.setMinHeight(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarY, this);\n\n          this._add(control, {row: 0, column: 1});\n          break;\n\n\n        case \"corner\":\n          control = new qx.ui.core.Widget();\n          control.setWidth(0);\n          control.setHeight(0);\n          control.exclude();\n\n          this._add(control, {row: 1, column: 1});\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the iframe's load event\n     */\n    _onIframeLoad : function()\n    {\n      this._disableScollbars();\n\n      var body = this._getIframeElement().getBody();\n      if (body) {\n        this._startIframeObserver();\n        this._addRollListener();\n      }\n\n      this.fireEvent(\"load\");\n    },\n\n\n    /**\n     * Event handler for resize event of the iframe widget.\n     */\n    _onIframeResize : function() {\n      this._updateScrollbars();\n    },\n\n\n    /**\n     * Hide all scrollbars and stop observing the iframe document\n     */\n    _disableScollbars : function()\n    {\n      this._excludeChildControl(\"scrollbar-x\");\n      this._excludeChildControl(\"scrollbar-y\");\n      this._excludeChildControl(\"corner\");\n\n      this._stopIframeObserver();\n    },\n\n\n    /**\n     * Attach roll listener to the iframe\n     */\n    _addRollListener : function()\n    {\n      try\n      {\n        var body = this._getIframeElement().getBody();\n        qx.bom.Element.addListener(body, \"roll\", this._onRoll, this);\n        qx.bom.Element.addListener(body, \"pointerdown\", this._onPointerDownForRoll, this);\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n\n    /**\n     * Start observing size changes of the iframe document\n     */\n    _startIframeObserver : function()\n    {\n      if (this.__iframeObserverId) {\n        this._stopIframeObserver();\n      }\n\n      var idle = qx.event.Idle.getInstance();\n      this.__iframeObserverId = idle.addListener(\"interval\", this._onIframeObserverInterval, this);\n    },\n\n\n    /**\n     * Stop observing size changes of the iframe document\n     */\n    _stopIframeObserver : function()\n    {\n      this.__iframeSize = null;\n\n      if (!this.__iframeObserverId) {\n        return;\n      }\n\n      var idle = qx.event.Idle.getInstance();\n      idle.removeListenerById(this.__iframeObserverId);\n    },\n\n\n    /**\n     * Event handler, which is called periodically to update the scroll bars\n     */\n    _onIframeObserverInterval : function()\n    {\n      var iframeSize = this._getIframeSize();\n      if (!iframeSize)\n      {\n        this._disableScollbars();\n        return;\n      }\n\n      if (\n        this.__iframeSize &&\n        iframeSize.width == this.__iframeSize.width &&\n        iframeSize.height == this.__iframeSize.height\n      ) {\n        return;\n      }\n\n      this.__iframeSize = iframeSize;\n      this._preventIframeScrolling();\n      this._updateScrollbars();\n    },\n\n\n    /**\n     * Try to hide native scrollbars in the iframe\n     */\n    _preventIframeScrolling : function()\n    {\n      try\n      {\n        var win = this._getIframeElement().getWindow();\n        var doc = this._getIframeElement().getDocument();\n        if (qx.bom.Document.isStandardMode(win)) {\n          doc.documentElement.style.overflow = \"hidden\";\n        } else {\n          doc.body.style.overflow = \"hidden\";\n        }\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n\n    /**\n     * Recompute scrollbar visibility and positions based on the iframe's\n     * document size\n     */\n    _updateScrollbars : function()\n    {\n      var iframeSize = this.__iframeSize;\n      var paneSize = this.getChildControl(\"iframe\").getBounds();\n      var innerSize = this.getChildControl(\"iframe\").getInnerSize();\n\n      if (!iframeSize || !innerSize || !innerSize) {\n        return;\n      }\n\n      var showX = false;\n      var showY = false;\n\n      var scrollbarX = this.getScrollbarX();\n      var scrollbarY = this.getScrollbarY();\n\n      if (scrollbarX === \"auto\" && scrollbarY === \"auto\")\n      {\n        // Check if the container is big enough to show\n        // the full content.\n        var showX = iframeSize.width > innerSize.width;\n        var showY = iframeSize.height > innerSize.height;\n\n        // Dependency check\n        // We need a special intelligence here when only one\n        // of the autosized axis requires a scrollbar\n        // This scrollbar may then influence the need\n        // for the other one as well.\n        if ((showX || showY) && !(showX && showY))\n        {\n          if (showX) {\n            showY = iframeSize.height > paneSize.height;\n          } else if (showY) {\n            showX = iframeSize.width > paneSize.width;\n          }\n        }\n      }\n      else\n      {\n        var showX = scrollbarX === \"on\";\n        var showY = scrollbarY === \"on\";\n\n        // Check auto values afterwards with already\n        // corrected client dimensions\n        if (iframeSize.width > (showX ? paneSize.width : innerSize.width) && scrollbarX === \"auto\") {\n          showX = true;\n        }\n\n        if (iframeSize.height > (showX ? paneSize.height : innerSize.height) && scrollbarY === \"auto\") {\n          showY = true;\n        }\n      }\n\n      this._configureScrollbar(\n        \"scrollbar-x\", showX,\n        innerSize.width, iframeSize.width\n      );\n      this._configureScrollbar(\n        \"scrollbar-y\", showY,\n        innerSize.height, iframeSize.height\n      );\n\n      this._updateCornerWidget();\n    },\n\n\n    /**\n     * Compute the size of the iframe body\n     *\n     * @return {Object|null} A map with the body size or <code>null</code>.\n     */\n    _getIframeSize : function()\n    {\n      try\n      {\n        var win = this._getIframeElement().getWindow();\n        var frameSize = {\n          width: qx.bom.Document.getWidth(win),\n          height: qx.bom.Document.getHeight(win)\n        };\n        return frameSize;\n      }\n      catch (e)\n      {\n        return null;\n      }\n    },\n\n\n    /**\n     * Update visibility of the corner widget based on the visibility of the\n     * scrollbars\n     */\n    _updateCornerWidget : function()\n    {\n      if (\n        this._isChildControlVisible(\"scrollbar-x\") &&\n        this._isChildControlVisible(\"scrollbar-y\")\n      ) {\n        this._showChildControl(\"corner\");\n      } else {\n        this._excludeChildControl(\"corner\");\n      }\n    },\n\n\n    /**\n     * Configures the given scrollbar\n     *\n     * @param scrollbarId {String} child control id of the scrollbar to\n     *   configure\n     * @param show {Boolean} whether the scrollbar should be visible\n     * @param containerSize {Integer} size of the container widget\n     * @param contentSize {Integer} size of the iframe's document\n     */\n    _configureScrollbar : function(scrollbarId, show, containerSize, contentSize)\n    {\n      if (!show)\n      {\n        this._excludeChildControl(scrollbarId);\n        return;\n      }\n\n      var bar = this._showChildControl(scrollbarId);\n      if (containerSize >= contentSize)\n      {\n        bar.set({\n          position: 0,\n          maximum: contentSize,\n          knobFactor: 1,\n          enabled: false\n        });\n      }\n      else\n      {\n        bar.setMaximum(1000000);\n        bar.set({\n          position: Math.min(bar.getPosition(), contentSize),\n          maximum: contentSize - containerSize,\n          knobFactor: containerSize / contentSize,\n          enabled: true\n        });\n      }\n    },\n\n\n    /**\n     * Event handler for the scroll event of the horizontal scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarX : function(e) {\n      this.scrollToX(e.getData());\n    },\n\n\n    /**\n     * Event handler for the scroll event of the vertical scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarY : function(e) {\n      this.scrollToY(e.getData());\n    },\n\n\n    /**\n     * Scrolls the iframe's content to the given left coordinate\n     *\n     * @param x {Integer} The vertical position to scroll to.\n     */\n    scrollToX : function(x)\n    {\n      try\n      {\n        var win = this._getIframeElement().getWindow();\n        win.scroll(x, qx.bom.Viewport.getScrollTop(win));\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n\n    /**\n     * Scrolls the iframe's content to the given top coordinate\n     *\n     * @param y {Integer} The horizontal position to scroll to.\n     */\n    scrollToY : function(y)\n    {\n      try\n      {\n        var win = this._getIframeElement().getWindow();\n        win.scroll(qx.bom.Viewport.getScrollLeft(win), y);\n      } catch (e) {\n        this._disableScollbars();\n      }\n    }\n  },\n\n\n  destruct : function()\n  {\n    this._stopIframeObserver();\n    this.__iframeSize = null;\n  }\n});\n"
  ]
}