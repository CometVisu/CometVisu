{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "embed",
    "AbstractIframe",
    "include",
    "core",
    "scroll",
    "MRoll",
    "construct",
    "source",
    "grid",
    "layout",
    "Grid",
    "setColumnFlex",
    "setRowFlex",
    "_setLayout",
    "_showChildControl",
    "properties",
    "appearance",
    "refine",
    "init",
    "scrollbarX",
    "check",
    "themeable",
    "apply",
    "scrollbarY",
    "scrollbar",
    "group",
    "members",
    "__iframeSize",
    "__iframeObserverId",
    "_getIframeElement",
    "getChildControl",
    "getContentElement",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "Iframe",
    "getSource",
    "addListener",
    "_onIframeLoad",
    "_onIframeResize",
    "_add",
    "row",
    "column",
    "ScrollBar",
    "setMinWidth",
    "exclude",
    "_onScrollBarX",
    "setMinHeight",
    "_onScrollBarY",
    "Widget",
    "setWidth",
    "setHeight",
    "_disableScollbars",
    "body",
    "getBody",
    "_startIframeObserver",
    "_addRollListener",
    "fireEvent",
    "_updateScrollbars",
    "_excludeChildControl",
    "_stopIframeObserver",
    "bom",
    "Element",
    "_onRoll",
    "_onPointerDownForRoll",
    "e",
    "idle",
    "event",
    "Idle",
    "getInstance",
    "_onIframeObserverInterval",
    "removeListenerById",
    "iframeSize",
    "_getIframeSize",
    "width",
    "height",
    "_preventIframeScrolling",
    "win",
    "getWindow",
    "doc",
    "getDocument",
    "Document",
    "isStandardMode",
    "documentElement",
    "style",
    "overflow",
    "paneSize",
    "getBounds",
    "innerSize",
    "getInnerSize",
    "showX",
    "showY",
    "getScrollbarX",
    "getScrollbarY",
    "_configureScrollbar",
    "_updateCornerWidget",
    "frameSize",
    "getWidth",
    "getHeight",
    "_isChildControlVisible",
    "scrollbarId",
    "show",
    "containerSize",
    "contentSize",
    "bar",
    "set",
    "position",
    "maximum",
    "knobFactor",
    "enabled",
    "setMaximum",
    "Math",
    "min",
    "getPosition",
    "scrollToX",
    "getData",
    "scrollToY",
    "x",
    "Viewport",
    "getScrollTop",
    "y",
    "getScrollLeft",
    "destruct",
    "ThemedIframe"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/embed/ThemedIframe.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Container widget for internal frames (iframes) with qooxdoo scroll bar and\n * size hint support.\n *\n * An iframe can display any HTML page inside the widget. Note that custom\n * scroll bars do only work if the iframe's source points to the same domain\n * as the application.\n *\n * @childControl iframe {qx.ui.embed.Iframe} embedded iframe component\n * @childControl scrollbar-x {qx.ui.core.scroll.ScrollBar} horizontal scrollbar\n * @childControl scrollbar-y {qx.ui.core.scroll.ScrollBar} vertical scrollbar\n * @childControl corner {qx.ui.core.Widget} corner widget where no scrollbar is shown\n *\n * *Example*\n *\n * Here is a little example of how to use the widget:\n *\n * <pre class='javascript'>\n * var document = this.getRoot();\n * var iframe = new qx.ui.embed.ThemedIframe(\"frame.html\");\n * document.add(iframe);\n * </pre>\n *\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/themediframe.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.embed.ThemedIframe\", {\n  extend: qx.ui.embed.AbstractIframe,\n  include: qx.ui.core.scroll.MRoll,\n\n  construct(source) {\n    super(source);\n\n    // Create 'fixed' grid layout\n    var grid = new qx.ui.layout.Grid();\n    grid.setColumnFlex(0, 1);\n    grid.setRowFlex(0, 1);\n    this._setLayout(grid);\n\n    this._showChildControl(\"iframe\");\n  },\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"scrollarea\"\n    },\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarX: {\n      check: [\"auto\", \"on\", \"off\"],\n      init: \"auto\",\n      themeable: true,\n      apply: \"_updateScrollbars\"\n    },\n\n    /**\n     * The policy, when the horizontal scrollbar should be shown.\n     * <ul>\n     *   <li><b>auto</b>: Show scrollbar on demand</li>\n     *   <li><b>on</b>: Always show the scrollbar</li>\n     *   <li><b>off</b>: Never show the scrollbar</li>\n     * </ul>\n     */\n    scrollbarY: {\n      check: [\"auto\", \"on\", \"off\"],\n      init: \"auto\",\n      themeable: true,\n      apply: \"_updateScrollbars\"\n    },\n\n    /**\n     * Group property, to set the overflow of both scroll bars.\n     */\n    scrollbar: {\n      group: [\"scrollbarX\", \"scrollbarY\"]\n    }\n  },\n\n  members: {\n    __iframeSize: null,\n    __iframeObserverId: null,\n\n    // overridden\n    _getIframeElement() {\n      return this.getChildControl(\"iframe\").getContentElement();\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"iframe\":\n          control = new qx.ui.embed.Iframe(this.getSource());\n          control.addListener(\"load\", this._onIframeLoad, this);\n          control.addListener(\"resize\", this._onIframeResize, this);\n          this._add(control, { row: 0, column: 0 });\n          break;\n\n        case \"scrollbar-x\":\n          control = new qx.ui.core.scroll.ScrollBar(\"horizontal\");\n          control.setMinWidth(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarX, this);\n\n          this._add(control, { row: 1, column: 0 });\n          break;\n\n        case \"scrollbar-y\":\n          control = new qx.ui.core.scroll.ScrollBar(\"vertical\");\n          control.setMinHeight(0);\n\n          control.exclude();\n          control.addListener(\"scroll\", this._onScrollBarY, this);\n\n          this._add(control, { row: 0, column: 1 });\n          break;\n\n        case \"corner\":\n          control = new qx.ui.core.Widget();\n          control.setWidth(0);\n          control.setHeight(0);\n          control.exclude();\n\n          this._add(control, { row: 1, column: 1 });\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the iframe's load event\n     */\n    _onIframeLoad() {\n      this._disableScollbars();\n\n      var body = this._getIframeElement().getBody();\n      if (body) {\n        this._startIframeObserver();\n        this._addRollListener();\n      }\n\n      this.fireEvent(\"load\");\n    },\n\n    /**\n     * Event handler for resize event of the iframe widget.\n     */\n    _onIframeResize() {\n      this._updateScrollbars();\n    },\n\n    /**\n     * Hide all scrollbars and stop observing the iframe document\n     */\n    _disableScollbars() {\n      this._excludeChildControl(\"scrollbar-x\");\n      this._excludeChildControl(\"scrollbar-y\");\n      this._excludeChildControl(\"corner\");\n\n      this._stopIframeObserver();\n    },\n\n    /**\n     * Attach roll listener to the iframe\n     */\n    _addRollListener() {\n      try {\n        var body = this._getIframeElement().getBody();\n        qx.bom.Element.addListener(body, \"roll\", this._onRoll, this);\n        qx.bom.Element.addListener(\n          body,\n          \"pointerdown\",\n          this._onPointerDownForRoll,\n          this\n        );\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n    /**\n     * Start observing size changes of the iframe document\n     */\n    _startIframeObserver() {\n      if (this.__iframeObserverId) {\n        this._stopIframeObserver();\n      }\n\n      var idle = qx.event.Idle.getInstance();\n      this.__iframeObserverId = idle.addListener(\n        \"interval\",\n        this._onIframeObserverInterval,\n        this\n      );\n    },\n\n    /**\n     * Stop observing size changes of the iframe document\n     */\n    _stopIframeObserver() {\n      this.__iframeSize = null;\n\n      if (!this.__iframeObserverId) {\n        return;\n      }\n\n      var idle = qx.event.Idle.getInstance();\n      idle.removeListenerById(this.__iframeObserverId);\n    },\n\n    /**\n     * Event handler, which is called periodically to update the scroll bars\n     */\n    _onIframeObserverInterval() {\n      var iframeSize = this._getIframeSize();\n      if (!iframeSize) {\n        this._disableScollbars();\n        return;\n      }\n\n      if (\n        this.__iframeSize &&\n        iframeSize.width == this.__iframeSize.width &&\n        iframeSize.height == this.__iframeSize.height\n      ) {\n        return;\n      }\n\n      this.__iframeSize = iframeSize;\n      this._preventIframeScrolling();\n      this._updateScrollbars();\n    },\n\n    /**\n     * Try to hide native scrollbars in the iframe\n     */\n    _preventIframeScrolling() {\n      try {\n        var win = this._getIframeElement().getWindow();\n        var doc = this._getIframeElement().getDocument();\n        if (qx.bom.Document.isStandardMode(win)) {\n          doc.documentElement.style.overflow = \"hidden\";\n        } else {\n          doc.body.style.overflow = \"hidden\";\n        }\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n    /**\n     * Recompute scrollbar visibility and positions based on the iframe's\n     * document size\n     */\n    _updateScrollbars() {\n      var iframeSize = this.__iframeSize;\n      var paneSize = this.getChildControl(\"iframe\").getBounds();\n      var innerSize = this.getChildControl(\"iframe\").getInnerSize();\n\n      if (!iframeSize || !innerSize || !innerSize) {\n        return;\n      }\n\n      var showX = false;\n      var showY = false;\n\n      var scrollbarX = this.getScrollbarX();\n      var scrollbarY = this.getScrollbarY();\n\n      if (scrollbarX === \"auto\" && scrollbarY === \"auto\") {\n        // Check if the container is big enough to show\n        // the full content.\n        var showX = iframeSize.width > innerSize.width;\n        var showY = iframeSize.height > innerSize.height;\n\n        // Dependency check\n        // We need a special intelligence here when only one\n        // of the autosized axis requires a scrollbar\n        // This scrollbar may then influence the need\n        // for the other one as well.\n        if ((showX || showY) && !(showX && showY)) {\n          if (showX) {\n            showY = iframeSize.height > paneSize.height;\n          } else if (showY) {\n            showX = iframeSize.width > paneSize.width;\n          }\n        }\n      } else {\n        var showX = scrollbarX === \"on\";\n        var showY = scrollbarY === \"on\";\n\n        // Check auto values afterwards with already\n        // corrected client dimensions\n        if (\n          iframeSize.width > (showX ? paneSize.width : innerSize.width) &&\n          scrollbarX === \"auto\"\n        ) {\n          showX = true;\n        }\n\n        if (\n          iframeSize.height > (showX ? paneSize.height : innerSize.height) &&\n          scrollbarY === \"auto\"\n        ) {\n          showY = true;\n        }\n      }\n\n      this._configureScrollbar(\n        \"scrollbar-x\",\n        showX,\n        innerSize.width,\n        iframeSize.width\n      );\n\n      this._configureScrollbar(\n        \"scrollbar-y\",\n        showY,\n        innerSize.height,\n        iframeSize.height\n      );\n\n      this._updateCornerWidget();\n    },\n\n    /**\n     * Compute the size of the iframe body\n     *\n     * @return {Object|null} A map with the body size or <code>null</code>.\n     */\n    _getIframeSize() {\n      try {\n        var win = this._getIframeElement().getWindow();\n        var frameSize = {\n          width: qx.bom.Document.getWidth(win),\n          height: qx.bom.Document.getHeight(win)\n        };\n\n        return frameSize;\n      } catch (e) {\n        return null;\n      }\n    },\n\n    /**\n     * Update visibility of the corner widget based on the visibility of the\n     * scrollbars\n     */\n    _updateCornerWidget() {\n      if (\n        this._isChildControlVisible(\"scrollbar-x\") &&\n        this._isChildControlVisible(\"scrollbar-y\")\n      ) {\n        this._showChildControl(\"corner\");\n      } else {\n        this._excludeChildControl(\"corner\");\n      }\n    },\n\n    /**\n     * Configures the given scrollbar\n     *\n     * @param scrollbarId {String} child control id of the scrollbar to\n     *   configure\n     * @param show {Boolean} whether the scrollbar should be visible\n     * @param containerSize {Integer} size of the container widget\n     * @param contentSize {Integer} size of the iframe's document\n     */\n    _configureScrollbar(scrollbarId, show, containerSize, contentSize) {\n      if (!show) {\n        this._excludeChildControl(scrollbarId);\n        return;\n      }\n\n      var bar = this._showChildControl(scrollbarId);\n      if (containerSize >= contentSize) {\n        bar.set({\n          position: 0,\n          maximum: contentSize,\n          knobFactor: 1,\n          enabled: false\n        });\n      } else {\n        bar.setMaximum(1000000);\n        bar.set({\n          position: Math.min(bar.getPosition(), contentSize),\n          maximum: contentSize - containerSize,\n          knobFactor: containerSize / contentSize,\n          enabled: true\n        });\n      }\n    },\n\n    /**\n     * Event handler for the scroll event of the horizontal scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarX(e) {\n      this.scrollToX(e.getData());\n    },\n\n    /**\n     * Event handler for the scroll event of the vertical scrollbar\n     *\n     * @param e {qx.event.type.Data} The scroll event object\n     */\n    _onScrollBarY(e) {\n      this.scrollToY(e.getData());\n    },\n\n    /**\n     * Scrolls the iframe's content to the given left coordinate\n     *\n     * @param x {Integer} The vertical position to scroll to.\n     */\n    scrollToX(x) {\n      try {\n        var win = this._getIframeElement().getWindow();\n        win.scroll(x, qx.bom.Viewport.getScrollTop(win));\n      } catch (e) {\n        this._disableScollbars();\n      }\n    },\n\n    /**\n     * Scrolls the iframe's content to the given top coordinate\n     *\n     * @param y {Integer} The horizontal position to scroll to.\n     */\n    scrollToY(y) {\n      try {\n        var win = this._getIframeElement().getWindow();\n        win.scroll(qx.bom.Viewport.getScrollLeft(win), y);\n      } catch (e) {\n        this._disableScollbars();\n      }\n    }\n  },\n\n  destruct() {\n    this._stopIframeObserver();\n    this.__iframeSize = null;\n  }\n});\n"
  ],
  "mappings": "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"
}