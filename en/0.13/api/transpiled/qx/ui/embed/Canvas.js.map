{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "canvasWidth",
    "canvasHeight",
    "constructor",
    "call",
    "__deferredDraw",
    "util",
    "DeferredCall",
    "__redraw",
    "addListener",
    "_onResize",
    "undefined",
    "setCanvasWidth",
    "setCanvasHeight",
    "events",
    "redraw",
    "properties",
    "syncDimension",
    "check",
    "init",
    "apply",
    "members",
    "_createContentElement",
    "html",
    "Canvas",
    "__P_565_1",
    "canvas",
    "getContentElement",
    "height",
    "getHeight",
    "width",
    "getWidth",
    "context",
    "getContext2d",
    "_draw",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Data",
    "_applyCanvasWidth",
    "value",
    "old",
    "setWidth",
    "schedule",
    "_applyCanvasHeight",
    "setHeight",
    "update",
    "e",
    "data",
    "getData",
    "getSyncDimension",
    "destruct",
    "_disposeObjects",
    "embed"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/embed/Canvas.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The Canvas widget embeds the HMTL canvas element\n * [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas\">W3C-HTML5</a>]\n *\n * Note: This widget does not work in Internet Explorer < 9!\n * Check for browser support with qx.core.Environment.get(\"html.canvas\").\n *\n * To paint something on the canvas and keep the content updated on resizes you\n * either have to override the {@link #_draw} method or redraw the content on\n * the {@link #redraw} event. The drawing context can be obtained by {@link #getContext2d}.\n *\n * Note that this widget operates on two different coordinate systems. The canvas\n * has its own coordinate system for drawing operations. This canvas coordinate\n * system is scaled to fit actual size of the DOM element. Each time the size of\n * the canvas dimensions is changed a redraw is required. In this case the\n * protected method {@link #_draw} is called and the event {@link #redraw}\n * is fired. You can synchronize the internal canvas dimension with the\n * CSS dimension of the canvas element by setting {@link #syncDimension} to\n * <code>true</code>.\n *\n * *Example*\n *\n * Here is a little example of how to use the canvas widget.\n *\n * <pre class='javascript'>\n * var canvas = new qx.ui.embed.Canvas().set({\n *   canvasWidth: 200,\n *   canvasHeight: 200,\n *   syncDimension: true\n * });\n * canvas.addListener(\"redraw\", function(e)\n * {\n *   var data = e.getData();\n *   var width = data.width;\n *   var height = data.height;\n *   var ctx = data.context;\n *\n *   ctx.fillStyle = \"rgb(200,0,0)\";\n *   ctx.fillRect (20, 20, width-5, height-5);\n *\n *   ctx.fillStyle = \"rgba(0, 0, 200, 0.5)\";\n *   ctx.fillRect (70, 70, 105, 100);\n * }, this);\n * </pre>\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/canvas.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.embed.Canvas\", {\n  extend: qx.ui.core.Widget,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param canvasWidth {Integer} The internal with of the canvas coordinates.\n   * @param canvasHeight {Integer} The internal height of the canvas coordinates.\n   */\n  construct(canvasWidth, canvasHeight) {\n    super();\n\n    this.__deferredDraw = new qx.util.DeferredCall(this.__redraw, this);\n    this.addListener(\"resize\", this._onResize, this);\n\n    if (canvasWidth !== undefined) {\n      this.setCanvasWidth(canvasWidth);\n    }\n\n    if (canvasHeight !== undefined) {\n      this.setCanvasHeight(canvasHeight);\n    }\n  },\n\n  /*\n   *****************************************************************************\n      EVENTS\n   *****************************************************************************\n   */\n\n  events: {\n    /**\n     * The redraw event is fired each time the canvas dimension change and the\n     * canvas needs to be updated. The data field contains a map containing the\n     * <code>width</code> and <code>height</code> of the canvas and the\n     * rendering <code>context</code>.\n     */\n    redraw: \"qx.event.type.Data\"\n  },\n\n  /*\n   *****************************************************************************\n      MEMBERS\n   *****************************************************************************\n   */\n\n  properties: {\n    /** Whether canvas and widget coordinates should be synchronized */\n    syncDimension: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /** The internal with of the canvas coordinates */\n    canvasWidth: {\n      check: \"Integer\",\n      init: 300,\n      apply: \"_applyCanvasWidth\"\n    },\n\n    /** The internal height of the canvas coordinates */\n    canvasHeight: {\n      check: \"Integer\",\n      init: 150,\n      apply: \"_applyCanvasHeight\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.util.DeferredCall} */\n    __deferredDraw: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createContentElement() {\n      return new qx.html.Canvas();\n    },\n\n    /**\n     * This methods triggers the redraw of the canvas' content\n     */\n    __redraw() {\n      var canvas = this.getContentElement();\n      var height = canvas.getHeight();\n      var width = canvas.getWidth();\n      var context = canvas.getContext2d();\n\n      this._draw(width, height, context);\n      this.fireNonBubblingEvent(\"redraw\", qx.event.type.Data, [\n        {\n          width: width,\n          height: height,\n          context: context\n        }\n      ]);\n    },\n\n    // property apply\n    _applyCanvasWidth(value, old) {\n      this.getContentElement().setWidth(value);\n      this.__deferredDraw.schedule();\n    },\n\n    // property apply\n    _applyCanvasHeight(value, old) {\n      this.getContentElement().setHeight(value);\n      this.__deferredDraw.schedule();\n    },\n\n    /**\n     * Redraw the canvas\n     */\n    update() {\n      this.__deferredDraw.schedule();\n    },\n\n    /**\n     * Widget resize event handler. Updates the canvas dimension if needed.\n     *\n     * @param e {qx.event.type.Data} The resize event object\n     */\n    _onResize(e) {\n      var data = e.getData();\n\n      if (this.getSyncDimension()) {\n        this.setCanvasHeight(data.height);\n        this.setCanvasWidth(data.width);\n      }\n    },\n\n    /**\n     * Get the native canvas 2D rendering context\n     * [<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasrenderingcontext2d\">W3C-HTML5</a>].\n     * All drawing operations are performed on this context.\n     *\n     * @return {CanvasRenderingContext2D} The 2D rendering context.\n     */\n    getContext2d() {\n      return this.getContentElement().getContext2d();\n    },\n\n    /**\n     * Template method, which can be used by derived classes to redraw the\n     * content. It is called each time the canvas dimension change and the\n     * canvas needs to be updated.\n     *\n     * @param width {Integer} New canvas width\n     * @param height {Integer} New canvas height\n     * @param context {CanvasRenderingContext2D} The rendering context to draw to\n     */\n    _draw(width, height, context) {}\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n  destruct() {\n    this._disposeObjects(\"__deferredDraw\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,oBAAoB,EAAE;IACpCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,MAAM;IAEzB;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,WAAW,EAAEC,YAAY,EAAE;MACnCZ,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,MAAA,CAAAI,WAAA,CAAAC,IAAA;MAEA,IAAI,CAACC,SAAc,GAAG,IAAIf,EAAE,CAACgB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,SAAQ,EAAE,IAAI,CAAC;MACnE,IAAI,CAACC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;MAEhD,IAAIT,WAAW,KAAKU,SAAS,EAAE;QAC7B,IAAI,CAACC,cAAc,CAACX,WAAW,CAAC;MAClC;MAEA,IAAIC,YAAY,KAAKS,SAAS,EAAE;QAC9B,IAAI,CAACE,eAAe,CAACX,YAAY,CAAC;MACpC;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEY,MAAM,EAAE;MACN;AACJ;AACA;AACA;AACA;AACA;MACIC,MAAM,EAAE;IACV,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;MACAC,aAAa,EAAE;QACbC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,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",
  "ignoreList": []
}