{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "MRemoteLayoutHandling",
    "MResizable",
    "MMovable",
    "MContentPadding",
    "construct",
    "caption",
    "icon",
    "_setLayout",
    "layout",
    "VBox",
    "_createChildControl",
    "setIcon",
    "setCaption",
    "_updateCaptionBar",
    "addListener",
    "_onWindowPointerDown",
    "_onWindowFocusOut",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "initVisibility",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "_getResizeFrame",
    "setAppearance",
    "getContentElement",
    "setAttribute",
    "addAriaLabelledBy",
    "getChildControl",
    "addAriaDescribedBy",
    "statics",
    "DEFAULT_MANAGER_CLASS",
    "window",
    "Manager",
    "events",
    "beforeClose",
    "close",
    "beforeMinimize",
    "minimize",
    "beforeMaximize",
    "maximize",
    "beforeRestore",
    "restore",
    "properties",
    "appearance",
    "refine",
    "init",
    "visibility",
    "focusable",
    "active",
    "check",
    "apply",
    "event",
    "alwaysOnTop",
    "modal",
    "nullable",
    "themeable",
    "status",
    "showClose",
    "showMaximize",
    "showMinimize",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "showStatusbar",
    "centerOnAppear",
    "centerOnContainerResize",
    "autoDestroy",
    "members",
    "__restoredTop",
    "__restoredLeft",
    "__centeringAppearId",
    "__centeringResizeId",
    "getChildrenContainer",
    "_forwardStates",
    "maximized",
    "setLayoutParent",
    "parent",
    "oldParent",
    "getLayoutParent",
    "removeListenerById",
    "getCenterOnContainerResize",
    "center",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "Composite",
    "HBox",
    "_add",
    "basic",
    "Label",
    "setValue",
    "getStatus",
    "flex",
    "Grid",
    "setRowFlex",
    "setColumnFlex",
    "_onCaptionPointerDblTap",
    "_activateMoveHandle",
    "Image",
    "getIcon",
    "row",
    "column",
    "getCaption",
    "setWidth",
    "setAllowGrowX",
    "captionBar",
    "form",
    "Button",
    "setFocusable",
    "_onMinimizeButtonTap",
    "_onRestoreButtonTap",
    "_onMaximizeButtonTap",
    "_onCloseButtonTap",
    "btn",
    "setSource",
    "_showChildControl",
    "_excludeChildControl",
    "getShowMinimize",
    "getAllowMinimize",
    "resetEnabled",
    "setEnabled",
    "getShowMaximize",
    "isMaximized",
    "getAllowMaximize",
    "getShowClose",
    "getAllowClose",
    "getAutoDestroy",
    "isVisible",
    "fireNonBubblingEvent",
    "type",
    "Event",
    "hide",
    "fireEvent",
    "dispose",
    "open",
    "show",
    "setActive",
    "focus",
    "bounds",
    "getBounds",
    "hint",
    "getSizeHint",
    "left",
    "Math",
    "round",
    "width",
    "top",
    "height",
    "moveTo",
    "supportsMaximize",
    "props",
    "getLayoutProperties",
    "undefined",
    "setLayoutProperties",
    "edge",
    "addState",
    "removeState",
    "getMode",
    "hasState",
    "_applyActive",
    "value",
    "old",
    "_applyModal",
    "_getContentPaddingTarget",
    "_applyShowStatusbar",
    "resizeFrame",
    "_applyCaptionBarChange",
    "_applyStatus",
    "label",
    "_applyFocusable",
    "Environment",
    "get",
    "_applyCenterOnAppear",
    "_applyCenterOnContainerResize",
    "_onWindowEventStop",
    "e",
    "stopPropagation",
    "getModal",
    "current",
    "getRelatedTarget",
    "contains",
    "getTarget",
    "reset",
    "destruct",
    "removeRoot",
    "remove",
    "Window"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/Window.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A window widget\n *\n * More information can be found in the package description {@link qx.ui.window}.\n *\n * @childControl statusbar {qx.ui.container.Composite} statusbar container which shows the statusbar text\n * @childControl statusbar-text {qx.ui.basic.Label} text of the statusbar\n * @childControl pane {qx.ui.container.Composite} window pane which holds the content\n * @childControl captionbar {qx.ui.container.Composite} Container for all widgets inside the captionbar\n * @childControl icon {qx.ui.basic.Image} icon at the left of the captionbar\n * @childControl title {qx.ui.basic.Label} caption of the window\n * @childControl minimize-button {qx.ui.form.Button} button to minimize the window\n * @childControl restore-button {qx.ui.form.Button} button to restore the window\n * @childControl maximize-button {qx.ui.form.Button} button to maximize the window\n * @childControl close-button {qx.ui.form.Button} button to close the window\n */\nqx.Class.define(\"qx.ui.window.Window\", {\n  extend: qx.ui.core.Widget,\n\n  include: [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling,\n    qx.ui.core.MResizable,\n    qx.ui.core.MMovable,\n    qx.ui.core.MContentPadding\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param caption {String?} The caption text\n   * @param icon {String?} The URL of the caption bar icon\n   */\n  construct(caption, icon) {\n    super();\n\n    // configure internal layout\n    this._setLayout(new qx.ui.layout.VBox());\n\n    // force creation of captionbar\n    this._createChildControl(\"captionbar\");\n    this._createChildControl(\"pane\");\n\n    // apply constructor parameters\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n    if (caption != null) {\n      this.setCaption(caption);\n    }\n\n    // Update captionbar\n    this._updateCaptionBar();\n\n    // Activation listener\n    this.addListener(\"pointerdown\", this._onWindowPointerDown, this, true);\n\n    // Focusout listener\n    this.addListener(\"focusout\", this._onWindowFocusOut, this);\n\n    // Automatically add to application root.\n    qx.core.Init.getApplication().getRoot().add(this);\n\n    // Initialize visibility\n    this.initVisibility();\n\n    // Register as root for the focus handler\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n\n    // Change the resize frames appearance\n    this._getResizeFrame().setAppearance(\"window-resize-frame\");\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"dialog\");\n    this.addAriaLabelledBy(this.getChildControl(\"title\"));\n    this.addAriaDescribedBy(this.getChildControl(\"statusbar-text\"));\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Class} The default window manager class. */\n    DEFAULT_MANAGER_CLASS: qx.ui.window.Manager\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired before the window is closed.\n     *\n     * The close action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeClose: \"qx.event.type.Event\",\n\n    /** Fired if the window is closed */\n    close: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is minimize.\n     *\n     * The minimize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMinimize: \"qx.event.type.Event\",\n\n    /** Fired if the window is minimized */\n    minimize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is maximize.\n     *\n     * The maximize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMaximize: \"qx.event.type.Event\",\n\n    /** Fired if the window is maximized */\n    maximize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is restored from a minimized or maximized state.\n     *\n     * The restored action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeRestore: \"qx.event.type.Event\",\n\n    /** Fired if the window is restored from a minimized or maximized state */\n    restore: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"window\"\n    },\n\n    // overridden\n    visibility: {\n      refine: true,\n      init: \"excluded\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /**\n     * If the window is active, only one window in a single qx.ui.window.Manager could\n     *  have set this to true at the same time.\n     */\n    active: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyActive\",\n      event: \"changeActive\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the window be always on top */\n    alwaysOnTop: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAlwaysOnTop\"\n    },\n\n    /** Should the window be modal (this disables minimize and maximize buttons) */\n    modal: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeModal\",\n      apply: \"_applyModal\"\n    },\n\n    /** The text of the caption */\n    caption: {\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeCaption\",\n      nullable: true\n    },\n\n    /** The icon of the caption */\n    icon: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeIcon\",\n      themeable: true\n    },\n\n    /** The text of the statusbar */\n    status: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyStatus\",\n      event: \"changeStatus\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HIDE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the close button be shown */\n    showClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the maximize button be shown */\n    showMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the minimize button be shown */\n    showMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DISABLE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the user have the ability to close the window */\n    allowClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to maximize the window */\n    allowMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to minimize the window */\n    allowMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUSBAR CONFIG\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the statusbar be shown */\n    showStatusbar: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyShowStatusbar\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WHEN TO AUTOMATICALY CENTER\n    ---------------------------------------------------------------------------\n    */\n\n    /** Whether this window should be automatically centered when it appears */\n    centerOnAppear: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnAppear\"\n    },\n\n    /**\n     * Whether this window should be automatically centered when its container\n     * is resized.\n     */\n    centerOnContainerResize: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnContainerResize\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLOSE BEHAVIOR\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Should the window be automatically destroyed when it is closed.\n     *\n     * When false, closing the window behaves like hiding the window.\n     *\n     * When true, the window is removed from its container (the root), all\n     * listeners are removed, the window's widgets are removed, and the window\n     * is destroyed.\n     *\n     * NOTE: If any widgets that were added to this window require special\n     * clean-up, you should listen on the 'close' event and remove and clean\n     * up those widgets there.\n     */\n    autoDestroy: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {Integer} Original top value before maximation had occurred */\n    __restoredTop: null,\n\n    /** @type {Integer} Original left value before maximation had occurred */\n    __restoredLeft: null,\n\n    /** @type {Integer} Listener ID for centering on appear */\n    __centeringAppearId: null,\n\n    /** @type {Integer} Listener ID for centering on resize */\n    __centeringResizeId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The children container needed by the {@link qx.ui.core.MRemoteChildrenHandling}\n     * mixin\n     *\n     * @return {qx.ui.container.Composite} pane sub widget\n     */\n    getChildrenContainer() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      active: true,\n      maximized: true,\n      showStatusbar: true,\n      modal: true\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      var oldParent;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        parent &&\n          this.assertInterface(\n            parent,\n            qx.ui.window.IDesktop,\n            \"Windows can only be added to widgets, which implement the interface \" +\n              \"qx.ui.window.IDesktop. All root widgets implement this interface.\"\n          );\n      }\n\n      // Before changing the parent, if there's a prior one, remove our resize\n      // listener\n      oldParent = this.getLayoutParent();\n      if (oldParent && this.__centeringResizeId) {\n        oldParent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // Call the superclass\n      super.setLayoutParent(parent);\n\n      // Re-add a listener for resize, if required\n      if (parent && this.getCenterOnContainerResize()) {\n        this.__centeringResizeId = parent.addListener(\n          \"resize\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"statusbar\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n          this._add(control);\n          control.add(this.getChildControl(\"statusbar-text\"));\n          break;\n\n        case \"statusbar-text\":\n          control = new qx.ui.basic.Label();\n          control.setValue(this.getStatus());\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Composite();\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"captionbar\":\n          // captionbar\n          var layout = new qx.ui.layout.Grid();\n          layout.setRowFlex(0, 1);\n          layout.setColumnFlex(1, 1);\n          control = new qx.ui.container.Composite(layout);\n          this._add(control);\n\n          // captionbar events\n          control.addListener(\"dbltap\", this._onCaptionPointerDblTap, this);\n\n          // register as move handle\n          this._activateMoveHandle(control);\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image(this.getIcon());\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 0\n          });\n\n          break;\n\n        case \"title\":\n          control = new qx.ui.basic.Label(this.getCaption());\n          control.setWidth(0);\n          control.setAllowGrowX(true);\n\n          var captionBar = this.getChildControl(\"captionbar\");\n          captionBar.add(control, { row: 0, column: 1 });\n          break;\n\n        case \"minimize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMinimizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 2\n          });\n\n          break;\n\n        case \"restore-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onRestoreButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 3\n          });\n\n          break;\n\n        case \"maximize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMaximizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 4\n          });\n\n          break;\n\n        case \"close-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onCloseButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 6\n          });\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CAPTIONBAR INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Updates the status and the visibility of each element of the captionbar.\n     */\n    _updateCaptionBar() {\n      var btn;\n\n      var icon = this.getIcon();\n      if (icon) {\n        this.getChildControl(\"icon\").setSource(icon);\n        this._showChildControl(\"icon\");\n      } else {\n        this._excludeChildControl(\"icon\");\n      }\n\n      var caption = this.getCaption();\n      if (caption) {\n        this.getChildControl(\"title\").setValue(caption);\n        this._showChildControl(\"title\");\n      } else {\n        this._excludeChildControl(\"title\");\n      }\n\n      if (this.getShowMinimize()) {\n        this._showChildControl(\"minimize-button\");\n\n        btn = this.getChildControl(\"minimize-button\");\n        this.getAllowMinimize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"minimize-button\");\n      }\n\n      if (this.getShowMaximize()) {\n        if (this.isMaximized()) {\n          this._showChildControl(\"restore-button\");\n          this._excludeChildControl(\"maximize-button\");\n        } else {\n          this._showChildControl(\"maximize-button\");\n          this._excludeChildControl(\"restore-button\");\n        }\n\n        btn = this.getChildControl(\"maximize-button\");\n        this.getAllowMaximize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"maximize-button\");\n        this._excludeChildControl(\"restore-button\");\n      }\n\n      if (this.getShowClose()) {\n        this._showChildControl(\"close-button\");\n\n        btn = this.getChildControl(\"close-button\");\n        this.getAllowClose() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"close-button\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Close the current window instance.\n     *\n     * Simply calls the {@link qx.ui.core.Widget#hide} method if the\n     * {@link qx.ui.win.Window#autoDestroy} property is false; otherwise\n     * removes and destroys the window.\n     */\n    close() {\n      if (!this.getAutoDestroy() && !this.isVisible()) {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeClose\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        this.hide();\n        this.fireEvent(\"close\");\n      }\n\n      // If automatically destroying the window upon close was requested, do\n      // so now. (Note that we explicitly re-obtain the autoDestroy property\n      // value, allowing the user's close handler to enable/disable it before\n      // here.)\n      if (this.getAutoDestroy()) {\n        this.dispose();\n      }\n    },\n\n    /**\n     * Open the window.\n     */\n    open() {\n      this.show();\n      this.setActive(true);\n      this.focus();\n    },\n\n    /**\n     * Centers the window to the parent.\n     *\n     * This call works with the size of the parent widget and the size of\n     * the window as calculated in the last layout flush. It is best to call\n     * this method just after rendering the window in the \"resize\" event:\n     * <pre class='javascript'>\n     *   win.addListenerOnce(\"resize\", this.center, this);\n     * </pre>\n     */\n    center() {\n      var parent = this.getLayoutParent();\n      if (parent) {\n        var bounds = parent.getBounds();\n        if (bounds) {\n          var hint = this.getSizeHint();\n\n          var left = Math.round((bounds.width - hint.width) / 2);\n          var top = Math.round((bounds.height - hint.height) / 2);\n\n          if (top < 0) {\n            top = 0;\n          }\n\n          this.moveTo(left, top);\n\n          return;\n        }\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.warn(\"Centering depends on parent bounds!\");\n      }\n    },\n\n    /**\n     * Maximize the window.\n     */\n    maximize() {\n      // If the window is already maximized -> return\n      if (this.isMaximized()) {\n        return;\n      }\n\n      // First check if the parent uses a canvas layout\n      // Otherwise maximize() is not possible\n      var parent = this.getLayoutParent();\n      if (parent != null && parent.supportsMaximize()) {\n        if (\n          this.fireNonBubblingEvent(\"beforeMaximize\", qx.event.type.Event, [\n            false,\n            true\n          ])\n        ) {\n          if (!this.isVisible()) {\n            this.open();\n          }\n\n          // store current dimension and location\n          var props = this.getLayoutProperties();\n          this.__restoredLeft = props.left === undefined ? 0 : props.left;\n          this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n          // Update layout properties\n          this.setLayoutProperties({\n            left: null,\n            top: null,\n            edge: 0\n          });\n\n          // Add state\n          this.addState(\"maximized\");\n\n          // Update captionbar\n          this._updateCaptionBar();\n\n          // Fire user event\n          this.fireEvent(\"maximize\");\n        }\n      }\n    },\n\n    /**\n     * Minimized the window.\n     */\n    minimize() {\n      if (!this.isVisible()) {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeMinimize\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        // store current dimension and location\n        var props = this.getLayoutProperties();\n        this.__restoredLeft = props.left === undefined ? 0 : props.left;\n        this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n        this.removeState(\"maximized\");\n        this.hide();\n        this.fireEvent(\"minimize\");\n      }\n    },\n\n    /**\n     * Restore the window to <code>\"normal\"</code>, if it is\n     * <code>\"maximized\"</code> or <code>\"minimized\"</code>.\n     */\n    restore() {\n      if (this.getMode() === \"normal\") {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeRestore\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        if (!this.isVisible()) {\n          this.open();\n        }\n\n        // Restore old properties\n        var left = this.__restoredLeft;\n        var top = this.__restoredTop;\n\n        this.setLayoutProperties({\n          edge: null,\n          left: left,\n          top: top\n        });\n\n        // Remove maximized state\n        this.removeState(\"maximized\");\n\n        // Update captionbar\n        this._updateCaptionBar();\n\n        // Fire user event\n        this.fireEvent(\"restore\");\n      }\n    },\n\n    /**\n     * Set the window's position relative to its parent\n     *\n     * @param left {Integer} The left position\n     * @param top {Integer} The top position\n     */\n    moveTo(left, top) {\n      if (this.isMaximized()) {\n        return;\n      }\n\n      this.setLayoutProperties({\n        left: left,\n        top: top\n      });\n    },\n\n    /**\n     * Return <code>true</code> if the window is in maximized state,\n     * but note that the window in maximized state could also be invisible, this\n     * is equivalent to minimized. So use the {@link qx.ui.window.Window#getMode}\n     * to get the window mode.\n     *\n     * @return {Boolean} <code>true</code> if the window is maximized,\n     *   <code>false</code> otherwise.\n     */\n    isMaximized() {\n      return this.hasState(\"maximized\");\n    },\n\n    /**\n     * Return the window mode as <code>String</code>:\n     * <code>\"maximized\"</code>, <code>\"normal\"</code> or <code>\"minimized\"</code>.\n     *\n     * @return {String} The window mode as <code>String</code> value.\n     */\n    getMode() {\n      if (!this.isVisible()) {\n        return \"minimized\";\n      } else {\n        if (this.isMaximized()) {\n          return \"maximized\";\n        } else {\n          return \"normal\";\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyActive(value, old) {\n      if (old) {\n        this.removeState(\"active\");\n      } else {\n        this.addState(\"active\");\n      }\n    },\n\n    // property apply\n    _applyModal(value, old) {\n      if (old) {\n        this.removeState(\"modal\");\n      } else {\n        this.addState(\"modal\");\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-modal\", value);\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // property apply\n    _applyShowStatusbar(value, old) {\n      // store the state if the status bar is shown\n      var resizeFrame = this._getResizeFrame();\n      if (value) {\n        this.addState(\"showStatusbar\");\n        resizeFrame.addState(\"showStatusbar\");\n      } else {\n        this.removeState(\"showStatusbar\");\n        resizeFrame.removeState(\"showStatusbar\");\n      }\n\n      if (value) {\n        this._showChildControl(\"statusbar\");\n      } else {\n        this._excludeChildControl(\"statusbar\");\n      }\n    },\n\n    // property apply\n    _applyCaptionBarChange(value, old) {\n      this._updateCaptionBar();\n    },\n\n    // property apply\n    _applyStatus(value, old) {\n      var label = this.getChildControl(\"statusbar-text\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // overridden\n    _applyFocusable(value, old) {\n      // Workaround for bug #7581: Don't set the tabIndex\n      // to prevent native scrolling on focus in IE\n      if (qx.core.Environment.get(\"engine.name\") !== \"mshtml\") {\n        super._applyFocusable(value, old);\n      }\n    },\n\n    _applyCenterOnAppear(value, old) {\n      // Remove prior listener for centering on appear\n      if (this.__centeringAppearId !== null) {\n        this.removeListenerById(this.__centeringAppearId);\n        this.__centeringAppearId = null;\n      }\n\n      // If we are to center on appear, arrange to do so\n      if (value) {\n        this.__centeringAppearId = this.addListener(\n          \"appear\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    _applyCenterOnContainerResize(value, old) {\n      var parent = this.getLayoutParent();\n\n      // Remove prior listener for centering on resize\n      if (this.__centeringResizeId !== null) {\n        parent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // If we are to center on resize, arrange to do so\n      if (value) {\n        if (parent) {\n          this.__centeringResizeId = parent.addListener(\n            \"resize\",\n            this.center,\n            this\n          );\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Stops every event\n     *\n     * @param e {qx.event.type.Event} any event\n     */\n    _onWindowEventStop(e) {\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses the window instance.\n     *\n     * @param e {qx.event.type.Pointer} pointer down event\n     */\n    _onWindowPointerDown(e) {\n      this.setActive(true);\n    },\n\n    /**\n     * Listens to the \"focusout\" event to deactivate the window (if the\n     * currently focused widget is not a child of the window)\n     *\n     * @param e {qx.event.type.Focus} focus event\n     */\n    _onWindowFocusOut(e) {\n      // only needed for non-modal windows\n      if (this.getModal()) {\n        return;\n      }\n\n      // get the current focused widget and check if it is a child\n      var current = e.getRelatedTarget();\n      if (current != null && !qx.ui.core.Widget.contains(this, current)) {\n        this.setActive(false);\n      }\n    },\n\n    /**\n     * Maximizes the window or restores it if it is already\n     * maximized.\n     *\n     * @param e {qx.event.type.Pointer} double tap event\n     */\n    _onCaptionPointerDblTap(e) {\n      if (\n        this.getAllowMaximize() &&\n        (e.getTarget() === this.getChildControl(\"captionbar\") ||\n          e.getTarget() === this.getChildControl(\"title\"))\n      ) {\n        this.isMaximized() ? this.restore() : this.maximize();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS FOR CAPTIONBAR BUTTONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Minimizes the window, removes all states from the minimize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer tap event\n     */\n    _onMinimizeButtonTap(e) {\n      this.minimize();\n      this.getChildControl(\"minimize-button\").reset();\n    },\n\n    /**\n     * Restores the window, removes all states from the restore button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onRestoreButtonTap(e) {\n      this.restore();\n      this.getChildControl(\"restore-button\").reset();\n    },\n\n    /**\n     * Maximizes the window, removes all states from the maximize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onMaximizeButtonTap(e) {\n      this.maximize();\n      this.getChildControl(\"maximize-button\").reset();\n    },\n\n    /**\n     * Closes the window, removes all states from the close button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onCloseButtonTap(e) {\n      this.close();\n      this.getChildControl(\"close-button\").reset();\n    }\n  },\n\n  destruct() {\n    var id;\n    var parent;\n\n    // Remove ourselves from the focus handler\n    qx.ui.core.FocusHandler.getInstance().removeRoot(this);\n\n    // If we haven't been removed from our parent, clean it up too.\n    parent = this.getLayoutParent();\n    if (parent) {\n      // Remove the listener for resize, if there is one\n      id = this.__centeringResizeId;\n      id && parent.removeListenerById(id);\n\n      // Remove ourself from our parent\n      parent.remove(this);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}