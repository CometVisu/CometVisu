{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "MRemoteLayoutHandling",
    "MResizable",
    "MMovable",
    "MContentPadding",
    "construct",
    "caption",
    "icon",
    "_setLayout",
    "layout",
    "VBox",
    "_createChildControl",
    "setIcon",
    "setCaption",
    "_updateCaptionBar",
    "addListener",
    "_onWindowPointerDown",
    "_onWindowFocusOut",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "initVisibility",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "_getResizeFrame",
    "setAppearance",
    "getContentElement",
    "setAttribute",
    "addAriaLabelledBy",
    "getChildControl",
    "addAriaDescribedBy",
    "statics",
    "DEFAULT_MANAGER_CLASS",
    "window",
    "Manager",
    "events",
    "beforeClose",
    "close",
    "beforeMinimize",
    "minimize",
    "beforeMaximize",
    "maximize",
    "beforeRestore",
    "restore",
    "properties",
    "appearance",
    "refine",
    "init",
    "visibility",
    "focusable",
    "active",
    "check",
    "apply",
    "event",
    "alwaysOnTop",
    "modal",
    "nullable",
    "themeable",
    "status",
    "showClose",
    "showMaximize",
    "showMinimize",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "showStatusbar",
    "centerOnAppear",
    "centerOnContainerResize",
    "autoDestroy",
    "members",
    "__restoredTop",
    "__restoredLeft",
    "__centeringAppearId",
    "__centeringResizeId",
    "getChildrenContainer",
    "_forwardStates",
    "maximized",
    "setLayoutParent",
    "parent",
    "oldParent",
    "getLayoutParent",
    "removeListenerById",
    "getCenterOnContainerResize",
    "center",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "Composite",
    "HBox",
    "_add",
    "basic",
    "Label",
    "setValue",
    "getStatus",
    "flex",
    "Grid",
    "setRowFlex",
    "setColumnFlex",
    "_onCaptionPointerDblTap",
    "_activateMoveHandle",
    "Image",
    "getIcon",
    "row",
    "column",
    "getCaption",
    "setWidth",
    "setAllowGrowX",
    "captionBar",
    "form",
    "Button",
    "setFocusable",
    "_onMinimizeButtonTap",
    "_onRestoreButtonTap",
    "_onMaximizeButtonTap",
    "_onCloseButtonTap",
    "btn",
    "setSource",
    "_showChildControl",
    "_excludeChildControl",
    "getShowMinimize",
    "getAllowMinimize",
    "resetEnabled",
    "setEnabled",
    "getShowMaximize",
    "isMaximized",
    "getAllowMaximize",
    "getShowClose",
    "getAllowClose",
    "getAutoDestroy",
    "isVisible",
    "fireNonBubblingEvent",
    "type",
    "Event",
    "hide",
    "fireEvent",
    "dispose",
    "open",
    "show",
    "setActive",
    "focus",
    "bounds",
    "getBounds",
    "hint",
    "getSizeHint",
    "left",
    "Math",
    "round",
    "width",
    "top",
    "height",
    "moveTo",
    "supportsMaximize",
    "props",
    "getLayoutProperties",
    "undefined",
    "setLayoutProperties",
    "edge",
    "addState",
    "removeState",
    "getMode",
    "hasState",
    "_applyActive",
    "value",
    "old",
    "_applyModal",
    "_getContentPaddingTarget",
    "_applyShowStatusbar",
    "resizeFrame",
    "_applyCaptionBarChange",
    "_applyStatus",
    "label",
    "_applyFocusable",
    "Environment",
    "get",
    "_applyCenterOnAppear",
    "_applyCenterOnContainerResize",
    "_onWindowEventStop",
    "e",
    "stopPropagation",
    "getModal",
    "current",
    "getRelatedTarget",
    "contains",
    "getTarget",
    "reset",
    "destruct",
    "removeRoot",
    "remove",
    "Window"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/Window.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A window widget\n *\n * More information can be found in the package description {@link qx.ui.window}.\n *\n * @childControl statusbar {qx.ui.container.Composite} statusbar container which shows the statusbar text\n * @childControl statusbar-text {qx.ui.basic.Label} text of the statusbar\n * @childControl pane {qx.ui.container.Composite} window pane which holds the content\n * @childControl captionbar {qx.ui.container.Composite} Container for all widgets inside the captionbar\n * @childControl icon {qx.ui.basic.Image} icon at the left of the captionbar\n * @childControl title {qx.ui.basic.Label} caption of the window\n * @childControl minimize-button {qx.ui.form.Button} button to minimize the window\n * @childControl restore-button {qx.ui.form.Button} button to restore the window\n * @childControl maximize-button {qx.ui.form.Button} button to maximize the window\n * @childControl close-button {qx.ui.form.Button} button to close the window\n */\nqx.Class.define(\"qx.ui.window.Window\", {\n  extend: qx.ui.core.Widget,\n\n  include: [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling,\n    qx.ui.core.MResizable,\n    qx.ui.core.MMovable,\n    qx.ui.core.MContentPadding\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param caption {String?} The caption text\n   * @param icon {String?} The URL of the caption bar icon\n   */\n  construct(caption, icon) {\n    super();\n\n    // configure internal layout\n    this._setLayout(new qx.ui.layout.VBox());\n\n    // force creation of captionbar\n    this._createChildControl(\"captionbar\");\n    this._createChildControl(\"pane\");\n\n    // apply constructor parameters\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n    if (caption != null) {\n      this.setCaption(caption);\n    }\n\n    // Update captionbar\n    this._updateCaptionBar();\n\n    // Activation listener\n    this.addListener(\"pointerdown\", this._onWindowPointerDown, this, true);\n\n    // Focusout listener\n    this.addListener(\"focusout\", this._onWindowFocusOut, this);\n\n    // Automatically add to application root.\n    qx.core.Init.getApplication().getRoot().add(this);\n\n    // Initialize visibility\n    this.initVisibility();\n\n    // Register as root for the focus handler\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n\n    // Change the resize frames appearance\n    this._getResizeFrame().setAppearance(\"window-resize-frame\");\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"dialog\");\n    this.addAriaLabelledBy(this.getChildControl(\"title\"));\n    this.addAriaDescribedBy(this.getChildControl(\"statusbar-text\"));\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Class} The default window manager class. */\n    DEFAULT_MANAGER_CLASS: qx.ui.window.Manager\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired before the window is closed.\n     *\n     * The close action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeClose: \"qx.event.type.Event\",\n\n    /** Fired if the window is closed */\n    close: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is minimize.\n     *\n     * The minimize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMinimize: \"qx.event.type.Event\",\n\n    /** Fired if the window is minimized */\n    minimize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is maximize.\n     *\n     * The maximize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMaximize: \"qx.event.type.Event\",\n\n    /** Fired if the window is maximized */\n    maximize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is restored from a minimized or maximized state.\n     *\n     * The restored action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeRestore: \"qx.event.type.Event\",\n\n    /** Fired if the window is restored from a minimized or maximized state */\n    restore: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"window\"\n    },\n\n    // overridden\n    visibility: {\n      refine: true,\n      init: \"excluded\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /**\n     * If the window is active, only one window in a single qx.ui.window.Manager could\n     *  have set this to true at the same time.\n     */\n    active: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyActive\",\n      event: \"changeActive\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the window be always on top */\n    alwaysOnTop: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAlwaysOnTop\"\n    },\n\n    /** Should the window be modal (this disables minimize and maximize buttons) */\n    modal: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeModal\",\n      apply: \"_applyModal\"\n    },\n\n    /** The text of the caption */\n    caption: {\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeCaption\",\n      nullable: true\n    },\n\n    /** The icon of the caption */\n    icon: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeIcon\",\n      themeable: true\n    },\n\n    /** The text of the statusbar */\n    status: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyStatus\",\n      event: \"changeStatus\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HIDE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the close button be shown */\n    showClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the maximize button be shown */\n    showMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the minimize button be shown */\n    showMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DISABLE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the user have the ability to close the window */\n    allowClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to maximize the window */\n    allowMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to minimize the window */\n    allowMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUSBAR CONFIG\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the statusbar be shown */\n    showStatusbar: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyShowStatusbar\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WHEN TO AUTOMATICALY CENTER\n    ---------------------------------------------------------------------------\n    */\n\n    /** Whether this window should be automatically centered when it appears */\n    centerOnAppear: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnAppear\"\n    },\n\n    /**\n     * Whether this window should be automatically centered when its container\n     * is resized.\n     */\n    centerOnContainerResize: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnContainerResize\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLOSE BEHAVIOR\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Should the window be automatically destroyed when it is closed.\n     *\n     * When false, closing the window behaves like hiding the window.\n     *\n     * When true, the window is removed from its container (the root), all\n     * listeners are removed, the window's widgets are removed, and the window\n     * is destroyed.\n     *\n     * NOTE: If any widgets that were added to this window require special\n     * clean-up, you should listen on the 'close' event and remove and clean\n     * up those widgets there.\n     */\n    autoDestroy: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {Integer} Original top value before maximation had occurred */\n    __restoredTop: null,\n\n    /** @type {Integer} Original left value before maximation had occurred */\n    __restoredLeft: null,\n\n    /** @type {Integer} Listener ID for centering on appear */\n    __centeringAppearId: null,\n\n    /** @type {Integer} Listener ID for centering on resize */\n    __centeringResizeId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The children container needed by the {@link qx.ui.core.MRemoteChildrenHandling}\n     * mixin\n     *\n     * @return {qx.ui.container.Composite} pane sub widget\n     */\n    getChildrenContainer() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      active: true,\n      maximized: true,\n      showStatusbar: true,\n      modal: true\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      var oldParent;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        parent &&\n          this.assertInterface(\n            parent,\n            qx.ui.window.IDesktop,\n            \"Windows can only be added to widgets, which implement the interface \" +\n              \"qx.ui.window.IDesktop. All root widgets implement this interface.\"\n          );\n      }\n\n      // Before changing the parent, if there's a prior one, remove our resize\n      // listener\n      oldParent = this.getLayoutParent();\n      if (oldParent && this.__centeringResizeId) {\n        oldParent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // Call the superclass\n      super.setLayoutParent(parent);\n\n      // Re-add a listener for resize, if required\n      if (parent && this.getCenterOnContainerResize()) {\n        this.__centeringResizeId = parent.addListener(\n          \"resize\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"statusbar\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n          this._add(control);\n          control.add(this.getChildControl(\"statusbar-text\"));\n          break;\n\n        case \"statusbar-text\":\n          control = new qx.ui.basic.Label();\n          control.setValue(this.getStatus());\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Composite();\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"captionbar\":\n          // captionbar\n          var layout = new qx.ui.layout.Grid();\n          layout.setRowFlex(0, 1);\n          layout.setColumnFlex(1, 1);\n          control = new qx.ui.container.Composite(layout);\n          this._add(control);\n\n          // captionbar events\n          control.addListener(\"dbltap\", this._onCaptionPointerDblTap, this);\n\n          // register as move handle\n          this._activateMoveHandle(control);\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image(this.getIcon());\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 0\n          });\n\n          break;\n\n        case \"title\":\n          control = new qx.ui.basic.Label(this.getCaption());\n          control.setWidth(0);\n          control.setAllowGrowX(true);\n\n          var captionBar = this.getChildControl(\"captionbar\");\n          captionBar.add(control, { row: 0, column: 1 });\n          break;\n\n        case \"minimize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMinimizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 2\n          });\n\n          break;\n\n        case \"restore-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onRestoreButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 3\n          });\n\n          break;\n\n        case \"maximize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMaximizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 4\n          });\n\n          break;\n\n        case \"close-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onCloseButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 6\n          });\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CAPTIONBAR INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Updates the status and the visibility of each element of the captionbar.\n     */\n    _updateCaptionBar() {\n      var btn;\n\n      var icon = this.getIcon();\n      if (icon) {\n        this.getChildControl(\"icon\").setSource(icon);\n        this._showChildControl(\"icon\");\n      } else {\n        this._excludeChildControl(\"icon\");\n      }\n\n      var caption = this.getCaption();\n      if (caption) {\n        this.getChildControl(\"title\").setValue(caption);\n        this._showChildControl(\"title\");\n      } else {\n        this._excludeChildControl(\"title\");\n      }\n\n      if (this.getShowMinimize()) {\n        this._showChildControl(\"minimize-button\");\n\n        btn = this.getChildControl(\"minimize-button\");\n        this.getAllowMinimize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"minimize-button\");\n      }\n\n      if (this.getShowMaximize()) {\n        if (this.isMaximized()) {\n          this._showChildControl(\"restore-button\");\n          this._excludeChildControl(\"maximize-button\");\n        } else {\n          this._showChildControl(\"maximize-button\");\n          this._excludeChildControl(\"restore-button\");\n        }\n\n        btn = this.getChildControl(\"maximize-button\");\n        this.getAllowMaximize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"maximize-button\");\n        this._excludeChildControl(\"restore-button\");\n      }\n\n      if (this.getShowClose()) {\n        this._showChildControl(\"close-button\");\n\n        btn = this.getChildControl(\"close-button\");\n        this.getAllowClose() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"close-button\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Close the current window instance.\n     *\n     * Simply calls the {@link qx.ui.core.Widget#hide} method if the\n     * {@link qx.ui.win.Window#autoDestroy} property is false; otherwise\n     * removes and destroys the window.\n     */\n    close() {\n      if (!this.getAutoDestroy() && !this.isVisible()) {\n        return;\n      }\n\n      if (! this.fireNonBubblingEvent(\n              \"beforeClose\",\n              qx.event.type.Event,\n              [ false, true ])) {\n        // preventDefault() was called\n        return;\n      }\n\n      this.hide();\n      this.fireEvent(\"close\");\n\n      // If automatically destroying the window upon close was requested, do\n      // so now. (Note that we explicitly re-obtain the autoDestroy property\n      // value, allowing the user's close handler to enable/disable it before\n      // here.)\n      if (this.getAutoDestroy()) {\n        this.dispose();\n      }\n    },\n\n    /**\n     * Open the window.\n     */\n    open() {\n      this.show();\n      this.setActive(true);\n      this.focus();\n    },\n\n    /**\n     * Centers the window to the parent.\n     *\n     * This call works with the size of the parent widget and the size of\n     * the window as calculated in the last layout flush. It is best to call\n     * this method just after rendering the window in the \"resize\" event:\n     * <pre class='javascript'>\n     *   win.addListenerOnce(\"resize\", this.center, this);\n     * </pre>\n     */\n    center() {\n      var parent = this.getLayoutParent();\n      if (parent) {\n        var bounds = parent.getBounds();\n        if (bounds) {\n          var hint = this.getSizeHint();\n\n          var left = Math.round((bounds.width - hint.width) / 2);\n          var top = Math.round((bounds.height - hint.height) / 2);\n\n          if (top < 0) {\n            top = 0;\n          }\n\n          this.moveTo(left, top);\n\n          return;\n        }\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.warn(\"Centering depends on parent bounds!\");\n      }\n    },\n\n    /**\n     * Maximize the window.\n     */\n    maximize() {\n      // If the window is already maximized -> return\n      if (this.isMaximized()) {\n        return;\n      }\n\n      // First check if the parent uses a canvas layout\n      // Otherwise maximize() is not possible\n      var parent = this.getLayoutParent();\n      if (parent != null && parent.supportsMaximize()) {\n        if (\n          this.fireNonBubblingEvent(\"beforeMaximize\", qx.event.type.Event, [\n            false,\n            true\n          ])\n        ) {\n          if (!this.isVisible()) {\n            this.open();\n          }\n\n          // store current dimension and location\n          var props = this.getLayoutProperties();\n          this.__restoredLeft = props.left === undefined ? 0 : props.left;\n          this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n          // Update layout properties\n          this.setLayoutProperties({\n            left: null,\n            top: null,\n            edge: 0\n          });\n\n          // Add state\n          this.addState(\"maximized\");\n\n          // Update captionbar\n          this._updateCaptionBar();\n\n          // Fire user event\n          this.fireEvent(\"maximize\");\n        }\n      }\n    },\n\n    /**\n     * Minimized the window.\n     */\n    minimize() {\n      if (!this.isVisible()) {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeMinimize\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        // store current dimension and location\n        var props = this.getLayoutProperties();\n        this.__restoredLeft = props.left === undefined ? 0 : props.left;\n        this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n        this.removeState(\"maximized\");\n        this.hide();\n        this.fireEvent(\"minimize\");\n      }\n    },\n\n    /**\n     * Restore the window to <code>\"normal\"</code>, if it is\n     * <code>\"maximized\"</code> or <code>\"minimized\"</code>.\n     */\n    restore() {\n      if (this.getMode() === \"normal\") {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeRestore\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        if (!this.isVisible()) {\n          this.open();\n        }\n\n        // Restore old properties\n        var left = this.__restoredLeft;\n        var top = this.__restoredTop;\n\n        this.setLayoutProperties({\n          edge: null,\n          left: left,\n          top: top\n        });\n\n        // Remove maximized state\n        this.removeState(\"maximized\");\n\n        // Update captionbar\n        this._updateCaptionBar();\n\n        // Fire user event\n        this.fireEvent(\"restore\");\n      }\n    },\n\n    /**\n     * Set the window's position relative to its parent\n     *\n     * @param left {Integer} The left position\n     * @param top {Integer} The top position\n     */\n    moveTo(left, top) {\n      if (this.isMaximized()) {\n        return;\n      }\n\n      this.setLayoutProperties({\n        left: left,\n        top: top\n      });\n    },\n\n    /**\n     * Return <code>true</code> if the window is in maximized state,\n     * but note that the window in maximized state could also be invisible, this\n     * is equivalent to minimized. So use the {@link qx.ui.window.Window#getMode}\n     * to get the window mode.\n     *\n     * @return {Boolean} <code>true</code> if the window is maximized,\n     *   <code>false</code> otherwise.\n     */\n    isMaximized() {\n      return this.hasState(\"maximized\");\n    },\n\n    /**\n     * Return the window mode as <code>String</code>:\n     * <code>\"maximized\"</code>, <code>\"normal\"</code> or <code>\"minimized\"</code>.\n     *\n     * @return {String} The window mode as <code>String</code> value.\n     */\n    getMode() {\n      if (!this.isVisible()) {\n        return \"minimized\";\n      } else {\n        if (this.isMaximized()) {\n          return \"maximized\";\n        } else {\n          return \"normal\";\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyActive(value, old) {\n      if (old) {\n        this.removeState(\"active\");\n      } else {\n        this.addState(\"active\");\n      }\n    },\n\n    // property apply\n    _applyModal(value, old) {\n      if (old) {\n        this.removeState(\"modal\");\n      } else {\n        this.addState(\"modal\");\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-modal\", value);\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // property apply\n    _applyShowStatusbar(value, old) {\n      // store the state if the status bar is shown\n      var resizeFrame = this._getResizeFrame();\n      if (value) {\n        this.addState(\"showStatusbar\");\n        resizeFrame.addState(\"showStatusbar\");\n      } else {\n        this.removeState(\"showStatusbar\");\n        resizeFrame.removeState(\"showStatusbar\");\n      }\n\n      if (value) {\n        this._showChildControl(\"statusbar\");\n      } else {\n        this._excludeChildControl(\"statusbar\");\n      }\n    },\n\n    // property apply\n    _applyCaptionBarChange(value, old) {\n      this._updateCaptionBar();\n    },\n\n    // property apply\n    _applyStatus(value, old) {\n      var label = this.getChildControl(\"statusbar-text\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // overridden\n    _applyFocusable(value, old) {\n      // Workaround for bug #7581: Don't set the tabIndex\n      // to prevent native scrolling on focus in IE\n      if (qx.core.Environment.get(\"engine.name\") !== \"mshtml\") {\n        super._applyFocusable(value, old);\n      }\n    },\n\n    _applyCenterOnAppear(value, old) {\n      // Remove prior listener for centering on appear\n      if (this.__centeringAppearId !== null) {\n        this.removeListenerById(this.__centeringAppearId);\n        this.__centeringAppearId = null;\n      }\n\n      // If we are to center on appear, arrange to do so\n      if (value) {\n        this.__centeringAppearId = this.addListener(\n          \"appear\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    _applyCenterOnContainerResize(value, old) {\n      var parent = this.getLayoutParent();\n\n      // Remove prior listener for centering on resize\n      if (this.__centeringResizeId !== null) {\n        parent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // If we are to center on resize, arrange to do so\n      if (value) {\n        if (parent) {\n          this.__centeringResizeId = parent.addListener(\n            \"resize\",\n            this.center,\n            this\n          );\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Stops every event\n     *\n     * @param e {qx.event.type.Event} any event\n     */\n    _onWindowEventStop(e) {\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses the window instance.\n     *\n     * @param e {qx.event.type.Pointer} pointer down event\n     */\n    _onWindowPointerDown(e) {\n      this.setActive(true);\n    },\n\n    /**\n     * Listens to the \"focusout\" event to deactivate the window (if the\n     * currently focused widget is not a child of the window)\n     *\n     * @param e {qx.event.type.Focus} focus event\n     */\n    _onWindowFocusOut(e) {\n      // only needed for non-modal windows\n      if (this.getModal()) {\n        return;\n      }\n\n      // get the current focused widget and check if it is a child\n      var current = e.getRelatedTarget();\n      if (current != null && !qx.ui.core.Widget.contains(this, current)) {\n        this.setActive(false);\n      }\n    },\n\n    /**\n     * Maximizes the window or restores it if it is already\n     * maximized.\n     *\n     * @param e {qx.event.type.Pointer} double tap event\n     */\n    _onCaptionPointerDblTap(e) {\n      if (\n        this.getAllowMaximize() &&\n        (e.getTarget() === this.getChildControl(\"captionbar\") ||\n          e.getTarget() === this.getChildControl(\"title\"))\n      ) {\n        this.isMaximized() ? this.restore() : this.maximize();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS FOR CAPTIONBAR BUTTONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Minimizes the window, removes all states from the minimize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer tap event\n     */\n    _onMinimizeButtonTap(e) {\n      this.minimize();\n      this.getChildControl(\"minimize-button\").reset();\n    },\n\n    /**\n     * Restores the window, removes all states from the restore button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onRestoreButtonTap(e) {\n      this.restore();\n      this.getChildControl(\"restore-button\").reset();\n    },\n\n    /**\n     * Maximizes the window, removes all states from the maximize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onMaximizeButtonTap(e) {\n      this.maximize();\n      this.getChildControl(\"maximize-button\").reset();\n    },\n\n    /**\n     * Closes the window, removes all states from the close button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onCloseButtonTap(e) {\n      this.close();\n      this.getChildControl(\"close-button\").reset();\n    }\n  },\n\n  destruct() {\n    var id;\n    var parent;\n\n    // Remove ourselves from the focus handler\n    qx.ui.core.FocusHandler.getInstance().removeRoot(this);\n\n    // If we haven't been removed from our parent, clean it up too.\n    parent = this.getLayoutParent();\n    if (parent) {\n      // Remove the listener for resize, if there is one\n      id = this.__centeringResizeId;\n      id && parent.removeListenerById(id);\n\n      // Remove ourself from our parent\n      parent.remove(this);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}