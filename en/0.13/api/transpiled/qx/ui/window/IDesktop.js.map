{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "setWindowManager",
    "manager",
    "assertInterface",
    "ui",
    "window",
    "IWindowManager",
    "getWindows",
    "supportsMaximize",
    "blockContent",
    "zIndex",
    "assertInteger",
    "unblock",
    "isBlocked",
    "IDesktop"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/IDesktop.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * All parent widgets of windows must implement this interface.\n */\nqx.Interface.define(\"qx.ui.window.IDesktop\", {\n  members: {\n    /**\n     * Sets the desktop's window manager\n     *\n     * @param manager {qx.ui.window.IWindowManager} The window manager\n     */\n    setWindowManager(manager) {\n      this.assertInterface(manager, qx.ui.window.IWindowManager);\n    },\n\n    /**\n     * Get a list of all windows added to the desktop (including hidden windows)\n     *\n     * @return {qx.ui.window.Window[]} Array of managed windows\n     */\n    getWindows() {},\n\n    /**\n     * Whether the configured layout supports a maximized window\n     * e.g. is a Canvas.\n     *\n     * @return {Boolean} Whether the layout supports maximized windows\n     */\n    supportsMaximize() {},\n\n    /**\n     * Block direct child widgets with a zIndex below <code>zIndex</code>\n     *\n     * @param zIndex {Integer} All child widgets with a zIndex below this value\n     *     will be blocked\n     */\n    blockContent(zIndex) {\n      this.assertInteger(zIndex);\n    },\n\n    /**\n     * Remove the blocker.\n     */\n    unblock() {},\n\n    /**\n     * Whether the widget is currently blocked\n     *\n     * @return {Boolean} whether the widget is blocked.\n     */\n    isBlocked() {}\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,uBAAuB,EAAE;IAC3CC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,gBAAgB,WAAAA,iBAACC,OAAO,EAAE;QACxB,IAAI,CAACC,eAAe,CAACD,OAAO,EAAER,EAAE,CAACU,EAAE,CAACC,MAAM,CAACC,cAAc,CAAC;MAC5D,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG,CAAC,CAAC;MAEf;AACJ;AACA;AACA;AACA;AACA;MACIC,gBAAgB,WAAAA,iBAAA,EAAG,CAAC,CAAC;MAErB;AACJ;AACA;AACA;AACA;AACA;MACIC,YAAY,WAAAA,aAACC,MAAM,EAAE;QACnB,IAAI,CAACC,aAAa,CAACD,MAAM,CAAC;MAC5B,CAAC;MAED;AACJ;AACA;MACIE,OAAO,WAAAA,QAAA,EAAG,CAAC,CAAC;MAEZ;AACJ;AACA;AACA;AACA;MACIC,SAAS,WAAAA,UAAA,EAAG,CAAC;IACf;EACF,CAAC,CAAC;EArEFnB,EAAE,CAACU,EAAE,CAACC,MAAM,CAACS,QAAQ,CAACjB,aAAa,GAAGA,aAAa;AAAC"
}