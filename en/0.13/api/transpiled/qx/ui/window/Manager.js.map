{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "window",
    "IWindowManager",
    "members",
    "__desktop",
    "setDesktop",
    "desktop",
    "updateStack",
    "queue",
    "Widget",
    "remove",
    "getDesktop",
    "changeActiveWindow",
    "active",
    "oldActive",
    "bringToFront",
    "setActive",
    "resetActive",
    "_minZIndex",
    "add",
    "syncWidget",
    "isDisposed",
    "forceUnblock",
    "windows",
    "getWindows",
    "zIndex",
    "zIndexOnTop",
    "length",
    "zIndexModal",
    "i",
    "l",
    "win",
    "isVisible",
    "isModal",
    "setZIndex",
    "blockContent",
    "isAlwaysOnTop",
    "isActive",
    "getZIndex",
    "setActiveWindow",
    "removed",
    "lang",
    "Array",
    "push",
    "sendToBack",
    "unshift",
    "destruct",
    "_disposeObjects",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The default window manager implementation\n */\nqx.Class.define(\"qx.ui.window.Manager\", {\n  extend: qx.core.Object,\n  implement: qx.ui.window.IWindowManager,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __desktop: null,\n\n    // interface implementation\n    setDesktop(desktop) {\n      this.__desktop = desktop;\n\n      if (desktop) {\n        this.updateStack();\n      } else {\n        // the window manager should be removed\n        // from the widget queue if the desktop\n        // was set to null\n        qx.ui.core.queue.Widget.remove(this);\n      }\n    },\n\n    /**\n     * Returns the connected desktop\n     *\n     * @return {qx.ui.window.IDesktop} The desktop\n     */\n    getDesktop() {\n      return this.__desktop;\n    },\n\n    // interface implementation\n    changeActiveWindow(active, oldActive) {\n      if (active) {\n        this.bringToFront(active);\n        active.setActive(true);\n      }\n      if (oldActive) {\n        oldActive.resetActive();\n      }\n    },\n\n    /** @type {Integer} Minimum zIndex to start with for windows */\n    _minZIndex: 1e5,\n\n    // interface implementation\n    updateStack() {\n      // we use the widget queue to do the sorting one before the queues are\n      // flushed. The queue will call \"syncWidget\"\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * This method is called during the flush of the\n     * {@link qx.ui.core.queue.Widget widget queue}.\n     */\n    syncWidget() {\n      if (this.isDisposed()){\n        return;\n      }\n      this.__desktop.forceUnblock();\n\n      var windows = this.__desktop.getWindows();\n      // z-index for all three window kinds\n      var zIndex = this._minZIndex;\n      var zIndexOnTop = zIndex + windows.length * 2;\n      var zIndexModal = zIndex + windows.length * 4;\n      // marker if there is an active window\n      var active = null;\n\n      for (var i = 0, l = windows.length; i < l; i++) {\n        var win = windows[i];\n        // ignore invisible windows\n        if (!win.isVisible()) {\n          continue;\n        }\n        // take the first window as active window\n        active = active || win;\n\n        // We use only every second z index to easily insert a blocker between\n        // two windows\n        // Modal Windows stays on top of AlwaysOnTop Windows, which stays on\n        // top of Normal Windows.\n        if (win.isModal()) {\n          win.setZIndex(zIndexModal);\n          this.__desktop.blockContent(zIndexModal - 1);\n          zIndexModal += 2;\n          //just activate it if it's modal\n          active = win;\n        } else if (win.isAlwaysOnTop()) {\n          win.setZIndex(zIndexOnTop);\n          zIndexOnTop += 2;\n        } else {\n          win.setZIndex(zIndex);\n          zIndex += 2;\n        }\n\n        // store the active window\n        if (\n          (!active.isModal() && win.isActive()) ||\n          win.getZIndex() > active.getZIndex()\n        ) {\n          active = win;\n        }\n      }\n\n      //set active window or null otherwise\n      this.__desktop.setActiveWindow(active);\n    },\n\n    // interface implementation\n    bringToFront(win) {\n      var windows = this.__desktop.getWindows();\n\n      var removed = qx.lang.Array.remove(windows, win);\n      if (removed) {\n        windows.push(win);\n        this.updateStack();\n      }\n    },\n\n    // interface implementation\n    sendToBack(win) {\n      var windows = this.__desktop.getWindows();\n\n      var removed = qx.lang.Array.remove(windows, win);\n      if (removed) {\n        windows.unshift(win);\n        this.updateStack();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__desktop\");\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}