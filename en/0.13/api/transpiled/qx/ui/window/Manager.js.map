{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "ui",
    "window",
    "IWindowManager",
    "members",
    "__desktop",
    "setDesktop",
    "desktop",
    "updateStack",
    "queue",
    "Widget",
    "remove",
    "getDesktop",
    "changeActiveWindow",
    "active",
    "oldActive",
    "bringToFront",
    "setActive",
    "resetActive",
    "_minZIndex",
    "add",
    "syncWidget",
    "forceUnblock",
    "windows",
    "getWindows",
    "zIndex",
    "zIndexOnTop",
    "length",
    "zIndexModal",
    "i",
    "l",
    "win",
    "isVisible",
    "isModal",
    "setZIndex",
    "blockContent",
    "isAlwaysOnTop",
    "isActive",
    "getZIndex",
    "setActiveWindow",
    "removed",
    "lang",
    "Array",
    "push",
    "sendToBack",
    "unshift",
    "destruct",
    "_disposeObjects",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The default window manager implementation\r\n */\r\nqx.Class.define(\"qx.ui.window.Manager\", {\r\n  extend: qx.core.Object,\r\n  implement: qx.ui.window.IWindowManager,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __desktop: null,\r\n\r\n    // interface implementation\r\n    setDesktop(desktop) {\r\n      this.__desktop = desktop;\r\n\r\n      if (desktop) {\r\n        this.updateStack();\r\n      } else {\r\n        // the window manager should be removed\r\n        // from the widget queue if the desktop\r\n        // was set to null\r\n        qx.ui.core.queue.Widget.remove(this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the connected desktop\r\n     *\r\n     * @return {qx.ui.window.IDesktop} The desktop\r\n     */\r\n    getDesktop() {\r\n      return this.__desktop;\r\n    },\r\n\r\n    // interface implementation\r\n    changeActiveWindow(active, oldActive) {\r\n      if (active) {\r\n        this.bringToFront(active);\r\n        active.setActive(true);\r\n      }\r\n      if (oldActive) {\r\n        oldActive.resetActive();\r\n      }\r\n    },\r\n\r\n    /** @type {Integer} Minimum zIndex to start with for windows */\r\n    _minZIndex: 1e5,\r\n\r\n    // interface implementation\r\n    updateStack() {\r\n      // we use the widget queue to do the sorting one before the queues are\r\n      // flushed. The queue will call \"syncWidget\"\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    /**\r\n     * This method is called during the flush of the\r\n     * {@link qx.ui.core.queue.Widget widget queue}.\r\n     */\r\n    syncWidget() {\r\n      this.__desktop.forceUnblock();\r\n\r\n      var windows = this.__desktop.getWindows();\r\n      // z-index for all three window kinds\r\n      var zIndex = this._minZIndex;\r\n      var zIndexOnTop = zIndex + windows.length * 2;\r\n      var zIndexModal = zIndex + windows.length * 4;\r\n      // marker if there is an active window\r\n      var active = null;\r\n\r\n      for (var i = 0, l = windows.length; i < l; i++) {\r\n        var win = windows[i];\r\n        // ignore invisible windows\r\n        if (!win.isVisible()) {\r\n          continue;\r\n        }\r\n        // take the first window as active window\r\n        active = active || win;\r\n\r\n        // We use only every second z index to easily insert a blocker between\r\n        // two windows\r\n        // Modal Windows stays on top of AlwaysOnTop Windows, which stays on\r\n        // top of Normal Windows.\r\n        if (win.isModal()) {\r\n          win.setZIndex(zIndexModal);\r\n          this.__desktop.blockContent(zIndexModal - 1);\r\n          zIndexModal += 2;\r\n          //just activate it if it's modal\r\n          active = win;\r\n        } else if (win.isAlwaysOnTop()) {\r\n          win.setZIndex(zIndexOnTop);\r\n          zIndexOnTop += 2;\r\n        } else {\r\n          win.setZIndex(zIndex);\r\n          zIndex += 2;\r\n        }\r\n\r\n        // store the active window\r\n        if (\r\n          (!active.isModal() && win.isActive()) ||\r\n          win.getZIndex() > active.getZIndex()\r\n        ) {\r\n          active = win;\r\n        }\r\n      }\r\n\r\n      //set active window or null otherwise\r\n      this.__desktop.setActiveWindow(active);\r\n    },\r\n\r\n    // interface implementation\r\n    bringToFront(win) {\r\n      var windows = this.__desktop.getWindows();\r\n\r\n      var removed = qx.lang.Array.remove(windows, win);\r\n      if (removed) {\r\n        windows.push(win);\r\n        this.updateStack();\r\n      }\r\n    },\r\n\r\n    // interface implementation\r\n    sendToBack(win) {\r\n      var windows = this.__desktop.getWindows();\r\n\r\n      var removed = qx.lang.Array.remove(windows, win);\r\n      if (removed) {\r\n        windows.unshift(win);\r\n        this.updateStack();\r\n      }\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this._disposeObjects(\"__desktop\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}