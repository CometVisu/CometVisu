{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "setDesktop",
    "desktop",
    "assertInterface",
    "ui",
    "window",
    "IDesktop",
    "changeActiveWindow",
    "active",
    "oldActive",
    "updateStack",
    "bringToFront",
    "win",
    "assertInstance",
    "Window",
    "sendToBack",
    "IWindowManager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/IWindowManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Required interface for all window manager.\n *\n * Window manager handle the z-order and modality blocking of windows managed\n * by the connected desktop {@link qx.ui.window.IDesktop}.\n */\nqx.Interface.define(\"qx.ui.window.IWindowManager\", {\n  members: {\n    /**\n     * Connect the window manager to the window desktop\n     *\n     * @param desktop {qx.ui.window.IDesktop|null} The connected desktop or null\n     */\n    setDesktop(desktop) {\n      if (desktop !== null) {\n        this.assertInterface(desktop, qx.ui.window.IDesktop);\n      }\n    },\n\n    /**\n     * Inform the window manager about a new active window\n     *\n     * @param active {qx.ui.window.Window} new active window\n     * @param oldActive {qx.ui.window.Window} old active window\n     */\n    changeActiveWindow(active, oldActive) {},\n\n    /**\n     * Update the window order and modality blocker\n     */\n    updateStack() {},\n\n    /**\n     * Ask the manager to bring a window to the front.\n     *\n     * @param win {qx.ui.window.Window} window to bring to front\n     */\n    bringToFront(win) {\n      this.assertInstance(win, qx.ui.window.Window);\n    },\n\n    /**\n     * Ask the manager to send a window to the back.\n     *\n     * @param win {qx.ui.window.Window} window to sent to back\n     */\n    sendToBack(win) {\n      this.assertInstance(win, qx.ui.window.Window);\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,6BAApB,EAAmD;IACjDC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;MACIC,UANO,sBAMIC,OANJ,EAMa;QAClB,IAAIA,OAAO,KAAK,IAAhB,EAAsB;UACpB,KAAKC,eAAL,CAAqBD,OAArB,EAA8BR,EAAE,CAACU,EAAH,CAAMC,MAAN,CAAaC,QAA3C;QACD;MACF,CAVM;;MAYP;AACJ;AACA;AACA;AACA;AACA;MACIC,kBAlBO,8BAkBYC,MAlBZ,EAkBoBC,SAlBpB,EAkB+B,CAAE,CAlBjC;;MAoBP;AACJ;AACA;MACIC,WAvBO,yBAuBO,CAAE,CAvBT;;MAyBP;AACJ;AACA;AACA;AACA;MACIC,YA9BO,wBA8BMC,GA9BN,EA8BW;QAChB,KAAKC,cAAL,CAAoBD,GAApB,EAAyBlB,EAAE,CAACU,EAAH,CAAMC,MAAN,CAAaS,MAAtC;MACD,CAhCM;;MAkCP;AACJ;AACA;AACA;AACA;MACIC,UAvCO,sBAuCIH,GAvCJ,EAuCS;QACd,KAAKC,cAAL,CAAoBD,GAApB,EAAyBlB,EAAE,CAACU,EAAH,CAAMC,MAAN,CAAaS,MAAtC;MACD;IAzCM;EADwC,CAAnD;EAxBApB,EAAE,CAACU,EAAH,CAAMC,MAAN,CAAaW,cAAb,CAA4BnB,aAA5B,GAA4CA,aAA5C"
}