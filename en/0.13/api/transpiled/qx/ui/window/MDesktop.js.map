{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "activeWindow",
    "check",
    "apply",
    "event",
    "init",
    "nullable",
    "events",
    "windowAdded",
    "windowRemoved",
    "members",
    "__windows",
    "__manager",
    "getWindowManager",
    "setWindowManager",
    "ui",
    "window",
    "Window",
    "DEFAULT_MANAGER_CLASS",
    "supportsMaximize",
    "manager",
    "setDesktop",
    "_onChangeActive",
    "e",
    "getData",
    "setActiveWindow",
    "getTarget",
    "getActiveWindow",
    "_applyActiveWindow",
    "value",
    "old",
    "changeActiveWindow",
    "updateStack",
    "_onChangeModal",
    "_onChangeVisibility",
    "_afterAddChild",
    "win",
    "Class",
    "isDefined",
    "_addWindow",
    "getWindows",
    "includes",
    "push",
    "fireDataEvent",
    "addListener",
    "getActive",
    "_afterRemoveChild",
    "_removeWindow",
    "lang",
    "Array",
    "remove",
    "removeListener",
    "destruct",
    "_disposeArray",
    "_disposeObjects",
    "MDesktop"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/window/MDesktop.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin implements the key methods of the {@link qx.ui.window.IDesktop}.\n *\n * @ignore(qx.ui.window.Window)\n * @ignore(qx.ui.window.Window.*)\n */\nqx.Mixin.define(\"qx.ui.window.MDesktop\", {\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The currently active window\n     */\n    activeWindow: {\n      check: \"qx.ui.window.Window\",\n      apply: \"_applyActiveWindow\",\n      event: \"changeActiveWindow\",\n      init: null,\n      nullable: true\n    }\n  },\n\n  events: {\n    /**\n     * Fired when a window was added.\n     */\n    windowAdded: \"qx.event.type.Data\",\n\n    /**\n     * Fired when a window was removed.\n     */\n    windowRemoved: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __windows: null,\n    __manager: null,\n\n    /**\n     * Get the desktop's window manager. Each desktop must have a window manager.\n     * If none is configured the default window manager {@link qx.ui.window.Window#DEFAULT_MANAGER_CLASS}\n     * is used.\n     *\n     * @return {qx.ui.window.IWindowManager} The desktop's window manager\n     */\n    getWindowManager() {\n      if (!this.__manager) {\n        this.setWindowManager(new qx.ui.window.Window.DEFAULT_MANAGER_CLASS());\n      }\n      return this.__manager;\n    },\n\n    /**\n     * Whether the configured layout supports a maximized window\n     * e.g. is a Canvas.\n     *\n     * @return {Boolean} Whether the layout supports maximized windows\n     */\n    supportsMaximize() {\n      return true;\n    },\n\n    /**\n     * Sets the desktop's window manager\n     *\n     * @param manager {qx.ui.window.IWindowManager} The window manager\n     */\n    setWindowManager(manager) {\n      if (this.__manager) {\n        this.__manager.setDesktop(null);\n      }\n\n      manager.setDesktop(this);\n      this.__manager = manager;\n    },\n\n    /**\n     * Event handler. Called if one of the managed windows changes its active\n     * state.\n     *\n     * @param e {qx.event.type.Event} the event object.\n     */\n    _onChangeActive(e) {\n      if (e.getData()) {\n        this.setActiveWindow(e.getTarget());\n      } else if (this.getActiveWindow() == e.getTarget()) {\n        this.setActiveWindow(null);\n      }\n    },\n\n    // property apply\n    _applyActiveWindow(value, old) {\n      this.getWindowManager().changeActiveWindow(value, old);\n      this.getWindowManager().updateStack();\n    },\n\n    /**\n     * Event handler. Called if one of the managed windows changes its modality\n     *\n     * @param e {qx.event.type.Event} the event object.\n     */\n    _onChangeModal(e) {\n      this.getWindowManager().updateStack();\n    },\n\n    /**\n     * Event handler. Called if one of the managed windows changes its visibility\n     * state.\n     */\n    _onChangeVisibility() {\n      this.getWindowManager().updateStack();\n    },\n\n    /**\n     * Overrides the method {@link qx.ui.core.Widget#_afterAddChild}\n     *\n     * @param win {qx.ui.core.Widget} added widget\n     */\n    _afterAddChild(win) {\n      if (\n        qx.Class.isDefined(\"qx.ui.window.Window\") &&\n        win instanceof qx.ui.window.Window\n      ) {\n        this._addWindow(win);\n      }\n    },\n\n    /**\n     * Handles the case, when a window is added to the desktop.\n     *\n     * @param win {qx.ui.window.Window} Window, which has been added\n     */\n    _addWindow(win) {\n      if (!this.getWindows().includes(win)) {\n        this.getWindows().push(win);\n\n        this.fireDataEvent(\"windowAdded\", win);\n\n        win.addListener(\"changeActive\", this._onChangeActive, this);\n        win.addListener(\"changeModal\", this._onChangeModal, this);\n        win.addListener(\"changeVisibility\", this._onChangeVisibility, this);\n      }\n\n      if (win.getActive()) {\n        this.setActiveWindow(win);\n      }\n\n      this.getWindowManager().updateStack();\n    },\n\n    /**\n     * Overrides the method {@link qx.ui.core.Widget#_afterRemoveChild}\n     *\n     * @param win {qx.ui.core.Widget} removed widget\n     */\n    _afterRemoveChild(win) {\n      if (\n        qx.Class.isDefined(\"qx.ui.window.Window\") &&\n        win instanceof qx.ui.window.Window\n      ) {\n        this._removeWindow(win);\n      }\n    },\n\n    /**\n     * Handles the case, when a window is removed from the desktop.\n     *\n     * @param win {qx.ui.window.Window} Window, which has been removed\n     */\n    _removeWindow(win) {\n      if (this.getWindows().includes(win)) {\n        qx.lang.Array.remove(this.getWindows(), win);\n\n        this.fireDataEvent(\"windowRemoved\", win);\n\n        win.removeListener(\"changeActive\", this._onChangeActive, this);\n        win.removeListener(\"changeModal\", this._onChangeModal, this);\n        win.removeListener(\"changeVisibility\", this._onChangeVisibility, this);\n\n        this.getWindowManager().updateStack();\n      }\n    },\n\n    /**\n     * Get a list of all windows added to the desktop (including hidden windows)\n     *\n     * @return {qx.ui.window.Window[]} Array of managed windows\n     */\n    getWindows() {\n      if (!this.__windows) {\n        this.__windows = [];\n      }\n      return this.__windows;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeArray(\"__windows\");\n    this._disposeObjects(\"__manager\");\n  }\n});\n"
  ],
  "mappings": "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"
}