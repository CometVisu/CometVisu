{
  "className": "qx.ui.window.MDesktop",
  "packageName": "qx.ui.window",
  "name": "MDesktop",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 633
      },
      "end": {
        "line": 235,
        "column": 3,
        "index": 6106
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This mixin implements the key methods of the {@link qx.ui.window.IDesktop}.</p>"
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.ui.window.Window"
        },
        {
          "name": "@ignore",
          "body": "qx.ui.window.Window.*"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "activeWindow": {
      "location": {
        "start": {
          "line": 36,
          "column": 4,
          "index": 934
        },
        "end": {
          "line": 42,
          "column": 5,
          "index": 1100
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The currently active window</p>"
          }
        ]
      },
      "name": "activeWindow",
      "propertyType": "new",
      "event": "changeActiveWindow",
      "apply": "_applyActiveWindow",
      "nullable": true,
      "allowNull": true,
      "check": "qx.ui.window.Window"
    }
  },
  "events": {
    "windowAdded": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1177
        },
        "end": {
          "line": 49,
          "column": 37,
          "index": 1210
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a window was added.</p>"
          }
        ]
      },
      "name": "windowAdded",
      "type": "qx.event.type.Data"
    },
    "windowRemoved": {
      "location": {
        "start": {
          "line": 54,
          "column": 4,
          "index": 1273
        },
        "end": {
          "line": 54,
          "column": 39,
          "index": 1308
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a window was removed.</p>"
          }
        ]
      },
      "name": "windowRemoved",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "__windows": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1516
        },
        "end": {
          "line": 64,
          "column": 19,
          "index": 1531
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__manager": {
      "location": {
        "start": {
          "line": 65,
          "column": 4,
          "index": 1537
        },
        "end": {
          "line": 65,
          "column": 19,
          "index": 1552
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getWindowManager": {
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 1860
        },
        "end": {
          "line": 79,
          "column": 5,
          "index": 2032
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the desktop's window manager. Each desktop must have a window manager.\n If none is configured the default window manager {@link qx.ui.window.Window#DEFAULT<em>MANAGER</em>CLASS}\n is used.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.window.IWindowManager} The desktop's window manager",
            "type": "qx.ui.window.IWindowManager",
            "description": " The desktop's window manager"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "supportsMaximize": {
      "location": {
        "start": {
          "line": 87,
          "column": 4,
          "index": 2223
        },
        "end": {
          "line": 89,
          "column": 5,
          "index": 2268
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the configured layout supports a maximized window\n e.g. is a Canvas.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the layout supports maximized windows",
            "type": "Boolean",
            "description": " Whether the layout supports maximized windows"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setWindowManager": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2410
        },
        "end": {
          "line": 103,
          "column": 5,
          "index": 2585
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the desktop's window manager</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "manager {qx.ui.window.IWindowManager} The window manager",
            "paramName": "manager",
            "description": " The window manager",
            "type": "qx.ui.window.IWindowManager"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onChangeActive": {
      "location": {
        "start": {
          "line": 111,
          "column": 4,
          "index": 2763
        },
        "end": {
          "line": 117,
          "column": 5,
          "index": 2963
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called if one of the managed windows changes its active\n state.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object.",
            "paramName": "e",
            "description": " the event object.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyActiveWindow": {
      "location": {
        "start": {
          "line": 120,
          "column": 4,
          "index": 2992
        },
        "end": {
          "line": 123,
          "column": 5,
          "index": 3137
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "activeWindow"
      ]
    },
    "_onChangeModal": {
      "location": {
        "start": {
          "line": 130,
          "column": 4,
          "index": 3303
        },
        "end": {
          "line": 132,
          "column": 5,
          "index": 3373
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called if one of the managed windows changes its modality</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} the event object.",
            "paramName": "e",
            "description": " the event object.",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeVisibility": {
      "location": {
        "start": {
          "line": 138,
          "column": 4,
          "index": 3492
        },
        "end": {
          "line": 140,
          "column": 5,
          "index": 3566
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler. Called if one of the managed windows changes its visibility\n state.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_afterAddChild": {
      "location": {
        "start": {
          "line": 147,
          "column": 4,
          "index": 3716
        },
        "end": {
          "line": 154,
          "column": 5,
          "index": 3898
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Overrides the method {@link qx.ui.core.Widget#_afterAddChild}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.core.Widget} added widget",
            "paramName": "win",
            "description": " added widget",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_addWindow": {
      "location": {
        "start": {
          "line": 161,
          "column": 4,
          "index": 4061
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 4557
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the case, when a window is added to the desktop.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.window.Window} Window, which has been added",
            "paramName": "win",
            "description": " Window, which has been added",
            "type": "qx.ui.window.Window"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_afterRemoveChild": {
      "location": {
        "start": {
          "line": 184,
          "column": 4,
          "index": 4712
        },
        "end": {
          "line": 191,
          "column": 5,
          "index": 4900
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Overrides the method {@link qx.ui.core.Widget#_afterRemoveChild}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.core.Widget} removed widget",
            "paramName": "win",
            "description": " removed widget",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_removeWindow": {
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 5069
        },
        "end": {
          "line": 210,
          "column": 5,
          "index": 5524
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the case, when a window is removed from the desktop.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "win {qx.ui.window.Window} Window, which has been removed",
            "paramName": "win",
            "description": " Window, which has been removed",
            "type": "qx.ui.window.Window"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getWindows": {
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 5699
        },
        "end": {
          "line": 222,
          "column": 5,
          "index": 5814
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get a list of all windows added to the desktop (including hidden windows)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.window.Window[]} Array of managed windows",
            "type": "qx.ui.window.Window[]",
            "description": " Array of managed windows"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getActiveWindow": {
      "type": "function",
      "name": "getActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>activeWindow</code>.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.window.Window",
            "desc": "Returns the value for activeWindow"
          }
        ]
      }
    },
    "setActiveWindow": {
      "type": "function",
      "name": "setActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>activeWindow</code>.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.window.Window",
            "paramName": "value",
            "desc": "Value for activeWindow"
          }
        ]
      }
    },
    "resetActiveWindow": {
      "type": "function",
      "name": "resetActiveWindow",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>activeWindow</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #activeWindow}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 231,
        "column": 2,
        "index": 6010
      },
      "end": {
        "line": 234,
        "column": 3,
        "index": 6102
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}