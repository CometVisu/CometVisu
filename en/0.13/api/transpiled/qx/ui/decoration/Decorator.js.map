{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "decoration",
    "Abstract",
    "implement",
    "IDecorator",
    "include",
    "MBackgroundColor",
    "MBorderRadius",
    "MBoxShadow",
    "MDoubleBorder",
    "MLinearBackgroundGradient",
    "MBorderImage",
    "MTransition",
    "members",
    "__initialized",
    "getPadding",
    "insets",
    "getInset",
    "slices",
    "_getDefaultInsetsForBorderImage",
    "borderTop",
    "top",
    "getWidthTop",
    "borderRight",
    "right",
    "getWidthRight",
    "borderBottom",
    "bottom",
    "getWidthBottom",
    "borderLeft",
    "left",
    "getWidthLeft",
    "getInnerWidthTop",
    "getInnerWidthRight",
    "getInnerWidthBottom",
    "getInnerWidthLeft",
    "getStyles",
    "css",
    "_getStyles",
    "jsStyles",
    "cssStyles",
    "property",
    "lang",
    "String",
    "camelCase",
    "styles",
    "name",
    "indexOf",
    "Function",
    "Type",
    "isArray",
    "join",
    "_getDefaultInsets",
    "directions",
    "defaultInsets",
    "currentInsets",
    "i",
    "length",
    "direction",
    "undefined",
    "_isInitialized",
    "_getExtendedPropertyValueArrays",
    "propertyNames",
    "propertyValues",
    "map",
    "propName",
    "value",
    "get",
    "items",
    "Math",
    "max",
    "apply",
    "prop",
    "__extendArray",
    "__P_334_1",
    "array",
    "to",
    "initial",
    "push",
    "Decorator"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/Decorator.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n     * Daniel Wagner (danielwagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Decorator including all decoration possibilities from mixins:\r\n *\r\n * <ul>\r\n * <li>Background color</li>\r\n * <li>Background image</li>\r\n * <li>Background gradient</li>\r\n * <li>Single and double borders</li>\r\n * <li>Border radius</li>\r\n * <li>Box shadow</li>\r\n * </ul>\r\n */\r\nqx.Class.define(\"qx.ui.decoration.Decorator\", {\r\n  extend: qx.ui.decoration.Abstract,\r\n\r\n  implement: [qx.ui.decoration.IDecorator],\r\n\r\n  include: [\r\n    qx.ui.decoration.MBackgroundColor,\r\n    qx.ui.decoration.MBorderRadius,\r\n    qx.ui.decoration.MBoxShadow,\r\n    qx.ui.decoration.MDoubleBorder,\r\n    qx.ui.decoration.MLinearBackgroundGradient,\r\n    qx.ui.decoration.MBorderImage,\r\n    qx.ui.decoration.MTransition\r\n  ],\r\n\r\n  members: {\r\n    __initialized: false,\r\n\r\n    /**\r\n     * Returns the configured padding minus the border width.\r\n     * @return {Map} Map of top, right, bottom and left padding values\r\n     */\r\n    getPadding() {\r\n      var insets = this.getInset();\r\n      var slices = this._getDefaultInsetsForBorderImage();\r\n\r\n      var borderTop =\r\n        insets.top - (slices.top ? slices.top : this.getWidthTop());\r\n      var borderRight =\r\n        insets.right - (slices.right ? slices.right : this.getWidthRight());\r\n      var borderBottom =\r\n        insets.bottom - (slices.bottom ? slices.bottom : this.getWidthBottom());\r\n      var borderLeft =\r\n        insets.left - (slices.left ? slices.left : this.getWidthLeft());\r\n\r\n      return {\r\n        top: insets.top ? borderTop : this.getInnerWidthTop(),\r\n        right: insets.right ? borderRight : this.getInnerWidthRight(),\r\n        bottom: insets.bottom ? borderBottom : this.getInnerWidthBottom(),\r\n        left: insets.left ? borderLeft : this.getInnerWidthLeft()\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Returns the styles of the decorator as a map with property names written\r\n     * in javascript style (e.g. <code>fontWeight</code> instead of <code>font-weight</code>).\r\n     *\r\n     * @param css {Boolean?} <code>true</code> if hyphenated CSS names should be returned.\r\n     * @return {Map} style information\r\n     */\r\n    getStyles(css) {\r\n      if (css) {\r\n        return this._getStyles();\r\n      }\r\n\r\n      var jsStyles = {};\r\n      var cssStyles = this._getStyles();\r\n\r\n      for (var property in cssStyles) {\r\n        jsStyles[qx.lang.String.camelCase(property)] = cssStyles[property];\r\n      }\r\n\r\n      return jsStyles;\r\n    },\r\n\r\n    /**\r\n     * Collects all the style information from the decorators.\r\n     *\r\n     * @return {Map} style information\r\n     */\r\n    _getStyles() {\r\n      var styles = {};\r\n\r\n      for (var name in this) {\r\n        if (name.indexOf(\"_style\") == 0 && this[name] instanceof Function) {\r\n          this[name](styles);\r\n        }\r\n      }\r\n      for (var name in styles) {\r\n        if (qx.lang.Type.isArray(styles[name])) {\r\n          styles[name] = styles[name].join(\", \");\r\n        }\r\n      }\r\n\r\n      this.__initialized = true;\r\n      return styles;\r\n    },\r\n\r\n    // overridden\r\n    _getDefaultInsets() {\r\n      var directions = [\"top\", \"right\", \"bottom\", \"left\"];\r\n      var defaultInsets = {};\r\n\r\n      for (var name in this) {\r\n        if (\r\n          name.indexOf(\"_getDefaultInsetsFor\") == 0 &&\r\n          this[name] instanceof Function\r\n        ) {\r\n          var currentInsets = this[name]();\r\n\r\n          for (var i = 0; i < directions.length; i++) {\r\n            var direction = directions[i];\r\n            // initialize with the first insets found\r\n            if (defaultInsets[direction] == undefined) {\r\n              defaultInsets[direction] = currentInsets[direction];\r\n            }\r\n            // take the largest inset\r\n            if (currentInsets[direction] > defaultInsets[direction]) {\r\n              defaultInsets[direction] = currentInsets[direction];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // check if the mixins have created a default insets\r\n      if (defaultInsets[\"top\"] != undefined) {\r\n        return defaultInsets;\r\n      }\r\n      // return a fallback which is 0 for all insets\r\n      return { top: 0, right: 0, bottom: 0, left: 0 };\r\n    },\r\n\r\n    // overridden\r\n    _isInitialized() {\r\n      return this.__initialized;\r\n    },\r\n\r\n    /**\r\n     * Ensures that every propertyValue specified in propertyNames is an array.\r\n     * The value arrays are extended and repeated to match in length.\r\n     * @param propertyNames {Array} Array containing the propertyNames.\r\n     * @return {Array} Array containing the extended value arrays.\r\n     */\r\n    _getExtendedPropertyValueArrays(propertyNames) {\r\n      // transform non-array values to an array containing that value\r\n      var propertyValues = propertyNames.map(function (propName) {\r\n        var value = this.get(propName);\r\n        if (!qx.lang.Type.isArray(value)) {\r\n          value = [value];\r\n        }\r\n        return value;\r\n      }, this);\r\n\r\n      // Because it's possible to set multiple values for a property there's\r\n      // a chance that not all properties have the same number of values set.\r\n      // Extend the value arrays by repeating existing values until all\r\n      // arrays match in length.\r\n      var items = Math.max.apply(\r\n        Math,\r\n        propertyValues.map(function (prop) {\r\n          return prop.length;\r\n        })\r\n      );\r\n\r\n      for (var i = 0; i < propertyValues.length; i++) {\r\n        this.__extendArray(propertyValues[i], items);\r\n      }\r\n\r\n      return propertyValues;\r\n    },\r\n\r\n    /**\r\n     * Extends an array up to the given length by repeating the elements already present.\r\n     * @param array {Array} Incoming array. Has to contain at least one element.\r\n     * @param to {Integer} Desired length. Must be greater than or equal to the the length of arr.\r\n     */\r\n    __extendArray(array, to) {\r\n      var initial = array.length;\r\n      while (array.length < to) {\r\n        array.push(array[array.length % initial]);\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,4BAA4B,EAAE;IAC5CC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,UAAU,CAACC,QAAQ;IAEjCC,SAAS,EAAE,CAACV,EAAE,CAACO,EAAE,CAACC,UAAU,CAACG,UAAU,CAAC;IAExCC,OAAO,EAAE,CACPZ,EAAE,CAACO,EAAE,CAACC,UAAU,CAACK,gBAAgB,EACjCb,EAAE,CAACO,EAAE,CAACC,UAAU,CAACM,aAAa,EAC9Bd,EAAE,CAACO,EAAE,CAACC,UAAU,CAACO,UAAU,EAC3Bf,EAAE,CAACO,EAAE,CAACC,UAAU,CAACQ,aAAa,EAC9BhB,EAAE,CAACO,EAAE,CAACC,UAAU,CAACS,yBAAyB,EAC1CjB,EAAE,CAACO,EAAE,CAACC,UAAU,CAACU,YAAY,EAC7BlB,EAAE,CAACO,EAAE,CAACC,UAAU,CAACW,WAAW,CAC7B;IAEDC,OAAO,EAAE;MACPC,SAAa,EAAE,KAAK;MAEpB;AACJ;AACA;AACA;MACIC,UAAU,WAAAA,WAAA,EAAG;QACX,IAAIC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;QAC5B,IAAIC,MAAM,GAAG,IAAI,CAACC,+BAA+B,CAAC,CAAC;QAEnD,IAAIC,SAAS,GACXJ,MAAM,CAACK,GAAG,IAAIH,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACG,GAAG,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;QAC7D,IAAIC,WAAW,GACbP,MAAM,CAACQ,KAAK,IAAIN,MAAM,CAACM,KAAK,GAAGN,MAAM,CAACM,KAAK,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;QACrE,IAAIC,YAAY,GACdV,MAAM,CAACW,MAAM,IAAIT,MAAM,CAACS,MAAM,GAAGT,MAAM,CAACS,MAAM,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;QACzE,IAAIC,UAAU,GACZb,MAAM,CAACc,IAAI,IAAIZ,MAAM,CAACY,IAAI,GAAGZ,MAAM,CAACY,IAAI,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;QAEjE,OAAO;UACLV,GAAG,EAAEL,MAAM,CAACK,GAAG,GAAGD,SAAS,GAAG,IAAI,CAACY,gBAAgB,CAAC,CAAC;UACrDR,KAAK,EAAER,MAAM,CAACQ,KAAK,GAAGD,WAAW,GAAG,IAAI,CAACU,kBAAkB,CAAC,CAAC;UAC7DN,MAAM,EAAEX,MAAM,CAACW,MAAM,GAAGD,YAAY,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;UACjEJ,IAAI,EAAEd,MAAM,CAACc,IAAI,GAAGD,UAAU,GAAG,IAAI,CAACM,iBAAiB,CAAC;QAC1D,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,SAAS,WAAAA,UAACC,GAAG,EAAE;QACb,IAAIA,GAAG,EAAE;UACP,OAAO,IAAI,CAACC,UAAU,CAAC,CAAC;QAC1B;QAEA,IAAIC,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAIC,SAAS,GAAG,IAAI,CAACF,UAAU,CAAC,CAAC;QAEjC,KAAK,IAAIG,QAAQ,IAAID,SAAS,EAAE;UAC9BD,QAAQ,CAAC9C,EAAE,CAACiD,IAAI,CAACC,MAAM,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC,GAAGD,SAAS,CAACC,QAAQ,CAAC;QACpE;QAEA,OAAOF,QAAQ;MACjB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACID,UAAU,WAAAA,WAAA,EAAG;QACX,IAAIO,MAAM,GAAG,CAAC,CAAC;QAEf,KAAK,IAAIC,IAAI,IAAI,IAAI,EAAE;UACrB,IAAIA,IAAI,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAACD,IAAI,CAAC,YAAYE,QAAQ,EAAE;YACjE,IAAI,CAACF,IAAI,CAAC,CAACD,MAAM,CAAC;UACpB;QACF;QACA,KAAK,IAAIC,IAAI,IAAID,MAAM,EAAE;UACvB,IAAIpD,EAAE,CAACiD,IAAI,CAACO,IAAI,CAACC,OAAO,CAACL,MAAM,CAACC,IAAI,CAAC,CAAC,EAAE;YACtCD,MAAM,CAACC,IAAI,CAAC,GAAGD,MAAM,CAACC,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC;UACxC;QACF;QAEA,IAAI,CAACrC,SAAa,GAAG,IAAI;QACzB,OAAO+B,MAAM;MACf,CAAC;MAED;MACAO,iBAAiB,WAAAA,kBAAA,EAAG;QAClB,IAAIC,UAAU,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;QACnD,IAAIC,aAAa,GAAG,CAAC,CAAC;QAEtB,KAAK,IAAIR,IAAI,IAAI,IAAI,EAAE;UACrB,IACEA,IAAI,CAACC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,IACzC,IAAI,CAACD,IAAI,CAAC,YAAYE,QAAQ,EAC9B;YACA,IAAIO,aAAa,GAAG,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC;YAEhC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;cAC1C,IAAIE,SAAS,GAAGL,UAAU,CAACG,CAAC,CAAC;cAC7B;cACA,IAAIF,aAAa,CAACI,SAAS,CAAC,IAAIC,SAAS,EAAE;gBACzCL,aAAa,CAACI,SAAS,CAAC,GAAGH,aAAa,CAACG,SAAS,CAAC;cACrD;cACA;cACA,IAAIH,aAAa,CAACG,SAAS,CAAC,GAAGJ,aAAa,CAACI,SAAS,CAAC,EAAE;gBACvDJ,aAAa,CAACI,SAAS,CAAC,GAAGH,aAAa,CAACG,SAAS,CAAC;cACrD;YACF;UACF;QACF;;QAEA;QACA,IAAIJ,aAAa,CAAC,KAAK,CAAC,IAAIK,SAAS,EAAE;UACrC,OAAOL,aAAa;QACtB;QACA;QACA,OAAO;UAAEjC,GAAG,EAAE,CAAC;UAAEG,KAAK,EAAE,CAAC;UAAEG,MAAM,EAAE,CAAC;UAAEG,IAAI,EAAE;QAAE,CAAC;MACjD,CAAC;MAED;MACA8B,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAAC9C,SAAa;MAC3B,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACI+C,+BAA+B,WAAAA,gCAACC,aAAa,EAAE;QAC7C;QACA,IAAIC,cAAc,GAAGD,aAAa,CAACE,GAAG,CAAC,UAAUC,QAAQ,EAAE;UACzD,IAAIC,KAAK,GAAG,IAAI,CAACC,GAAG,CAACF,QAAQ,CAAC;UAC9B,IAAI,CAACxE,EAAE,CAACiD,IAAI,CAACO,IAAI,CAACC,OAAO,CAACgB,KAAK,CAAC,EAAE;YAChCA,KAAK,GAAG,CAACA,KAAK,CAAC;UACjB;UACA,OAAOA,KAAK;QACd,CAAC,EAAE,IAAI,CAAC;;QAER;QACA;QACA;QACA;QACA,IAAIE,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACC,KAAK,CACxBF,IAAI,EACJN,cAAc,CAACC,GAAG,CAAC,UAAUQ,IAAI,EAAE;UACjC,OAAOA,IAAI,CAACf,MAAM;QACpB,CAAC,CACH,CAAC;QAED,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,cAAc,CAACN,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAI,CAACiB,SAAa,CAACV,cAAc,CAACP,CAAC,CAAC,EAAEY,KAAK,CAAC;QAC9C;QAEA,OAAOL,cAAc;MACvB,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIU,SAAa,WAAAC,UAACC,KAAK,EAAEC,EAAE,EAAE;QACvB,IAAIC,OAAO,GAAGF,KAAK,CAAClB,MAAM;QAC1B,OAAOkB,KAAK,CAAClB,MAAM,GAAGmB,EAAE,EAAE;UACxBD,KAAK,CAACG,IAAI,CAACH,KAAK,CAACA,KAAK,CAAClB,MAAM,GAAGoB,OAAO,CAAC,CAAC;QAC3C;MACF;IACF;EACF,CAAC,CAAC;EA5MFpF,EAAE,CAACO,EAAE,CAACC,UAAU,CAAC8E,SAAS,CAACnF,aAAa,GAAGA,aAAa;AAAC"
}