{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "borderImage",
    "check",
    "nullable",
    "apply",
    "sliceTop",
    "init",
    "sliceRight",
    "sliceBottom",
    "sliceLeft",
    "slice",
    "group",
    "mode",
    "repeatX",
    "repeatY",
    "repeat",
    "fill",
    "borderImageMode",
    "members",
    "_styleBorderImage",
    "styles",
    "getBorderImage",
    "resolvedImage",
    "util",
    "AliasManager",
    "getInstance",
    "resolve",
    "source",
    "ResourceManager",
    "toUri",
    "computedSlices",
    "_getDefaultInsetsForBorderImage",
    "top",
    "right",
    "bottom",
    "left",
    "getRepeatX",
    "getRepeatY",
    "join",
    "getFill",
    "core",
    "Environment",
    "get",
    "styleName",
    "bom",
    "Style",
    "getPropertyName",
    "cssName",
    "getCssName",
    "__getSlices",
    "getSliceTop",
    "getSliceRight",
    "getSliceBottom",
    "getSliceLeft",
    "_applyBorderImage",
    "baseImage",
    "getBorderImageMode",
    "topSlice",
    "rightSlice",
    "bottomSlice",
    "leftSlice",
    "split",
    "exec",
    "prefix",
    "ext",
    "getImageHeight",
    "getImageWidth",
    "ui",
    "decoration",
    "MBorderImage"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MBorderImage.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Decorator which uses the CSS3 border image properties.\n */\nqx.Mixin.define(\"qx.ui.decoration.MBorderImage\", {\n  properties: {\n    /**\n     * Base image URL.\n     */\n    borderImage: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * The top slice line of the base image. The slice properties divide the\n     * image into nine regions, which define the corner, edge and the center\n     * images.\n     */\n    sliceTop: {\n      check: \"Integer\",\n      nullable: true,\n      init: null,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * The right slice line of the base image. The slice properties divide the\n     * image into nine regions, which define the corner, edge and the center\n     * images.\n     */\n    sliceRight: {\n      check: \"Integer\",\n      nullable: true,\n      init: null,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * The bottom slice line of the base image. The slice properties divide the\n     * image into nine regions, which define the corner, edge and the center\n     * images.\n     */\n    sliceBottom: {\n      check: \"Integer\",\n      nullable: true,\n      init: null,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * The left slice line of the base image. The slice properties divide the\n     * image into nine regions, which define the corner, edge and the center\n     * images.\n     */\n    sliceLeft: {\n      check: \"Integer\",\n      nullable: true,\n      init: null,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * The slice properties divide the image into nine regions, which define the\n     * corner, edge and the center images.\n     */\n    slice: {\n      group: [\"sliceTop\", \"sliceRight\", \"sliceBottom\", \"sliceLeft\"],\n      mode: \"shorthand\"\n    },\n\n    /**\n     * This property specifies how the images for the sides and the middle part\n     * of the border image are scaled and tiled horizontally.\n     *\n     * Values have the following meanings:\n     * <ul>\n     *   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n     *   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n     *   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n     *    fill the area with a whole number of tiles, the image is rescaled so\n     *    that it does.</li>\n     * </ul>\n     */\n    repeatX: {\n      check: [\"stretch\", \"repeat\", \"round\"],\n      init: \"stretch\",\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * This property specifies how the images for the sides and the middle part\n     * of the border image are scaled and tiled vertically.\n     *\n     * Values have the following meanings:\n     * <ul>\n     *   <li><strong>stretch</strong>: The image is stretched to fill the area.</li>\n     *   <li><strong>repeat</strong>: The image is tiled (repeated) to fill the area.</li>\n     *   <li><strong>round</strong>: The image is tiled (repeated) to fill the area. If it does not\n     *    fill the area with a whole number of tiles, the image is rescaled so\n     *    that it does.</li>\n     * </ul>\n     */\n    repeatY: {\n      check: [\"stretch\", \"repeat\", \"round\"],\n      init: \"stretch\",\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * This property specifies how the images for the sides and the middle part\n     * of the border image are scaled and tiled.\n     */\n    repeat: {\n      group: [\"repeatX\", \"repeatY\"],\n      mode: \"shorthand\"\n    },\n\n    /**\n     * If set to <code>false</code>, the center image will be omitted and only\n     * the border will be drawn.\n     */\n    fill: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyBorderImage\"\n    },\n\n    /**\n     * Configures the border image mode. Supported values:\n     * <ul>\n     *   <li>horizontal: left and right border images</li>\n     *   <li>vertical: top and bottom border images</li>\n     *   <li>grid: border images for all edges</li>\n     * </ul>\n     */\n    borderImageMode: {\n      check: [\"horizontal\", \"vertical\", \"grid\"],\n      init: \"grid\"\n    }\n  },\n\n  members: {\n    /**\n     * Adds the border-image styles to the given map\n     * @param styles {Map} CSS style map\n     */\n    _styleBorderImage(styles) {\n      if (!this.getBorderImage()) {\n        return;\n      }\n      var resolvedImage = qx.util.AliasManager.getInstance().resolve(\n        this.getBorderImage()\n      );\n\n      var source = qx.util.ResourceManager.getInstance().toUri(resolvedImage);\n\n      var computedSlices = this._getDefaultInsetsForBorderImage();\n\n      var slice = [\n        computedSlices.top,\n        computedSlices.right,\n        computedSlices.bottom,\n        computedSlices.left\n      ];\n\n      var repeat = [this.getRepeatX(), this.getRepeatY()].join(\" \");\n\n      var fill =\n        this.getFill() &&\n        qx.core.Environment.get(\"css.borderimage.standardsyntax\")\n          ? \" fill\"\n          : \"\";\n\n      var styleName = qx.bom.Style.getPropertyName(\"borderImage\");\n      if (styleName) {\n        var cssName = qx.bom.Style.getCssName(styleName);\n        styles[cssName] =\n          'url(\"' + source + '\") ' + slice.join(\" \") + fill + \" \" + repeat;\n      }\n      // Apply border styles even if we couldn't determine the borderImage property name\n      // (e.g. because the browser doesn't support it). This is needed to keep\n      // the layout intact.\n      styles[\"border-style\"] = \"solid\";\n      styles[\"border-color\"] = \"transparent\";\n      styles[\"border-width\"] = slice.join(\"px \") + \"px\";\n    },\n\n    /**\n     * Computes the inset values based on the border image slices (defined in the\n     * decoration theme or computed from the fallback image sizes).\n     *\n     * @return {Map} Map with the top, right, bottom and left insets\n     */\n    _getDefaultInsetsForBorderImage() {\n      if (!this.getBorderImage()) {\n        return {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        };\n      }\n\n      var resolvedImage = qx.util.AliasManager.getInstance().resolve(\n        this.getBorderImage()\n      );\n\n      var computedSlices = this.__getSlices(resolvedImage);\n\n      return {\n        top: this.getSliceTop() || computedSlices[0],\n        right: this.getSliceRight() || computedSlices[1],\n        bottom: this.getSliceBottom() || computedSlices[2],\n        left: this.getSliceLeft() || computedSlices[3]\n      };\n    },\n\n    _applyBorderImage() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this._isInitialized()) {\n          throw new Error(\n            \"This decorator is already in-use. Modification is not possible anymore!\"\n          );\n        }\n      }\n    },\n\n    /**\n     * Gets the slice sizes from the fallback border images.\n     *\n     * @param baseImage {String} Resource Id of the base border image\n     * @return {Integer[]} Array with the top, right, bottom and left slice widths\n     */\n    __getSlices(baseImage) {\n      var mode = this.getBorderImageMode();\n      var topSlice = 0;\n      var rightSlice = 0;\n      var bottomSlice = 0;\n      var leftSlice = 0;\n\n      var split = /(.*)(\\.[a-z]+)$/.exec(baseImage);\n      var prefix = split[1];\n      var ext = split[2];\n\n      var ResourceManager = qx.util.ResourceManager.getInstance();\n\n      if (mode == \"grid\" || mode == \"vertical\") {\n        topSlice = ResourceManager.getImageHeight(prefix + \"-t\" + ext);\n        bottomSlice = ResourceManager.getImageHeight(prefix + \"-b\" + ext);\n      }\n\n      if (mode == \"grid\" || mode == \"horizontal\") {\n        rightSlice = ResourceManager.getImageWidth(prefix + \"-r\" + ext);\n        leftSlice = ResourceManager.getImageWidth(prefix + \"-l\" + ext);\n      }\n\n      return [topSlice, rightSlice, bottomSlice, leftSlice];\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}