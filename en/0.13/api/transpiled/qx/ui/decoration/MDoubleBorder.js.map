{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "include",
    "ui",
    "decoration",
    "MSingleBorder",
    "MBackgroundImage",
    "construct",
    "_getDefaultInsetsForBorder",
    "__getDefaultInsetsForDoubleBorder",
    "_styleBorder",
    "__styleDoubleBorder",
    "properties",
    "innerWidthTop",
    "check",
    "init",
    "apply",
    "innerWidthRight",
    "innerWidthBottom",
    "innerWidthLeft",
    "innerWidth",
    "group",
    "mode",
    "innerColorTop",
    "nullable",
    "innerColorRight",
    "innerColorBottom",
    "innerColorLeft",
    "innerColor",
    "innerOpacity",
    "members",
    "__P_344_1",
    "styles",
    "propName",
    "core",
    "Environment",
    "get",
    "color",
    "Color",
    "theme",
    "manager",
    "getInstance",
    "top",
    "resolve",
    "getColorTop",
    "right",
    "getColorRight",
    "bottom",
    "getColorBottom",
    "left",
    "getColorLeft",
    "getInnerColorTop",
    "getInnerColorRight",
    "getInnerColorBottom",
    "getInnerColorLeft",
    "getInnerWidthTop",
    "getInnerWidthRight",
    "getInnerWidthBottom",
    "getInnerWidthLeft",
    "width",
    "getWidthTop",
    "getStyleTop",
    "getWidthRight",
    "getStyleRight",
    "getWidthBottom",
    "getStyleBottom",
    "getWidthLeft",
    "getStyleLeft",
    "getInnerOpacity",
    "__processInnerOpacity",
    "borderTop",
    "borderRight",
    "borderBottom",
    "borderLeft",
    "height",
    "position",
    "content",
    "boxSizingKey",
    "bom",
    "Style",
    "getCssName",
    "borderRadiusKey",
    "shadowStyle",
    "push",
    "length",
    "join",
    "border",
    "__P_344_2",
    "edge",
    "rgb",
    "util",
    "ColorUtil",
    "stringToRgb",
    "rgbString",
    "rgbToRgbString",
    "_applyDoubleBorder",
    "__P_344_0",
    "MDoubleBorder"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MDoubleBorder.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (martinwittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * Border implementation with two CSS borders. Both borders can be styled\r\n * independent of each other.\r\n * This mixin is usually used by {@link qx.ui.decoration.Decorator}.\r\n */\r\nqx.Mixin.define(\"qx.ui.decoration.MDoubleBorder\", {\r\n  include: [qx.ui.decoration.MSingleBorder, qx.ui.decoration.MBackgroundImage],\r\n\r\n  construct() {\r\n    // override the methods of single border and background image\r\n    this._getDefaultInsetsForBorder = this.__getDefaultInsetsForDoubleBorder;\r\n    this._styleBorder = this.__styleDoubleBorder;\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY: INNER WIDTH\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** top width of border */\r\n    innerWidthTop: {\r\n      check: \"Number\",\r\n      init: 0,\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** right width of border */\r\n    innerWidthRight: {\r\n      check: \"Number\",\r\n      init: 0,\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** bottom width of border */\r\n    innerWidthBottom: {\r\n      check: \"Number\",\r\n      init: 0,\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** left width of border */\r\n    innerWidthLeft: {\r\n      check: \"Number\",\r\n      init: 0,\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** Property group to set the inner border width of all sides */\r\n    innerWidth: {\r\n      group: [\r\n        \"innerWidthTop\",\r\n        \"innerWidthRight\",\r\n        \"innerWidthBottom\",\r\n        \"innerWidthLeft\"\r\n      ],\r\n\r\n      mode: \"shorthand\"\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY: INNER COLOR\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** top inner color of border */\r\n    innerColorTop: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** right inner color of border */\r\n    innerColorRight: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** bottom inner color of border */\r\n    innerColorBottom: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /** left inner color of border */\r\n    innerColorLeft: {\r\n      nullable: true,\r\n      check: \"Color\",\r\n      apply: \"_applyDoubleBorder\"\r\n    },\r\n\r\n    /**\r\n     * Property group for the inner color properties.\r\n     */\r\n    innerColor: {\r\n      group: [\r\n        \"innerColorTop\",\r\n        \"innerColorRight\",\r\n        \"innerColorBottom\",\r\n        \"innerColorLeft\"\r\n      ],\r\n\r\n      mode: \"shorthand\"\r\n    },\r\n\r\n    /**\r\n     * The opacity of the inner border.\r\n     */\r\n    innerOpacity: {\r\n      check: \"Number\",\r\n      init: 1,\r\n      apply: \"_applyDoubleBorder\"\r\n    }\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Takes a styles map and adds the outer border styles in place\r\n     * to the given map. This is the needed behavior for\r\n     * {@link qx.ui.decoration.Decorator}.\r\n     *\r\n     * @param styles {Map} A map to add the styles.\r\n     */\r\n    __styleDoubleBorder(styles) {\r\n      var propName = qx.core.Environment.get(\"css.boxshadow\");\r\n\r\n      var color, innerColor, innerWidth;\r\n      if (qx.core.Environment.get(\"qx.theme\")) {\r\n        var Color = qx.theme.manager.Color.getInstance();\r\n\r\n        color = {\r\n          top: Color.resolve(this.getColorTop()),\r\n          right: Color.resolve(this.getColorRight()),\r\n          bottom: Color.resolve(this.getColorBottom()),\r\n          left: Color.resolve(this.getColorLeft())\r\n        };\r\n\r\n        innerColor = {\r\n          top: Color.resolve(this.getInnerColorTop()),\r\n          right: Color.resolve(this.getInnerColorRight()),\r\n          bottom: Color.resolve(this.getInnerColorBottom()),\r\n          left: Color.resolve(this.getInnerColorLeft())\r\n        };\r\n      } else {\r\n        color = {\r\n          top: this.getColorTop(),\r\n          right: this.getColorRight(),\r\n          bottom: this.getColorBottom(),\r\n          left: this.getColorLeft()\r\n        };\r\n\r\n        innerColor = {\r\n          top: this.getInnerColorTop(),\r\n          right: this.getInnerColorRight(),\r\n          bottom: this.getInnerColorBottom(),\r\n          left: this.getInnerColorLeft()\r\n        };\r\n      }\r\n\r\n      innerWidth = {\r\n        top: this.getInnerWidthTop(),\r\n        right: this.getInnerWidthRight(),\r\n        bottom: this.getInnerWidthBottom(),\r\n        left: this.getInnerWidthLeft()\r\n      };\r\n\r\n      // Add outer borders\r\n      var width = this.getWidthTop();\r\n      if (width > 0) {\r\n        styles[\"border-top\"] =\r\n          width + \"px \" + this.getStyleTop() + \" \" + color.top;\r\n      }\r\n\r\n      width = this.getWidthRight();\r\n      if (width > 0) {\r\n        styles[\"border-right\"] =\r\n          width + \"px \" + this.getStyleRight() + \" \" + color.right;\r\n      }\r\n\r\n      width = this.getWidthBottom();\r\n      if (width > 0) {\r\n        styles[\"border-bottom\"] =\r\n          width + \"px \" + this.getStyleBottom() + \" \" + color.bottom;\r\n      }\r\n\r\n      width = this.getWidthLeft();\r\n      if (width > 0) {\r\n        styles[\"border-left\"] =\r\n          width + \"px \" + this.getStyleLeft() + \" \" + color.left;\r\n      }\r\n\r\n      var innerOpacity = this.getInnerOpacity();\r\n\r\n      if (innerOpacity < 1) {\r\n        this.__processInnerOpacity(innerColor, innerOpacity);\r\n      }\r\n\r\n      // inner border\r\n      if (\r\n        innerWidth.top > 0 ||\r\n        innerWidth.right > 0 ||\r\n        innerWidth.bottom > 0 ||\r\n        innerWidth.left > 0\r\n      ) {\r\n        var borderTop = (innerWidth.top || 0) + \"px solid \" + innerColor.top;\r\n        var borderRight =\r\n          (innerWidth.right || 0) + \"px solid \" + innerColor.right;\r\n        var borderBottom =\r\n          (innerWidth.bottom || 0) + \"px solid \" + innerColor.bottom;\r\n        var borderLeft = (innerWidth.left || 0) + \"px solid \" + innerColor.left;\r\n\r\n        styles[\":before\"] = {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          position: \"absolute\",\r\n          content: '\"\"',\r\n          \"border-top\": borderTop,\r\n          \"border-right\": borderRight,\r\n          \"border-bottom\": borderBottom,\r\n          \"border-left\": borderLeft,\r\n          left: 0,\r\n          top: 0\r\n        };\r\n\r\n        var boxSizingKey = qx.bom.Style.getCssName(\r\n          qx.core.Environment.get(\"css.boxsizing\")\r\n        );\r\n\r\n        styles[\":before\"][boxSizingKey] = \"border-box\";\r\n\r\n        // make sure to apply the border radius as well\r\n        var borderRadiusKey = qx.core.Environment.get(\"css.borderradius\");\r\n        if (borderRadiusKey) {\r\n          borderRadiusKey = qx.bom.Style.getCssName(borderRadiusKey);\r\n          styles[\":before\"][borderRadiusKey] = \"inherit\";\r\n        }\r\n\r\n        // Add inner borders as shadows\r\n        var shadowStyle = [];\r\n\r\n        if (\r\n          innerColor.top &&\r\n          innerWidth.top &&\r\n          innerColor.top == innerColor.bottom &&\r\n          innerColor.top == innerColor.right &&\r\n          innerColor.top == innerColor.left &&\r\n          innerWidth.top == innerWidth.bottom &&\r\n          innerWidth.top == innerWidth.right &&\r\n          innerWidth.top == innerWidth.left\r\n        ) {\r\n          shadowStyle.push(\r\n            \"inset 0 0 0 \" + innerWidth.top + \"px \" + innerColor.top\r\n          );\r\n        } else {\r\n          if (innerColor.top) {\r\n            shadowStyle.push(\r\n              \"inset 0 \" + (innerWidth.top || 0) + \"px \" + innerColor.top\r\n            );\r\n          }\r\n          if (innerColor.right) {\r\n            shadowStyle.push(\r\n              \"inset -\" + (innerWidth.right || 0) + \"px 0 \" + innerColor.right\r\n            );\r\n          }\r\n          if (innerColor.bottom) {\r\n            shadowStyle.push(\r\n              \"inset 0 -\" + (innerWidth.bottom || 0) + \"px \" + innerColor.bottom\r\n            );\r\n          }\r\n          if (innerColor.left) {\r\n            shadowStyle.push(\r\n              \"inset \" + (innerWidth.left || 0) + \"px 0 \" + innerColor.left\r\n            );\r\n          }\r\n        }\r\n\r\n        // apply or append the box shadow styles\r\n        if (shadowStyle.length > 0 && propName) {\r\n          propName = qx.bom.Style.getCssName(propName);\r\n          if (!styles[propName]) {\r\n            styles[propName] = shadowStyle.join(\",\");\r\n          } else {\r\n            styles[propName] += \",\" + shadowStyle.join(\",\");\r\n          }\r\n        }\r\n      } else {\r\n        styles[\":before\"] = {\r\n          border: 0\r\n        };\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Converts the inner border's colors to rgba.\r\n     *\r\n     * @param innerColor {Map} map of top, right, bottom and left colors\r\n     * @param innerOpacity {Number} alpha value\r\n     */\r\n    __processInnerOpacity(innerColor, innerOpacity) {\r\n      if (!qx.core.Environment.get(\"css.rgba\")) {\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          qx.log.Logger.warn(\r\n            \"innerOpacity is configured but the browser doesn't support RGBA colors.\"\r\n          );\r\n        }\r\n        return;\r\n      }\r\n\r\n      for (var edge in innerColor) {\r\n        var rgb = qx.util.ColorUtil.stringToRgb(innerColor[edge]);\r\n        rgb.push(innerOpacity);\r\n        var rgbString = qx.util.ColorUtil.rgbToRgbString(rgb);\r\n        innerColor[edge] = rgbString;\r\n      }\r\n    },\r\n\r\n    _applyDoubleBorder() {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        if (this._isInitialized()) {\r\n          throw new Error(\r\n            \"This decorator is already in-use. Modification is not possible anymore!\"\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Implementation of the interface for the double border.\r\n     *\r\n     * @return {Map} A map containing the default insets.\r\n     *   (top, right, bottom, left)\r\n     */\r\n    __getDefaultInsetsForDoubleBorder() {\r\n      return {\r\n        top: this.getWidthTop() + this.getInnerWidthTop(),\r\n        right: this.getWidthRight() + this.getInnerWidthRight(),\r\n        bottom: this.getWidthBottom() + this.getInnerWidthBottom(),\r\n        left: this.getWidthLeft() + this.getInnerWidthLeft()\r\n      };\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}