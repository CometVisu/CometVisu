{
  "className": "qx.ui.decoration.Abstract",
  "packageName": "qx.ui.decoration",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.decoration.IDecorator"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 808
      },
      "end": {
        "line": 85,
        "column": 3,
        "index": 2170
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This class acts as abstract class for all decorators. It offers the\n properties for the insets handling. Each decorator has to define its own\n default insets by implementing the template method\n (http://en.wikipedia.org/wiki/Template_Method) <code>_getDefaultInsets</code></p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "__insets": {
      "location": {
        "start": {
          "line": 31,
          "column": 4,
          "index": 963
        },
        "end": {
          "line": 31,
          "column": 18,
          "index": 977
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getDefaultInsets": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1304
        },
        "end": {
          "line": 48,
          "column": 5,
          "index": 1381
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Abstract method. Should return a map containing the default insets of\n the decorator. This could look like this:\n </p>\n<pre>\n return {\n   top : 0,\n   right : 0,\n   bottom : 0,\n   left : 0\n };\n </pre>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map containing the insets.",
            "type": "Map",
            "description": " Map containing the insets."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isInitialized": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1578
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1652
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Abstract method. Should return an boolean value if the decorator is\n already initialized or not.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the decorator is initialized.",
            "type": "Boolean",
            "description": " True, if the decorator is initialized."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_resetInsets": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1701
        },
        "end": {
          "line": 64,
          "column": 5,
          "index": 1751
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the insets.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getInsets": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1790
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 1924
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "appearsIn": [
        "qx.ui.decoration.IDecorator"
      ]
    },
    "getStyles": {
      "type": "function",
      "name": "getStyles",
      "abstract": true,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the decorator's styles.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of decoration styles",
            "type": "Map",
            "description": " Map of decoration styles"
          }
        ]
      }
    },
    "getPadding": {
      "type": "function",
      "name": "getPadding",
      "abstract": true,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the configured padding minus the border width.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of top, right, bottom and left padding values",
            "type": "Map",
            "description": " Map of top, right, bottom and left padding values"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 82,
        "column": 2,
        "index": 2124
      },
      "end": {
        "line": 84,
        "column": 3,
        "index": 2166
      }
    },
    "jsdoc": {}
  },
  "abstract": true,
  "descendants": [
    "qx.ui.decoration.Decorator"
  ]
}