{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "properties",
    "gap",
    "check",
    "init",
    "apply",
    "iconPosition",
    "center",
    "members",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "item",
    "name",
    "value",
    "assert",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "left",
    "top",
    "Util",
    "getIconPosition",
    "children",
    "_getLayoutChildren",
    "length",
    "width",
    "height",
    "child",
    "hint",
    "getGap",
    "getCenter",
    "allowedPositions",
    "indexOf",
    "start",
    "end",
    "increment",
    "allocatedHeight",
    "i",
    "getSizeHint",
    "Math",
    "round",
    "childTop",
    "min",
    "maxWidth",
    "max",
    "minWidth",
    "computeHorizontalAlignOffset",
    "remainingWidth",
    "shrinkTarget",
    "count",
    "basic",
    "Label",
    "gapSum",
    "shrinkTargetWidth",
    "maxHeight",
    "minHeight",
    "align",
    "computeVerticalAlignOffset",
    "_computeSizeHint",
    "result",
    "Atom"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Atom.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A atom layout. Used to place an image and label in relation\n * to each other. Useful to create buttons, list items, etc.\n *\n * *Features*\n *\n * * Gap between icon and text (using {@link #gap})\n * * Vertical and horizontal mode (using {@link #iconPosition})\n * * Sorting options to place first child on top/left or bottom/right (using {@link #iconPosition})\n * * Automatically middles/centers content to the available space\n * * Auto-sizing\n * * Supports more than two children (will be processed the same way like the previous ones)\n *\n * *Item Properties*\n *\n * None\n *\n * *Notes*\n *\n * * Does not support margins and alignment of {@link qx.ui.core.LayoutItem}.\n *\n * *Alternative Names*\n *\n * None\n */\nqx.Class.define(\"qx.ui.layout.Atom\", {\n  extend: qx.ui.layout.Abstract,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The gap between the icon and the text */\n    gap: {\n      check: \"Integer\",\n      init: 4,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** The position of the icon in relation to the text */\n    iconPosition: {\n      check: [\n        \"left\",\n        \"top\",\n        \"right\",\n        \"bottom\",\n        \"top-left\",\n        \"bottom-left\",\n        \"top-right\",\n        \"bottom-right\"\n      ],\n\n      init: \"left\",\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Whether the content should be rendered centrally when to much space\n     * is available. Enabling this property centers in both axis. The behavior\n     * when disabled of the centering depends on the {@link #iconPosition} property.\n     * If the icon position is <code>left</code> or <code>right</code>, the X axis\n     * is not centered, only the Y axis. If the icon position is <code>top</code>\n     * or <code>bottom</code>, the Y axis is not centered. In case of e.g. an\n     * icon position of <code>top-left</code> no axis is centered.\n     */\n    center: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyLayoutChange\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        this.assert(\n          false,\n          \"The property '\" + name + \"' is not supported by the Atom layout!\"\n        );\n      },\n\n      false: null\n    }),\n\n    // overridden\n    renderLayout(availWidth, availHeight, padding) {\n      var left = padding.left;\n      var top = padding.top;\n      var Util = qx.ui.layout.Util;\n\n      var iconPosition = this.getIconPosition();\n      var children = this._getLayoutChildren();\n      var length = children.length;\n\n      var width, height;\n      var child, hint;\n      var gap = this.getGap();\n      var center = this.getCenter();\n\n      // reverse ordering\n      var allowedPositions = [\"bottom\", \"right\", \"top-right\", \"bottom-right\"];\n      if (allowedPositions.indexOf(iconPosition) != -1) {\n        var start = length - 1;\n        var end = -1;\n        var increment = -1;\n      } else {\n        var start = 0;\n        var end = length;\n        var increment = 1;\n      }\n\n      // vertical\n      if (iconPosition == \"top\" || iconPosition == \"bottom\") {\n        if (center) {\n          var allocatedHeight = 0;\n          for (var i = start; i != end; i += increment) {\n            height = children[i].getSizeHint().height;\n\n            if (height > 0) {\n              allocatedHeight += height;\n\n              if (i != start) {\n                allocatedHeight += gap;\n              }\n            }\n          }\n\n          top += Math.round((availHeight - allocatedHeight) / 2);\n        }\n\n        var childTop = top;\n        for (var i = start; i != end; i += increment) {\n          child = children[i];\n\n          hint = child.getSizeHint();\n          width = Math.min(hint.maxWidth, Math.max(availWidth, hint.minWidth));\n          height = hint.height;\n\n          left =\n            Util.computeHorizontalAlignOffset(\"center\", width, availWidth) +\n            padding.left;\n          child.renderLayout(left, childTop, width, height);\n\n          // Ignore pseudo invisible elements\n          if (height > 0) {\n            childTop = top + height + gap;\n          }\n        }\n      }\n\n      // horizontal\n      // in this way it also supports shrinking of the first label\n      else {\n        var remainingWidth = availWidth;\n        var shrinkTarget = null;\n\n        var count = 0;\n        for (var i = start; i != end; i += increment) {\n          child = children[i];\n          width = child.getSizeHint().width;\n\n          if (width > 0) {\n            if (!shrinkTarget && child instanceof qx.ui.basic.Label) {\n              shrinkTarget = child;\n            } else {\n              remainingWidth -= width;\n            }\n\n            count++;\n          }\n        }\n\n        if (count > 1) {\n          var gapSum = (count - 1) * gap;\n          remainingWidth -= gapSum;\n        }\n\n        if (shrinkTarget) {\n          var hint = shrinkTarget.getSizeHint();\n          var shrinkTargetWidth = Math.max(\n            hint.minWidth,\n            Math.min(remainingWidth, hint.maxWidth)\n          );\n\n          remainingWidth -= shrinkTargetWidth;\n        }\n\n        if (center && remainingWidth > 0) {\n          left += Math.round(remainingWidth / 2);\n        }\n\n        for (var i = start; i != end; i += increment) {\n          child = children[i];\n\n          hint = child.getSizeHint();\n          height = Math.min(\n            hint.maxHeight,\n            Math.max(availHeight, hint.minHeight)\n          );\n\n          if (child === shrinkTarget) {\n            width = shrinkTargetWidth;\n          } else {\n            width = hint.width;\n          }\n\n          var align = \"middle\";\n          if (iconPosition == \"top-left\" || iconPosition == \"top-right\") {\n            align = \"top\";\n          } else if (\n            iconPosition == \"bottom-left\" ||\n            iconPosition == \"bottom-right\"\n          ) {\n            align = \"bottom\";\n          }\n          var childTop =\n            top +\n            Util.computeVerticalAlignOffset(align, hint.height, availHeight);\n          child.renderLayout(left, childTop, width, height);\n\n          // Ignore pseudo invisible childs for gap e.g.\n          // empty text or unavailable images\n          if (width > 0) {\n            left += width + gap;\n          }\n        }\n      }\n    },\n\n    // overridden\n    _computeSizeHint() {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var hint, result;\n\n      // Fast path for only one child\n      if (length === 1) {\n        var hint = children[0].getSizeHint();\n\n        // Work on a copy, but do not respect max\n        // values as a Atom can be rendered bigger\n        // than its content.\n        result = {\n          width: hint.width,\n          height: hint.height,\n          minWidth: hint.minWidth,\n          minHeight: hint.minHeight\n        };\n      } else {\n        var minWidth = 0,\n          width = 0;\n        var minHeight = 0,\n          height = 0;\n\n        var iconPosition = this.getIconPosition();\n        var gap = this.getGap();\n\n        if (iconPosition === \"top\" || iconPosition === \"bottom\") {\n          var count = 0;\n          for (var i = 0; i < length; i++) {\n            hint = children[i].getSizeHint();\n\n            // Max of widths\n            width = Math.max(width, hint.width);\n            minWidth = Math.max(minWidth, hint.minWidth);\n\n            // Sum of heights\n            if (hint.height > 0) {\n              height += hint.height;\n              minHeight += hint.minHeight;\n              count++;\n            }\n          }\n\n          if (count > 1) {\n            var gapSum = (count - 1) * gap;\n            height += gapSum;\n            minHeight += gapSum;\n          }\n        } else {\n          var count = 0;\n          for (var i = 0; i < length; i++) {\n            hint = children[i].getSizeHint();\n\n            // Max of heights\n            height = Math.max(height, hint.height);\n            minHeight = Math.max(minHeight, hint.minHeight);\n\n            // Sum of widths\n            if (hint.width > 0) {\n              width += hint.width;\n              minWidth += hint.minWidth;\n              count++;\n            }\n          }\n\n          if (count > 1) {\n            var gapSum = (count - 1) * gap;\n            width += gapSum;\n            minWidth += gapSum;\n          }\n        }\n\n        // Build hint\n        result = {\n          minWidth: minWidth,\n          width: width,\n          minHeight: minHeight,\n          height: height\n        };\n      }\n\n      return result;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,QAAQ;IAE7B;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;MACAC,GAAG,EAAE;QACHC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE;MACT,CAAC;MAED;MACAC,YAAY,EAAE;QACZH,KAAK,EAAE,CACL,MAAM,EACN,KAAK,EACL,OAAO,EACP,QAAQ,EACR,UAAU,EACV,aAAa,EACb,WAAW,EACX,cAAc,CACf;QAEDC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIE,MAAM,EAAE;QACNJ,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE;MACT;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEG,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;;MAEI;MACAC,oBAAoB,EAAElB,EAAE,CAACmB,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,UAAU,EAAE;QAAA,uBACtDC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAE;UACtB,IAAI,CAACC,MAAM,CACT,KAAK,EACL,gBAAgB,GAAGF,IAAI,GAAG,wCAAwC,CACnE;QACH,CAAC;QAED,SAAO;MACT,CAAC,CAAC;MAEF;MACAG,YAAY,wBAACC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAE;QAC7C,I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"
}