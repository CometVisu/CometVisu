{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacing",
    "alignY",
    "separator",
    "setSpacing",
    "setAlignY",
    "setSeparator",
    "properties",
    "check",
    "init",
    "apply",
    "alignX",
    "nullable",
    "reversed",
    "members",
    "__heights",
    "__flexs",
    "__enableFlex",
    "__children",
    "_applyReversed",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__rebuildCache",
    "children",
    "_getLayoutChildren",
    "length",
    "enableFlex",
    "reuse",
    "props",
    "heights",
    "Array",
    "flexs",
    "getReversed",
    "concat",
    "reverse",
    "i",
    "getLayoutProperties",
    "height",
    "parseFloat",
    "flex",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "item",
    "name",
    "value",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "assertNumber",
    "assert",
    "assertBoolean",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "getSpacing",
    "getSeparator",
    "gaps",
    "computeVerticalSeparatorGaps",
    "computeVerticalGaps",
    "child",
    "percent",
    "hint",
    "allocatedHeight",
    "getSizeHint",
    "Math",
    "floor",
    "minHeight",
    "maxHeight",
    "push",
    "flexibles",
    "offset",
    "notEnoughSpace",
    "min",
    "max",
    "flexShrink",
    "result",
    "computeFlexOffsets",
    "top",
    "getMarginTop",
    "getAlignY",
    "round",
    "left",
    "width",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "_clearSeparators",
    "separatorInsets",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getInsets",
    "separatorHeight",
    "bottom",
    "getMarginLeft",
    "getMarginRight",
    "minWidth",
    "maxWidth",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "_renderSeparator",
    "collapseMargins",
    "getMarginBottom",
    "_computeSizeHint",
    "percentMinHeight",
    "margin",
    "l",
    "destruct",
    "VBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/VBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A vertical box layout.\n *\n * The vertical box layout lays out widgets in a vertical column, from top\n * to bottom.\n *\n * *Features*\n *\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Margins (with vertical collapsing)\n * * Auto sizing (ignoring percent values)\n * * Percent heights (not relevant for size hint)\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignY} is ignored)\n * * Vertical spacing (collapsed with margins)\n * * Reversed children layout (from last to first)\n * * Horizontal children stretching (respecting size hints)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n *   distributes remaining empty space among its children. If items are made\n *   flexible, they can grow or shrink accordingly. Their relative flex values\n *   determine how the items are being resized, i.e. the larger the flex ratio\n *   of two items, the larger the resizing of the first item compared to the\n *   second.\n *\n *   If there is only one flex item in a layout container, its actual flex\n *   value is not relevant. To disallow items to become flexible, set the\n *   flex value to zero.\n * </li>\n * <li><strong>height</strong> <em>(String)</em>: Allows to define a percent\n *   height for the item. The height in percent, if specified, is used instead\n *   of the height defined by the size hint. The minimum and maximum height still\n *   takes care of the element's limits. It has no influence on the layout's\n *   size hint. Percent values are mostly useful for widgets which are sized by\n *   the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the vertical box layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.VBox();\n * layout.setSpacing(4); // apply spacing\n *\n * var container = new qx.ui.container.Composite(layout);\n *\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * *External Documentation*\n *\n * See <a href='https://qooxdoo.org/documentation/#/desktop/layout/box.md'>extended documentation</a>\n * and links to demos for this layout.\n *\n */\nqx.Class.define(\"qx.ui.layout.VBox\", {\n  extend: qx.ui.layout.Abstract,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\n   * @param alignY {String?\"top\"} Vertical alignment of the whole children\n   *     block {@link #alignY}.\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to be rendered between the items\n   */\n  construct(spacing, alignY, separator) {\n    super();\n\n    if (spacing) {\n      this.setSpacing(spacing);\n    }\n\n    if (alignY) {\n      this.setAlignY(alignY);\n    }\n\n    if (separator) {\n      this.setSeparator(separator);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Vertical alignment of the whole children block. The vertical\n     * alignment of the child is completely ignored in VBoxes (\n     * {@link qx.ui.core.LayoutItem#alignY}).\n     */\n    alignY: {\n      check: [\"top\", \"middle\", \"bottom\"],\n      init: \"top\",\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Horizontal alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignX}.\n     */\n    alignX: {\n      check: [\"left\", \"center\", \"right\"],\n      init: \"left\",\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Vertical spacing between two children */\n    spacing: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Separator lines to use between the objects */\n    separator: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyReversed\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __heights: null,\n    __flexs: null,\n    __enableFlex: null,\n    __children: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyReversed() {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n    /**\n     * Rebuilds caches for flex and percent layout properties\n     */\n    __rebuildCache() {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var enableFlex = false;\n      var reuse =\n        this.__heights &&\n        this.__heights.length != length &&\n        this.__flexs &&\n        this.__heights;\n      var props;\n\n      // Sparse array (keep old one if lengths has not been modified)\n      var heights = reuse ? this.__heights : new Array(length);\n      var flexs = reuse ? this.__flexs : new Array(length);\n\n      // Reverse support\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      // Loop through children to preparse values\n      for (var i = 0; i < length; i++) {\n        props = children[i].getLayoutProperties();\n\n        if (props.height != null) {\n          heights[i] = parseFloat(props.height) / 100;\n        }\n\n        if (props.flex != null) {\n          flexs[i] = props.flex;\n          enableFlex = true;\n        } else {\n          // reset (in case the index of the children changed: BUG #3131)\n          flexs[i] = 0;\n        }\n      }\n\n      // Store data\n      if (!reuse) {\n        this.__heights = heights;\n        this.__flexs = flexs;\n      }\n\n      this.__enableFlex = enableFlex;\n      this.__children = children;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        if (name == \"height\") {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        } else if (name == \"flex\") {\n          // flex\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        } else if (name == \"flexShrink\") {\n          this.assertBoolean(value);\n        } else {\n          this.assert(\n            false,\n            \"The property '\" + name + \"' is not supported by the VBox layout!\"\n          );\n        }\n      },\n\n      false: null\n    }),\n\n    // overridden\n    renderLayout(availWidth, availHeight, padding) {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      // Cache children\n      var children = this.__children;\n      var length = children.length;\n      var util = qx.ui.layout.Util;\n\n      // Compute gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      var gaps;\n      if (separator) {\n        gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n      // First run to cache children data and compute allocated height\n      var i, child, height, percent;\n      var heights = [],\n        hint;\n      var allocatedHeight = gaps;\n\n      for (i = 0; i < length; i += 1) {\n        percent = this.__heights[i];\n        hint = children[i].getSizeHint();\n\n        height =\n          percent != null\n            ? Math.floor((availHeight - gaps) * percent)\n            : hint.height;\n\n        // Limit computed value\n        if (height < hint.minHeight) {\n          height = hint.minHeight;\n        } else if (height > hint.maxHeight) {\n          height = hint.maxHeight;\n        }\n\n        heights.push(height);\n        allocatedHeight += height;\n      }\n\n      // Flex support (growing/shrinking)\n      if (this.__enableFlex && allocatedHeight != availHeight) {\n        var flexibles = {};\n        var flex, offset;\n        var notEnoughSpace = allocatedHeight > availHeight;\n\n        for (i = 0; i < length; i += 1) {\n          flex = this.__flexs[i];\n\n          if (flex > 0) {\n            hint = children[i].getSizeHint();\n\n            flexibles[i] = {\n              min: hint.minHeight,\n              value: heights[i],\n              max: hint.maxHeight,\n              flex: flex\n            };\n\n            if (notEnoughSpace) {\n              var props = children[i].getLayoutProperties();\n              if (props && props.flexShrink) {\n                flexibles[i].min = 0;\n              }\n            }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availHeight,\n          allocatedHeight\n        );\n\n        for (i in result) {\n          offset = result[i].offset;\n\n          heights[i] += offset;\n          allocatedHeight += offset;\n        }\n      }\n\n      // Start with top coordinate\n      var top = children[0].getMarginTop();\n\n      // Alignment support\n      if (allocatedHeight < availHeight && this.getAlignY() != \"top\") {\n        top = availHeight - allocatedHeight;\n\n        if (this.getAlignY() === \"middle\") {\n          top = Math.round(top / 2);\n        }\n      }\n\n      // Layouting children\n      var hint, left, width, height, marginBottom, marginLeft, marginRight;\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Compute separator height\n      if (separator) {\n        var separatorInsets = qx.theme.manager.Decoration.getInstance()\n          .resolve(separator)\n          .getInsets();\n        var separatorHeight = separatorInsets.top + separatorInsets.bottom;\n      }\n\n      // Render children and separators\n      for (i = 0; i < length; i += 1) {\n        child = children[i];\n        height = heights[i];\n        hint = child.getSizeHint();\n\n        marginLeft = child.getMarginLeft();\n        marginRight = child.getMarginRight();\n\n        // Find usable width\n        width = Math.max(\n          hint.minWidth,\n          Math.min(availWidth - marginLeft - marginRight, hint.maxWidth)\n        );\n\n        // Respect horizontal alignment\n        left = util.computeHorizontalAlignOffset(\n          child.getAlignX() || this.getAlignX(),\n          width,\n          availWidth,\n          marginLeft,\n          marginRight\n        );\n\n        // Add collapsed margin\n        if (i > 0) {\n          // Whether a separator has been configured\n          if (separator) {\n            // add margin of last child and spacing\n            top += marginBottom + spacing;\n\n            // then render the separator at this position\n            this._renderSeparator(separator, {\n              top: top + padding.top,\n              left: padding.left,\n              height: separatorHeight,\n              width: availWidth\n            });\n\n            // and finally add the size of the separator, the spacing (again) and the top margin\n            top += separatorHeight + spacing + child.getMarginTop();\n          } else {\n            // Support margin collapsing when no separator is defined\n            top += util.collapseMargins(\n              spacing,\n              marginBottom,\n              child.getMarginTop()\n            );\n          }\n        }\n\n        // Layout child\n        child.renderLayout(\n          left + padding.left,\n          top + padding.top,\n          width,\n          height\n        );\n\n        // Add height\n        top += height;\n\n        // Remember bottom margin (for collapsing)\n        marginBottom = child.getMarginBottom();\n      }\n    },\n\n    // overridden\n    _computeSizeHint() {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n\n      // Initialize\n      var minHeight = 0,\n        height = 0,\n        percentMinHeight = 0;\n      var minWidth = 0,\n        width = 0;\n      var child, hint, margin;\n\n      // Iterate over children\n      for (var i = 0, l = children.length; i < l; i += 1) {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Sum up heights\n        height += hint.height;\n\n        // Detect if child is shrinkable or has percent height and update minHeight\n        var flex = this.__flexs[i];\n        var percent = this.__heights[i];\n        if (flex) {\n          minHeight += hint.minHeight;\n        } else if (percent) {\n          percentMinHeight = Math.max(\n            percentMinHeight,\n            Math.round(hint.minHeight / percent)\n          );\n        } else {\n          minHeight += hint.height;\n        }\n\n        // Build horizontal margin sum\n        margin = child.getMarginLeft() + child.getMarginRight();\n\n        // Find biggest width\n        if (hint.width + margin > width) {\n          width = hint.width + margin;\n        }\n\n        // Find biggest minWidth\n        if (hint.minWidth + margin > minWidth) {\n          minWidth = hint.minWidth + margin;\n        }\n      }\n\n      minHeight += percentMinHeight;\n\n      // Respect gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      var gaps;\n      if (separator) {\n        gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n      // Return hint\n      return {\n        minHeight: minHeight + gaps,\n        height: height + gaps,\n        minWidth: minWidth,\n        width: width\n      };\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__heights = this.__flexs = this.__children = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,QAAQ;IAE7B;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,qBAACC,OAAO,EAAEC,MAAM,EAAEC,SAAS,EAAE;MACpC;MAEA,IAAIF,OAAO,EAAE;QACX,IAAI,CAACG,UAAU,CAACH,OAAO,CAAC;MAC1B;MAEA,IAAIC,MAAM,EAAE;QACV,IAAI,CAACG,SAAS,CAACH,MAAM,CAAC;MACxB;MAEA,IAAIC,SAAS,EAAE;QACb,IAAI,CAACG,YAAY,CAACH,SAAS,CAAC;MAC9B;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEI,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;MACIL,MAAM,EAAE;QACNM,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAClCC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;MACIC,MAAM,EAAE;QACNH,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC;QAClCC,IAAI,EAAE,MAAM;QACZC,KA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"
}