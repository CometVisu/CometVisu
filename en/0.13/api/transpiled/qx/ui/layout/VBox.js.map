{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacing",
    "alignY",
    "separator",
    "constructor",
    "call",
    "setSpacing",
    "setAlignY",
    "setSeparator",
    "properties",
    "check",
    "init",
    "apply",
    "alignX",
    "nullable",
    "reversed",
    "members",
    "__heights",
    "__flexs",
    "__enableFlex",
    "__children",
    "_applyReversed",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__rebuildCache",
    "__P_374_4",
    "children",
    "_getLayoutChildren",
    "length",
    "enableFlex",
    "reuse",
    "props",
    "heights",
    "Array",
    "flexs",
    "getReversed",
    "concat",
    "reverse",
    "i",
    "getLayoutProperties",
    "height",
    "parseFloat",
    "flex",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "_true",
    "item",
    "name",
    "value",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "assertNumber",
    "assert",
    "assertBoolean",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "getSpacing",
    "getSeparator",
    "gaps",
    "computeVerticalSeparatorGaps",
    "computeVerticalGaps",
    "child",
    "percent",
    "hint",
    "allocatedHeight",
    "getSizeHint",
    "Math",
    "floor",
    "minHeight",
    "maxHeight",
    "push",
    "flexibles",
    "offset",
    "notEnoughSpace",
    "min",
    "max",
    "flexShrink",
    "result",
    "computeFlexOffsets",
    "top",
    "getMarginTop",
    "getAlignY",
    "round",
    "left",
    "width",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "_clearSeparators",
    "separatorInsets",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getInsets",
    "separatorHeight",
    "bottom",
    "getMarginLeft",
    "getMarginRight",
    "minWidth",
    "maxWidth",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "_renderSeparator",
    "collapseMargins",
    "getMarginBottom",
    "_computeSizeHint",
    "percentMinHeight",
    "margin",
    "l",
    "destruct",
    "VBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/VBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A vertical box layout.\r\n *\r\n * The vertical box layout lays out widgets in a vertical column, from top\r\n * to bottom.\r\n *\r\n * *Features*\r\n *\r\n * * Minimum and maximum dimensions\r\n * * Prioritized growing/shrinking (flex)\r\n * * Margins (with vertical collapsing)\r\n * * Auto sizing (ignoring percent values)\r\n * * Percent heights (not relevant for size hint)\r\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignY} is ignored)\r\n * * Vertical spacing (collapsed with margins)\r\n * * Reversed children layout (from last to first)\r\n * * Horizontal children stretching (respecting size hints)\r\n *\r\n * *Item Properties*\r\n *\r\n * <ul>\r\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\r\n *   distributes remaining empty space among its children. If items are made\r\n *   flexible, they can grow or shrink accordingly. Their relative flex values\r\n *   determine how the items are being resized, i.e. the larger the flex ratio\r\n *   of two items, the larger the resizing of the first item compared to the\r\n *   second.\r\n *\r\n *   If there is only one flex item in a layout container, its actual flex\r\n *   value is not relevant. To disallow items to become flexible, set the\r\n *   flex value to zero.\r\n * </li>\r\n * <li><strong>height</strong> <em>(String)</em>: Allows to define a percent\r\n *   height for the item. The height in percent, if specified, is used instead\r\n *   of the height defined by the size hint. The minimum and maximum height still\r\n *   takes care of the element's limits. It has no influence on the layout's\r\n *   size hint. Percent values are mostly useful for widgets which are sized by\r\n *   the outer hierarchy.\r\n * </li>\r\n * </ul>\r\n *\r\n * *Example*\r\n *\r\n * Here is a little example of how to use the vertical box layout.\r\n *\r\n * <pre class=\"javascript\">\r\n * var layout = new qx.ui.layout.VBox();\r\n * layout.setSpacing(4); // apply spacing\r\n *\r\n * var container = new qx.ui.container.Composite(layout);\r\n *\r\n * container.add(new qx.ui.core.Widget());\r\n * container.add(new qx.ui.core.Widget());\r\n * container.add(new qx.ui.core.Widget());\r\n * </pre>\r\n *\r\n * *External Documentation*\r\n *\r\n * See <a href='https://qooxdoo.org/documentation/#/desktop/layout/box.md'>extended documentation</a>\r\n * and links to demos for this layout.\r\n *\r\n */\r\nqx.Class.define(\"qx.ui.layout.VBox\", {\r\n  extend: qx.ui.layout.Abstract,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\r\n   * @param alignY {String?\"top\"} Vertical alignment of the whole children\r\n   *     block {@link #alignY}.\r\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to be rendered between the items\r\n   */\r\n  construct(spacing, alignY, separator) {\r\n    super();\r\n\r\n    if (spacing) {\r\n      this.setSpacing(spacing);\r\n    }\r\n\r\n    if (alignY) {\r\n      this.setAlignY(alignY);\r\n    }\r\n\r\n    if (separator) {\r\n      this.setSeparator(separator);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Vertical alignment of the whole children block. The vertical\r\n     * alignment of the child is completely ignored in VBoxes (\r\n     * {@link qx.ui.core.LayoutItem#alignY}).\r\n     */\r\n    alignY: {\r\n      check: [\"top\", \"middle\", \"bottom\"],\r\n      init: \"top\",\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /**\r\n     * Horizontal alignment of each child. Can be overridden through\r\n     * {@link qx.ui.core.LayoutItem#alignX}.\r\n     */\r\n    alignX: {\r\n      check: [\"left\", \"center\", \"right\"],\r\n      init: \"left\",\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /** Vertical spacing between two children */\r\n    spacing: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /** Separator lines to use between the objects */\r\n    separator: {\r\n      check: \"Decorator\",\r\n      nullable: true,\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /** Whether the actual children list should be laid out in reversed order. */\r\n    reversed: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyReversed\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __heights: null,\r\n    __flexs: null,\r\n    __enableFlex: null,\r\n    __children: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER METHODS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyReversed() {\r\n      // easiest way is to invalidate the cache\r\n      this._invalidChildrenCache = true;\r\n\r\n      // call normal layout change\r\n      this._applyLayoutChange();\r\n    },\r\n\r\n    /**\r\n     * Rebuilds caches for flex and percent layout properties\r\n     */\r\n    __rebuildCache() {\r\n      var children = this._getLayoutChildren();\r\n      var length = children.length;\r\n      var enableFlex = false;\r\n      var reuse =\r\n        this.__heights &&\r\n        this.__heights.length != length &&\r\n        this.__flexs &&\r\n        this.__heights;\r\n      var props;\r\n\r\n      // Sparse array (keep old one if lengths has not been modified)\r\n      var heights = reuse ? this.__heights : new Array(length);\r\n      var flexs = reuse ? this.__flexs : new Array(length);\r\n\r\n      // Reverse support\r\n      if (this.getReversed()) {\r\n        children = children.concat().reverse();\r\n      }\r\n\r\n      // Loop through children to preparse values\r\n      for (var i = 0; i < length; i++) {\r\n        props = children[i].getLayoutProperties();\r\n\r\n        if (props.height != null) {\r\n          heights[i] = parseFloat(props.height) / 100;\r\n        }\r\n\r\n        if (props.flex != null) {\r\n          flexs[i] = props.flex;\r\n          enableFlex = true;\r\n        } else {\r\n          // reset (in case the index of the children changed: BUG #3131)\r\n          flexs[i] = 0;\r\n        }\r\n      }\r\n\r\n      // Store data\r\n      if (!reuse) {\r\n        this.__heights = heights;\r\n        this.__flexs = flexs;\r\n      }\r\n\r\n      this.__enableFlex = enableFlex;\r\n      this.__children = children;\r\n\r\n      // Clear invalidation marker\r\n      delete this._invalidChildrenCache;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LAYOUT INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\r\n      true(item, name, value) {\r\n        if (name == \"height\") {\r\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\r\n        } else if (name == \"flex\") {\r\n          // flex\r\n          this.assertNumber(value);\r\n          this.assert(value >= 0);\r\n        } else if (name == \"flexShrink\") {\r\n          this.assertBoolean(value);\r\n        } else {\r\n          this.assert(\r\n            false,\r\n            \"The property '\" + name + \"' is not supported by the VBox layout!\"\r\n          );\r\n        }\r\n      },\r\n\r\n      false: null\r\n    }),\r\n\r\n    // overridden\r\n    renderLayout(availWidth, availHeight, padding) {\r\n      // Rebuild flex/height caches\r\n      if (this._invalidChildrenCache) {\r\n        this.__rebuildCache();\r\n      }\r\n\r\n      // Cache children\r\n      var children = this.__children;\r\n      var length = children.length;\r\n      var util = qx.ui.layout.Util;\r\n\r\n      // Compute gaps\r\n      var spacing = this.getSpacing();\r\n      var separator = this.getSeparator();\r\n      var gaps;\r\n      if (separator) {\r\n        gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\r\n      } else {\r\n        gaps = util.computeVerticalGaps(children, spacing, true);\r\n      }\r\n\r\n      // First run to cache children data and compute allocated height\r\n      var i, child, height, percent;\r\n      var heights = [],\r\n        hint;\r\n      var allocatedHeight = gaps;\r\n\r\n      for (i = 0; i < length; i += 1) {\r\n        percent = this.__heights[i];\r\n        hint = children[i].getSizeHint();\r\n\r\n        height =\r\n          percent != null\r\n            ? Math.floor((availHeight - gaps) * percent)\r\n            : hint.height;\r\n\r\n        // Limit computed value\r\n        if (height < hint.minHeight) {\r\n          height = hint.minHeight;\r\n        } else if (height > hint.maxHeight) {\r\n          height = hint.maxHeight;\r\n        }\r\n\r\n        heights.push(height);\r\n        allocatedHeight += height;\r\n      }\r\n\r\n      // Flex support (growing/shrinking)\r\n      if (this.__enableFlex && allocatedHeight != availHeight) {\r\n        var flexibles = {};\r\n        var flex, offset;\r\n        var notEnoughSpace = allocatedHeight > availHeight;\r\n\r\n        for (i = 0; i < length; i += 1) {\r\n          flex = this.__flexs[i];\r\n\r\n          if (flex > 0) {\r\n            hint = children[i].getSizeHint();\r\n\r\n            flexibles[i] = {\r\n              min: hint.minHeight,\r\n              value: heights[i],\r\n              max: hint.maxHeight,\r\n              flex: flex\r\n            };\r\n\r\n            if (notEnoughSpace) {\r\n              var props = children[i].getLayoutProperties();\r\n              if (props && props.flexShrink) {\r\n                flexibles[i].min = 0;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        var result = util.computeFlexOffsets(\r\n          flexibles,\r\n          availHeight,\r\n          allocatedHeight\r\n        );\r\n\r\n        for (i in result) {\r\n          offset = result[i].offset;\r\n\r\n          heights[i] += offset;\r\n          allocatedHeight += offset;\r\n        }\r\n      }\r\n\r\n      // Start with top coordinate\r\n      var top = children[0].getMarginTop();\r\n\r\n      // Alignment support\r\n      if (allocatedHeight < availHeight && this.getAlignY() != \"top\") {\r\n        top = availHeight - allocatedHeight;\r\n\r\n        if (this.getAlignY() === \"middle\") {\r\n          top = Math.round(top / 2);\r\n        }\r\n      }\r\n\r\n      // Layouting children\r\n      var hint, left, width, height, marginBottom, marginLeft, marginRight;\r\n\r\n      // Pre configure separators\r\n      this._clearSeparators();\r\n\r\n      // Compute separator height\r\n      if (separator) {\r\n        var separatorInsets = qx.theme.manager.Decoration.getInstance()\r\n          .resolve(separator)\r\n          .getInsets();\r\n        var separatorHeight = separatorInsets.top + separatorInsets.bottom;\r\n      }\r\n\r\n      // Render children and separators\r\n      for (i = 0; i < length; i += 1) {\r\n        child = children[i];\r\n        height = heights[i];\r\n        hint = child.getSizeHint();\r\n\r\n        marginLeft = child.getMarginLeft();\r\n        marginRight = child.getMarginRight();\r\n\r\n        // Find usable width\r\n        width = Math.max(\r\n          hint.minWidth,\r\n          Math.min(availWidth - marginLeft - marginRight, hint.maxWidth)\r\n        );\r\n\r\n        // Respect horizontal alignment\r\n        left = util.computeHorizontalAlignOffset(\r\n          child.getAlignX() || this.getAlignX(),\r\n          width,\r\n          availWidth,\r\n          marginLeft,\r\n          marginRight\r\n        );\r\n\r\n        // Add collapsed margin\r\n        if (i > 0) {\r\n          // Whether a separator has been configured\r\n          if (separator) {\r\n            // add margin of last child and spacing\r\n            top += marginBottom + spacing;\r\n\r\n            // then render the separator at this position\r\n            this._renderSeparator(separator, {\r\n              top: top + padding.top,\r\n              left: padding.left,\r\n              height: separatorHeight,\r\n              width: availWidth\r\n            });\r\n\r\n            // and finally add the size of the separator, the spacing (again) and the top margin\r\n            top += separatorHeight + spacing + child.getMarginTop();\r\n          } else {\r\n            // Support margin collapsing when no separator is defined\r\n            top += util.collapseMargins(\r\n              spacing,\r\n              marginBottom,\r\n              child.getMarginTop()\r\n            );\r\n          }\r\n        }\r\n\r\n        // Layout child\r\n        child.renderLayout(\r\n          left + padding.left,\r\n          top + padding.top,\r\n          width,\r\n          height\r\n        );\r\n\r\n        // Add height\r\n        top += height;\r\n\r\n        // Remember bottom margin (for collapsing)\r\n        marginBottom = child.getMarginBottom();\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _computeSizeHint() {\r\n      // Rebuild flex/height caches\r\n      if (this._invalidChildrenCache) {\r\n        this.__rebuildCache();\r\n      }\r\n\r\n      var util = qx.ui.layout.Util;\r\n      var children = this.__children;\r\n\r\n      // Initialize\r\n      var minHeight = 0,\r\n        height = 0,\r\n        percentMinHeight = 0;\r\n      var minWidth = 0,\r\n        width = 0;\r\n      var child, hint, margin;\r\n\r\n      // Iterate over children\r\n      for (var i = 0, l = children.length; i < l; i += 1) {\r\n        child = children[i];\r\n        hint = child.getSizeHint();\r\n\r\n        // Sum up heights\r\n        height += hint.height;\r\n\r\n        // Detect if child is shrinkable or has percent height and update minHeight\r\n        var flex = this.__flexs[i];\r\n        var percent = this.__heights[i];\r\n        if (flex) {\r\n          minHeight += hint.minHeight;\r\n        } else if (percent) {\r\n          percentMinHeight = Math.max(\r\n            percentMinHeight,\r\n            Math.round(hint.minHeight / percent)\r\n          );\r\n        } else {\r\n          minHeight += hint.height;\r\n        }\r\n\r\n        // Build horizontal margin sum\r\n        margin = child.getMarginLeft() + child.getMarginRight();\r\n\r\n        // Find biggest width\r\n        if (hint.width + margin > width) {\r\n          width = hint.width + margin;\r\n        }\r\n\r\n        // Find biggest minWidth\r\n        if (hint.minWidth + margin > minWidth) {\r\n          minWidth = hint.minWidth + margin;\r\n        }\r\n      }\r\n\r\n      minHeight += percentMinHeight;\r\n\r\n      // Respect gaps\r\n      var spacing = this.getSpacing();\r\n      var separator = this.getSeparator();\r\n      var gaps;\r\n      if (separator) {\r\n        gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\r\n      } else {\r\n        gaps = util.computeVerticalGaps(children, spacing, true);\r\n      }\r\n\r\n      // Return hint\r\n      return {\r\n        minHeight: minHeight + gaps,\r\n        height: height + gaps,\r\n        minWidth: minWidth,\r\n        width: width\r\n      };\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this.__heights = this.__flexs = this.__children = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,QAAQ;IAE7B;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,OAAO,EAAEC,MAAM,EAAEC,SAAS,EAAE;MACpCb,EAAA,CAAAO,EAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAK,WAAA,CAAAC,IAAA;MAEA,IAAIJ,OAAO,EAAE;QACX,IAAI,CAACK,UAAU,CAACL,OAAO,CAAC;MAC1B;MAEA,IAAIC,MAAM,EAAE;QACV,IAAI,CAACK,SAAS,CAACL,MAAM,CAAC;MACxB;MAEA,IAAIC,SAAS,EAAE;QACb,IAAI,CAACK,YAAY,CAACL,SAAS,CAAC;MAC9B;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEM,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;MACIP,MAAM,EAAE;QACNQ,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAClCC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAE;MACT,CAAC;MAED;AACJ;AACA;AACA;MACIC,MAAM,EAAE;QACNH,KAAK,EAAE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"
}