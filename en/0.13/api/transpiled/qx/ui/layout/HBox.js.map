{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacing",
    "alignX",
    "separator",
    "setSpacing",
    "setAlignX",
    "setSeparator",
    "properties",
    "check",
    "init",
    "apply",
    "alignY",
    "nullable",
    "reversed",
    "members",
    "__widths",
    "__flexs",
    "__enableFlex",
    "__children",
    "_applyReversed",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__rebuildCache",
    "children",
    "_getLayoutChildren",
    "length",
    "enableFlex",
    "reuse",
    "props",
    "widths",
    "Array",
    "flexs",
    "getReversed",
    "concat",
    "reverse",
    "i",
    "getLayoutProperties",
    "width",
    "parseFloat",
    "flex",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "item",
    "name",
    "value",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "assertNumber",
    "assert",
    "assertBoolean",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "getSpacing",
    "getSeparator",
    "gaps",
    "computeHorizontalSeparatorGaps",
    "computeHorizontalGaps",
    "child",
    "percent",
    "hint",
    "allocatedWidth",
    "getSizeHint",
    "Math",
    "floor",
    "minWidth",
    "maxWidth",
    "push",
    "flexibles",
    "offset",
    "notEnoughSpace",
    "min",
    "max",
    "flexShrink",
    "result",
    "computeFlexOffsets",
    "left",
    "getMarginLeft",
    "getAlignX",
    "round",
    "top",
    "height",
    "marginRight",
    "marginTop",
    "marginBottom",
    "_clearSeparators",
    "separatorInsets",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getInsets",
    "separatorWidth",
    "right",
    "getMarginTop",
    "getMarginBottom",
    "minHeight",
    "maxHeight",
    "computeVerticalAlignOffset",
    "getAlignY",
    "_renderSeparator",
    "collapseMargins",
    "getMarginRight",
    "_computeSizeHint",
    "percentMinWidth",
    "margin",
    "l",
    "destruct",
    "HBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/HBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A horizontal box layout.\n *\n * The horizontal box layout lays out widgets in a horizontal row, from left\n * to right.\n *\n * *Features*\n *\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Margins (with horizontal collapsing)\n * * Auto sizing (ignoring percent values)\n * * Percent widths (not relevant for size hint)\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignX} is ignored)\n * * Horizontal spacing (collapsed with margins)\n * * Reversed children layout (from last to first)\n * * Vertical children stretching (respecting size hints)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n *   distributes remaining empty space among its children. If items are made\n *   flexible, they can grow or shrink accordingly. Their relative flex values\n *   determine how the items are being resized, i.e. the larger the flex ratio\n *   of two items, the larger the resizing of the first item compared to the\n *   second.\n *\n *   If there is only one flex item in a layout container, its actual flex\n *   value is not relevant. To disallow items to become flexible, set the\n *   flex value to zero.\n * </li>\n * <li><strong>flexShrink</strong> <em>(Boolean)</em>: Only valid if `flex` is\n *    set to a non-zero value, `flexShrink` tells the layout to force the child\n *    widget to shink if there is not enough space available for all of the children.\n *    This is used in scenarios such as when the child insists that it has a `minWidth`\n *    but there simply is not enough space to support that minimum width, so the\n *    overflow has to be cut off.  This setting allows the container to pick\n *    which children are able to have their `minWidth` sacrificed.  Without this\n *    setting, one oversized child can force later children out of view, regardless\n *    of `flex` settings\n * </li>\n * <li><strong>width</strong> <em>(String)</em>: Allows to define a percent\n *   width for the item. The width in percent, if specified, is used instead\n *   of the width defined by the size hint. The minimum and maximum width still\n *   takes care of the element's limits. It has no influence on the layout's\n *   size hint. Percent values are mostly useful for widgets which are sized by\n *   the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the HBox layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.HBox();\n * layout.setSpacing(4); // apply spacing\n *\n * var container = new qx.ui.container.Composite(layout);\n *\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * *External Documentation*\n *\n * See <a href='https://qooxdoo.org/documentation/#/desktop/layout/box.md'>extended documentation</a>\n * and links to demos for this layout.\n *\n */\nqx.Class.define(\"qx.ui.layout.HBox\", {\n  extend: qx.ui.layout.Abstract,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\n   * @param alignX {String?\"left\"} Horizontal alignment of the whole children\n   *     block {@link #alignX}.\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to render between the items\n   */\n  construct(spacing, alignX, separator) {\n    super();\n\n    if (spacing) {\n      this.setSpacing(spacing);\n    }\n\n    if (alignX) {\n      this.setAlignX(alignX);\n    }\n\n    if (separator) {\n      this.setSeparator(separator);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Horizontal alignment of the whole children block. The horizontal\n     * alignment of the child is completely ignored in HBoxes (\n     * {@link qx.ui.core.LayoutItem#alignX}).\n     */\n    alignX: {\n      check: [\"left\", \"center\", \"right\"],\n      init: \"left\",\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Vertical alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignY}.\n     */\n    alignY: {\n      check: [\"top\", \"middle\", \"bottom\"],\n      init: \"top\",\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Horizontal spacing between two children */\n    spacing: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Separator lines to use between the objects */\n    separator: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyReversed\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __widths: null,\n    __flexs: null,\n    __enableFlex: null,\n    __children: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyReversed() {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n    /**\n     * Rebuilds caches for flex and percent layout properties\n     */\n    __rebuildCache() {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var enableFlex = false;\n      var reuse =\n        this.__widths &&\n        this.__widths.length != length &&\n        this.__flexs &&\n        this.__widths;\n      var props;\n\n      // Sparse array (keep old one if lengths has not been modified)\n      var widths = reuse ? this.__widths : new Array(length);\n      var flexs = reuse ? this.__flexs : new Array(length);\n\n      // Reverse support\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      // Loop through children to preparse values\n      for (var i = 0; i < length; i++) {\n        props = children[i].getLayoutProperties();\n\n        if (props.width != null) {\n          widths[i] = parseFloat(props.width) / 100;\n        }\n\n        if (props.flex != null) {\n          flexs[i] = props.flex;\n          enableFlex = true;\n        } else {\n          // reset (in case the index of the children changed: BUG #3131)\n          flexs[i] = 0;\n        }\n      }\n\n      // Store data\n      if (!reuse) {\n        this.__widths = widths;\n        this.__flexs = flexs;\n      }\n\n      this.__enableFlex = enableFlex;\n      this.__children = children;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        if (name === \"width\") {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        } else if (name === \"flex\") {\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        } else if (name === \"flexShrink\") {\n          this.assertBoolean(value);\n        } else {\n          this.assert(\n            false,\n            \"The property '\" + name + \"' is not supported by the HBox layout!\"\n          );\n        }\n      },\n\n      false: null\n    }),\n\n    // overridden\n    renderLayout(availWidth, availHeight, padding) {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      // Cache children\n      var children = this.__children;\n      var length = children.length;\n      var util = qx.ui.layout.Util;\n\n      // Compute gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      var gaps;\n      if (separator) {\n        gaps = util.computeHorizontalSeparatorGaps(\n          children,\n          spacing,\n          separator\n        );\n      } else {\n        gaps = util.computeHorizontalGaps(children, spacing, true);\n      }\n\n      // First run to cache children data and compute allocated width\n      var i, child, width, percent;\n      var widths = [],\n        hint;\n      var allocatedWidth = gaps;\n\n      for (i = 0; i < length; i += 1) {\n        percent = this.__widths[i];\n        hint = children[i].getSizeHint();\n\n        width =\n          percent != null\n            ? Math.floor((availWidth - gaps) * percent)\n            : hint.width;\n\n        // Limit computed value\n        if (width < hint.minWidth) {\n          width = hint.minWidth;\n        } else if (width > hint.maxWidth) {\n          width = hint.maxWidth;\n        }\n\n        widths.push(width);\n        allocatedWidth += width;\n      }\n\n      // Flex support (growing/shrinking)\n      if (this.__enableFlex && allocatedWidth != availWidth) {\n        var flexibles = {};\n        var flex, offset;\n        var notEnoughSpace = allocatedWidth > availWidth;\n\n        for (i = 0; i < length; i += 1) {\n          flex = this.__flexs[i];\n\n          if (flex > 0) {\n            hint = children[i].getSizeHint();\n\n            flexibles[i] = {\n              min: hint.minWidth,\n              value: widths[i],\n              max: hint.maxWidth,\n              flex: flex\n            };\n\n            if (notEnoughSpace) {\n              var props = children[i].getLayoutProperties();\n              if (props && props.flexShrink) {\n                flexibles[i].min = 0;\n              }\n            }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availWidth,\n          allocatedWidth\n        );\n\n        for (i in result) {\n          offset = result[i].offset;\n\n          widths[i] += offset;\n          allocatedWidth += offset;\n        }\n      }\n\n      // Start with left coordinate\n      var left = children[0].getMarginLeft();\n\n      // Alignment support\n      if (allocatedWidth < availWidth && this.getAlignX() != \"left\") {\n        left = availWidth - allocatedWidth;\n\n        if (this.getAlignX() === \"center\") {\n          left = Math.round(left / 2);\n        }\n      }\n\n      // Layouting children\n      var hint, top, height, width, marginRight, marginTop, marginBottom;\n      var spacing = this.getSpacing();\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Compute separator width\n      if (separator) {\n        var separatorInsets = qx.theme.manager.Decoration.getInstance()\n          .resolve(separator)\n          .getInsets();\n        var separatorWidth = separatorInsets.left + separatorInsets.right;\n      }\n\n      // Render children and separators\n      for (i = 0; i < length; i += 1) {\n        child = children[i];\n        width = widths[i];\n        hint = child.getSizeHint();\n\n        marginTop = child.getMarginTop();\n        marginBottom = child.getMarginBottom();\n\n        // Find usable height\n        height = Math.max(\n          hint.minHeight,\n          Math.min(availHeight - marginTop - marginBottom, hint.maxHeight)\n        );\n\n        // Respect vertical alignment\n        top = util.computeVerticalAlignOffset(\n          child.getAlignY() || this.getAlignY(),\n          height,\n          availHeight,\n          marginTop,\n          marginBottom\n        );\n\n        // Add collapsed margin\n        if (i > 0) {\n          // Whether a separator has been configured\n          if (separator) {\n            // add margin of last child and spacing\n            left += marginRight + spacing;\n\n            // then render the separator at this position\n            this._renderSeparator(separator, {\n              left: left + padding.left,\n              top: padding.top,\n              width: separatorWidth,\n              height: availHeight\n            });\n\n            // and finally add the size of the separator, the spacing (again) and the left margin\n            left += separatorWidth + spacing + child.getMarginLeft();\n          } else {\n            // Support margin collapsing when no separator is defined\n            left += util.collapseMargins(\n              spacing,\n              marginRight,\n              child.getMarginLeft()\n            );\n          }\n        }\n\n        // Layout child\n        child.renderLayout(\n          left + padding.left,\n          top + padding.top,\n          width,\n          height\n        );\n\n        // Add width\n        left += width;\n\n        // Remember right margin (for collapsing)\n        marginRight = child.getMarginRight();\n      }\n    },\n\n    // overridden\n    _computeSizeHint() {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n\n      // Initialize\n      var minWidth = 0,\n        width = 0,\n        percentMinWidth = 0;\n      var minHeight = 0,\n        height = 0;\n      var child, hint, margin;\n\n      // Iterate over children\n      for (var i = 0, l = children.length; i < l; i += 1) {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Sum up widths\n        width += hint.width;\n\n        // Detect if child is shrinkable or has percent width and update minWidth\n        var flex = this.__flexs[i];\n        var percent = this.__widths[i];\n        if (flex) {\n          minWidth += hint.minWidth;\n        } else if (percent) {\n          percentMinWidth = Math.max(\n            percentMinWidth,\n            Math.round(hint.minWidth / percent)\n          );\n        } else {\n          minWidth += hint.width;\n        }\n\n        // Build vertical margin sum\n        margin = child.getMarginTop() + child.getMarginBottom();\n\n        // Find biggest height\n        if (hint.height + margin > height) {\n          height = hint.height + margin;\n        }\n\n        // Find biggest minHeight\n        if (hint.minHeight + margin > minHeight) {\n          minHeight = hint.minHeight + margin;\n        }\n      }\n\n      minWidth += percentMinWidth;\n\n      // Respect gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      var gaps;\n      if (separator) {\n        gaps = util.computeHorizontalSeparatorGaps(\n          children,\n          spacing,\n          separator\n        );\n      } else {\n        gaps = util.computeHorizontalGaps(children, spacing, true);\n      }\n\n      // Return hint\n      return {\n        minWidth: minWidth + gaps,\n        width: width + gaps,\n        minHeight: minHeight,\n        height: height\n      };\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__widths = this.__flexs = this.__children = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EAAqC;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaC,QADc;;IAGnC;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAfmC,qBAezBC,OAfyB,EAehBC,MAfgB,EAeRC,SAfQ,EAeG;MACpC;;MAEA,IAAIF,OAAJ,EAAa;QACX,KAAKG,UAAL,CAAgBH,OAAhB;MACD;;MAED,IAAIC,MAAJ,EAAY;QACV,KAAKG,SAAL,CAAeH,MAAf;MACD;;MAED,IAAIC,SAAJ,EAAe;QACb,KAAKG,YAAL,CAAkBH,SAAlB;MACD;IACF,CA7BkC;;IA+BnC;AACF;AACA;AACA;AACA;IAEEI,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;MACIL,MAAM,EAAE;QACNM,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CADD;QAENC,IAAI,EAAE,MAFA;QAGNC,KAAK,EAAE;MAHD,CANE;;MAYV;AACJ;AACA;AACA;MACIC,MAAM,EAAE;QACNH,KAAK,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAl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"
}