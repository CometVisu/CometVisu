{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "Object",
    "construct",
    "children",
    "spacing",
    "__children",
    "__spacing",
    "__hasMoreLines",
    "length",
    "__childIndex",
    "members",
    "computeNextLine",
    "availWidth",
    "Infinity",
    "Error",
    "lineHeight",
    "lineWidth",
    "lineChildren",
    "gapsBefore",
    "i",
    "child",
    "size",
    "getSizeHint",
    "gapBefore",
    "__computeGapBeforeChild",
    "childWidth",
    "width",
    "isFirstChild",
    "childHeight",
    "height",
    "getMarginTop",
    "getMarginBottom",
    "push",
    "Math",
    "max",
    "getLayoutProperties",
    "lineBreak",
    "childIndex",
    "isFirstInLine",
    "getMarginLeft",
    "getMarginRight",
    "hasMoreLines",
    "ui",
    "layout",
    "LineSizeIterator"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/LineSizeIterator.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n   http://qooxdoo.org\n\n   Copyright:\n     2008 Dihedrals.com, http://www.dihedrals.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Chris Banford (zermattchris)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class iterates over the lines in a flow layout.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.layout.LineSizeIterator\", {\n  extend: Object,\n\n  /**\n   * @param children {qx.ui.core.Widget[]} The children of the flow layout to\n   *    compute the lines from\n   * @param spacing {Integer} The horizontal spacing between the children\n   */\n  construct(children, spacing) {\n    this.__children = children;\n    this.__spacing = spacing;\n\n    this.__hasMoreLines = children.length > 0;\n    this.__childIndex = 0;\n  },\n\n  members: {\n    __children: null,\n    __spacing: null,\n    __hasMoreLines: null,\n    __childIndex: null,\n\n    /**\n     * Computes the properties of the next line taking the available width into\n     * account\n     *\n     * @param availWidth {Integer} The available width for the next line\n     * @return {Map} A map containing the line's properties.\n     */\n    computeNextLine(availWidth) {\n      var availWidth = availWidth || Infinity;\n\n      if (!this.__hasMoreLines) {\n        throw new Error(\"No more lines to compute\");\n      }\n\n      var children = this.__children;\n      var lineHeight = 0;\n      var lineWidth = 0;\n      var lineChildren = [];\n      var gapsBefore = [];\n\n      for (var i = this.__childIndex; i < children.length; i++) {\n        var child = children[i];\n        var size = child.getSizeHint();\n\n        var gapBefore = this.__computeGapBeforeChild(i);\n        var childWidth = size.width + gapBefore;\n        var isFirstChild = i == this.__childIndex;\n        if (!isFirstChild && lineWidth + childWidth > availWidth) {\n          this.__childIndex = i;\n          break;\n        }\n\n        var childHeight =\n          size.height + child.getMarginTop() + child.getMarginBottom();\n        lineChildren.push(child);\n        gapsBefore.push(gapBefore);\n        lineWidth += childWidth;\n        lineHeight = Math.max(lineHeight, childHeight);\n\n        if (child.getLayoutProperties().lineBreak) {\n          this.__childIndex = i + 1;\n          break;\n        }\n      }\n\n      if (i >= children.length) {\n        this.__hasMoreLines = false;\n      }\n\n      return {\n        height: lineHeight,\n        width: lineWidth,\n        children: lineChildren,\n        gapsBefore: gapsBefore\n      };\n    },\n\n    /**\n     * Computes the gap before the child at the given index\n     *\n     * @param childIndex {Integer} The index of the child widget\n     * @return {Integer} The gap before the given child\n     */\n    __computeGapBeforeChild(childIndex) {\n      var isFirstInLine = childIndex == this.__childIndex;\n      if (isFirstInLine) {\n        return this.__children[childIndex].getMarginLeft();\n      } else {\n        return Math.max(\n          this.__children[childIndex - 1].getMarginRight(),\n          this.__children[childIndex].getMarginLeft(),\n          this.__spacing\n        );\n      }\n    },\n\n    /**\n     * Whether there are more lines\n     *\n     * @return {Boolean} Whether there are more lines\n     */\n    hasMoreLines() {\n      return this.__hasMoreLines;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,+BAAhB,EAAiD;IAC/CC,MAAM,EAAEC,MADuC;;IAG/C;AACF;AACA;AACA;AACA;IACEC,SAR+C,qBAQrCC,QARqC,EAQ3BC,OAR2B,EAQlB;MAC3B,KAAKC,SAAL,GAAkBF,QAAlB;MACA,KAAKG,SAAL,GAAiBF,OAAjB;MAEA,KAAKG,SAAL,GAAsBJ,QAAQ,CAACK,MAAT,GAAkB,CAAxC;MACA,KAAKC,SAAL,GAAoB,CAApB;IACD,CAd8C;IAgB/CC,OAAO,EAAE;MACPL,SAAU,EAAE,IADL;MAEPC,SAAS,EAAE,IAFJ;MAGPC,SAAc,EAAE,IAHT;MAIPE,SAAY,EAAE,IAJP;;MAMP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,eAbO,2BAaSC,UAbT,EAaqB;QAC1B,IAAIA,UAAU,GAAGA,UAAU,IAAIC,QAA/B;;QAEA,IAAI,CAAC,KAAKN,SAAV,EAA0B;UACxB,MAAM,IAAIO,KAAJ,CAAU,0BAAV,CAAN;QACD;;QAED,IAAIX,QAAQ,GAAG,KAAKE,SAApB;QACA,IAAIU,UAAU,GAAG,CAAjB;QACA,IAAIC,SAAS,GAAG,CAAhB;QACA,IAAIC,YAAY,GAAG,EAAnB;QACA,IAAIC,UAAU,GAAG,EAAjB;;QAEA,KAAK,IAAIC,CAAC,GAAG,KAAKV,SAAlB,EAAgCU,CAAC,GAAGhB,QAAQ,CAACK,MAA7C,EAAqDW,CAAC,EAAtD,EAA0D;UACxD,IAAIC,KAAK,GAAGjB,QAAQ,CAACgB,CAAD,CAApB;UACA,IAAIE,IAAI,GAAGD,KAAK,CAACE,WAAN,EAAX;;UAEA,IAAIC,SAAS,GAAG,KAAKC,SAAL,CAA6BL,CAA7B,CAAhB;;UACA,IAAIM,UAAU,GAAGJ,IAAI,CAACK,KAAL,GAAaH,SAA9B;UACA,IAAII,YAAY,GAAGR,CAAC,IAAI,KAAKV,SAA7B;;UACA,IAAI,CAACkB,YAAD,IAAiBX,SAAS,GAAGS,UAAZ,GAAyBb,UAA9C,EAA0D;YACxD,KAAKH,SAAL,GAAoBU,CAApB;YACA;UACD;;UAED,IAAIS,WAAW,GACbP,IAAI,CAACQ,MAAL,GAAcT,KAAK,CAACU,YAAN,EAAd,GAAqCV,KAAK,CAACW,eAAN,EADvC;UAEAd,YAAY,CAACe,IAAb,CAAkBZ,KAAlB;UACAF,UAAU,CAACc,IAAX,CAAgBT,SAAhB;UACAP,SAAS,IAAIS,UAAb;UACAV,UAAU,GAAGkB,IAAI,CAACC,GAAL,CAASnB,UAAT,EAAqBa,WAArB,CAAb;;UAEA,IAAIR,KAAK,CAACe,mBAAN,GAA4BC,SAAhC,EAA2C;YACzC,KAAK3B,SAAL,GAAoBU,CAAC,GAAG,CAAxB;YACA;UACD;QACF;;QAED,IAAIA,CAAC,IAAIhB,QAAQ,CAACK,MAAlB,EAA0B;UACxB,KAAKD,SAAL,GAAsB,KAAtB;QACD;;QAED,OAAO;UACLsB,MAAM,EAAEd,UADH;UAELW,KAAK,EAAEV,SAFF;UAGLb,QAAQ,EAAEc,YAHL;UAILC,UAAU,EAAEA;QAJP,CAAP;MAMD,CA7DM;;MA+DP;AACJ;AACA;AACA;AACA;AACA;MACIM,SArEO,qBAqEiBa,UArEjB,EAqE6B;QAClC,IAAIC,aAAa,GAAGD,UAAU,IAAI,KAAK5B,SAAvC;;QACA,IAAI6B,aAAJ,EAAmB;UACjB,OAAO,KAAKjC,SAAL,CAAgBgC,UAAhB,EAA4BE,aAA5B,EAAP;QACD,CAFD,MAEO;UACL,OAAON,IAAI,CAACC,GAAL,CACL,KAAK7B,SAAL,CAAgBgC,UAAU,GAAG,CAA7B,EAAgCG,cAAhC,EADK,EAEL,KAAKnC,SAAL,CAAgBgC,UAAhB,EAA4BE,aAA5B,EAFK,EAGL,KAAKjC,SAHA,CAAP;QAKD;MACF,CAhFM;;MAkFP;AACJ;AACA;AACA;AACA;MACImC,YAvFO,0BAuFQ;QACb,OAAO,KAAKlC,SAAZ;MACD;IAzFM;EAhBsC,CAAjD;EAvBAb,EAAE,CAACgD,EAAH,CAAMC,MAAN,CAAaC,gBAAb,CAA8B/C,aAA9B,GAA8CA,aAA9C"
}