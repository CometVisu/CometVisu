{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "Object",
    "construct",
    "children",
    "spacing",
    "__children",
    "__spacing",
    "__hasMoreLines",
    "length",
    "__childIndex",
    "members",
    "computeNextLine",
    "availWidth",
    "Infinity",
    "Error",
    "lineHeight",
    "lineWidth",
    "lineChildren",
    "gapsBefore",
    "i",
    "child",
    "size",
    "getSizeHint",
    "gapBefore",
    "__computeGapBeforeChild",
    "childWidth",
    "width",
    "isFirstChild",
    "childHeight",
    "height",
    "getMarginTop",
    "getMarginBottom",
    "push",
    "Math",
    "max",
    "getLayoutProperties",
    "lineBreak",
    "__P_381_4",
    "childIndex",
    "isFirstInLine",
    "getMarginLeft",
    "getMarginRight",
    "hasMoreLines",
    "ui",
    "layout",
    "LineSizeIterator"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/LineSizeIterator.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2008 Dihedrals.com, http://www.dihedrals.com\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Chris Banford (zermattchris)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class iterates over the lines in a flow layout.\r\n *\r\n * @internal\r\n */\r\nqx.Class.define(\"qx.ui.layout.LineSizeIterator\", {\r\n  extend: Object,\r\n\r\n  /**\r\n   * @param children {qx.ui.core.Widget[]} The children of the flow layout to\r\n   *    compute the lines from\r\n   * @param spacing {Integer} The horizontal spacing between the children\r\n   */\r\n  construct(children, spacing) {\r\n    this.__children = children;\r\n    this.__spacing = spacing;\r\n\r\n    this.__hasMoreLines = children.length > 0;\r\n    this.__childIndex = 0;\r\n  },\r\n\r\n  members: {\r\n    __children: null,\r\n    __spacing: null,\r\n    __hasMoreLines: null,\r\n    __childIndex: null,\r\n\r\n    /**\r\n     * Computes the properties of the next line taking the available width into\r\n     * account\r\n     *\r\n     * @param availWidth {Integer} The available width for the next line\r\n     * @return {Map} A map containing the line's properties.\r\n     */\r\n    computeNextLine(availWidth) {\r\n      var availWidth = availWidth || Infinity;\r\n\r\n      if (!this.__hasMoreLines) {\r\n        throw new Error(\"No more lines to compute\");\r\n      }\r\n\r\n      var children = this.__children;\r\n      var lineHeight = 0;\r\n      var lineWidth = 0;\r\n      var lineChildren = [];\r\n      var gapsBefore = [];\r\n\r\n      for (var i = this.__childIndex; i < children.length; i++) {\r\n        var child = children[i];\r\n        var size = child.getSizeHint();\r\n\r\n        var gapBefore = this.__computeGapBeforeChild(i);\r\n        var childWidth = size.width + gapBefore;\r\n        var isFirstChild = i == this.__childIndex;\r\n        if (!isFirstChild && lineWidth + childWidth > availWidth) {\r\n          this.__childIndex = i;\r\n          break;\r\n        }\r\n\r\n        var childHeight =\r\n          size.height + child.getMarginTop() + child.getMarginBottom();\r\n        lineChildren.push(child);\r\n        gapsBefore.push(gapBefore);\r\n        lineWidth += childWidth;\r\n        lineHeight = Math.max(lineHeight, childHeight);\r\n\r\n        if (child.getLayoutProperties().lineBreak) {\r\n          this.__childIndex = i + 1;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (i >= children.length) {\r\n        this.__hasMoreLines = false;\r\n      }\r\n\r\n      return {\r\n        height: lineHeight,\r\n        width: lineWidth,\r\n        children: lineChildren,\r\n        gapsBefore: gapsBefore\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Computes the gap before the child at the given index\r\n     *\r\n     * @param childIndex {Integer} The index of the child widget\r\n     * @return {Integer} The gap before the given child\r\n     */\r\n    __computeGapBeforeChild(childIndex) {\r\n      var isFirstInLine = childIndex == this.__childIndex;\r\n      if (isFirstInLine) {\r\n        return this.__children[childIndex].getMarginLeft();\r\n      } else {\r\n        return Math.max(\r\n          this.__children[childIndex - 1].getMarginRight(),\r\n          this.__children[childIndex].getMarginLeft(),\r\n          this.__spacing\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Whether there are more lines\r\n     *\r\n     * @return {Boolean} Whether there are more lines\r\n     */\r\n    hasMoreLines() {\r\n      return this.__hasMoreLines;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,+BAA+B,EAAE;IAC/CC,MAAM,EAAEC,MAAM;IAEd;AACF;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,QAAQ,EAAEC,OAAO,EAAE;MAC3B,IAAI,CAACC,SAAU,GAAGF,QAAQ;MAC1B,IAAI,CAACG,SAAS,GAAGF,OAAO;MAExB,IAAI,CAACG,SAAc,GAAGJ,QAAQ,CAACK,MAAM,GAAG,CAAC;MACzC,IAAI,CAACC,SAAY,GAAG,CAAC;IACvB,CAAC;IAEDC,OAAO,EAAE;MACPL,SAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,SAAc,EAAE,IAAI;MACpBE,SAAY,EAAE,IAAI;MAElB;AACJ;AACA;AACA;AACA;AACA;AACA;MACIE,eAAe,WAAAA,gBAACC,UAAU,EAAE;QAC1B,IAAIA,UAAU,GAAGA,UAAU,IAAIC,QAAQ;QAEvC,IAAI,CAAC,IAAI,CAACN,SAAc,EAAE;UACxB,MAAM,IAAIO,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QAEA,IAAIX,QAAQ,GAAG,IAAI,CAACE,SAAU;QAC9B,IAAIU,UAAU,GAAG,CAAC;QAClB,IAAIC,SAAS,GAAG,CAAC;QACjB,IAAIC,YAAY,GAAG,EAAE;QACrB,IAAIC,UAAU,GAAG,EAAE;QAEnB,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACV,SAAY,EAAEU,CAAC,GAAGhB,QAAQ,CAACK,MAAM,EAAEW,CAAC,EAAE,EAAE;UACxD,IAAIC,KAAK,GAAGjB,QAAQ,CAACgB,CAAC,CAAC;UACvB,IAAIE,IAAI,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC;UAE9B,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAuB,CAACL,CAAC,CAAC;UAC/C,IAAIM,UAAU,GAAGJ,IAAI,CAACK,KAAK,GAAGH,SAAS;UACvC,IAAII,YAAY,GAAGR,CAAC,IAAI,IAAI,CAACV,SAAY;UACzC,IAAI,CAACkB,YAAY,IAAIX,SAAS,GAAGS,UAAU,GAAGb,UAAU,EAAE;YACxD,IAAI,CAACH,SAAY,GAAGU,CAAC;YACrB;UACF;UAEA,IAAIS,WAAW,GACbP,IAAI,CAACQ,MAAM,GAAGT,KAAK,CAACU,YAAY,CAAC,CAAC,GAAGV,KAAK,CAACW,eAAe,CAAC,CAAC;UAC9Dd,YAAY,CAACe,IAAI,CAACZ,KAAK,CAAC;UACxBF,UAAU,CAACc,IAAI,CAACT,SAAS,CAAC;UAC1BP,SAAS,IAAIS,UAAU;UACvBV,UAAU,GAAGkB,IAAI,CAACC,GAAG,CAACnB,UAAU,EAAEa,WAAW,CAAC;UAE9C,IAAIR,KAAK,CAACe,mBAAmB,CAAC,CAAC,CAACC,SAAS,EAAE;YACzC,IAAI,CAAC3B,SAAY,GAAGU,CAAC,GAAG,CAAC;YACzB;UACF;QACF;QAEA,IAAIA,CAAC,IAAIhB,QAAQ,CAACK,MAAM,EAAE;UACxB,IAAI,CAACD,SAAc,GAAG,KAAK;QAC7B;QAEA,OAAO;UACLsB,MAAM,EAAEd,UAAU;UAClBW,KAAK,EAAEV,SAAS;UAChBb,QAAQ,EAAEc,YAAY;UACtBC,UAAU,EAAEA;QACd,CAAC;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIM,SAAuB,WAAAa,UAACC,UAAU,EAAE;QAClC,IAAIC,aAAa,GAAGD,UAAU,IAAI,IAAI,CAAC7B,SAAY;QACnD,IAAI8B,aAAa,EAAE;UACjB,OAAO,IAAI,CAAClC,SAAU,CAACiC,UAAU,CAAC,CAACE,aAAa,CAAC,CAAC;QACpD,CAAC,MAAM;UACL,OAAOP,IAAI,CAACC,GAAG,CACb,IAAI,CAAC7B,SAAU,CAACiC,UAAU,GAAG,CAAC,CAAC,CAACG,cAAc,CAAC,CAAC,EAChD,IAAI,CAACpC,SAAU,CAACiC,UAAU,CAAC,CAACE,aAAa,CAAC,CAAC,EAC3C,IAAI,CAAClC,SACP,CAAC;QACH;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIoC,YAAY,WAAAA,aAAA,EAAG;QACb,OAAO,IAAI,CAACnC,SAAc;MAC5B;IACF;EACF,CAAC,CAAC;EAlIFb,EAAE,CAACiD,EAAE,CAACC,MAAM,CAACC,gBAAgB,CAAChD,aAAa,GAAGA,aAAa;AAAC"
}