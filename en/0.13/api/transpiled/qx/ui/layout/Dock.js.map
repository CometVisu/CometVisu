{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacingX",
    "spacingY",
    "separatorX",
    "separatorY",
    "constructor",
    "call",
    "setSpacingX",
    "setSpacingY",
    "setSeparatorX",
    "setSeparatorY",
    "properties",
    "sort",
    "check",
    "init",
    "apply",
    "nullable",
    "connectSeparators",
    "members",
    "__children",
    "__edges",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "_true",
    "item",
    "name",
    "value",
    "assertInArray",
    "assertNumber",
    "assert",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "_applySort",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__edgeMap",
    "north",
    "south",
    "west",
    "east",
    "center",
    "__alignMap",
    "__rebuildCache",
    "__P_369_4",
    "all",
    "_getLayoutChildren",
    "child",
    "length",
    "high",
    "low",
    "edge",
    "yfirst",
    "getSort",
    "xfirst",
    "i",
    "getLayoutProperties",
    "Error",
    "push",
    "result",
    "concat",
    "edges",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "children",
    "flexibles",
    "hint",
    "props",
    "flex",
    "grow",
    "width",
    "height",
    "offset",
    "widths",
    "heights",
    "separatorWidths",
    "_getSeparatorWidths",
    "getSpacingX",
    "getSpacingY",
    "allocatedWidth",
    "allocatedHeight",
    "x",
    "y",
    "getSizeHint",
    "Math",
    "floor",
    "parseFloat",
    "minWidth",
    "maxWidth",
    "minHeight",
    "maxHeight",
    "getMarginTop",
    "getMarginBottom",
    "getMarginLeft",
    "getMarginRight",
    "min",
    "max",
    "computeFlexOffsets",
    "_clearSeparators",
    "getSeparatorX",
    "getSeparatorY",
    "getConnectSeparators",
    "nextTop",
    "nextLeft",
    "left",
    "top",
    "used",
    "separatorLeft",
    "separatorTop",
    "separatorWidth",
    "separatorHeight",
    "marginTop",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "alignMap",
    "computeVerticalAlignOffset",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "_renderSeparator",
    "getAlignY",
    "decorationManager",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "separatorInstanceX",
    "resolve",
    "separatorInsetsX",
    "getInsets",
    "separatorWidthX",
    "right",
    "separatorInstanceY",
    "separatorInsetsY",
    "separatorWidthY",
    "bottom",
    "_computeSizeHint",
    "marginX",
    "marginY",
    "widthX",
    "minWidthX",
    "heightX",
    "minHeightX",
    "widthY",
    "minWidthY",
    "heightY",
    "minHeightY",
    "spacingSumX",
    "spacingSumY",
    "destruct",
    "Dock"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Dock.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Docks children to one of the edges.\n *\n * *Features*\n *\n * * Percent width for left/right/center attached children\n * * Percent height for top/bottom/center attached children\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Auto sizing\n * * Margins and Spacings\n * * Alignment in orthogonal axis (e.g. alignX of north attached)\n * * Different sort options for children\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>edge</strong> <em>(String)</em>: The edge where the layout item\n *   should be docked. This may be one of <code>north</code>, <code>east</code>,\n *   <code>south</code>, <code>west</code> or <code>center</code>. (Required)</li>\n * <li><strong>width</strong> <em>(String)</em>: Defines a percent\n *   width for the item. The percent width,\n *   when specified, is used instead of the width defined by the size hint.\n *   This is only supported for children added to the north or south edge or\n *   are centered in the middle of the layout.\n *   The minimum and maximum width still takes care of the elements limitations.\n *   It has no influence on the layout's size hint. Percents are mainly useful for\n *   widgets which are sized by the outer hierarchy.\n * </li>\n * <li><strong>height</strong> <em>(String)</em>: Defines a percent\n *   height for the item. The percent height,\n *   when specified, is used instead of the height defined by the size hint.\n *   This is only supported for children added to the west or east edge or\n *   are centered in the middle of the layout.\n *   The minimum and maximum height still takes care of the elements limitations.\n *   It has no influence on the layout's size hint. Percents are mainly useful for\n *   widgets which are sized by the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.Dock();\n *\n * var w1 = new qx.ui.core.Widget();\n * var w2 = new qx.ui.core.Widget();\n * var w3 = new qx.ui.core.Widget();\n *\n * w1.setHeight(200);\n * w2.setWidth(150);\n *\n * var container = new qx.ui.container.Composite(layout);\n * container.add(w1, {edge:\"north\"});\n * container.add(w2, {edge:\"west\"});\n * container.add(w3, {edge:\"center\"});\n * </pre>\n *\n * *Detailed Description*\n *\n * Using this layout, items may be \"docked\" to a specific side\n * of the available space. Each displayed item reduces the available space\n * for the following children. Priorities depend on the position of\n * the child in the internal children list.\n *\n * *External Documentation*\n *\n * <a href='https://qooxdoo.org/documentation/#/desktop/layout/dock.md'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Dock\", {\n  extend: qx.ui.layout.Abstract,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacingX {Integer?0} The horizontal spacing. Sets {@link #spacingX}.\n   * @param spacingY {Integer?0} The vertical spacing. Sets {@link #spacingY}.\n   * @param separatorX {String|qx.ui.decoration.IDecorator} Separator to render between columns\n   * @param separatorY {String|qx.ui.decoration.IDecorator} Separator to render between rows\n   */\n  construct(spacingX, spacingY, separatorX, separatorY) {\n    super();\n\n    if (spacingX) {\n      this.setSpacingX(spacingX);\n    }\n\n    if (spacingY) {\n      this.setSpacingY(spacingY);\n    }\n\n    if (separatorX) {\n      this.setSeparatorX(separatorX);\n    }\n\n    if (separatorY) {\n      this.setSeparatorY(separatorY);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The way the widgets should be displayed (in conjunction with their\n     * position in the childrens array).\n     */\n    sort: {\n      check: [\"auto\", \"y\", \"x\"],\n      init: \"auto\",\n      apply: \"_applySort\"\n    },\n\n    /** Separator lines to use between the horizontal objects */\n    separatorX: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Separator lines to use between the vertical objects */\n    separatorY: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Whether separators should be collapsed so when a spacing is\n     * configured the line go over into each other\n     */\n    connectSeparators: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Horizontal spacing between two children */\n    spacingX: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Vertical spacing between two children */\n    spacingY: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __children: null,\n    __edges: null,\n\n    // overridden\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        this.assertInArray(\n          name,\n          [\"flex\", \"edge\", \"height\", \"width\"],\n          \"The property '\" + name + \"' is not supported by the Dock layout!\"\n        );\n\n        if (name === \"edge\") {\n          this.assertInArray(value, [\n            \"north\",\n            \"south\",\n            \"west\",\n            \"east\",\n            \"center\"\n          ]);\n        } else if (name === \"flex\") {\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        } else {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n      },\n\n      false: null\n    }),\n\n    // property apply\n    _applySort() {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n    /**\n     * @type {Map} Maps edge IDs to numeric values\n     *\n     * @lint ignoreReferenceField(__edgeMap)\n     */\n    __edgeMap: {\n      north: 1,\n      south: 2,\n      west: 3,\n      east: 4,\n      center: 5\n    },\n\n    /**\n     * @type {Map} Maps edges to align values\n     *\n     * @lint ignoreReferenceField(__alignMap)\n     */\n    __alignMap: {\n      1: \"top\",\n      2: \"bottom\",\n      3: \"left\",\n      4: \"right\"\n    },\n\n    /**\n     * Rebuilds cache for sorted children list.\n     *\n     */\n    __rebuildCache() {\n      var all = this._getLayoutChildren();\n      var child, center;\n      var length = all.length;\n\n      var high = [];\n      var low = [];\n      var edge = [];\n\n      var yfirst = this.getSort() === \"y\";\n      var xfirst = this.getSort() === \"x\";\n\n      for (var i = 0; i < length; i++) {\n        child = all[i];\n        edge = child.getLayoutProperties().edge;\n\n        if (edge === \"center\") {\n          if (center) {\n            throw new Error(\n              \"It is not allowed to have more than one child aligned to 'center'!\"\n            );\n          }\n\n          center = child;\n        } else if (xfirst || yfirst) {\n          if (edge === \"north\" || edge === \"south\") {\n            yfirst ? high.push(child) : low.push(child);\n          } else if (edge === \"west\" || edge === \"east\") {\n            yfirst ? low.push(child) : high.push(child);\n          }\n        } else {\n          high.push(child);\n        }\n      }\n\n      // Combine sorted children list\n      var result = high.concat(low);\n      if (center) {\n        result.push(center);\n      }\n\n      this.__children = result;\n\n      // Cache edges for faster access\n      var edges = [];\n      for (var i = 0; i < length; i++) {\n        edge = result[i].getLayoutProperties().edge;\n        edges[i] = this.__edgeMap[edge] || 5;\n      }\n\n      this.__edges = edges;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    renderLayout(availWidth, availHeight, padding) {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n      var edges = this.__edges;\n      var length = children.length;\n      var flexibles, child, hint, props, flex, grow, width, height, offset;\n\n      var widths = [];\n      var heights = [];\n\n      var separatorWidths = this._getSeparatorWidths();\n      var spacingX = this.getSpacingX();\n      var spacingY = this.getSpacingY();\n\n      // **************************************\n      //   Caching children data\n      // **************************************\n\n      var allocatedWidth = -spacingX;\n      var allocatedHeight = -spacingY;\n\n      if (separatorWidths.x) {\n        allocatedWidth -= separatorWidths.x + spacingX;\n      }\n\n      if (separatorWidths.y) {\n        allocatedHeight -= separatorWidths.y + spacingY;\n      }\n\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        props = child.getLayoutProperties();\n        hint = child.getSizeHint();\n\n        width = hint.width;\n        height = hint.height;\n\n        if (props.width != null) {\n          width = Math.floor((availWidth * parseFloat(props.width)) / 100);\n          if (width < hint.minWidth) {\n            width = hint.minWidth;\n          } else if (width > hint.maxWidth) {\n            width = hint.maxWidth;\n          }\n        }\n\n        if (props.height != null) {\n          height = Math.floor((availHeight * parseFloat(props.height)) / 100);\n          if (height < hint.minHeight) {\n            height = hint.minHeight;\n          } else if (height > hint.maxHeight) {\n            height = hint.maxHeight;\n          }\n        }\n\n        widths[i] = width;\n        heights[i] = height;\n\n        // Update allocated width\n        switch (edges[i]) {\n          // north+south\n          case 1:\n          case 2:\n            allocatedHeight +=\n              height +\n              child.getMarginTop() +\n              child.getMarginBottom() +\n              spacingY;\n            if (separatorWidths.y) {\n              allocatedHeight += separatorWidths.y + spacingY;\n            }\n            break;\n\n          // west+east\n          case 3:\n          case 4:\n            allocatedWidth +=\n              width + child.getMarginLeft() + child.getMarginRight() + spacingX;\n            if (separatorWidths.x) {\n              allocatedWidth += separatorWidths.x + spacingX;\n            }\n            break;\n\n          // center\n          default:\n            allocatedWidth +=\n              width + child.getMarginLeft() + child.getMarginRight() + spacingX;\n            allocatedHeight +=\n              height +\n              child.getMarginTop() +\n              child.getMarginBottom() +\n              spacingY;\n\n            if (separatorWidths.x) {\n              allocatedWidth += separatorWidths.x + spacingX;\n            }\n\n            if (separatorWidths.y) {\n              allocatedHeight += separatorWidths.y + spacingY;\n            }\n        }\n      }\n\n      // **************************************\n      //   Horizontal flex support\n      // **************************************\n\n      if (allocatedWidth != availWidth) {\n        flexibles = {};\n        grow = allocatedWidth < availWidth;\n\n        for (var i = 0; i < length; i++) {\n          child = children[i];\n\n          switch (edges[i]) {\n            case 3:\n            case 4:\n            case 5:\n              flex = child.getLayoutProperties().flex;\n\n              // Default flex for centered children is '1'\n              if (flex == null && edges[i] == 5) {\n                flex = 1;\n              }\n\n              if (flex > 0) {\n                hint = child.getSizeHint();\n\n                flexibles[i] = {\n                  min: hint.minWidth,\n                  value: widths[i],\n                  max: hint.maxWidth,\n                  flex: flex\n                };\n              }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availWidth,\n          allocatedWidth\n        );\n\n        for (var i in result) {\n          offset = result[i].offset;\n\n          widths[i] += offset;\n          allocatedWidth += offset;\n        }\n      }\n\n      // **************************************\n      //   Vertical flex support\n      // **************************************\n\n      // Process height for flex stretching/shrinking\n      if (allocatedHeight != availHeight) {\n        flexibles = {};\n        grow = allocatedHeight < availHeight;\n\n        for (var i = 0; i < length; i++) {\n          child = children[i];\n\n          switch (edges[i]) {\n            case 1:\n            case 2:\n            case 5:\n              flex = child.getLayoutProperties().flex;\n\n              // Default flex for centered children is '1'\n              if (flex == null && edges[i] == 5) {\n                flex = 1;\n              }\n\n              if (flex > 0) {\n                hint = child.getSizeHint();\n\n                flexibles[i] = {\n                  min: hint.minHeight,\n                  value: heights[i],\n                  max: hint.maxHeight,\n                  flex: flex\n                };\n              }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availHeight,\n          allocatedHeight\n        );\n\n        for (var i in result) {\n          offset = result[i].offset;\n\n          heights[i] += offset;\n          allocatedHeight += offset;\n        }\n      }\n\n      // **************************************\n      //   Layout children\n      // **************************************\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Prepare loop\n      var separatorX = this.getSeparatorX(),\n        separatorY = this.getSeparatorY();\n      var connectSeparators = this.getConnectSeparators();\n      var nextTop = 0,\n        nextLeft = 0;\n      var left, top, width, height, used, edge;\n      var separatorLeft, separatorTop, separatorWidth, separatorHeight;\n      var marginTop, marginBottom, marginLeft, marginRight;\n      var alignMap = this.__alignMap;\n\n      for (var i = 0; i < length; i++) {\n        // Cache child data\n        child = children[i];\n        edge = edges[i];\n        hint = child.getSizeHint();\n\n        // Cache child margins\n        marginTop = child.getMarginTop();\n        marginBottom = child.getMarginBottom();\n        marginLeft = child.getMarginLeft();\n        marginRight = child.getMarginRight();\n\n        // Calculate child layout\n        switch (edge) {\n          // north + south\n          case 1:\n          case 2:\n            // Full available width\n            width = availWidth - marginLeft - marginRight;\n\n            // Limit width to min/max\n            if (width < hint.minWidth) {\n              width = hint.minWidth;\n            } else if (width > hint.maxWidth) {\n              width = hint.maxWidth;\n            }\n\n            // Child preferred height\n            height = heights[i];\n\n            // Compute position\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                alignMap[edge],\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                child.getAlignX() || \"left\",\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            // Render the separator\n            if (separatorWidths.y) {\n              if (edge == 1) {\n                separatorTop =\n                  nextTop + height + marginTop + spacingY + marginBottom;\n              } else {\n                separatorTop =\n                  nextTop +\n                  availHeight -\n                  height -\n                  marginTop -\n                  spacingY -\n                  marginBottom -\n                  separatorWidths.y;\n              }\n\n              separatorLeft = left;\n              separatorWidth = availWidth;\n\n              if (connectSeparators && separatorLeft > 0) {\n                separatorLeft -= spacingX + marginLeft;\n                separatorWidth += spacingX * 2;\n              } else {\n                separatorLeft -= marginLeft;\n              }\n\n              this._renderSeparator(separatorY, {\n                left: separatorLeft + padding.left,\n                top: separatorTop + padding.top,\n                width: separatorWidth,\n                height: separatorWidths.y\n              });\n            }\n\n            // Update available height\n            used = height + marginTop + marginBottom + spacingY;\n            if (separatorWidths.y) {\n              used += separatorWidths.y + spacingY;\n            }\n\n            availHeight -= used;\n\n            // Update coordinates, for next child\n            if (edge == 1) {\n              nextTop += used;\n            }\n\n            break;\n\n          // west + east\n          case 3:\n          case 4:\n            // Full available height\n            height = availHeight - marginTop - marginBottom;\n\n            // Limit height to min/max\n            if (height < hint.minHeight) {\n              height = hint.minHeight;\n            } else if (height > hint.maxHeight) {\n              height = hint.maxHeight;\n            }\n\n            // Child preferred width\n            width = widths[i];\n\n            // Compute position\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                alignMap[edge],\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                child.getAlignY() || \"top\",\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n\n            // Render the separator\n            if (separatorWidths.x) {\n              if (edge == 3) {\n                separatorLeft =\n                  nextLeft + width + marginLeft + spacingX + marginRight;\n              } else {\n                separatorLeft =\n                  nextLeft +\n                  availWidth -\n                  width -\n                  marginLeft -\n                  spacingX -\n                  marginRight -\n                  separatorWidths.x;\n              }\n\n              separatorTop = top;\n              separatorHeight = availHeight;\n\n              if (connectSeparators && separatorTop > 0) {\n                separatorTop -= spacingY + marginTop;\n                separatorHeight += spacingY * 2;\n              } else {\n                separatorTop -= marginTop;\n              }\n\n              this._renderSeparator(separatorX, {\n                left: separatorLeft + padding.left,\n                top: separatorTop + padding.top,\n                width: separatorWidths.x,\n                height: separatorHeight\n              });\n            }\n\n            // Update available height\n            used = width + marginLeft + marginRight + spacingX;\n            if (separatorWidths.x) {\n              used += separatorWidths.x + spacingX;\n            }\n            availWidth -= used;\n\n            // Update coordinates, for next child\n            if (edge == 3) {\n              nextLeft += used;\n            }\n\n            break;\n\n          // center\n          default:\n            // Calculated width/height\n            width = availWidth - marginLeft - marginRight;\n            height = availHeight - marginTop - marginBottom;\n\n            // Limit width to min/max\n            if (width < hint.minWidth) {\n              width = hint.minWidth;\n            } else if (width > hint.maxWidth) {\n              width = hint.maxWidth;\n            }\n\n            // Limit height to min/max\n            if (height < hint.minHeight) {\n              height = hint.minHeight;\n            } else if (height > hint.maxHeight) {\n              height = hint.maxHeight;\n            }\n\n            // Compute coordinates (respect margins and alignments for both axis)\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                child.getAlignX() || \"left\",\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                child.getAlignY() || \"top\",\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n        }\n\n        // Apply layout\n        child.renderLayout(\n          left + padding.left,\n          top + padding.top,\n          width,\n          height\n        );\n      }\n    },\n\n    /**\n     * Computes the dimensions each separator on both the <code>x</code> and\n     * <code>y</code> axis needs.\n     *\n     * @return {Map} Map with the keys <code>x</code> and\n     *   <code>y</code>\n     */\n    _getSeparatorWidths() {\n      var separatorX = this.getSeparatorX(),\n        separatorY = this.getSeparatorY();\n      if (separatorX || separatorY) {\n        var decorationManager = qx.theme.manager.Decoration.getInstance();\n      }\n\n      if (separatorX) {\n        var separatorInstanceX = decorationManager.resolve(separatorX);\n        var separatorInsetsX = separatorInstanceX.getInsets();\n        var separatorWidthX = separatorInsetsX.left + separatorInsetsX.right;\n      }\n\n      if (separatorY) {\n        var separatorInstanceY = decorationManager.resolve(separatorY);\n        var separatorInsetsY = separatorInstanceY.getInsets();\n        var separatorWidthY = separatorInsetsY.top + separatorInsetsY.bottom;\n      }\n\n      return {\n        x: separatorWidthX || 0,\n        y: separatorWidthY || 0\n      };\n    },\n\n    // overridden\n    _computeSizeHint() {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var children = this.__children;\n      var edges = this.__edges;\n\n      var length = children.length;\n      var hint, child;\n      var marginX, marginY;\n\n      var widthX = 0,\n        minWidthX = 0;\n      var heightX = 0,\n        minHeightX = 0;\n      var widthY = 0,\n        minWidthY = 0;\n      var heightY = 0,\n        minHeightY = 0;\n\n      var separatorWidths = this._getSeparatorWidths();\n      var spacingX = this.getSpacingX(),\n        spacingY = this.getSpacingY();\n      var spacingSumX = -spacingX,\n        spacingSumY = -spacingY;\n\n      if (separatorWidths.x) {\n        spacingSumX -= separatorWidths.x + spacingX;\n      }\n\n      if (separatorWidths.y) {\n        spacingSumY -= separatorWidths.y + spacingY;\n      }\n\n      // Detect children sizes\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Pre-cache margin sums\n        marginX = child.getMarginLeft() + child.getMarginRight();\n        marginY = child.getMarginTop() + child.getMarginBottom();\n\n        // Ok, this part is a bit complicated :)\n        switch (edges[i]) {\n          case 1:\n          case 2:\n            // Find the maximum width used by these fully stretched items\n            // The recommended width used by these must add the currently\n            // occupied width by the orthogonal ordered children.\n            widthY = Math.max(widthY, hint.width + widthX + marginX);\n            minWidthY = Math.max(\n              minWidthY,\n              hint.minWidth + minWidthX + marginX\n            );\n\n            // Add the needed heights of this widget\n            heightY += hint.height + marginY;\n            minHeightY += hint.minHeight + marginY;\n\n            // Add spacing\n            spacingSumY += spacingY;\n            if (separatorWidths.y) {\n              spacingSumY += separatorWidths.y + spacingY;\n            }\n\n            break;\n\n          case 3:\n          case 4:\n            // Find the maximum height used by these fully stretched items\n            // The recommended height used by these must add the currently\n            // occupied height by the orthogonal ordered children.\n            heightX = Math.max(heightX, hint.height + heightY + marginY);\n            minHeightX = Math.max(\n              minHeightX,\n              hint.minHeight + minHeightY + marginY\n            );\n\n            // Add the needed widths of this widget\n            widthX += hint.width + marginX;\n            minWidthX += hint.minWidth + marginX;\n\n            // Add spacing\n            spacingSumX += spacingX;\n            if (separatorWidths.x) {\n              spacingSumX += separatorWidths.x + spacingX;\n            }\n\n            break;\n\n          default:\n            // A centered widget must be added to both sums as\n            // it stretches into the remaining available space.\n            widthX += hint.width + marginX;\n            minWidthX += hint.minWidth + marginX;\n\n            heightY += hint.height + marginY;\n            minHeightY += hint.minHeight + marginY;\n\n            // Add spacing\n            spacingSumX += spacingX;\n            if (separatorWidths.x) {\n              spacingSumX += separatorWidths.x + spacingX;\n            }\n\n            spacingSumY += spacingY;\n            if (separatorWidths.y) {\n              spacingSumY += separatorWidths.y + spacingY;\n            }\n        }\n      }\n\n      var minWidth = Math.max(minWidthX, minWidthY) + spacingSumX;\n      var width = Math.max(widthX, widthY) + spacingSumX;\n      var minHeight = Math.max(minHeightX, minHeightY) + spacingSumY;\n      var height = Math.max(heightX, heightY) + spacingSumY;\n\n      // Return hint\n      return {\n        minWidth: minWidth,\n        width: width,\n        minHeight: minHeight,\n        height: height\n      };\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__edges = this.__children = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,QAAQ;IAE7B;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAE;MACpDd,EAAA,CAAAO,EAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAM,WAAA,CAAAC,IAAA;MAEA,IAAIL,QAAQ,EAAE;QACZ,IAAI,CAACM,WAAW,CAACN,QAAQ,CAAC;MAC5B;MAEA,IAAIC,QAAQ,EAAE;QACZ,IAAI,CAACM,WAAW,CAACN,QAAQ,CAAC;MAC5B;MAEA,IAAIC,UAAU,EAAE;QACd,IAAI,CAACM,aAAa,CAACN,UAAU,CAAC;MAChC;MAEA,IAAIC,UAAU,EAAE;QACd,IAAI,CAACM,aAAa,CAACN,UAAU,CAAC;MAChC;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEO,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,IAAI,EAAE;QACJC,KAAK,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE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"
}