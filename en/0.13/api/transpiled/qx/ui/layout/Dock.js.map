{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacingX",
    "spacingY",
    "separatorX",
    "separatorY",
    "setSpacingX",
    "setSpacingY",
    "setSeparatorX",
    "setSeparatorY",
    "properties",
    "sort",
    "check",
    "init",
    "apply",
    "nullable",
    "connectSeparators",
    "members",
    "__children",
    "__edges",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "item",
    "name",
    "value",
    "assertInArray",
    "assertNumber",
    "assert",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "_applySort",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__edgeMap",
    "north",
    "south",
    "west",
    "east",
    "center",
    "__alignMap",
    "__rebuildCache",
    "all",
    "_getLayoutChildren",
    "child",
    "length",
    "high",
    "low",
    "edge",
    "yfirst",
    "getSort",
    "xfirst",
    "i",
    "getLayoutProperties",
    "Error",
    "push",
    "result",
    "concat",
    "edges",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "children",
    "flexibles",
    "hint",
    "props",
    "flex",
    "grow",
    "width",
    "height",
    "offset",
    "widths",
    "heights",
    "separatorWidths",
    "_getSeparatorWidths",
    "getSpacingX",
    "getSpacingY",
    "allocatedWidth",
    "allocatedHeight",
    "x",
    "y",
    "getSizeHint",
    "Math",
    "floor",
    "parseFloat",
    "minWidth",
    "maxWidth",
    "minHeight",
    "maxHeight",
    "getMarginTop",
    "getMarginBottom",
    "getMarginLeft",
    "getMarginRight",
    "min",
    "max",
    "computeFlexOffsets",
    "_clearSeparators",
    "getSeparatorX",
    "getSeparatorY",
    "getConnectSeparators",
    "nextTop",
    "nextLeft",
    "left",
    "top",
    "used",
    "separatorLeft",
    "separatorTop",
    "separatorWidth",
    "separatorHeight",
    "marginTop",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "alignMap",
    "computeVerticalAlignOffset",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "_renderSeparator",
    "getAlignY",
    "decorationManager",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "separatorInstanceX",
    "resolve",
    "separatorInsetsX",
    "getInsets",
    "separatorWidthX",
    "right",
    "separatorInstanceY",
    "separatorInsetsY",
    "separatorWidthY",
    "bottom",
    "_computeSizeHint",
    "marginX",
    "marginY",
    "widthX",
    "minWidthX",
    "heightX",
    "minHeightX",
    "widthY",
    "minWidthY",
    "heightY",
    "minHeightY",
    "spacingSumX",
    "spacingSumY",
    "destruct",
    "Dock"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Dock.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Docks children to one of the edges.\n *\n * *Features*\n *\n * * Percent width for left/right/center attached children\n * * Percent height for top/bottom/center attached children\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Auto sizing\n * * Margins and Spacings\n * * Alignment in orthogonal axis (e.g. alignX of north attached)\n * * Different sort options for children\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>edge</strong> <em>(String)</em>: The edge where the layout item\n *   should be docked. This may be one of <code>north</code>, <code>east</code>,\n *   <code>south</code>, <code>west</code> or <code>center</code>. (Required)</li>\n * <li><strong>width</strong> <em>(String)</em>: Defines a percent\n *   width for the item. The percent width,\n *   when specified, is used instead of the width defined by the size hint.\n *   This is only supported for children added to the north or south edge or\n *   are centered in the middle of the layout.\n *   The minimum and maximum width still takes care of the elements limitations.\n *   It has no influence on the layout's size hint. Percents are mainly useful for\n *   widgets which are sized by the outer hierarchy.\n * </li>\n * <li><strong>height</strong> <em>(String)</em>: Defines a percent\n *   height for the item. The percent height,\n *   when specified, is used instead of the height defined by the size hint.\n *   This is only supported for children added to the west or east edge or\n *   are centered in the middle of the layout.\n *   The minimum and maximum height still takes care of the elements limitations.\n *   It has no influence on the layout's size hint. Percents are mainly useful for\n *   widgets which are sized by the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.Dock();\n *\n * var w1 = new qx.ui.core.Widget();\n * var w2 = new qx.ui.core.Widget();\n * var w3 = new qx.ui.core.Widget();\n *\n * w1.setHeight(200);\n * w2.setWidth(150);\n *\n * var container = new qx.ui.container.Composite(layout);\n * container.add(w1, {edge:\"north\"});\n * container.add(w2, {edge:\"west\"});\n * container.add(w3, {edge:\"center\"});\n * </pre>\n *\n * *Detailed Description*\n *\n * Using this layout, items may be \"docked\" to a specific side\n * of the available space. Each displayed item reduces the available space\n * for the following children. Priorities depend on the position of\n * the child in the internal children list.\n *\n * *External Documentation*\n *\n * <a href='https://qooxdoo.org/documentation/#/desktop/layout/dock.md'>\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\n */\nqx.Class.define(\"qx.ui.layout.Dock\", {\n  extend: qx.ui.layout.Abstract,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacingX {Integer?0} The horizontal spacing. Sets {@link #spacingX}.\n   * @param spacingY {Integer?0} The vertical spacing. Sets {@link #spacingY}.\n   * @param separatorX {String|qx.ui.decoration.IDecorator} Separator to render between columns\n   * @param separatorY {String|qx.ui.decoration.IDecorator} Separator to render between rows\n   */\n  construct(spacingX, spacingY, separatorX, separatorY) {\n    super();\n\n    if (spacingX) {\n      this.setSpacingX(spacingX);\n    }\n\n    if (spacingY) {\n      this.setSpacingY(spacingY);\n    }\n\n    if (separatorX) {\n      this.setSeparatorX(separatorX);\n    }\n\n    if (separatorY) {\n      this.setSeparatorY(separatorY);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * The way the widgets should be displayed (in conjunction with their\n     * position in the childrens array).\n     */\n    sort: {\n      check: [\"auto\", \"y\", \"x\"],\n      init: \"auto\",\n      apply: \"_applySort\"\n    },\n\n    /** Separator lines to use between the horizontal objects */\n    separatorX: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Separator lines to use between the vertical objects */\n    separatorY: {\n      check: \"Decorator\",\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Whether separators should be collapsed so when a spacing is\n     * configured the line go over into each other\n     */\n    connectSeparators: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Horizontal spacing between two children */\n    spacingX: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Vertical spacing between two children */\n    spacingY: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __children: null,\n    __edges: null,\n\n    // overridden\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        this.assertInArray(\n          name,\n          [\"flex\", \"edge\", \"height\", \"width\"],\n          \"The property '\" + name + \"' is not supported by the Dock layout!\"\n        );\n\n        if (name === \"edge\") {\n          this.assertInArray(value, [\n            \"north\",\n            \"south\",\n            \"west\",\n            \"east\",\n            \"center\"\n          ]);\n        } else if (name === \"flex\") {\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        } else {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n      },\n\n      false: null\n    }),\n\n    // property apply\n    _applySort() {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n    /**\n     * @type {Map} Maps edge IDs to numeric values\n     *\n     * @lint ignoreReferenceField(__edgeMap)\n     */\n    __edgeMap: {\n      north: 1,\n      south: 2,\n      west: 3,\n      east: 4,\n      center: 5\n    },\n\n    /**\n     * @type {Map} Maps edges to align values\n     *\n     * @lint ignoreReferenceField(__alignMap)\n     */\n    __alignMap: {\n      1: \"top\",\n      2: \"bottom\",\n      3: \"left\",\n      4: \"right\"\n    },\n\n    /**\n     * Rebuilds cache for sorted children list.\n     *\n     */\n    __rebuildCache() {\n      var all = this._getLayoutChildren();\n      var child, center;\n      var length = all.length;\n\n      var high = [];\n      var low = [];\n      var edge = [];\n\n      var yfirst = this.getSort() === \"y\";\n      var xfirst = this.getSort() === \"x\";\n\n      for (var i = 0; i < length; i++) {\n        child = all[i];\n        edge = child.getLayoutProperties().edge;\n\n        if (edge === \"center\") {\n          if (center) {\n            throw new Error(\n              \"It is not allowed to have more than one child aligned to 'center'!\"\n            );\n          }\n\n          center = child;\n        } else if (xfirst || yfirst) {\n          if (edge === \"north\" || edge === \"south\") {\n            yfirst ? high.push(child) : low.push(child);\n          } else if (edge === \"west\" || edge === \"east\") {\n            yfirst ? low.push(child) : high.push(child);\n          }\n        } else {\n          high.push(child);\n        }\n      }\n\n      // Combine sorted children list\n      var result = high.concat(low);\n      if (center) {\n        result.push(center);\n      }\n\n      this.__children = result;\n\n      // Cache edges for faster access\n      var edges = [];\n      for (var i = 0; i < length; i++) {\n        edge = result[i].getLayoutProperties().edge;\n        edges[i] = this.__edgeMap[edge] || 5;\n      }\n\n      this.__edges = edges;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    renderLayout(availWidth, availHeight, padding) {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n      var edges = this.__edges;\n      var length = children.length;\n      var flexibles, child, hint, props, flex, grow, width, height, offset;\n\n      var widths = [];\n      var heights = [];\n\n      var separatorWidths = this._getSeparatorWidths();\n      var spacingX = this.getSpacingX();\n      var spacingY = this.getSpacingY();\n\n      // **************************************\n      //   Caching children data\n      // **************************************\n\n      var allocatedWidth = -spacingX;\n      var allocatedHeight = -spacingY;\n\n      if (separatorWidths.x) {\n        allocatedWidth -= separatorWidths.x + spacingX;\n      }\n\n      if (separatorWidths.y) {\n        allocatedHeight -= separatorWidths.y + spacingY;\n      }\n\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        props = child.getLayoutProperties();\n        hint = child.getSizeHint();\n\n        width = hint.width;\n        height = hint.height;\n\n        if (props.width != null) {\n          width = Math.floor((availWidth * parseFloat(props.width)) / 100);\n          if (width < hint.minWidth) {\n            width = hint.minWidth;\n          } else if (width > hint.maxWidth) {\n            width = hint.maxWidth;\n          }\n        }\n\n        if (props.height != null) {\n          height = Math.floor((availHeight * parseFloat(props.height)) / 100);\n          if (height < hint.minHeight) {\n            height = hint.minHeight;\n          } else if (height > hint.maxHeight) {\n            height = hint.maxHeight;\n          }\n        }\n\n        widths[i] = width;\n        heights[i] = height;\n\n        // Update allocated width\n        switch (edges[i]) {\n          // north+south\n          case 1:\n          case 2:\n            allocatedHeight +=\n              height +\n              child.getMarginTop() +\n              child.getMarginBottom() +\n              spacingY;\n            if (separatorWidths.y) {\n              allocatedHeight += separatorWidths.y + spacingY;\n            }\n            break;\n\n          // west+east\n          case 3:\n          case 4:\n            allocatedWidth +=\n              width + child.getMarginLeft() + child.getMarginRight() + spacingX;\n            if (separatorWidths.x) {\n              allocatedWidth += separatorWidths.x + spacingX;\n            }\n            break;\n\n          // center\n          default:\n            allocatedWidth +=\n              width + child.getMarginLeft() + child.getMarginRight() + spacingX;\n            allocatedHeight +=\n              height +\n              child.getMarginTop() +\n              child.getMarginBottom() +\n              spacingY;\n\n            if (separatorWidths.x) {\n              allocatedWidth += separatorWidths.x + spacingX;\n            }\n\n            if (separatorWidths.y) {\n              allocatedHeight += separatorWidths.y + spacingY;\n            }\n        }\n      }\n\n      // **************************************\n      //   Horizontal flex support\n      // **************************************\n\n      if (allocatedWidth != availWidth) {\n        flexibles = {};\n        grow = allocatedWidth < availWidth;\n\n        for (var i = 0; i < length; i++) {\n          child = children[i];\n\n          switch (edges[i]) {\n            case 3:\n            case 4:\n            case 5:\n              flex = child.getLayoutProperties().flex;\n\n              // Default flex for centered children is '1'\n              if (flex == null && edges[i] == 5) {\n                flex = 1;\n              }\n\n              if (flex > 0) {\n                hint = child.getSizeHint();\n\n                flexibles[i] = {\n                  min: hint.minWidth,\n                  value: widths[i],\n                  max: hint.maxWidth,\n                  flex: flex\n                };\n              }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availWidth,\n          allocatedWidth\n        );\n\n        for (var i in result) {\n          offset = result[i].offset;\n\n          widths[i] += offset;\n          allocatedWidth += offset;\n        }\n      }\n\n      // **************************************\n      //   Vertical flex support\n      // **************************************\n\n      // Process height for flex stretching/shrinking\n      if (allocatedHeight != availHeight) {\n        flexibles = {};\n        grow = allocatedHeight < availHeight;\n\n        for (var i = 0; i < length; i++) {\n          child = children[i];\n\n          switch (edges[i]) {\n            case 1:\n            case 2:\n            case 5:\n              flex = child.getLayoutProperties().flex;\n\n              // Default flex for centered children is '1'\n              if (flex == null && edges[i] == 5) {\n                flex = 1;\n              }\n\n              if (flex > 0) {\n                hint = child.getSizeHint();\n\n                flexibles[i] = {\n                  min: hint.minHeight,\n                  value: heights[i],\n                  max: hint.maxHeight,\n                  flex: flex\n                };\n              }\n          }\n        }\n\n        var result = util.computeFlexOffsets(\n          flexibles,\n          availHeight,\n          allocatedHeight\n        );\n\n        for (var i in result) {\n          offset = result[i].offset;\n\n          heights[i] += offset;\n          allocatedHeight += offset;\n        }\n      }\n\n      // **************************************\n      //   Layout children\n      // **************************************\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Prepare loop\n      var separatorX = this.getSeparatorX(),\n        separatorY = this.getSeparatorY();\n      var connectSeparators = this.getConnectSeparators();\n      var nextTop = 0,\n        nextLeft = 0;\n      var left, top, width, height, used, edge;\n      var separatorLeft, separatorTop, separatorWidth, separatorHeight;\n      var marginTop, marginBottom, marginLeft, marginRight;\n      var alignMap = this.__alignMap;\n\n      for (var i = 0; i < length; i++) {\n        // Cache child data\n        child = children[i];\n        edge = edges[i];\n        hint = child.getSizeHint();\n\n        // Cache child margins\n        marginTop = child.getMarginTop();\n        marginBottom = child.getMarginBottom();\n        marginLeft = child.getMarginLeft();\n        marginRight = child.getMarginRight();\n\n        // Calculate child layout\n        switch (edge) {\n          // north + south\n          case 1:\n          case 2:\n            // Full available width\n            width = availWidth - marginLeft - marginRight;\n\n            // Limit width to min/max\n            if (width < hint.minWidth) {\n              width = hint.minWidth;\n            } else if (width > hint.maxWidth) {\n              width = hint.maxWidth;\n            }\n\n            // Child preferred height\n            height = heights[i];\n\n            // Compute position\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                alignMap[edge],\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                child.getAlignX() || \"left\",\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            // Render the separator\n            if (separatorWidths.y) {\n              if (edge == 1) {\n                separatorTop =\n                  nextTop + height + marginTop + spacingY + marginBottom;\n              } else {\n                separatorTop =\n                  nextTop +\n                  availHeight -\n                  height -\n                  marginTop -\n                  spacingY -\n                  marginBottom -\n                  separatorWidths.y;\n              }\n\n              separatorLeft = left;\n              separatorWidth = availWidth;\n\n              if (connectSeparators && separatorLeft > 0) {\n                separatorLeft -= spacingX + marginLeft;\n                separatorWidth += spacingX * 2;\n              } else {\n                separatorLeft -= marginLeft;\n              }\n\n              this._renderSeparator(separatorY, {\n                left: separatorLeft + padding.left,\n                top: separatorTop + padding.top,\n                width: separatorWidth,\n                height: separatorWidths.y\n              });\n            }\n\n            // Update available height\n            used = height + marginTop + marginBottom + spacingY;\n            if (separatorWidths.y) {\n              used += separatorWidths.y + spacingY;\n            }\n\n            availHeight -= used;\n\n            // Update coordinates, for next child\n            if (edge == 1) {\n              nextTop += used;\n            }\n\n            break;\n\n          // west + east\n          case 3:\n          case 4:\n            // Full available height\n            height = availHeight - marginTop - marginBottom;\n\n            // Limit height to min/max\n            if (height < hint.minHeight) {\n              height = hint.minHeight;\n            } else if (height > hint.maxHeight) {\n              height = hint.maxHeight;\n            }\n\n            // Child preferred width\n            width = widths[i];\n\n            // Compute position\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                alignMap[edge],\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                child.getAlignY() || \"top\",\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n\n            // Render the separator\n            if (separatorWidths.x) {\n              if (edge == 3) {\n                separatorLeft =\n                  nextLeft + width + marginLeft + spacingX + marginRight;\n              } else {\n                separatorLeft =\n                  nextLeft +\n                  availWidth -\n                  width -\n                  marginLeft -\n                  spacingX -\n                  marginRight -\n                  separatorWidths.x;\n              }\n\n              separatorTop = top;\n              separatorHeight = availHeight;\n\n              if (connectSeparators && separatorTop > 0) {\n                separatorTop -= spacingY + marginTop;\n                separatorHeight += spacingY * 2;\n              } else {\n                separatorTop -= marginTop;\n              }\n\n              this._renderSeparator(separatorX, {\n                left: separatorLeft + padding.left,\n                top: separatorTop + padding.top,\n                width: separatorWidths.x,\n                height: separatorHeight\n              });\n            }\n\n            // Update available height\n            used = width + marginLeft + marginRight + spacingX;\n            if (separatorWidths.x) {\n              used += separatorWidths.x + spacingX;\n            }\n            availWidth -= used;\n\n            // Update coordinates, for next child\n            if (edge == 3) {\n              nextLeft += used;\n            }\n\n            break;\n\n          // center\n          default:\n            // Calculated width/height\n            width = availWidth - marginLeft - marginRight;\n            height = availHeight - marginTop - marginBottom;\n\n            // Limit width to min/max\n            if (width < hint.minWidth) {\n              width = hint.minWidth;\n            } else if (width > hint.maxWidth) {\n              width = hint.maxWidth;\n            }\n\n            // Limit height to min/max\n            if (height < hint.minHeight) {\n              height = hint.minHeight;\n            } else if (height > hint.maxHeight) {\n              height = hint.maxHeight;\n            }\n\n            // Compute coordinates (respect margins and alignments for both axis)\n            left =\n              nextLeft +\n              util.computeHorizontalAlignOffset(\n                child.getAlignX() || \"left\",\n                width,\n                availWidth,\n                marginLeft,\n                marginRight\n              );\n\n            top =\n              nextTop +\n              util.computeVerticalAlignOffset(\n                child.getAlignY() || \"top\",\n                height,\n                availHeight,\n                marginTop,\n                marginBottom\n              );\n        }\n\n        // Apply layout\n        child.renderLayout(\n          left + padding.left,\n          top + padding.top,\n          width,\n          height\n        );\n      }\n    },\n\n    /**\n     * Computes the dimensions each separator on both the <code>x</code> and\n     * <code>y</code> axis needs.\n     *\n     * @return {Map} Map with the keys <code>x</code> and\n     *   <code>y</code>\n     */\n    _getSeparatorWidths() {\n      var separatorX = this.getSeparatorX(),\n        separatorY = this.getSeparatorY();\n      if (separatorX || separatorY) {\n        var decorationManager = qx.theme.manager.Decoration.getInstance();\n      }\n\n      if (separatorX) {\n        var separatorInstanceX = decorationManager.resolve(separatorX);\n        var separatorInsetsX = separatorInstanceX.getInsets();\n        var separatorWidthX = separatorInsetsX.left + separatorInsetsX.right;\n      }\n\n      if (separatorY) {\n        var separatorInstanceY = decorationManager.resolve(separatorY);\n        var separatorInsetsY = separatorInstanceY.getInsets();\n        var separatorWidthY = separatorInsetsY.top + separatorInsetsY.bottom;\n      }\n\n      return {\n        x: separatorWidthX || 0,\n        y: separatorWidthY || 0\n      };\n    },\n\n    // overridden\n    _computeSizeHint() {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var children = this.__children;\n      var edges = this.__edges;\n\n      var length = children.length;\n      var hint, child;\n      var marginX, marginY;\n\n      var widthX = 0,\n        minWidthX = 0;\n      var heightX = 0,\n        minHeightX = 0;\n      var widthY = 0,\n        minWidthY = 0;\n      var heightY = 0,\n        minHeightY = 0;\n\n      var separatorWidths = this._getSeparatorWidths();\n      var spacingX = this.getSpacingX(),\n        spacingY = this.getSpacingY();\n      var spacingSumX = -spacingX,\n        spacingSumY = -spacingY;\n\n      if (separatorWidths.x) {\n        spacingSumX -= separatorWidths.x + spacingX;\n      }\n\n      if (separatorWidths.y) {\n        spacingSumY -= separatorWidths.y + spacingY;\n      }\n\n      // Detect children sizes\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Pre-cache margin sums\n        marginX = child.getMarginLeft() + child.getMarginRight();\n        marginY = child.getMarginTop() + child.getMarginBottom();\n\n        // Ok, this part is a bit complicated :)\n        switch (edges[i]) {\n          case 1:\n          case 2:\n            // Find the maximum width used by these fully stretched items\n            // The recommended width used by these must add the currently\n            // occupied width by the orthogonal ordered children.\n            widthY = Math.max(widthY, hint.width + widthX + marginX);\n            minWidthY = Math.max(\n              minWidthY,\n              hint.minWidth + minWidthX + marginX\n            );\n\n            // Add the needed heights of this widget\n            heightY += hint.height + marginY;\n            minHeightY += hint.minHeight + marginY;\n\n            // Add spacing\n            spacingSumY += spacingY;\n            if (separatorWidths.y) {\n              spacingSumY += separatorWidths.y + spacingY;\n            }\n\n            break;\n\n          case 3:\n          case 4:\n            // Find the maximum height used by these fully stretched items\n            // The recommended height used by these must add the currently\n            // occupied height by the orthogonal ordered children.\n            heightX = Math.max(heightX, hint.height + heightY + marginY);\n            minHeightX = Math.max(\n              minHeightX,\n              hint.minHeight + minHeightY + marginY\n            );\n\n            // Add the needed widths of this widget\n            widthX += hint.width + marginX;\n            minWidthX += hint.minWidth + marginX;\n\n            // Add spacing\n            spacingSumX += spacingX;\n            if (separatorWidths.x) {\n              spacingSumX += separatorWidths.x + spacingX;\n            }\n\n            break;\n\n          default:\n            // A centered widget must be added to both sums as\n            // it stretches into the remaining available space.\n            widthX += hint.width + marginX;\n            minWidthX += hint.minWidth + marginX;\n\n            heightY += hint.height + marginY;\n            minHeightY += hint.minHeight + marginY;\n\n            // Add spacing\n            spacingSumX += spacingX;\n            if (separatorWidths.x) {\n              spacingSumX += separatorWidths.x + spacingX;\n            }\n\n            spacingSumY += spacingY;\n            if (separatorWidths.y) {\n              spacingSumY += separatorWidths.y + spacingY;\n            }\n        }\n      }\n\n      var minWidth = Math.max(minWidthX, minWidthY) + spacingSumX;\n      var width = Math.max(widthX, widthY) + spacingSumX;\n      var minHeight = Math.max(minHeightX, minHeightY) + spacingSumY;\n      var height = Math.max(heightX, heightY) + spacingSumY;\n\n      // Return hint\n      return {\n        minWidth: minWidth,\n        width: width,\n        minHeight: minHeight,\n        height: height\n      };\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__edges = this.__children = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EAAqC;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaC,QADc;;IAGnC;AACF;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAfmC,qBAezBC,QAfyB,EAefC,QAfe,EAeLC,UAfK,EAeOC,UAfP,EAemB;MACpD;;MAEA,IAAIH,QAAJ,EAAc;QACZ,KAAKI,WAAL,CAAiBJ,QAAjB;MACD;;MAED,IAAIC,QAAJ,EAAc;QACZ,KAAKI,WAAL,CAAiBJ,QAAjB;MACD;;MAED,IAAIC,UAAJ,EAAgB;QACd,KAAKI,aAAL,CAAmBJ,UAAnB;MACD;;MAED,IAAIC,UAAJ,EAAgB;QACd,KAAKI,aAAL,CAAmBJ,UAAnB;MACD;IACF,CAjCkC;;IAmCnC;AACF;AACA;AACA;AACA;IAEEK,UAAU,EAAE;MACV;AACJ;AACA;AACA;MACIC,IAAI,EAAE;QACJC,KAAK,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,CADH;QAEJC,IAAI,EAAE,MAFF;QAGJC,KAAK,EAAE;MAHH,CALI;;MAWV;MACAV,UAAU,EAAE;QACVQ,KA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"
}