{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacingX",
    "spacingY",
    "alignX",
    "constructor",
    "call",
    "setSpacingX",
    "setSpacingY",
    "setAlignX",
    "properties",
    "check",
    "init",
    "apply",
    "alignY",
    "reversed",
    "members",
    "verifyLayoutProperty",
    "core",
    "Environment",
    "select",
    "_true",
    "item",
    "name",
    "value",
    "validProperties",
    "assertInArray",
    "connectToWidget",
    "widget",
    "Flow",
    "superclass",
    "prototype",
    "setAllowShrinkY",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "children",
    "_getLayoutChildren",
    "getReversed",
    "concat",
    "reverse",
    "lineCalculator",
    "LineSizeIterator",
    "getSpacingX",
    "lineTop",
    "top",
    "hasMoreLines",
    "line",
    "computeNextLine",
    "__renderLine",
    "height",
    "getSpacingY",
    "__P_378_0",
    "util",
    "Util",
    "left",
    "getAlignX",
    "width",
    "Math",
    "round",
    "i",
    "length",
    "child",
    "size",
    "getSizeHint",
    "marginTop",
    "getMarginTop",
    "marginBottom",
    "getMarginBottom",
    "computeVerticalAlignOffset",
    "getAlignY",
    "layoutProps",
    "getLayoutProperties",
    "stretch",
    "gapsBefore",
    "_computeSizeHint",
    "__computeSize",
    "Infinity",
    "hasHeightForWidth",
    "getHeightForWidth",
    "getLastLineChildren",
    "lineData",
    "__P_378_1",
    "lineCount",
    "max"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Flow.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2008 Dihedrals.com, http://www.dihedrals.com\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Chris Banford (zermattchris)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * A basic layout, which supports positioning of child widgets in a 'flowing'\r\n * manner, starting at the container's top/left position, placing children left to right\r\n * (like a HBox) until the there's no remaining room for the next child. When\r\n * out of room on the current line of elements, a new line is started, cleared\r\n * below the tallest child of the preceding line -- a bit like using 'float'\r\n * in CSS, except that a new line wraps all the way back to the left.\r\n *\r\n * *Features*\r\n *\r\n * <ul>\r\n * <li> Reversing children order </li>\r\n * <li> Manual line breaks </li>\r\n * <li> Horizontal alignment of lines </li>\r\n * <li> Vertical alignment of individual widgets within a line </li>\r\n * <li> Margins with horizontal margin collapsing </li>\r\n * <li> Horizontal and vertical spacing </li>\r\n * <li> Height for width calculations </li>\r\n * <li> Auto-sizing </li>\r\n * </ul>\r\n *\r\n * *Item Properties*\r\n *\r\n * <ul>\r\n * <li><strong>lineBreak</strong> <em>(Boolean)</em>: If set to <code>true</code>\r\n *   a forced line break will happen after this child widget.\r\n * </li>\r\n * <li><strong>stretch</strong> <em>(Boolean)</em>: If set to <code>true</code>\r\n *   the widget will be stretched to the remaining line width. This requires\r\n *   lineBreak to be true.\r\n * </li>\r\n\r\n * </ul>\r\n *\r\n * *Example*\r\n *\r\n * Here is a little example of how to use the Flow layout.\r\n *\r\n * <pre class=\"javascript\">\r\n *  var flowlayout = new qx.ui.layout.Flow();\r\n *\r\n *  flowlayout.setAlignX( \"center\" );  // Align children to the X axis of the container (left|center|right)\r\n *\r\n *  var container = new qx.ui.container.Composite(flowlayout);\r\n *  this.getRoot().add(container, {edge: 0});\r\n *\r\n *  var button1 = new qx.ui.form.Button(\"1. First Button\", \"flowlayout/test.png\");\r\n *  container.add(button1);\r\n *\r\n *  var button2 = new qx.ui.form.Button(\"2. Second longer Button...\", \"flowlayout/test.png\");\r\n *  // Have this child create a break in the current Line (next child will always start a new Line)\r\n *  container.add(button2, {lineBreak: true});\r\n *\r\n *  var button3 = new qx.ui.form.Button(\"3rd really, really, really long Button\", \"flowlayout/test.png\");\r\n *  button3.setHeight(100);  // tall button\r\n *  container.add(button3);\r\n *\r\n *  var button4 = new qx.ui.form.Button(\"Number 4\", \"flowlayout/test.png\");\r\n *  button4.setAlignY(\"bottom\");\r\n *  container.add(button4);\r\n *\r\n *  var button5 = new qx.ui.form.Button(\"20px Margins around the great big 5th button!\");\r\n *  button5.setHeight(100);  // tall button\r\n *  button5.setMargin(20);\r\n *  container.add(button5, {lineBreak: true});    // Line break after this button.\r\n *\r\n *  var button6 = new qx.ui.form.Button(\"Number 6\", \"flowlayout/test.png\");\r\n *  button6.setAlignY(\"middle\");  // Align this child to the vertical center of this line.\r\n *  container.add(button6);\r\n *\r\n *  var button7 = new qx.ui.form.Button(\"7th a wide, short button\", \"flowlayout/test.png\");\r\n *  button7.setMaxHeight(20);  // short button\r\n *  container.add(button7);\r\n * </pre>\r\n *\r\n * *External Documentation*\r\n *\r\n * <a href='https://qooxdoo.org/documentation/#/desktop/layout/flow.md'>\r\n * Extended documentation</a> and links to demos of this layout in the qooxdoo manual.\r\n */\r\nqx.Class.define(\"qx.ui.layout.Flow\", {\r\n  extend: qx.ui.layout.Abstract,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     CONSTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  /**\r\n   * @param spacingX {Integer?0} The spacing between child widgets {@link #spacingX}.\r\n   * @param spacingY {Integer?0} The spacing between the lines {@link #spacingY}.\r\n   * @param alignX {String?\"left\"} Horizontal alignment of the whole children\r\n   *     block {@link #alignX}.\r\n   */\r\n  construct(spacingX, spacingY, alignX) {\r\n    super();\r\n\r\n    if (spacingX) {\r\n      this.setSpacingX(spacingX);\r\n    }\r\n\r\n    if (spacingY) {\r\n      this.setSpacingY(spacingY);\r\n    }\r\n\r\n    if (alignX) {\r\n      this.setAlignX(alignX);\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /**\r\n     * Horizontal alignment of the whole children block. The horizontal\r\n     * alignment of the child is completely ignored in HBoxes (\r\n     * {@link qx.ui.core.LayoutItem#alignX}).\r\n     */\r\n    alignX: {\r\n      check: [\"left\", \"center\", \"right\"],\r\n      init: \"left\",\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /**\r\n     * Vertical alignment of each child. Can be overridden through\r\n     * {@link qx.ui.core.LayoutItem#alignY}.\r\n     */\r\n    alignY: {\r\n      check: [\"top\", \"middle\", \"bottom\"],\r\n      init: \"top\",\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /** Horizontal spacing between two children */\r\n    spacingX: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /**\r\n     * The vertical spacing between the lines.\r\n     */\r\n    spacingY: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      apply: \"_applyLayoutChange\"\r\n    },\r\n\r\n    /** Whether the actual children list should be laid out in reversed order. */\r\n    reversed: {\r\n      check: \"Boolean\",\r\n      init: false,\r\n      apply: \"_applyLayoutChange\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LAYOUT INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\r\n      true(item, name, value) {\r\n        var validProperties = [\"lineBreak\", \"stretch\"];\r\n        this.assertInArray(\r\n          name,\r\n          validProperties,\r\n          \"The property '\" + name + \"' is not supported by the flow layout!\"\r\n        );\r\n      },\r\n\r\n      false: null\r\n    }),\r\n\r\n    // overridden\r\n    connectToWidget(widget) {\r\n      super.connectToWidget(widget);\r\n\r\n      // Necessary to be able to calculate the lines for the flow layout.\r\n      // Otherwise the layout calculates the needed width and height by using\r\n      // only one line of items which is leading to the wrong height. This\r\n      // wrong height does e.g. suppress scrolling since the scroll pane does\r\n      // not know about the correct needed height.\r\n      if (widget) {\r\n        widget.setAllowShrinkY(false);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * The FlowLayout tries to add as many Children as possible to the current 'Line'\r\n     * and when it sees that the next Child won't fit, it starts on a new Line, continuing\r\n     * until all the Children have been added.\r\n     * To enable alignX \"left\", \"center\", \"right\" renderLayout has to calculate the positions\r\n     * of all a Line's children before it draws them.\r\n     *\r\n     * @param availWidth {Integer} Final width available for the content (in pixel)\r\n     * @param availHeight {Integer} Final height available for the content (in pixel)\r\n     * @param padding {Map} Map containing the padding values. Keys:\r\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\r\n     */\r\n    renderLayout(availWidth, availHeight, padding) {\r\n      var children = this._getLayoutChildren();\r\n\r\n      if (this.getReversed()) {\r\n        children = children.concat().reverse();\r\n      }\r\n\r\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\r\n        children,\r\n        this.getSpacingX()\r\n      );\r\n\r\n      var lineTop = padding.top;\r\n      while (lineCalculator.hasMoreLines()) {\r\n        var line = lineCalculator.computeNextLine(availWidth);\r\n        this.__renderLine(line, lineTop, availWidth, padding);\r\n        lineTop += line.height + this.getSpacingY();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Render a line in the flow layout\r\n     *\r\n     * @param line {Map} A line configuration as returned by\r\n     *    {@link LineSizeIterator#computeNextLine}.\r\n     * @param lineTop {Integer} The line's top position\r\n     * @param availWidth {Integer} The available line width\r\n     * @param padding {Map} Map containing the padding values. Keys:\r\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\r\n     */\r\n    __renderLine(line, lineTop, availWidth, padding) {\r\n      var util = qx.ui.layout.Util;\r\n\r\n      var left = padding.left;\r\n      if (this.getAlignX() != \"left\") {\r\n        left = padding.left + availWidth - line.width;\r\n        if (this.getAlignX() == \"center\") {\r\n          left = padding.left + Math.round((availWidth - line.width) / 2);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < line.children.length; i++) {\r\n        var child = line.children[i];\r\n        var size = child.getSizeHint();\r\n        var marginTop = child.getMarginTop();\r\n        var marginBottom = child.getMarginBottom();\r\n\r\n        var top = util.computeVerticalAlignOffset(\r\n          child.getAlignY() || this.getAlignY(),\r\n          marginTop + size.height + marginBottom,\r\n          line.height,\r\n          marginTop,\r\n          marginBottom\r\n        );\r\n\r\n        var layoutProps = child.getLayoutProperties();\r\n        if (layoutProps.stretch && layoutProps.stretch) {\r\n          size.width += availWidth - line.width;\r\n        }\r\n\r\n        child.renderLayout(\r\n          left + line.gapsBefore[i],\r\n          lineTop + top,\r\n          size.width,\r\n          size.height\r\n        );\r\n\r\n        left += line.gapsBefore[i] + size.width;\r\n      }\r\n    },\r\n\r\n    // overridden\r\n    _computeSizeHint() {\r\n      return this.__computeSize(Infinity);\r\n    },\r\n\r\n    // overridden\r\n    hasHeightForWidth() {\r\n      return true;\r\n    },\r\n\r\n    // overridden\r\n    getHeightForWidth(width) {\r\n      return this.__computeSize(width).height;\r\n    },\r\n\r\n    /**\r\n     * Returns the list of children fitting in the last row of the given width.\r\n     * @param width {Number} The width to use for the calculation.\r\n     * @return {Array} List of children in the first row.\r\n     */\r\n    getLastLineChildren(width) {\r\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\r\n        this._getLayoutChildren(),\r\n        this.getSpacingX()\r\n      );\r\n\r\n      var lineData = [];\r\n      while (lineCalculator.hasMoreLines()) {\r\n        lineData = lineCalculator.computeNextLine(width).children;\r\n      }\r\n\r\n      return lineData;\r\n    },\r\n\r\n    /**\r\n     * Compute the preferred size optionally constrained by the available width\r\n     *\r\n     * @param availWidth {Integer} The available width\r\n     * @return {Map} Map containing the preferred height and width of the layout\r\n     */\r\n    __computeSize(availWidth) {\r\n      var lineCalculator = new qx.ui.layout.LineSizeIterator(\r\n        this._getLayoutChildren(),\r\n        this.getSpacingX()\r\n      );\r\n\r\n      var height = 0;\r\n      var width = 0;\r\n      var lineCount = 0;\r\n\r\n      while (lineCalculator.hasMoreLines()) {\r\n        var line = lineCalculator.computeNextLine(availWidth);\r\n        lineCount += 1;\r\n        width = Math.max(width, line.width);\r\n        height += line.height;\r\n      }\r\n\r\n      return {\r\n        width: width,\r\n        height: height + this.getSpacingY() * (lineCount - 1)\r\n      };\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,mBAAmB,EAAE;IACnCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,MAAM,CAACC,QAAQ;IAE7B;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MACpCb,EAAA,CAAAO,EAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAK,WAAA,CAAAC,IAAA;MAEA,IAAIJ,QAAQ,EAAE;QACZ,IAAI,CAACK,WAAW,CAACL,QAAQ,CAAC;MAC5B;MAEA,IAAIC,QAAQ,EAAE;QACZ,IAAI,CAACK,WAAW,CAACL,QAAQ,CAAC;MAC5B;MAEA,IAAIC,MAAM,EAAE;QACV,IAAI,CAACK,SAAS,CAACL,MAAM,CAAC;MACxB;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEM,UAAU,EAAE;MACV;AACJ;AACA;AACA;AACA;MACIN,MAAM,EAAE;QACNO,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC;QAClCC,IAAI,EA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"
}