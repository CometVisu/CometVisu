{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "members",
    "__sizeHint",
    "_invalidChildrenCache",
    "__widget",
    "invalidateLayoutCache",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "warn",
    "getSizeHint",
    "_computeSizeHint",
    "hasHeightForWidth",
    "getHeightForWidth",
    "width",
    "invalidateChildrenCache",
    "verifyLayoutProperty",
    "Environment",
    "select",
    "true",
    "item",
    "name",
    "value",
    "_clearSeparators",
    "widget",
    "ui",
    "LayoutItem",
    "clearSeparators",
    "_renderSeparator",
    "separator",
    "bounds",
    "renderSeparator",
    "connectToWidget",
    "Error",
    "_getWidget",
    "_applyLayoutChange",
    "scheduleLayoutUpdate",
    "_getLayoutChildren",
    "getLayoutChildren",
    "destruct",
    "layout",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Base class for all layout managers.\n *\n * Custom layout manager must derive from\n * this class and implement the methods {@link #invalidateLayoutCache},\n * {@link #renderLayout} and {@link #getSizeHint}.\n */\nqx.Class.define(\"qx.ui.layout.Abstract\", {\n  type: \"abstract\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {Map} The cached size hint */\n    __sizeHint: null,\n\n    /** @type {Boolean} Whether the children cache is valid. This field is protected\n     *    because sub classes must be able to access it quickly.\n     */\n    _invalidChildrenCache: null,\n\n    /** @type {qx.ui.core.Widget} The connected widget */\n    __widget: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Invalidate all layout relevant caches. Automatically deletes the size hint.\n     *\n     * @abstract\n     */\n    invalidateLayoutCache() {\n      this.__sizeHint = null;\n    },\n\n    /**\n     * Applies the children layout.\n     *\n     * @abstract\n     * @param availWidth {Integer} Final width available for the content (in pixel)\n     * @param availHeight {Integer} Final height available for the content (in pixel)\n     * @param padding {Map} Map containing the padding values. Keys:\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\n     */\n    renderLayout(availWidth, availHeight, padding) {\n      this.warn(\"Missing renderLayout() implementation!\");\n    },\n\n    /**\n     * Computes the layout dimensions and possible ranges of these.\n     *\n     * @return {Map|null} The map with the preferred width/height and the allowed\n     *   minimum and maximum values in cases where shrinking or growing\n     *   is required. Can also return <code>null</code> when this detection\n     *   is not supported by the layout.\n     */\n    getSizeHint() {\n      if (this.__sizeHint) {\n        return this.__sizeHint;\n      }\n\n      return (this.__sizeHint = this._computeSizeHint());\n    },\n\n    /**\n     * Whether the layout manager supports height for width.\n     *\n     * @return {Boolean} Whether the layout manager supports height for width\n     */\n    hasHeightForWidth() {\n      return false;\n    },\n\n    /**\n     * If layout wants to trade height for width it has to implement this\n     * method and return the preferred height if it is resized to\n     * the given width. This function returns <code>null</code> if the item\n     * do not support height for width.\n     *\n     * @param width {Integer} The computed width\n     * @return {Integer} The desired height\n     */\n    getHeightForWidth(width) {\n      this.warn(\"Missing getHeightForWidth() implementation!\");\n      return null;\n    },\n\n    /**\n     * This computes the size hint of the layout and returns it.\n     *\n     * @abstract\n     * @return {Map} The size hint.\n     */\n    _computeSizeHint() {\n      return null;\n    },\n\n    /**\n     * This method is called, on each child \"add\" and \"remove\" action and\n     * whenever the layout data of a child is changed. The method should be used\n     * to clear any children relevant cached data.\n     *\n     */\n    invalidateChildrenCache() {\n      this._invalidChildrenCache = true;\n    },\n\n    /**\n     * Verifies the value of a layout property.\n     *\n     * Note: This method is only available in the debug builds.\n     *\n     * @signature function(item, name, value)\n     * @param item {Object} The affected layout item\n     * @param name {Object} Name of the layout property\n     * @param value {Object} Value of the layout property\n     */\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\n      true(item, name, value) {\n        // empty implementation\n      },\n\n      false: null\n    }),\n\n    /**\n     * Remove all currently visible separators\n     */\n    _clearSeparators() {\n      // It may be that the widget do not implement clearSeparators which is especially true\n      // when it do not inherit from LayoutItem.\n      var widget = this.__widget;\n      if (widget instanceof qx.ui.core.LayoutItem) {\n        widget.clearSeparators();\n      }\n    },\n\n    /**\n     * Renders a separator between two children\n     *\n     * @param separator {String|qx.ui.decoration.IDecorator} The separator to render\n     * @param bounds {Map} Contains the left and top coordinate and the width and height\n     *    of the separator to render.\n     */\n    _renderSeparator(separator, bounds) {\n      this.__widget.renderSeparator(separator, bounds);\n    },\n\n    /**\n     * This method is called by the widget to connect the widget with the layout.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to connect to.\n     */\n    connectToWidget(widget) {\n      if (widget && this.__widget) {\n        throw new Error(\n          \"It is not possible to manually set the connected widget.\"\n        );\n      }\n\n      this.__widget = widget;\n\n      // Invalidate cache\n      this.invalidateChildrenCache();\n    },\n\n    /**\n     * Return the widget that is this layout is responsible for.\n     *\n     * @return {qx.ui.core.Widget} The widget connected to this layout.\n     */\n    _getWidget() {\n      return this.__widget;\n    },\n\n    /**\n     * Indicate that the layout has layout changed and propagate this information\n     * up the widget hierarchy.\n     *\n     * Also a generic property apply method for all layout relevant properties.\n     */\n    _applyLayoutChange() {\n      if (this.__widget) {\n        this.__widget.scheduleLayoutUpdate();\n      }\n    },\n\n    /**\n     * Returns the list of all layout relevant children.\n     *\n     * @return {Array} List of layout relevant children.\n     */\n    _getLayoutChildren() {\n      return this.__widget.getLayoutChildren();\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCT\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__widget = this.__sizeHint = null;\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}