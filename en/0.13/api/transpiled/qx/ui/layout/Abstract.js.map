{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "members",
    "__sizeHint",
    "_invalidChildrenCache",
    "__widget",
    "invalidateLayoutCache",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "warn",
    "getSizeHint",
    "_computeSizeHint",
    "hasHeightForWidth",
    "getHeightForWidth",
    "width",
    "invalidateChildrenCache",
    "verifyLayoutProperty",
    "Environment",
    "select",
    "_true",
    "item",
    "name",
    "value",
    "_clearSeparators",
    "widget",
    "ui",
    "LayoutItem",
    "clearSeparators",
    "_renderSeparator",
    "separator",
    "bounds",
    "renderSeparator",
    "connectToWidget",
    "Error",
    "_getWidget",
    "_applyLayoutChange",
    "scheduleLayoutUpdate",
    "_getLayoutChildren",
    "getLayoutChildren",
    "destruct",
    "layout",
    "Abstract"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/Abstract.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Base class for all layout managers.\r\n *\r\n * Custom layout manager must derive from\r\n * this class and implement the methods {@link #invalidateLayoutCache},\r\n * {@link #renderLayout} and {@link #getSizeHint}.\r\n */\r\nqx.Class.define(\"qx.ui.layout.Abstract\", {\r\n  type: \"abstract\",\r\n  extend: qx.core.Object,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    /** @type {Map} The cached size hint */\r\n    __sizeHint: null,\r\n\r\n    /** @type {Boolean} Whether the children cache is valid. This field is protected\r\n     *    because sub classes must be able to access it quickly.\r\n     */\r\n    _invalidChildrenCache: null,\r\n\r\n    /** @type {qx.ui.core.Widget} The connected widget */\r\n    __widget: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      LAYOUT INTERFACE\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Invalidate all layout relevant caches. Automatically deletes the size hint.\r\n     *\r\n     * @abstract\r\n     */\r\n    invalidateLayoutCache() {\r\n      this.__sizeHint = null;\r\n    },\r\n\r\n    /**\r\n     * Applies the children layout.\r\n     *\r\n     * @abstract\r\n     * @param availWidth {Integer} Final width available for the content (in pixel)\r\n     * @param availHeight {Integer} Final height available for the content (in pixel)\r\n     * @param padding {Map} Map containing the padding values. Keys:\r\n     * <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>\r\n     */\r\n    renderLayout(availWidth, availHeight, padding) {\r\n      this.warn(\"Missing renderLayout() implementation!\");\r\n    },\r\n\r\n    /**\r\n     * Computes the layout dimensions and possible ranges of these.\r\n     *\r\n     * @return {Map|null} The map with the preferred width/height and the allowed\r\n     *   minimum and maximum values in cases where shrinking or growing\r\n     *   is required. Can also return <code>null</code> when this detection\r\n     *   is not supported by the layout.\r\n     */\r\n    getSizeHint() {\r\n      if (this.__sizeHint) {\r\n        return this.__sizeHint;\r\n      }\r\n\r\n      return (this.__sizeHint = this._computeSizeHint());\r\n    },\r\n\r\n    /**\r\n     * Whether the layout manager supports height for width.\r\n     *\r\n     * @return {Boolean} Whether the layout manager supports height for width\r\n     */\r\n    hasHeightForWidth() {\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * If layout wants to trade height for width it has to implement this\r\n     * method and return the preferred height if it is resized to\r\n     * the given width. This function returns <code>null</code> if the item\r\n     * do not support height for width.\r\n     *\r\n     * @param width {Integer} The computed width\r\n     * @return {Integer} The desired height\r\n     */\r\n    getHeightForWidth(width) {\r\n      this.warn(\"Missing getHeightForWidth() implementation!\");\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * This computes the size hint of the layout and returns it.\r\n     *\r\n     * @abstract\r\n     * @return {Map} The size hint.\r\n     */\r\n    _computeSizeHint() {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * This method is called, on each child \"add\" and \"remove\" action and\r\n     * whenever the layout data of a child is changed. The method should be used\r\n     * to clear any children relevant cached data.\r\n     *\r\n     */\r\n    invalidateChildrenCache() {\r\n      this._invalidChildrenCache = true;\r\n    },\r\n\r\n    /**\r\n     * Verifies the value of a layout property.\r\n     *\r\n     * Note: This method is only available in the debug builds.\r\n     *\r\n     * @signature function(item, name, value)\r\n     * @param item {Object} The affected layout item\r\n     * @param name {Object} Name of the layout property\r\n     * @param value {Object} Value of the layout property\r\n     */\r\n    verifyLayoutProperty: qx.core.Environment.select(\"qx.debug\", {\r\n      true(item, name, value) {\r\n        // empty implementation\r\n      },\r\n\r\n      false: null\r\n    }),\r\n\r\n    /**\r\n     * Remove all currently visible separators\r\n     */\r\n    _clearSeparators() {\r\n      // It may be that the widget do not implement clearSeparators which is especially true\r\n      // when it do not inherit from LayoutItem.\r\n      var widget = this.__widget;\r\n      if (widget instanceof qx.ui.core.LayoutItem) {\r\n        widget.clearSeparators();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Renders a separator between two children\r\n     *\r\n     * @param separator {String|qx.ui.decoration.IDecorator} The separator to render\r\n     * @param bounds {Map} Contains the left and top coordinate and the width and height\r\n     *    of the separator to render.\r\n     */\r\n    _renderSeparator(separator, bounds) {\r\n      this.__widget.renderSeparator(separator, bounds);\r\n    },\r\n\r\n    /**\r\n     * This method is called by the widget to connect the widget with the layout.\r\n     *\r\n     * @param widget {qx.ui.core.Widget} The widget to connect to.\r\n     */\r\n    connectToWidget(widget) {\r\n      if (widget && this.__widget) {\r\n        throw new Error(\r\n          \"It is not possible to manually set the connected widget.\"\r\n        );\r\n      }\r\n\r\n      this.__widget = widget;\r\n\r\n      // Invalidate cache\r\n      this.invalidateChildrenCache();\r\n    },\r\n\r\n    /**\r\n     * Return the widget that is this layout is responsible for.\r\n     *\r\n     * @return {qx.ui.core.Widget} The widget connected to this layout.\r\n     */\r\n    _getWidget() {\r\n      return this.__widget;\r\n    },\r\n\r\n    /**\r\n     * Indicate that the layout has layout changed and propagate this information\r\n     * up the widget hierarchy.\r\n     *\r\n     * Also a generic property apply method for all layout relevant properties.\r\n     */\r\n    _applyLayoutChange() {\r\n      if (this.__widget) {\r\n        this.__widget.scheduleLayoutUpdate();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns the list of all layout relevant children.\r\n     *\r\n     * @return {Array} List of layout relevant children.\r\n     */\r\n    _getLayoutChildren() {\r\n      return this.__widget.getLayoutChildren();\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCT\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    this.__widget = this.__sizeHint = null;\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}