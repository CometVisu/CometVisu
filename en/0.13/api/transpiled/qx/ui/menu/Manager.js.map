{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__objects",
    "el",
    "document",
    "body",
    "Registration",
    "event",
    "addListener",
    "window",
    "documentElement",
    "_onPointerDown",
    "_onRoll",
    "_onKeyUpDown",
    "_onKeyPress",
    "Environment",
    "get",
    "bom",
    "Element",
    "hideAll",
    "__openTimer",
    "Timer",
    "_onOpenInterval",
    "__closeTimer",
    "_onCloseInterval",
    "members",
    "__scheduleOpen",
    "__scheduleClose",
    "_getChild",
    "menu",
    "start",
    "iter",
    "loop",
    "children",
    "getChildren",
    "length",
    "child",
    "i",
    "isEnabled",
    "isAnonymous",
    "isVisible",
    "_isInMenu",
    "widget",
    "ui",
    "Menu",
    "getLayoutParent",
    "_isMenuOpener",
    "menus",
    "getOpener",
    "_getMenuButton",
    "AbstractButton",
    "add",
    "obj",
    "reg",
    "push",
    "setZIndex",
    "remove",
    "lang",
    "Array",
    "exclude",
    "getActiveMenu",
    "scheduleOpen",
    "cancelClose",
    "cancelOpen",
    "restartWith",
    "getOpenInterval",
    "scheduleClose",
    "getCloseInterval",
    "stop",
    "e",
    "open",
    "preventContextMenuOnce",
    "__onPreventContextMenu",
    "target",
    "getTarget",
    "Widget",
    "getWidgetByElement",
    "stopPropagation",
    "preventDefault",
    "removeListener",
    "getMenu",
    "__selectionKeys",
    "Enter",
    "Space",
    "__navigationKeys",
    "Tab",
    "Escape",
    "Up",
    "Down",
    "Left",
    "Right",
    "iden",
    "getKeyIdentifier",
    "getSelectedButton",
    "navigation",
    "selection",
    "_onKeyPressUp",
    "_onKeyPressDown",
    "_onKeyPressLeft",
    "_onKeyPressRight",
    "button",
    "_onKeyPressEnter",
    "_onKeyPressSpace",
    "selectedButton",
    "indexOf",
    "nextItem",
    "setSelectedButton",
    "resetSelectedButton",
    "menuOpener",
    "parentMenu",
    "resetOpenedButton",
    "menubar",
    "Button",
    "buttons",
    "getMenuBar",
    "getMenuButtons",
    "index",
    "prevButton",
    "subMenu",
    "setOpenedButton",
    "first",
    "getOpenedButton",
    "nextButton",
    "hasListener",
    "clone",
    "setBubbles",
    "setTarget",
    "dispatchEvent",
    "getMomentum",
    "destruct",
    "_disposeObjects",
    "_disposeArray",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This singleton manages visible menu instances and supports some\n * core features to schedule menu open/close with timeout support.\n *\n * It also manages the whole keyboard support for the currently\n * registered widgets.\n *\n * The zIndex order is also managed by this class.\n */\nqx.Class.define(\"qx.ui.menu.Manager\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create data structure\n    this.__objects = [];\n\n    var el = document.body;\n    var Registration = qx.event.Registration;\n\n    // React on pointer/mouse events, but on native, to support inline applications\n    Registration.addListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    Registration.addListener(el, \"roll\", this._onRoll, this, true);\n\n    // React on keypress events\n    Registration.addListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    // only use the blur event to hide windows on non touch devices [BUG #4033]\n    // When the menu is located on top of an iFrame, the select will fail\n    if (!qx.core.Environment.get(\"event.touch\")) {\n      // Hide all when the window is blurred\n      qx.bom.Element.addListener(window, \"blur\", this.hideAll, this);\n    }\n\n    // Create open timer\n    this.__openTimer = new qx.event.Timer();\n    this.__openTimer.addListener(\"interval\", this._onOpenInterval, this);\n\n    // Create close timer\n    this.__closeTimer = new qx.event.Timer();\n    this.__closeTimer.addListener(\"interval\", this._onCloseInterval, this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n\n  members: {\n    __scheduleOpen: null,\n    __scheduleClose: null,\n    __openTimer: null,\n    __closeTimer: null,\n    __objects: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Query engine for menu children.\n     *\n     * @param menu {qx.ui.menu.Menu} Any menu instance\n     * @param start {Integer} Child index to start with\n     * @param iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>\n     * @param loop {Boolean?false} Whether to wrap when reaching the begin/end of the list\n     * @return {qx.ui.menu.Button} Any menu button or <code>null</code>\n     */\n    _getChild(menu, start, iter, loop) {\n      var children = menu.getChildren();\n      var length = children.length;\n      var child;\n\n      for (var i = start; i < length && i >= 0; i += iter) {\n        child = children[i];\n        if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n          return child;\n        }\n      }\n\n      if (loop) {\n        i = i == length ? 0 : length - 1;\n        for (; i != start; i += iter) {\n          child = children[i];\n          if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether the given widget is inside any Menu instance.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> when the widget is part of any menu\n     */\n    _isInMenu(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.Menu) {\n          return true;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return false;\n    },\n\n    /**\n     * Whether the given widget is one of the menu openers.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> if the widget is a menu opener\n     */\n    _isMenuOpener(widget) {\n      var menus = this.__objects;\n\n      for (var i = 0; i < menus.length; i++) {\n        if (menus[i].getOpener() === widget) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns an instance of a menu button if the given widget is a child\n     *\n     * @param widget {qx.ui.core.Widget} any widget\n     * @return {qx.ui.menu.Button} Any menu button instance or <code>null</code>\n     */\n    _getMenuButton(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.AbstractButton) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a menu to the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    add(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      reg.push(obj);\n      obj.setZIndex(1e6 + reg.length);\n    },\n\n    /**\n     * Remove a menu from the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    remove(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      if (reg) {\n        qx.lang.Array.remove(reg, obj);\n      }\n    },\n\n    /**\n     * Hides all currently opened menus.\n     */\n    hideAll() {\n      var reg = this.__objects;\n      if (reg) {\n        for (var i = reg.length - 1; i >= 0; i--) {\n          reg[i].exclude();\n        }\n      }\n    },\n\n    /**\n     * Returns the menu which was opened at last (which\n     * is the active one this way)\n     *\n     * @return {qx.ui.menu.Menu} The current active menu or <code>null</code>\n     */\n    getActiveMenu() {\n      var reg = this.__objects;\n      return reg.length > 0 ? reg[reg.length - 1] : null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCHEDULED OPEN/CLOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedules the given menu to be opened after the\n     * {@link qx.ui.menu.Menu#openInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for open\n     */\n    scheduleOpen(menu) {\n      // Cancel close of given menu first\n      this.cancelClose(menu);\n\n      // When the menu is already visible\n      if (menu.isVisible()) {\n        // Cancel all other open requests\n        if (this.__scheduleOpen) {\n          this.cancelOpen(this.__scheduleOpen);\n        }\n      }\n\n      // When the menu is not visible and not scheduled already\n      // then schedule it for opening\n      else if (this.__scheduleOpen != menu) {\n        // menu.debug(\"Schedule open\");\n        this.__scheduleOpen = menu;\n        this.__openTimer.restartWith(menu.getOpenInterval());\n      }\n    },\n\n    /**\n     * Schedules the given menu to be closed after the\n     * {@link qx.ui.menu.Menu#closeInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for close\n     */\n    scheduleClose(menu) {\n      // Cancel open of the menu first\n      this.cancelOpen(menu);\n\n      // When the menu is already invisible\n      if (!menu.isVisible()) {\n        // Cancel all other close requests\n        if (this.__scheduleClose) {\n          this.cancelClose(this.__scheduleClose);\n        }\n      }\n\n      // When the menu is visible and not scheduled already\n      // then schedule it for closing\n      else if (this.__scheduleClose != menu) {\n        // menu.debug(\"Schedule close\");\n        this.__scheduleClose = menu;\n        this.__closeTimer.restartWith(menu.getCloseInterval());\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for open this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for open\n     */\n    cancelOpen(menu) {\n      if (this.__scheduleOpen == menu) {\n        // menu.debug(\"Cancel open\");\n        this.__openTimer.stop();\n        this.__scheduleOpen = null;\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for close this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for close\n     */\n    cancelClose(menu) {\n      if (this.__scheduleClose == menu) {\n        // menu.debug(\"Cancel close\");\n        this.__closeTimer.stop();\n        this.__scheduleClose = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for a pending open request. Configured to the interval\n     * of the current menu to open.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onOpenInterval(e) {\n      // Stop timer\n      this.__openTimer.stop();\n\n      // Open menu and reset flag\n      this.__scheduleOpen.open();\n      this.__scheduleOpen = null;\n    },\n\n    /**\n     * Event listener for a pending close request. Configured to the interval\n     * of the current menu to close.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onCloseInterval(e) {\n      // Stop timer, reset scheduling flag\n      this.__closeTimer.stop();\n\n      // Close menu and reset flag\n      this.__scheduleClose.exclude();\n      this.__scheduleClose = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXTMENU EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal function registers a handler to stop next\n     * <code>contextmenu</code> event.\n     * This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n     * right click was pressed.\n     *\n     * @internal\n     */\n    preventContextMenuOnce() {\n      qx.event.Registration.addListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /**\n     * Internal event handler to stop <code>contextmenu</code> event bubbling,\n     * if target is inside the opened menu.\n     *\n     * @param e {qx.event.type.Mouse} contextmenu event\n     *\n     * @internal\n     */\n    __onPreventContextMenu(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n      if (this._isInMenu(target)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      // stop only once\n      qx.event.Registration.removeListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for pointerdown events\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDown(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      // If the target is 'null' the tap appears on a DOM element witch is not\n      // a widget. This happens normally with an inline application, when the user\n      // taps not in the inline application. In this case all all currently\n      // open menus should be closed.\n      if (target == null) {\n        this.hideAll();\n        return;\n      }\n\n      // If the target is the one which has opened the current menu\n      // we ignore the pointerdown to let the button process the event\n      // further with toggling or ignoring the tap.\n      if (target.getMenu && target.getMenu() && target.getMenu().isVisible()) {\n        return;\n      }\n\n      // All taps not inside a menu will hide all currently open menus\n      if (this.__objects.length > 0 && !this._isInMenu(target)) {\n        this.hideAll();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Map of all keys working on an active menu selection\n     * @lint ignoreReferenceField(__selectionKeys)\n     */\n    __selectionKeys: {\n      Enter: 1,\n      Space: 1\n    },\n\n    /**\n     * @type {Map} Map of all keys working without a selection\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys: {\n      Tab: 1,\n      Escape: 1,\n      Up: 1,\n      Down: 1,\n      Left: 1,\n      Right: 1\n    },\n\n    /**\n     * Event handler for all keyup/keydown events. Stops all events\n     * when any menu is opened.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyUpDown(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      // Stop for all supported key combos\n      var iden = e.getKeyIdentifier();\n      if (\n        this.__navigationKeys[iden] ||\n        (this.__selectionKeys[iden] && menu.getSelectedButton())\n      ) {\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Event handler for all keypress events. Delegates the event to the more\n     * specific methods defined in this class.\n     *\n     * Currently processes the keys: <code>Up</code>, <code>Down</code>,\n     * <code>Left</code>, <code>Right</code> and <code>Enter</code>.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyPress(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      var iden = e.getKeyIdentifier();\n      var navigation = this.__navigationKeys[iden];\n      var selection = this.__selectionKeys[iden];\n\n      if (navigation) {\n        switch (iden) {\n          case \"Up\":\n            this._onKeyPressUp(menu);\n            break;\n\n          case \"Down\":\n            this._onKeyPressDown(menu);\n            break;\n\n          case \"Left\":\n            this._onKeyPressLeft(menu);\n            break;\n\n          case \"Right\":\n            this._onKeyPressRight(menu);\n            break;\n\n          case \"Tab\":\n          case \"Escape\":\n            this.hideAll();\n            break;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (selection) {\n        // Do not process these events when no item is hovered\n        var button = menu.getSelectedButton();\n        if (button) {\n          switch (iden) {\n            case \"Enter\":\n              this._onKeyPressEnter(menu, button, e);\n              break;\n\n            case \"Space\":\n              this._onKeyPressSpace(menu, button, e);\n              break;\n          }\n\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Up</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressUp(menu) {\n      // Query for previous child\n      var selectedButton = menu.getSelectedButton();\n      var children = menu.getChildren();\n      var start = selectedButton\n        ? menu.indexOf(selectedButton) - 1\n        : children.length - 1;\n      var nextItem = this._getChild(menu, start, -1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Down</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressDown(menu) {\n      // Query for next child\n      var selectedButton = menu.getSelectedButton();\n      var start = selectedButton ? menu.indexOf(selectedButton) + 1 : 0;\n      var nextItem = this._getChild(menu, start, 1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Left</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressLeft(menu) {\n      var menuOpener = menu.getOpener();\n      if (!menuOpener) {\n        return;\n      }\n\n      // Back to the \"parent\" menu\n      if (menuOpener instanceof qx.ui.menu.AbstractButton) {\n        var parentMenu = menuOpener.getLayoutParent();\n\n        parentMenu.resetOpenedButton();\n        parentMenu.setSelectedButton(menuOpener);\n      }\n\n      // Goto the previous toolbar button\n      else if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get previous button, fallback to end if first arrived\n        var prevButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index - i + length) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            prevButton = button;\n            break;\n          }\n        }\n\n        if (prevButton && prevButton != menuOpener) {\n          prevButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Right</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressRight(menu) {\n      var selectedButton = menu.getSelectedButton();\n\n      // Open sub-menu of hovered item and select first child\n      if (selectedButton) {\n        var subMenu = selectedButton.getMenu();\n\n        if (subMenu) {\n          // Open previously hovered item\n          menu.setOpenedButton(selectedButton);\n\n          // Hover first item in new submenu\n          var first = this._getChild(subMenu, 0, 1);\n          if (first) {\n            subMenu.setSelectedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // No hover and no open item\n      // When first button has a menu, open it, otherwise only hover it\n      else if (!menu.getOpenedButton()) {\n        var first = this._getChild(menu, 0, 1);\n\n        if (first) {\n          menu.setSelectedButton(first);\n\n          if (first.getMenu()) {\n            menu.setOpenedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // Jump to the next toolbar button\n      var menuOpener = menu.getOpener();\n\n      // Look up opener hierarchy for menu button\n      if (menuOpener instanceof qx.ui.menu.Button && selectedButton) {\n        // From one inner selected button try to find the top level\n        // menu button which has opened the whole menu chain.\n        while (menuOpener) {\n          menuOpener = menuOpener.getLayoutParent();\n          if (menuOpener instanceof qx.ui.menu.Menu) {\n            menuOpener = menuOpener.getOpener();\n            if (menuOpener instanceof qx.ui.menubar.Button) {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n\n        if (!menuOpener) {\n          return;\n        }\n      }\n\n      // Ask the toolbar for the next menu button\n      if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get next button, fallback to first if end arrived\n        var nextButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index + i) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            nextButton = button;\n            break;\n          }\n        }\n\n        if (nextButton && nextButton != menuOpener) {\n          nextButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Enter</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressEnter(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n\n      // Hide all open menus\n      this.hideAll();\n    },\n\n    /**\n     * Event handler for <code>Space</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressSpace(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n    },\n\n    /**\n     * Event handler for roll which hides all windows on scroll.\n     *\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      if (\n        this.__objects.length > 0 &&\n        !this._isInMenu(target) &&\n        !this._isMenuOpener(target) &&\n        !e.getMomentum()\n      ) {\n        this.hideAll();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    var Registration = qx.event.Registration;\n    var el = document.body;\n\n    // React on pointerdown events\n    Registration.removeListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    // React on keypress events\n    Registration.removeListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    this._disposeObjects(\"__openTimer\", \"__closeTimer\");\n    this._disposeArray(\"__objects\");\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EAAsC;IACpCC,IAAI,EAAE,WAD8B;IAEpCC,MAAM,EAAEP,EAAE,CAACQ,IAAH,CAAQC,MAFoB;;IAIpC;AACF;AACA;AACA;AACA;IAEEC,SAVoC,uBAUxB;MACV,sCADU,CAGV;;MACA,KAAKC,SAAL,GAAiB,EAAjB;MAEA,IAAIC,EAAE,GAAGC,QAAQ,CAACC,IAAlB;MACA,IAAIC,YAAY,GAAGf,EAAE,CAACgB,KAAH,CAASD,YAA5B,CAPU,CASV;;MACAA,YAAY,CAACE,WAAb,CACEC,MAAM,CAACL,QAAP,CAAgBM,eADlB,EAEE,aAFF,EAGE,KAAKC,cAHP,EAIE,IAJF,EAKE,IALF;MAQAL,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,MAA7B,EAAqC,KAAKS,OAA1C,EAAmD,IAAnD,EAAyD,IAAzD,EAlBU,CAoBV;;MACAN,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,SAA7B,EAAwC,KAAKU,YAA7C,EAA2D,IAA3D,EAAiE,IAAjE;MACAP,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,OAA7B,EAAsC,KAAKU,YAA3C,EAAyD,IAAzD,EAA+D,IAA/D;MACAP,YAAY,CAACE,WAAb,CAAyBL,EAAzB,EAA6B,UAA7B,EAAyC,KAAKW,WAA9C,EAA2D,IAA3D,EAAiE,IAAjE,EAvBU,CAyBV;MACA;;MACA,IAAI,CAACvB,EAAE,CAACQ,IAAH,CAAQgB,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,CAAL,EAA6C;QAC3C;QACAzB,EAAE,CAAC0B,GAAH,CAAOC,OAAP,CAAeV,WAAf,CAA2BC,MAA3B,EAAmC,MAAnC,EAA2C,KAAKU,OAAhD,EAAyD,IAAzD;MACD,CA9BS,CAgCV;;;MACA,KAAKC,SAAL,GAAmB,IAAI7B,EAAE,CAACgB,KAAH,CAASc,KAAb,EAAnB;;MACA,KAAKD,SAAL,CAAiBZ,WAAjB,CAA6B,UAA7B,EAAyC,KAAKc,eAA9C,EAA+D,IAA/D,EAlCU,CAoCV;;;MACA,KAAKC,SAAL,GAAoB,IAAIhC,EAAE,CAACgB,KAAH,CAASc,KAAb,EAApB;;MACA,KAAKE,SAAL,CAAkBf,WAAlB,CAA8B,UAA9B,EAA0C,KAAKgB,gBAA/C,EAAiE,IAAjE;IACD,CAjDmC;;IAmDpC;AACF;AACA;AACA;AACA;;IACE;IAEAC,OAAO,EAAE;MACPC,SAAc,EAAE,IADT;MAEPC,SAAe,EAAE,IAFV;MAGPP,SAAW,EAAE,IAHN;MAIPG,SAAY,EAAE,IAJP;MAKPrB,SAAS,EAAE,IALJ;;MAOP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI0B,SAtBO,qBAsBGC,IAtBH,EAsBSC,KAtBT,EAsBgBC,IAtBhB,EAsBsBC,IAtBtB,EAsB4B;QACjC,IAAIC,QAAQ,GAAGJ,IAAI,CAACK,WAAL,EAAf;QACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;QACA,IAAIC,KAAJ;;QAEA,KAAK,IAAIC,CAAC,GAAGP,KAAb,EAAoBO,CAAC,GAAGF,MAAJ,IAAcE,CAAC,IAAI,CAAvC,EAA0CA,CAAC,IAAIN,IAA/C,EAAqD;UACnDK,KAAK,GAAGH,QAAQ,CAACI,CAAD,CAAhB;;UACA,IAAID,KAAK,CAACE,SAAN,MAAqB,CAACF,KAAK,CAACG,WAAN,EAAtB,IAA6CH,KAAK,CAACI,SAAN,EAAjD,EAAoE;YAClE,OAAOJ,KAAP;UACD;QACF;;QAED,IAAIJ,IAAJ,EAAU;UACRK,CAAC,GAAGA,CAAC,IAAIF,MAAL,GAAc,CAAd,GAAkBA,MAAM,GAAG,CAA/B;;UACA,OAAOE,CAAC,IAAIP,KAAZ,EAAmBO,CAAC,IAAIN,IAAxB,EAA8B;YAC5BK,KAAK,GAAGH,QAAQ,CAACI,CAAD,CAAhB;;YACA,IAAID,KAAK,CAACE,SAAN,MAAqB,CAACF,KAAK,CAACG,WAAN,EAAtB,IAA6CH,KAAK,CAACI,SAAN,EAAjD,EAAoE;cAClE,OAAOJ,KAAP;YACD;UACF;QACF;;QAED,OAAO,IAAP;MACD,CA7CM;;MA+CP;AACJ;AACA;AACA;AACA;AACA;MACIK,SArDO,qBAqDGC,MArDH,EAqDW;QAChB,OAAOA,MAAP,EAAe;UACb,IAAIA,MAAM,YAAYnD,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWe,IAAjC,EAAuC;YACrC,OAAO,IAAP;UACD;;UAEDF,MAAM,GAAGA,MAAM,CAACG,eAAP,EAAT;QACD;;QAED,OAAO,KAAP;MACD,CA/DM;;MAiEP;AACJ;AACA;AACA;AACA;AACA;MACIC,aAvEO,yBAuEOJ,MAvEP,EAuEe;QACpB,IAAIK,KAAK,GAAG,KAAK7C,SAAjB;;QAEA,KAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,KAAK,CAACZ,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;UACrC,IAAIU,KAAK,CAACV,CAAD,CAAL,CAASW,SAAT,OAAyBN,MAA7B,EAAqC;YACnC,OAAO,IAAP;UACD;QACF;;QAED,OAAO,KAAP;MACD,CAjFM;;MAmFP;AACJ;AACA;AACA;AACA;AACA;MACIO,cAzFO,0BAyFQP,MAzFR,EAyFgB;QACrB,OAAOA,MAAP,EAAe;UACb,IAAIA,MAAM,YAAYnD,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWqB,cAAjC,EAAiD;YAC/C,OAAOR,MAAP;UACD;;UAEDA,MAAM,GAAGA,MAAM,CAACG,eAAP,EAAT;QACD;;QAED,OAAO,IAAP;MACD,CAnGM;;MAqGP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;MACIM,GAhHO,eAgHHC,GAhHG,EAgHE;QAOP,IAAIC,GAAG,GAAG,KAAKnD,SAAf;QACAmD,GAAG,CAACC,IAAJ,CAASF,GAAT;QACAA,GAAG,CAACG,SAAJ,CAAc,MAAMF,GAAG,CAAClB,MAAxB;MACD,CA1HM;;MA4HP;AACJ;AACA;AACA;AACA;MACIqB,MAjIO,kBAiIAJ,GAjIA,EAiIK;QAOV,IAAIC,GAAG,GAAG,KAAKnD,SAAf;;QACA,IAAImD,GAAJ,EAAS;UACP9D,EAAE,CAACkE,IAAH,CAAQC,KAAR,CAAcF,MAAd,CAAqBH,GAArB,EAA0BD,GAA1B;QACD;MACF,CA5IM;;MA8IP;AACJ;AACA;MACIjC,OAjJO,qBAiJG;QACR,IAAIkC,GAAG,GAAG,KAAKnD,SAAf;;QACA,IAAImD,GAAJ,EAAS;UACP,KAAK,IAAIhB,CAAC,GAAGgB,GAAG,CAAClB,MAAJ,GAAa,CAA1B,EAA6BE,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;YACxCgB,GAAG,CAAChB,CAAD,CAAH,CAAOsB,OAAP;UACD;QACF;MACF,CAxJM;;MA0JP;AACJ;AACA;AACA;AACA;AACA;MACIC,aAhKO,2BAgKS;QACd,IAAIP,GAAG,GAAG,KAAKnD,SAAf;QACA,OAAOmD,GAAG,CAAClB,MAAJ,GAAa,CAAb,GAAiBkB,GAAG,CAACA,GAAG,CAAClB,MAAJ,GAAa,CAAd,CAApB,GAAuC,IAA9C;MACD,CAnKM;;MAqKP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;MACI0B,YAlLO,wBAkLMhC,IAlLN,EAkLY;QACjB;QACA,KAAKiC,WAAL,CAAiBjC,IAAjB,EAFiB,CAIjB;;QACA,IAAIA,IAAI,CAACW,SAAL,EAAJ,EAAsB;UACpB;UACA,IAAI,KAAKd,SAAT,EAAyB;YACvB,KAAKqC,UAAL,CAAgB,KAAKrC,SAArB;UACD;QACF,CALD,CAOA;QACA;QARA,KASK,IAAI,KAAKA,SAAL,IAAuBG,IAA3B,EAAiC;UACpC;UACA,KAAKH,SAAL,GAAsBG,IAAtB;;UACA,KAAKT,SAAL,CAAiB4C,WAAjB,CAA6BnC,IAAI,CAACoC,eAAL,EAA7B;QACD;MACF,CArMM;;MAuMP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,aA9MO,yBA8MOrC,IA9MP,EA8Ma;QAClB;QACA,KAAKkC,UAAL,CAAgBlC,IAAhB,EAFkB,CAIlB;;QACA,IAAI,CAACA,IAAI,CAACW,SAAL,EAAL,EAAuB;UACrB;UACA,IAAI,KAAKb,SAAT,EAA0B;YACxB,KAAKmC,WAAL,CAAiB,KAAKnC,SAAtB;UACD;QACF,CALD,CAOA;QACA;QARA,KASK,IAAI,KAAKA,SAAL,IAAwBE,IAA5B,EAAkC;UACrC;UACA,KAAKF,SAAL,GAAuBE,IAAvB;;UACA,KAAKN,SAAL,CAAkByC,WAAlB,CAA8BnC,IAAI,CAACsC,gBAAL,EAA9B;QACD;MACF,CAjOM;;MAmOP;AACJ;AACA;AACA;AACA;AACA;MACIJ,UAzOO,sBAyOIlC,IAzOJ,EAyOU;QACf,IAAI,KAAKH,SAAL,IAAuBG,IAA3B,EAAiC;UAC/B;UACA,KAAKT,SAAL,CAAiBgD,IAAjB;;UACA,KAAK1C,SAAL,GAAsB,IAAtB;QACD;MACF,CA/OM;;MAiPP;AACJ;AACA;AACA;AACA;AACA;MACIoC,WAvPO,uBAuPKjC,IAvPL,EAuPW;QAChB,IAAI,KAAKF,SAAL,IAAwBE,IAA5B,EAAkC;UAChC;UACA,KAAKN,SAAL,CAAkB6C,IAAlB;;UACA,KAAKzC,SAAL,GAAuB,IAAvB;QACD;MACF,CA7PM;;MA+PP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;MACIL,eA3QO,2BA2QS+C,CA3QT,EA2QY;QACjB;QACA,KAAKjD,SAAL,CAAiBgD,IAAjB,GAFiB,CAIjB;;;QACA,KAAK1C,SAAL,CAAoB4C,IAApB;;QACA,KAAK5C,SAAL,GAAsB,IAAtB;MACD,CAlRM;;MAoRP;AACJ;AACA;AACA;AACA;AACA;MACIF,gBA1RO,4BA0RU6C,CA1RV,EA0Ra;QAClB;QACA,KAAK9C,SAAL,CAAkB6C,IAAlB,GAFkB,CAIlB;;;QACA,KAAKzC,SAAL,CAAqBgC,OAArB;;QACA,KAAKhC,SAAL,GAAuB,IAAvB;MACD,CAjSM;;MAmSP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI4C,sBAjTO,oCAiTkB;QACvBhF,EAAE,CAACgB,KAAH,CAASD,YAAT,CAAsBE,WAAtB,CACEJ,QAAQ,CAACC,IADX,EAEE,aAFF,EAGE,KAAKmE,SAHP,EAIE,IAJF,EAKE,IALF;MAOD,CAzTM;;MA2TP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIA,SAnUO,qBAmUgBH,CAnUhB,EAmUmB;QACxB,IAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;QACAD,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT;;QACA,IAAI,KAAKhC,SAAL,CAAegC,MAAf,CAAJ,EAA4B;UAC1BJ,CAAC,CAACQ,eAAF;UACAR,CAAC,CAACS,cAAF;QACD,CANuB,CAQxB;;;QACAvF,EAAE,CAACgB,KAAH,CAASD,YAAT,CAAsByE,cAAtB,CACE3E,QAAQ,CAACC,IADX,EAEE,aAFF,EAGE,KAAKmE,SAHP,EAIE,IAJF,EAKE,IALF;MAOD,CAnVM;;MAqVP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;MACI7D,cAhWO,0BAgWQ0D,CAhWR,EAgWW;QAChB,IAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;QACAD,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT,CAFgB,CAIhB;QACA;QACA;QACA;;QACA,IAAIA,MAAM,IAAI,IAAd,EAAoB;UAClB,KAAKtD,OAAL;UACA;QACD,CAXe,CAahB;QACA;QACA;;;QACA,IAAIsD,MAAM,CAACO,OAAP,IAAkBP,MAAM,CAACO,OAAP,EAAlB,IAAsCP,MAAM,CAACO,OAAP,GAAiBxC,SAAjB,EAA1C,EAAwE;UACtE;QACD,CAlBe,CAoBhB;;;QACA,IAAI,KAAKtC,SAAL,CAAeiC,MAAf,GAAwB,CAAxB,IAA6B,CAAC,KAAKM,SAAL,CAAegC,MAAf,CAAlC,EAA0D;UACxD,KAAKtD,OAAL;QACD;MACF,CAxXM;;MA0XP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;MACI8D,SAAe,EAAE;QACfC,KAAK,EAAE,CADQ;QAEfC,KAAK,EAAE;MAFQ,CApYV;;MAyYP;AACJ;AACA;AACA;MACIC,SAAgB,EAAE;QAChBC,GAAG,EAAE,CADW;QAEhBC,MAAM,EAAE,CAFQ;QAGhBC,EAAE,EAAE,CAHY;QAIhBC,IAAI,EAAE,CAJU;QAKhBC,IAAI,EAAE,CALU;QAMhBC,KAAK,EAAE;MANS,CA7YX;;MAsZP;AACJ;AACA;AACA;AACA;AACA;MACI7E,YA5ZO,wBA4ZMwD,CA5ZN,EA4ZS;QACd,IAAIxC,IAAI,GAAG,KAAK+B,aAAL,EAAX;;QACA,IAAI,CAAC/B,IAAL,EAAW;UACT;QACD,CAJa,CAMd;;;QACA,IAAI8D,IAAI,GAAGtB,CAAC,CAACuB,gBAAF,EAAX;;QACA,IACE,KAAKR,SAAL,CAAsBO,IAAtB,KACC,KAAKV,SAAL,CAAqBU,IAArB,KAA8B9D,IAAI,CAACgE,iBAAL,EAFjC,EAGE;UACAxB,CAAC,CAACQ,eAAF;QACD;MACF,CA1aM;;MA4aP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI/D,WArbO,uBAqbKuD,CArbL,EAqbQ;QACb,IAAIxC,IAAI,GAAG,KAAK+B,aAAL,EAAX;;QACA,IAAI,CAAC/B,IAAL,EAAW;UACT;QACD;;QAED,IAAI8D,IAAI,GAAGtB,CAAC,CAACuB,gBAAF,EAAX;QACA,IAAIE,UAAU,GAAG,KAAKV,SAAL,CAAsBO,IAAtB,CAAjB;QACA,IAAII,SAAS,GAAG,KAAKd,SAAL,CAAqBU,IAArB,CAAhB;;QAEA,IAAIG,UAAJ,EAAgB;UACd,QAAQH,IAAR;YACE,KAAK,IAAL;cACE,KAAKK,aAAL,CAAmBnE,IAAnB;;cACA;;YAEF,KAAK,MAAL;cACE,KAAKoE,eAAL,CAAqBpE,IAArB;;cACA;;YAEF,KAAK,MAAL;cACE,KAAKqE,eAAL,CAAqBrE,IAArB;;cACA;;YAEF,KAAK,OAAL;cACE,KAAKsE,gBAAL,CAAsBtE,IAAtB;;cACA;;YAEF,KAAK,KAAL;YACA,KAAK,QAAL;cACE,KAAKV,OAAL;cACA;UApBJ;;UAuBAkD,CAAC,CAACQ,eAAF;UACAR,CAAC,CAACS,cAAF;QACD,CA1BD,MA0BO,IAAIiB,SAAJ,EAAe;UACpB;UACA,IAAIK,MAAM,GAAGvE,IAAI,CAACgE,iBAAL,EAAb;;UACA,IAAIO,MAAJ,EAAY;YACV,QAAQT,IAAR;cACE,KAAK,OAAL;gBACE,KAAKU,gBAAL,CAAsBxE,IAAtB,EAA4BuE,MAA5B,EAAoC/B,CAApC;;gBACA;;cAEF,KAAK,OAAL;gBACE,KAAKiC,gBAAL,CAAsBzE,IAAtB,EAA4BuE,MAA5B,EAAoC/B,CAApC;;gBACA;YAPJ;;YAUAA,CAAC,CAACQ,eAAF;YACAR,CAAC,CAACS,cAAF;UACD;QACF;MACF,CA3eM;;MA6eP;AACJ;AACA;AACA;AACA;MACIkB,aAlfO,yBAkfOnE,IAlfP,EAkfa;QAClB;QACA,IAAI0E,cAAc,GAAG1E,IAAI,CAACgE,iBAAL,EAArB;QACA,IAAI5D,QAAQ,GAAGJ,IAAI,CAACK,WAAL,EAAf;QACA,IAAIJ,KAAK,GAAGyE,cAAc,GACtB1E,IAAI,CAAC2E,OAAL,CAAaD,cAAb,IAA+B,CADT,GAEtBtE,QAAQ,CAACE,MAAT,GAAkB,CAFtB;;QAGA,IAAIsE,QAAQ,GAAG,KAAK7E,SAAL,CAAeC,IAAf,EAAqBC,KAArB,EAA4B,CAAC,CAA7B,EAAgC,IAAhC,CAAf,CAPkB,CASlB;;;QACA,IAAI2E,QAAJ,EAAc;UACZ5E,IAAI,CAAC6E,iBAAL,CAAuBD,QAAvB;QACD,CAFD,MAEO;UACL5E,IAAI,CAAC8E,mBAAL;QACD;MACF,CAjgBM;;MAmgBP;AACJ;AACA;AACA;AACA;MACIV,eAxgBO,2BAwgBSpE,IAxgBT,EAwgBe;QACpB;QACA,IAAI0E,cAAc,GAAG1E,IAAI,CAACgE,iBAAL,EAArB;QACA,IAAI/D,KAAK,GAAGyE,cAAc,GAAG1E,IAAI,CAAC2E,OAAL,CAAaD,cAAb,IAA+B,CAAlC,GAAsC,CAAhE;;QACA,IAAIE,QAAQ,GAAG,KAAK7E,SAAL,CAAeC,IAAf,EAAqBC,KAArB,EAA4B,CAA5B,EAA+B,IAA/B,CAAf,CAJoB,CAMpB;;;QACA,IAAI2E,QAAJ,EAAc;UACZ5E,IAAI,CAAC6E,iBAAL,CAAuBD,QAAvB;QACD,CAFD,MAEO;UACL5E,IAAI,CAAC8E,mBAAL;QACD;MACF,CAphBM;;MAshBP;AACJ;AACA;AACA;AACA;MACIT,eA3hBO,2BA2hBSrE,IA3hBT,EA2hBe;QACpB,IAAI+E,UAAU,GAAG/E,IAAI,CAACmB,SAAL,EAAjB;;QACA,IAAI,CAAC4D,UAAL,EAAiB;UACf;QACD,CAJmB,CAMpB;;;QACA,IAAIA,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWqB,cAArC,EAAqD;UACnD,IAAI2D,UAAU,GAAGD,UAAU,CAAC/D,eAAX,EAAjB;UAEAgE,UAAU,CAACC,iBAAX;UACAD,UAAU,CAACH,iBAAX,CAA6BE,UAA7B;QACD,CALD,CAOA;QAPA,KAQK,IAAIA,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMoE,OAAN,CAAcC,MAAxC,EAAgD;UACnD,IAAIC,OAAO,GAAGL,UAAU,CAACM,UAAX,GAAwBC,cAAxB,EAAd;UACA,IAAIC,KAAK,GAAGH,OAAO,CAACT,OAAR,CAAgBI,UAAhB,CAAZ,CAFmD,CAInD;;UACA,IAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB;YAChB;UACD,CAPkD,CASnD;;;UACA,IAAIC,UAAU,GAAG,IAAjB;UACA,IAAIlF,MAAM,GAAG8E,OAAO,CAAC9E,MAArB;;UACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EAAkC;YAChC,IAAI+D,MAAM,GAAGa,OAAO,CAAC,CAACG,KAAK,GAAG/E,CAAR,GAAYF,MAAb,IAAuBA,MAAxB,CAApB;;YACA,IAAIiE,MAAM,CAAC9D,SAAP,MAAsB8D,MAAM,CAAC5D,SAAP,EAA1B,EAA8C;cAC5C6E,UAAU,GAAGjB,MAAb;cACA;YACD;UACF;;UAED,IAAIiB,UAAU,IAAIA,UAAU,IAAIT,UAAhC,EAA4C;YAC1CS,UAAU,CAAC/C,IAAX,CAAgB,IAAhB;UACD;QACF;MACF,CAlkBM;;MAokBP;AACJ;AACA;AACA;AACA;MACI6B,gBAzkBO,4BAykBUtE,IAzkBV,EAykBgB;QACrB,IAAI0E,cAAc,GAAG1E,IAAI,CAACgE,iBAAL,EAArB,CADqB,CAGrB;;QACA,IAAIU,cAAJ,EAAoB;UAClB,IAAIe,OAAO,GAAGf,cAAc,CAACvB,OAAf,EAAd;;UAEA,IAAIsC,OAAJ,EAAa;YACX;YACAzF,IAAI,CAAC0F,eAAL,CAAqBhB,cAArB,EAFW,CAIX;;YACA,IAAIiB,KAAK,GAAG,KAAK5F,SAAL,CAAe0F,OAAf,EAAwB,CAAxB,EAA2B,CAA3B,CAAZ;;YACA,IAAIE,KAAJ,EAAW;cACTF,OAAO,CAACZ,iBAAR,CAA0Bc,KAA1B;YACD;;YAED;UACD;QACF,CAfD,CAiBA;QACA;QAlBA,KAmBK,IAAI,CAAC3F,IAAI,CAAC4F,eAAL,EAAL,EAA6B;UAChC,IAAID,KAAK,GAAG,KAAK5F,SAAL,CAAeC,IAAf,EAAqB,CAArB,EAAwB,CAAxB,CAAZ;;UAEA,IAAI2F,KAAJ,EAAW;YACT3F,IAAI,CAAC6E,iBAAL,CAAuBc,KAAvB;;YAEA,IAAIA,KAAK,CAACxC,OAAN,EAAJ,EAAqB;cACnBnD,IAAI,CAAC0F,eAAL,CAAqBC,KAArB;YACD;;YAED;UACD;QACF,CAnCoB,CAqCrB;;;QACA,IAAIZ,UAAU,GAAG/E,IAAI,CAACmB,SAAL,EAAjB,CAtCqB,CAwCrB;;QACA,IAAI4D,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWmF,MAAjC,IAA2CT,cAA/C,EAA+D;UAC7D;UACA;UACA,OAAOK,UAAP,EAAmB;YACjBA,UAAU,GAAGA,UAAU,CAAC/D,eAAX,EAAb;;YACA,IAAI+D,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWe,IAArC,EAA2C;cACzCgE,UAAU,GAAGA,UAAU,CAAC5D,SAAX,EAAb;;cACA,IAAI4D,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMoE,OAAN,CAAcC,MAAxC,EAAgD;gBAC9C;cACD;YACF,CALD,MAKO;cACL;YACD;UACF;;UAED,IAAI,CAACJ,UAAL,EAAiB;YACf;UACD;QACF,CA3DoB,CA6DrB;;;QACA,IAAIA,UAAU,YAAYrH,EAAE,CAACoD,EAAH,CAAMoE,OAAN,CAAcC,MAAxC,EAAgD;UAC9C,IAAIC,OAAO,GAAGL,UAAU,CAACM,UAAX,GAAwBC,cAAxB,EAAd;UACA,IAAIC,KAAK,GAAGH,OAAO,CAACT,OAAR,CAAgBI,UAAhB,CAAZ,CAF8C,CAI9C;;UACA,IAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB;YAChB;UACD,CAP6C,CAS9C;;;UACA,IAAIM,UAAU,GAAG,IAAjB;UACA,IAAIvF,MAAM,GAAG8E,OAAO,CAAC9E,MAArB;;UACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EAAkC;YAChC,IAAI+D,MAAM,GAAGa,OAAO,CAAC,CAACG,KAAK,GAAG/E,CAAT,IAAcF,MAAf,CAApB;;YACA,IAAIiE,MAAM,CAAC9D,SAAP,MAAsB8D,MAAM,CAAC5D,SAAP,EAA1B,EAA8C;cAC5CkF,UAAU,GAAGtB,MAAb;cACA;YACD;UACF;;UAED,IAAIsB,UAAU,IAAIA,UAAU,IAAId,UAAhC,EAA4C;YAC1Cc,UAAU,CAACpD,IAAX,CAAgB,IAAhB;UACD;QACF;MACF,CA/pBM;;MAiqBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACI+B,gBAxqBO,4BAwqBUxE,IAxqBV,EAwqBgBuE,MAxqBhB,EAwqBwB/B,CAxqBxB,EAwqB2B;QAChC;QACA,IAAI+B,MAAM,CAACuB,WAAP,CAAmB,UAAnB,CAAJ,EAAoC;UAClC;UACA,IAAIC,KAAK,GAAGvD,CAAC,CAACuD,KAAF,EAAZ;UACAA,KAAK,CAACC,UAAN,CAAiB,KAAjB;UACAD,KAAK,CAACE,SAAN,CAAgB1B,MAAhB,EAJkC,CAMlC;;UACAA,MAAM,CAAC2B,aAAP,CAAqBH,KAArB;QACD,CAV+B,CAYhC;;;QACA,KAAKzG,OAAL;MACD,CAtrBM;;MAwrBP;AACJ;AACA;AACA;AACA;AACA;AACA;MACImF,gBA/rBO,4BA+rBUzE,IA/rBV,EA+rBgBuE,MA/rBhB,EA+rBwB/B,CA/rBxB,EA+rB2B;QAChC;QACA,IAAI+B,MAAM,CAACuB,WAAP,CAAmB,UAAnB,CAAJ,EAAoC;UAClC;UACA,IAAIC,KAAK,GAAGvD,CAAC,CAACuD,KAAF,EAAZ;UACAA,KAAK,CAACC,UAAN,CAAiB,KAAjB;UACAD,KAAK,CAACE,SAAN,CAAgB1B,MAAhB,EAJkC,CAMlC;;UACAA,MAAM,CAAC2B,aAAP,CAAqBH,KAArB;QACD;MACF,CA1sBM;;MA4sBP;AACJ;AACA;AACA;AACA;MACIhH,OAjtBO,mBAitBCyD,CAjtBD,EAitBI;QACT,IAAII,MAAM,GAAGJ,CAAC,CAACK,SAAF,EAAb;QACAD,MAAM,GAAGlF,EAAE,CAACoD,EAAH,CAAM5C,IAAN,CAAW4E,MAAX,CAAkBC,kBAAlB,CAAqCH,MAArC,EAA6C,IAA7C,CAAT;;QAEA,IACE,KAAKvE,SAAL,CAAeiC,MAAf,GAAwB,CAAxB,IACA,CAAC,KAAKM,SAAL,CAAegC,MAAf,CADD,IAEA,CAAC,KAAK3B,aAAL,CAAmB2B,MAAnB,CAFD,IAGA,CAACJ,CAAC,CAAC2D,WAAF,EAJH,EAKE;UACA,KAAK7G,OAAL;QACD;MACF;IA7tBM,CA1D2B;;IA0xBpC;AACF;AACA;AACA;AACA;IAEE8G,QAhyBoC,sBAgyBzB;MACT,IAAI3H,YAAY,GAAGf,EAAE,CAACgB,KAAH,CAASD,YAA5B;MACA,IAAIH,EAAE,GAAGC,QAAQ,CAACC,IAAlB,CAFS,CAIT;;MACAC,YAAY,CAACyE,cAAb,CACEtE,MAAM,CAACL,QAAP,CAAgBM,eADlB,EAEE,aAFF,EAGE,KAAKC,cAHP,EAIE,IAJF,EAKE,IALF,EALS,CAaT;;MACAL,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,SAAhC,EAA2C,KAAKU,YAAhD,EAA8D,IAA9D,EAAoE,IAApE;MACAP,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,OAAhC,EAAyC,KAAKU,YAA9C,EAA4D,IAA5D,EAAkE,IAAlE;MACAP,YAAY,CAACyE,cAAb,CAA4B5E,EAA5B,EAAgC,UAAhC,EAA4C,KAAKW,WAAjD,EAA8D,IAA9D,EAAoE,IAApE;;MAEA,KAAKoH,eAAL,CAAqB,WAArB,EAAoC,WAApC;;MACA,KAAKC,aAAL,CAAmB,WAAnB;IACD;EApzBmC,CAAtC;EA5BA5I,EAAE,CAACoD,EAAH,CAAMd,IAAN,CAAWuG,OAAX,CAAmB1I,aAAnB,GAAmCA,aAAnC"
}