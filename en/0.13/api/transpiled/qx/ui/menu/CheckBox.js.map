{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "menu",
    "AbstractButton",
    "implement",
    "form",
    "IBooleanForm",
    "construct",
    "label",
    "constructor",
    "call",
    "contenEl",
    "getContentElement",
    "setAttribute",
    "translate",
    "setLabel",
    "setMenu",
    "addListener",
    "_onExecute",
    "properties",
    "appearance",
    "refine",
    "init",
    "value",
    "check",
    "apply",
    "event",
    "nullable",
    "members",
    "_bindableProperties",
    "_applyValue",
    "old",
    "addState",
    "removeState",
    "Boolean",
    "e",
    "toggleValue",
    "CheckBox"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/CheckBox.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Renders a special checkbox button inside a menu. The button behaves like\n * a normal {@link qx.ui.form.CheckBox} and shows a check icon when\n * checked; normally shows no icon when not checked (depends on the theme).\n */\nqx.Class.define(\"qx.ui.menu.CheckBox\", {\n  extend: qx.ui.menu.AbstractButton,\n  implement: [qx.ui.form.IBooleanForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param menu {qx.ui.menu.Menu} Initial sub menu\n   */\n  construct(label, menu) {\n    super();\n\n    // ARIA attrs\n    const contenEl = this.getContentElement();\n    contenEl.setAttribute(\"role\", \"checkbox\");\n    contenEl.setAttribute(\"aria-checked\", false);\n\n    // Initialize with incoming arguments\n    if (label != null) {\n      // try to translate every time you create a checkbox [BUG #2699]\n      if (label.translate) {\n        this.setLabel(label.translate());\n      } else {\n        this.setLabel(label);\n      }\n    }\n\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    this.addListener(\"execute\", this._onExecute, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"menu-checkbox\"\n    },\n\n    /** Whether the button is checked */\n    value: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyValue\",\n      event: \"changeValue\",\n      nullable: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties: [\"enabled\", \"label\", \"toolTipText\", \"value\", \"menu\"],\n\n    // property apply\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-checked\", Boolean(value));\n    },\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute(e) {\n      this.toggleValue();\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,qBAAqB,EAAE;IACrCC,MAAM,EAAEN,EAAE,CAACO,EAAE,CAACC,IAAI,CAACC,cAAc;IACjCC,SAAS,EAAE,CAACV,EAAE,CAACO,EAAE,CAACI,IAAI,CAACC,YAAY,CAAC;IAEpC;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;AACA;IACEC,SAAS,WAAAA,UAACC,KAAK,EAAEN,IAAI,EAAE;MACrBR,EAAA,CAAAO,EAAA,CAAAC,IAAA,CAAAC,cAAA,CAAAM,WAAA,CAAAC,IAAA;;MAEA;MACA,IAAMC,QAAQ,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACzCD,QAAQ,CAACE,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;MACzCF,QAAQ,CAACE,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC;;MAE5C;MACA,IAAIL,KAAK,IAAI,IAAI,EAAE;QACjB;QACA,IAAIA,KAAK,CAACM,SAAS,EAAE;UACnB,IAAI,CAACC,QAAQ,CAACP,KAAK,CAACM,SAAS,CAAC,CAAC,CAAC;QAClC,CAAC,MAAM;UACL,IAAI,CAACC,QAAQ,CAACP,KAAK,CAAC;QACtB;MACF;MAEA,IAAIN,IAAI,IAAI,IAAI,EAAE;QAChB,IAAI,CAACc,OAAO,CAACd,IAAI,CAAC;MACpB;MAEA,IAAI,CAACe,WAAW,CAAC,SAAS,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;IACpD,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;MACR,CAAC;MAED;MACAC,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS;QAChBF,IAAI,EAAE,KAAK;QACXG,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE,aAAa;QACpBC,QAAQ,EAAE;MACZ;IACF,CAAC;IAED;AACF;AACA;AACA;AACA;IACE;IACAC,OAAO,EAAE;MACP;MACA;AACJ;AACA;MACIC,mBAAmB,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC;MAEzE;MACAC,WAAW,WAAAA,YAACP,KAAK,EAAEQ,GAAG,EAAE;QACtBR,KAAK,GAAG,IAAI,CAACS,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACC,WAAW,CAAC,SAAS,CAAC;;QAE9D;QACA,IAAI,CAACrB,iBAAiB,CAAC,CAAC,CAACC,YAAY,CAAC,cAAc,EAAEqB,OAAO,CAACX,KAAK,CAAC,CAAC;MACvE,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIL,UAAU,WAAAA,WAACiB,CAAC,EAAE;QACZ,IAAI,CAACC,WAAW,CAAC,CAAC;MACpB;IACF;EACF,CAAC,CAAC;EArHF1C,EAAE,CAACO,EAAE,CAACC,IAAI,CAACmC,QAAQ,CAACxC,aAAa,GAAGA,aAAa;AAAC",
  "ignoreList": []
}