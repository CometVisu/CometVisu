{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MPlacement",
    "MRemoteChildrenHandling",
    "construct",
    "constructor",
    "call",
    "_setLayout",
    "menu",
    "Layout",
    "root",
    "getApplicationRoot",
    "add",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "toHashCode",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onResize",
    "_blocker",
    "Blocker",
    "initVisibility",
    "initKeepFocus",
    "initKeepActive",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowX",
    "allowGrowY",
    "visibility",
    "keepFocus",
    "keepActive",
    "spacingX",
    "check",
    "apply",
    "themeable",
    "spacingY",
    "iconColumnWidth",
    "arrowColumnWidth",
    "blockerColor",
    "nullable",
    "blockerOpacity",
    "selectedButton",
    "openedButton",
    "opener",
    "openInterval",
    "closeInterval",
    "blockBackground",
    "members",
    "__scheduledOpen",
    "__onAfterSlideBarAdd",
    "open",
    "getOpener",
    "isPlaced",
    "placeToWidget",
    "__updateSlideBar",
    "show",
    "_placementTarget",
    "warn",
    "openAtPointer",
    "e",
    "placeToPointer",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "openAtPoint",
    "point",
    "placeToPoint",
    "addSeparator",
    "Separator",
    "getColumnSizes",
    "_getMenuLayout",
    "getSelectables",
    "result",
    "children",
    "getChildren",
    "i",
    "length",
    "isEnabled",
    "push",
    "_applyIconColumnWidth",
    "value",
    "old",
    "setIconColumnWidth",
    "_applyArrowColumnWidth",
    "setArrowColumnWidth",
    "_applySpacingX",
    "setColumnSpacing",
    "_applySpacingY",
    "setSpacing",
    "_applyVisibility",
    "Menu",
    "superclass",
    "prototype",
    "mgr",
    "Manager",
    "getInstance",
    "parentMenu",
    "getParentMenu",
    "setOpenedButton",
    "remove",
    "getOpenedButton",
    "resetOpenedButton",
    "resetSelectedButton",
    "__updateBlockerVisibility",
    "__P_381_3",
    "isVisible",
    "getBlockBackground",
    "zIndex",
    "getZIndex",
    "blockContent",
    "isBlocked",
    "unblock",
    "widget",
    "AbstractButton",
    "getContextMenu",
    "getLayoutParent",
    "_applySelectedButton",
    "removeState",
    "addState",
    "__getRootOpener",
    "valueContentEl",
    "getAttribute",
    "removeAttribute",
    "_applyOpenedButton",
    "getMenu",
    "exclude",
    "_applyOpener",
    "addAriaLabelledBy",
    "_applyBlockerColor",
    "setColor",
    "_applyBlockerOpacity",
    "setOpacity",
    "getChildrenContainer",
    "getChildControl",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "MenuSlideBar",
    "layout",
    "_getLayout",
    "Grow",
    "slidebarLayout",
    "getLayout",
    "setLayout",
    "dispose",
    "lang",
    "Array",
    "clone",
    "removeListener",
    "_add",
    "hasChildControl",
    "_getMenuBounds",
    "getBounds",
    "_computePlacementSize",
    "__P_381_2",
    "menuBounds",
    "addListenerOnce",
    "rootHeight",
    "height",
    "getLayoutProperties",
    "_assertSlideBar",
    "setHeight",
    "moveTo",
    "callback",
    "queue",
    "syncWidget",
    "jobs",
    "_afterAddChild",
    "child",
    "target",
    "undefined",
    "Error",
    "cancelClose",
    "getTarget",
    "setSelectedButton",
    "subMenu",
    "setOpener",
    "scheduleOpen",
    "opened",
    "scheduleClose",
    "cancelOpen",
    "contains",
    "getRelatedTarget",
    "__P_381_4",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Menu.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * The menu is a popup like control which supports buttons. It comes\r\n * with full keyboard navigation and an improved timeout based pointer\r\n * control behavior.\r\n *\r\n * This class is the container for all derived instances of\r\n * {@link qx.ui.menu.AbstractButton}.\r\n *\r\n * @childControl slidebar {qx.ui.menu.MenuSlideBar} shows a slidebar to easily navigate inside the menu (if too little space is left)\r\n */\r\nqx.Class.define(\"qx.ui.menu.Menu\", {\r\n  extend: qx.ui.core.Widget,\r\n\r\n  include: [qx.ui.core.MPlacement, qx.ui.core.MRemoteChildrenHandling],\r\n\r\n  construct() {\r\n    super();\r\n\r\n    // Use hard coded layout\r\n    this._setLayout(new qx.ui.menu.Layout());\r\n\r\n    // Automatically add to application's root\r\n    var root = this.getApplicationRoot();\r\n    root.add(this);\r\n\r\n    // ARIA attrs\r\n    const contentEl = this.getContentElement();\r\n    contentEl.setAttribute(\"role\", \"menu\");\r\n    contentEl.setAttribute(\"id\", \"menu-\" + this.toHashCode());\r\n\r\n    // Register pointer listeners\r\n    this.addListener(\"pointerover\", this._onPointerOver);\r\n    this.addListener(\"pointerout\", this._onPointerOut);\r\n\r\n    // add resize listener\r\n    this.addListener(\"resize\", this._onResize, this);\r\n    root.addListener(\"resize\", this._onResize, this);\r\n\r\n    this._blocker = new qx.ui.core.Blocker(root);\r\n\r\n    // Initialize properties\r\n    this.initVisibility();\r\n    this.initKeepFocus();\r\n    this.initKeepActive();\r\n  },\r\n\r\n  properties: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      WIDGET PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    appearance: {\r\n      refine: true,\r\n      init: \"menu\"\r\n    },\r\n\r\n    // overridden\r\n    allowGrowX: {\r\n      refine: true,\r\n      init: false\r\n    },\r\n\r\n    // overridden\r\n    allowGrowY: {\r\n      refine: true,\r\n      init: false\r\n    },\r\n\r\n    // overridden\r\n    visibility: {\r\n      refine: true,\r\n      init: \"excluded\"\r\n    },\r\n\r\n    // overridden\r\n    keepFocus: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    // overridden\r\n    keepActive: {\r\n      refine: true,\r\n      init: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      STYLE OPTIONS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** The spacing between each cell of the menu buttons */\r\n    spacingX: {\r\n      check: \"Integer\",\r\n      apply: \"_applySpacingX\",\r\n      init: 0,\r\n      themeable: true\r\n    },\r\n\r\n    /** The spacing between each menu button */\r\n    spacingY: {\r\n      check: \"Integer\",\r\n      apply: \"_applySpacingY\",\r\n      init: 0,\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * Default icon column width if no icons are rendered.\r\n     * This property is ignored as soon as an icon is present.\r\n     */\r\n    iconColumnWidth: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      themeable: true,\r\n      apply: \"_applyIconColumnWidth\"\r\n    },\r\n\r\n    /** Default arrow column width if no sub menus are rendered */\r\n    arrowColumnWidth: {\r\n      check: \"Integer\",\r\n      init: 0,\r\n      themeable: true,\r\n      apply: \"_applyArrowColumnWidth\"\r\n    },\r\n\r\n    /**\r\n     * Color of the blocker\r\n     */\r\n    blockerColor: {\r\n      check: \"Color\",\r\n      init: null,\r\n      nullable: true,\r\n      apply: \"_applyBlockerColor\",\r\n      themeable: true\r\n    },\r\n\r\n    /**\r\n     * Opacity of the blocker\r\n     */\r\n    blockerOpacity: {\r\n      check: \"Number\",\r\n      init: 1,\r\n      apply: \"_applyBlockerOpacity\",\r\n      themeable: true\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      FUNCTIONALITY PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** The currently selected button */\r\n    selectedButton: {\r\n      check: \"qx.ui.core.Widget\",\r\n      nullable: true,\r\n      apply: \"_applySelectedButton\"\r\n    },\r\n\r\n    /** The currently opened button (sub menu is visible) */\r\n    openedButton: {\r\n      check: \"qx.ui.core.Widget\",\r\n      nullable: true,\r\n      apply: \"_applyOpenedButton\"\r\n    },\r\n\r\n    /** Widget that opened the menu */\r\n    opener: {\r\n      check: \"qx.ui.core.Widget\",\r\n      nullable: true,\r\n      apply: \"_applyOpener\"\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      BEHAVIOR PROPERTIES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /** Interval in ms after which sub menus should be opened */\r\n    openInterval: {\r\n      check: \"Integer\",\r\n      themeable: true,\r\n      init: 250\r\n    },\r\n\r\n    /** Interval in ms after which sub menus should be closed  */\r\n    closeInterval: {\r\n      check: \"Integer\",\r\n      themeable: true,\r\n      init: 250\r\n    },\r\n\r\n    /** Blocks the background if value is <code>true<code> */\r\n    blockBackground: {\r\n      check: \"Boolean\",\r\n      themeable: true,\r\n      init: false\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    __scheduledOpen: null,\r\n    __onAfterSlideBarAdd: null,\r\n\r\n    /** @type {qx.ui.core.Blocker} blocker for background blocking */\r\n    _blocker: null,\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Opens the menu and configures the opener\r\n     */\r\n    open() {\r\n      if (this.getOpener() != null) {\r\n        var isPlaced = this.placeToWidget(this.getOpener(), true);\r\n        if (isPlaced) {\r\n          this.__updateSlideBar();\r\n          this.show();\r\n\r\n          this._placementTarget = this.getOpener();\r\n        } else {\r\n          this.warn(\r\n            \"Could not open menu instance because 'opener' widget is not visible\"\r\n          );\r\n        }\r\n      } else {\r\n        this.warn(\"The menu instance needs a configured 'opener' widget!\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Opens the menu at the pointer position\r\n     *\r\n     * @param e {qx.event.type.Pointer} Pointer event to align to\r\n     */\r\n    openAtPointer(e) {\r\n      this.placeToPointer(e);\r\n      this.__updateSlideBar();\r\n      this.show();\r\n\r\n      this._placementTarget = {\r\n        left: e.getDocumentLeft(),\r\n        top: e.getDocumentTop()\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Opens the menu in relation to the given point\r\n     *\r\n     * @param point {Map} Coordinate of any point with the keys <code>left</code>\r\n     *   and <code>top</code>.\r\n     */\r\n    openAtPoint(point) {\r\n      this.placeToPoint(point);\r\n      this.__updateSlideBar();\r\n      this.show();\r\n\r\n      this._placementTarget = point;\r\n    },\r\n\r\n    /**\r\n     * Convenience method to add a separator to the menu\r\n     */\r\n    addSeparator() {\r\n      this.add(new qx.ui.menu.Separator());\r\n    },\r\n\r\n    /**\r\n     * Returns the column sizes detected during the pre-layout phase\r\n     *\r\n     * @return {Array} List of all column widths\r\n     */\r\n    getColumnSizes() {\r\n      return this._getMenuLayout().getColumnSizes();\r\n    },\r\n\r\n    /**\r\n     * Return all selectable menu items.\r\n     *\r\n     * @return {qx.ui.core.Widget[]} selectable widgets\r\n     */\r\n    getSelectables() {\r\n      var result = [];\r\n      var children = this.getChildren();\r\n\r\n      for (var i = 0; i < children.length; i++) {\r\n        if (children[i].isEnabled()) {\r\n          result.push(children[i]);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      PROPERTY APPLY ROUTINES\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // property apply\r\n    _applyIconColumnWidth(value, old) {\r\n      this._getMenuLayout().setIconColumnWidth(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyArrowColumnWidth(value, old) {\r\n      this._getMenuLayout().setArrowColumnWidth(value);\r\n    },\r\n\r\n    // property apply\r\n    _applySpacingX(value, old) {\r\n      this._getMenuLayout().setColumnSpacing(value);\r\n    },\r\n\r\n    // property apply\r\n    _applySpacingY(value, old) {\r\n      this._getMenuLayout().setSpacing(value);\r\n    },\r\n\r\n    // overridden\r\n    _applyVisibility(value, old) {\r\n      super._applyVisibility(value, old);\r\n\r\n      var mgr = qx.ui.menu.Manager.getInstance();\r\n\r\n      if (value === \"visible\") {\r\n        // Register to manager (zIndex handling etc.)\r\n        mgr.add(this);\r\n\r\n        // Mark opened in parent menu\r\n        var parentMenu = this.getParentMenu();\r\n        if (parentMenu) {\r\n          parentMenu.setOpenedButton(this.getOpener());\r\n        }\r\n      } else if (old === \"visible\") {\r\n        // Deregister from manager (zIndex handling etc.)\r\n        mgr.remove(this);\r\n\r\n        // Unmark opened in parent menu\r\n        var parentMenu = this.getParentMenu();\r\n        if (parentMenu && parentMenu.getOpenedButton() == this.getOpener()) {\r\n          parentMenu.resetOpenedButton();\r\n        }\r\n\r\n        // Clear properties\r\n        this.resetOpenedButton();\r\n        this.resetSelectedButton();\r\n      }\r\n\r\n      this.__updateBlockerVisibility();\r\n    },\r\n\r\n    /**\r\n     * Updates the blocker's visibility\r\n     */\r\n    __updateBlockerVisibility() {\r\n      if (this.isVisible()) {\r\n        if (this.getBlockBackground()) {\r\n          var zIndex = this.getZIndex();\r\n          this._blocker.blockContent(zIndex - 1);\r\n        }\r\n      } else {\r\n        if (this._blocker.isBlocked()) {\r\n          this._blocker.unblock();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the parent menu. Returns <code>null</code> if the menu doesn't have a\r\n     * parent menu.\r\n     *\r\n     * @return {qx.ui.core.Widget|null} The parent menu.\r\n     */\r\n    getParentMenu() {\r\n      var widget = this.getOpener();\r\n      if (!widget || !(widget instanceof qx.ui.menu.AbstractButton)) {\r\n        return null;\r\n      }\r\n\r\n      if (widget && widget.getContextMenu() === this) {\r\n        return null;\r\n      }\r\n\r\n      while (widget && !(widget instanceof qx.ui.menu.Menu)) {\r\n        widget = widget.getLayoutParent();\r\n      }\r\n      return widget;\r\n    },\r\n\r\n    // property apply\r\n    _applySelectedButton(value, old) {\r\n      if (old) {\r\n        old.removeState(\"selected\");\r\n      }\r\n      if (value) {\r\n        value.addState(\"selected\");\r\n      }\r\n\r\n      // ARIA attrs\r\n      const opener = this.__getRootOpener();\r\n      const contentEl = opener\r\n        ? opener.getContentElement()\r\n        : this.getContentElement();\r\n      if (!contentEl) {\r\n        return;\r\n      }\r\n      const valueContentEl = value ? value.getContentElement() : null;\r\n      if (valueContentEl) {\r\n        contentEl.setAttribute(\r\n          \"aria-activedescendant\",\r\n          valueContentEl.getAttribute(\"id\")\r\n        );\r\n      } else {\r\n        contentEl.removeAttribute(\"aria-activedescendant\");\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyOpenedButton(value, old) {\r\n      if (old && old.getMenu()) {\r\n        old.getMenu().exclude();\r\n      }\r\n\r\n      if (value) {\r\n        value.getMenu().open();\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyOpener(value, old) {\r\n      // ARIA attrs\r\n      const contentEl = this.getContentElement();\r\n      if (!contentEl) {\r\n        return;\r\n      }\r\n      if (value && value.getContentElement()) {\r\n        contentEl.setAttribute(\"aria-labelledby\", \"\");\r\n        this.addAriaLabelledBy(value);\r\n      } else {\r\n        contentEl.removeAttribute(\"aria-labelledby\");\r\n      }\r\n    },\r\n\r\n    // property apply\r\n    _applyBlockerColor(value, old) {\r\n      this._blocker.setColor(value);\r\n    },\r\n\r\n    // property apply\r\n    _applyBlockerOpacity(value, old) {\r\n      this._blocker.setOpacity(value);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n    SCROLLING SUPPORT\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    // overridden\r\n    getChildrenContainer() {\r\n      return this.getChildControl(\"slidebar\", true) || this;\r\n    },\r\n\r\n    // overridden\r\n    _createChildControlImpl(id, hash) {\r\n      var control;\r\n\r\n      switch (id) {\r\n        case \"slidebar\":\r\n          var control = new qx.ui.menu.MenuSlideBar();\r\n\r\n          var layout = this._getLayout();\r\n          this._setLayout(new qx.ui.layout.Grow());\r\n\r\n          var slidebarLayout = control.getLayout();\r\n          control.setLayout(layout);\r\n          slidebarLayout.dispose();\r\n\r\n          var children = qx.lang.Array.clone(this.getChildren());\r\n          for (var i = 0; i < children.length; i++) {\r\n            control.add(children[i]);\r\n          }\r\n\r\n          this.removeListener(\"resize\", this._onResize, this);\r\n          control\r\n            .getChildrenContainer()\r\n            .addListener(\"resize\", this._onResize, this);\r\n\r\n          this._add(control);\r\n\r\n          break;\r\n      }\r\n\r\n      return control || super._createChildControlImpl(id);\r\n    },\r\n\r\n    /**\r\n     * Get the menu layout manager\r\n     *\r\n     * @return {qx.ui.layout.Abstract} The menu layout manager\r\n     */\r\n    _getMenuLayout() {\r\n      if (this.hasChildControl(\"slidebar\")) {\r\n        return this.getChildControl(\"slidebar\")\r\n          .getChildrenContainer()\r\n          .getLayout();\r\n      } else {\r\n        return this._getLayout();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get the menu bounds\r\n     *\r\n     * @return {Map} The menu bounds\r\n     */\r\n    _getMenuBounds() {\r\n      if (this.hasChildControl(\"slidebar\")) {\r\n        return this.getChildControl(\"slidebar\")\r\n          .getChildrenContainer()\r\n          .getBounds();\r\n      } else {\r\n        return this.getBounds();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Computes the size of the menu. This method is used by the\r\n     * {@link qx.ui.core.MPlacement} mixin.\r\n     * @return {Map} The menu bounds\r\n     */\r\n    _computePlacementSize() {\r\n      return this._getMenuBounds();\r\n    },\r\n\r\n    /**\r\n     * Updates the visibility of the slidebar based on the menu's current size\r\n     * and position.\r\n     */\r\n    __updateSlideBar() {\r\n      var menuBounds = this._getMenuBounds();\r\n      if (!menuBounds) {\r\n        this.addListenerOnce(\"resize\", this.__updateSlideBar, this);\r\n        return;\r\n      }\r\n\r\n      var rootHeight = this.getLayoutParent().getBounds().height;\r\n      var top = this.getLayoutProperties().top;\r\n      var left = this.getLayoutProperties().left;\r\n\r\n      // Adding the slidebar must be deferred because this call can happen\r\n      // during the layout flush, which make it impossible to move existing\r\n      // layout to the slidebar\r\n      if (top < 0) {\r\n        this._assertSlideBar(function () {\r\n          this.setHeight(menuBounds.height + top);\r\n          this.moveTo(left, 0);\r\n        });\r\n      } else if (top + menuBounds.height > rootHeight) {\r\n        this._assertSlideBar(function () {\r\n          this.setHeight(rootHeight - top);\r\n        });\r\n      } else {\r\n        this.setHeight(null);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Schedules the addition of the slidebar and calls the given callback\r\n     * after the slidebar has been added.\r\n     *\r\n     * @param callback {Function} the callback to call\r\n     * @return {var|undefined} The return value of the callback if the slidebar\r\n     * already exists, or <code>undefined</code> if it doesn't\r\n     */\r\n    _assertSlideBar(callback) {\r\n      if (this.hasChildControl(\"slidebar\")) {\r\n        return callback.call(this);\r\n      }\r\n\r\n      this.__onAfterSlideBarAdd = callback;\r\n      qx.ui.core.queue.Widget.add(this);\r\n    },\r\n\r\n    // overridden\r\n    syncWidget(jobs) {\r\n      this.getChildControl(\"slidebar\");\r\n      if (this.__onAfterSlideBarAdd) {\r\n        this.__onAfterSlideBarAdd.call(this);\r\n        delete this.__onAfterSlideBarAdd;\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      EVENT HANDLING\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Gets called when a child is added. Sets ARIA attrs\r\n     * @param {*} child\r\n     */\r\n    _afterAddChild(child) {\r\n      // Some childs, e.g. Seperators, are no meaningful menu items\r\n      if (child instanceof qx.ui.menu.AbstractButton) {\r\n        const contentEl = child.getContentElement();\r\n        contentEl.setAttribute(\"id\", \"menu-item-\" + child.toHashCode());\r\n        contentEl.setAttribute(\"role\", \"menuitem\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update position if the menu or the root is resized\r\n     */\r\n    _onResize() {\r\n      if (this.isVisible()) {\r\n        var target = this._placementTarget;\r\n        if (!target) {\r\n          return;\r\n        } else if (target instanceof qx.ui.core.Widget) {\r\n          this.placeToWidget(target, true);\r\n        } else if (target.top !== undefined) {\r\n          this.placeToPoint(target);\r\n        } else {\r\n          throw new Error(\"Unknown target: \" + target);\r\n        }\r\n        this.__updateSlideBar();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for pointerover event.\r\n     *\r\n     * @param e {qx.event.type.Pointer} pointerover event\r\n     */\r\n    _onPointerOver(e) {\r\n      // Cache manager\r\n      var mgr = qx.ui.menu.Manager.getInstance();\r\n\r\n      // Be sure this menu is kept\r\n      mgr.cancelClose(this);\r\n\r\n      // Change selection\r\n      var target = e.getTarget();\r\n      if (target.isEnabled() && target instanceof qx.ui.menu.AbstractButton) {\r\n        // Select button directly\r\n        this.setSelectedButton(target);\r\n\r\n        var subMenu = target.getMenu && target.getMenu();\r\n        if (subMenu) {\r\n          subMenu.setOpener(target);\r\n\r\n          // Finally schedule for opening\r\n          mgr.scheduleOpen(subMenu);\r\n\r\n          // Remember scheduled menu for opening\r\n          this.__scheduledOpen = subMenu;\r\n        } else {\r\n          var opened = this.getOpenedButton();\r\n          if (opened) {\r\n            mgr.scheduleClose(opened.getMenu());\r\n          }\r\n\r\n          if (this.__scheduledOpen) {\r\n            mgr.cancelOpen(this.__scheduledOpen);\r\n            this.__scheduledOpen = null;\r\n          }\r\n        }\r\n      } else if (!this.getOpenedButton()) {\r\n        // When no button is opened reset the selection\r\n        // Otherwise keep it\r\n        this.resetSelectedButton();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Event listener for pointerout event.\r\n     *\r\n     * @param e {qx.event.type.Pointer} pointerout event\r\n     */\r\n    _onPointerOut(e) {\r\n      // Cache manager\r\n      var mgr = qx.ui.menu.Manager.getInstance();\r\n\r\n      // Detect whether the related target is out of the menu\r\n      if (!qx.ui.core.Widget.contains(this, e.getRelatedTarget())) {\r\n        // Update selected property\r\n        // Force it to the open sub menu in cases where that is opened\r\n        // Otherwise reset it. Menus which are left by the cursor should\r\n        // not show any selection.\r\n        var opened = this.getOpenedButton();\r\n        opened ? this.setSelectedButton(opened) : this.resetSelectedButton();\r\n\r\n        // Cancel a pending close request for the currently\r\n        // opened sub menu\r\n        if (opened) {\r\n          mgr.cancelClose(opened.getMenu());\r\n        }\r\n\r\n        // When leaving this menu to the outside, stop\r\n        // all pending requests to open any other sub menu\r\n        if (this.__scheduledOpen) {\r\n          mgr.cancelOpen(this.__scheduledOpen);\r\n        }\r\n      }\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n      HELPER FUNCTIONS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Get the opener of the root/the first parent menu.\r\n     * parent menu.\r\n     *\r\n     * @return {qx.ui.core.Widget|null} The opener.\r\n     */\r\n    __getRootOpener() {\r\n      let parentMenu = this.getParentMenu();\r\n      if (!parentMenu) {\r\n        return this.getOpener();\r\n      }\r\n      let opener;\r\n      while (parentMenu) {\r\n        opener = parentMenu.getOpener();\r\n        parentMenu = parentMenu.getParentMenu();\r\n      }\r\n      return opener;\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     DESTRUCTOR\r\n  *****************************************************************************\r\n  */\r\n\r\n  destruct() {\r\n    if (!qx.core.ObjectRegistry.inShutDown) {\r\n      qx.ui.menu.Manager.getInstance().remove(this);\r\n    }\r\n\r\n    this.getApplicationRoot().removeListener(\"resize\", this._onResize, this);\r\n    this._placementTarget = null;\r\n    this._disposeObjects(\"_blocker\");\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}