{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "VBox",
    "properties",
    "columnSpacing",
    "check",
    "init",
    "apply",
    "spanColumn",
    "nullable",
    "iconColumnWidth",
    "themeable",
    "arrowColumnWidth",
    "members",
    "__columnSizes",
    "_computeSizeHint",
    "children",
    "_getLayoutChildren",
    "child",
    "sizes",
    "spacing",
    "getSpanColumn",
    "columnSizes",
    "getColumnSpacing",
    "spanColumnWidth",
    "maxInset",
    "i",
    "l",
    "length",
    "isAnonymous",
    "getChildrenSizes",
    "column",
    "Math",
    "max",
    "insets",
    "getInsets",
    "left",
    "right",
    "getIconColumnWidth",
    "getArrowColumnWidth",
    "height",
    "minHeight",
    "width",
    "lang",
    "Array",
    "sum",
    "getColumnSizes",
    "destruct",
    "menu",
    "Layout"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Layout.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Layouter used by the qooxdoo menu's to render their buttons\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.menu.Layout\", {\n  extend: qx.ui.layout.VBox,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Spacing between each cell on the menu buttons */\n    columnSpacing: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /**\n     * Whether a column and which column should automatically span\n     * when the following cell is empty. Spanning may be disabled\n     * through setting this property to <code>null</code>.\n     */\n    spanColumn: {\n      check: \"Integer\",\n      init: 1,\n      nullable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Default icon column width if no icons are rendered */\n    iconColumnWidth: {\n      check: \"Integer\",\n      init: 0,\n      themeable: true,\n      apply: \"_applyLayoutChange\"\n    },\n\n    /** Default arrow column width if no sub menus are rendered */\n    arrowColumnWidth: {\n      check: \"Integer\",\n      init: 0,\n      themeable: true,\n      apply: \"_applyLayoutChange\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __columnSizes: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _computeSizeHint() {\n      var children = this._getLayoutChildren();\n      var child, sizes, spacing;\n\n      var spanColumn = this.getSpanColumn();\n      var columnSizes = (this.__columnSizes = [0, 0, 0, 0]);\n      var columnSpacing = this.getColumnSpacing();\n      var spanColumnWidth = 0;\n      var maxInset = 0;\n\n      // Compute column sizes and insets\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        if (child.isAnonymous()) {\n          continue;\n        }\n\n        sizes = child.getChildrenSizes();\n\n        for (var column = 0; column < sizes.length; column++) {\n          if (\n            spanColumn != null &&\n            column == spanColumn &&\n            sizes[spanColumn + 1] == 0\n          ) {\n            spanColumnWidth = Math.max(spanColumnWidth, sizes[column]);\n          } else {\n            columnSizes[column] = Math.max(columnSizes[column], sizes[column]);\n          }\n        }\n\n        var insets = children[i].getInsets();\n        maxInset = Math.max(maxInset, insets.left + insets.right);\n      }\n\n      // Fix label column width is cases where the maximum button with no shortcut\n      // is larger than the maximum button with a shortcut\n      if (\n        spanColumn != null &&\n        columnSizes[spanColumn] + columnSpacing + columnSizes[spanColumn + 1] <\n          spanColumnWidth\n      ) {\n        columnSizes[spanColumn] =\n          spanColumnWidth - columnSizes[spanColumn + 1] - columnSpacing;\n      }\n\n      // When merging the cells for label and shortcut\n      // ignore the spacing between them\n      if (spanColumnWidth == 0) {\n        spacing = columnSpacing * 2;\n      } else {\n        spacing = columnSpacing * 3;\n      }\n\n      // Fix zero size icon column\n      if (columnSizes[0] == 0) {\n        columnSizes[0] = this.getIconColumnWidth();\n      }\n\n      // Fix zero size arrow column\n      if (columnSizes[3] == 0) {\n        columnSizes[3] = this.getArrowColumnWidth();\n      }\n\n      var height = super._computeSizeHint().height;\n\n      // Build hint\n      return {\n        minHeight: height,\n        height: height,\n        width: qx.lang.Array.sum(columnSizes) + maxInset + spacing\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CUSTOM ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the column sizes detected during the pre-layout phase\n     *\n     * @return {Array} List of all column widths\n     */\n    getColumnSizes() {\n      return this.__columnSizes || null;\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct() {\n    this.__columnSizes = null;\n  }\n});\n"
  ],
  "mappings": "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"
}