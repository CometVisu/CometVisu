{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "event",
    "Registration",
    "addListener",
    "document",
    "body",
    "__onPointerOverRoot",
    "__showTimer",
    "Timer",
    "__onShowInterval",
    "__hideTimer",
    "__onHideInterval",
    "__pointerPosition",
    "left",
    "top",
    "properties",
    "current",
    "check",
    "nullable",
    "apply",
    "showInvalidToolTips",
    "init",
    "showToolTips",
    "members",
    "__sharedToolTip",
    "__sharedErrorToolTip",
    "getSharedTooltip",
    "ui",
    "tooltip",
    "ToolTip",
    "set",
    "rich",
    "getSharedErrorTooltip",
    "appearance",
    "setLabel",
    "syncAppearance",
    "_applyCurrent",
    "value",
    "old",
    "Widget",
    "contains",
    "isDisposed",
    "exclude",
    "stop",
    "el",
    "startWith",
    "getShowTimeout",
    "__onPointerOutRoot",
    "__onFocusOutRoot",
    "__onPointerMoveRoot",
    "removeListener",
    "e",
    "getCurrent",
    "getHideTimeout",
    "getPlaceMethod",
    "placeToWidget",
    "getOpener",
    "placeToPoint",
    "show",
    "getAutoHide",
    "resetCurrent",
    "pos",
    "Math",
    "round",
    "getDocumentLeft",
    "getDocumentTop",
    "target",
    "getWidgetByElement",
    "getTarget",
    "showToolTip",
    "tooltipText",
    "tooltipIcon",
    "invalidMessage",
    "getToolTip",
    "getToolTipText",
    "getToolTipIcon",
    "hasInterface",
    "constructor",
    "form",
    "IForm",
    "isValid",
    "getInvalidMessage",
    "getLayoutParent",
    "getEnabled",
    "isShowToolTipWhenDisabled",
    "isBlockToolTip",
    "getShowToolTips",
    "getShowInvalidToolTips",
    "label",
    "icon",
    "setCurrent",
    "setOpener",
    "related",
    "getRelatedTarget",
    "getPointerType",
    "destruct",
    "_disposeObjects",
    "Manager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tooltip/Manager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The tooltip manager globally manages the tooltips of all widgets. It will\n * display tooltips if the user hovers a widgets with a tooltip and hides all\n * other tooltips.\n */\nqx.Class.define(\"qx.ui.tooltip.Manager\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Register events\n    qx.event.Registration.addListener(\n      document.body,\n      \"pointerover\",\n      this.__onPointerOverRoot,\n      this,\n      true\n    );\n\n    // Instantiate timers\n    this.__showTimer = new qx.event.Timer();\n    this.__showTimer.addListener(\"interval\", this.__onShowInterval, this);\n\n    this.__hideTimer = new qx.event.Timer();\n    this.__hideTimer.addListener(\"interval\", this.__onHideInterval, this);\n\n    // Init pointer position\n    this.__pointerPosition = { left: 0, top: 0 };\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Holds the current ToolTip instance */\n    current: {\n      check: \"qx.ui.tooltip.ToolTip\",\n      nullable: true,\n      apply: \"_applyCurrent\"\n    },\n\n    /** Show all invalid form fields tooltips . */\n    showInvalidToolTips: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Show all tooltips. */\n    showToolTips: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __pointerPosition: null,\n    __hideTimer: null,\n    __showTimer: null,\n    __sharedToolTip: null,\n    __sharedErrorToolTip: null,\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel.\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedTooltip() {\n      if (!this.__sharedToolTip) {\n        this.__sharedToolTip = new qx.ui.tooltip.ToolTip().set({\n          rich: true\n        });\n      }\n      return this.__sharedToolTip;\n    },\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel of the validation tooltips like\n     * <code>getSharedErrorTooltip().getChildControl(\"atom\").getChildControl(\"label\").set({rich: true, wrap: true, width: 80})</code>\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedErrorTooltip() {\n      if (!this.__sharedErrorToolTip) {\n        this.__sharedErrorToolTip = new qx.ui.tooltip.ToolTip().set({\n          appearance: \"tooltip-error\",\n          rich: true\n        });\n\n        this.__sharedErrorToolTip.setLabel(\"\"); // trigger label widget creation\n        this.__sharedErrorToolTip.syncAppearance();\n      }\n\n      return this.__sharedErrorToolTip;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyCurrent(value, old) {\n      // Return if the new tooltip is a child of the old one\n      if (old && qx.ui.core.Widget.contains(old, value)) {\n        return;\n      }\n\n      // If old tooltip existing, hide it and clear widget binding\n      if (old) {\n        if (!old.isDisposed()) {\n          old.exclude();\n        }\n\n        this.__showTimer.stop();\n        this.__hideTimer.stop();\n      }\n\n      var Registration = qx.event.Registration;\n      var el = document.body;\n      // If new tooltip is not null, set it up and start the timer\n      if (value) {\n        this.__showTimer.startWith(value.getShowTimeout());\n\n        // Register hide handler\n        Registration.addListener(\n          el,\n          \"pointerout\",\n          this.__onPointerOutRoot,\n          this,\n          true\n        );\n\n        Registration.addListener(\n          el,\n          \"focusout\",\n          this.__onFocusOutRoot,\n          this,\n          true\n        );\n\n        Registration.addListener(\n          el,\n          \"pointermove\",\n          this.__onPointerMoveRoot,\n          this,\n          true\n        );\n      } else {\n        // Deregister hide handler\n        Registration.removeListener(\n          el,\n          \"pointerout\",\n          this.__onPointerOutRoot,\n          this,\n          true\n        );\n\n        Registration.removeListener(\n          el,\n          \"focusout\",\n          this.__onFocusOutRoot,\n          this,\n          true\n        );\n\n        Registration.removeListener(\n          el,\n          \"pointermove\",\n          this.__onPointerMoveRoot,\n          this,\n          true\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for the interval event of the show timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onShowInterval(e) {\n      var current = this.getCurrent();\n      if (current && !current.isDisposed()) {\n        this.__hideTimer.startWith(current.getHideTimeout());\n\n        if (current.getPlaceMethod() == \"widget\") {\n          current.placeToWidget(current.getOpener());\n        } else {\n          current.placeToPoint(this.__pointerPosition);\n        }\n\n        current.show();\n      }\n\n      this.__showTimer.stop();\n    },\n\n    /**\n     * Event listener for the interval event of the hide timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onHideInterval(e) {\n      var current = this.getCurrent();\n\n      if (current && !current.getAutoHide()) {\n        return;\n      }\n\n      if (current && !current.isDisposed()) {\n        current.exclude();\n      }\n\n      this.__hideTimer.stop();\n      this.resetCurrent();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global pointer move event handler\n     *\n     * @param e {qx.event.type.Pointer} The move pointer event\n     */\n    __onPointerMoveRoot(e) {\n      var pos = this.__pointerPosition;\n\n      pos.left = Math.round(e.getDocumentLeft());\n      pos.top = Math.round(e.getDocumentTop());\n    },\n\n    /**\n     * Searches for the tooltip of the target widget. If any tooltip instance\n     * is found this instance is bound to the target widget and the tooltip is\n     * set as {@link #current}\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    __onPointerOverRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      // take first coordinates as backup if no move event will be fired (e.g. touch devices)\n      this.__onPointerMoveRoot(e);\n      this.showToolTip(target);\n    },\n\n    /**\n     * Explicitly show tooltip for particular form item.\n     *\n     * @param target {Object | null} widget to show tooltip for\n     */\n    showToolTip(target) {\n      if (!target) {\n        return;\n      }\n\n      var tooltip, tooltipText, tooltipIcon, invalidMessage;\n\n      // Search first parent which has a tooltip\n      while (target != null) {\n        tooltip = target.getToolTip();\n        tooltipText = target.getToolTipText() || null;\n        tooltipIcon = target.getToolTipIcon() || null;\n        if (\n          qx.Class.hasInterface(target.constructor, qx.ui.form.IForm) &&\n          !target.isValid()\n        ) {\n          invalidMessage = target.getInvalidMessage();\n        }\n\n        if (tooltip || tooltipText || tooltipIcon || invalidMessage) {\n          break;\n        }\n\n        target = target.getLayoutParent();\n      }\n\n      //do nothing if\n      if (\n        !target || //don't have a target\n        // tooltip is disabled and the value of showToolTipWhenDisabled is false\n        (!target.getEnabled() && !target.isShowToolTipWhenDisabled()) ||\n        //tooltip is blocked\n        target.isBlockToolTip() ||\n        //an invalid message isn't set and tooltips are disabled\n        (!invalidMessage && !this.getShowToolTips()) ||\n        //an invalid message is set and invalid tooltips are disabled\n        (invalidMessage && !this.getShowInvalidToolTips())\n      ) {\n        return;\n      }\n\n      if (invalidMessage) {\n        tooltip = this.getSharedErrorTooltip().set({\n          label: invalidMessage\n        });\n      }\n      if (!tooltip) {\n        tooltip = this.getSharedTooltip().set({\n          label: tooltipText,\n          icon: tooltipIcon\n        });\n      }\n      this.setCurrent(tooltip);\n      tooltip.setOpener(target);\n    },\n\n    /**\n     * Resets the property {@link #current} if there was a\n     * tooltip and no new one is created.\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    __onPointerOutRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var related = qx.ui.core.Widget.getWidgetByElement(e.getRelatedTarget());\n      if (!related && e.getPointerType() == \"mouse\") {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      // If there was a tooltip and\n      // - the destination target is the current tooltip\n      //   or\n      // - the current tooltip contains the destination target\n      if (\n        tooltip &&\n        (related == tooltip || qx.ui.core.Widget.contains(tooltip, related))\n      ) {\n        return;\n      }\n\n      // If the destination target exists and the target contains it\n      if (related && target && qx.ui.core.Widget.contains(target, related)) {\n        return;\n      }\n\n      if (tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // If there was a tooltip and there is no new one\n      if (tooltip && !related) {\n        this.setCurrent(null);\n      } else {\n        this.resetCurrent();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Reset the property {@link #current} if the\n     * current tooltip is the tooltip of the target widget.\n     *\n     * @param e {qx.event.type.Focus} blur event\n     */\n    __onFocusOutRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      if (tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // Only set to null if blurred widget is the\n      // one which has created the current tooltip\n      if (tooltip && tooltip == target.getToolTip()) {\n        this.setCurrent(null);\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // Deregister events\n    qx.event.Registration.removeListener(\n      document.body,\n      \"pointerover\",\n      this.__onPointerOverRoot,\n      this,\n      true\n    );\n\n    // Dispose timers\n    this._disposeObjects(\"__showTimer\", \"__hideTimer\", \"__sharedToolTip\");\n    this.__pointerPosition = null;\n  }\n});\n"
  ],
  "mappings": "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"
}