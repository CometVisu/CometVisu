{
  "className": "qx.ui.tooltip.Manager",
  "packageName": "qx.ui.tooltip",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 750
      },
      "end": {
        "line": 462,
        "column": 3,
        "index": 12920
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>The tooltip manager globally manages the tooltips of all widgets. It will\n display tooltips if the user hovers a widgets with a tooltip and hides all\n other tooltips.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2,
        "index": 1041
      },
      "end": {
        "line": 57,
        "column": 3,
        "index": 1607
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "current": {
      "location": {
        "start": {
          "line": 67,
          "column": 4,
          "index": 1873
        },
        "end": {
          "line": 71,
          "column": 5,
          "index": 1982
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Holds the current ToolTip instance</p>"
          }
        ]
      },
      "name": "current",
      "propertyType": "new",
      "apply": "_applyCurrent",
      "nullable": true,
      "allowNull": true,
      "check": "qx.ui.tooltip.ToolTip"
    },
    "showInvalidToolTips": {
      "location": {
        "start": {
          "line": 74,
          "column": 4,
          "index": 2043
        },
        "end": {
          "line": 77,
          "column": 5,
          "index": 2115
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Show all invalid form fields tooltips .</p>"
          }
        ]
      },
      "name": "showInvalidToolTips",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "showToolTips": {
      "location": {
        "start": {
          "line": 80,
          "column": 4,
          "index": 2155
        },
        "end": {
          "line": 83,
          "column": 5,
          "index": 2220
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Show all tooltips.</p>"
          }
        ]
      },
      "name": "showToolTips",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__pointerPosition": {
      "location": {
        "start": {
          "line": 93,
          "column": 4,
          "index": 2438
        },
        "end": {
          "line": 93,
          "column": 27,
          "index": 2461
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__hideTimer": {
      "location": {
        "start": {
          "line": 94,
          "column": 4,
          "index": 2468
        },
        "end": {
          "line": 94,
          "column": 21,
          "index": 2485
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__showTimer": {
      "location": {
        "start": {
          "line": 95,
          "column": 4,
          "index": 2492
        },
        "end": {
          "line": 95,
          "column": 21,
          "index": 2509
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sharedToolTip": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2516
        },
        "end": {
          "line": 96,
          "column": 25,
          "index": 2537
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__sharedErrorToolTip": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2544
        },
        "end": {
          "line": 97,
          "column": 30,
          "index": 2570
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getSharedTooltip": {
      "location": {
        "start": {
          "line": 108,
          "column": 4,
          "index": 2937
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 3146
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the shared tooltip, which is used to display the\n {@link qx.ui.core.Widget#toolTipText} and\n {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n You can use this public shared instance to e.g. customize the\n look and feel.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.tooltip.ToolTip} The shared tooltip",
            "type": "qx.ui.tooltip.ToolTip",
            "description": " The shared tooltip"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSharedErrorTooltip": {
      "location": {
        "start": {
          "line": 127,
          "column": 4,
          "index": 3679
        },
        "end": {
          "line": 139,
          "column": 5,
          "index": 4087
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Get the shared tooltip, which is used to display the\n {@link qx.ui.core.Widget#toolTipText} and\n {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n You can use this public shared instance to e.g. customize the\n look and feel of the validation tooltips like\n <code>getSharedErrorTooltip().getChildControl(\"atom\").getChildControl(\"label\").set({rich: true, wrap: true, width: 80})</code></p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.tooltip.ToolTip} The shared tooltip",
            "type": "qx.ui.tooltip.ToolTip",
            "description": " The shared tooltip"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyCurrent": {
      "location": {
        "start": {
          "line": 148,
          "column": 4,
          "index": 4330
        },
        "end": {
          "line": 220,
          "column": 5,
          "index": 6027
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "current"
      ]
    },
    "__onShowInterval": {
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 6386
        },
        "end": {
          "line": 248,
          "column": 5,
          "index": 6830
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for the interval event of the show timer.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Event object",
            "paramName": "e",
            "description": " Event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onHideInterval": {
      "location": {
        "start": {
          "line": 255,
          "column": 4,
          "index": 6982
        },
        "end": {
          "line": 268,
          "column": 5,
          "index": 7274
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for the interval event of the hide timer.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Event object",
            "paramName": "e",
            "description": " Event object",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onPointerMoveRoot": {
      "location": {
        "start": {
          "line": 281,
          "column": 4,
          "index": 7624
        },
        "end": {
          "line": 286,
          "column": 5,
          "index": 7798
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Global pointer move event handler</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The move pointer event",
            "paramName": "e",
            "description": " The move pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onPointerOverRoot": {
      "location": {
        "start": {
          "line": 295,
          "column": 4,
          "index": 8083
        },
        "end": {
          "line": 300,
          "column": 5,
          "index": 8351
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Searches for the tooltip of the target widget. If any tooltip instance\n is found this instance is bound to the target widget and the tooltip is\n set as {@link #current}</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerover event",
            "paramName": "e",
            "description": " pointerover event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "showToolTip": {
      "location": {
        "start": {
          "line": 307,
          "column": 4,
          "index": 8509
        },
        "end": {
          "line": 361,
          "column": 5,
          "index": 10193
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Explicitly show tooltip for particular form item.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Object | null} widget to show tooltip for",
            "paramName": "target",
            "description": " widget to show tooltip for",
            "type": [
              "Object",
              "null"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__onPointerOutRoot": {
      "location": {
        "start": {
          "line": 369,
          "column": 4,
          "index": 10389
        },
        "end": {
          "line": 408,
          "column": 5,
          "index": 11503
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the property {@link #current} if there was a\n tooltip and no new one is created.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerout event",
            "paramName": "e",
            "description": " pointerout event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__onFocusOutRoot": {
      "location": {
        "start": {
          "line": 422,
          "column": 4,
          "index": 11907
        },
        "end": {
          "line": 439,
          "column": 5,
          "index": 12377
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reset the property {@link #current} if the\n current tooltip is the tooltip of the target widget.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Focus} blur event",
            "paramName": "e",
            "description": " blur event",
            "type": "qx.event.type.Focus"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getCurrent": {
      "type": "function",
      "name": "getCurrent",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>current</code>.\n\nFor further details take a look at the property definition: {@link #current}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.tooltip.ToolTip",
            "desc": "Returns the value for current"
          }
        ]
      }
    },
    "setCurrent": {
      "type": "function",
      "name": "setCurrent",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>current</code>.\n\nFor further details take a look at the property definition: {@link #current}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.tooltip.ToolTip",
            "paramName": "value",
            "desc": "Value for current"
          }
        ]
      }
    },
    "resetCurrent": {
      "type": "function",
      "name": "resetCurrent",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>current</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #current}."
          }
        ]
      }
    },
    "getShowInvalidToolTips": {
      "type": "function",
      "name": "getShowInvalidToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showInvalidToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showInvalidToolTips}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showInvalidToolTips"
          }
        ]
      }
    },
    "isShowInvalidToolTips": {
      "type": "function",
      "name": "isShowInvalidToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showInvalidToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showInvalidToolTips}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showInvalidToolTips"
          }
        ]
      }
    },
    "setShowInvalidToolTips": {
      "type": "function",
      "name": "setShowInvalidToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showInvalidToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showInvalidToolTips}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showInvalidToolTips"
          }
        ]
      }
    },
    "resetShowInvalidToolTips": {
      "type": "function",
      "name": "resetShowInvalidToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showInvalidToolTips</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showInvalidToolTips}."
          }
        ]
      }
    },
    "getShowToolTips": {
      "type": "function",
      "name": "getShowToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showToolTips}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showToolTips"
          }
        ]
      }
    },
    "isShowToolTips": {
      "type": "function",
      "name": "isShowToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>showToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showToolTips}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for showToolTips"
          }
        ]
      }
    },
    "setShowToolTips": {
      "type": "function",
      "name": "setShowToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>showToolTips</code>.\n\nFor further details take a look at the property definition: {@link #showToolTips}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for showToolTips"
          }
        ]
      }
    },
    "resetShowToolTips": {
      "type": "function",
      "name": "resetShowToolTips",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>showToolTips</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #showToolTips}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 448,
        "column": 2,
        "index": 12582
      },
      "end": {
        "line": 461,
        "column": 3,
        "index": 12915
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}