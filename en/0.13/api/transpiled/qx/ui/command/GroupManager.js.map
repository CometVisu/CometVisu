{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "constructor",
    "call",
    "__groups",
    "members",
    "__activeGroup",
    "add",
    "group",
    "includes",
    "push",
    "setActive",
    "has",
    "_getGroup",
    "remove",
    "index",
    "indexOf",
    "getActive",
    "splice",
    "i",
    "length",
    "item",
    "block",
    "unblock",
    "destruct",
    "ui",
    "command",
    "GroupManager"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/command/GroupManager.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   Authors:\n     * Mustafa Sak (msak)\n\n\n************************************************************************ */\n\n/**\n * Registrar for command groups to be able to active or deactive them.\n */\nqx.Class.define(\"qx.ui.command.GroupManager\", {\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n    this.__groups = [];\n  },\n\n  members: {\n    __groups: null,\n    __activeGroup: null,\n\n    /**\n     * Add command group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>false</code> if group was already added before\n     */\n    add(group) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          group,\n          qx.ui.command.Group,\n          \"Given group is not an instance of qx.ui.command.Group\"\n        );\n      }\n\n      if (this.__groups.includes(group)) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\"Group is already added!\");\n        }\n        return false;\n      }\n\n      this.__groups.push(group);\n\n      // deactivate added group to prevent collusions\n      group.setActive(false);\n\n      return true;\n    },\n\n    /**\n     * Whether a command manager was added.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>true</code> if group already added\n     */\n    has(group) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          group,\n          qx.ui.command.Group,\n          \"Given group is not an instance of qx.ui.command.Group\"\n        );\n      }\n\n      return !!this._getGroup(group);\n    },\n\n    /**\n     * Removes a command group from group manager. If removed group was the\n     * active group, active group will be set to <code>null</code> Returns the\n     * group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {qx.ui.command.Group|null} Command group or null if group was not added before\n     */\n    remove(group) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          group,\n          qx.ui.command.Group,\n          \"Group must be an instance of qx.ui.command.Group\"\n        );\n      }\n\n      var index = this.__groups.indexOf(group);\n      if (index === -1) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\n            \"Group was not added before. Please use \" +\n              \"'add()' method to add the group.\"\n          );\n        }\n      }\n\n      // reset active group\n      if (this.getActive() === group) {\n        this.__activeGroup = null;\n      }\n\n      // remove group from internal array\n      this.__groups.splice(index, 1);\n\n      return group;\n    },\n\n    /**\n     * Activates a command group and deactivates all other added groups.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {Boolean} <code>false</code> if group was not added before\n     */\n    setActive(group) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          group,\n          qx.ui.command.Group,\n          \"Given group is not an instance of qx.ui.command.Group\"\n        );\n      }\n\n      if (!this.has(group)) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\n            \"Group was not added before! You have to use 'addCommand()' method before activating!\"\n          );\n        }\n        return false;\n      }\n\n      // iterate through all groups and deactivate all expect the given one\n      for (var i = 0; i < this.__groups.length; i++) {\n        var item = this.__groups[i];\n        if (item == group) {\n          item.setActive(true);\n          this.__activeGroup = item;\n          continue;\n        }\n        item.setActive(false);\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns active command group.\n     *\n     * @return {qx.ui.command.Group|null} Active command group\n     */\n    getActive() {\n      return this.__activeGroup;\n    },\n\n    /**\n     * Blocks the active command group.\n     */\n    block() {\n      if (this.__activeGroup) {\n        this.__activeGroup.setActive(false);\n      }\n    },\n\n    /**\n     * Unblocks the active command group.\n     */\n    unblock() {\n      if (this.__activeGroup) {\n        this.__activeGroup.setActive(true);\n      }\n    },\n\n    /**\n     * Helper function returns added command group.\n     *\n     * @param group {qx.ui.command.Group} Command group\n     *\n     * @return {qx.ui.command.Group|null} Command group or null\n     */\n    _getGroup(group) {\n      var index = this.__groups.indexOf(group);\n      if (index === -1) {\n        return null;\n      }\n\n      return this.__groups[index];\n    }\n  },\n\n  destruct() {\n    this.__groups = this.__activeGroup = null;\n  }\n});\n"
  ],
  "mappings": "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"
}