{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "_cmds",
    "properties",
    "active",
    "init",
    "check",
    "apply",
    "members",
    "_applyActive",
    "value",
    "cmdkey",
    "setActive",
    "add",
    "key",
    "command",
    "has",
    "getActive",
    "get",
    "cmd",
    "remove",
    "destruct",
    "ui",
    "Group"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/command/Group.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   Authors:\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * Registrar for commands to be able to group them.\n */\nqx.Class.define(\"qx.ui.command.Group\", {\n  extend: qx.core.Object,\n\n  construct() {\n    super();\n    this._cmds = {};\n  },\n\n  properties: {\n    /**\n     * Activates or deactivates all commands in group.\n     */\n    active: {\n      init: true,\n      check: \"Boolean\",\n      apply: \"_applyActive\"\n    }\n  },\n\n  members: {\n    _cmds: null,\n\n    // property apply\n    _applyActive(value) {\n      for (var cmdkey in this._cmds) {\n        this._cmds[cmdkey].setActive(value);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a command with a key to the group.\n     *\n     * @param key {String} Key to be able to addresses the command\n     * @param command {qx.ui.command.Command} Command\n     *\n     * @return {Boolean} <code>false</code> if key already added before\n     */\n    add(key, command) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertArgumentsCount(\n          arguments,\n          2,\n          2,\n          \"Given parameter count mismatch! Please provide a key as string \" +\n            \"and a command intsance.\"\n        );\n\n        this.assertString(key, \"Key parameter must be a string.\");\n        this.assertInstance(\n          command,\n          qx.ui.command.Command,\n          \"Given command is not an instance of qx.ui.command.Command\"\n        );\n      }\n\n      if (this.has(key)) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\"Command with key: '\" + key + \"' already exists!\");\n        }\n        return false;\n      }\n\n      command.setActive(this.getActive());\n      this._cmds[key] = command;\n\n      return true;\n    },\n\n    /**\n     * Returns a command by key.\n     *\n     * @param key {String} Key which addresses the command\n     *\n     * @return {qx.ui.command.Command|null} Corresponding command instance or null\n     */\n    get(key) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertString(key, \"Key parameter must be a string.\");\n      }\n\n      var cmd = this._cmds[key];\n      if (!cmd) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\n            \"The key: '\" +\n              key +\n              \"' was not added before. Please use \" +\n              \"'add()' method to add the command.\"\n          );\n        }\n\n        return null;\n      }\n\n      return cmd;\n    },\n\n    /**\n     * Returns true if a command is registered by key.\n     *\n     * @param key {String} Key which addresses the command\n     *\n     * @return {Boolean} Returns <code>true</code> if a command is registered by a key\n     */\n    has(key) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertString(key, \"Key parameter must be a string.\");\n      }\n\n      return !!this._cmds[key];\n    },\n\n    /**\n     * Removes a command by key from group. Returns the command.\n     *\n     * @param key {String} Key which addresses the command\n     *\n     * @return {qx.ui.command.Command|null} Corresponding command instance or null\n     */\n    remove(key) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertString(key, \"Key parameter must be a string.\");\n      }\n\n      var cmd = this._cmds[key];\n      if (!cmd) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.debug(\n            \"The key: '\" +\n              key +\n              \"' was not added before. Please use \" +\n              \"'add()' method to add the command.\"\n          );\n        }\n\n        return null;\n      }\n\n      delete this._cmds[key];\n\n      return cmd;\n    }\n  },\n\n  destruct() {\n    this._cmds = null;\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;IACrCC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADqB;IAGrCC,SAHqC,uBAGzB;MACV;MACA,KAAKC,KAAL,GAAa,EAAb;IACD,CANoC;IAQrCC,UAAU,EAAE;MACV;AACJ;AACA;MACIC,MAAM,EAAE;QACNC,IAAI,EAAE,IADA;QAENC,KAAK,EAAE,SAFD;QAGNC,KAAK,EAAE;MAHD;IAJE,CARyB;IAmBrCC,OAAO,EAAE;MACPN,KAAK,EAAE,IADA;MAGP;MACAO,YAJO,wBAIMC,KAJN,EAIa;QAClB,KAAK,IAAIC,MAAT,IAAmB,KAAKT,KAAxB,EAA+B;UAC7B,KAAKA,KAAL,CAAWS,MAAX,EAAmBC,SAAnB,CAA6BF,KAA7B;QACD;MACF,CARM;;MAUP;AACJ;AACA;AACA;AACA;;MAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,GAxBO,eAwBHC,GAxBG,EAwBEC,OAxBF,EAwBW;QAkBhB,IAAI,KAAKC,GAAL,CAASF,GAAT,CAAJ,EAAmB;UAIjB,OAAO,KAAP;QACD;;QAEDC,OAAO,CAACH,SAAR,CAAkB,KAAKK,SAAL,EAAlB;QACA,KAAKf,KAAL,CAAWY,GAAX,IAAkBC,OAAlB;QAEA,OAAO,IAAP;MACD,CArDM;;MAuDP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIG,GA9DO,eA8DHJ,GA9DG,EA8DE;QAKP,IAAIK,GAAG,GAAG,KAAKjB,KAAL,CAAWY,GAAX,CAAV;;QACA,IAAI,CAACK,GAAL,EAAU;UAUR,OAAO,IAAP;QACD;;QAED,OAAOA,GAAP;MACD,CAlFM;;MAoFP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIH,GA3FO,eA2FHF,GA3FG,EA2FE;QAKP,OAAO,CAAC,CAAC,KAAKZ,KAAL,CAAWY,GAAX,CAAT;MACD,CAjGM;;MAmGP;AACJ;AACA;AACA;AACA;AACA;AACA;MACIM,MA1GO,kBA0GAN,GA1GA,EA0GK;QAKV,IAAIK,GAAG,GAAG,KAAKjB,KAAL,CAAWY,GAAX,CAAV;;QACA,IAAI,CAACK,GAAL,EAAU;UAUR,OAAO,IAAP;QACD;;QAED,OAAO,KAAKjB,KAAL,CAAWY,GAAX,CAAP;QAEA,OAAOK,GAAP;MACD;IAhIM,CAnB4B;IAsJrCE,QAtJqC,sBAsJ1B;MACT,KAAKnB,KAAL,GAAa,IAAb;IACD;EAxJoC,CAAvC;EAbAV,EAAE,CAAC8B,EAAH,CAAMP,OAAN,CAAcQ,KAAd,CAAoB5B,aAApB,GAAoCA,aAApC"
}