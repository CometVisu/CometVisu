{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "ISingleSelection",
    "include",
    "MContentPadding",
    "construct",
    "barPosition",
    "constructor",
    "call",
    "__barPositionToState",
    "top",
    "right",
    "bottom",
    "left",
    "_createChildControl",
    "mgr",
    "__radioGroup",
    "_createRadioGroupInstance",
    "setWrap",
    "addListener",
    "_onChangeSelection",
    "setBarPosition",
    "initBarPosition",
    "getContentElement",
    "setAttribute",
    "events",
    "changeSelection",
    "changeValue",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "members",
    "setValue",
    "item",
    "resetSelection",
    "tabview",
    "Page",
    "setSelection",
    "TypeError",
    "getValue",
    "pages",
    "getSelection",
    "length",
    "resetValue",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "SlideBar",
    "setZIndex",
    "_add",
    "Stack",
    "flex",
    "TabView",
    "superclass",
    "prototype",
    "form",
    "RadioGroup",
    "_getContentPaddingTarget",
    "getChildControl",
    "add",
    "page",
    "button",
    "getButton",
    "bar",
    "pane",
    "exclude",
    "addState",
    "getBarPosition",
    "children",
    "getChildren",
    "removeState",
    "_onPageClose",
    "addAt",
    "index",
    "Error",
    "remove",
    "indexOf",
    "hasState",
    "removeListener",
    "getRadioGroup",
    "_applyBarPosition",
    "value",
    "old",
    "horizontal",
    "reversed",
    "layoutClass",
    "layout",
    "HBox",
    "VBox",
    "_getLayout",
    "_setLayout",
    "setReversed",
    "setOrientation",
    "i",
    "l",
    "oldState",
    "newState",
    "buttons",
    "result",
    "push",
    "getUserData",
    "items",
    "isSelected",
    "isSelectionEmpty",
    "getSelectables",
    "all",
    "e",
    "getData",
    "oldButton",
    "getOldData",
    "scrollChildIntoView",
    "fireDataEvent",
    "_onBeforeChangeSelection",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Event",
    "preventDefault",
    "_onRadioChangeSelection",
    "element",
    "getTarget",
    "closeButton",
    "reset",
    "destruct",
    "_disposeObjects"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tabview/TabView.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A tab view is a multi page view where only one page is visible\n * at each moment. It is possible to switch the pages using the\n * buttons rendered by each page.\n *\n * Note that prior to v6.0, when changing the currently selected tab via code\n * (ie changing the selection property) TabView would automatically set the\n * focus to that tab; this is undesirable (and inconsistent with other parts\n * of the framework) and is no longer done automatically.\n *\n * @childControl bar {qx.ui.container.SlideBar} slidebar for all tab buttons\n * @childControl pane {qx.ui.container.Stack} stack container to show one tab page\n */\nqx.Class.define(\"qx.ui.tabview.TabView\", {\n  extend: qx.ui.core.Widget,\n  implement: qx.ui.core.ISingleSelection,\n  include: [qx.ui.core.MContentPadding],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param barPosition {String} Initial bar position ({@link #barPosition})\n   */\n  construct(barPosition) {\n    super();\n\n    this.__barPositionToState = {\n      top: \"barTop\",\n      right: \"barRight\",\n      bottom: \"barBottom\",\n      left: \"barLeft\"\n    };\n\n    this._createChildControl(\"bar\");\n    this._createChildControl(\"pane\");\n\n    // Create manager\n    var mgr = (this.__radioGroup = this._createRadioGroupInstance());\n    mgr.setWrap(false);\n    mgr.addListener(\"changeSelection\", this._onChangeSelection, this);\n\n    // Initialize bar position\n    if (barPosition != null) {\n      this.setBarPosition(barPosition);\n    } else {\n      this.initBarPosition();\n    }\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"tablist\");\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fires after the selection was modified */\n    changeSelection: \"qx.event.type.Data\",\n\n    /** Fires after the value was modified */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"tabview\"\n    },\n\n    /**\n     * This property defines on which side of the TabView the bar should be positioned.\n     */\n    barPosition: {\n      check: [\"left\", \"right\", \"top\", \"bottom\"],\n      init: \"top\",\n      apply: \"_applyBarPosition\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.ui.form.RadioGroup} instance containing the radio group */\n    __radioGroup: null,\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param item {null|qx.ui.tabview.Page} Page to set as selected value.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue(item) {\n      if (null === item) {\n        this.resetSelection();\n        return null;\n      }\n\n      if (item instanceof qx.ui.tabview.Page) {\n        this.setSelection([item]);\n        return null;\n      } else {\n        return new TypeError(\n          \"Given argument is not null or a {qx.ui.tabview.Page}.\"\n        );\n      }\n    },\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {null|qx.ui.tabview.Page} The currently selected page or null if there is none.\n     */\n    getValue() {\n      var pages = this.getSelection();\n      if (pages.length) {\n        return pages[0];\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue() {\n      this.resetSelection();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"bar\":\n          control = new qx.ui.container.SlideBar();\n          control.setZIndex(10);\n          this._add(control);\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Stack();\n          control.setZIndex(5);\n          this._add(control, { flex: 1 });\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /**\n     * Creates the radio group manager instance.\n     *\n     * Allows override customizations of the instance\n     *\n     * @return {qx.ui.form.RadioGroup}\n     */\n    _createRadioGroupInstance() {\n      return new qx.ui.form.RadioGroup();\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget() {\n      return this.getChildControl(\"pane\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     */\n    add(page) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.add(button);\n      pane.add(page);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      page.addState(\"lastTab\");\n      var children = this.getChildren();\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length - 2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     * @param index {Integer?null} Optional position where to add the page.\n     */\n    addAt(page, index) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n      var children = this.getChildren();\n      if (!(index == null) && index > children.length) {\n        throw new Error(\"Index should be less than : \" + children.length);\n      }\n\n      if (index == null) {\n        index = children.length;\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.addAt(button, index);\n      pane.addAt(page, index);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      children = this.getChildren();\n      if (index == children.length - 1) {\n        page.addState(\"lastTab\");\n      }\n\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length - 2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Removes a page (and its corresponding button) from the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to be removed.\n     */\n    remove(page) {\n      var pane = this.getChildControl(\"pane\");\n      var bar = this.getChildControl(\"bar\");\n      var button = page.getButton();\n      var children = pane.getChildren();\n\n      // Try to select next page\n      if (this.getSelection()[0] == page) {\n        var index = children.indexOf(page);\n        if (index == 0) {\n          if (children[1]) {\n            this.setSelection([children[1]]);\n          } else {\n            this.resetSelection();\n          }\n        } else {\n          this.setSelection([children[index - 1]]);\n        }\n      }\n\n      // Remove the button and page\n      bar.remove(button);\n      pane.remove(page);\n\n      // Remove the button from the radio group\n      this.__radioGroup.remove(button);\n\n      // Remove state from page\n      page.removeState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      if (page.hasState(\"firstTab\")) {\n        page.removeState(\"firstTab\");\n        if (children[0]) {\n          children[0].addState(\"firstTab\");\n        }\n      }\n\n      if (page.hasState(\"lastTab\")) {\n        page.removeState(\"lastTab\");\n        if (children.length > 0) {\n          children[children.length - 1].addState(\"lastTab\");\n        }\n      }\n\n      page.removeListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Returns TabView's children widgets.\n     *\n     * @return {qx.ui.tabview.Page[]} List of children.\n     */\n    getChildren() {\n      return this.getChildControl(\"pane\").getChildren();\n    },\n\n    /**\n     * Returns the position of the given page in the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to query for.\n     * @return {Integer} Position of the page in the TabView.\n     */\n    indexOf(page) {\n      return this.getChildControl(\"pane\").indexOf(page);\n    },\n\n    /**\n     * Returns the radio group manager.\n     *\n     * @return {qx.ui.form.RadioGroup} the radio group.\n     */\n    getRadioGroup() {\n      return this.__radioGroup;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} Maps the bar position to an appearance state */\n    __barPositionToState: null,\n\n    /**\n     * Apply method for the placeBarOnTop-Property.\n     *\n     * Passes the desired value to the layout of the tabview so\n     * that the layout can handle it.\n     * It also sets the states to all buttons so they know the\n     * position of the bar.\n     *\n     * @param value {Boolean} The new value.\n     * @param old {Boolean} The old value.\n     */\n    _applyBarPosition(value, old) {\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      var horizontal = value == \"left\" || value == \"right\";\n      var reversed = value == \"right\" || value == \"bottom\";\n\n      var layoutClass = horizontal ? qx.ui.layout.HBox : qx.ui.layout.VBox;\n\n      var layout = this._getLayout();\n      if (layout && layout instanceof layoutClass) {\n        // pass\n      } else {\n        this._setLayout((layout = new layoutClass()));\n      }\n\n      // Update reversed\n      layout.setReversed(reversed);\n\n      // Sync orientation to bar\n      bar.setOrientation(horizontal ? \"vertical\" : \"horizontal\");\n\n      // Read children\n      var children = this.getChildren();\n\n      var i, l;\n      // Toggle state to bar\n      if (old) {\n        var oldState = this.__barPositionToState[old];\n\n        // Update bar\n        bar.removeState(oldState);\n\n        // Update pane\n        pane.removeState(oldState);\n\n        // Update pages\n        for (i = 0, l = children.length; i < l; i++) {\n          children[i].removeState(oldState);\n        }\n      }\n\n      if (value) {\n        var newState = this.__barPositionToState[value];\n\n        // Update bar\n        bar.addState(newState);\n\n        // Update pane\n        pane.addState(newState);\n\n        // Update pages\n        for (i = 0, l = children.length; i < l; i++) {\n          children[i].addState(newState);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.tabview.Page[]} List of items.\n     */\n    getSelection() {\n      var buttons = this.__radioGroup.getSelection();\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.tabview.Page[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    items contains more than one elements.\n     */\n    setSelection(items) {\n      var buttons = [];\n\n      for (var i = 0; i < items.length; i++) {\n        buttons.push(items[i].getChildControl(\"button\"));\n      }\n      this.__radioGroup.setSelection(buttons);\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection() {\n      this.__radioGroup.resetSelection();\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.tabview.Page} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if one of the items is not a child element.\n     */\n    isSelected(item) {\n      var button = item.getChildControl(\"button\");\n      return this.__radioGroup.isSelected(button);\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty() {\n      return this.__radioGroup.isSelectionEmpty();\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @return {qx.ui.tabview.Page[]} The contained items.\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     */\n    getSelectables(all) {\n      var buttons = this.__radioGroup.getSelectables(all);\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _onChangeSelection(e) {\n      var pane = this.getChildControl(\"pane\");\n      var button = e.getData()[0];\n      var oldButton = e.getOldData()[0];\n      var value = [];\n      var old = [];\n\n      if (button) {\n        value = [button.getUserData(\"page\")];\n        pane.setSelection(value);\n        this.scrollChildIntoView(button, null, null, false);\n      } else {\n        pane.resetSelection();\n      }\n\n      if (oldButton) {\n        old = [oldButton.getUserData(\"page\")];\n      }\n\n      this.fireDataEvent(\"changeSelection\", value, old);\n    },\n\n    /**\n     * Event handler for <code>beforeChangeSelection</code>.\n     *\n     * @param e {qx.event.type.Event} Data event.\n     */\n    _onBeforeChangeSelection(e) {\n      if (\n        !this.fireNonBubblingEvent(\n          \"beforeChangeSelection\",\n          qx.event.type.Event,\n          [false, true]\n        )\n      ) {\n        e.preventDefault();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the change of the selected item of the radio group.\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onRadioChangeSelection(e) {\n      var element = e.getData()[0];\n      if (element) {\n        this.setSelection([element.getUserData(\"page\")]);\n      } else {\n        this.resetSelection();\n      }\n    },\n\n    /**\n     * Removes the Page widget on which the close button was tapped.\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPageClose(e) {\n      // reset the old close button states, before remove page\n      // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=3763 for details\n      var page = e.getTarget();\n      var closeButton = page.getButton().getChildControl(\"close-button\");\n      closeButton.reset();\n\n      this.remove(page);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__radioGroup\");\n    this.__barPositionToState = null;\n  }\n});\n"
  ],
  "mappings": "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"
}