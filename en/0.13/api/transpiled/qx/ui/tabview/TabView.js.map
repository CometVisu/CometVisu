{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "ISingleSelection",
    "include",
    "MContentPadding",
    "construct",
    "barPosition",
    "__barPositionToState",
    "top",
    "right",
    "bottom",
    "left",
    "_createChildControl",
    "mgr",
    "__radioGroup",
    "_createRadioGroupInstance",
    "setWrap",
    "addListener",
    "_onChangeSelection",
    "setBarPosition",
    "initBarPosition",
    "getContentElement",
    "setAttribute",
    "events",
    "changeSelection",
    "changeValue",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "members",
    "setValue",
    "item",
    "resetSelection",
    "tabview",
    "Page",
    "setSelection",
    "TypeError",
    "getValue",
    "pages",
    "getSelection",
    "length",
    "resetValue",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "SlideBar",
    "setZIndex",
    "_add",
    "Stack",
    "flex",
    "form",
    "RadioGroup",
    "_getContentPaddingTarget",
    "getChildControl",
    "add",
    "page",
    "button",
    "getButton",
    "bar",
    "pane",
    "exclude",
    "addState",
    "getBarPosition",
    "children",
    "getChildren",
    "removeState",
    "_onPageClose",
    "addAt",
    "index",
    "Error",
    "remove",
    "indexOf",
    "hasState",
    "removeListener",
    "getRadioGroup",
    "_applyBarPosition",
    "value",
    "old",
    "horizontal",
    "reversed",
    "layoutClass",
    "layout",
    "HBox",
    "VBox",
    "_getLayout",
    "_setLayout",
    "setReversed",
    "setOrientation",
    "i",
    "l",
    "oldState",
    "newState",
    "buttons",
    "result",
    "push",
    "getUserData",
    "items",
    "isSelected",
    "isSelectionEmpty",
    "getSelectables",
    "all",
    "e",
    "getData",
    "oldButton",
    "getOldData",
    "scrollChildIntoView",
    "fireDataEvent",
    "_onBeforeChangeSelection",
    "fireNonBubblingEvent",
    "event",
    "type",
    "Event",
    "preventDefault",
    "_onRadioChangeSelection",
    "element",
    "getTarget",
    "closeButton",
    "reset",
    "destruct",
    "_disposeObjects",
    "TabView"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/ui/tabview/TabView.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A tab view is a multi page view where only one page is visible\n * at each moment. It is possible to switch the pages using the\n * buttons rendered by each page.\n *\n * Note that prior to v6.0, when changing the currently selected tab via code\n * (ie changing the selection property) TabView would automatically set the\n * focus to that tab; this is undesirable (and inconsistent with other parts\n * of the framework) and is no longer done automatically.\n *\n * @childControl bar {qx.ui.container.SlideBar} slidebar for all tab buttons\n * @childControl pane {qx.ui.container.Stack} stack container to show one tab page\n */\nqx.Class.define(\"qx.ui.tabview.TabView\", {\n  extend: qx.ui.core.Widget,\n  implement: qx.ui.core.ISingleSelection,\n  include: [qx.ui.core.MContentPadding],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param barPosition {String} Initial bar position ({@link #barPosition})\n   */\n  construct(barPosition) {\n    super();\n\n    this.__barPositionToState = {\n      top: \"barTop\",\n      right: \"barRight\",\n      bottom: \"barBottom\",\n      left: \"barLeft\"\n    };\n\n    this._createChildControl(\"bar\");\n    this._createChildControl(\"pane\");\n\n    // Create manager\n    var mgr = (this.__radioGroup = this._createRadioGroupInstance());\n    mgr.setWrap(false);\n    mgr.addListener(\"changeSelection\", this._onChangeSelection, this);\n\n    // Initialize bar position\n    if (barPosition != null) {\n      this.setBarPosition(barPosition);\n    } else {\n      this.initBarPosition();\n    }\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"tablist\");\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /** Fires after the selection was modified */\n    changeSelection: \"qx.event.type.Data\",\n\n    /** Fires after the value was modified */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"tabview\"\n    },\n\n    /**\n     * This property defines on which side of the TabView the bar should be positioned.\n     */\n    barPosition: {\n      check: [\"left\", \"right\", \"top\", \"bottom\"],\n      init: \"top\",\n      apply: \"_applyBarPosition\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /** @type {qx.ui.form.RadioGroup} instance containing the radio group */\n    __radioGroup: null,\n\n    /**\n     * setValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @param item {null|qx.ui.tabview.Page} Page to set as selected value.\n     * @returns {null|TypeError} The status of this operation.\n     */\n    setValue(item) {\n      if (null === item) {\n        this.resetSelection();\n        return null;\n      }\n\n      if (item instanceof qx.ui.tabview.Page) {\n        this.setSelection([item]);\n        return null;\n      } else {\n        return new TypeError(\n          \"Given argument is not null or a {qx.ui.tabview.Page}.\"\n        );\n      }\n    },\n\n    /**\n     * getValue implements part of the {@link qx.ui.form.IField} interface.\n     *\n     * @returns {null|qx.ui.tabview.Page} The currently selected page or null if there is none.\n     */\n    getValue() {\n      var pages = this.getSelection();\n      if (pages.length) {\n        return pages[0];\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * resetValue implements part of the {@link qx.ui.form.IField} interface.\n     */\n    resetValue() {\n      this.resetSelection();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"bar\":\n          control = new qx.ui.container.SlideBar();\n          control.setZIndex(10);\n          this._add(control);\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Stack();\n          control.setZIndex(5);\n          this._add(control, { flex: 1 });\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /**\n     * Creates the radio group manager instance.\n     *\n     * Allows override customizations of the instance\n     *\n     * @return {qx.ui.form.RadioGroup}\n     */\n    _createRadioGroupInstance() {\n      return new qx.ui.form.RadioGroup();\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget() {\n      return this.getChildControl(\"pane\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     */\n    add(page) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.add(button);\n      pane.add(page);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      page.addState(\"lastTab\");\n      var children = this.getChildren();\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length - 2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Adds a page to the tabview including its needed button\n     * (contained in the page).\n     *\n     * @param page {qx.ui.tabview.Page} The page which should be added.\n     * @param index {Integer?null} Optional position where to add the page.\n     */\n    addAt(page, index) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(page instanceof qx.ui.tabview.Page)) {\n          throw new Error(\"Incompatible child for TabView: \" + page);\n        }\n      }\n      var children = this.getChildren();\n      if (!(index == null) && index > children.length) {\n        throw new Error(\"Index should be less than : \" + children.length);\n      }\n\n      if (index == null) {\n        index = children.length;\n      }\n\n      var button = page.getButton();\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      // Exclude page\n      page.exclude();\n\n      // Add button and page\n      bar.addAt(button, index);\n      pane.addAt(page, index);\n\n      // Register button\n      this.__radioGroup.add(button);\n\n      // Add state to page\n      page.addState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      children = this.getChildren();\n      if (index == children.length - 1) {\n        page.addState(\"lastTab\");\n      }\n\n      if (children[0] == page) {\n        page.addState(\"firstTab\");\n      } else {\n        children[children.length - 2].removeState(\"lastTab\");\n      }\n\n      page.addListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Removes a page (and its corresponding button) from the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to be removed.\n     */\n    remove(page) {\n      var pane = this.getChildControl(\"pane\");\n      var bar = this.getChildControl(\"bar\");\n      var button = page.getButton();\n      var children = pane.getChildren();\n\n      // Try to select next page\n      if (this.getSelection()[0] == page) {\n        var index = children.indexOf(page);\n        if (index == 0) {\n          if (children[1]) {\n            this.setSelection([children[1]]);\n          } else {\n            this.resetSelection();\n          }\n        } else {\n          this.setSelection([children[index - 1]]);\n        }\n      }\n\n      // Remove the button and page\n      bar.remove(button);\n      pane.remove(page);\n\n      // Remove the button from the radio group\n      this.__radioGroup.remove(button);\n\n      // Remove state from page\n      page.removeState(this.__barPositionToState[this.getBarPosition()]);\n\n      // Update states\n      if (page.hasState(\"firstTab\")) {\n        page.removeState(\"firstTab\");\n        if (children[0]) {\n          children[0].addState(\"firstTab\");\n        }\n      }\n\n      if (page.hasState(\"lastTab\")) {\n        page.removeState(\"lastTab\");\n        if (children.length > 0) {\n          children[children.length - 1].addState(\"lastTab\");\n        }\n      }\n\n      page.removeListener(\"close\", this._onPageClose, this);\n    },\n\n    /**\n     * Returns TabView's children widgets.\n     *\n     * @return {qx.ui.tabview.Page[]} List of children.\n     */\n    getChildren() {\n      return this.getChildControl(\"pane\").getChildren();\n    },\n\n    /**\n     * Returns the position of the given page in the TabView.\n     *\n     * @param page {qx.ui.tabview.Page} The page to query for.\n     * @return {Integer} Position of the page in the TabView.\n     */\n    indexOf(page) {\n      return this.getChildControl(\"pane\").indexOf(page);\n    },\n\n    /**\n     * Returns the radio group manager.\n     *\n     * @return {qx.ui.form.RadioGroup} the radio group.\n     */\n    getRadioGroup() {\n      return this.__radioGroup;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} Maps the bar position to an appearance state */\n    __barPositionToState: null,\n\n    /**\n     * Apply method for the placeBarOnTop-Property.\n     *\n     * Passes the desired value to the layout of the tabview so\n     * that the layout can handle it.\n     * It also sets the states to all buttons so they know the\n     * position of the bar.\n     *\n     * @param value {Boolean} The new value.\n     * @param old {Boolean} The old value.\n     */\n    _applyBarPosition(value, old) {\n      var bar = this.getChildControl(\"bar\");\n      var pane = this.getChildControl(\"pane\");\n\n      var horizontal = value == \"left\" || value == \"right\";\n      var reversed = value == \"right\" || value == \"bottom\";\n\n      var layoutClass = horizontal ? qx.ui.layout.HBox : qx.ui.layout.VBox;\n\n      var layout = this._getLayout();\n      if (layout && layout instanceof layoutClass) {\n        // pass\n      } else {\n        this._setLayout((layout = new layoutClass()));\n      }\n\n      // Update reversed\n      layout.setReversed(reversed);\n\n      // Sync orientation to bar\n      bar.setOrientation(horizontal ? \"vertical\" : \"horizontal\");\n\n      // Read children\n      var children = this.getChildren();\n\n      var i, l;\n      // Toggle state to bar\n      if (old) {\n        var oldState = this.__barPositionToState[old];\n\n        // Update bar\n        bar.removeState(oldState);\n\n        // Update pane\n        pane.removeState(oldState);\n\n        // Update pages\n        for (i = 0, l = children.length; i < l; i++) {\n          children[i].removeState(oldState);\n        }\n      }\n\n      if (value) {\n        var newState = this.__barPositionToState[value];\n\n        // Update bar\n        bar.addState(newState);\n\n        // Update pane\n        pane.addState(newState);\n\n        // Update pages\n        for (i = 0, l = children.length; i < l; i++) {\n          children[i].addState(newState);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns an array of currently selected items.\n     *\n     * Note: The result is only a set of selected items, so the order can\n     * differ from the sequence in which the items were added.\n     *\n     * @return {qx.ui.tabview.Page[]} List of items.\n     */\n    getSelection() {\n      var buttons = this.__radioGroup.getSelection();\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Replaces current selection with the given items.\n     *\n     * @param items {qx.ui.tabview.Page[]} Items to select.\n     * @throws {Error} if one of the items is not a child element and if\n     *    items contains more than one elements.\n     */\n    setSelection(items) {\n      var buttons = [];\n\n      for (var i = 0; i < items.length; i++) {\n        buttons.push(items[i].getChildControl(\"button\"));\n      }\n      this.__radioGroup.setSelection(buttons);\n    },\n\n    /**\n     * Clears the whole selection at once.\n     */\n    resetSelection() {\n      this.__radioGroup.resetSelection();\n    },\n\n    /**\n     * Detects whether the given item is currently selected.\n     *\n     * @param item {qx.ui.tabview.Page} Any valid selectable item.\n     * @return {Boolean} Whether the item is selected.\n     * @throws {Error} if one of the items is not a child element.\n     */\n    isSelected(item) {\n      var button = item.getChildControl(\"button\");\n      return this.__radioGroup.isSelected(button);\n    },\n\n    /**\n     * Whether the selection is empty.\n     *\n     * @return {Boolean} Whether the selection is empty.\n     */\n    isSelectionEmpty() {\n      return this.__radioGroup.isSelectionEmpty();\n    },\n\n    /**\n     * Returns all elements which are selectable.\n     *\n     * @return {qx.ui.tabview.Page[]} The contained items.\n     * @param all {Boolean} true for all selectables, false for the\n     *   selectables the user can interactively select\n     */\n    getSelectables(all) {\n      var buttons = this.__radioGroup.getSelectables(all);\n      var result = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        result.push(buttons[i].getUserData(\"page\"));\n      }\n\n      return result;\n    },\n\n    /**\n     * Event handler for <code>changeSelection</code>.\n     *\n     * @param e {qx.event.type.Data} Data event.\n     */\n    _onChangeSelection(e) {\n      var pane = this.getChildControl(\"pane\");\n      var button = e.getData()[0];\n      var oldButton = e.getOldData()[0];\n      var value = [];\n      var old = [];\n\n      if (button) {\n        value = [button.getUserData(\"page\")];\n        pane.setSelection(value);\n        this.scrollChildIntoView(button, null, null, false);\n      } else {\n        pane.resetSelection();\n      }\n\n      if (oldButton) {\n        old = [oldButton.getUserData(\"page\")];\n      }\n\n      this.fireDataEvent(\"changeSelection\", value, old);\n    },\n\n    /**\n     * Event handler for <code>beforeChangeSelection</code>.\n     *\n     * @param e {qx.event.type.Event} Data event.\n     */\n    _onBeforeChangeSelection(e) {\n      if (\n        !this.fireNonBubblingEvent(\n          \"beforeChangeSelection\",\n          qx.event.type.Event,\n          [false, true]\n        )\n      ) {\n        e.preventDefault();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for the change of the selected item of the radio group.\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onRadioChangeSelection(e) {\n      var element = e.getData()[0];\n      if (element) {\n        this.setSelection([element.getUserData(\"page\")]);\n      } else {\n        this.resetSelection();\n      }\n    },\n\n    /**\n     * Removes the Page widget on which the close button was tapped.\n     *\n     * @param e {qx.event.type.Pointer} pointer event\n     */\n    _onPageClose(e) {\n      // reset the old close button states, before remove page\n      // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=3763 for details\n      var page = e.getTarget();\n      var closeButton = page.getButton().getChildControl(\"close-button\");\n      closeButton.reset();\n\n      this.remove(page);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__radioGroup\");\n    this.__barPositionToState = null;\n  }\n});\n"
  ],
  "mappings": "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"
}