{
  "version": 3,
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/tabview/Page.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "label",
    "icon",
    "_createChildControl",
    "setLabel",
    "setIcon",
    "events",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "nullable",
    "showCloseButton",
    "members",
    "_forwardStates",
    "barTop",
    "barRight",
    "barBottom",
    "barLeft",
    "firstTab",
    "lastTab",
    "_applyIcon",
    "value",
    "old",
    "btn",
    "getChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_applyLabel",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "tabview",
    "TabButton",
    "setAllowGrowX",
    "setAllowGrowY",
    "setUserData",
    "addListener",
    "_onButtonClose",
    "_applyShowCloseButton",
    "setShowCloseButton",
    "fireEvent",
    "getButton",
    "Page"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A page is the way to add content to a {@link TabView}. Each page gets a\n * button to switch to the page. Only one page is visible at a time.\n *\n * @childControl button {qx.ui.tabview.TabButton} tab button connected to the page\n */\nqx.Class.define(\"qx.ui.tabview.Page\",\n{\n  extend : qx.ui.container.Composite,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label of the tab\n   * @param icon {String} Initial icon of the tab\n   */\n  construct : function(label, icon)\n  {\n    this.base(arguments);\n\n    this._createChildControl(\"button\");\n\n    // init\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n  },\n\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events :\n  {\n    /**\n     * Fired by {@link qx.ui.tabview.TabButton} if the close button is tapped.\n     */\n    \"close\" : \"qx.event.type.Event\"\n  },\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    // overridden\n    appearance :\n    {\n      refine : true,\n      init : \"tabview-page\"\n    },\n\n\n    /** The label/caption/text of the Page's button. */\n    label :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyLabel\"\n    },\n\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon in Page's button. */\n    icon :\n    {\n      check : \"String\",\n      init : \"\",\n      apply : \"_applyIcon\",\n      nullable: true\n    },\n\n    /** Indicates if the close button of a TabButton should be shown. */\n    showCloseButton :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyShowCloseButton\"\n    }\n\n  },\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates :\n    {\n      barTop : 1,\n      barRight : 1,\n      barBottom : 1,\n      barLeft : 1,\n      firstTab : 1,\n      lastTab : 1\n    },\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIcon : function(value, old) {\n      var btn = this.getChildControl(\"button\");\n      if (value) {\n        btn.setIcon(value);\n        btn._showChildControl(\"icon\");\n      } else {\n        btn._excludeChildControl(\"icon\");\n      }\n    },\n\n\n    // property apply\n    _applyLabel : function(value, old) {\n      this.getChildControl(\"button\").setLabel(value);\n    },\n\n\n    // overridden\n    _applyEnabled: function(value, old)\n    {\n      this.base(arguments, value, old);\n\n      // delegate to non-child widget button\n      // since enabled is inheritable value may be null\n      var btn = this.getChildControl(\"button\");\n      value == null ? btn.resetEnabled() : btn.setEnabled(value);\n    },\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id, hash)\n    {\n      var control;\n\n      switch(id)\n      {\n        case \"button\":\n          control = new qx.ui.tabview.TabButton;\n          control.setAllowGrowX(true);\n          control.setAllowGrowY(true);\n\n          control.setUserData(\"page\", this);\n          control.addListener(\"close\", this._onButtonClose, this);\n          break;\n      }\n\n      return control || this.base(arguments, id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyShowCloseButton : function(value, old) {\n      this.getChildControl(\"button\").setShowCloseButton(value);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fires an \"close\" event when the close button of the TabButton of the page\n     * is tapped.\n     */\n    _onButtonClose : function() {\n      this.fireEvent(\"close\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the button used within this page. This method is used by\n     * the TabView to access the button.\n     *\n     * @return {qx.ui.form.RadioButton} The button associated with this page.\n     */\n    getButton: function() {\n      return this.getChildControl(\"button\");\n    }\n  }\n});\n"
  ]
}