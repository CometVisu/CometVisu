{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "name",
    "config",
    "include",
    "__normalizeArray",
    "patch",
    "theme",
    "$$type",
    "title",
    "toString",
    "genericToString",
    "extend",
    "supertheme",
    "basename",
    "createNamespace",
    "__convert",
    "__initializeAliases",
    "$$registry",
    "i",
    "a",
    "l",
    "length",
    "boot",
    "__P_95_0",
    "objectOrArray",
    "isArray",
    "__P_95_2",
    "aliases",
    "objectMergeWith",
    "getAll",
    "getByName",
    "isDefined",
    "undefined",
    "getTotalNumber",
    "objectGetLength",
    "__extractType",
    "__P_95_3",
    "keys",
    "__inheritableKeys",
    "__P_95_1",
    "type",
    "clazz",
    "prototype",
    "$$clazz",
    "target",
    "source",
    "id",
    "base",
    "__allowedKeys",
    "core",
    "Environment",
    "select",
    "colors",
    "borders",
    "decorations",
    "fonts",
    "icons",
    "widgets",
    "appearances",
    "meta",
    "__metaKeys",
    "color",
    "border",
    "decoration",
    "font",
    "icon",
    "appearance",
    "widget",
    "__validateConfig",
    "_true",
    "allowed",
    "key",
    "Error",
    "_typeof",
    "maps",
    "Array",
    "RegExp",
    "Date",
    "classname",
    "counter",
    "value",
    "_default",
    "mixinTheme",
    "__checkForInvalidTheme",
    "__P_95_8",
    "errorObj",
    "Theme"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/Theme.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Theme classes contain styling information for certain aspects of the\r\n * graphical user interface.\r\n *\r\n * Supported themes are: colors, decorations, fonts, icons, appearances.\r\n * The additional meta theme allows for grouping of the individual\r\n * themes.\r\n *\r\n * For more details, take a look at the\r\n * <a href='http://qooxdoo.org/docs/#desktop/gui/theming.md' target='_blank'>\r\n * documentation of the theme system in the qooxdoo manual.</a>\r\n */\r\nqx.Bootstrap.define(\"qx.Theme\", {\r\n  statics: {\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       PUBLIC API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Theme config\r\n     *\r\n     * Example:\r\n     * <pre class='javascript'>\r\n     * qx.Theme.define(\"name\",\r\n     * {\r\n     *   aliases : {\r\n     *     \"aliasKey\" : \"resourceFolderOrUri\"\r\n     *   },\r\n     *   extend : otherTheme,\r\n     *   include : [MMixinTheme],\r\n     *   patch : [MMixinTheme],\r\n     *   colors : {},\r\n     *   decorations : {},\r\n     *   fonts : {},\r\n     *   widgets : {},\r\n     *   appearances : {},\r\n     *   meta : {},\r\n     *   boot : function(){}\r\n     * });\r\n     * </pre>\r\n     *\r\n     * For more details, take a look at the\r\n     * <a href='http://qooxdoo.org/docs/#desktop/gui/theming.md' target='_blank'>\r\n     * documentation of the theme system in the qooxdoo manual.</a>\r\n     *\r\n     * @param name {String} name of the mixin\r\n     * @param config {Map} config structure\r\n     */\r\n    define(name, config) {\r\n      if (!config) {\r\n        var config = {};\r\n      }\r\n\r\n      config.include = this.__normalizeArray(config.include);\r\n      config.patch = this.__normalizeArray(config.patch);\r\n\r\n      // Validate incoming data\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        this.__validateConfig(name, config);\r\n      }\r\n\r\n      // Create alias\r\n      var theme = {\r\n        $$type: \"Theme\",\r\n        name: name,\r\n        title: config.title,\r\n\r\n        // Attach toString\r\n        toString: this.genericToString\r\n      };\r\n\r\n      // Remember extend\r\n      if (config.extend) {\r\n        theme.supertheme = config.extend;\r\n      }\r\n\r\n      // Assign to namespace\r\n      theme.basename = qx.Bootstrap.createNamespace(name, theme);\r\n\r\n      // Convert theme entry from Object to Function (for prototype inheritance)\r\n      this.__convert(theme, config);\r\n\r\n      this.__initializeAliases(theme, config);\r\n\r\n      // Store class reference in global class registry\r\n      this.$$registry[name] = theme;\r\n\r\n      // Include mixin themes\r\n      for (var i = 0, a = config.include, l = a.length; i < l; i++) {\r\n        this.include(theme, a[i]);\r\n      }\r\n\r\n      for (var i = 0, a = config.patch, l = a.length; i < l; i++) {\r\n        this.patch(theme, a[i]);\r\n      }\r\n\r\n      // Run boot code\r\n      if (config.boot) {\r\n        config.boot();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Normalize an object to an array\r\n     *\r\n     * @param objectOrArray {Object|Array} Either an object that is to be\r\n     *   normalized to an array, or an array, which is just passed through\r\n     *\r\n     * @return {Array} Either an array that has the original object as its\r\n     *   single item, or the original array itself\r\n     */\r\n    __normalizeArray(objectOrArray) {\r\n      if (!objectOrArray) {\r\n        return [];\r\n      }\r\n\r\n      if (qx.Bootstrap.isArray(objectOrArray)) {\r\n        return objectOrArray;\r\n      } else {\r\n        return [objectOrArray];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initialize alias inheritance\r\n     *\r\n     * @param theme {Map} The theme\r\n     * @param config {Map} config structure\r\n     */\r\n    __initializeAliases(theme, config) {\r\n      var aliases = config.aliases || {};\r\n      if (config.extend && config.extend.aliases) {\r\n        qx.Bootstrap.objectMergeWith(aliases, config.extend.aliases, false);\r\n      }\r\n\r\n      theme.aliases = aliases;\r\n    },\r\n\r\n    /**\r\n     * Return a map of all known themes\r\n     *\r\n     * @return {Map} known themes\r\n     */\r\n    getAll() {\r\n      return this.$$registry;\r\n    },\r\n\r\n    /**\r\n     * Returns a theme by name\r\n     *\r\n     * @param name {String} theme name to check\r\n     * @return {Object ? void} theme object\r\n     */\r\n    getByName(name) {\r\n      return this.$$registry[name];\r\n    },\r\n\r\n    /**\r\n     * Determine if theme exists\r\n     *\r\n     * @param name {String} theme name to check\r\n     * @return {Boolean} true if theme exists\r\n     */\r\n    isDefined(name) {\r\n      return this.getByName(name) !== undefined;\r\n    },\r\n\r\n    /**\r\n     * Determine the number of themes which are defined\r\n     *\r\n     * @return {Number} the number of classes\r\n     */\r\n    getTotalNumber() {\r\n      return qx.Bootstrap.objectGetLength(this.$$registry);\r\n    },\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n       PRIVATE/INTERNAL API\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * This method will be attached to all themes to return\r\n     * a nice identifier for them.\r\n     *\r\n     * @internal\r\n     * @return {String} The interface identifier\r\n     */\r\n    genericToString() {\r\n      return \"[Theme \" + this.name + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Extract the inheritable key (could be only one)\r\n     *\r\n     * @param config {Map} The map from where to extract the key\r\n     * @return {String} the key which was found\r\n     */\r\n    __extractType(config) {\r\n      for (\r\n        var i = 0, keys = this.__inheritableKeys, l = keys.length;\r\n        i < l;\r\n        i++\r\n      ) {\r\n        if (config[keys[i]]) {\r\n          return keys[i];\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Convert existing entry to a prototype based inheritance function\r\n     *\r\n     * @param theme {Theme} newly created theme object\r\n     * @param config {Map} incoming theme configuration\r\n     */\r\n    __convert(theme, config) {\r\n      var type = this.__extractType(config);\r\n\r\n      // Use theme key from extended theme if own one is not available\r\n      if (config.extend && !type) {\r\n        type = config.extend.type;\r\n      }\r\n\r\n      // Save theme type\r\n      theme.type = type || \"other\";\r\n\r\n      // Create pseudo class\r\n      var clazz = function () {};\r\n\r\n      // Process extend config\r\n      if (config.extend) {\r\n        clazz.prototype = new config.extend.$$clazz();\r\n      }\r\n\r\n      var target = clazz.prototype;\r\n      var source = config[type];\r\n\r\n      // Copy entries to prototype\r\n      for (var id in source) {\r\n        target[id] = source[id];\r\n\r\n        // Appearance themes only:\r\n        // Convert base flag to class reference (needed for mixin support)\r\n        if (target[id].base) {\r\n          if (qx.core.Environment.get(\"qx.debug\")) {\r\n            if (!config.extend) {\r\n              throw new Error(\r\n                \"Found base flag in entry '\" +\r\n                  id +\r\n                  \"' of theme '\" +\r\n                  config.name +\r\n                  \"'. Base flags are not allowed for themes without a valid super theme!\"\r\n              );\r\n            }\r\n          }\r\n\r\n          target[id].base = config.extend;\r\n        }\r\n      }\r\n\r\n      // store pseudo class\r\n      theme.$$clazz = clazz;\r\n\r\n      // and create instance under the old key\r\n      theme[type] = new clazz();\r\n    },\r\n\r\n    /** @type {Map} Internal theme registry */\r\n    $$registry: {},\r\n\r\n    /** @type {Array} Keys which support inheritance */\r\n    __inheritableKeys: [\r\n      \"colors\",\r\n      \"borders\",\r\n      \"decorations\",\r\n      \"fonts\",\r\n      \"icons\",\r\n      \"widgets\",\r\n      \"appearances\",\r\n      \"meta\"\r\n    ],\r\n\r\n    /** @type {Map} allowed keys in theme definition */\r\n    __allowedKeys: qx.core.Environment.select(\"qx.debug\", {\r\n      true: {\r\n        title: \"string\", // String\r\n        aliases: \"object\", // Map\r\n        type: \"string\", // String\r\n        extend: \"object\", // Theme\r\n        colors: \"object\", // Map\r\n        borders: \"object\", // Map\r\n        decorations: \"object\", // Map\r\n        fonts: \"object\", // Map\r\n        icons: \"object\", // Map\r\n        widgets: \"object\", // Map\r\n        appearances: \"object\", // Map\r\n        meta: \"object\", // Map\r\n        include: \"object\", // Array\r\n        patch: \"object\", // Array\r\n        boot: \"function\" // Function\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /** @type {Map} allowed keys inside a meta theme block */\r\n    __metaKeys: qx.core.Environment.select(\"qx.debug\", {\r\n      true: {\r\n        color: \"object\",\r\n        border: \"object\",\r\n        decoration: \"object\",\r\n        font: \"object\",\r\n        icon: \"object\",\r\n        appearance: \"object\",\r\n        widget: \"object\"\r\n      },\r\n\r\n      default: null\r\n    }),\r\n\r\n    /**\r\n     * Validates incoming configuration and checks keys and values\r\n     *\r\n     * @signature function(name, config)\r\n     * @param name {String} The name of the class\r\n     * @param config {Map} Configuration map\r\n     * @throws {Error} if the given config is not valid (e.g. wrong key or wrong key value)\r\n     */\r\n    __validateConfig: qx.core.Environment.select(\"qx.debug\", {\r\n      true(name, config) {\r\n        var allowed = this.__allowedKeys;\r\n        for (var key in config) {\r\n          if (allowed[key] === undefined) {\r\n            throw new Error(\r\n              'The configuration key \"' +\r\n                key +\r\n                '\" in theme \"' +\r\n                name +\r\n                '\" is not allowed!'\r\n            );\r\n          }\r\n\r\n          if (config[key] == null) {\r\n            throw new Error(\r\n              'Invalid key \"' +\r\n                key +\r\n                '\" in theme \"' +\r\n                name +\r\n                '\"! The value is undefined/null!'\r\n            );\r\n          }\r\n\r\n          if (allowed[key] !== null && typeof config[key] !== allowed[key]) {\r\n            throw new Error(\r\n              'Invalid type of key \"' +\r\n                key +\r\n                '\" in theme \"' +\r\n                name +\r\n                '\"! The type of the key must be \"' +\r\n                allowed[key] +\r\n                '\"!'\r\n            );\r\n          }\r\n        }\r\n\r\n        // Validate maps\r\n        var maps = [\r\n          \"colors\",\r\n          \"borders\",\r\n          \"decorations\",\r\n          \"fonts\",\r\n          \"icons\",\r\n          \"widgets\",\r\n          \"appearances\",\r\n          \"meta\"\r\n        ];\r\n\r\n        for (var i = 0, l = maps.length; i < l; i++) {\r\n          var key = maps[i];\r\n\r\n          if (\r\n            config[key] !== undefined &&\r\n            (config[key] instanceof Array ||\r\n              config[key] instanceof RegExp ||\r\n              config[key] instanceof Date ||\r\n              config[key].classname !== undefined)\r\n          ) {\r\n            throw new Error(\r\n              'Invalid key \"' +\r\n                key +\r\n                '\" in theme \"' +\r\n                name +\r\n                '\"! The value needs to be a map!'\r\n            );\r\n          }\r\n        }\r\n\r\n        // Check conflicts (detect number ...)\r\n        var counter = 0;\r\n        for (var i = 0, l = maps.length; i < l; i++) {\r\n          var key = maps[i];\r\n\r\n          if (config[key]) {\r\n            counter++;\r\n          }\r\n\r\n          if (counter > 1) {\r\n            throw new Error(\r\n              \"You can only define one theme category per file! Invalid theme: \" +\r\n                name\r\n            );\r\n          }\r\n        }\r\n\r\n        // Validate meta\r\n        if (config.meta) {\r\n          var value;\r\n          for (var key in config.meta) {\r\n            value = config.meta[key];\r\n\r\n            if (this.__metaKeys[key] === undefined) {\r\n              throw new Error(\r\n                'The key \"' +\r\n                  key +\r\n                  '\" is not allowed inside a meta theme block.'\r\n              );\r\n            }\r\n\r\n            if (typeof value !== this.__metaKeys[key]) {\r\n              throw new Error(\r\n                'The type of the key \"' +\r\n                  key +\r\n                  '\" inside the meta block is wrong.'\r\n              );\r\n            }\r\n\r\n            if (\r\n              !(\r\n                typeof value === \"object\" &&\r\n                value !== null &&\r\n                value.$$type === \"Theme\"\r\n              )\r\n            ) {\r\n              throw new Error(\r\n                'The content of a meta theme must reference to other themes. The value for \"' +\r\n                  key +\r\n                  '\" in theme \"' +\r\n                  name +\r\n                  '\" is invalid: ' +\r\n                  value\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // Validate extend\r\n        if (config.extend && config.extend.$$type !== \"Theme\") {\r\n          throw new Error(\r\n            'Invalid extend in theme \"' + name + '\": ' + config.extend\r\n          );\r\n        }\r\n\r\n        // Validate include\r\n        if (config.include) {\r\n          for (var i = 0, l = config.include.length; i < l; i++) {\r\n            if (\r\n              typeof config.include[i] == \"undefined\" ||\r\n              config.include[i].$$type !== \"Theme\"\r\n            ) {\r\n              throw new Error(\r\n                'Invalid include in theme \"' + name + '\": ' + config.include[i]\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // Validate patch\r\n        if (config.patch) {\r\n          for (var i = 0, l = config.patch.length; i < l; i++) {\r\n            if (\r\n              typeof config.patch[i] === \"undefined\" ||\r\n              config.patch[i].$$type !== \"Theme\"\r\n            ) {\r\n              throw new Error(\r\n                'Invalid patch in theme \"' + name + '\": ' + config.patch[i]\r\n              );\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      default() {}\r\n    }),\r\n\r\n    /**\r\n     * Include all keys of the given mixin theme into the theme. The mixin may\r\n     * include keys which are already defined in the target theme. Existing\r\n     * features of equal name will be overwritten.\r\n     *\r\n     * @param theme {Theme} An existing theme which should be modified by including the mixin theme.\r\n     * @param mixinTheme {Theme} The theme to be included.\r\n     */\r\n    patch(theme, mixinTheme) {\r\n      this.__checkForInvalidTheme(mixinTheme);\r\n\r\n      var type = this.__extractType(mixinTheme);\r\n      if (type !== this.__extractType(theme)) {\r\n        throw new Error(\r\n          \"The mixins '\" +\r\n            theme.name +\r\n            \"' are not compatible '\" +\r\n            mixinTheme.name +\r\n            \"'!\"\r\n        );\r\n      }\r\n\r\n      var source = mixinTheme[type];\r\n      var target = theme.$$clazz.prototype;\r\n\r\n      for (var key in source) {\r\n        target[key] = source[key];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Include all keys of the given mixin theme into the theme. If the\r\n     * mixin includes any keys that are already available in the\r\n     * class, they will be silently ignored. Use the {@link #patch} method\r\n     * if you need to overwrite keys in the current class.\r\n     *\r\n     * @param theme {Theme} An existing theme which should be modified by including the mixin theme.\r\n     * @param mixinTheme {Theme} The theme to be included.\r\n     */\r\n    include(theme, mixinTheme) {\r\n      this.__checkForInvalidTheme(mixinTheme);\r\n\r\n      var type = mixinTheme.type;\r\n      if (type !== theme.type) {\r\n        throw new Error(\r\n          \"The mixins '\" +\r\n            theme.name +\r\n            \"' are not compatible '\" +\r\n            mixinTheme.name +\r\n            \"'!\"\r\n        );\r\n      }\r\n\r\n      var source = mixinTheme[type];\r\n      var target = theme.$$clazz.prototype;\r\n\r\n      for (var key in source) {\r\n        //Skip keys already present\r\n        if (target[key] !== undefined) {\r\n          continue;\r\n        }\r\n\r\n        target[key] = source[key];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper method to check for an invalid theme\r\n     *\r\n     * @param mixinTheme {qx.Theme?null} theme to check\r\n     * @throws {Error} if the theme is not valid\r\n     */\r\n    __checkForInvalidTheme(mixinTheme) {\r\n      if (typeof mixinTheme === \"undefined\" || mixinTheme == null) {\r\n        var errorObj = new Error(\"Mixin theme is not a valid theme!\");\r\n\r\n        if (qx.core.Environment.get(\"qx.debug\")) {\r\n          var stackTrace = qx.dev.StackTrace.getStackTraceFromError(errorObj);\r\n          qx.Bootstrap.error(this, stackTrace);\r\n        }\r\n\r\n        throw errorObj;\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}