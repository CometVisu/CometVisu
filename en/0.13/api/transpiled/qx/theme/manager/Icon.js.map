{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "properties",
    "theme",
    "check",
    "nullable",
    "apply",
    "event",
    "members",
    "_applyTheme",
    "value",
    "old",
    "aliasManager",
    "util",
    "AliasManager",
    "getInstance",
    "alias",
    "aliases",
    "remove",
    "add",
    "manager",
    "Icon"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/theme/manager/Icon.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Manager for icon themes\n */\nqx.Class.define(\"qx.theme.manager.Icon\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** currently used icon theme */\n    theme: {\n      check: \"Theme\",\n      nullable: true,\n      apply: \"_applyTheme\",\n      event: \"changeTheme\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // property apply\n    _applyTheme(value, old) {\n      var aliasManager = qx.util.AliasManager.getInstance();\n\n      if (old) {\n        for (var alias in old.aliases) {\n          aliasManager.remove(alias);\n        }\n      }\n\n      if (value) {\n        for (var alias in value.aliases) {\n          aliasManager.add(alias, value.aliases[alias]);\n        }\n      }\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;IACvCC,IAAI,EAAE,WADiC;IAEvCC,MAAM,EAAEP,EAAE,CAACQ,IAAH,CAAQC,MAFuB;;IAIvC;AACF;AACA;AACA;AACA;IAEEC,UAAU,EAAE;MACV;MACAC,KAAK,EAAE;QACLC,KAAK,EAAE,OADF;QAELC,QAAQ,EAAE,IAFL;QAGLC,KAAK,EAAE,aAHF;QAILC,KAAK,EAAE;MAJF;IAFG,CAV2B;;IAoBvC;AACF;AACA;AACA;AACA;IAEEC,OAAO,EAAE;MACP;MACAC,WAFO,uBAEKC,KAFL,EAEYC,GAFZ,EAEiB;QACtB,IAAIC,YAAY,GAAGpB,EAAE,CAACqB,IAAH,CAAQC,YAAR,CAAqBC,WAArB,EAAnB;;QAEA,IAAIJ,GAAJ,EAAS;UACP,KAAK,IAAIK,KAAT,IAAkBL,GAAG,CAACM,OAAtB,EAA+B;YAC7BL,YAAY,CAACM,MAAb,CAAoBF,KAApB;UACD;QACF;;QAED,IAAIN,KAAJ,EAAW;UACT,KAAK,IAAIM,KAAT,IAAkBN,KAAK,CAACO,OAAxB,EAAiC;YAC/BL,YAAY,CAACO,GAAb,CAAiBH,KAAjB,EAAwBN,KAAK,CAACO,OAAN,CAAcD,KAAd,CAAxB;UACD;QACF;MACF;IAhBM;EA1B8B,CAAzC;EAtBAxB,EAAE,CAACW,KAAH,CAASiB,OAAT,CAAiBC,IAAjB,CAAsB1B,aAAtB,GAAsCA,aAAtC"
}