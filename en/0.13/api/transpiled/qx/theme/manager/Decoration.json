{
  "className": "qx.theme.manager.Decoration",
  "packageName": "qx.theme.manager",
  "name": "Decoration",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0,
        "index": 650
      },
      "end": {
        "line": 344,
        "column": 3,
        "index": 9194
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Manager for decoration themes\n NOTE: Instances of this class must be disposed of after use</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "statics": {
    "CSS_CLASSNAME_PREFIX": {
      "location": {
        "start": {
          "line": 34,
          "column": 4,
          "index": 849
        },
        "end": {
          "line": 34,
          "column": 31,
          "index": 876
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The prefix for all created CSS classes</p>"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 37,
        "column": 2,
        "index": 885
      },
      "end": {
        "line": 43,
        "column": 3,
        "index": 1079
      }
    }
  },
  "properties": {
    "theme": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1326
        },
        "end": {
          "line": 58,
          "column": 5,
          "index": 1439
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Selected decoration theme</p>"
          }
        ]
      },
      "name": "theme",
      "propertyType": "new",
      "event": "changeTheme",
      "apply": "_applyTheme",
      "nullable": true,
      "allowNull": true,
      "check": "Theme"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__dynamic": {
      "location": {
        "start": {
          "line": 68,
          "column": 4,
          "index": 1647
        },
        "end": {
          "line": 68,
          "column": 19,
          "index": 1662
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__rules": {
      "location": {
        "start": {
          "line": 69,
          "column": 4,
          "index": 1668
        },
        "end": {
          "line": 69,
          "column": 17,
          "index": 1681
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__legacyIe": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1687
        },
        "end": {
          "line": 70,
          "column": 21,
          "index": 1704
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getCssClassName": {
      "location": {
        "start": {
          "line": 77,
          "column": 4,
          "index": 1929
        },
        "end": {
          "line": 84,
          "column": 5,
          "index": 2168
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the name which will be / is used as css class name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String|qx.ui.decoration.IDecorator} The decorator string or instance.",
            "paramName": "value",
            "description": " The decorator string or instance.",
            "type": [
              "String",
              "qx.ui.decoration.IDecorator"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The css class name.",
            "type": "String",
            "description": " The css class name."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addCssClass": {
      "location": {
        "start": {
          "line": 92,
          "column": 4,
          "index": 2463
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 4148
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a css class to the global stylesheet for the given decorator.\n This includes resolving the decorator if it's a string.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String|qx.ui.decoration.IDecorator} The decorator string or instance.",
            "paramName": "value",
            "description": " The decorator string or instance.",
            "type": [
              "String",
              "qx.ui.decoration.IDecorator"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the css class name.",
            "type": "String",
            "description": " the css class name."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeAllCssClasses": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 4277
        },
        "end": {
          "line": 160,
          "column": 5,
          "index": 4526
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes all previously by {@link #addCssClass} created CSS rule from\n the global stylesheet.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resolve": {
      "location": {
        "start": {
          "line": 168,
          "column": 4,
          "index": 4765
        },
        "end": {
          "line": 222,
          "column": 5,
          "index": 6113
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the dynamically interpreted result for the incoming value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} dynamically interpreted idenfier",
            "paramName": "value",
            "description": " dynamically interpreted idenfier",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} return the (translated) result of the incoming value",
            "type": "var",
            "description": " return the (translated) result of the incoming value"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isValidPropertyValue": {
      "location": {
        "start": {
          "line": 231,
          "column": 4,
          "index": 6395
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6695
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given value is valid for being used in a property\n with the 'check' configured to 'Decorator'.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Incoming value",
            "paramName": "value",
            "description": " Incoming value",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the value is valid for being used in a Decorator property",
            "type": "Boolean",
            "description": " Whether the value is valid for being used in a Decorator property"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isDynamic": {
      "location": {
        "start": {
          "line": 248,
          "column": 4,
          "index": 6930
        },
        "end": {
          "line": 259,
          "column": 5,
          "index": 7132
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether a value is interpreted dynamically</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} dynamically interpreted identifier",
            "paramName": "value",
            "description": " dynamically interpreted identifier",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} returns <code>true</code> if the value is interpreted dynamically",
            "type": "Boolean",
            "description": " returns <code>true</code> if the value is interpreted dynamically"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isCached": {
      "location": {
        "start": {
          "line": 268,
          "column": 4,
          "index": 7378
        },
        "end": {
          "line": 272,
          "column": 5,
          "index": 7512
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given decorator is cached</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "decorator {String|qx.ui.decoration.IDecorator} The decorator to check",
            "paramName": "decorator",
            "description": " The decorator to check",
            "type": [
              "String",
              "qx.ui.decoration.IDecorator"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the decorator is cached",
            "type": "Boolean",
            "description": " <code>true</code> if the decorator is cached"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyTheme": {
      "location": {
        "start": {
          "line": 275,
          "column": 4,
          "index": 7541
        },
        "end": {
          "line": 295,
          "column": 5,
          "index": 8012
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "theme"
      ]
    },
    "clear": {
      "location": {
        "start": {
          "line": 300,
          "column": 4,
          "index": 8113
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 8560
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Clears internal caches and removes all previously created CSS classes.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "refresh": {
      "location": {
        "start": {
          "line": 322,
          "column": 4,
          "index": 8674
        },
        "end": {
          "line": 332,
          "column": 5,
          "index": 8960
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Refreshes all decorator by clearing internal caches and re applying\n aliases.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTheme": {
      "type": "function",
      "name": "getTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Theme",
            "desc": "Returns the value for theme"
          }
        ]
      }
    },
    "setTheme": {
      "type": "function",
      "name": "setTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Theme",
            "paramName": "value",
            "desc": "Value for theme"
          }
        ]
      }
    },
    "resetTheme": {
      "type": "function",
      "name": "resetTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>theme</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 341,
        "column": 2,
        "index": 9156
      },
      "end": {
        "line": 343,
        "column": 3,
        "index": 9190
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}