{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "util",
    "ValueManager",
    "properties",
    "theme",
    "check",
    "nullable",
    "apply",
    "event",
    "members",
    "_applyTheme",
    "value",
    "dest",
    "_setDynamic",
    "colors",
    "name",
    "__parseColor",
    "color",
    "ColorUtil",
    "isCssString",
    "undefined",
    "Error",
    "Array",
    "rgbToRgbString",
    "Function",
    "resolve",
    "cache",
    "_dynamic",
    "resolved",
    "getTheme",
    "isDynamic",
    "manager",
    "Color"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/theme/manager/Color.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Manager for color themes\n */\nqx.Class.define(\"qx.theme.manager.Color\", {\n  type: \"singleton\",\n  extend: qx.util.ValueManager,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** the currently selected color theme */\n    theme: {\n      check: \"Theme\",\n      nullable: true,\n      apply: \"_applyTheme\",\n      event: \"changeTheme\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    _applyTheme(value) {\n      var dest = {};\n      this._setDynamic(dest); // reset dynamic cache\n      if (value) {\n        var colors = value.colors;\n\n        for (var name in colors) {\n          if (!dest[name]) {\n            dest[name] = this.__parseColor(colors, name);\n          }\n        }\n      }\n    },\n\n    /**\n     * Helper to take a color stored in the theme and returns the string color value.\n     * In most of the times that means it just returns the string stored in the theme.\n     * It additionally checks if its a valid color at all.\n     *\n     * @param colors {Map} The map of color definitions.\n     * @param name {String} The name of the color to check.\n     * @return {String} The resolved color as string.\n     */\n    __parseColor(colors, name) {\n      var color = colors[name];\n      if (typeof color === \"string\") {\n        if (!qx.util.ColorUtil.isCssString(color)) {\n          // check for references to in theme colors\n          if (colors[color] != undefined) {\n            return this.__parseColor(colors, color);\n          }\n          throw new Error(\"Could not parse color: \" + color);\n        }\n        return color;\n      } else if (color instanceof Array) {\n        return qx.util.ColorUtil.rgbToRgbString(color);\n      } else if (color instanceof Function) {\n        return this.__parseColor(colors, color(name));\n      }\n      // this is might already be a rgb or hex color\n      return name;\n    },\n\n    /**\n     * Returns the dynamically interpreted result for the incoming value,\n     * (if available), otherwise returns the original value\n     * @param value {String} Value to resolve\n     * @return {var} either returns the (translated) result of the incoming\n     * value or the value itself\n     */\n    resolve(value) {\n      var cache = this._dynamic;\n      var resolved = cache[value];\n\n      if (resolved) {\n        return resolved;\n      }\n\n      // If the font instance is not yet cached create a new one to return\n      // This is true whenever a runtime include occurred (using \"qx.Theme.include\"\n      // or \"qx.Theme.patch\"), since these methods only merging the keys of\n      // the theme and are not updating the cache\n      var theme = this.getTheme();\n      if (theme !== null && theme.colors[value]) {\n        return (cache[value] = this.__parseColor(theme.colors, value));\n      }\n\n      return value;\n    },\n\n    /**\n     * Whether a value is interpreted dynamically\n     *\n     * @param value {String} dynamically interpreted identifier\n     * @return {Boolean} returns true if the value is interpreted dynamically\n     */\n    isDynamic(value) {\n      var cache = this._dynamic;\n\n      if (value && cache[value] !== undefined) {\n        return true;\n      }\n\n      // If the font instance is not yet cached create a new one to return\n      // This is true whenever a runtime include occurred (using \"qx.Theme.include\"\n      // or \"qx.Theme.patch\"), since these methods only merging the keys of\n      // the theme and are not updating the cache\n      var theme = this.getTheme();\n      if (theme !== null && value && theme.colors[value] !== undefined) {\n        cache[value] = this.__parseColor(theme.colors, value);\n        return true;\n      }\n\n      return false;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}