{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "util",
    "ValueManager",
    "properties",
    "theme",
    "check",
    "nullable",
    "apply",
    "event",
    "members",
    "_applyTheme",
    "value",
    "dest",
    "_setDynamic",
    "colors",
    "name",
    "__parseColor",
    "__P_299_0",
    "color",
    "ColorUtil",
    "isCssString",
    "undefined",
    "Error",
    "Array",
    "rgbToRgbString",
    "Function",
    "resolve",
    "cache",
    "_dynamic",
    "resolved",
    "getTheme",
    "isDynamic",
    "manager",
    "Color"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/theme/manager/Color.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Manager for color themes\r\n */\r\nqx.Class.define(\"qx.theme.manager.Color\", {\r\n  type: \"singleton\",\r\n  extend: qx.util.ValueManager,\r\n\r\n  /*\r\n  *****************************************************************************\r\n     PROPERTIES\r\n  *****************************************************************************\r\n  */\r\n\r\n  properties: {\r\n    /** the currently selected color theme */\r\n    theme: {\r\n      check: \"Theme\",\r\n      nullable: true,\r\n      apply: \"_applyTheme\",\r\n      event: \"changeTheme\"\r\n    }\r\n  },\r\n\r\n  /*\r\n  *****************************************************************************\r\n     MEMBERS\r\n  *****************************************************************************\r\n  */\r\n\r\n  members: {\r\n    _applyTheme(value) {\r\n      var dest = {};\r\n      this._setDynamic(dest); // reset dynamic cache\r\n      if (value) {\r\n        var colors = value.colors;\r\n\r\n        for (var name in colors) {\r\n          if (!dest[name]) {\r\n            dest[name] = this.__parseColor(colors, name);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Helper to take a color stored in the theme and returns the string color value.\r\n     * In most of the times that means it just returns the string stored in the theme.\r\n     * It additionally checks if its a valid color at all.\r\n     *\r\n     * @param colors {Map} The map of color definitions.\r\n     * @param name {String} The name of the color to check.\r\n     * @return {String} The resolved color as string.\r\n     */\r\n    __parseColor(colors, name) {\r\n      var color = colors[name];\r\n      if (typeof color === \"string\") {\r\n        if (!qx.util.ColorUtil.isCssString(color)) {\r\n          // check for references to in theme colors\r\n          if (colors[color] != undefined) {\r\n            return this.__parseColor(colors, color);\r\n          }\r\n          throw new Error(\"Could not parse color: \" + color);\r\n        }\r\n        return color;\r\n      } else if (color instanceof Array) {\r\n        return qx.util.ColorUtil.rgbToRgbString(color);\r\n      } else if (color instanceof Function) {\r\n        return this.__parseColor(colors, color(name));\r\n      }\r\n      // this is might already be a rgb or hex color\r\n      return name;\r\n    },\r\n\r\n    /**\r\n     * Returns the dynamically interpreted result for the incoming value,\r\n     * (if available), otherwise returns the original value\r\n     * @param value {String} Value to resolve\r\n     * @return {var} either returns the (translated) result of the incoming\r\n     * value or the value itself\r\n     */\r\n    resolve(value) {\r\n      var cache = this._dynamic;\r\n      var resolved = cache[value];\r\n\r\n      if (resolved) {\r\n        return resolved;\r\n      }\r\n\r\n      // If the font instance is not yet cached create a new one to return\r\n      // This is true whenever a runtime include occurred (using \"qx.Theme.include\"\r\n      // or \"qx.Theme.patch\"), since these methods only merging the keys of\r\n      // the theme and are not updating the cache\r\n      var theme = this.getTheme();\r\n      if (theme !== null && theme.colors[value]) {\r\n        return (cache[value] = this.__parseColor(theme.colors, value));\r\n      }\r\n\r\n      return value;\r\n    },\r\n\r\n    /**\r\n     * Whether a value is interpreted dynamically\r\n     *\r\n     * @param value {String} dynamically interpreted identifier\r\n     * @return {Boolean} returns true if the value is interpreted dynamically\r\n     */\r\n    isDynamic(value) {\r\n      var cache = this._dynamic;\r\n\r\n      if (value && cache[value] !== undefined) {\r\n        return true;\r\n      }\r\n\r\n      // If the font instance is not yet cached create a new one to return\r\n      // This is true whenever a runtime include occurred (using \"qx.Theme.include\"\r\n      // or \"qx.Theme.patch\"), since these methods only merging the keys of\r\n      // the theme and are not updating the cache\r\n      var theme = this.getTheme();\r\n      if (theme !== null && value && theme.colors[value] !== undefined) {\r\n        cache[value] = this.__parseColor(theme.colors, value);\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}