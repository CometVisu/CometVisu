{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "now",
    "Date",
    "parse",
    "dateString",
    "captureGroups",
    "exec",
    "time",
    "originalParse",
    "isNaN",
    "setTime",
    "NaN",
    "noTime",
    "every",
    "i",
    "undefined",
    "forEach",
    "getTime",
    "minutesOffset",
    "UTC",
    "defer",
    "core",
    "Environment",
    "get",
    "lang",
    "normalize"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/lang/normalize/Date.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Martin Wittemann (wittemann)\r\n\r\n************************************************************************ */\r\n/**\r\n * This class is responsible for the normalization of the native 'Date' object.\r\n * It checks if these methods are available and, if not, appends them to\r\n * ensure compatibility in all browsers.\r\n * For usage samples, check out the attached links.\r\n *\r\n * @group (Polyfill)\r\n *\r\n * @deprecated {7.0}\r\n *  This normalizer handles Date.parse and Date.now. The former has\r\n *  been standardized since IE version 3, and the latter, since IE\r\n *  version 9, both ancient. There is no need for this normalizer any\r\n *  longer.\r\n */\r\nqx.Bootstrap.define(\"qx.lang.normalize.Date\", {\r\n  statics: {\r\n    /**\r\n     * Returns the time elapsed since January 1, 1970 in milliseconds.\r\n     *\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now\">MDN documentation</a> |\r\n     * <a href=\"http://es5.github.com/#x15.9.4.4\">Annotated ES5 Spec</a>\r\n     *\r\n     * @return {Integer} Milliseconds since the Unix Epoch\r\n     */\r\n    now() {\r\n      return +new Date();\r\n    },\r\n\r\n    /**\r\n     * Parses a string representation of a date and return number of\r\n     * milliseconds since Epoch or NaN if string is unrecognized.\r\n     *\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\">MDN documentation</a>\r\n     *\r\n     * Derived from <https://github.com/csnover/js-iso8601>: Â©2011 Colin Snover\r\n     * <http://zetafleet.com>, MIT license\r\n     *\r\n     * @param dateString {String} A string representing an RFC2822 or ISO 8601\r\n     *   date (other formats may be used, but results may be unexpected).\r\n     * @return {Number|NaN} A number representing the milliseconds elapsed\r\n     *   since January 1, 1970, 00:00:00 UTC and the date obtained by parsing\r\n     *   the given string representation of a date.\r\n     *   If the argument doesn't represent a valid date, NaN is returned.\r\n     */\r\n    parse(dateString) {\r\n      // Match input against ISO8601 regular expression\r\n      var captureGroups =\r\n        /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/.exec(\r\n          dateString\r\n        );\r\n\r\n      if (!captureGroups) {\r\n        //\r\n        // if the regular expression does not match parse the string\r\n        // using the original function.\r\n        // Additionally check if it returns a real time value, which we\r\n        // ensure by using setTime with an intermediate Date object and the\r\n        // parsed time value.\r\n        // Safari 11 e.g. parses the date string '19700101' successfully\r\n        // into a time value, but returns NaN if that value is used in setTime.\r\n        //\r\n        // See:\r\n        //   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\r\n        //   https://github.com/qooxdoo/qooxdoo/issues/9451\r\n        //\r\n        var time = Date.originalParse(dateString);\r\n        if (isNaN(time) || isNaN(new Date().setTime(time))) {\r\n          return NaN;\r\n        }\r\n        return time;\r\n      }\r\n\r\n      // Just a date without time?\r\n      var noTime = [4, 5, 6, 7].every(function (i) {\r\n        return captureGroups[i] === undefined;\r\n      });\r\n\r\n      // Avoid invalid timestamps caused by undefined values being passed to Date.UTC\r\n      [1, 4, 5, 6, 7, 10, 11].forEach(function (i) {\r\n        captureGroups[i] = +captureGroups[i] || 0;\r\n      });\r\n      captureGroups[2] = (+captureGroups[2] || 1) - 1; // Allow undefined months\r\n      captureGroups[3] = +captureGroups[3] || 1; // Allow undefined days\r\n\r\n      // No timezone offset given and *not* just a date (without time)\r\n      if (\r\n        captureGroups[8] !== \"Z\" &&\r\n        captureGroups[9] === undefined &&\r\n        !noTime\r\n      ) {\r\n        // => Treat as local\r\n        return new Date(\r\n          captureGroups[1],\r\n          captureGroups[2],\r\n          captureGroups[3],\r\n          captureGroups[4],\r\n          captureGroups[5],\r\n          captureGroups[6],\r\n          captureGroups[7]\r\n        ).getTime();\r\n      }\r\n\r\n      // Handle timezone offsets\r\n      var minutesOffset = 0;\r\n      if (captureGroups[8] !== \"Z\") {\r\n        minutesOffset = captureGroups[10] * 60 + captureGroups[11];\r\n        if (captureGroups[9] === \"+\") {\r\n          minutesOffset = -minutesOffset;\r\n        }\r\n      }\r\n\r\n      // Return the number of milliseconds since Epoch\r\n      return Date.UTC(\r\n        captureGroups[1],\r\n        captureGroups[2],\r\n        captureGroups[3],\r\n        captureGroups[4],\r\n        captureGroups[5] + minutesOffset,\r\n        captureGroups[6],\r\n        captureGroups[7]\r\n      );\r\n    }\r\n  },\r\n\r\n  defer(statics) {\r\n    // Date.now\r\n    if (!qx.core.Environment.get(\"ecmascript.date.now\")) {\r\n      Date.now = statics.now;\r\n    }\r\n    // Date.parse\r\n    if (!qx.core.Environment.get(\"ecmascript.date.parse\")) {\r\n      Date.originalParse =\r\n        Date.parse ||\r\n        function (dateString) {\r\n          return NaN;\r\n        };\r\n      Date.parse = statics.parse;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}