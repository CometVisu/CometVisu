{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "trim",
    "replace",
    "startsWith",
    "searchString",
    "position",
    "substr",
    "length",
    "endsWith",
    "subjectString",
    "toString",
    "isFinite",
    "Math",
    "floor",
    "lastIndex",
    "indexOf",
    "codePointAt",
    "TypeError",
    "string",
    "String",
    "size",
    "index",
    "Number",
    "undefined",
    "first",
    "charCodeAt",
    "second",
    "fromCodePoint",
    "_",
    "codeUnits",
    "codeLen",
    "result",
    "len",
    "arguments",
    "codePoint",
    "RangeError",
    "push",
    "fromCharCode",
    "apply",
    "defer",
    "core",
    "Environment",
    "get",
    "prototype",
    "lang",
    "normalize"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/lang/normalize/String.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n/**\n * This class is responsible for the normalization of the native 'String' object.\n * It checks if these methods are available and, if not, appends them to\n * ensure compatibility in all browsers.\n * For usage samples, check out the attached links.\n *\n * @group (Polyfill)\n */\nqx.Bootstrap.define(\"qx.lang.normalize.String\", {\n  statics: {\n    /**\n     * Removes whitespace from both ends of the string.\n     *\n     * <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/Trim\">MDN documentation</a> |\n     * <a href=\"http://es5.github.com/#x15.5.4.20\">Annotated ES5 Spec</a>\n     *\n     * @return {String} The trimmed string\n     */\n    trim() {\n      return this.replace(/^\\s+|\\s+$/g, \"\");\n    },\n\n    /**\n     * Determines whether a string begins with the characters of another\n     * string, returning true or false as appropriate.\n     *\n     * @param searchString {String} The characters to be searched for at the\n     *   start of this string.\n     * @param position {Integer?0} The position in this string at which to\n     *   begin searching for <code>searchString</code>.\n     * @return {Boolean} Whether the string begins with the other string.\n     */\n    startsWith(searchString, position) {\n      position = position || 0;\n      return this.substr(position, searchString.length) === searchString;\n    },\n\n    /**\n     * Determines whether a ends with the characters of another string,\n     * returning true or false as appropriate.\n     *\n     * @param searchString {String} The characters to be searched for at the\n     *   end of this string.\n     * @param position {Integer?length} Search within this string as if this\n     *   string were only this long; defaults to this string's actual length,\n     *   clamped within the range established by this string's length.\n     * @return {Boolean} Whether the string ends with the other string.\n     */\n    endsWith(searchString, position) {\n      var subjectString = this.toString();\n      if (\n        typeof position !== \"number\" ||\n        !isFinite(position) ||\n        Math.floor(position) !== position ||\n        position > subjectString.length\n      ) {\n        position = subjectString.length;\n      }\n      position -= searchString.length;\n      var lastIndex = subjectString.indexOf(searchString, position);\n      return lastIndex !== -1 && lastIndex === position;\n    },\n\n    /**\n     * Returns a non-negative integer that is the Unicode code point value.\n     *   see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\n     *\n     * @param position {Integer} Position of an element in the string to\n     *   return the code point value from.\n     * @return {Integer} A number representing the code point value of\n     *   the character at the given pos. If there is no element at pos,\n     *   returns undefined..\n     */\n    codePointAt(position) {\n      if (this == null) {\n        throw TypeError();\n      }\n      var string = String(this);\n      var size = string.length;\n      // `ToInteger`\n      var index = position ? Number(position) : 0;\n      if (index != index) {\n        // better `isNaN`\n        index = 0;\n      }\n      // Account for out-of-bounds indices:\n      if (index < 0 || index >= size) {\n        return undefined;\n      }\n      // Get the first code unit\n      var first = string.charCodeAt(index);\n      var second;\n      if (\n        // check if itâ€™s the start of a surrogate pair\n        first >= 0xd800 &&\n        first <= 0xdbff && // high surrogate\n        size > index + 1 // there is a next code unit\n      ) {\n        second = string.charCodeAt(index + 1);\n        if (second >= 0xdc00 && second <= 0xdfff) {\n          // low surrogate\n          // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          return (first - 0xd800) * 0x400 + second - 0xdc00 + 0x10000;\n        }\n      }\n      return first;\n    },\n\n    /**\n     * Returns a string created by using the specified sequence of code points.\n     *   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n     *\n     * @param var_args {Integer} A sequence of code points as a variable argument list\n     *   The undescore is used as a throwaway variable.\n     * @return {String} A string created by using\n     *   the specified sequence of code points.\n     */\n    fromCodePoint(_) {\n      var codeUnits = [],\n        codeLen = 0,\n        result = \"\";\n      for (var index = 0, len = arguments.length; index !== len; ++index) {\n        var codePoint = +arguments[index];\n        // correctly handles all cases including `NaN`, `-Infinity`, `+Infinity`\n        // The surrounding `!(...)` is required to correctly handle `NaN` cases\n        // The (codePoint>>>0) === codePoint clause handles decimals and negatives\n        if (!(codePoint < 0x10ffff && codePoint >>> 0 === codePoint)) {\n          throw RangeError(\"Invalid code point: \" + codePoint);\n        }\n        if (codePoint <= 0xffff) {\n          // BMP code point\n          codeLen = codeUnits.push(codePoint);\n        } else {\n          // Astral code point; split in surrogate halves\n          // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          codePoint -= 0x10000;\n          codeLen = codeUnits.push(\n            (codePoint >> 10) + 0xd800, // highSurrogate\n            (codePoint % 0x400) + 0xdc00 // lowSurrogate\n          );\n        }\n        if (codeLen >= 0x3fff) {\n          result += String.fromCharCode.apply(null, codeUnits);\n          codeUnits.length = 0;\n        }\n      }\n\n      return result + String.fromCharCode.apply(null, codeUnits);\n    }\n  },\n\n  defer(statics) {\n    // trim\n    if (!qx.core.Environment.get(\"ecmascript.string.trim\")) {\n      String.prototype.trim = statics.trim;\n    }\n    // startsWith\n    if (!qx.core.Environment.get(\"ecmascript.string.startsWith\")) {\n      String.prototype.startsWith = statics.startsWith;\n    }\n    // endsWith\n    if (!qx.core.Environment.get(\"ecmascript.string.endsWith\")) {\n      String.prototype.endsWith = statics.endsWith;\n    }\n    // codePointAt\n    if (!qx.core.Environment.get(\"ecmascript.string.codePointAt\")) {\n      String.prototype.codePointAt = statics.codePointAt;\n    }\n    // fromCodePoint\n    if (!qx.core.Environment.get(\"ecmascript.string.fromCodePoint\")) {\n      String.fromCodePoint = statics.fromCodePoint;\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}