{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__mgr",
    "locale",
    "Manager",
    "getInstance",
    "getAmMarker",
    "localize",
    "getPmMarker",
    "getDayNames",
    "length",
    "context",
    "withFallback",
    "days",
    "names",
    "i",
    "key",
    "push",
    "__localizeWithFallback",
    "getDayName",
    "day",
    "getMonthNames",
    "getMonthName",
    "month",
    "getDateFormat",
    "size",
    "getDateTimeFormat",
    "canonical",
    "fallback",
    "localizedFormat",
    "getTimeFormat",
    "Date",
    "Error",
    "getWeekStart",
    "weekStart",
    "MV",
    "AE",
    "AF",
    "BH",
    "DJ",
    "DZ",
    "EG",
    "ER",
    "ET",
    "IQ",
    "IR",
    "JO",
    "KE",
    "KW",
    "LB",
    "LY",
    "MA",
    "OM",
    "QA",
    "SA",
    "SD",
    "SO",
    "TN",
    "YE",
    "AS",
    "AU",
    "AZ",
    "BW",
    "CA",
    "CN",
    "FO",
    "GE",
    "GL",
    "GU",
    "HK",
    "IE",
    "IL",
    "IS",
    "JM",
    "JP",
    "KG",
    "KR",
    "LA",
    "MH",
    "MN",
    "MO",
    "MP",
    "MT",
    "NZ",
    "PH",
    "PK",
    "SG",
    "TH",
    "TT",
    "TW",
    "UM",
    "US",
    "UZ",
    "VI",
    "ZA",
    "ZW",
    "MW",
    "NG",
    "TJ",
    "territory",
    "_getTerritory",
    "getWeekendStart",
    "weekendStart",
    "SY",
    "IN",
    "getWeekendEnd",
    "weekendEnd",
    "isWeekend",
    "split",
    "getTerritory",
    "getLanguage",
    "toUpperCase",
    "__P_277_1",
    "fallbackContext",
    "localizedString",
    "newKey",
    "replace"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/locale/Date.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Sebastian Werner (wpbasti)\r\n     * Andreas Ecker (ecker)\r\n     * Fabian Jakobs (fjakobs)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Static class that provides localized date information (like names of week\r\n * days, AM/PM markers, start of week, etc.).\r\n *\r\n * @cldr()\r\n */\r\nqx.Class.define(\"qx.locale.Date\", {\r\n  statics: {\r\n    /**\r\n     * Reference to the locale manager.\r\n     *\r\n     * @internal\r\n     */\r\n    __mgr: qx.locale.Manager.getInstance(),\r\n\r\n    /**\r\n     * Get AM marker for time definitions\r\n     *\r\n     * @param locale {String} optional locale to be used\r\n     * @return {String} translated AM marker.\r\n     */\r\n    getAmMarker(locale) {\r\n      return this.__mgr.localize(\"cldr_am\", [], locale);\r\n    },\r\n\r\n    /**\r\n     * Get PM marker for time definitions\r\n     *\r\n     * @param locale {String} optional locale to be used\r\n     * @return {String} translated PM marker.\r\n     */\r\n    getPmMarker(locale) {\r\n      return this.__mgr.localize(\"cldr_pm\", [], locale);\r\n    },\r\n\r\n    /**\r\n     * Return localized names of day names\r\n     *\r\n     * @param length {String} format of the day names.\r\n     *       Possible values: \"abbreviated\", \"narrow\", \"wide\"\r\n     * @param locale {String} optional locale to be used\r\n     * @param context {String} (default: \"format\") intended context.\r\n     *       Possible values: \"format\", \"stand-alone\"\r\n     * @param withFallback {Boolean?} if true, the previous parameter's other value is tried\r\n     * in order to find a localized name for the day\r\n     * @return {String[]} array of localized day names starting with sunday.\r\n     */\r\n    getDayNames(length, locale, context, withFallback) {\r\n      var context = context ? context : \"format\";\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(length, [\"abbreviated\", \"narrow\", \"wide\"]);\r\n        qx.core.Assert.assertInArray(context, [\"format\", \"stand-alone\"]);\r\n      }\r\n\r\n      var days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n\r\n      var names = [];\r\n\r\n      for (var i = 0; i < days.length; i++) {\r\n        var key = \"cldr_day_\" + context + \"_\" + length + \"_\" + days[i];\r\n        names.push(\r\n          withFallback\r\n            ? this.__localizeWithFallback(\r\n                context,\r\n                context === \"format\" ? \"stand-alone\" : \"format\",\r\n                key,\r\n                locale\r\n              )\r\n            : this.__mgr.localize(key, [], locale)\r\n        );\r\n      }\r\n\r\n      return names;\r\n    },\r\n\r\n    /**\r\n     * Return localized name of a week day name\r\n     *\r\n     * @param length {String} format of the day name.\r\n     *       Possible values: \"abbreviated\", \"narrow\", \"wide\"\r\n     * @param day {Integer} day number. 0=sunday, 1=monday, ...\r\n     * @param locale {String} optional locale to be used\r\n     * @param context {String} (default: \"format\") intended context.\r\n     *       Possible values: \"format\", \"stand-alone\"\r\n     * @param withFallback {Boolean?} if true, the previous parameter's other value is tried\r\n     * in order to find a localized name for the day\r\n     * @return {String} localized day name\r\n     */\r\n    getDayName(length, day, locale, context, withFallback) {\r\n      var context = context ? context : \"format\";\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(length, [\"abbreviated\", \"narrow\", \"wide\"]);\r\n        qx.core.Assert.assertInteger(day);\r\n        qx.core.Assert.assertInRange(day, 0, 6);\r\n        qx.core.Assert.assertInArray(context, [\"format\", \"stand-alone\"]);\r\n      }\r\n\r\n      var days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n\r\n      var key = \"cldr_day_\" + context + \"_\" + length + \"_\" + days[day];\r\n      return withFallback\r\n        ? this.__localizeWithFallback(\r\n            context,\r\n            context === \"format\" ? \"stand-alone\" : \"format\",\r\n            key,\r\n            locale\r\n          )\r\n        : this.__mgr.localize(key, [], locale);\r\n    },\r\n\r\n    /**\r\n     * Return localized names of month names\r\n     *\r\n     * @param length {String} format of the month names.\r\n     *       Possible values: \"abbreviated\", \"narrow\", \"wide\"\r\n     * @param locale {String} optional locale to be used\r\n     * @param context {String} (default: \"format\") intended context.\r\n     *       Possible values: \"format\", \"stand-alone\"\r\n     * @param withFallback {Boolean?} if true, the previous parameter's other value is tried\r\n     * in order to find a localized name for the month\r\n     * @return {String[]} array of localized month names starting with january.\r\n     */\r\n    getMonthNames(length, locale, context, withFallback) {\r\n      var context = context ? context : \"format\";\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(length, [\"abbreviated\", \"narrow\", \"wide\"]);\r\n        qx.core.Assert.assertInArray(context, [\"format\", \"stand-alone\"]);\r\n      }\r\n\r\n      var names = [];\r\n\r\n      for (var i = 0; i < 12; i++) {\r\n        var key = \"cldr_month_\" + context + \"_\" + length + \"_\" + (i + 1);\r\n        names.push(\r\n          withFallback\r\n            ? this.__localizeWithFallback(\r\n                context,\r\n                context === \"format\" ? \"stand-alone\" : \"format\",\r\n                key,\r\n                locale\r\n              )\r\n            : this.__mgr.localize(key, [], locale)\r\n        );\r\n      }\r\n\r\n      return names;\r\n    },\r\n\r\n    /**\r\n     * Return localized name of a month\r\n     *\r\n     * @param length {String} format of the month names.\r\n     *       Possible values: \"abbreviated\", \"narrow\", \"wide\"\r\n     * @param month {Integer} index of the month. 0=january, 1=february, ...\r\n     * @param locale {String} optional locale to be used\r\n     * @param context {String} (default: \"format\") intended context.\r\n     *       Possible values: \"format\", \"stand-alone\"\r\n     * @param withFallback {Boolean?} if true, the previous parameter's other value is tried\r\n     * in order to find a localized name for the month\r\n     * @return {String} localized month name\r\n     */\r\n    getMonthName(length, month, locale, context, withFallback) {\r\n      var context = context ? context : \"format\";\r\n\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(length, [\"abbreviated\", \"narrow\", \"wide\"]);\r\n        qx.core.Assert.assertInArray(context, [\"format\", \"stand-alone\"]);\r\n      }\r\n\r\n      var key = \"cldr_month_\" + context + \"_\" + length + \"_\" + (month + 1);\r\n      return withFallback\r\n        ? this.__localizeWithFallback(\r\n            context,\r\n            context === \"format\" ? \"stand-alone\" : \"format\",\r\n            key,\r\n            locale\r\n          )\r\n        : this.__mgr.localize(key, [], locale);\r\n    },\r\n\r\n    /**\r\n     * Return localized date format string to be used with {@link qx.util.format.DateFormat}.\r\n     *\r\n     * @param size {String} format of the date format.\r\n     *      Possible values: \"short\", \"medium\", \"long\", \"full\"\r\n     * @param locale {String?} optional locale to be used\r\n     * @return {String} localized date format string\r\n     */\r\n    getDateFormat(size, locale) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(size, [\"short\", \"medium\", \"long\", \"full\"]);\r\n      }\r\n\r\n      var key = \"cldr_date_format_\" + size;\r\n      return this.__mgr.localize(key, [], locale);\r\n    },\r\n\r\n    /**\r\n     * Try to localize a date/time format string. For format string possibilities see\r\n     * <a href=\"http://cldr.unicode.org/translation/date-time\">Date/Time Symbol reference</a>\r\n     * at CLDR - Unicode Common Locale Data Repository.\r\n     *\r\n     * If no localization is available take the fallback format string.\r\n     *\r\n     * @param canonical {String} format string containing only field information, and in a canonical order.\r\n     *       Examples are \"yyyyMMMM\" for year + full month, or \"MMMd\" for abbreviated month + day.\r\n     * @param fallback {String} fallback format string if no localized version is found\r\n     * @param locale {String} optional locale to be used\r\n     * @return {String} best matching format string\r\n     */\r\n    getDateTimeFormat(canonical, fallback, locale) {\r\n      var key = \"cldr_date_time_format_\" + canonical;\r\n      var localizedFormat = this.__mgr.localize(key, [], locale);\r\n\r\n      if (localizedFormat == key) {\r\n        localizedFormat = fallback;\r\n      }\r\n\r\n      return localizedFormat;\r\n    },\r\n\r\n    /**\r\n     * Return localized time format string to be used with {@link qx.util.format.DateFormat}.\r\n     *\r\n     * @param size {String} format of the time pattern.\r\n     *      Possible values: \"short\", \"medium\", \"long\", \"full\"\r\n     * @param locale {String} optional locale to be used\r\n     * @return {String} localized time format string\r\n     */\r\n    getTimeFormat(size, locale) {\r\n      if (qx.core.Environment.get(\"qx.debug\")) {\r\n        qx.core.Assert.assertInArray(size, [\"short\", \"medium\", \"long\", \"full\"]);\r\n      }\r\n\r\n      var key = \"cldr_time_format_\" + size;\r\n      var localizedFormat = this.__mgr.localize(key, [], locale);\r\n\r\n      if (localizedFormat != key) {\r\n        return localizedFormat;\r\n      }\r\n\r\n      switch (size) {\r\n        case \"short\":\r\n        case \"medium\":\r\n          return qx.locale.Date.getDateTimeFormat(\"HHmm\", \"HH:mm\");\r\n\r\n        case \"long\":\r\n          return qx.locale.Date.getDateTimeFormat(\"HHmmss\", \"HH:mm:ss\");\r\n\r\n        case \"full\":\r\n          return qx.locale.Date.getDateTimeFormat(\"HHmmsszz\", \"HH:mm:ss zz\");\r\n\r\n        default:\r\n          throw new Error(\"This case should never happen.\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Return the day the week starts with\r\n     *\r\n     * Reference: Common Locale Data Repository (cldr) supplementalData.xml\r\n     *\r\n     * @param locale {String} optional locale to be used\r\n     * @return {Integer} index of the first day of the week. 0=sunday, 1=monday, ...\r\n     */\r\n    getWeekStart(locale) {\r\n      var weekStart = {\r\n        // default is monday\r\n        MV: 5, // friday\r\n        AE: 6, // saturday\r\n        AF: 6,\r\n        BH: 6,\r\n        DJ: 6,\r\n        DZ: 6,\r\n        EG: 6,\r\n        ER: 6,\r\n        ET: 6,\r\n        IQ: 6,\r\n        IR: 6,\r\n        JO: 6,\r\n        KE: 6,\r\n        KW: 6,\r\n        LB: 6,\r\n        LY: 6,\r\n        MA: 6,\r\n        OM: 6,\r\n        QA: 6,\r\n        SA: 6,\r\n        SD: 6,\r\n        SO: 6,\r\n        TN: 6,\r\n        YE: 6,\r\n        AS: 0, // sunday\r\n        AU: 0,\r\n        AZ: 0,\r\n        BW: 0,\r\n        CA: 0,\r\n        CN: 0,\r\n        FO: 0,\r\n        GE: 0,\r\n        GL: 0,\r\n        GU: 0,\r\n        HK: 0,\r\n        IE: 0,\r\n        IL: 0,\r\n        IS: 0,\r\n        JM: 0,\r\n        JP: 0,\r\n        KG: 0,\r\n        KR: 0,\r\n        LA: 0,\r\n        MH: 0,\r\n        MN: 0,\r\n        MO: 0,\r\n        MP: 0,\r\n        MT: 0,\r\n        NZ: 0,\r\n        PH: 0,\r\n        PK: 0,\r\n        SG: 0,\r\n        TH: 0,\r\n        TT: 0,\r\n        TW: 0,\r\n        UM: 0,\r\n        US: 0,\r\n        UZ: 0,\r\n        VI: 0,\r\n        ZA: 0,\r\n        ZW: 0,\r\n        MW: 0,\r\n        NG: 0,\r\n        TJ: 0\r\n      };\r\n\r\n      var territory = qx.locale.Date._getTerritory(locale);\r\n\r\n      // default is monday\r\n      return weekStart[territory] != null ? weekStart[territory] : 1;\r\n    },\r\n\r\n    /**\r\n     * Return the day the weekend starts with\r\n     *\r\n     * Reference: Common Locale Data Repository (cldr) supplementalData.xml\r\n     *\r\n     * @param locale {String} optional locale to be used\r\n     * @return {Integer} index of the first day of the weekend. 0=sunday, 1=monday, ...\r\n     */\r\n    getWeekendStart(locale) {\r\n      var weekendStart = {\r\n        // default is saturday\r\n        EG: 5, // friday\r\n        IL: 5,\r\n        SY: 5,\r\n        IN: 0, // sunday\r\n        AE: 4, // thursday\r\n        BH: 4,\r\n        DZ: 4,\r\n        IQ: 4,\r\n        JO: 4,\r\n        KW: 4,\r\n        LB: 4,\r\n        LY: 4,\r\n        MA: 4,\r\n        OM: 4,\r\n        QA: 4,\r\n        SA: 4,\r\n        SD: 4,\r\n        TN: 4,\r\n        YE: 4\r\n      };\r\n\r\n      var territory = qx.locale.Date._getTerritory(locale);\r\n\r\n      // default is saturday\r\n      return weekendStart[territory] != null ? weekendStart[territory] : 6;\r\n    },\r\n\r\n    /**\r\n     * Return the day the weekend ends with\r\n     *\r\n     * Reference: Common Locale Data Repository (cldr) supplementalData.xml\r\n     *\r\n     * @param locale {String} optional locale to be used\r\n     * @return {Integer} index of the last day of the weekend. 0=sunday, 1=monday, ...\r\n     */\r\n    getWeekendEnd(locale) {\r\n      var weekendEnd = {\r\n        // default is sunday\r\n        AE: 5, // friday\r\n        BH: 5,\r\n        DZ: 5,\r\n        IQ: 5,\r\n        JO: 5,\r\n        KW: 5,\r\n        LB: 5,\r\n        LY: 5,\r\n        MA: 5,\r\n        OM: 5,\r\n        QA: 5,\r\n        SA: 5,\r\n        SD: 5,\r\n        TN: 5,\r\n        YE: 5,\r\n        AF: 5,\r\n        IR: 5,\r\n        EG: 6, // saturday\r\n        IL: 6,\r\n        SY: 6\r\n      };\r\n\r\n      var territory = qx.locale.Date._getTerritory(locale);\r\n\r\n      // default is sunday\r\n      return weekendEnd[territory] != null ? weekendEnd[territory] : 0;\r\n    },\r\n\r\n    /**\r\n     * Returns whether a certain day of week belongs to the week end.\r\n     *\r\n     * @param day {Integer} index of the day. 0=sunday, 1=monday, ...\r\n     * @param locale {String} optional locale to be used\r\n     * @return {Boolean} whether the given day is a weekend day\r\n     */\r\n    isWeekend(day, locale) {\r\n      var weekendStart = qx.locale.Date.getWeekendStart(locale);\r\n      var weekendEnd = qx.locale.Date.getWeekendEnd(locale);\r\n\r\n      if (weekendEnd > weekendStart) {\r\n        return day >= weekendStart && day <= weekendEnd;\r\n      } else {\r\n        return day >= weekendStart || day <= weekendEnd;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Extract the territory part from a locale\r\n     *\r\n     * @param locale {String} the locale\r\n     * @return {String} territory\r\n     */\r\n    _getTerritory(locale) {\r\n      if (locale) {\r\n        var territory = locale.split(\"_\")[1] || locale;\r\n      } else {\r\n        territory = this.__mgr.getTerritory() || this.__mgr.getLanguage();\r\n      }\r\n\r\n      return territory.toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Provide localization (CLDR) data with fallback between \"format\" and \"stand-alone\" contexts.\r\n     * It is used in {@link #getDayName} and {@link #getMonthName} methods.\r\n     *\r\n     * @param context {String} intended context.\r\n     *       Possible values: \"format\", \"stand-alone\".\r\n     * @param fallbackContext {String} the context used in case no localization is found for the key.\r\n     * @param key {String} message id (may contain format strings)\r\n     * @param locale {String} the locale\r\n     * @return {String} localized name for the key\r\n     *\r\n     */\r\n    __localizeWithFallback(context, fallbackContext, key, locale) {\r\n      var localizedString = this.__mgr.localize(key, [], locale);\r\n      if (localizedString == key) {\r\n        var newKey = key.replace(\r\n          \"_\" + context + \"_\",\r\n          \"_\" + fallbackContext + \"_\"\r\n        );\r\n\r\n        return this.__mgr.localize(newKey, [], locale);\r\n      } else {\r\n        return localizedString;\r\n      }\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}