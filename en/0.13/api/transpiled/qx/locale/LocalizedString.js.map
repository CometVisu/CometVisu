{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "type",
    "BaseString",
    "construct",
    "translation",
    "messageId",
    "args",
    "localized",
    "__messageId",
    "__localized",
    "__args",
    "members",
    "translate",
    "locale",
    "Manager",
    "getInstance",
    "localize",
    "getMessageId",
    "LocalizedString"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/locale/LocalizedString.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class contains the translation of a message and all information\n * to translate it again into a different language.\n */\nqx.Class.define(\"qx.locale.LocalizedString\", {\n  extend: qx.type.BaseString,\n\n  /**\n   * @param translation {String} The translated message\n   * @param messageId {String} The messageId to translate\n   * @param args {Array} list of arguments passed used as values for format strings\n   * @param localized {Boolean} True if the string uses localize instead of translate\n   */\n  construct(translation, messageId, args, localized) {\n    super(translation);\n\n    this.__messageId = messageId;\n    this.__localized = !!localized;\n    this.__args = args;\n  },\n\n  members: {\n    __localized: null,\n    __messageId: null,\n    __args: null,\n\n    /**\n     * Get a translation of the string using the current locale.\n     *\n     * @return {qx.locale.LocalizedString|String} This string translated using the current\n     *    locale.\n     */\n    translate() {\n      if (this.__localized) {\n        return qx.locale.Manager.getInstance().localize(\n          this.__messageId,\n          this.__args\n        );\n      }\n\n      return qx.locale.Manager.getInstance().translate(\n        this.__messageId,\n        this.__args\n      );\n    },\n\n    /**\n     * Returns the messageId.\n     *\n     * @return {String} The messageId of this localized String\n     */\n    getMessageId() {\n      return this.__messageId;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EAA6C;IAC3CC,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,UAD2B;;IAG3C;AACF;AACA;AACA;AACA;AACA;IACEC,SAT2C,qBASjCC,WATiC,EASpBC,SAToB,EASTC,IATS,EASHC,SATG,EASQ;MACjD,0CAAMH,WAAN;MAEA,KAAKI,SAAL,GAAmBH,SAAnB;MACA,KAAKI,SAAL,GAAmB,CAAC,CAACF,SAArB;MACA,KAAKG,SAAL,GAAcJ,IAAd;IACD,CAf0C;IAiB3CK,OAAO,EAAE;MACPF,SAAW,EAAE,IADN;MAEPD,SAAW,EAAE,IAFN;MAGPE,SAAM,EAAE,IAHD;;MAKP;AACJ;AACA;AACA;AACA;AACA;MACIE,SAXO,uBAWK;QACV,IAAI,KAAKH,SAAT,EAAsB;UACpB,OAAOf,EAAE,CAACmB,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,QAAhC,CACL,KAAKR,SADA,EAEL,KAAKE,SAFA,CAAP;QAID;;QAED,OAAOhB,EAAE,CAACmB,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCH,SAAhC,CACL,KAAKJ,SADA,EAEL,KAAKE,SAFA,CAAP;MAID,CAvBM;;MAyBP;AACJ;AACA;AACA;AACA;MACIO,YA9BO,0BA8BQ;QACb,OAAO,KAAKT,SAAZ;MACD;IAhCM;EAjBkC,CAA7C;EAtBAd,EAAE,CAACmB,MAAH,CAAUK,eAAV,CAA0BrB,aAA1B,GAA0CA,aAA1C"
}