{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "tr",
    "messageId",
    "varargs",
    "nlsManager",
    "locale",
    "Manager",
    "apply",
    "arguments",
    "Error",
    "trn",
    "singularMessageId",
    "pluralMessageId",
    "count",
    "trc",
    "hint",
    "trnc",
    "marktr",
    "MTranslation"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/locale/MTranslation.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This mixin contains the methods needed to use the translation features\n * of qooxdoo.\n *\n * @ignore(qx.locale.Manager)\n */\nqx.Mixin.define(\"qx.locale.MTranslation\", {\n  members: {\n    /**\n     * Translate a message\n     * Mark the message for translation.\n     *\n     * @param messageId {String} message id (may contain format strings)\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String|LocalizedString} The translated message or localized string\n     */\n    tr(messageId, varargs) {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.tr.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\n        \"To enable localization please include qx.locale.Manager into your build!\"\n      );\n    },\n\n    /**\n     * Translate a plural message\n     * Mark the messages for translation.\n     *\n     * Depending on the third argument the plural or the singular form is chosen.\n     *\n     * @param singularMessageId {String} message id of the singular form (may contain format strings)\n     * @param pluralMessageId {String} message id of the plural form (may contain format strings)\n     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String|LocalizedString} The translated message or localized string\n     */\n    trn(singularMessageId, pluralMessageId, count, varargs) {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trn.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\n        \"To enable localization please include qx.locale.Manager into your build!\"\n      );\n    },\n\n    /**\n     * Translate a message with translation hint\n     * Mark the messages for translation.\n     *\n     * @param hint {String} hint for the translator of the message. Will be included in the .po file.\n     * @param messageId {String} message id (may contain format strings)\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String|LocalizedString} The translated message or localized string\n     */\n    trc(hint, messageId, varargs) {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trc.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\n        \"To enable localization please include qx.locale.Manager into your build!\"\n      );\n    },\n\n    /**\n     * Translate a plural message with translation hint\n     * Mark the messages for translation.\n     *\n     * Depending on the third argument the plural or the singular form is chosen.\n     *\n     * @param hint {String} hint for the translator of the message. Will be included in the .po file.\n     * @param singularMessageId {String} message id of the singular form (may contain format strings)\n     * @param pluralMessageId {String} message id of the plural form (may contain format strings)\n     * @param count {Integer} if greater than 1 the plural form otherwise the singular form is returned.\n     * @param varargs {Object?} variable number of arguments applied to the format string\n     * @return {String|LocalizedString} The translated message or localized string\n     */\n    trnc(hint, singularMessageId, pluralMessageId, count, varargs) {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.trnc.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\n        \"To enable localization please include qx.locale.Manager into your build!\"\n      );\n    },\n\n    /**\n     * Mark the message for translation but return the original message.\n     *\n     * @param messageId {String} the message ID\n     * @return {String} messageId\n     */\n    marktr(messageId) {\n      var nlsManager = qx.locale.Manager;\n      if (nlsManager) {\n        return nlsManager.marktr.apply(nlsManager, arguments);\n      }\n\n      throw new Error(\n        \"To enable localization please include qx.locale.Manager into your build!\"\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,wBAAwB,EAAE;IACxCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,EAAE,cAACC,SAAS,EAAEC,OAAO,EAAE;QACrB,IAAIC,UAAU,GAAGV,EAAE,CAACW,MAAM,CAACC,OAAO;QAClC,IAAIF,UAAU,EAAE;UACd,OAAOA,UAAU,CAACH,EAAE,CAACM,KAAK,CAACH,UAAU,EAAEI,SAAS,CAAC;QACnD;QAEA,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,eAACC,iBAAiB,EAAEC,eAAe,EAAEC,KAAK,EAAEV,OAAO,EAAE;QACtD,IAAIC,UAAU,GAAGV,EAAE,CAACW,MAAM,CAACC,OAAO;QAClC,IAAIF,UAAU,EAAE;UACd,OAAOA,UAAU,CAACM,GAAG,CAACH,KAAK,CAACH,UAAU,EAAEI,SAAS,CAAC;QACpD;QAEA,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIK,GAAG,eAACC,IAAI,EAAEb,SAAS,EAAEC,OAAO,EAAE;QAC5B,IAAIC,UAAU,GAAGV,EAAE,CAACW,MAAM,CAACC,OAAO;QAClC,IAAIF,UAAU,EAAE;UACd,OAAOA,UAAU,CAACU,GAAG,CAACP,KAAK,CAACH,UAAU,EAAEI,SAAS,CAAC;QACpD;QAEA,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIO,IAAI,gBAACD,IAAI,EAAEJ,iBAAiB,EAAEC,eAAe,EAAEC,KAAK,EAAEV,OAAO,EAAE;QAC7D,IAAIC,UAAU,GAAGV,EAAE,CAACW,MAAM,CAACC,OAAO;QAClC,IAAIF,UAAU,EAAE;UACd,OAAOA,UAAU,CAACY,IAAI,CAACT,KAAK,CAACH,UAAU,EAAEI,SAAS,CAAC;QACrD;QAEA,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIQ,MAAM,kBAACf,SAAS,EAAE;QAChB,IAAIE,UAAU,GAAGV,EAAE,CAACW,MAAM,CAACC,OAAO;QAClC,IAAIF,UAAU,EAAE;UACd,OAAOA,UAAU,CAACa,MAAM,CAACV,KAAK,CAACH,UAAU,EAAEI,SAAS,CAAC;QACvD;QAEA,MAAM,IAAIC,KAAK,CACb,0EAA0E,CAC3E;MACH;IACF;EACF,CAAC,CAAC;EAnIFf,EAAE,CAACW,MAAM,CAACa,YAAY,CAACrB,aAAa,GAAGA,aAAa;AAAC"
}