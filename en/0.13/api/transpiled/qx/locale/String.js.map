{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "getQuotationStart",
    "locale",
    "Manager",
    "getInstance",
    "localize",
    "getQuotationEnd",
    "getAlternateQuotationStart",
    "getAlternateQuotationEnd",
    "String"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/locale/String.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Provides information about locale-dependent string formatting (like quotation\n * signs).\n *\n * @cldr()\n */\n\nqx.Class.define(\"qx.locale.String\", {\n  statics: {\n    /**\n     * Get quotation start sign\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} quotation start sign\n     */\n    getQuotationStart(locale) {\n      return qx.locale.Manager.getInstance().localize(\n        \"cldr_quotationStart\",\n        [],\n        locale\n      );\n    },\n\n    /**\n     * Get quotation end sign\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} quotation end sign\n     */\n    getQuotationEnd(locale) {\n      return qx.locale.Manager.getInstance().localize(\n        \"cldr_quotationEnd\",\n        [],\n        locale\n      );\n    },\n\n    /**\n     * Get quotation alternative start sign\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} alternative quotation start sign\n     */\n    getAlternateQuotationStart(locale) {\n      return qx.locale.Manager.getInstance().localize(\n        \"cldr_alternateQuotationStart\",\n        [],\n        locale\n      );\n    },\n\n    /**\n     * Get quotation alternative end sign\n     *\n     * @param locale {String} optional locale to be used\n     * @return {String} alternative quotation end sign\n     */\n    getAlternateQuotationEnd(locale) {\n      return qx.locale.Manager.getInstance().localize(\n        \"cldr_alternateQuotationEnd\",\n        [],\n        locale\n      );\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;;EAEAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,kBAAkB,EAAE;IAClCC,OAAO,EAAE;MACP;AACJ;AACA;AACA;AACA;AACA;MACIC,iBAAiB,WAAAA,kBAACC,MAAM,EAAE;QACxB,OAAOR,EAAE,CAACQ,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAC7C,qBAAqB,EACrB,EAAE,EACFH,MAAM,CACP;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACII,eAAe,WAAAA,gBAACJ,MAAM,EAAE;QACtB,OAAOR,EAAE,CAACQ,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAC7C,mBAAmB,EACnB,EAAE,EACFH,MAAM,CACP;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIK,0BAA0B,WAAAA,2BAACL,MAAM,EAAE;QACjC,OAAOR,EAAE,CAACQ,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAC7C,8BAA8B,EAC9B,EAAE,EACFH,MAAM,CACP;MACH,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIM,wBAAwB,WAAAA,yBAACN,MAAM,EAAE;QAC/B,OAAOR,EAAE,CAACQ,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAC7C,4BAA4B,EAC5B,EAAE,EACFH,MAAM,CACP;MACH;IACF;EACF,CAAC,CAAC;EArFFR,EAAE,CAACQ,MAAM,CAACO,MAAM,CAACZ,aAAa,GAAGA,aAAa;AAAC"
}