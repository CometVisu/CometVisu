{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__OUT",
    "__ERR",
    "__useColors",
    "__colorCodes",
    "debug",
    "info",
    "warn",
    "error",
    "reset",
    "setUseColors",
    "value",
    "core",
    "Assert",
    "assertBoolean",
    "log",
    "logMessage",
    "level",
    "write",
    "process",
    "entry",
    "_i",
    "_Object$keys",
    "Object",
    "keys",
    "length",
    "prop",
    "items",
    "p",
    "item",
    "text",
    "defer",
    "stdout",
    "stderr",
    "Logger",
    "register",
    "appender",
    "NodeConsole"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/NodeConsole.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006-2011 1&1 Internet AG, Germany, http://www.1and1.org\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n     * Thomas Herchenroeder (thron7)\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * Log appender for qooxdoo applications running in Node.js. Writes log\n * messages to STDOUT/STDERR.\n *\n * @ignore(process.*)\n */\nqx.Class.define(\"qx.log.appender.NodeConsole\", {\n  statics: {\n    /**\n     * process.stdout\n     */\n    __OUT: null,\n    /**\n     * process.stderr\n     */\n    __ERR: null,\n\n    /**\n     * Whether to use color codes\n     */\n    __useColors: false,\n\n    /**\n     * Which ANSI color codes to use for which log level\n     */\n    __colorCodes: {\n      debug: \"\\u001b[38;5;3m\", // yellow\n      info: \"\\u001b[38;5;12m\", // light blue\n      warn: \"\\u001b[38;5;9m\", // light right\n      error: \"\\u001b[38;5;1m\", // red\n      reset: \"\\u001b[0m\"\n    },\n\n    /**\n     * Turn the use of colors on or off\n     * @param {Boolean} value\n     */\n    setUseColors(value) {\n      qx.core.Assert.assertBoolean(value);\n      this.__useColors = value;\n    },\n\n    /**\n     * Writes a message to the shell. Errors will be sent to STDERR, everything\n     * else goes to STDOUT\n     *\n     * @param logMessage {String} Message to be logged\n     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"\n     */\n    log(logMessage, level) {\n      if (this.__useColors && this.__colorCodes[level]) {\n        logMessage =\n          this.__colorCodes[level] + logMessage + this.__colorCodes.reset;\n      }\n      if (level === \"error\") {\n        this.__ERR.write(logMessage + \"\\n\");\n      } else {\n        this.__OUT.write(logMessage + \"\\n\");\n      }\n    },\n\n    /**\n     * Logs a debug message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    debug(logMessage) {\n      this.log(logMessage, \"debug\");\n    },\n\n    /**\n     * Logs an info message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    info(logMessage) {\n      this.log(logMessage, \"info\");\n    },\n\n    /**\n     * Logs a warning message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    warn(logMessage) {\n      this.log(logMessage, \"warn\");\n    },\n\n    /**\n     * Logs an error message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    error(logMessage) {\n      this.log(logMessage, \"error\");\n    },\n\n    /**\n     * Process a log entry object from qooxdoo's logging system.\n     *\n     * @param entry {Map} Log entry object\n     */\n    process(entry) {\n      let level = entry.level || \"info\";\n      for (let prop of Object.keys(entry)) {\n        if (prop === \"items\") {\n          let items = entry[prop];\n          for (var p = 0; p < items.length; p++) {\n            let item = items[p];\n            this[level](item.text);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * @ignore(process.*)\n   */\n  defer(statics) {\n    if (typeof process !== \"undefined\") {\n      statics.__OUT = process.stdout;\n      statics.__ERR = process.stderr;\n      qx.log.Logger.register(statics);\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}