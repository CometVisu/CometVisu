{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__OUT",
    "__ERR",
    "__useColors",
    "__colorCodes",
    "debug",
    "info",
    "warn",
    "error",
    "reset",
    "setUseColors",
    "value",
    "core",
    "Assert",
    "assertBoolean",
    "log",
    "logMessage",
    "level",
    "write",
    "process",
    "entry",
    "Object",
    "keys",
    "prop",
    "items",
    "p",
    "length",
    "item",
    "text",
    "defer",
    "stdout",
    "stderr",
    "Logger",
    "register",
    "appender",
    "NodeConsole"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/NodeConsole.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006-2011 1&1 Internet AG, Germany, http://www.1and1.org\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n     * Thomas Herchenroeder (thron7)\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * Log appender for qooxdoo applications running in Node.js. Writes log\n * messages to STDOUT/STDERR.\n *\n * @ignore(process.*)\n */\nqx.Class.define(\"qx.log.appender.NodeConsole\", {\n  statics: {\n    /**\n     * process.stdout\n     */\n    __OUT: null,\n    /**\n     * process.stderr\n     */\n    __ERR: null,\n\n    /**\n     * Whether to use color codes\n     */\n    __useColors: false,\n\n    /**\n     * Which ANSI color codes to use for which log level\n     */\n    __colorCodes: {\n      debug: \"\\u001b[38;5;3m\", // yellow\n      info: \"\\u001b[38;5;12m\", // light blue\n      warn: \"\\u001b[38;5;9m\", // light right\n      error: \"\\u001b[38;5;1m\", // red\n      reset: \"\\u001b[0m\"\n    },\n\n    /**\n     * Turn the use of colors on or off\n     * @param {Boolean} value\n     */\n    setUseColors(value) {\n      qx.core.Assert.assertBoolean(value);\n      this.__useColors = value;\n    },\n\n    /**\n     * Writes a message to the shell. Errors will be sent to STDERR, everything\n     * else goes to STDOUT\n     *\n     * @param logMessage {String} Message to be logged\n     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"\n     */\n    log(logMessage, level) {\n      if (this.__useColors && this.__colorCodes[level]) {\n        logMessage =\n          this.__colorCodes[level] + logMessage + this.__colorCodes.reset;\n      }\n      if (level === \"error\") {\n        this.__ERR.write(logMessage + \"\\n\");\n      } else {\n        this.__OUT.write(logMessage + \"\\n\");\n      }\n    },\n\n    /**\n     * Logs a debug message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    debug(logMessage) {\n      this.log(logMessage, \"debug\");\n    },\n\n    /**\n     * Logs an info message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    info(logMessage) {\n      this.log(logMessage, \"info\");\n    },\n\n    /**\n     * Logs a warning message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    warn(logMessage) {\n      this.log(logMessage, \"warn\");\n    },\n\n    /**\n     * Logs an error message\n     *\n     * @param logMessage {String} Message to be logged\n     */\n    error(logMessage) {\n      this.log(logMessage, \"error\");\n    },\n\n    /**\n     * Process a log entry object from qooxdoo's logging system.\n     *\n     * @param entry {Map} Log entry object\n     */\n    process(entry) {\n      let level = entry.level || \"info\";\n      for (let prop of Object.keys(entry)) {\n        if (prop === \"items\") {\n          let items = entry[prop];\n          for (var p = 0; p < items.length; p++) {\n            let item = items[p];\n            this[level](item.text);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * @ignore(process.*)\n   */\n  defer(statics) {\n    if (typeof process !== \"undefined\") {\n      statics.__OUT = process.stdout;\n      statics.__ERR = process.stderr;\n      qx.log.Logger.register(statics);\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}