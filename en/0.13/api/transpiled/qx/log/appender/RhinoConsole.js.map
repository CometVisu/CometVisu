{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "__OUT",
    "__ERR",
    "log",
    "logMessage",
    "level",
    "println",
    "debug",
    "info",
    "warn",
    "error",
    "process",
    "entry",
    "prop",
    "items",
    "p",
    "l",
    "length",
    "item",
    "text",
    "defer",
    "java",
    "lang",
    "appender",
    "RhinoConsole",
    "System",
    "out",
    "err"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/RhinoConsole.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n     2006-2010 1&1 Internet AG, Germany, http://www.1and1.org\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Daniel Wagner (d_wagner)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * Log appender for qooxdoo applications running in Mozilla Rhino. Writes log\r\n * messages to STDOUT/STDERR.\r\n *\r\n * @ignore(java.*)\r\n */\r\n/* global java */\r\nqx.Class.define(\"qx.log.appender.RhinoConsole\", {\r\n  statics: {\r\n    /**\r\n     * java.lang.System.out\r\n     */\r\n    __OUT: null,\r\n    /**\r\n     * java.lang.System.err\r\n     */\r\n    __ERR: null,\r\n\r\n    /**\r\n     * Writes a message to the shell. Errors will be sent to STDERR, everything\r\n     * else goes to STDOUT\r\n     *\r\n     * @param logMessage {String} Message to be logged\r\n     * @param level {String} Log level. One of \"debug\", \"info\", \"warn\", \"error\"\r\n     */\r\n    log(logMessage, level) {\r\n      if (level == \"error\") {\r\n        this.__ERR.println(logMessage);\r\n      } else {\r\n        this.__OUT.println(logMessage);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Logs a debug message\r\n     *\r\n     * @param logMessage {String} Message to be logged\r\n     */\r\n    debug(logMessage) {\r\n      this.log(logMessage, \"debug\");\r\n    },\r\n\r\n    /**\r\n     * Logs an info message\r\n     *\r\n     * @param logMessage {String} Message to be logged\r\n     */\r\n    info(logMessage) {\r\n      this.log(logMessage, \"info\");\r\n    },\r\n\r\n    /**\r\n     * Logs a warning message\r\n     *\r\n     * @param logMessage {String} Message to be logged\r\n     */\r\n    warn(logMessage) {\r\n      this.log(logMessage, \"warn\");\r\n    },\r\n\r\n    /**\r\n     * Logs an error message\r\n     *\r\n     * @param logMessage {String} Message to be logged\r\n     */\r\n    error(logMessage) {\r\n      this.log(logMessage, \"error\");\r\n    },\r\n\r\n    /**\r\n     * Process a log entry object from qooxdoo's logging system.\r\n     *\r\n     * @param entry {Map} Log entry object\r\n     */\r\n    process(entry) {\r\n      var level = entry.level || \"info\";\r\n      for (var prop in entry) {\r\n        if (prop == \"items\") {\r\n          var items = entry[prop];\r\n          for (var p = 0, l = items.length; p < l; p++) {\r\n            var item = items[p];\r\n            this[level](item.text);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  defer() {\r\n    if (typeof java !== \"undefined\" && typeof java.lang !== \"undefined\") {\r\n      qx.log.appender.RhinoConsole.__OUT = java.lang.System.out;\r\n      qx.log.appender.RhinoConsole.__ERR = java.lang.System.err;\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": ";;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,8BAA8B,EAAE;IAC9CC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,SAAK,EAAE,IAAI;MACX;AACJ;AACA;MACIC,SAAK,EAAE,IAAI;MAEX;AACJ;AACA;AACA;AACA;AACA;AACA;MACIC,GAAG,WAAAA,IAACC,UAAU,EAAEC,KAAK,EAAE;QACrB,IAAIA,KAAK,IAAI,OAAO,EAAE;UACpB,IAAI,CAACH,SAAK,CAACI,OAAO,CAACF,UAAU,CAAC;QAChC,CAAC,MAAM;UACL,IAAI,CAACH,SAAK,CAACK,OAAO,CAACF,UAAU,CAAC;QAChC;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIG,KAAK,WAAAA,MAACH,UAAU,EAAE;QAChB,IAAI,CAACD,GAAG,CAACC,UAAU,EAAE,OAAO,CAAC;MAC/B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACII,IAAI,WAAAA,KAACJ,UAAU,EAAE;QACf,IAAI,CAACD,GAAG,CAACC,UAAU,EAAE,MAAM,CAAC;MAC9B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIK,IAAI,WAAAA,KAACL,UAAU,EAAE;QACf,IAAI,CAACD,GAAG,CAACC,UAAU,EAAE,MAAM,CAAC;MAC9B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIM,KAAK,WAAAA,MAACN,UAAU,EAAE;QAChB,IAAI,CAACD,GAAG,CAACC,UAAU,EAAE,OAAO,CAAC;MAC/B,CAAC;MAED;AACJ;AACA;AACA;AACA;MACIO,OAAO,WAAAA,QAACC,KAAK,EAAE;QACb,IAAIP,KAAK,GAAGO,KAAK,CAACP,KAAK,IAAI,MAAM;QACjC,KAAK,IAAIQ,IAAI,IAAID,KAAK,EAAE;UACtB,IAAIC,IAAI,IAAI,OAAO,EAAE;YACnB,IAAIC,KAAK,GAAGF,KAAK,CAACC,IAAI,CAAC;YACvB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;cAC5C,IAAIG,IAAI,GAAGJ,KAAK,CAACC,CAAC,CAAC;cACnB,IAAI,CAACV,KAAK,CAAC,CAACa,IAAI,CAACC,IAAI,CAAC;YACxB;UACF;QACF;MACF;IACF,CAAC;IAEDC,KAAK,WAAAA,MAAA,EAAG;MACN,IAAI,OAAOC,IAAI,KAAK,WAAW,IAAI,OAAOA,IAAI,CAACC,IAAI,KAAK,WAAW,EAAE;QACnE5B,EAAE,CAACS,GAAG,CAACoB,QAAQ,CAACC,YAAY,CAACvB,SAAK,GAAGoB,IAAI,CAACC,IAAI,CAACG,MAAM,CAACC,GAAG;QACzDhC,EAAE,CAACS,GAAG,CAACoB,QAAQ,CAACC,YAAY,CAACtB,SAAK,GAAGmB,IAAI,CAACC,IAAI,CAACG,MAAM,CAACE,GAAG;MAC3D;IACF;EACF,CAAC,CAAC;EAhHFjC,EAAE,CAACS,GAAG,CAACoB,QAAQ,CAACC,YAAY,CAAC3B,aAAa,GAAGA,aAAa;AAAC"
}