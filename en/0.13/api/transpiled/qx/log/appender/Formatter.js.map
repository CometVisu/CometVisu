{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "properties",
    "formatTimeAs",
    "init",
    "check",
    "members",
    "formatOffset",
    "offset",
    "length",
    "str",
    "toString",
    "diff",
    "pad",
    "i",
    "formatEntryTime",
    "entry",
    "getFormatTimeAs",
    "log",
    "appender",
    "Formatter",
    "__DATETIME_FORMAT",
    "util",
    "format",
    "DateFormat",
    "time",
    "normalizeEntryClass",
    "result",
    "clazz",
    "object",
    "hash",
    "obj",
    "win",
    "ObjectRegistry",
    "fromHashCode",
    "constructor",
    "formatEntryObjectAndClass",
    "breakdown",
    "classname",
    "formatEntryItems",
    "output",
    "items",
    "il",
    "item",
    "msg",
    "text",
    "trace",
    "Array",
    "list",
    "j",
    "jl",
    "push",
    "type",
    "join",
    "toText",
    "toTextArray",
    "toHtml",
    "sub",
    "toHashCode",
    "escapeHTML",
    "key",
    "wrapper",
    "document",
    "createElement",
    "innerHTML",
    "className",
    "level",
    "statics",
    "__defaultFormatter",
    "getFormatter",
    "setFormatter",
    "instance",
    "value",
    "String",
    "replace",
    "__escapeHTMLReplace",
    "__P_284_2",
    "ch",
    "map"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/Formatter.js"
  ],
  "sourcesContent": [
    "qx.Class.define(\"qx.log.appender.Formatter\", {\n  extend: qx.core.Object,\n\n  properties: {\n    /** How to format time in an entry; offset since start (backwards compatible) or as actual date/time */\n    formatTimeAs: {\n      init: \"offset\",\n      check: [\"offset\", \"datetime\"]\n    }\n  },\n\n  members: {\n    /**\n     * Formats a numeric time offset to 6 characters.\n     *\n     * @param offset\n     *          {Integer} Current offset value\n     * @param length\n     *          {Integer?6} Refine the length\n     * @return {String} Padded string\n     */\n    formatOffset(offset, length) {\n      var str = offset.toString();\n      var diff = (length || 6) - str.length;\n      var pad = \"\";\n\n      for (var i = 0; i < diff; i++) {\n        pad += \"0\";\n      }\n\n      return pad + str;\n    },\n\n    /**\n     * Formats the time part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted time, as an offset or date time depending on `formatTimeAs` property\n     */\n    formatEntryTime(entry) {\n      if (this.getFormatTimeAs() == \"offset\") {\n        return this.formatOffset(entry.offset, 6);\n      }\n      if (!qx.log.appender.Formatter.__DATETIME_FORMAT) {\n        qx.log.appender.Formatter.__DATETIME_FORMAT =\n          new qx.util.format.DateFormat(\"YYYY-MM-dd HH:mm:ss\");\n      }\n      return qx.log.appender.Formatter.__DATETIME_FORMAT.format(entry.time);\n    },\n\n    /**\n     * Normalises the entry into an object with clazz, object, hash.\n     *\n     * @param entry {Map} the entry to output\n     * @return {Map} result, containing:\n     *  clazz {Class?} the class of the object\n     *  object {Object?} the object\n     *  hash {String?} the hash code\n     */\n    normalizeEntryClass(entry) {\n      var result = {\n        clazz: null,\n        object: null,\n        hash: null\n      };\n\n      if (entry.object) {\n        result.hash = entry.object;\n        if (entry.clazz) {\n          result.clazz = entry.clazz;\n        } else {\n          var obj = entry.win.qx.core.ObjectRegistry.fromHashCode(\n            entry.object,\n            true\n          );\n\n          if (obj) {\n            result.clazz = obj.constructor;\n            result.object = obj;\n          }\n        }\n      } else if (entry.clazz) {\n        result.clazz = entry.clazz;\n      }\n\n      return result;\n    },\n\n    /**\n     * Formats the object part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted object, with class and hash code if possible\n     */\n    formatEntryObjectAndClass(entry) {\n      var breakdown = this.normalizeEntryClass(entry);\n      var result = \"\";\n      if (breakdown.clazz) {\n        result += breakdown.clazz.classname;\n      }\n      if (breakdown.hash) {\n        result += \"[\" + breakdown.hash + \"]\";\n      }\n      result += \":\";\n      return result;\n    },\n\n    /**\n     * Formats the items part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted items\n     */\n    formatEntryItems(entry) {\n      var output = [];\n      var items = entry.items;\n\n      for (var i = 0, il = items.length; i < il; i++) {\n        var item = items[i];\n        var msg = item.text;\n\n        if (item.trace && item.trace.length > 0) {\n          msg += \"\\n\" + item.trace;\n        }\n\n        if (msg instanceof Array) {\n          var list = [];\n          for (var j = 0, jl = msg.length; j < jl; j++) {\n            list.push(msg[j].text);\n          }\n\n          if (item.type === \"map\") {\n            output.push(\"{\", list.join(\", \"), \"}\");\n          } else {\n            output.push(\"[\", list.join(\", \"), \"]\");\n          }\n        } else {\n          output.push(msg);\n        }\n      }\n\n      return output.join(\" \");\n    },\n\n    /**\n     * Converts a single log entry to plain text\n     *\n     * @param entry {Map} The entry to process\n     * @return {String} the formatted log entry\n     */\n    toText(entry) {\n      var output =\n        this.formatEntryTime(entry) +\n        \" \" +\n        this.formatEntryObjectAndClass(entry);\n      var str = this.formatEntryItems(entry);\n      if (str) {\n        output += \" \" + str;\n      }\n\n      return output;\n    },\n\n    /**\n     * Converts a single log entry to an array of plain text.\n     *\n     * This use of arrays is an outdated performance improvement, and as there is no\n     * specification of what is in each of the elements of the array, there is no value\n     * in preserving this.  This method is deprecated because it will be removed in 7.0\n     * and only toText will remain.  Note that toTextArray is not used anywhere in Qooxdoo.\n     *\n     * @param entry {Map} The entry to process\n     * @return {Array} Argument list ready message array.\n     * @deprecated {6.0} See toText instead\n     */\n    toTextArray(entry) {\n      var output = [];\n\n      output.push(this.formatEntryTime(entry));\n      output.push(this.formatEntryObjectAndClass(entry));\n      output.push(this.formatEntryItems(entry));\n\n      return output;\n    },\n\n    /**\n     * Converts a single log entry to HTML\n     *\n     * @signature function(entry)\n     * @param entry {Map} The entry to process\n     */\n    toHtml(entry) {\n      var output = [];\n      var item, msg, sub, list;\n\n      output.push(\n        \"<span class='offset'>\",\n        this.formatEntryTime(entry),\n        \"</span> \"\n      );\n\n      var breakdown = this.normalizeEntryClass(entry);\n      var result = \"\";\n      if (breakdown.clazz) {\n        result += breakdown.clazz.classname;\n      }\n      if (breakdown.object) {\n        output.push(\n          \"<span class='object' title='Object instance with hash code: \" +\n            breakdown.object.toHashCode() +\n            \"'>\",\n          breakdown.classname,\n          \"[\",\n          breakdown.object,\n          \"]</span>: \"\n        );\n      } else if (breakdown.hash) {\n        output.push(\n          \"<span class='object' title='Object instance with hash code: \" +\n            breakdown.hash +\n            \"'>\",\n          breakdown.classname,\n          \"[\",\n          breakdown.hash,\n          \"]</span>: \"\n        );\n      } else if (breakdown.clazz) {\n        output.push(\n          \"<span class='object'>\" + breakdown.clazz.classname,\n          \"</span>: \"\n        );\n      }\n\n      var items = entry.items;\n      for (var i = 0, il = items.length; i < il; i++) {\n        item = items[i];\n        msg = item.text;\n\n        if (msg instanceof Array) {\n          var list = [];\n\n          for (var j = 0, jl = msg.length; j < jl; j++) {\n            sub = msg[j];\n            if (typeof sub === \"string\") {\n              list.push(\n                \"<span>\" + qx.log.appender.Formatter.escapeHTML(sub) + \"</span>\"\n              );\n            } else if (sub.key) {\n              list.push(\n                \"<span class='type-key'>\" +\n                  sub.key +\n                  \"</span>:<span class='type-\" +\n                  sub.type +\n                  \"'>\" +\n                  qx.log.appender.Formatter.escapeHTML(sub.text) +\n                  \"</span>\"\n              );\n            } else {\n              list.push(\n                \"<span class='type-\" +\n                  sub.type +\n                  \"'>\" +\n                  qx.log.appender.Formatter.escapeHTML(sub.text) +\n                  \"</span>\"\n              );\n            }\n          }\n\n          output.push(\"<span class='type-\" + item.type + \"'>\");\n\n          if (item.type === \"map\") {\n            output.push(\"{\", list.join(\", \"), \"}\");\n          } else {\n            output.push(\"[\", list.join(\", \"), \"]\");\n          }\n\n          output.push(\"</span>\");\n        } else {\n          output.push(\n            \"<span class='type-\" +\n              item.type +\n              \"'>\" +\n              qx.log.appender.Formatter.escapeHTML(msg) +\n              \"</span> \"\n          );\n        }\n      }\n\n      var wrapper = document.createElement(\"DIV\");\n      wrapper.innerHTML = output.join(\"\");\n      wrapper.className = \"level-\" + entry.level;\n\n      return wrapper;\n    }\n  },\n\n  statics: {\n    /** @type {qx.util.format.DateFormat} format for datetimes */\n    __DATETIME_FORMAT: null,\n\n    /** @type {qx.log.appender.Formatter} the default instance */\n    __defaultFormatter: null,\n\n    /**\n     * Returns the default formatter\n     *\n     * @return {qx.log.appender.Formatter}\n     */\n    getFormatter() {\n      if (!qx.log.appender.Formatter.__defaultFormatter) {\n        qx.log.appender.Formatter.__defaultFormatter =\n          new qx.log.appender.Formatter();\n      }\n      return qx.log.appender.Formatter.__defaultFormatter;\n    },\n\n    /**\n     * Sets the default formatter\n     *\n     * @param instance {qx.log.appender.Formatter}\n     */\n    setFormatter(instance) {\n      qx.log.appender.Formatter.__defaultFormatter = instance;\n    },\n\n    /**\n     * Escapes the HTML in the given value\n     *\n     * @param value\n     *          {String} value to escape\n     * @return {String} escaped value\n     */\n    escapeHTML(value) {\n      return String(value).replace(\n        /[<>&\"']/g,\n        qx.log.appender.Formatter.__escapeHTMLReplace\n      );\n    },\n\n    /**\n     * Internal replacement helper for HTML escape.\n     *\n     * @param ch\n     *          {String} Single item to replace.\n     * @return {String} Replaced item\n     */\n    __escapeHTMLReplace(ch) {\n      var map = {\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        \"&\": \"&amp;\",\n        \"'\": \"&#39;\",\n        '\"': \"&quot;\"\n      };\n\n      return map[ch] || \"?\";\n    }\n  }\n});\n"
  ],
  "mappings": "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",
  "ignoreList": []
}