{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "properties",
    "formatTimeAs",
    "init",
    "check",
    "members",
    "formatOffset",
    "offset",
    "length",
    "str",
    "toString",
    "diff",
    "pad",
    "i",
    "formatEntryTime",
    "entry",
    "getFormatTimeAs",
    "log",
    "appender",
    "Formatter",
    "__DATETIME_FORMAT",
    "util",
    "format",
    "DateFormat",
    "time",
    "normalizeEntryClass",
    "result",
    "clazz",
    "object",
    "hash",
    "obj",
    "win",
    "ObjectRegistry",
    "fromHashCode",
    "constructor",
    "formatEntryObjectAndClass",
    "breakdown",
    "classname",
    "formatEntryItems",
    "output",
    "items",
    "il",
    "item",
    "msg",
    "text",
    "trace",
    "Array",
    "list",
    "j",
    "jl",
    "push",
    "type",
    "join",
    "toText",
    "toTextArray",
    "toHtml",
    "sub",
    "toHashCode",
    "escapeHTML",
    "key",
    "wrapper",
    "document",
    "createElement",
    "innerHTML",
    "className",
    "level",
    "statics",
    "__defaultFormatter",
    "getFormatter",
    "setFormatter",
    "instance",
    "value",
    "String",
    "replace",
    "__escapeHTMLReplace",
    "ch",
    "map"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/Formatter.js"
  ],
  "sourcesContent": [
    "qx.Class.define(\"qx.log.appender.Formatter\", {\n  extend: qx.core.Object,\n\n  properties: {\n    /** How to format time in an entry; offset since start (backwards compatible) or as actual date/time */\n    formatTimeAs: {\n      init: \"offset\",\n      check: [\"offset\", \"datetime\"]\n    }\n  },\n\n  members: {\n    /**\n     * Formats a numeric time offset to 6 characters.\n     *\n     * @param offset\n     *          {Integer} Current offset value\n     * @param length\n     *          {Integer?6} Refine the length\n     * @return {String} Padded string\n     */\n    formatOffset(offset, length) {\n      var str = offset.toString();\n      var diff = (length || 6) - str.length;\n      var pad = \"\";\n\n      for (var i = 0; i < diff; i++) {\n        pad += \"0\";\n      }\n\n      return pad + str;\n    },\n\n    /**\n     * Formats the time part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted time, as an offset or date time depending on `formatTimeAs` property\n     */\n    formatEntryTime(entry) {\n      if (this.getFormatTimeAs() == \"offset\") {\n        return this.formatOffset(entry.offset, 6);\n      }\n      if (!qx.log.appender.Formatter.__DATETIME_FORMAT) {\n        qx.log.appender.Formatter.__DATETIME_FORMAT =\n          new qx.util.format.DateFormat(\"YYYY-MM-dd HH:mm:ss\");\n      }\n      return qx.log.appender.Formatter.__DATETIME_FORMAT.format(entry.time);\n    },\n\n    /**\n     * Normalises the entry into an object with clazz, object, hash.\n     *\n     * @param entry {Map} the entry to output\n     * @return {Map} result, containing:\n     *  clazz {Class?} the class of the object\n     *  object {Object?} the object\n     *  hash {String?} the hash code\n     */\n    normalizeEntryClass(entry) {\n      var result = {\n        clazz: null,\n        object: null,\n        hash: null\n      };\n\n      if (entry.object) {\n        result.hash = entry.object;\n        if (entry.clazz) {\n          result.clazz = entry.clazz;\n        } else {\n          var obj = entry.win.qx.core.ObjectRegistry.fromHashCode(\n            entry.object,\n            true\n          );\n\n          if (obj) {\n            result.clazz = obj.constructor;\n            result.object = obj;\n          }\n        }\n      } else if (entry.clazz) {\n        result.clazz = entry.clazz;\n      }\n\n      return result;\n    },\n\n    /**\n     * Formats the object part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted object, with class and hash code if possible\n     */\n    formatEntryObjectAndClass(entry) {\n      var breakdown = this.normalizeEntryClass(entry);\n      var result = \"\";\n      if (breakdown.clazz) {\n        result += breakdown.clazz.classname;\n      }\n      if (breakdown.hash) {\n        result += \"[\" + breakdown.hash + \"]\";\n      }\n      result += \":\";\n      return result;\n    },\n\n    /**\n     * Formats the items part of an entry\n     *\n     * @param entry {Map} the entry to output\n     * @return {String} formatted items\n     */\n    formatEntryItems(entry) {\n      var output = [];\n      var items = entry.items;\n\n      for (var i = 0, il = items.length; i < il; i++) {\n        var item = items[i];\n        var msg = item.text;\n\n        if (item.trace && item.trace.length > 0) {\n          msg += \"\\n\" + item.trace;\n        }\n\n        if (msg instanceof Array) {\n          var list = [];\n          for (var j = 0, jl = msg.length; j < jl; j++) {\n            list.push(msg[j].text);\n          }\n\n          if (item.type === \"map\") {\n            output.push(\"{\", list.join(\", \"), \"}\");\n          } else {\n            output.push(\"[\", list.join(\", \"), \"]\");\n          }\n        } else {\n          output.push(msg);\n        }\n      }\n\n      return output.join(\" \");\n    },\n\n    /**\n     * Converts a single log entry to plain text\n     *\n     * @param entry {Map} The entry to process\n     * @return {String} the formatted log entry\n     */\n    toText(entry) {\n      var output =\n        this.formatEntryTime(entry) +\n        \" \" +\n        this.formatEntryObjectAndClass(entry);\n      var str = this.formatEntryItems(entry);\n      if (str) {\n        output += \" \" + str;\n      }\n\n      return output;\n    },\n\n    /**\n     * Converts a single log entry to an array of plain text.\n     *\n     * This use of arrays is an outdated performance improvement, and as there is no\n     * specification of what is in each of the elements of the array, there is no value\n     * in preserving this.  This method is deprecated because it will be removed in 7.0\n     * and only toText will remain.  Note that toTextArray is not used anywhere in Qooxdoo.\n     *\n     * @param entry {Map} The entry to process\n     * @return {Array} Argument list ready message array.\n     * @deprecated {6.0} See toText instead\n     */\n    toTextArray(entry) {\n      var output = [];\n\n      output.push(this.formatEntryTime(entry));\n      output.push(this.formatEntryObjectAndClass(entry));\n      output.push(this.formatEntryItems(entry));\n\n      return output;\n    },\n\n    /**\n     * Converts a single log entry to HTML\n     *\n     * @signature function(entry)\n     * @param entry {Map} The entry to process\n     */\n    toHtml(entry) {\n      var output = [];\n      var item, msg, sub, list;\n\n      output.push(\n        \"<span class='offset'>\",\n        this.formatEntryTime(entry),\n        \"</span> \"\n      );\n\n      var breakdown = this.normalizeEntryClass(entry);\n      var result = \"\";\n      if (breakdown.clazz) {\n        result += breakdown.clazz.classname;\n      }\n      if (breakdown.object) {\n        output.push(\n          \"<span class='object' title='Object instance with hash code: \" +\n            breakdown.object.toHashCode() +\n            \"'>\",\n          breakdown.classname,\n          \"[\",\n          breakdown.object,\n          \"]</span>: \"\n        );\n      } else if (breakdown.hash) {\n        output.push(\n          \"<span class='object' title='Object instance with hash code: \" +\n            breakdown.hash +\n            \"'>\",\n          breakdown.classname,\n          \"[\",\n          breakdown.hash,\n          \"]</span>: \"\n        );\n      } else if (breakdown.clazz) {\n        output.push(\n          \"<span class='object'>\" + breakdown.clazz.classname,\n          \"</span>: \"\n        );\n      }\n\n      var items = entry.items;\n      for (var i = 0, il = items.length; i < il; i++) {\n        item = items[i];\n        msg = item.text;\n\n        if (msg instanceof Array) {\n          var list = [];\n\n          for (var j = 0, jl = msg.length; j < jl; j++) {\n            sub = msg[j];\n            if (typeof sub === \"string\") {\n              list.push(\n                \"<span>\" + qx.log.appender.Formatter.escapeHTML(sub) + \"</span>\"\n              );\n            } else if (sub.key) {\n              list.push(\n                \"<span class='type-key'>\" +\n                  sub.key +\n                  \"</span>:<span class='type-\" +\n                  sub.type +\n                  \"'>\" +\n                  qx.log.appender.Formatter.escapeHTML(sub.text) +\n                  \"</span>\"\n              );\n            } else {\n              list.push(\n                \"<span class='type-\" +\n                  sub.type +\n                  \"'>\" +\n                  qx.log.appender.Formatter.escapeHTML(sub.text) +\n                  \"</span>\"\n              );\n            }\n          }\n\n          output.push(\"<span class='type-\" + item.type + \"'>\");\n\n          if (item.type === \"map\") {\n            output.push(\"{\", list.join(\", \"), \"}\");\n          } else {\n            output.push(\"[\", list.join(\", \"), \"]\");\n          }\n\n          output.push(\"</span>\");\n        } else {\n          output.push(\n            \"<span class='type-\" +\n              item.type +\n              \"'>\" +\n              qx.log.appender.Formatter.escapeHTML(msg) +\n              \"</span> \"\n          );\n        }\n      }\n\n      var wrapper = document.createElement(\"DIV\");\n      wrapper.innerHTML = output.join(\"\");\n      wrapper.className = \"level-\" + entry.level;\n\n      return wrapper;\n    }\n  },\n\n  statics: {\n    /** @type {qx.util.format.DateFormat} format for datetimes */\n    __DATETIME_FORMAT: null,\n\n    /** @type {qx.log.appender.Formatter} the default instance */\n    __defaultFormatter: null,\n\n    /**\n     * Returns the default formatter\n     *\n     * @return {qx.log.appender.Formatter}\n     */\n    getFormatter() {\n      if (!qx.log.appender.Formatter.__defaultFormatter) {\n        qx.log.appender.Formatter.__defaultFormatter =\n          new qx.log.appender.Formatter();\n      }\n      return qx.log.appender.Formatter.__defaultFormatter;\n    },\n\n    /**\n     * Sets the default formatter\n     *\n     * @param instance {qx.log.appender.Formatter}\n     */\n    setFormatter(instance) {\n      qx.log.appender.Formatter.__defaultFormatter = instance;\n    },\n\n    /**\n     * Escapes the HTML in the given value\n     *\n     * @param value\n     *          {String} value to escape\n     * @return {String} escaped value\n     */\n    escapeHTML(value) {\n      return String(value).replace(\n        /[<>&\"']/g,\n        qx.log.appender.Formatter.__escapeHTMLReplace\n      );\n    },\n\n    /**\n     * Internal replacement helper for HTML escape.\n     *\n     * @param ch\n     *          {String} Single item to replace.\n     * @return {String} Replaced item\n     */\n    __escapeHTMLReplace(ch) {\n      var map = {\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        \"&\": \"&amp;\",\n        \"'\": \"&#39;\",\n        '\"': \"&quot;\"\n      };\n\n      return map[ch] || \"?\";\n    }\n  }\n});\n"
  ],
  "mappings": "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"
}