{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "element",
    "constructor",
    "call",
    "style",
    "bom",
    "Stylesheet",
    "createElement",
    "join",
    "log",
    "Logger",
    "register",
    "members",
    "__element",
    "setElement",
    "clear",
    "add",
    "elem",
    "innerHTML",
    "process",
    "entry",
    "formatter",
    "appender",
    "Formatter",
    "getFormatter",
    "appendChild",
    "toHtml",
    "scrollTop",
    "scrollHeight",
    "Element"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/log/appender/Element.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This appender is used to log to an existing DOM element\n */\nqx.Class.define(\"qx.log.appender.Element\", {\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param element {Element} DOM element to use for log output.\n   */\n  construct(element) {\n    super();\n\n    var style = [\n      \".qxappender .level-debug{background:white}\",\n      \".qxappender .level-info{background:#DEEDFA}\",\n      \".qxappender .level-warn{background:#FFF7D5}\",\n      \".qxappender .level-error{background:#FFE2D5}\",\n      \".qxappender .level-user{background:#E3EFE9}\",\n      \".qxappender .type-string{color:black;font-weight:normal;}\",\n      \".qxappender .type-number{color:#155791;font-weight:normal;}\",\n      \".qxappender .type-boolean{color:#15BC91;font-weight:normal;}\",\n      \".qxappender .type-array{color:#CC3E8A;font-weight:bold;}\",\n      \".qxappender .type-map{color:#CC3E8A;font-weight:bold;}\",\n      \".qxappender .type-key{color:#565656;font-style:italic}\",\n      \".qxappender .type-class{color:#5F3E8A;font-weight:bold}\",\n      \".qxappender .type-instance{color:#565656;font-weight:bold}\",\n      \".qxappender .type-stringify{color:#565656;font-weight:bold}\"\n    ];\n\n    // Include stylesheet\n    qx.bom.Stylesheet.createElement(style.join(\"\"));\n\n    // Finally register to log engine\n    qx.log.Logger.register(this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __element: null,\n\n    /**\n     * Configures the DOM element to use.\n     *\n     * @param element {Element} DOM element to log to\n     */\n    setElement(element) {\n      // Clear old element\n      this.clear();\n\n      // Add classname\n      if (element) {\n        qx.bom.element.Class.add(element, \"qxappender\");\n      }\n\n      // Link to element\n      this.__element = element;\n    },\n\n    /**\n     * Clears the current output.\n     *\n     */\n    clear() {\n      var elem = this.__element;\n\n      // Remove all messages\n      if (elem) {\n        elem.innerHTML = \"\";\n      }\n    },\n\n    /**\n     * Processes a single log entry\n     *\n     * @signature function(entry)\n     * @param entry {Map} The entry to process\n     */\n    process(entry) {\n      var elem = this.__element;\n\n      if (!elem) {\n        return;\n      }\n\n      // Append new content\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      elem.appendChild(formatter.toHtml(entry));\n\n      // Scroll down\n      elem.scrollTop = elem.scrollHeight;\n    }\n  }\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;EAAAA,EAAE,CAACC,SAAS,CAACC,oBAAoB,CAACC,aAAa,CAAC;EAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;EACAH,EAAE,CAACI,KAAK,CAACC,MAAM,CAAC,yBAAyB,EAAE;IACzCC,MAAM,EAAEN,EAAE,CAACO,IAAI,CAACC,MAAM;IAEtB;AACF;AACA;AACA;AACA;IAEE;AACF;AACA;IACEC,SAAS,WAAAA,UAACC,OAAO,EAAE;MACjBV,EAAA,CAAAO,IAAA,CAAAC,MAAA,CAAAG,WAAA,CAAAC,IAAA;MAEA,IAAIC,KAAK,GAAG,CACV,4CAA4C,EAC5C,6CAA6C,EAC7C,6CAA6C,EAC7C,8CAA8C,EAC9C,6CAA6C,EAC7C,2DAA2D,EAC3D,6DAA6D,EAC7D,8DAA8D,EAC9D,0DAA0D,EAC1D,wDAAwD,EACxD,wDAAwD,EACxD,yDAAyD,EACzD,4DAA4D,EAC5D,6DAA6D,CAC9D;;MAED;MACAb,EAAE,CAACc,GAAG,CAACC,UAAU,CAACC,aAAa,CAACH,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;;MAE/C;MACAjB,EAAE,CAACkB,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED;AACF;AACA;AACA;AACA;;IAEEC,OAAO,EAAE;MACPC,SAAS,EAAE,IAAI;MAEf;AACJ;AACA;AACA;AACA;MACIC,UAAU,WAAAA,WAACb,OAAO,EAAE;QAClB;QACA,IAAI,CAACc,KAAK,EAAE;;QAEZ;QACA,IAAId,OAAO,EAAE;UACXV,EAAE,CAACc,GAAG,CAACJ,OAAO,CAACN,KAAK,CAACqB,GAAG,CAACf,OAAO,EAAE,YAAY,CAAC;QACjD;;QAEA;QACA,IAAI,CAACY,SAAS,GAAGZ,OAAO;MAC1B,CAAC;MAED;AACJ;AACA;AACA;MACIc,KAAK,WAAAA,MAAA,EAAG;QACN,IAAIE,IAAI,GAAG,IAAI,CAACJ,SAAS;;QAEzB;QACA,IAAII,IAAI,EAAE;UACRA,IAAI,CAACC,SAAS,GAAG,EAAE;QACrB;MACF,CAAC;MAED;AACJ;AACA;AACA;AACA;AACA;MACIC,OAAO,WAAAA,QAACC,KAAK,EAAE;QACb,IAAIH,IAAI,GAAG,IAAI,CAACJ,SAAS;QAEzB,IAAI,CAACI,IAAI,EAAE;UACT;QACF;;QAEA;QACA,IAAII,SAAS,GAAG9B,EAAE,CAACkB,GAAG,CAACa,QAAQ,CAACC,SAAS,CAACC,YAAY,EAAE;QACxDP,IAAI,CAACQ,WAAW,CAACJ,SAAS,CAACK,MAAM,CAACN,KAAK,CAAC,CAAC;;QAEzC;QACAH,IAAI,CAACU,SAAS,GAAGV,IAAI,CAACW,YAAY;MACpC;IACF;EACF,CAAC,CAAC;EAzHFrC,EAAE,CAACkB,GAAG,CAACa,QAAQ,CAACO,OAAO,CAACnC,aAAa,GAAGA,aAAa;AAAC"
}