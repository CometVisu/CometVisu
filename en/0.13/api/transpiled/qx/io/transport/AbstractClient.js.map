{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "registerTransport",
    "uriRegExp",
    "transportClass",
    "constructor",
    "__transports",
    "lang",
    "Type",
    "isRegExp",
    "Error",
    "Interface",
    "classImplements",
    "io",
    "transport",
    "ITransport",
    "push",
    "properties",
    "check",
    "members",
    "selectTransport",
    "transportOrUri",
    "uri",
    "isString",
    "_iterator",
    "_createForOfIteratorHelper",
    "reverse",
    "_step",
    "s",
    "n",
    "done",
    "registeredTransport",
    "value",
    "match",
    "err",
    "e",
    "f",
    "exception",
    "Transport",
    "concat",
    "INVALID_URI",
    "setTransport",
    "AbstractClient"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/transport/AbstractClient.js"
  ],
  "sourcesContent": [
    "/* ************************************************************************\r\n\r\n   qooxdoo - the new era of web development\r\n\r\n   http://qooxdoo.org\r\n\r\n   Copyright:\r\n      2020 Christian Boulanger\r\n\r\n   License:\r\n     MIT: https://opensource.org/licenses/MIT\r\n     See the LICENSE file in the project's top-level directory for details.\r\n\r\n   Authors:\r\n     * Christian Boulanger (cboulanger)\r\n\r\n************************************************************************ */\r\n\r\n/**\r\n * This class provides a the base class for all clients that use the\r\n * transport implementations in this namespace. Since the static method\r\n * `registerTransport` cannot be inherited by subclasses, they mus proxy it\r\n * by adding `registerTransport : qx.io.transport.AbstractClient.registerTransport`\r\n * to their `statics` section.\r\n *\r\n */\r\nqx.Class.define(\"qx.io.transport.AbstractClient\", {\r\n  extend: qx.core.Object,\r\n  type: \"abstract\",\r\n\r\n  statics: {\r\n    /**\r\n     * Register a transport class for use with uris that match the given\r\n     * regular expression. The client will use the transport which first\r\n     * matches, starting with the last added transport\r\n     * @param {RegExp} uriRegExp\r\n     *    A regular expression which the URI must match\r\n     * @param {qx.io.transport.ITransport}  transportClass\r\n     *    The qooxdoo class implementing the transport\r\n     */\r\n    registerTransport(uriRegExp, transportClass) {\r\n      if (!this.constructor.__transports) {\r\n        this.constructor.__transports = [];\r\n      }\r\n      if (!qx.lang.Type.isRegExp(uriRegExp)) {\r\n        throw new Error(\"First argument must be a regular expression!\");\r\n      }\r\n      if (\r\n        !qx.Interface.classImplements(\r\n          transportClass,\r\n          qx.io.transport.ITransport\r\n        )\r\n      ) {\r\n        throw new Error(\r\n          \"Transport class must implement qx.io.transport.ITransport\"\r\n        );\r\n      }\r\n      this.constructor.__transports.push({\r\n        uriRegExp,\r\n        transport: transportClass\r\n      });\r\n    }\r\n  },\r\n\r\n  properties: {\r\n    /**\r\n     * The transport object\r\n     */\r\n    transport: {\r\n      check: \"qx.io.transport.ITransport\"\r\n    }\r\n  },\r\n\r\n  members: {\r\n    /**\r\n     * Given a transport object implementing {@link qx.io.transport.ITransport}\r\n     * select that transport; if a string URI is passed, select one that has\r\n     * been registered for that class of URIs.\r\n     * @param {qx.io.transport.ITransport|String} transportOrUri\r\n     * @throws qx.io.exception.Transport\r\n     */\r\n    selectTransport(transportOrUri) {\r\n      let transport;\r\n      let uri;\r\n      if (qx.lang.Type.isString(transportOrUri)) {\r\n        if (!this.constructor.__transports) {\r\n          throw new Error(\r\n            \"No transport has been registered. Put @use(qx.io.transport.X) in the doc block of your class, X being the transport class of your choice (such as qx.io.transport.Xhr for http transport).\"\r\n          );\r\n        }\r\n        uri = transportOrUri;\r\n        for (let registeredTransport of this.constructor.__transports.reverse()) {\r\n          if (uri.match(registeredTransport.uriRegExp)) {\r\n            // eslint-disable-next-line new-cap\r\n            transport = new registeredTransport.transport(uri);\r\n          }\r\n        }\r\n        if (!transport) {\r\n          throw new qx.io.exception.Transport(\r\n            `No matching transport for URI '${transportOrUri}'`,\r\n            qx.io.exception.Transport.INVALID_URI\r\n          );\r\n        }\r\n      } else {\r\n        if (\r\n          !(transportOrUri instanceof qx.core.Object) ||\r\n          !qx.Interface.classImplements(\r\n            transportOrUri.constructor,\r\n            qx.io.transport.ITransport\r\n          )\r\n        ) {\r\n          throw new Error(\r\n            \"Argument must be an qooxdoo object implementing qx.io.transport.ITransport\"\r\n          );\r\n        }\r\n        transport = transportOrUri;\r\n      }\r\n      this.setTransport(transport);\r\n    }\r\n  }\r\n});\r\n"
  ],
  "mappings": "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"
}