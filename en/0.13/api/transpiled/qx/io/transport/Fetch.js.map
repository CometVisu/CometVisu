{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "transport",
    "AbstractTransport",
    "implement",
    "ITransport",
    "construct",
    "url",
    "members",
    "__tranportImpl",
    "getTransportImpl",
    "_createTransportImpl",
    "send",
    "message",
    "core",
    "Assert",
    "assertString",
    "init",
    "body",
    "fetch",
    "getEndpoint",
    "response",
    "exception",
    "Transport",
    "code",
    "ok",
    "status",
    "statusText",
    "text",
    "responseData",
    "fireDataEvent",
    "headers",
    "Accept",
    "method",
    "defer",
    "graphql",
    "Client",
    "registerTransport",
    "Fetch"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/transport/Fetch.js"
  ],
  "sourcesContent": [
    "/**\n * The implementation of a HTTP Transport using the Fetch API,\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n */\nqx.Class.define(\"qx.io.transport.Fetch\", {\n  extend: qx.io.transport.AbstractTransport,\n  implement: [qx.io.transport.ITransport],\n\n  /**\n   * Constructor.\n   *\n   * @param {String} url The URL of the http endpoint\n   */\n  construct(url) {\n    super(url);\n  },\n\n  members: {\n    /**\n     * @type {Object}\n     */\n    __tranportImpl: null,\n\n    /**\n     * Returns the object which implements the transport on the\n     * underlying level, so that transport-specific configuration\n     * can be done on it. In the case of the Fetch API, the\n     * \"implementation\" is a configuration object which will be\n     * passed to the `fetch` method as second parameter.\n     *\n     * @return {Object}\n     */\n    getTransportImpl() {\n      if (!this.__tranportImpl) {\n        this.__tranportImpl = this._createTransportImpl();\n      }\n      return this.__tranportImpl;\n    },\n\n    /**\n     * Transport the given message to the endpoint\n     *\n     * @param {String} message\n     *\n     * @return {qx.Promise} Promise that resolves (with no data)\n     * when the message has been successfully sent out, and rejects\n     * when there is an error or a cancellation up to that point.\n     * @ignore(fetch)\n     */\n    async send(message) {\n      qx.core.Assert.assertString(message);\n      let init = this.getTransportImpl();\n      init.body = message;\n      let response;\n      try {\n        response = await fetch(this.getEndpoint(), init);\n      } catch (e) {\n        throw new qx.io.exception.Transport(e.message, e.code);\n      }\n      if (!response.ok) {\n        switch (response.status) {\n          case 400:\n            // \"400 Bad Request\" is a really a protocol error (syntax error)\n            break;\n          default:\n            throw new qx.io.exception.Transport(\n              response.statusText,\n              response.status\n            );\n        }\n      }\n      let responseData = await response.text();\n      // notify listeners\n      this.fireDataEvent(\"message\", responseData);\n    },\n\n    /**\n     * Factory method to create a request object. In this implementation,\n     * it returns an object that will be used as the `init` parameter of the\n     * fetch method.\n     * @return {Object}\n     */\n    _createTransportImpl() {\n      let init = {};\n      init.headers = {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      };\n\n      init.method = \"POST\";\n      return init;\n    }\n  },\n\n  defer() {\n    qx.io.graphql.Client.registerTransport(/^http/, qx.io.transport.Fetch);\n  }\n});\n"
  ],
  "mappings": ";;+CACA,oJ;;;;;;;;;;;;;;;;;;;;;;;;;;;EADAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;EAAA;AACA;AACA;AACA;EACAH,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;IACvCC,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,iBADe;IAEvCC,SAAS,EAAE,CAACV,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBG,UAAjB,CAF4B;;IAIvC;AACF;AACA;AACA;AACA;IACEC,SATuC,qBAS7BC,GAT6B,EASxB;MACb,yDAAMA,GAAN;IACD,CAXsC;IAavCC,OAAO,EAAE;MACP;AACJ;AACA;MACIC,SAAc,EAAE,IAJT;;MAMP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,gBAfO,8BAeY;QACjB,IAAI,CAAC,KAAKD,SAAV,EAA0B;UACxB,KAAKA,SAAL,GAAsB,KAAKE,oBAAL,EAAtB;QACD;;QACD,OAAO,KAAKF,SAAZ;MACD,CApBM;;MAsBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACUG,IAhCC,gBAgCIC,OAhCJ,EAgCa;QAAA;;QAAA;UAAA;UAAA;YAAA;cAAA;gBAClBnB,EAAE,CAACoB,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4BH,OAA5B;gBACII,IAFc,GAEP,KAAI,CAACP,gBAAL,EAFO;gBAGlBO,IAAI,CAACC,IAAL,GAAYL,OAAZ;gBAHkB;gBAAA;gBAAA,OAMCM,KAAK,CAAC,KAAI,CAACC,WAAL,EAAD,EAAqBH,IAArB,CANN;;cAAA;gBAMhBI,QANgB;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA,MAQV,IAAI3B,EAAE,CAACO,EAAH,CAAMqB,SAAN,CAAgBC,SAApB,CAA8B,YAAEV,OAAhC,EAAyC,YAAEW,IAA3C,CARU;;cAAA;gBAAA,IAUbH,QAAQ,CAACI,EAVI;kBAAA;kBAAA;gBAAA;;gBAAA,cAWRJ,QAAQ,CAACK,MAXD;gBAAA,gCAYT,GAZS;gBAAA;;cAAA;gBAAA;;cAAA;gBAAA,MAgBN,IAAIhC,EAAE,CAACO,EAAH,CAAMqB,SAAN,CAAgBC,SAApB,CACJF,QAAQ,CAACM,UADL,EAEJN,QAAQ,CAACK,MAFL,CAhBM;;cAAA;gBAAA;gBAAA,OAsBOL,QAAQ,CAACO,IAAT,EAtBP;;cAAA;gBAsBdC,YAtBc;;gBAuBlB;gBACA,KAAI,CAACC,aAAL,CAAmB,SAAnB,EAA8BD,YAA9B;;cAxBkB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAyBnB,CAzDM;;MA2DP;AACJ;AACA;AACA;AACA;AACA;MACIlB,oBAjEO,kCAiEgB;QACrB,IAAIM,IAAI,GAAG,EAAX;QACAA,IAAI,CAACc,OAAL,GAAe;UACb,gBAAgB,kBADH;UAEbC,MAAM,EAAE;QAFK,CAAf;QAKAf,IAAI,CAACgB,MAAL,GAAc,MAAd;QACA,OAAOhB,IAAP;MACD;IA1EM,CAb8B;IA0FvCiB,KA1FuC,mBA0F/B;MACNxC,EAAE,CAACO,EAAH,CAAMkC,OAAN,CAAcC,MAAd,CAAqBC,iBAArB,CAAuC,OAAvC,EAAgD3C,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBoC,KAAhE;IACD;EA5FsC,CAAzC;EAJA5C,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBoC,KAAhB,CAAsBzC,aAAtB,GAAsCA,aAAtC"
}