{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "transport",
    "AbstractTransport",
    "implement",
    "ITransport",
    "construct",
    "url",
    "members",
    "__tranportImpl",
    "getTransportImpl",
    "_createTransportImpl",
    "send",
    "message",
    "core",
    "Assert",
    "assertString",
    "req",
    "setRequestData",
    "sendWithPromise",
    "type",
    "BaseError",
    "getComment",
    "exception",
    "Transport",
    "toString",
    "TIMEOUT",
    "INVALID_MSG_DATA",
    "Cancel",
    "getStatus",
    "FAILED",
    "response",
    "getResponse",
    "Exception",
    "undefined",
    "error",
    "fireDataEvent",
    "dispose",
    "request",
    "Xhr",
    "getEndpoint",
    "setAccept",
    "setCache",
    "setRequestHeader",
    "setParser",
    "defer",
    "jsonrpc",
    "Client",
    "registerTransport"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/transport/Xhr.js"
  ],
  "sourcesContent": [
    "/**\n * The implementation of a HTTP Transport using the {@link qx.io.request} API,\n * so any special configuration of the HTTP request must be done on the\n * underlying implementation of {@link qx.io.request.AbstractRequest}.\n *\n * The assumption is that the payload will be JSON in both request and response.\n * If that is not what you want, override the {@link #_createTransportImpl()} method.\n *\n */\nqx.Class.define(\"qx.io.transport.Xhr\", {\n  extend: qx.io.transport.AbstractTransport,\n  implement: qx.io.transport.ITransport,\n\n  /**\n   * Constructor.\n   *\n   * @param {String} url The URL of the http endpoint\n   */\n  construct(url) {\n    super(url);\n  },\n\n  members: {\n    /**\n     * Internal implementation of the transport\n     * @var {qx.io.request.Xhr}\n     */\n    __tranportImpl: null,\n\n    /**\n     * Returns the object which implements the transport on the\n     * underlying level, so that transport-specific configuration\n     * can be done on it. Note that since in the HTTP transport,\n     * this object cannot be reused, it will return a new object\n     * each time which will be used in the immediately next request.\n     *\n     * @return {qx.io.request.Xhr}\n     */\n    getTransportImpl() {\n      this.__tranportImpl = this._createTransportImpl();\n      return this.__tranportImpl;\n    },\n\n    /**\n     * Transport the given message to the endpoint\n     *\n     * @param {String} message\n     *\n     * @return {qx.Promise} Promise that resolves (with no data)\n     * when the message has been successfully sent out, and rejects\n     * when there is an error or a cancellation up to that point.\n     */\n    async send(message) {\n      qx.core.Assert.assertString(message);\n      const req = this.__tranportImpl || this.getTransportImpl();\n      req.setRequestData(message);\n      this.__tranportImpl = null; // free the internal reference for the next request\n      try {\n        await req.sendWithPromise();\n      } catch (e) {\n        if (e instanceof qx.type.BaseError) {\n          switch (e.getComment()) {\n            case \"timeout\":\n              throw new qx.io.exception.Transport(\n                e.toString(),\n                qx.io.exception.Transport.TIMEOUT,\n                { message }\n              );\n\n            case \"parseError\":\n              throw new qx.io.exception.Transport(\n                e.toString(),\n                qx.io.exception.Transport.INVALID_MSG_DATA,\n                { message }\n              );\n\n            case \"abort\":\n              throw new qx.io.exception.Cancel(e.toString(), { message });\n\n            case \"statusError\":\n              if (req.getStatus() === 400) {\n                // \"400 Bad Request\" is a really a protocol error (syntax error)\n                break;\n              }\n            // fallthrough\n            case \"error\":\n              throw new qx.io.exception.Transport(\n                e.toString(),\n                qx.io.exception.Transport.FAILED,\n                {\n                  message,\n                  response: req.getResponse()\n                }\n              );\n\n            default:\n              // unknown error\n              throw new qx.io.exception.Exception(e.toString(), undefined, {\n                message,\n                error: e\n              });\n          }\n        }\n      }\n      // notify listeners\n      this.fireDataEvent(\"message\", req.getResponse());\n      // discard old object\n      req.dispose();\n    },\n\n    /**\n     * Factory method to create a request object. By default, a POST\n     * request will be made, and the expected response type will be\n     * \"application/json\", but differently to the standard behavior,\n     * the response will not be parsed into a javascript object.\n     *\n     * Classes extending this one may override this method to obtain\n     * a Request object with different parameters and/or different\n     * authentication settings. The object must be a subclass of {@link\n     * qx.io.request.AbstractRequest} or implement its public API.\n     *\n     * @return {qx.io.request.Xhr}\n     */\n    _createTransportImpl() {\n      const req = new qx.io.request.Xhr(this.getEndpoint(), \"POST\");\n      req.setAccept(\"application/json\");\n      req.setCache(false);\n      req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n      // disable parsing, we are going to parse the JSON ourselves\n      req.setParser(response => response);\n      return req;\n    }\n  },\n\n  defer() {\n    qx.io.jsonrpc.Client.registerTransport(/^http/, qx.io.transport.Xhr);\n  }\n});\n"
  ],
  "mappings": "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"
}