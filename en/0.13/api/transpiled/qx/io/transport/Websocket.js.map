{
  "version": 3,
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "transport",
    "AbstractTransport",
    "implement",
    "ITransport",
    "construct",
    "url",
    "members",
    "__tranportImpl",
    "getTransportImpl",
    "_createTransportImpl",
    "send",
    "message",
    "core",
    "Assert",
    "assertString",
    "ws",
    "readyState",
    "WebSocket",
    "OPEN",
    "Promise",
    "resolve",
    "addEventListener",
    "getEndpoint",
    "msgevt",
    "fireDataEvent",
    "data",
    "event",
    "error_message",
    "error_code",
    "code",
    "exception",
    "Transport",
    "FAILED",
    "destruct",
    "close",
    "defer",
    "graphql",
    "Client",
    "registerTransport",
    "Websocket"
  ],
  "sources": [
    "/home/runner/work/CometVisu/CometVisu/node_modules/@qooxdoo/framework/source/class/qx/io/transport/Websocket.js"
  ],
  "sourcesContent": [
    "/**\n * An implementation of a WebSocket transport\n * @see https://developer.mozilla.org/de/docs/Web/API/WebSocket\n * @ignore(WebSocket)\n */\nqx.Class.define(\"qx.io.transport.Websocket\", {\n  extend: qx.io.transport.AbstractTransport,\n  implement: [qx.io.transport.ITransport],\n\n  /**\n   * Constructor.\n   *\n   * @param {String} url The URL of the http endpoint\n   */\n  construct(url) {\n    super(url);\n  },\n\n  members: {\n    /**\n     * @type {WebSocket}\n     */\n    __tranportImpl: null,\n\n    /**\n     * Returns the object which implements the transport on the\n     * underlying level, so that transport-specific configuration\n     * can be done on it.\n     *\n     * @return {WebSocket}\n     */\n    getTransportImpl() {\n      if (!this.__tranportImpl) {\n        this.__tranportImpl = this._createTransportImpl();\n      }\n      return this.__tranportImpl;\n    },\n\n    /**\n     * Transport the given message to the endpoint\n     *\n     * @param {String} message\n     *\n     * @return {qx.Promise} Promise that resolves (with no data)\n     * when the message has been successfully sent out, and rejects\n     * when there is an error or a cancellation up to that point.\n     * @ignore(fetch)\n     */\n    async send(message) {\n      qx.core.Assert.assertString(message);\n      let ws = this.getTransportImpl();\n      if (!ws.readyState !== WebSocket.OPEN) {\n        await new Promise(resolve => ws.addEventListener(\"open\", resolve));\n      }\n      ws.send(message);\n    },\n\n    /**\n     * Factory method to create a websocket object.\n     * @return {WebSocket}\n     */\n    _createTransportImpl() {\n      let ws = new WebSocket(this.getEndpoint());\n      ws.addEventListener(\"message\", msgevt => {\n        this.fireDataEvent(\"message\", msgevt.data);\n      });\n      ws.addEventListener(\"close\", event => {\n        let error_message;\n        let error_code;\n        switch (event.code) {\n          case 1000:\n            // everything ok\n            break;\n          default:\n            // todo translate websocket error codes into qx.io.exception.Transport error codes\n            // see https://github.com/Luka967/websocket-close-codes\n            error_message = \"Error \" + event.code;\n            error_code = qx.io.exception.Transport.FAILED;\n        }\n\n        if (error_message) {\n          throw new qx.io.exception.Transport(error_message, error_code, event);\n        }\n      });\n      return ws;\n    }\n  },\n\n  destruct() {\n    this.__tranportImpl.close();\n    this.__tranportImpl = null;\n  },\n\n  defer() {\n    qx.io.graphql.Client.registerTransport(/^ws/, qx.io.transport.Websocket);\n  }\n});\n"
  ],
  "mappings": "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"
}